<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>I did Frontend Mentor challenges for three weeks, here's what I learned</title>
      <author>Riri</author>
      <pubDate>Sun, 04 Jul 2021 02:43:23 +0000</pubDate>
      <link>https://dev.to/riyanagueco/i-did-frontend-mentor-challenges-for-three-weeks-here-s-what-i-learned-3j01</link>
      <guid>https://dev.to/riyanagueco/i-did-frontend-mentor-challenges-for-three-weeks-here-s-what-i-learned-3j01</guid>
      <description>&lt;p&gt;Hello! It's been a while since &lt;a href="https://dev.to/riyanagueco/creating-a-custom-error-page-on-django-3nnd"&gt;my last post&lt;/a&gt;. I've been busy doing &lt;a href="https://www.frontendmentor.io"&gt;Frontend Mentor&lt;/a&gt; challenges for the past three weeks in the hopes of improving my frontend developing skills. &lt;/p&gt;

&lt;p&gt;If this is your first time hearing about Frontend Mentor, then let me introduce you. Frontend Mentor is a platform where developers can learn and improve their frontend developing skills alongside other developers by implementing solutions to challenges. Anybody can be a mentor, a student, or both. There are five difficulty levels to the challenges that they offer:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Newbie&lt;/li&gt;
&lt;li&gt;Junior&lt;/li&gt;
&lt;li&gt;Intermediate&lt;/li&gt;
&lt;li&gt;Advanced&lt;/li&gt;
&lt;li&gt;Guru&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A lot of these challenges are free, but there are premium challenges you can access if you pay a monthly or yearly fee. I did not avail the PRO membership (yet ðŸ‘€), so everything I've done up to this point are all free challenges.&lt;/p&gt;

&lt;p&gt;Now, I've worked as a web developer in the past (only a year and a half, I'm nowhere near senior-level or even mid), and if I weren't querying and retrieving data I was constantly fixing and tweaking the frontend, so I have to say I'm not completely new to this. Despite that, I still did start from the very beginning: the newbie challenges. Here's what I learned:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-layout"&gt;
  &lt;/a&gt;
  1. Layout
&lt;/h2&gt;

&lt;p&gt;The newbie challenges composed mostly of HTML and CSS challenges that will test your layout skills. These are fairly small projects, a few card components containing a couple sections or so. It may sound pretty easy, but the first couple challenges that I solved really tested my layout skills with Flexbox and Grid, especially when taking into account the responsive layout.&lt;/p&gt;

&lt;p&gt;There was one in particular that really stumped me until I asked for help from the community. The &lt;a href="https://www.frontendmentor.io/solutions/faq-accordion-challenge-using-only-html-and-css-sHWBDMDJ6"&gt;FAQ accordion challenge&lt;/a&gt; consisted of stacking three different images one over each other, and they all have to somehow "stick" together or be linked together (i.e. when one moves, all others move alongside it). This was a &lt;em&gt;really&lt;/em&gt; interesting challenge, and I'm glad I did it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-mobilefirst-approach"&gt;
  &lt;/a&gt;
  2. Mobile-first approach
&lt;/h2&gt;

&lt;p&gt;Yes, that's right. Before I started doing Frontend Mentor challenges, I hadn't really cared about designing for mobile (I know, I should be ashamed) mainly because in my previous job we didn't really have a designer, we just kind of winged it, and the problem with that approach is that winging it just really doesn't work.&lt;/p&gt;

&lt;p&gt;So when I was presented with my first Frontend Mentor challenge and I saw the desktop design and the mobile design I thought "Wow, neat. I don't have to think about what it's gonna look like for mobile." Immediately after that I thought, "Wait, I can finally do mobile-first now." So that's what I did.&lt;/p&gt;

&lt;p&gt;I have to admit, at first I thought there was some special magic way to the mobile-first approach but it's really just designing for a smaller screen first before moving on to a bigger screen. Still pretty neat though.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-sass"&gt;
  &lt;/a&gt;
  3. Sass
&lt;/h2&gt;

&lt;p&gt;Ah, yes. The famous CSS pre-processor Sass. I was planning to learn this even before I decided to join Frontend Mentor, but I wanted to clean up my CSS first because even though I think I'm doing okay with CSS I still didn't feel confident enough with it to say I'm ready to move on. So after completing 4 newbie challenges and helping other developers with their challenges, I thought maybe I'm ready to learn Sass.&lt;/p&gt;

&lt;p&gt;And boy am I glad I decided to learn Sass. Everything is much easier. I've got to say though, I don't think I would like Sass as much as I like it right now if I hadn't &lt;em&gt;tried&lt;/em&gt; to master or at least be good at CSS first.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-accessibility"&gt;
  &lt;/a&gt;
  4. Accessibility
&lt;/h2&gt;

&lt;p&gt;Unlike the mobile-first approach, accessibility actually was one of the things I had cared a lot about while I was developing for my previous job. But, admittedly, accessibility is one of those things that I can never get right the first or second or third time. It's also quite hard to look for a one true solution to some accessibility problems, sometimes you've got to test it out on your own with various screen reader and browser pairs.&lt;/p&gt;

&lt;p&gt;Luckily, there are other like-minded developers in Frontend Mentor that cares about accessibility as much as I do. Actually, if you look through &lt;a href="https://www.frontendmentor.io/profile/rngueco/solutions"&gt;my profile&lt;/a&gt; you'll see that a lot of the feedback on my solutions has to do with accessibility, and I'm glad for it. It's nice that I get to learn all these things about accessibility that I otherwise would probably never learn about.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Overall, I think I'd say I'm a better developer now than I was three weeks ago. There's definitely at least a couple things that changed (for the better) with how I approach or implement frontend. I got to polish some of my JavaScript skills too with client-side form validation on the more recent challenges that I solved.&lt;/p&gt;

&lt;p&gt;There were other things I learned as well, such as how to give useful feedback to other developers, how to help other developers solve problems that they encounter, and also &lt;a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules"&gt;git submodules&lt;/a&gt; which is a pretty neat thing I used to group my Frontend Mentor-related repositories on GitHub. Speaking of which, you can find &lt;a href="https://rngueco.github.io/frontend-mentor-projects/"&gt;all my live site solutions so far here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#moving-forward"&gt;
  &lt;/a&gt;
  Moving forward
&lt;/h2&gt;

&lt;p&gt;I plan to continue solving Frontend Mentor challenges, and this time I will be using them to learn one or two JavaScript UI libraries or frameworks (Angular? React? Vue? ðŸ¤”). I'm still deciding which framework or library to start with, so if you have any suggestions please comment them down below and convince me why I should learn this framework among other frameworks!&lt;/p&gt;




&lt;p&gt;If you liked this post, consider &lt;a href="https://ko-fi.com/yanski_"&gt;buying me a coffee&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>sass</category>
    </item>
    <item>
      <title>The frontend Hitchhiker's Guide: JavaScript Frameworks</title>
      <author>Nicholas Mendez</author>
      <pubDate>Sun, 04 Jul 2021 00:58:44 +0000</pubDate>
      <link>https://dev.to/snickdx/the-frontend-hitchhiker-s-guide-javascript-frameworks-2c45</link>
      <guid>https://dev.to/snickdx/the-frontend-hitchhiker-s-guide-javascript-frameworks-2c45</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Every now an then a developer has an idea to simplify building web apps and hence another framework is born. JS Frameworks bridge the gap between what standard JS provides and modern web app concerns.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eIXiRbgK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wn7ksbek22ytn9xd2pfb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eIXiRbgK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wn7ksbek22ytn9xd2pfb.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://community.devexpress.com/blogs/wpf/archive/2014/04/23/devexpress-mvvm-framework-coming-soon-in-v14-1.aspx"&gt;Image Credit&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Frameworks often provides features such as:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Composable UI&lt;/td&gt;
&lt;td&gt;Syntax for defining custom components with encapsulated styling and functionality&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Routing&lt;/td&gt;
&lt;td&gt;Lets you defines different parts of the app for the user to navigate without page loads.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;State Management&lt;/td&gt;
&lt;td&gt;Syntax for allowing data sharing, syncing between components.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Databinding&lt;/td&gt;
&lt;td&gt;Binding form controls to the state of the app.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Templating&lt;/td&gt;
&lt;td&gt;Syntax for mixing templates and data to render dynamic content eg scrollable list of UI components.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Testing&lt;/td&gt;
&lt;td&gt;Tooling for performing unit and integration testing.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Note that many of these features have dedicated libraries which were covered at previous stops in the series. Frameworks tend include these libraries or provide their own implementation.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#javascript-frameworks"&gt;
  &lt;/a&gt;
  JavaScript Frameworks
&lt;/h1&gt;

&lt;p&gt;The following are some popular and not so popular JavaScript Frameworks.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Frontend Frameworks

&lt;ul&gt;
&lt;li&gt;&lt;a href="#svelte"&gt;Svelte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#stencil"&gt;Stencil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#apline-js"&gt;Alpine JS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ember-js"&gt;Ember JS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Isomorphic Frameworks

&lt;ul&gt;
&lt;li&gt;&lt;a href="#aurelia"&gt;Aurelia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#next-js"&gt;Next JS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nuxt-js"&gt;Nuxt JS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#svelte"&gt;
  &lt;/a&gt;
  &lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UtkyHIt2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ik8bt0wnwewv2qyertx2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UtkyHIt2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ik8bt0wnwewv2qyertx2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Svelte describes itself as 'a radical new approach to building user interfaces'. It favours doing its heavy lifting in a compilation step as opposed to in the browser at runtime. It is steadily growing in usage and popularity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stencil"&gt;
  &lt;/a&gt;
  &lt;a href="https://stenciljs.com/docs/introduction"&gt;Stencil&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y2CQaIKB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwa24x547mo2ajrxzaqj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y2CQaIKB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwa24x547mo2ajrxzaqj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Stencil was created by the Ionic team, they describe it as a compiler for generating web components. Stencil was designed to for high performance and building on top of Web Standards. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alpine-js"&gt;
  &lt;/a&gt;
  &lt;a href="https://alpinejs.dev/"&gt;Alpine JS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PvKtI5cc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ygx2y0yc1686nqpz9c9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PvKtI5cc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ygx2y0yc1686nqpz9c9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alpine JS seems to be another sleeper hit ranking 4th in the &lt;a href="https://2020.stateofjs.com/en-US/technologies/front-end-frameworks/"&gt;State of JS 2020 Front-end Frameworks&lt;/a&gt;. Alpine is another lightweight framework with a very appealing minimal syntax. All you need to know are 14 attributes, 6 properties and 2 methods!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ember-js"&gt;
  &lt;/a&gt;
  &lt;a href="https://emberjs.com/"&gt;Ember JS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WLSTgXFC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t660l8qnf2il0el2v391.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WLSTgXFC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t660l8qnf2il0el2v391.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ember JS was created in 2011 and hence is (probably) the oldest on this list. The fact that it is still relevant (&lt;a href="https://2020.stateofjs.com/en-US/technologies/front-end-frameworks/"&gt;ranked 9th State of JS 2020&lt;/a&gt;) is an accomplishment in itself. Ember is an all in one framework providing all the features mentioned in the intro as well as an entire &lt;a href="https://www.emberobserver.com/lists/top-addons"&gt;marketplace of community addons&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#isomorphic-frameworks"&gt;
  &lt;/a&gt;
  Isomorphic Frameworks
&lt;/h2&gt;

&lt;p&gt;The remaining frameworks are categorized as &lt;a href="https://en.wikipedia.org/wiki/Isomorphic_JavaScript"&gt;Isomorphic&lt;/a&gt; because they support a feature called &lt;a href="https://www.smashingmagazine.com/2020/07/differences-static-generated-sites-server-side-rendered-apps/#:~:text=Server%2Dside%20rendering%20(SSR)%20is%20the%20process%20of%20rendering,the%20SPA%20framework%20to%20operate."&gt;Server Side Rendering&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
  SSR Explainer
  &lt;p&gt;The web apps built with the previously mentioned frameworks are said to be &lt;strong&gt;Client Side Rendered&lt;/strong&gt;. This means they are deployed as static HTML/JS/CSS files and the dynamic content of the page (eg table, timeline, gallery) are rendered entirely by JavaScript running in the browser without any server side code. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Server Side Rendered&lt;/strong&gt; web applications does most, if not all of its rendering on the server instead. This feature is supported by the remaining frameworks in this list. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nx4OP3jz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pa1qe3axvjv3nujbtbiw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nx4OP3jz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pa1qe3axvjv3nujbtbiw.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://itclub.com.au/next-js-framework"&gt;Image Credit&lt;/a&gt;&lt;/p&gt;



&lt;/p&gt;

&lt;p&gt;Because SSR requires server side code, the following frameworks can be seen as both frontend and backend (hence the term isomorphic). I have a more in depth look of CSR vs SSR in another post series: &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/snickdx" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--54mJK8k---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Tj-OguEM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/304653/d0e52f0e-c7ea-4cfe-ac87-d6755560c44b.jpg" alt="snickdx"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/snickdx/understanding-rendering-in-web-apps-ssr-1h83" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Understanding Rendering in Web Apps: SSR&lt;/h2&gt;
      &lt;h3&gt;Nicholas Mendez ãƒ» Jan 14 ãƒ» 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#ssr&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#aurelia"&gt;
  &lt;/a&gt;
  &lt;a href="https://aurelia.io/home"&gt;Aurelia&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1cXb6OG0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cpcxby78c3e1g5pb9zj3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1cXb6OG0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cpcxby78c3e1g5pb9zj3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aurelia is another lesser known framework that appears to be gaining some traction and describes itself as simple, powerful and unobtrusive. Aurelia boasts unmatched extensibility in terms of creating and customizing elements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-js"&gt;
  &lt;/a&gt;
  &lt;a href="https://nextjs.org/"&gt;Next JS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kW1Fak4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0x5ns7gxncuns78sv8e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kW1Fak4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0x5ns7gxncuns78sv8e.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next is often called a meta-framework as it is built on top of another 'framework' such as react. In addition to Server Side Rendering, next boasts features such build tooling, internationalization, and image optimization. Next is a hugely popular framework that is making waves in the space. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nuxt-js"&gt;
  &lt;/a&gt;
  &lt;a href="https://nuxtjs.org/"&gt;Nuxt JS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZB3oIUpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l7ba4u2bth5srfh77hau.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZB3oIUpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l7ba4u2bth5srfh77hau.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Whenever there is something for react you can almost bet there is an equivalent for Vue. Like Next, Nuxt supports Server Side Rendering, data fetching and configuration for Search Engine Optimization. Nuxt also has options for transitioning and showing progress bars between page navigations.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;At this point you may be wondering why a specific framework was not mentioned. This is because it actually resides at the next stop on this series. Stay tuned next week for stop #7.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://2020.stateofjs.com/en-US/technologies/front-end-frameworks/"&gt;The State of JS Survey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Amazon EKS Security Assessment - Kube Bench</title>
      <author>Sivamuthu Kumar</author>
      <pubDate>Sun, 04 Jul 2021 00:45:19 +0000</pubDate>
      <link>https://dev.to/aws-builders/amazon-eks-security-assessment-kube-bench-203</link>
      <guid>https://dev.to/aws-builders/amazon-eks-security-assessment-kube-bench-203</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;The Center for Internet Security provides many guidelines and benchmark tests for best practices in securing your code. The CIS has published a &lt;a href="https://www.cisecurity.org/benchmark/kubernetes/"&gt;benchmark for Kubernetes&lt;/a&gt;. The &lt;a href="https://github.com/aquasecurity/kube-bench"&gt;kube-bench&lt;/a&gt; is an open-source tool that checks whether Kubernetes is deployed securely by running the &lt;a href="https://www.cisecurity.org/benchmark/kubernetes/"&gt;CIS benchmark for Kubernetes&lt;/a&gt; checks. It's written as a Go application and also distributed as a container. Each test is defined in the YAML and also supports JSON-format output that can be used to evolve along wiht Kubernetes and to integrate with automaton tools.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#managed-kubernetes-amp-cis-amazon-eks-benchmark"&gt;
  &lt;/a&gt;
  Managed Kubernetes &amp;amp; CIS Amazon EKS Benchmark
&lt;/h2&gt;

&lt;p&gt;The CIS Kubernetes Benchmark is scoped for implementations managing both the control plane, which includes etcd, API server, controller, scheduler, and the data plane, which is made up of one or more nodes or EC2 instances.&lt;/p&gt;

&lt;p&gt;The managed Kubernetes clusters provide a level of CIS hardening already in place, and it delegates some settings to the user. It works best when you want to understand whether your workloads and the worker nodes are appropriately set up to implement these guidelines. &lt;a href="https://aws.amazon.com/blogs/containers/introducing-cis-amazon-eks-benchmark/"&gt;CIS Amazon EKS Benchmark v1.0.0&lt;/a&gt; provides guidance for node security configurations for Kubernetes and aligns with CIS Kubernetes Benchmark.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#running-kubebench"&gt;
  &lt;/a&gt;
  Running kube-bench
&lt;/h2&gt;

&lt;p&gt;We will deploy the Kubernetes Job using the below YAML file. We can install the kube-bench directly in the nodes as well. In this blog, we are going to run the kube-bench as a kubernetes job.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# eks-kube-bench-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kube-bench
spec:
  template:
    spec:
      hostPID: true
      containers:
        - name: kube-bench
          image: aquasec/kube-bench:latest
          command: ["kube-bench", "--benchmark", "eks-1.0"]
          volumeMounts:
            - name: var-lib-kubelet
              mountPath: /var/lib/kubelet
              readOnly: true
            - name: etc-systemd
              mountPath: /etc/systemd
              readOnly: true
            - name: etc-kubernetes
              mountPath: /etc/kubernetes
              readOnly: true
      restartPolicy: Never
      volumes:
        - name: var-lib-kubelet
          hostPath:
            path: "/var/lib/kubelet"
        - name: etc-systemd
          hostPath:
            path: "/etc/systemd"
        - name: etc-kubernetes
          hostPath:
            path: "/etc/kubernetes"

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Run the job in your EKS cluster&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl apply -f eks-kube-bench-job.yaml

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the kube-bench job is completed, you can view the pod's logs to see the results of the kube-bench.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[INFO] 3 Worker Node Security Configuration
[INFO] 3.1 Worker Node Configuration Files
[PASS] 3.1.1 Ensure that the proxy kubeconfig file permissions are set to 644 or more restrictive (Scored)
[PASS] 3.1.2 Ensure that the proxy kubeconfig file ownership is set to root:root (Scored)
[PASS] 3.1.3 Ensure that the kubelet configuration file has permissions set to 644 or more restrictive (Scored)
[PASS] 3.1.4 Ensure that the kubelet configuration file ownership is set to root:root (Scored)
[INFO] 3.2 Kubelet
[PASS] 3.2.1 Ensure that the --anonymous-auth argument is set to false (Scored)
[PASS] 3.2.2 Ensure that the --authorization-mode argument is not set to AlwaysAllow (Scored)
[PASS] 3.2.3 Ensure that the --client-ca-file argument is set as appropriate (Scored)
[PASS] 3.2.4 Ensure that the --read-only-port argument is set to 0 (Scored)
[PASS] 3.2.5 Ensure that the --streaming-connection-idle-timeout argument is not set to 0 (Scored)
[PASS] 3.2.6 Ensure that the --protect-kernel-defaults argument is set to true (Scored)
[PASS] 3.2.7 Ensure that the --make-iptables-util-chains argument is set to true (Scored) 
[PASS] 3.2.8 Ensure that the --hostname-override argument is not set (Scored)
[WARN] 3.2.9 Ensure that the --event-qps argument is set to 0 or a level which ensures appropriate event capture (Scored)
[PASS] 3.2.10 Ensure that the --rotate-certificates argument is not set to false (Scored)
[PASS] 3.2.11 Ensure that the RotateKubeletServerCertificate argument is set to true (Scored)

== Remediations ==
3.2.9 If using a Kubelet config file, edit the file to set eventRecordQPS: to an appropriate level.
If using command line arguments, edit the kubelet service file
/etc/systemd/system/kubelet.service on each worker node and
set the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.
Based on your system, restart the kubelet service. For example:
systemctl daemon-reload
systemctl restart kubelet.service

== Summary ==
14 checks PASS
0 checks FAIL
1 checks WARN
0 checks INFO

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Delete the job&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Run the below commands to delete the kube-bench job.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl delete -f job-eks.yaml

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#integrating-kubebench-with-aws-security-hub"&gt;
  &lt;/a&gt;
  Integrating kube-bench with AWS Security Hub
&lt;/h2&gt;

&lt;p&gt;You can configure kube-bench with the &lt;em&gt;--asff&lt;/em&gt; to send findings to AWS Security Hub. Before, that, we've to enable the AWS Security Hub integration and set the required IAM role and policies to forward the findings to the AWS Security Hub.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#enable-the-aws-security-hub-integration"&gt;
  &lt;/a&gt;
  Enable the AWS Security Hub integration
&lt;/h3&gt;

&lt;p&gt;You will need AWS Security Hub to be enabled in your account. In the Security Hub console, under Integrations, search for kube-bench. Click on Accept findings to enable the "Aqua Security kube bench" to integrate with AWS Security Hub.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pS3GRT5J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1615888910692/u8CvF2DyZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pS3GRT5J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1615888910692/u8CvF2DyZ.png" alt="kube-bench-security-hub.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's configure the kube-bench job to send the report to AWS Security Hub.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iam-policy-to-send-to-aws-security-hub"&gt;
  &lt;/a&gt;
  IAM Policy to send to AWS Security Hub
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": "securityhub:BatchImportFindings",
            "Resource": [
                "arn:aws:securityhub:us-east-1::product/aqua-security/kube-bench"
            ]
        }
    ]
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-service-account-iam-role-and-policy"&gt;
  &lt;/a&gt;
  Create Service Account IAM Role and Policy
&lt;/h3&gt;

&lt;p&gt;Please use &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html"&gt;this guide&lt;/a&gt; creating the IAM role and policy to attach to the service account for the pod running the kube-bench job.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubebench-with-asff"&gt;
  &lt;/a&gt;
  kube-bench with asff
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;--------
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-bench
  # If using a dedicated IAM role for kube-bench, uncomment the annotations
  # block below and replace the ROLE_ARN
  # annotations:
  # eks.amazonaws.com/role-arn: "&amp;lt;ROLE_ARN&amp;gt;"

--------
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-bench-eks-config
data:
  config.yaml: |
    AWS_ACCOUNT: "&amp;lt;AWS_ACCT_NUMBER&amp;gt;"
    AWS_REGION: "&amp;lt;AWS_REGION&amp;gt;"
    CLUSTER_ARN: "&amp;lt;AWS_CLUSTER_ARN&amp;gt;"

--------
apiVersion: batch/v1
kind: Job
metadata:
  name: kube-bench
spec:
  template:
    spec:
      hostPID: true
      containers:
        - name: kube-bench
          image: aquasec/kube-bench:latest
          command: ["kube-bench", "node", "--benchmark", "eks-1.0", "--asff"]
          volumeMounts:
            - name: var-lib-kubelet
              mountPath: /var/lib/kubelet
              readOnly: true
            - name: etc-systemd
              mountPath: /etc/systemd
              readOnly: true
            - name: etc-kubernetes
              mountPath: /etc/kubernetes
              readOnly: true
            - name: kube-bench-eks-config
              mountPath: "/opt/kube-bench/cfg/eks-1.0/config.yaml"
              subPath: config.yaml
              readOnly: true
      restartPolicy: Never
      serviceAccountName: kube-bench
      volumes:
        - name: var-lib-kubelet
          hostPath:
            path: "/var/lib/kubelet"
        - name: etc-systemd
          hostPath:
            path: "/etc/systemd"
        - name: etc-kubernetes
          hostPath:
            path: "/etc/kubernetes"
        - name: kube-bench-eks-config
          configMap:
            name: kube-bench-eks-config
            items:
              - key: config.yaml
                path: config.yaml

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the job using the above yaml to send the findings to AWS Security Hub.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security-hub-findings"&gt;
  &lt;/a&gt;
  Security Hub Findings
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G4VCL-ZW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1615889119501/PHxDWx38m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G4VCL-ZW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1615889119501/PHxDWx38m.png" alt="asff-example-finding.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h2&gt;

&lt;p&gt;In this blog post, we had a walkthrough on running kube-bench tests against EKS worker nodes and forwarding the kube-bench summary to AWS Security Hub. You can use the CIS Amazon EKS Benchmark to assess Amazon EKS cluster nodes' security configuration accurately.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>security</category>
      <category>kubernetes</category>
      <category>containers</category>
    </item>
    <item>
      <title>React page routes made easy!!</title>
      <author>hillary</author>
      <pubDate>Sat, 03 Jul 2021 22:42:16 +0000</pubDate>
      <link>https://dev.to/hills2003/react-page-routes-made-easy-3nc6</link>
      <guid>https://dev.to/hills2003/react-page-routes-made-easy-3nc6</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Ever wondered how to implement page routes in a complex react application?
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;worry not cuz i ve'gat a solution for y'all&lt;/p&gt;

&lt;p&gt;an npm package @dev_hills/easyroutes ,it makes routing between pages as easy as easy!!&lt;/p&gt;

&lt;p&gt;npm i @dev_hills/easyroute and you are all set-up, it accepts a single prop which is basically an array of objects.&lt;/p&gt;

&lt;p&gt;//[{path:"/about",component:"About"}]&lt;/p&gt;

&lt;p&gt;you can as well pass in any number of objects to the array , thats all you need as property to get up and running with this cool package ..&lt;/p&gt;

&lt;p&gt;check it out guys&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>gatsby</category>
      <category>html</category>
    </item>
    <item>
      <title>Bogo sort algorithm</title>
      <author>Aya Bouchiha</author>
      <pubDate>Sat, 03 Jul 2021 22:31:26 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/bogo-sort-algorithm-4l0m</link>
      <guid>https://dev.to/ayabouchiha/bogo-sort-algorithm-4l0m</guid>
      <description>&lt;p&gt;Hi, today, I'm going to talk about ridiculous sorting algorithms which are called &lt;em&gt;Bogo sort&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#definition-of-bogo-sort"&gt;
  &lt;/a&gt;
  Definition of Bogo sort
&lt;/h2&gt;

&lt;p&gt;Bogo sort: called also &lt;em&gt;stupid sort&lt;/em&gt;, &lt;em&gt;slow sort&lt;/em&gt;, &lt;em&gt;monkey sort&lt;/em&gt; is a type of sorting algorithms, it works by shuffling randomly array elements until the array is sorted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#time-amp-space-complexity"&gt;
  &lt;/a&gt;
  Time &amp;amp; Space complexity
&lt;/h2&gt;

&lt;p&gt;Time complexity: &lt;br&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Best case: O(n)&lt;/li&gt;
&lt;li&gt; Average case: O(n!) &lt;/li&gt;
&lt;li&gt; Worst case: infinte ( &lt;em&gt;because there is no guarantee that a randome suffling will ever produce a sorted array&lt;/em&gt; )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The space complexity of &lt;em&gt;Bogo sort&lt;/em&gt; is O(1)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementation-of-bogo-sort-using-python"&gt;
  &lt;/a&gt;
  Implementation of Bogo sort using Python
&lt;/h2&gt;

&lt;p&gt;for getting a random integer to shuffle the array we need to import &lt;strong&gt;randint&lt;/strong&gt; from the random module&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#shuffle-function"&gt;
  &lt;/a&gt;
  Shuffle function
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="n"&gt;randomInt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;randomInt&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;randomInt&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#issorted-function"&gt;
  &lt;/a&gt;
  isSorted function
&lt;/h3&gt;

&lt;p&gt;we should implement a function that checks if the array is sorted, if the function returned True, It means the array is sorted and we need to break the loop, else (&lt;em&gt;returned False&lt;/em&gt;) we'll shuffle it again until the array will be sorted.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;isSorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#bogo-sort"&gt;
  &lt;/a&gt;
  Bogo sort
&lt;/h3&gt;

&lt;p&gt;this function shuffles the array randomly until it is sorted.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;BogoSort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# while the array is not sorted
&lt;/span&gt;    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;isSorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# if the array is sorted
&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#final-code"&gt;
  &lt;/a&gt;
  Final Code
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;isSorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="n"&gt;randomInt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;randomInt&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;randomInt&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;BogoSort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;isSorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Have an amazing day!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references-and-useful-resources"&gt;
  &lt;/a&gt;
  References and useful resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/bogosort-permutation-sort/"&gt;https://www.geeksforgeeks.org/bogosort-permutation-sort/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://rosettacode.org/wiki/Sorting_algorithms/Bogosort"&gt;https://rosettacode.org/wiki/Sorting_algorithms/Bogosort&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=DaPJkYo2quc"&gt;https://www.youtube.com/watch?v=DaPJkYo2quc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;#day_21&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>computerscience</category>
      <category>codenewbie</category>
      <category>python</category>
    </item>
    <item>
      <title>Localstack with Terraform and Docker for running AWS locally</title>
      <author>Talha AltÄ±nel</author>
      <pubDate>Sat, 03 Jul 2021 22:00:01 +0000</pubDate>
      <link>https://dev.to/mrwormhole/localstack-with-terraform-and-docker-for-running-aws-locally-3a6d</link>
      <guid>https://dev.to/mrwormhole/localstack-with-terraform-and-docker-for-running-aws-locally-3a6d</guid>
      <description>&lt;p&gt;Â Â Â Â Hello everyone, in this post I will be demonstrating how you can run localstack with Terraform and Docker and give you a proof of concept go application so you can tweak it according to your logic and follow anything you want to do such as integration/system tests for AWS services in your own CI/CD or localhost.&lt;/p&gt;

&lt;p&gt;Github Repository for PoC(proof of concept):&lt;br&gt;
&lt;a href="https://github.com/MrWormHole/hotdog-localstack-PoC"&gt;hotdog-PoC-repository&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Requirements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;li&gt;docker-compose&lt;/li&gt;
&lt;li&gt;Terraform&lt;/li&gt;
&lt;li&gt;Go&lt;/li&gt;
&lt;li&gt;aws CLI&lt;/li&gt;
&lt;li&gt;A bit of lambda, dynamodb and kinesis knowledge&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h3&gt;

&lt;p&gt;Localstack is a testing/mocking framework for developing Cloud applications locally. Where in theory, you can stick any AWS service and emulate them in localhost without ever needing the real AWS account. &lt;br&gt;
Localstackâ€™s primary goal to make integration/system testing less painful for developers.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-was-built"&gt;
  &lt;/a&gt;
  What was built?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e0pAwoYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/omwafkqkirsigsvqjxts.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e0pAwoYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/omwafkqkirsigsvqjxts.png" alt="flow-diagram"&gt;&lt;/a&gt;&lt;br&gt;
Â Â Â Â I built an imaginary hotdog food chain! (Note: No dogs were harmed in this process). Essentially PoC logic was I had 1 dogs dynamodb table which consist a dog model with 3 attributes ID, name, isAlive and isEaten. Then I had 3 lambdas dogCatcher, dogProcessor and hotDogDespatcher. dog catcher's responsibility is to get alive dogs via external API requests(I generated data for simplicity) with unique IDs and different names. Dog processor's responsibility is to kill the dogs and persist the data that was sent from dog catcher. Hot dog despatcher's responsibility is to give processed dogs(hot dogs) to people and observe which ones were eaten via external API requests(I assumed hot dogs get eaten if their name has case-insensitive "e" or "a" letter)&lt;/p&gt;

&lt;p&gt;Aside from lambdas, I had 3 kinesis streams and 3 kinesis triggers in order to make lambdas talk to each other. The named kinesis streams is as follows; caughtDogs, hotDogs, eatenHotDogs.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#starting-localstack-docker-container-with-dockercompose"&gt;
  &lt;/a&gt;
  Starting Localstack docker container with docker-compose
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3.8'&lt;/span&gt;

&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;localstack&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;localstack_main"&lt;/span&gt;
        &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;localstack/localstack:latest&lt;/span&gt;
        &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;SERVICES=dynamodb,lambda,kinesis&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;LAMBDA_EXECUTOR=docker_reuse&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;DOCKER_HOST=unix:///var/run/docker.sock&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;DEFAULT_REGION=ap-southeast-2&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;DEBUG=1&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;DATA_DIR=/tmp/localstack/data&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;PORT_WEB_UI=8080&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;LAMBDA_DOCKER_NETWORK=localstack-tutorial&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;KINESIS_PROVIDER=kinesalite&lt;/span&gt;
        &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;53:53"&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;53:53/udp"&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;443:443"&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;4566:4566"&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;4571:4571"&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;8080:8080"&lt;/span&gt;
        &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/var/run/docker.sock:/var/run/docker.sock&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;localstack_data:/tmp/localstack/data&lt;/span&gt;
        &lt;span class="na"&gt;networks&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

&lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;localstack_data&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;networks&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;external&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;localstack-tutorial&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker-compose up &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="nt"&gt;--build&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#bootstrapping-our-infra-with-terraform"&gt;
  &lt;/a&gt;
  Bootstrapping our infra with Terraform
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;"aws"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;region&lt;/span&gt;                      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ap-southeast-2"&lt;/span&gt;
  &lt;span class="nx"&gt;access_key&lt;/span&gt;                  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"fake"&lt;/span&gt;
  &lt;span class="nx"&gt;secret_key&lt;/span&gt;                  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"fake"&lt;/span&gt;
  &lt;span class="nx"&gt;skip_credentials_validation&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="nx"&gt;skip_metadata_api_check&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="nx"&gt;skip_requesting_account_id&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

  &lt;span class="nx"&gt;endpoints&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;dynamodb&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"http://localhost:4566"&lt;/span&gt;
    &lt;span class="nx"&gt;lambda&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"http://localhost:4566"&lt;/span&gt;
    &lt;span class="nx"&gt;kinesis&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"http://localhost:4566"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// DYNAMODB TABLES&lt;/span&gt;
&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_dynamodb_table"&lt;/span&gt; &lt;span class="s2"&gt;"dogs"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;           &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dogs"&lt;/span&gt;
  &lt;span class="nx"&gt;read_capacity&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"20"&lt;/span&gt;
  &lt;span class="nx"&gt;write_capacity&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"20"&lt;/span&gt;
  &lt;span class="nx"&gt;hash_key&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ID"&lt;/span&gt;

  &lt;span class="nx"&gt;attribute&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ID"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"S"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// KINESIS STREAMS&lt;/span&gt;
&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_kinesis_stream"&lt;/span&gt; &lt;span class="s2"&gt;"caught_dogs_stream"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"caughtDogs"&lt;/span&gt;
  &lt;span class="nx"&gt;shard_count&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="nx"&gt;retention_period&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;

  &lt;span class="nx"&gt;shard_level_metrics&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;"IncomingBytes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"OutgoingBytes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_kinesis_stream"&lt;/span&gt; &lt;span class="s2"&gt;"hot_dogs_stream"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"hotDogs"&lt;/span&gt;
  &lt;span class="nx"&gt;shard_count&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="nx"&gt;retention_period&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;

  &lt;span class="nx"&gt;shard_level_metrics&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;"IncomingBytes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"OutgoingBytes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_kinesis_stream"&lt;/span&gt; &lt;span class="s2"&gt;"eaten_hot_dogs_stream"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"eatenHotDogs"&lt;/span&gt;
  &lt;span class="nx"&gt;shard_count&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="nx"&gt;retention_period&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;

  &lt;span class="nx"&gt;shard_level_metrics&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;"IncomingBytes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"OutgoingBytes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// LAMBDA FUNCTIONS&lt;/span&gt;
&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_lambda_function"&lt;/span&gt; &lt;span class="s2"&gt;"dog_catcher_lambda"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;function_name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dogCatcher"&lt;/span&gt;
  &lt;span class="nx"&gt;filename&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dogCatcher.zip"&lt;/span&gt;
  &lt;span class="nx"&gt;handler&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"main"&lt;/span&gt;
  &lt;span class="nx"&gt;role&lt;/span&gt;          &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"fake_role"&lt;/span&gt;
  &lt;span class="nx"&gt;runtime&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"go1.x"&lt;/span&gt;
  &lt;span class="nx"&gt;timeout&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
  &lt;span class="nx"&gt;memory_size&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_lambda_function"&lt;/span&gt; &lt;span class="s2"&gt;"dog_processor_lambda"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;function_name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dogProcessor"&lt;/span&gt;
  &lt;span class="nx"&gt;filename&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dogProcessor.zip"&lt;/span&gt;
  &lt;span class="nx"&gt;handler&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"main"&lt;/span&gt;
  &lt;span class="nx"&gt;role&lt;/span&gt;          &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"fake_role"&lt;/span&gt;
  &lt;span class="nx"&gt;runtime&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"go1.x"&lt;/span&gt;
  &lt;span class="nx"&gt;timeout&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
  &lt;span class="nx"&gt;memory_size&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_lambda_function"&lt;/span&gt; &lt;span class="s2"&gt;"hot_dog_despatcher_lambda"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;function_name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"hotDogDespatcher"&lt;/span&gt;
  &lt;span class="nx"&gt;filename&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"hotDogDespatcher.zip"&lt;/span&gt;
  &lt;span class="nx"&gt;handler&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"main"&lt;/span&gt;
  &lt;span class="nx"&gt;role&lt;/span&gt;          &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"fake_role"&lt;/span&gt;
  &lt;span class="nx"&gt;runtime&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"go1.x"&lt;/span&gt;
  &lt;span class="nx"&gt;timeout&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
  &lt;span class="nx"&gt;memory_size&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// LAMBDA TRIGGERS&lt;/span&gt;
&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_lambda_event_source_mapping"&lt;/span&gt; &lt;span class="s2"&gt;"dog_processor_trigger"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;event_source_arn&lt;/span&gt;              &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_kinesis_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;caught_dogs_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arn&lt;/span&gt;
  &lt;span class="nx"&gt;function_name&lt;/span&gt;                 &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dogProcessor"&lt;/span&gt;
  &lt;span class="nx"&gt;batch_size&lt;/span&gt;                    &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="nx"&gt;starting_position&lt;/span&gt;             &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"LATEST"&lt;/span&gt;
  &lt;span class="nx"&gt;enabled&lt;/span&gt;                       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="nx"&gt;maximum_record_age_in_seconds&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;604800&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_lambda_event_source_mapping"&lt;/span&gt; &lt;span class="s2"&gt;"dog_processor_trigger_2"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;event_source_arn&lt;/span&gt;              &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_kinesis_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;eaten_hot_dogs_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arn&lt;/span&gt;
  &lt;span class="nx"&gt;function_name&lt;/span&gt;                 &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dogProcessor"&lt;/span&gt;
  &lt;span class="nx"&gt;batch_size&lt;/span&gt;                    &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="nx"&gt;starting_position&lt;/span&gt;             &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"LATEST"&lt;/span&gt;
  &lt;span class="nx"&gt;enabled&lt;/span&gt;                       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="nx"&gt;maximum_record_age_in_seconds&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;604800&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_lambda_event_source_mapping"&lt;/span&gt; &lt;span class="s2"&gt;"hot_dog_despatcher_trigger"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;event_source_arn&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_kinesis_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hot_dogs_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arn&lt;/span&gt;
  &lt;span class="nx"&gt;function_name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"hotDogDespatcher"&lt;/span&gt;
  &lt;span class="nx"&gt;batch_size&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="nx"&gt;starting_position&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"LATEST"&lt;/span&gt;
  &lt;span class="nx"&gt;enabled&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="nx"&gt;maximum_record_age_in_seconds&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;604800&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./zip-it.sh
terraform init
terraform plan
terraform apply &lt;span class="nt"&gt;--auto-approve&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#checking-with-aws-cli-if-everything-is-setup-correctly"&gt;
  &lt;/a&gt;
  Checking with aws CLI if everything is setup correctly
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AyKfsn8x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ia14j0l3e49c4um78yaq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AyKfsn8x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ia14j0l3e49c4um78yaq.png" alt="aws-cli-outputs"&gt;&lt;/a&gt;&lt;br&gt;
To see if everything was working correctly, I invoke dogCatcher and check out the dynamodb table;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;aws lambda invoke &lt;span class="nt"&gt;--function-name&lt;/span&gt; dogCatcher &lt;span class="nt"&gt;--endpoint-url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;http://localhost:4566 &lt;span class="nt"&gt;--payload&lt;/span&gt; &lt;span class="s1"&gt;'{"quantity": 2}'&lt;/span&gt; output.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;aws dynamodb scan &lt;span class="nt"&gt;--endpoint-url&lt;/span&gt; http://localhost:4566 &lt;span class="nt"&gt;--table-name&lt;/span&gt; dogs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ImcdKik8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/117i7343k9c4t75yio5b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ImcdKik8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/117i7343k9c4t75yio5b.png" alt="aws-cli-results"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  Result
&lt;/h3&gt;

&lt;p&gt;I had pretty much great experience with Localstack. I think even though Localstack is quite new, it seems like it can be used for learning AWS SDKs as a developer without actually using live AWS services and getting billed for it. This can also speed up developer's integration tests(along with CI/CD) and debugging processes if configured properly because there are many services Localstack provides and I have only configured and used 3 of them here. This also saves lots of costs for any companies.&lt;/p&gt;

&lt;p&gt;Also don't forget to check out Localstack's slack channel, they are really helpful for any issues you run into and follow me on Twitter for further questions!&lt;br&gt;
&lt;a href="https://localstack-community.slack.com"&gt;localstack-slack&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/mr_wormhole"&gt;my-twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>terraform</category>
      <category>docker</category>
      <category>go</category>
      <category>aws</category>
    </item>
    <item>
      <title>What I Learned This Week: Next.js and API Keys</title>
      <author>Desiree Lerma</author>
      <pubDate>Sat, 03 Jul 2021 21:14:30 +0000</pubDate>
      <link>https://dev.to/desilerma25/what-i-learned-this-week-next-js-and-api-keys-3ig5</link>
      <guid>https://dev.to/desilerma25/what-i-learned-this-week-next-js-and-api-keys-3ig5</guid>
      <description>&lt;p&gt;If you've read my previous blogs then you're aware that I have been learning Next.js recently as I tackle my next project, WatchNext. If you have not read my previous blogs, a quick update for you: I kickstarted a new project to keep the gears in my brain spinning as I search for my first engineering role. During the kickoff process, I quickly encountered an obstacle (I wanted this projet to be frontend only). That obstacle being, how to properly hide my keys on a frontend application without them accidentally being exposed to a client after deployment. Nicholas Papadakis recommended using Next.js and thus my journey to learn it began.&lt;/p&gt;

&lt;p&gt;Now that we're caught up let's get to the point of this blog. API KEYS!&lt;/p&gt;

&lt;p&gt;The main tidbit of information that I've learned while exploring Next.js is how to keep my secret keys an actual secret. Next.js offers you the ability to create an API directory within your Pages directory. This API directory allows you to create API endpoints for your applications. You can then access these endpoints to get data from your external API as needed. The best thing... everything in it will be private! Including your ENV variables. Seeing as this was my first major obstacle this is a &lt;strong&gt;GREAT&lt;/strong&gt; bonus for me and my current needs.&lt;/p&gt;

&lt;p&gt;Using ENV variables is a tad different than how you would implement them on a backend application. To utilize them in Next.js, you will create a file in the highest level of your application and title it &lt;code&gt;.env.local&lt;/code&gt; (don't forget to ensure it is included in your &lt;code&gt;.gitignore&lt;/code&gt; file so you don't accidentally make it public!). In this file is where you will store your ENV variable like you would normally do in the backend. Now, to access it, you would interpolate it where it's needed and call &lt;code&gt;process.env.ENV_VAR_NAME&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/// In .env.local
API_SECRET=PUT_SECRET_HERE

// Whichever file you need to call the ENV variable, within the API directory
const URL = 'https://myapi.org/info?api_key=${process.env.API_SECRET}'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;VIOLA!!&lt;/strong&gt; You have accessed your external API without exposing your precious keys or creating a backend.&lt;/p&gt;

&lt;p&gt;If what you've read so far about Next.js sounds like it can be useful to you, I would highly recommend using Next.js for your next project or even migrating a current project that you have to utilize the benefits that Next.js has to offer.&lt;br&gt;
Just a reminder, I am still learning and growing. I am open to any tips and tricks you may have as well as open to answering any questions you may have to the best of my ability. Happy learning! &lt;/p&gt;

&lt;p&gt;Resources: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/docs/basic-features/environment-variables"&gt;https://nextjs.org/docs/basic-features/environment-variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>nextjs</category>
      <category>devjournal</category>
      <category>react</category>
    </item>
    <item>
      <title>Map running container port to the Host</title>
      <author>Cubite | E-learning Solutions</author>
      <pubDate>Sat, 03 Jul 2021 21:06:52 +0000</pubDate>
      <link>https://dev.to/corpcubite/map-running-container-port-to-the-host-2f11</link>
      <guid>https://dev.to/corpcubite/map-running-container-port-to-the-host-2f11</guid>
      <description>&lt;p&gt;We recently ran to a situation that we have a running container (MySQL) but we liked to access it from internet and this container didn't have any port mapping between host and container. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We spawn up the container with docker compose&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One solution for this situation is to stop the container, remove it and execute docker run with &lt;code&gt;-p &amp;lt;hostPort&amp;gt;:&amp;lt;containerPort&amp;gt;&lt;/code&gt; but we didn't want to create new container.&lt;br&gt;
Second solution is using &lt;code&gt;iptables&lt;/code&gt; to do the port mapping. &lt;br&gt;
In the following example, you see how we achieved routing calls to the &lt;code&gt;host:3306&lt;/code&gt; to the &lt;code&gt;mysqlContainer:3306&lt;/code&gt;.&lt;br&gt;
You should run this on the host machine.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo iptables -t nat -A DOCKER -p tcp --dport 3306 -j DNAT --to-destination MysqlContainerIP:3306
sudo iptables -t nat -A POSTROUTING -j MASQUERADE -p tcp --source MysqlContainerIP --destination MysqlContainerIP --dport 3306
sudo iptables -A DOCKER -j ACCEPT -p tcp --destination MysqlContainerIP --dport 3306
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>docker</category>
      <category>firewall</category>
      <category>iptables</category>
      <category>network</category>
    </item>
    <item>
      <title>Easy way to manage multiple git accounts using ssh</title>
      <author>Shahid Ullah Khan</author>
      <pubDate>Sat, 03 Jul 2021 20:58:53 +0000</pubDate>
      <link>https://dev.to/shahidullahkhankhattak/easy-way-manage-multiple-git-accounts-using-ssh-41hk</link>
      <guid>https://dev.to/shahidullahkhankhattak/easy-way-manage-multiple-git-accounts-using-ssh-41hk</guid>
      <description>&lt;p&gt;If youâ€™re having problems managing different ssh keys for your different git accounts, This article is for you! follow below steps to do it easily.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;: Nodejs, Npm&lt;/p&gt;

&lt;p&gt;You will need to install and use npm package called ssh-keyman. &lt;a href="https://www.npmjs.com/package/ssh-keyman"&gt;(Click here to view docs)&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-installation"&gt;
  &lt;/a&gt;
  Step 1 â€” Installation
&lt;/h2&gt;

&lt;p&gt;Run below command to install ssh-keyman package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm i &lt;span class="nt"&gt;-g&lt;/span&gt; ssh-keyman
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-2-initialisation"&gt;
  &lt;/a&gt;
  Step 2 â€” Initialisation
&lt;/h2&gt;

&lt;p&gt;Now initialise ssh-keyman using below command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keyman &lt;span class="nt"&gt;-i&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By running above command, this package will setup everything up in your system. It will create a default environment in your system &amp;amp; copy your current ~/.ssh/ content to default environment.&lt;/p&gt;

&lt;p&gt;Now letâ€™s assume weâ€˜ve two different repositories from two different github profiles &lt;strong&gt;githubx&lt;/strong&gt; and &lt;strong&gt;githuby&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-create-environment-for-your-account"&gt;
  &lt;/a&gt;
  Step 3 â€” Create environment for your account.
&lt;/h2&gt;

&lt;p&gt;Now letâ€™s create two environments, One for githubx and other for githuby.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keyman &lt;span class="nt"&gt;-c&lt;/span&gt; githubx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above command will create a profile called &lt;strong&gt;githubx&lt;/strong&gt; in your system.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--35CA9ufq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32dgjae4izx4vx61d1y6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--35CA9ufq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32dgjae4izx4vx61d1y6.png" alt="Create githubx environment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Similarly, Create another environment for our another github account githuby.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keyman &lt;span class="nt"&gt;-c&lt;/span&gt; githuby
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pe64cgI9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec5am3x13batnbsl8ug9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pe64cgI9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec5am3x13batnbsl8ug9.png" alt="Create githuby environment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now weâ€™ve both environments setup for githubx and githuby.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-4-setup-ssh-keys"&gt;
  &lt;/a&gt;
  Step 4 â€” Setup SSH Keys.
&lt;/h2&gt;

&lt;p&gt;Letâ€™s now create ssh key for your githubx account. For that we need to switch to githubx environment.&lt;/p&gt;

&lt;p&gt;To switch to githubx environment run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keyman &lt;span class="nt"&gt;-s&lt;/span&gt; githubx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9MqHCaIG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tno94c3qwv1145wcj50h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9MqHCaIG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tno94c3qwv1145wcj50h.png" alt="Switch githubx environment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now weâ€™re in githubx environment, Letâ€™s generate ssh keys for githubx.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keygen &lt;span class="nt"&gt;-t&lt;/span&gt; rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;once the key is generated, use that key in your GitHub account, copy contents of ~/.ssh/id_rsa.pub and paste it in githubâ€™s ssh key section.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aWeqhMGc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzdp2kn2x6wmzs7png1x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aWeqhMGc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzdp2kn2x6wmzs7png1x.png" alt="Github add key"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Repeat the above process for githuby account.&lt;/strong&gt;&lt;br&gt;
I.e&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Switch to githuby environment
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keyman &lt;span class="nt"&gt;-s&lt;/span&gt; githuby
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;br&gt;
sh&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Generate key for githuby environment.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keygen &lt;span class="nt"&gt;-t&lt;/span&gt; rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Similarly login to githuby account in the browser and add the contents of ~/.ssh/id_rsa.pub to github create keyâ€™s key section.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#step-5-start-using-and-switching"&gt;
  &lt;/a&gt;
  Step 5 â€” Start using and switching.
&lt;/h2&gt;

&lt;p&gt;So, If you want to work in repos from githubx account, simply switch to githubx environment using&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keyman &lt;span class="nt"&gt;-s&lt;/span&gt; githubx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now when ever you push or pull the code from git, keys for githubx will be used.&lt;/p&gt;

&lt;p&gt;Similarly if you want to work in repos from githuby account, simply switch to githuby environment using&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keyman &lt;span class="nt"&gt;-s&lt;/span&gt; githuby
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And when ever you push or pull code from git, keys for githuby will be used.&lt;/p&gt;

</description>
      <category>ssh</category>
      <category>github</category>
      <category>managesshkeys</category>
      <category>bitbucket</category>
    </item>
    <item>
      <title>The Richest Man in Babylon by George S Clason</title>
      <author>Sandor Dargo</author>
      <pubDate>Sat, 03 Jul 2021 20:10:02 +0000</pubDate>
      <link>https://dev.to/sandordargo/the-richest-man-in-babylon-by-george-s-clason-292a</link>
      <guid>https://dev.to/sandordargo/the-richest-man-in-babylon-by-george-s-clason-292a</guid>
      <description>&lt;p&gt;&lt;a href="https://www.amazon.com/gp/product/1939438632/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=sandordargo-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=1939438632&amp;amp;linkId=f075962475cbe35d1a89d6e11310dd09"&gt;The Richest Man in Babylon&lt;/a&gt; was first published in 1926, almost one hundred years ago. We might think about it as the father of all modern personal finance advice books.&lt;/p&gt;

&lt;p&gt;Especially if we consider that it's based on a collection of parables that were written 4,000 years ago in the ancient city of Babylon, the richest city in that world.&lt;/p&gt;

&lt;p&gt;They understood some basic correlations that many still get wrong. Now, let's see some of the main ideas.&lt;/p&gt;

&lt;p&gt;IMG BABYLON&lt;/p&gt;

&lt;p&gt;If you are dedicated you can read the book in one afternoon, it's only about 120 pages. Due to obvious reasons, I'm only going to highlight 2 sets of rules and a story.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#seven-cures-for-a-lean-purse"&gt;
  &lt;/a&gt;
  Seven cures for a lean purse
&lt;/h2&gt;

&lt;p&gt;When Sargon, the King of Babylon returned from war, he saw that his people couldn't support themselves.&lt;/p&gt;

&lt;p&gt;As a cure, he ordered the richest man in Babylon, Arkad, to teach people how to acquire money.&lt;/p&gt;

&lt;p&gt;Arkad gladly accepted the order - I guess it was better than losing his head - and he shared the 7 following rules:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#start-thy-purse-fattening"&gt;
  &lt;/a&gt;
  Start thy purse fattening
&lt;/h3&gt;

&lt;p&gt;No matter how small money you earn, always pay yourself first in the sense that you save 10%.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#control-thy-expenditures"&gt;
  &lt;/a&gt;
  Control thy expenditures
&lt;/h3&gt;

&lt;p&gt;It really comes from the previous point that you should not spend more than what you have. In fact, you should not spend more than 90% of your income. This is so easy, but if you just think about all the consumer credits, so many people don't get it right.&lt;/p&gt;

&lt;p&gt;And there is another thought that is worth pondering:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"Confuse not the necessary expenses with thy desires."&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yes, we want many things, but that's not our necessity. It's not necessary to have the latest smartphone, to have takeaway lunches or even to live in a relatively spacious apartment. It's good if you can afford that, but don't spend more than you have...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-thy-gold-multiply"&gt;
  &lt;/a&gt;
  Make thy gold multiply
&lt;/h3&gt;

&lt;p&gt;Saving 10% of what you earn is great, but it will only take you so far. You also have to invest the money, so that it will also earn and start to grow your savings with the help of compound interest.&lt;/p&gt;

&lt;p&gt;Let's say that for 10 years you save $10 a month. By the end of the 120 months, you will have $1,200.&lt;/p&gt;

&lt;p&gt;With a 3% interest that money would become $1,400, but with a 6% almost $1,650.&lt;/p&gt;

&lt;p&gt;Maybe that's not very impressive. The power of compound interests manifests more with a longer timescale; after 20 years, the above numbers would be: $2,400 (2%), $3,200 (3%) and $4,640 (6%).&lt;/p&gt;

&lt;p&gt;Start saving money as early as possible to benefit more from compound interests.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#guard-thy-treasures-against-loss"&gt;
  &lt;/a&gt;
  Guard thy treasures against loss
&lt;/h3&gt;

&lt;p&gt;Look for safe investments where you will not lose your principal. Also, you should not invest all your eggs, in the same basket, diversify your portfolio.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-of-thy-dwelling-a-profitable-investment"&gt;
  &lt;/a&gt;
  Make of thy dwelling a profitable investment
&lt;/h3&gt;

&lt;p&gt;Professionals still debate on this point 4,000 years later. It's about owning your own home. This book suggest to own your home, to decrease your expenditures, so that you can save, you can invest more.&lt;/p&gt;

&lt;p&gt;I think it depends on how good investments you can find and what's the price of a good rental, how frequently do you want to change neighbourhood, city, country, etc.&lt;/p&gt;

&lt;p&gt;Nevertheless, owning your own home is the fifth cure of a lean purse.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#insure-a-future-income"&gt;
  &lt;/a&gt;
  Insure a future income
&lt;/h3&gt;

&lt;p&gt;Make some investments that will ensure that you and/or your family will not lack resources once you'll not be able to earn money or when you're gone.&lt;/p&gt;

&lt;p&gt;Nowadays this would either mean that you set up a retirement portfolio or a set of passive income flows.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#increase-thy-ability-to-earn"&gt;
  &lt;/a&gt;
  Increase thy ability to earn
&lt;/h3&gt;

&lt;p&gt;If you feel that you cannot earn enough money, go on and invest first in yourself. Learn some skills, increase your value so that you can earn more money, enough money that can support your desired lifestyle.&lt;/p&gt;

&lt;p&gt;We, developers, are in a quite good position both in terms of knowledge and resources to improve us. Yet, we should not forget that learning is a lifelong activity, especially in our field. &lt;/p&gt;

&lt;p&gt;Let's go and learn something that will increase our value and we can earn more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-five-laws-of-gold"&gt;
  &lt;/a&gt;
  The five laws of gold
&lt;/h2&gt;

&lt;p&gt;The five laws of gold are mostly about general rules of building wealth. I don't quote them, because of the old language used in the book.&lt;/p&gt;

&lt;p&gt;First, make sure that you save at least 10% of what you make. The more you can save, the faster your wealth builds up. Less than 10% will unlikely be enough.&lt;/p&gt;

&lt;p&gt;Second, you have to look for a profitable investment, so that you can benefit from compounding.&lt;/p&gt;

&lt;p&gt;Third, don't be careless with your money, seek out for advice of wise, experienced people.&lt;/p&gt;

&lt;p&gt;Fourth, don't invest in businesses that you don't understand that you're unfamiliar with. You'll lose money. Invest in something you understand and with the help, with the guidance of other experienced people.&lt;/p&gt;

&lt;p&gt;Fifth, don't chase butterflies, don't get into tricksters, schemes, just with the hope of a romantic return of investment. Be realistic. The slow and steady wins the race.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#having-strong-work-ethic-is-the-most-important"&gt;
  &lt;/a&gt;
  Having strong work ethic is the most important
&lt;/h2&gt;

&lt;p&gt;What had the biggest impression on me, was the last story &lt;em&gt;The Luckiest Man In Babylon&lt;/em&gt;. The merchant prince, Sharru Nada was riding at the head of his caravan. On his side, there was Hadan Gula riding, the grandson of his ancient partner Arad Gula.&lt;/p&gt;

&lt;p&gt;Sharra Nada always felt he owed a debt of gratitude to Arad Gula, such gratitude that he would never be able to repay.&lt;/p&gt;

&lt;p&gt;His grandson was not the type he liked. He wore expensive jewels, fancy clothes and he didn't like to work. He thought that work was for slaves and he was not a slave.&lt;/p&gt;

&lt;p&gt;In fact, he didn't even get the point, why this guy at the head of the caravan was working so hard. Why did his grandfather work so hard?&lt;/p&gt;

&lt;p&gt;I will not share the whole story here, you can check out the book. The point is that both Sharru Nada and Arad Gula used to be slaves at a certain point in their lives. With the right attitude, diligence and perseverance they became free. They became free because they had the right mindset and busted their asses off.&lt;/p&gt;

&lt;p&gt;By the end of the story, by the end of their ride, Hadan Gula understood the point of work and it doesn't belittle anyone, on the contrary working hard towards a goal is a noble act.&lt;/p&gt;

&lt;p&gt;This is why I keep saying that the most important thing that you can get from your parents is not wealth, but the right attitude. It's possible to change attitude, but much more difficult than amassing enough money that is enough for you. (And I clearly don't speak about billions of dollars here.)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/gp/product/1939438632/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=sandordargo-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=1939438632&amp;amp;linkId=f075962475cbe35d1a89d6e11310dd09"&gt;The Richest Man in Babylon&lt;/a&gt; is clearly a book that I recommend reading. Maybe the money advice will bring you only so far, maybe you already know all that and you put aside at least 10% of your money and invest it wisely. I'm more than happy for you.&lt;/p&gt;

&lt;p&gt;Maybe you already have sources of passive income, maybe you don't even need to work (full-time) anymore.&lt;/p&gt;

&lt;p&gt;But with all the parables, with all the stories, this book is a nice reminder of important concepts of wealth-building and values that will bring you forward in your life.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/gp/product/1939438632/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=sandordargo-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=1939438632&amp;amp;linkId=f075962475cbe35d1a89d6e11310dd09"&gt;Read it&lt;/a&gt; if you haven't!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-deeper"&gt;
  &lt;/a&gt;
  Connect deeper
&lt;/h2&gt;

&lt;p&gt;If you liked this article, please &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hit on the like button,
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://eepurl.com/gvcv1j"&gt;subscribe to my newsletter&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;and let's connect on &lt;a href="https://twitter.com/SandorDargo"&gt;Twitter&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>books</category>
      <category>watercooler</category>
      <category>history</category>
      <category>finance</category>
    </item>
    <item>
      <title>Javascript Hacks</title>
      <author>SIDDHANT JOHARI</author>
      <pubDate>Sat, 03 Jul 2021 20:08:16 +0000</pubDate>
      <link>https://dev.to/siddhant_johari_8fdecc7b7/javascript-hacks-3j48</link>
      <guid>https://dev.to/siddhant_johari_8fdecc7b7/javascript-hacks-3j48</guid>
      <description>&lt;p&gt;There are many amazing features in javascript that can make your life much simpler, In this blog, I have added 20 features that every javascript developer should know.&lt;/p&gt;

&lt;p&gt;1.Resize the Array using an array. length.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;2.Swapping of two Numbers.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;3 Concatenating two or more arrays without causing server overload.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;4.Use Filter in a different way.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;5.Iterate on the map from 0 to n.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;6.Replace all occurrences of a word in a string&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;7.Shortcut for conditions.&lt;br&gt;
Here, I am explaining basic two examples we can implement in multiple ways.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;8.String to number / Number to string.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;9.Use the console in different ways.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;10.Use console.table&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;11.Get the items near to last index of an array.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;12.Get n power of any number.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;13.Check the falsy or truly value.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;14.Call a function by its name stored in a string using eval function.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;15.typeof Operator.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;16.yeild keyword&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;17.function* in javascript.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;18.new.target in javascript&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;19.label statement.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;20.Rest parameters Syntax.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Conclusion:&lt;br&gt;
Thanks for reading it, In this blog I have explained some of the most used features of javascript, I will explain more features in next blog,&lt;br&gt;
Please give feedback in responses.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>reactnative</category>
    </item>
    <item>
      <title>Agora vamos falar de ARIA</title>
      <author>Luiza Gatti</author>
      <pubDate>Sat, 03 Jul 2021 20:02:19 +0000</pubDate>
      <link>https://dev.to/luizagatti/agora-vamos-falar-de-aria-2i0l</link>
      <guid>https://dev.to/luizagatti/agora-vamos-falar-de-aria-2i0l</guid>
      <description>&lt;p&gt;Antes de mais nada, se vocÃª nÃ£o leu &lt;a href="https://dev.to/luizagatti/como-aumentar-o-alcance-do-seu-site-um-guia-de-acessibilidade-811"&gt;minha histÃ³ria anterior&lt;/a&gt;, volta lÃ¡ e dÃ¡ uma lida porque ela serve de introduÃ§Ã£o para essa aqui.&lt;/p&gt;

&lt;p&gt;A sigla ARIA (Accessible Rich Internet Applications) significa AplicaÃ§Ãµes para a Internet Ricas em Acessibilidade, que definem as formas de tornar o conteÃºdo e as aplicaÃ§Ãµes da internet mais acessÃ­veis.&lt;/p&gt;

&lt;p&gt;A ARIA permite a marcaÃ§Ã£o de algumas regiÃµes importantes na pÃ¡gina que servirÃ£o para auxiliar na navegaÃ§Ã£o (para ajudar quem usa um leitor de tela, por exemplo). Ã‰ um conjunto de atributos especiais para acessibilidade que pode ser adicionado a qualquer linguagem de marcaÃ§Ã£o, mas Ã© especialmente adequado para o HTML, e todos os exemplos que trarei serÃ£o nessa linguagem.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BU73Rz3p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fq7rhmf6493bktnaitr0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BU73Rz3p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fq7rhmf6493bktnaitr0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#primeira-regra-de-uso-de-aria"&gt;
  &lt;/a&gt;
  Primeira regra de uso de ARIA
&lt;/h1&gt;

&lt;p&gt;Sempre que vocÃª puder usar um elemento nativo HTML5 ou atributo com semÃ¢ntica e comportamento que vocÃª precisa jÃ¡ incorporados, em vez de redefinir um elemento e adicionar o ARIA para tornÃ¡-lo acessÃ­vel, opte pelo HTML5.&lt;/p&gt;

&lt;p&gt;Em quais casos isso pode nÃ£o ser possÃ­vel?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Quando o recurso estÃ¡ disponÃ­vel em HTML5, mas nÃ£o estÃ¡ implementado; ou estÃ¡ implementado, mas nÃ£o dÃ¡ suporte a acessibilidade;&lt;/li&gt;
&lt;li&gt;Se as restriÃ§Ãµes de design visual excluem o uso de um elemento nativo especÃ­fico, porque o elemento nÃ£o pode ser estilizado conforme necessÃ¡rio;&lt;/li&gt;
&lt;li&gt;Se o recurso nÃ£o estiver disponÃ­vel em HTML.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#segunda-regra-de-uso-de-aria"&gt;
  &lt;/a&gt;
  Segunda regra de uso de ARIA
&lt;/h1&gt;

&lt;p&gt;NÃ£o altere a semÃ¢ntica nativa, a menos que seja realmente necessÃ¡rio.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NÃ£o faÃ§a:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;h2 role="tab"&amp;gt;tab de cabeÃ§alho&amp;lt;/h2&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FaÃ§a:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;div role="tab"&amp;gt;&lt;br&gt;
   &amp;lt;h2&amp;gt;tab de cabeÃ§alho&amp;lt;/h2&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Nota: Se um elemento nÃ£o interativo for usado como base para um elemento interativo, pessoas desenvolvedoras terÃ£o que adicionar a semÃ¢ntica usando ARIA e o comportamento apropriado usando scripts. No caso de um botÃ£o, por exemplo, Ã© muito melhor e mais fÃ¡cil usar apenas um botÃ£o.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#terceira-regra-de-uso-de-aria"&gt;
  &lt;/a&gt;
  Terceira regra de uso de ARIA
&lt;/h1&gt;

&lt;p&gt;Todos os controles interativos de ARIA devem ser utilizÃ¡veis via teclado.&lt;/p&gt;

&lt;p&gt;Se vocÃª cria uma ferramenta onde a pessoa pode clicar, tocar, arrastar, soltar, deslizar ou rolar, a pessoa tambÃ©m deve ser capaz de navegar atÃ© a ferramenta e executar uma aÃ§Ã£o equivalente usando o teclado.&lt;/p&gt;

&lt;p&gt;Todas as ferramentas interativas devem ser programadas para responder aos pressionamentos de tecla padrÃ£o ou combinaÃ§Ãµes de pressionamento de tecla quando aplicÃ¡vel.&lt;/p&gt;

&lt;p&gt;Por exemplo, se estiver usando &lt;code&gt;role="button"&lt;/code&gt;, o elemento deve ser capaz de receber o foco e a pessoa usuÃ¡ria deve conseguir ativar a aÃ§Ã£o associada ao elemento usando Enter (WIN OS) ou Return (MAC OS) e a tecla de espaÃ§o.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#quarta-regra-de-uso-de-aria"&gt;
  &lt;/a&gt;
  Quarta regra de uso de ARIA
&lt;/h1&gt;

&lt;p&gt;NÃ£o use &lt;code&gt;role="presentation"&lt;/code&gt; ou &lt;code&gt;aria-hidden="true"&lt;/code&gt; em um elemento visÃ­vel e focalizÃ¡vel. Usar qualquer uma dessas propriedades em um elemento que pode ser visÃ­vel e focalizÃ¡vel irÃ¡ resultar em pessoas usuÃ¡rias clicando em â€˜nadaâ€™.&lt;br&gt;
Um elemento que for oculto usando &lt;code&gt;display: none&lt;/code&gt; tambÃ©m serÃ¡ removido da Ã¡rvore de acessibilidade, o que torna desnecessÃ¡ria a adiÃ§Ã£o de &lt;code&gt;aria-hidden="true"&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#quinta-regra-de-uso-de-aria"&gt;
  &lt;/a&gt;
  Quinta regra de uso de ARIA
&lt;/h1&gt;

&lt;p&gt;Todos os elementos interativos devem ter um nome acessÃ­vel.&lt;/p&gt;

&lt;p&gt;Um elemento interativo sÃ³ tem um nome acessÃ­vel quando sua propriedade de nome (name ou equivalente) estÃ¡ preenchida.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NÃ£o faÃ§a:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;label&amp;gt;Insira seu nome&amp;lt;/label&amp;gt; &amp;lt;input type="text"/&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FaÃ§a:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;label for="user-name"&amp;gt;Insira seu nome&amp;lt;/label&amp;gt;&lt;br&gt;
&amp;lt;input type="text" id="user-name"/&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;O correto acima tem um nome acessÃ­vel porque o elemento de entrada Ã© um elemento rotulÃ¡vel e o elemento de rÃ³tulo Ã© usando corretamente para associar o texto Ã  entrada.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#o-que-adicionar-role-faz-com-a-sem%C3%A2ntica-nativa"&gt;
  &lt;/a&gt;
  O que adicionar "role" faz com a semÃ¢ntica nativa?
&lt;/h1&gt;

&lt;p&gt;Ao adicionar a funÃ§Ã£o ARIA, estamos substituindo a semÃ¢ntica da funÃ§Ã£o nativa na Ã¡rvore de acessibilidade e, portanto, ARIA afeta diretamente o que Ã© relatado a uma tecnologia assistiva.&lt;br&gt;
Por exemplo, esse cÃ³digo:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;h1 role=button&amp;gt;text&amp;lt;/h1&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Fica assim na Ã¡rvore de acessibilidade:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ba_YBTad--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9708hvsg9ylzhu0wq5m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ba_YBTad--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9708hvsg9ylzhu0wq5m.png" alt="Heading textâ€Š-â€Špush button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adicionar a ARIA &lt;strong&gt;nÃ£o&lt;/strong&gt; farÃ¡ com que o elemento pareÃ§a ou se comporte de maneira diferente para as pessoas que nÃ£o estÃ£o usando tecnologia assistiva. A funÃ§Ã£o &lt;strong&gt;nÃ£o altera&lt;/strong&gt; os comportamentos, estados e propriedades do elemento host, apenas a semÃ¢ntica da funÃ§Ã£o nativa. Por exemplo, esse cÃ³digo:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;button role="heading" aria-level=1&amp;gt; Texto &amp;lt;/button&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Fica assim na Ã¡rvore de acessibilidade:&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JG0B6Dka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qykj1543amelouxkk73.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JG0B6Dka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qykj1543amelouxkk73.png" alt="Na primeira linha temos: (none)â€Š-â€Šheading. Na segunda linha temos: textâ€Š-â€Šeditable text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mas ele ainda pode ser pressionado, ainda estÃ¡ na ordem padrÃ£o do tab, ainda se parece com um botÃ£o e ainda dispara as aÃ§Ãµes associadas a ele quando pressionado. Ã‰ por isso que Ã© um erro de conformidade com o HTML5 transformar um botÃ£o em um heading.&lt;/p&gt;

&lt;p&gt;Nota: alterar a role de um elemento nÃ£o adiciona comportamentos, propriedades ou estados Ã quela funÃ§Ã£o. O ARIA nÃ£o muda a aparÃªncia ou a aÃ§Ã£o no browser. Por exemplo, quando os links sÃ£o estilizados para se comportarem como botÃµes, adicionar &lt;code&gt;role="button"&lt;/code&gt; nÃ£o Ã© suficiente. TambÃ©m Ã© necessÃ¡rio fazer funcionar como um botÃ£o, incluindo um manipulador de eventos de chave que escuta a tecla de espaÃ§o como os botÃµes nativos fazem.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#uso-de-rolepresentation-ou-rolenone"&gt;
  &lt;/a&gt;
  Uso de "role=presentation" ou "role=none"
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;role="presentation"&lt;/code&gt; ou seu sinÃ´nimo &lt;code&gt;role="none"&lt;/code&gt; remove a semÃ¢ntica do elemento onde ele estÃ¡. Por exemplo, esse cÃ³digo:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;h1 role="presentation"&amp;gt; Texto &amp;lt;/h1&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Fica assim na Ã¡rvore de acessibilidade:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_zKOpGxn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ylq9jxook2472peznv3n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_zKOpGxn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ylq9jxook2472peznv3n.png" alt="textâ€Š-â€Šeditable text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Em outras palavras, Ã© apenas relatado na Ã¡rvore como uma string de texto, sem qualquer significado semÃ¢ntico.&lt;/p&gt;

&lt;p&gt;Para elementos sem &lt;em&gt;children&lt;/em&gt; obrigatÃ³rios, quaisquer outros elementos aninhados dentro de um com &lt;code&gt;role="presentation/none"&lt;/code&gt; preservam sua semÃ¢ntica. Por exemplo, esse cÃ³digo:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;h1 role="presentation"&amp;gt;&amp;lt;abbr&amp;gt; API &amp;lt;/abbr&amp;gt;&amp;lt;/h1&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Fica assim na Ã¡rvore de acessibilidade:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WzJwVXV8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bf3uslad2vnr77qs13g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WzJwVXV8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bf3uslad2vnr77qs13g.png" alt="Na primeira linha: (none)â€Š-â€Šabbr. Na segunda linha: APIâ€Š-â€Šeditable text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Para elementos com children obrigatÃ³rios (como &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; ou &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;) quaisquer filhos obrigatÃ³rios aninhados dentro do primeiro elemento com a &lt;code&gt;role="presentation/none"&lt;/code&gt; tambÃ©m tem a sua semÃ¢ntica removida. Por exemplo, esse cÃ³digo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;table role="presentation"&amp;gt;
   &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;
         &amp;lt;abbr&amp;gt; API &amp;lt;/abbr&amp;gt;
      &amp;lt;/td&amp;gt;
   &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fica assim na Ã¡rvore de acessibilidade:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h25Ohj3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr7hlfiek4aeytqq47lc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h25Ohj3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr7hlfiek4aeytqq47lc.png" alt="Na primeira linha: (none)â€Š-â€Šabbr. Na segunda linha: APIâ€Š-â€Šeditable text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nota: quaisquer elementos que nÃ£o sejam filhos obrigatÃ³rios do elemento com uma &lt;code&gt;role="presentation/none"&lt;/code&gt; mantÃ©m sua semÃ¢ntica. Isso inclui outros como lista ou tabelas aninhadas. Por exemplo, esse cÃ³digo que consiste em uma tabela com outra tabela aninhada:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;table&amp;gt;
   &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;
         &amp;lt;table&amp;gt;
            &amp;lt;tr&amp;gt;
               &amp;lt;td&amp;gt;
                  &amp;lt;abbr&amp;gt; API &amp;lt;/abbr&amp;gt;
               &amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
         &amp;lt;/table&amp;gt;
      &amp;lt;/td&amp;gt;
   &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fica assim na Ã¡rvore de acessibilidade:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--056AG_gD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvg95kfegshf6vdrp8cc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--056AG_gD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvg95kfegshf6vdrp8cc.png" alt="(none)â€Š-â€Štable | (none)â€Š-â€Šrow | (none)â€Š-â€Šcell | (none)â€Š-â€Štable | APIâ€Š-â€Šrow | (none)â€Š-â€Šcell | (none) abbr | APIâ€Š-â€Šeditable"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ao adicionar role="presentation/none" na tabela mais externa, Ã© assim que fica a Ã¡rvore:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hzeGC7Ct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxu0zej60wmbmm06xaxa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hzeGC7Ct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxu0zej60wmbmm06xaxa.png" alt="(none)â€Š-â€Štable | APIâ€Š-â€Šrow | (none)â€Š-â€Šcell | (none)â€Š-â€Šabbr | APIâ€Š-â€Šeditable"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#uso-de-arialabel-arialabelledby-e-ariadescribedby"&gt;
  &lt;/a&gt;
  Uso de aria-label, aria-labelledby e aria-describedby
&lt;/h1&gt;

&lt;p&gt;Atualmente &lt;code&gt;aria-label&lt;/code&gt;, &lt;code&gt;aria-labelledby&lt;/code&gt; e &lt;code&gt;aria-describedby&lt;/code&gt; tem um suporte melhor em associar conteÃºdo de texto a um subconjunto interativo de elementos (por exemplo &lt;code&gt;&amp;lt;div role="main"&amp;gt;&lt;/code&gt; ou &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;). Essas trÃªs opÃ§Ãµes nÃ£o funcionam de forma consistente em links, o suporte a conteÃºdo embedado e conteÃºdo agrupado Ã© inconsistente em navegadores, tecnologia assistiva e sistemas operacionais, mas podem ser usados com seguranÃ§a em controles de formulÃ¡rio HTML5, incluindo vÃ¡rios tipos de &lt;code&gt;input&lt;/code&gt; e os elementos &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; e &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;.&lt;br&gt;
O exemplo a seguir de aria-labelledby com vÃ¡rias referÃªncias usa um intervalo com um &lt;code&gt;tabindex=-1&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#uso-de-roleapplication"&gt;
  &lt;/a&gt;
  Uso de role=application
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#como-raw-roleapplication-endraw-afeta-um-leitor-de%C2%A0tela"&gt;
  &lt;/a&gt;
  Como &lt;code&gt;role=application&lt;/code&gt; afeta um leitor deÂ tela?
&lt;/h2&gt;

&lt;p&gt;Em muitos leitores de tela populares, a maioria dos pressionamentos de tecla sÃ£o capturados pelo leitor e nÃ£o pela pÃ¡gina da web quando a pessoa usuÃ¡ria estÃ¡ no modo de navegaÃ§Ã£o. Isso Ã© necessÃ¡rio para a navegaÃ§Ã£o eficiente de uma pÃ¡gina. Quando o modo de aplicativo estÃ¡ definido, muitos leitores de tela param de interceptar os pressionamentos de tecla e passam todos os pressionamentos de tecla diretamente para o navegador. Assim, a pessoa usuÃ¡ria nÃ£o conseguirÃ¡ navegar na pÃ¡gina tÃ£o facilmente. Por exemplo, nÃ£o serÃ£o capazes de pular a pÃ¡gina por tÃ­tulos ou ler um parÃ¡grafo de texto estÃ¡tico linha por linha. No entanto, vÃ¡rios leitores de tela nÃ£o se comportam de maneira diferente quando hÃ¡ um conjunto de &lt;code&gt;role=application&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ent%C3%A3o-quando-devemos-usar"&gt;
  &lt;/a&gt;
  EntÃ£o quando devemos usar?
&lt;/h2&gt;

&lt;p&gt;Ao determinar quando devemos usar essa propriedade precisamos levar em consideraÃ§Ã£o tambÃ©m as vantagens dos atalhos de teclado do leitor de tela em relaÃ§Ã£o Ã  perda desses recursos. Geralmente nÃ£o deve ser usado e, se for, devem ser realizados testes de usabilidade com pessoas usuÃ¡rias de leitores de tela.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NÃ£o usamos&lt;/strong&gt; &lt;code&gt;role=application&lt;/code&gt; se um conjunto de controles tiver apenas esses widgets que fazem parte do HTML padrÃ£o. Isso tambÃ©m se aplica se vocÃª marcÃ¡-los e criar um modelo de interaÃ§Ã£o usando funÃ§Ãµes WAI-ARIA em vez de widgets HTML padrÃ£o:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;text box&lt;/code&gt; (tambÃ©m se aplica a telefone, pesquisa e senha)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;textarea&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;checkbox&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;button&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;radio button&lt;/code&gt; (normalmente dentro de um fieldset/legend)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;select + option&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;link&lt;/code&gt;, &lt;code&gt;paragraphs&lt;/code&gt;, &lt;code&gt;headings&lt;/code&gt; e outros elementos que sÃ£o clÃ¡ssicos/nativos de documentos web&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nota: nÃ£o Ã© recomendado que sejam desenvolvidos widgets de entrada de texto personalizados. Quase sempre Ã© melhor usar os inputs nativos.&lt;/p&gt;

&lt;p&gt;TambÃ©m &lt;strong&gt;nÃ£o usamos&lt;/strong&gt; &lt;code&gt;role=application&lt;/code&gt; se seu widget for de algum dos seguintes tipos mais dinÃ¢micos e nÃ£o nativos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tree view&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;slider&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;table&lt;/code&gt; que tenha elementos focalizÃ¡veis e que esteja sendo navegado pelas teclas de seta, por exemplo uma lista de mensagens de e-mail. Outros exemplos interativos sÃ£o grids, tree grids, etc&lt;/li&gt;
&lt;li&gt;Uma lista de guias (&lt;code&gt;tab&lt;/code&gt;, &lt;code&gt;tablist&lt;/code&gt;) onde a pessoa usuÃ¡ria seleciona guias pelas teclas de seta para a direita e para a esquerda. Lembre-se que vocÃª tem que implementar o modelo de navegaÃ§Ã£o para esse caso&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;dialog&lt;/code&gt; e &lt;code&gt;alertdialog&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;toolbar&lt;/code&gt; e &lt;code&gt;toolbar buttons&lt;/code&gt;, &lt;code&gt;menus&lt;/code&gt; e &lt;code&gt;menu items&lt;/code&gt; e similares&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;VocÃª &lt;strong&gt;deve usar&lt;/strong&gt; &lt;code&gt;role=application&lt;/code&gt; se o conteÃºdo que estÃ¡ fornecendo consistir apenas em controles interativos focalizÃ¡veis e, principalmente, widgets avanÃ§ados que emulam um aplicativo desktop real. Observe que, apesar de muitas coisas agora serem chamadas de aplicativo web, a maior parte do conteÃºdo com que esses aplicativos trabalham ainda sÃ£o informaÃ§Ãµes baseadas em documentos, sejam postagens e comentÃ¡rios de blogs, feeds e atÃ© mesmo acordeÃµes que mostram e ocultam certos tipos de informaÃ§Ã£o. Ainda lidamos principalmente com documentos na web, embora eles possam ter uma aparÃªncia semelhante a um desktop na superfÃ­cie.&lt;/p&gt;

&lt;p&gt;Em resumo: as vezes que vocÃª realmente irÃ¡ usar o &lt;code&gt;role=application&lt;/code&gt; serÃ£o &lt;strong&gt;muito raras&lt;/strong&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#onde-usar-o-raw-roleapplication-endraw-quando-ele-for-relevante"&gt;
  &lt;/a&gt;
  Onde usar o &lt;code&gt;role=application&lt;/code&gt; quando ele for relevante?
&lt;/h2&gt;

&lt;p&gt;Coloque-o no elemento contido mais prÃ³ximo de seu widget, por exemplo, a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; superior a seu elemento.&lt;br&gt;
Como regra geral, se sua pÃ¡gina consiste em mais de 90 ou 95% de widgets, &lt;code&gt;role=application&lt;/code&gt; &lt;em&gt;pode ser&lt;/em&gt; apropriado. Mesmo assim, verifique se realmente Ã© o caso. &lt;strong&gt;Jamais&lt;/strong&gt; use &lt;code&gt;role=application&lt;/code&gt; em um elemento amplamente contido, como o &lt;code&gt;body&lt;/code&gt;, se sua pÃ¡gina consistir principalmente em widgets tradicionais ou elementos de pÃ¡gina, como links com os quais a pessoa usuÃ¡ria nÃ£o precisa interagir no modo de foco. Isso causarÃ¡ enormes dores de cabeÃ§a para qualquer pessoa usuÃ¡ria de tecnologia assistiva.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fun%C3%A7%C3%B5es-e-propriedades-de-aria-n%C3%A3o-dispon%C3%ADveis-como-recursos-em-html"&gt;
  &lt;/a&gt;
  FunÃ§Ãµes e propriedades de ARIA nÃ£o disponÃ­veis como recursos em HTML
&lt;/h3&gt;

&lt;p&gt;Abaixo estÃ£o listadas as funÃ§Ãµes e propriedades ARIA nÃ£o consideradas disponÃ­veis nativamente em HTML. Claro que muitas funÃ§Ãµes e propriedades fornecidas pelo ARIA, que podem ser usadas para transmitir informaÃ§Ãµes Ã  pessoas usuÃ¡rias, nÃ£o estÃ£o disponÃ­veis em HTML.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#aria-roles"&gt;
  &lt;/a&gt;
  ARIA Roles
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#alert"&gt;&lt;code&gt;alert&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#alertdialog"&gt;&lt;code&gt;alertdialog&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#application"&gt;&lt;code&gt;application&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#directory"&gt;&lt;code&gt;directory&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#document"&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#feed"&gt;&lt;code&gt;feed&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#grid"&gt;&lt;code&gt;grid&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#gridcell"&gt;&lt;code&gt;gridcell&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#group"&gt;&lt;code&gt;group&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#log"&gt;&lt;code&gt;log&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#marquee"&gt;&lt;code&gt;marquee&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#menu"&gt;&lt;code&gt;menu&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#menubar"&gt;&lt;code&gt;menubar&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#menuitemcheckbox"&gt;&lt;code&gt;menuitemcheckbox&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#menuitemradio"&gt;&lt;code&gt;menuitemradio&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#none"&gt;&lt;code&gt;none&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#note"&gt;&lt;code&gt;note&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#presentation"&gt;&lt;code&gt;presentation&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#scrollbar"&gt;&lt;code&gt;scrollbar&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#search"&gt;&lt;code&gt;search&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#status"&gt;&lt;code&gt;status&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#switch"&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#tab"&gt;&lt;code&gt;tab&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#tablist"&gt;&lt;code&gt;tablist&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#tabpanel"&gt;&lt;code&gt;tabpanel&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#timer"&gt;&lt;code&gt;timer&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#toolbar"&gt;&lt;code&gt;toolbar&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#tooltip"&gt;&lt;code&gt;tooltip&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#tree"&gt;&lt;code&gt;tree&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#treegrid"&gt;&lt;code&gt;treegrid&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#treeitem"&gt;&lt;code&gt;treeitem&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#estados-e-propriedades-aria-atributos-aria"&gt;
  &lt;/a&gt;
  Estados e propriedades ARIA (atributos aria-*)
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-activedescendant"&gt;&lt;code&gt;aria-activedescendant&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-atomic"&gt;&lt;code&gt;aria-atomic&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-busy"&gt;&lt;code&gt;aria-busy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-controls"&gt;&lt;code&gt;aria-controls&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-describedby"&gt;&lt;code&gt;aria-describedby&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-dropeffect"&gt;&lt;code&gt;aria-dropeffect&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-expanded"&gt;&lt;code&gt;aria-expanded&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-flowto"&gt;&lt;code&gt;aria-flowto&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-grabbed"&gt;&lt;code&gt;aria-grabbed&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-haspopup"&gt;&lt;code&gt;aria-haspopup&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-hidden"&gt;&lt;code&gt;aria-hidden&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-label"&gt;&lt;code&gt;aria-label&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-labelledby"&gt;&lt;code&gt;aria-labelledby&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-level"&gt;&lt;code&gt;aria-level&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-live"&gt;&lt;code&gt;aria-live&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-orientation"&gt;&lt;code&gt;aria-orientation&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-owns"&gt;&lt;code&gt;aria-owns&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-posinset"&gt;&lt;code&gt;aria-posinset&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-pressed"&gt;&lt;code&gt;aria-pressed&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-relevant"&gt;&lt;code&gt;aria-relevant&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-setsize"&gt;&lt;code&gt;aria-setsize&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-sort"&gt;&lt;code&gt;aria-sort&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#refer%C3%AAncias"&gt;
  &lt;/a&gt;
  ReferÃªncias
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.w3.org/WAI/"&gt;Iniciativa de Acessibilidade Web (WAI) do W3C&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/"&gt;Accessible Rich Internet Applications (WAI-ARIA) 1.1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.w3.org/TR/wai-aria-practices/"&gt;WAI-ARIA Authoring Practices 1.1&lt;/a&gt;&lt;/p&gt;

</description>
      <category>a11y</category>
    </item>
  </channel>
</rss>
