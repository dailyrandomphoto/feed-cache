<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>3 Lessons from React that can make you a better Svelte Developer</title>
      <author>Ryan Carniato</author>
      <pubDate>Thu, 22 Jul 2021 18:01:14 +0000</pubDate>
      <link>https://dev.to/this-is-learning/3-lessons-from-react-that-can-make-you-a-better-svelte-developer-23c4</link>
      <guid>https://dev.to/this-is-learning/3-lessons-from-react-that-can-make-you-a-better-svelte-developer-23c4</guid>
      <description>&lt;p&gt;Svelte is an amazing JavaScript framework that has been getting a lot of attention the last year. While it has been around since late 2016 it has finally passed the tipping point where there are a critical mass of developers enthusiastic about incorporating Svelte in their projects.&lt;/p&gt;

&lt;p&gt;What this means is we are seeing a lot of new developers trying Svelte for the first time as their first framework, and even more coming from having used other frameworks in the past.&lt;/p&gt;

&lt;p&gt;At a time like this there is a lot to be excited about. Svelte offers a shiny coat of paint on the tried and true patterns of frontend. However, we shouldn't be looking at this as an opportunity to throw out the baby with the bath water. There are learnt best practices and patterns from other frameworks that are incredibly important that may have not reached into Svelte vernacular but are every bit as relevant.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-keys-on-each"&gt;
  &lt;/a&gt;
  1. Keys on {#each}
&lt;/h2&gt;

&lt;p&gt;I've seen some talk about how keys are suddenly not needed on loops when moving to Svelte. This is of course completely unfounded. Svelte might not nag on you like React but not including them has exactly the same impact as it does in React. Svelte's implementation is equivalent to just muting those warnings.&lt;/p&gt;

&lt;p&gt;Why is React so insistent:&lt;br&gt;
&lt;a href="https://www.stefankrause.net/wp/?p=342"&gt;Keyed vs Non-Keyed&lt;/a&gt;&lt;br&gt;
&lt;a href="https://robinpokorny.medium.com/index-as-a-key-is-an-anti-pattern-e0349aece318#.qgzvk154k"&gt;Index as a Key is an Anti-Pattern&lt;/a&gt;&lt;br&gt;
&lt;a href="https://vuejs.org/v2/guide/list.html#Maintaining-State"&gt;Maintaining State&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Honestly, the list goes on. The problem boils down to any scenario where the DOM can hold nested state like forms, animations, 3rd party widgets, webcomponents, etc.. there is potential for inconsistent state and state corruption. Luckily adding a key to Svelte is so easy:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{#each things as thing (thing.id)}
  &amp;lt;Thing name={thing.name}/&amp;gt;
{/each}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, keys aren't needed in every scenario but if you are writing general purpose libraries and components you should definitely as least support keyed iteration. The reason is that once you opt out of keying you've opted out all descendants. Any future changes or potential hiccups might be related to something further up in the hierarchy that you aren't even accounting for.&lt;/p&gt;

&lt;p&gt;Every framework author knows this but it is sometimes underplayed in docs for ease of onboarding. But this is an important idea that is omni-present in React and understanding it will help you be a better Svelte developer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-single-value-stores-dont-scale"&gt;
  &lt;/a&gt;
  2. Single Value Stores don't Scale
&lt;/h2&gt;

&lt;p&gt;That is probably pretty obvious and Svelte's Store mechanism is very simple and powerful. In fact you can do pretty much anything with it. You can store a single value, jam a reducer in it, or even a state machine.&lt;/p&gt;

&lt;p&gt;But a single store is based off a single set of subscriptions. Every component that listens to that store triggers an update on any and every change to that store. This does not scale. There is also considerations around synchronization costs when distributed stores need to keep in sync with each other. Not all state needs to go in a single store but there is definitely a balance.&lt;/p&gt;

&lt;p&gt;It is the motivation for things like Selectors and Normalized forms in Redux, and complicated boilerplate around the Connect Higher Order Component. Or why Vue and MobX use proxies to track individual updates. Svelte Stores do not solve this problem alone and re-introducing this when the time is right will bring along a lot of the familiar boilerplate.&lt;/p&gt;

&lt;p&gt;It is really convenient that there is such a simple out of the box solution already present. Most Reactive frameworks actually do come with a reactive atom solution built in, like Vue's &lt;code&gt;ref&lt;/code&gt;, but interestingly enough it is not usually their recommended path for stores, based on how quickly it is outscaled.&lt;/p&gt;

&lt;p&gt;So this is a good thing to keep in mind as you grow your Svelte apps and are looking for data architecture wins on performance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-immutable-interfaces"&gt;
  &lt;/a&gt;
  3. Immutable Interfaces
&lt;/h2&gt;

&lt;p&gt;But Svelte just lets you assign values. Yes. I don't mean making everything immutable. The challenge of mutable data structures is once they leave the scope in which they are defined it is hard to know what to expect. The classic:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;someData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;someFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;someData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// do we know this is even true&lt;/span&gt;
&lt;span class="nx"&gt;someData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For all we know &lt;code&gt;value&lt;/code&gt; isn't even defined object anymore. You see this time and time again in system architecture the importance of providing read only interface with explicit setters. Using things like events or commands with a dispatch function. Even mutable reactive data stores like MobX recommend using Actions and have a strict mode to prevent writes except for where they are intended. In a reactive system this is doubly important as a change to some value can have cascading effects elsewhere in your app.&lt;/p&gt;

&lt;p&gt;Luckily Svelte compiler has some built-in protection. Other than using an explicit bind syntax it is actually difficult to pass writable reactive values out of your template. Svelte's &lt;code&gt;let&lt;/code&gt; variables are basically keyed to the component and can't escape the template, and Svelte's Stores are built using explicit syntax.&lt;/p&gt;

&lt;p&gt;So most of this comes down to understanding the repercussions of when to bind and not and how to design your stores as your application grows. Often explicit setters or using events increases code clarity at an application level and improves modularity. But it even is good model for explaining the need to assign arrays to update them. Immutable changes on &lt;code&gt;let&lt;/code&gt; variables work without any inconsistency.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Svelte has done an amazing job of making learning a new Framework fun and easy. It also has all the tools needed to implement the best practices to create applications that scale. Just remember similar to moving to live in a new country, while the culture and traditions might be a bit different, the same physical laws of nature apply.&lt;/p&gt;

&lt;p&gt;The same tools and patterns you learned in other frameworks are just as important now as ever. And while we might sometimes not like the boilerplate these things exist for good reason. Accepting this is the first step in becoming a next-level Svelte developer.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>svelte</category>
      <category>react</category>
    </item>
    <item>
      <title>Best Web Development IDE's</title>
      <author>Excalizan</author>
      <pubDate>Thu, 22 Jul 2021 17:43:52 +0000</pubDate>
      <link>https://dev.to/excalizan/best-web-development-ide-s-g67</link>
      <guid>https://dev.to/excalizan/best-web-development-ide-s-g67</guid>
      <description>&lt;p&gt;Hello! I am Excalizan and its my first post. I need help with some web development IDE's. I was originally using VS Code but its broken now. It doesn't auto-close brackets and doesn't highlight my code properly for any language. Currently I am using PyCharm and WebStorm but you know WebStorm is not free. I am using the 30 days trial now but it won't be enough in the future. That's why I need your help. If you can comment down your prefered free web development IDE's, I will apprichate it. Thanks!&lt;/p&gt;

</description>
      <category>help</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>html</category>
    </item>
    <item>
      <title>Discussing Bloom Filters</title>
      <author>Akarshan Gandotra</author>
      <pubDate>Thu, 22 Jul 2021 17:26:52 +0000</pubDate>
      <link>https://dev.to/akarshan96/discussing-bloom-filters-3ee3</link>
      <guid>https://dev.to/akarshan96/discussing-bloom-filters-3ee3</guid>
      <description>&lt;p&gt;Let's start this blog by discussing a few scenarios and analyzing the search algorithms.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scenario-1"&gt;
  &lt;/a&gt;
  Scenario 1
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HOAqsSQV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/s34gzsyxtnyfth1jd7vb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HOAqsSQV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/s34gzsyxtnyfth1jd7vb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
This is the classic case of the use of Bloom Filter. For instance, you are creating a new username for Instagram and suddenly it flashes 'this username is already being taken up'. This happens in a fraction of a second. But give it a thought, how it can read millions of record in the database to search for the name in such a short time. The first thought pops up is using search algorithms. But the &lt;strong&gt;linear search&lt;/strong&gt; is not efficient enough to pull the results from the database that fast. On the other hand, &lt;strong&gt;Binary search&lt;/strong&gt; comes with a restriction that all the user records are stored alphabetically and also not accurate when dealing with words. So, Instagram must be using Bloom Filter to achieve this.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scenario-2"&gt;
  &lt;/a&gt;
  Scenario 2
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KqJoyC06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/wcnjvr17w1mqsycscrgv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KqJoyC06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/wcnjvr17w1mqsycscrgv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Social media sites generate so much content each second and one of it's most awesome feature is of it is that we generally don't see the same content (posts, stories, etc.) again and again. This means these sites maintain a record of the content that is already viewed by the user. &lt;br&gt;
Now let's wonder the ways they can achieve this. One is to store the content accessed by the user in the database and continuously query it to check if the content is visited by the user before. This is not both time and space-efficient since the application needs to maintain a huge amount of data per user and also iterate through it. To make the process more efficient, Bloom Filter is maintained for each user. Both &lt;strong&gt;Medium&lt;/strong&gt; and &lt;strong&gt;Quora&lt;/strong&gt; use this to solve the above problem.&lt;/p&gt;

&lt;p&gt;We discussed the scenarios where we can overcome space and time complexities with the help Bloom Filters. Now let's understand what is Bloom Filter.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#explaining-bloom-filter"&gt;
  &lt;/a&gt;
  Explaining Bloom Filter
&lt;/h3&gt;

&lt;p&gt;Bloom Filter is a &lt;strong&gt;probabilistic&lt;/strong&gt; data structure. By probabilistic it means this data structure can the likelihood of an element in a set. &lt;br&gt;
Bloom Filter generates &lt;strong&gt;False Positive&lt;/strong&gt; results which mean it tells if an element is not in a set but isn't sure about if it in the set.  It tells either "possibly in the set" or "definitely not in set". Let's demystify it a little bit.&lt;br&gt;
Bloom Filter is a bit array of fixed length. The value of a bit either can be 1 or 0. This bit array is initialized with all bits set to 0. When an element needs to be added, it is passed through a no. of hash functions and the result of each hash function becomes indices of bit array which are then set to 1.&lt;/p&gt;

&lt;p&gt;Let's say we have a bit array of length 10.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vs0WUmSo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzneanbep7fkox29fb1i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vs0WUmSo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzneanbep7fkox29fb1i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's say we are using 2 hash functions h1 and h2. We receive 2 strings "apple" and "orange".&lt;/p&gt;

&lt;p&gt;Suppose, &lt;br&gt;
h1("apple") % 10 = 3&lt;br&gt;
h2("apple") % 10 = 7&lt;/p&gt;

&lt;p&gt;So we will set 3rd and 7th index in array as 1.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m2BZ3lFR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/scodr5x2bissjhgfaynq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m2BZ3lFR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/scodr5x2bissjhgfaynq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For string "orange", suppose&lt;br&gt;
h1("orange") % 10 = 2&lt;br&gt;
h2("orange") % 10 = 9&lt;/p&gt;

&lt;p&gt;Looking at the current array we can see 2nd and 9th are 0 means no orange string never received otherwise the bit at those index would be 1.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--goomg-B4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kqmc11sxehvgm6u8rdkp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goomg-B4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kqmc11sxehvgm6u8rdkp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's take another example,&lt;br&gt;
We receive "pear" string and suppose &lt;br&gt;
h1("pear") % 10 = 2&lt;br&gt;
h2("pear") % 10 = 5&lt;/p&gt;

&lt;p&gt;So, hash function h1 for "orange" already set bit at index 2 as 1. But still since we also get index 5 which currently 0, it means we didn't ever receive or stored "pear" before.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xAwU1Ehn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m5zxudzi2mftc6769v8j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xAwU1Ehn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m5zxudzi2mftc6769v8j.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now if we get "apple" again,&lt;br&gt;
h1("apple") % 10 = 2 and h2("apple") % 10 = 9, Since both of these index already set as 1, we do know it already exists in the set.&lt;/p&gt;

&lt;p&gt;There might be a chance where we get a string even doesn't exist in the set or the storage have indexes received from hash functions as 1 in the bit array. We can certainly reduce the probability of the collisions by &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;increasing no. of hash function&lt;/li&gt;
&lt;li&gt;increasing length of bit array&lt;/li&gt;
&lt;li&gt;both 1. and 2.
This totally depends the frequency of data we receive for which we have to implement bloom filter.
If we need to calculate the size of bit array or the size of bit array based on data we receive, we can do using following formulas&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;m = - (n lnP)/(ln2)^2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;k = (m/n) * ln2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;where m is size of bit array,&lt;br&gt;
n is expected number of elements,&lt;br&gt;
P is desired false positive probability,&lt;br&gt;
k is no. of hash functions.&lt;/p&gt;

</description>
      <category>bloom</category>
      <category>filter</category>
      <category>datastructure</category>
    </item>
    <item>
      <title>API vs. Microservices: A Beginners Guide to Understand Them</title>
      <author>Jaden Baptista</author>
      <pubDate>Thu, 22 Jul 2021 17:24:56 +0000</pubDate>
      <link>https://dev.to/jadenguitarman/api-vs-microservices-a-beginners-guide-to-understand-them-49fn</link>
      <guid>https://dev.to/jadenguitarman/api-vs-microservices-a-beginners-guide-to-understand-them-49fn</guid>
      <description>&lt;p&gt;Not so long ago, the technology used to build a website was quite simple.&lt;/p&gt;

&lt;p&gt;HTML, CSS, and JavaScript were all you needed in the good old days. And most of the time, you didn’t even need the last one!&lt;/p&gt;

&lt;p&gt;But now, things are getting a bit more complex. You have all these new techniques and technology you need to keep track of. While they might be confusing at first, learning about them can help make us more productive developers.&lt;/p&gt;

&lt;p&gt;One of these concepts we hear a lot about nowadays is the microservice architecture. It caused quite a stir, especially recently, because it's not usually explained well...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hKHOS28p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://snipcart.com/media/205920/confused.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hKHOS28p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://snipcart.com/media/205920/confused.gif" alt="Confused"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even experienced developers have no idea what microservices are, and that's alright. Usually, when asked about what they think microservices are, most web developers are going to say something like:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Doesn't that have something to do with APIs?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The answer is &lt;em&gt;kind of&lt;/em&gt;. In the Jamstack world, we often talk about them as the same thing, but really they're complementary concepts. Learning about each idea's details can help us, especially when we only need one between APIs vs. microservices. &lt;/p&gt;

&lt;p&gt;Let's explore these two concepts. We'll start with the dictionary definitions, but don't worry. I'll move past the janky jargon and get to the meat of it in a bit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-api-and-microservice"&gt;
  &lt;/a&gt;
  What are API and microservice?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;API&lt;/strong&gt; stands for &lt;strong&gt;A&lt;/strong&gt;pplication &lt;strong&gt;P&lt;/strong&gt;rogramming &lt;strong&gt;I&lt;/strong&gt;nterface. According to &lt;a href="https://en.wikipedia.org/wiki/API"&gt;Wikipedia&lt;/a&gt;, an API "defines interactions between multiple software applications. It defines the kinds of calls or requests that can be made, how to make them, the data formats that should be used, the conventions to follow, etc." In the web development world, we most often use APIs that can be accessed through the Internet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Microservices&lt;/strong&gt; are, according to &lt;a href="https://microservices.io/"&gt;microservices.io&lt;/a&gt;, pieces of "an architectural style that structures an application as a collection of services that are highly maintainable and testable, loosely coupled, independently deployable, organized around business capabilities, [and] owned by a small team."&lt;/p&gt;

&lt;p&gt;These definitions might seem a bit obtuse, so here's how I would define them:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://snipcart.com/blog/integrating-apis-introduction"&gt;&lt;strong&gt;API&lt;/strong&gt;&lt;/a&gt; stands for &lt;strong&gt;A&lt;/strong&gt;pplication &lt;strong&gt;P&lt;/strong&gt;rogramming &lt;strong&gt;I&lt;/strong&gt;nterface. APIs define how two pieces of software can connect and talk to each other. If your application were a big company, your API's job would be to keep in touch with external parties (customers or company partners, for example). Most APIs are organized around some standard, like &lt;a href="https://restfulapi.net/"&gt;REST&lt;/a&gt; or &lt;a href="https://graphql.org/"&gt;GraphQL&lt;/a&gt;, so that everybody knows how to use them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Microservices&lt;/strong&gt; are pieces of software (often just isolated functions) that do a single, tiny, independent part of a bigger application. If your application were a big company, each employee would be a microservice, each playing their own specific and small role, working alongside but independently from their coworkers. This lets you make changes to individual microservices without affecting the rest of the application. In a big company replacing or retasking one employee in a large team would probably not affect the rest of the company all that much.&lt;/p&gt;

&lt;p&gt;It's the evolution of the monolith architecture. Instead of having one block composing the whole application, every component is divided into smaller building blocks.&lt;/p&gt;

&lt;p&gt;Put like that, does it make a bit more sense how they're different and how they can work together?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-apis-and-microservices-actually-means-irl"&gt;
  &lt;/a&gt;
  What APIs and microservices actually means IRL
&lt;/h2&gt;

&lt;p&gt;Let's dive into a more practical use case to help you understand furthermore.&lt;/p&gt;

&lt;p&gt;Say I've got this completely original payment processor service that I'm calling Tripe (you know, because it's &lt;a href="https://dictionary.cambridge.org/us/dictionary/english/tripe#cald4-us-1-2"&gt;a silly idea&lt;/a&gt;, not because I got inspired by any existing company in particular 😉). &lt;/p&gt;

&lt;p&gt;There's a ton of little bits of functionality that this application is going to need. Here are some off the top of my head:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reading from the database&lt;/li&gt;
&lt;li&gt;Inserting into or updating the database&lt;/li&gt;
&lt;li&gt;Creating invoice PDFs&lt;/li&gt;
&lt;li&gt;Contacting the banks&lt;/li&gt;
&lt;li&gt;Scheduling a recurring task for subscriptions&lt;/li&gt;
&lt;li&gt;Running an actual transaction&lt;/li&gt;
&lt;li&gt;Sending emails&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All these little pieces of functionality are given their own functions and are all maintained separately. Boom—that's the microservice architecture in a nutshell. All of those individual tasks are microservices. That makes debugging way easier, too, since you can narrow down the problem to a single function almost immediately. And that's awesome if you're like me and hate debugging: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8JyMSQA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205922/debugging.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8JyMSQA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205922/debugging.png" alt="Debugging"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's go further with this. Tripe will probably let their users trigger some of these functions, right? Creating invoices, customers profile, subscriptions, charges, and returns are five actions the user can start, and all of them would use some of the microservices mentioned above. So the solution here would be to create five new microservices, one for each of the new actions we're exposing to the outside world.&lt;/p&gt;

&lt;p&gt;For example, the new invoicing microservice would call the microservice reading the database, then the one that makes the PDFs, and then the one sending emails. You could think of it in terms of that analogy I gave earlier about the big company; you could have some employees whose whole job is to collect work done by their coworkers to present to people outside the company. Essentially we're creating a set of microservices that collect work done by other microservices and deliver it to users across the Internet. They only exist to &lt;strong&gt;i&lt;/strong&gt;nterface between your &lt;strong&gt;a&lt;/strong&gt;pplication and the outside world via &lt;strong&gt;p&lt;/strong&gt;rogrammed HTTP requests. &lt;/p&gt;

&lt;p&gt;Sound familiar? Well, it's because that's an &lt;strong&gt;API&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Quick sidenote: An API is technically how any two programs (including microservices themselves) communicate, but in web development, we usually mean an HTTP-facing API. An API follows a protocol like REST or GraphQL to expose data and functionality to the wider Internet. When I talk about an API in this article, that's what I'm referring to, though it's useful to know that the definition is pretty wide.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Those five microservices let users directly access Tripe's API. Not every microservice has to be part of an API, just like how not every employee needs to be part of the team communicating with customers. Many employees just do internal tasks and help out the customer-facing workers, just like how many microservices only do internal tasks or help out the API functions. There are also many ways to make an API without using microservices, so these technologies are more complementary than competing.&lt;/p&gt;

&lt;p&gt;Let's make this more visual with the helping hand of a diagram! &lt;/p&gt;

&lt;p&gt;Tripe's architecture would look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d1kUpa4F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205919/tripe_architecture.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d1kUpa4F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205919/tripe_architecture.jpeg" alt="APIs vs Microservices Tripe_Architecture.jpeg"&gt;&lt;/a&gt;&lt;/p&gt; &lt;em&gt;Our totally fictional payment processor Tripe's totally fictional architecture.&lt;br&gt;
Note that the microservices are squares, and the third parties (customers, banks, etc.) are circular.&lt;/em&gt; 

&lt;p&gt;This looks a little complex on the surface, but it's a payment processor, after all. I wouldn't really be comfortable giving my credit card information to anything simpler than this...&lt;/p&gt;

&lt;p&gt;Let's go through the columns one by one. On the far left, we have Tripe's users. They only have access to the microservices in the External API column. Combined, the endpoints in the second column (External API) make up the API. They're the only microservices with a defined way to talk to the users (through specific JSON objects set by the API docs, for example). They individually accomplish tasks independently and use some other microservices (in the Business Logic column) to do tasks users aren't allowed to trigger directly. Most business logic functions also call each other, demonstrating that the whole Tripe application is broken down into its tiniest, reusable, isolated, independent pieces.&lt;/p&gt;

&lt;p&gt;Building your application with microservices reduces complexity and makes maintenance a lot easier because you can edit these little pieces individually. It's like building a site out of Legos: if you don't like one of them, you can just replace it and leave the rest of the site intact. That means your technical debt goes down to almost nothing, and if you keep with this approach, you'll never run into one of those lose-lose architecture dilemmas that we all hate.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PYwpAgYi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205923/techdept.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PYwpAgYi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205923/techdept.png" alt="Technical dept"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#microservices-and-apis-realworld-applications"&gt;
  &lt;/a&gt;
  Microservices and APIs real-world applications
&lt;/h2&gt;

&lt;p&gt;Our Tripe graph might look pretty complex because of all the lines, but it was relatively simple when matched up against the same graph for bigger companies like Amazon or Netflix:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MiLlSeBA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205916/amazonnetflix.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MiLlSeBA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205916/amazonnetflix.png" alt="Amazon &amp;amp; Netflix Architecture Graph"&gt;&lt;/a&gt;&lt;/p&gt; &lt;em&gt;Microservice node graphs for Amazon and Netflix. Source: &lt;a href="https://www.divante.com/blog/10-companies-that-implemented-the-microservice-architecture-and-paved-the-way-for-others"&gt;Divante&lt;/a&gt;&lt;/em&gt; 

&lt;p&gt;The structure starts to get a bit unwieldy to look at, but it's far easier to work with. The article where the image is taking from jokes that the Amazon microservice node graph "looks almost like a Death Star, but is way more powerful." &lt;/p&gt;

&lt;p&gt;When you think about it, this architecture makes perfect sense for big companies like Amazon and Netflix. Their developers don't have to edit the entire codebase or redeploy the entire site when they want to make an update. Netflix's engineers, for example, are improving their product 24/7. Imagine if they had to take down the site for just a moment whenever they wanted an internal feature added. Netflix would be down constantly; bye-bye binge-watching! 😧&lt;/p&gt;

&lt;p&gt;Instead, they only have to work with one manageable chunk of code at a time, just one of the dots on that graph.&lt;/p&gt;

&lt;p&gt;In contrast, think about how few of the nodes on Netflix’s graph of microservices are actually meant to communicate with the outside world. &lt;a href="https://netflixtechblog.com/engineering-trade-offs-and-the-netflix-api-re-architecture-64f122b277dd"&gt;Netflix has been revising their API lately&lt;/a&gt; so I couldn’t figure out exactly how many of the nodes are facing outward. However, it’s still quite a small amount compared to the number of microservices they actually use internally. Take this image, for example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z97P31DJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205917/api_microservices.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z97P31DJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205917/api_microservices.png" alt="APIs and Microservices"&gt;&lt;/a&gt;&lt;/p&gt; &lt;em&gt;&lt;a href="https://netflixtechblog.com/engineering-trade-offs-and-the-netflix-api-re-architecture-64f122b277dd"&gt;Source&lt;/a&gt;&lt;/em&gt; 

&lt;p&gt;Here's the accompanying explanation:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Suppose a user clicks the "play" button for Stranger Things Episode 1 on their mobile phone. For playback to begin, the mobile phone sends a "play" request to the API. The API, in turn, calls several microservices under the hood. Some of these calls can be made in parallel because they don’t depend on each other. Others have to be sequenced in a specific order. The API contains all the logic to sequence and parallelize the calls as necessary. The device, in turn, doesn’t need to know anything about the orchestration that goes on under the hood when the customer clicks "play".&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Interesting, right? I want to highlight one phrase in particular: "The API contains all the logic to sequence and parallelize the calls as necessary." This means that the client (person watching Netflix)&amp;lt;!-- Is it the client you're referring to here? --&amp;gt; called the API endpoint when they pressed the "play" button, which is, in itself, a microservice.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Side note: as I understand it, the API Netflix refers to here isn't available to the public. Remember, an API is just a defined way for "two pieces of software to connect and talk to each other". Those "two pieces of software" are, in this case, Netflix's backend and Netflix's frontend. It's still an API even if you and I can't use it over the Internet because that interaction between the frontend and the backend is given a structure and rules to follow. This is an important note to remember because it means that you've probably created more APIs than you realize in your career. Anytime we internally connect two services and give them a way to talk to one another, we're making one. We should be cognizant of that because it gives us a chance to think through our architecture before it gets out of hand.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr-theyre-complimentary"&gt;
  &lt;/a&gt;
  TLDR; They're complimentary.
&lt;/h2&gt;

&lt;p&gt;What's the conclusion? APIs can be made up, wholly or partially, out of microservices. Microservices can be used for a lot more, though. The original definition (the really wordy, nerdy one) called microservices pieces of "an architectural style". The whole application, business logic and all, can be broken down into tiny, reusable, single-purpose chunks of code, and that's the microservice architecture.&lt;/p&gt;

&lt;p&gt;Here's a Venn diagram if you'd like another way to visualize it. As you can see, microservices can be an API (the overlapping of the circles), but APIs aren't necessarily a microservice.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V_pKoCrQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205918/blank_diagram.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V_pKoCrQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205918/blank_diagram.png" alt="APIs vs. Microservices Diagram.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remember how I said earlier that some APIs are made up of microservices (like our fictional Tripe API), but they don't always have to work together? Some microservices aren't part of APIs (the right section on the Venn diagram), such as the business logic in our Tripe example, because they don't have to be accessible to the outside world. On the other hand, there are a &lt;em&gt;ton&lt;/em&gt; of ways to make an API, and most of them don't involve microservices. Most of the web backends made with the traditional backend languages (PHP, Ruby, Java, etc.) are &lt;em&gt;monolithic&lt;/em&gt;, a.k.a. not made of microservices. Even backends made with JavaScript can be monolithic if you don't separate all the functionality into their smallest pieces.&lt;/p&gt;

&lt;p&gt;APIs and microservices are now massive parts of the modern web development process. We can't move forward without them. So if you're making your way past the traditional monolithic web architecture and/or want to learn more about how these newer technologies work together, here are some more links for additional education:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.divante.com/blog/10-companies-that-implemented-the-microservice-architecture-and-paved-the-way-for-others"&gt;10 companies that implemented the microservice architecture and paved the way for others&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://netflixtechblog.com/engineering-trade-offs-and-the-netflix-api-re-architecture-64f122b277dd"&gt;Engineering Trade-Offs and The Netflix API Re-Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sitepoint.com/jamstack-tools-services-apis/"&gt;100 Jamstack Tools, APIs &amp;amp; Services to Power Your Sites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://snipcart.com/blog/jamstack"&gt;New to Jamstack? Everything You Need to Know to Get Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://snipcart.com/blog/integrating-apis-introduction"&gt;A Beginner's Guide to APIs: How to Integrate and Use Them&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you've got any other questions, feel free to reach out to me on &lt;a href="http://twitter.com/jadenguitarman"&gt;Twitter&lt;/a&gt; or in the comments below. I'd love to hear from you!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Engineering Productivity &amp; Culture at Netflix w/ Kathryn Koehler</title>
      <author>Conor Bronsdon</author>
      <pubDate>Thu, 22 Jul 2021 16:49:51 +0000</pubDate>
      <link>https://dev.to/linearb/engineering-productivity-culture-at-netflix-w-kathryn-koehler-o9b</link>
      <guid>https://dev.to/linearb/engineering-productivity-culture-at-netflix-w-kathryn-koehler-o9b</guid>
      <description>&lt;p&gt;What is it like to work at Netflix as a developer? How do they think about culture, their customers and engineering productivity? &lt;/p&gt;

&lt;p&gt;In this incredible episode of &lt;a href="https://devinterrupted.com/podcast/engineering-productivity-culture-at-netflix/"&gt;Dev Interrupted&lt;/a&gt;, we bring in Kathryn Koehler, the Director of Productivity Engineering at Netflix, to chat about what makes Netflix so unique and why they are standardizing data-driven engineering today.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/0cQVpceM7vvzdzxeN31JMB"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Episode Highlights include:&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;How Netflix measures productivity&lt;/li&gt;
&lt;li&gt;Netflix's approach to company culture&lt;/li&gt;
&lt;li&gt;The "restaurant" approach to &lt;a href="https://linearb.io/blog/engineering-productivity/"&gt;engineering productivity&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Standardizing data-driven metrics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/9t9cmftftbs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#join-the-dev-interrupted-discord-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Join the Dev Interrupted Discord Server&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With over 1200 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.gg/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" alt="Join the Dev Interrupted Discord Community!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>engineering</category>
      <category>culture</category>
      <category>data</category>
    </item>
    <item>
      <title>How to start your open source journey with UNICEF?</title>
      <author>Rachita Saha</author>
      <pubDate>Thu, 22 Jul 2021 16:31:58 +0000</pubDate>
      <link>https://dev.to/rachita_saha/how-to-start-your-open-source-journey-with-unicef-2hd</link>
      <guid>https://dev.to/rachita_saha/how-to-start-your-open-source-journey-with-unicef-2hd</guid>
      <description>&lt;p&gt;If you are looking for ways to start your open source journey and would like to use your technical skills to contribute towards achieving sustainable development, here’s an article you might find useful.&lt;/p&gt;

&lt;p&gt;All you need to contribute to UNICEF’s open source projects are working knowledge of Git, GitHub, web development, and enough determination to make that first pull request! The feeling of fulfillment you will receive when the first PR gets merged will keep you motivated to continue learning and contributing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-digital-public-goods"&gt;
  &lt;/a&gt;
  💻 What are Digital Public Goods?
&lt;/h2&gt;

&lt;p&gt;In alignment with the UN Secretary-General’s 2020 &lt;a href="https://www.un.org/en/content/digital-cooperation-roadmap/"&gt;Roadmap for Digital Cooperation&lt;/a&gt;, Digital Public Goods (DPGs) are defined as &lt;em&gt;“open source software, open data, open AI models, open standards, and open content that adhere to privacy and other applicable best practices, do no harm and are of high relevance for attaining the UN’s 2030 Sustainable Development Goals (SDGs)”.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Many types of digital technologies, data, and content – from open data to apps, visualization tools to educational curricula – could accelerate the achievement of the SDGs. However, it is only if they are &lt;strong&gt;freely and openly available, with minimal restrictions on how they can be distributed, adapted, and reused&lt;/strong&gt; that we can think of them as “digital public goods”.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-digital-public-goods-alliance"&gt;
  &lt;/a&gt;
  🏢 What is the Digital Public Goods Alliance?
&lt;/h2&gt;

&lt;p&gt;UNICEF along with the Governments of Norway and Sierra Leone, and the India-based think tank iSPIRT have jointly established the &lt;a href="https://digitalpublicgoods.net/who-we-are/"&gt;Digital Public Goods Alliance (DPGA)&lt;/a&gt;, a multi-stakeholder initiative to accelerate the attainment of the SDGs in low- and middle-income countries by facilitating the discovery, development, use of, and investment in digital public goods. The DPGA is an effort to convene a network of partners from different sectors that will contribute to the identification, support, scale-up, and use of software, data, and algorithms that can advance humanity. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-you-contribute"&gt;
  &lt;/a&gt;
  👩‍💻 How can you contribute?
&lt;/h2&gt;

&lt;p&gt;There are a few projects of the DPGA that you can contribute to, but instead of jumping straight into the code base, I would recommend the following approach to best understand the goals of the DPGA and make meaningful contributions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nominate-a-dpg"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/unicef/publicgoods-candidates/issues/66"&gt;Nominate a DPG&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This process involves identifying open source solutions that &lt;br&gt;
contribute to an equitable world and adhere to the &lt;a href="https://github.com/DPGAlliance/DPGStandard/blob/master/standard.md"&gt;DPG Standard&lt;/a&gt;. The &lt;a href="https://github.com/unicef/publicgoods-candidates"&gt;unicef/publicgoods-candidates&lt;/a&gt; repository is used to manage the process of adding nominees for consideration as Digital Global Public Goods. &lt;/p&gt;

&lt;p&gt;While you can easily make a contribution through the &lt;a href="https://digitalpublicgoods.net/public-goods/"&gt;submission form&lt;/a&gt;, I would strongly suggest opening a pull request, making sure it passes the CI build, and getting it merged. The instructions for nominating DPGs through both methods are mentioned very clearly in the &lt;a href="https://github.com/unicef/publicgoods-candidates/blob/master/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Go ahead and make that first contribution!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#validate-dpg-submissions"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/unicef/publicgoods-candidates/issues/178"&gt;Validate DPG submissions&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;You can participate by reviewing open source projects against the &lt;a href="https://digitalpublicgoods.net/standard/"&gt;Digital Public Goods Standard&lt;/a&gt; with the ultimate goal of determining if a project qualifies as a DPG. &lt;/p&gt;

&lt;p&gt;This community sourcing exercise will give you the opportunity to delve into some of the largest up-and-coming open source projects, understand their licenses and documentation, and how they’re designing for best practices, standards, privacy, and more. &lt;/p&gt;

&lt;p&gt;By participating, you’ll get a better understanding of open &lt;br&gt;
projects that are making a difference in the world, particularly those that are advancing practical solutions to help achieve the SDGs. You will also join a growing number of innovators working on Technology for Development (T4D). &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solve-issues-in-the-various-repositories"&gt;
  &lt;/a&gt;
  Solve issues in the various repositories
&lt;/h3&gt;

&lt;p&gt;The next step is to take a look at the various issues listed on UNICEF’s GitHub repositories. When you find an issue that interests you, drop a comment asking to be assigned to it. If you don’t understand the issue entirely, ask for help through comments. Below is a list of the various UNICEF repositories &lt;br&gt;
you can contribute to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/unicef/publicgoods-candidates"&gt;https://github.com/unicef/publicgoods-candidates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unicef/publicgoods-scripts"&gt;https://github.com/unicef/publicgoods-scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unicef/publicgoods-wordpress"&gt;https://github.com/unicef/publicgoods-wordpress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lacabra/submission-digitalpublicgoods"&gt;https://github.com/lacabra/submission-digitalpublicgoods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lacabra/validate-digitalpublicgoods"&gt;https://github.com/lacabra/validate-digitalpublicgoods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Before diving into the solutions, I would strongly recommend you to go through the documentation thoroughly and set up the project on your local machine. Then, move to the &lt;code&gt;Issues&lt;/code&gt; tab on any repository, find an issue with the tag &lt;code&gt;good first issue&lt;/code&gt; and try solving it. If you don’t find any issues that interest you, you can create a new one! You just need to take a look at the code and try to identify bugs or make suggestions to improve the content, design, documentation, etc. &lt;/p&gt;

&lt;p&gt;The large codebase might appear intimidating at first, but it is not as hard as it appears. I was a beginner too when I started contributing, and I understand that it takes some effort to navigate through it all, but the satisfaction of seeing your changes merged into the repository, ultimately contributing towards the good of the public, is absolutely worth the effort.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  📝 Conclusion
&lt;/h2&gt;

&lt;p&gt;Open source represents an opportunity to fundamentally alter power balances in international development. UNICEF aims to harness that power through the cooperation of its many contributors, and this is your chance to be one! Being an open source contributor was one of the best learning experiences for me, and I encourage everyone to give it a try. &lt;/p&gt;

&lt;p&gt;I hope this blog helped you in some way. If you have any other questions related to the process, feel free to drop a comment below. &lt;/p&gt;

&lt;p&gt;Best of luck and happy coding! 😃&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>github</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Cloud cost reporting alone isn’t going to cut your AWS bill</title>
      <author>CAST AI</author>
      <pubDate>Thu, 22 Jul 2021 16:12:27 +0000</pubDate>
      <link>https://dev.to/castai/cloud-cost-reporting-alone-isn-t-going-to-cut-your-aws-bill-2ipa</link>
      <guid>https://dev.to/castai/cloud-cost-reporting-alone-isn-t-going-to-cut-your-aws-bill-2ipa</guid>
      <description>&lt;p&gt;As containerization rises in popularity, traditional cost optimization methods like monitoring and reporting are put to the test. &lt;/p&gt;

&lt;p&gt;Getting a detailed report of your cloud spend is just &lt;strong&gt;one side of the coin&lt;/strong&gt;. The other - and arguably more important one - is &lt;strong&gt;doing something about these findings&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Keep on reading to find out why adding automated optimization techniques to the mix makes all the difference (and generates some serious savings).&lt;/p&gt;

&lt;h2&gt;Cloud cost reporting is a must-have, there’s no doubt about it&lt;/h2&gt;

&lt;p&gt;Teams usually use Kubernetes in dynamic and multi-tenant environments. Since increasing resources is so easy, losing control over cloud spend is even easier. If left unchecked, a missed bug or architecture oversight might easily snowball into a massive expense.&lt;/p&gt;

&lt;p&gt;Consider this story:&lt;/p&gt;

&lt;p&gt;One of &lt;strong&gt;Adobe’s&lt;/strong&gt; development teams once &lt;strong&gt;burned $80,000 per day&lt;/strong&gt; because of a computing job left running on Azure. Before someone discovered it and pulled the plug, &lt;strong&gt;the bill snowballed to more than &lt;a href="https://www.teampay.co/insights/manage-cloud-costs/"&gt;half a million dollars&lt;/a&gt;&lt;/strong&gt;. One simple alert would be enough to prevent this.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;That’s why users need a solid cost reporting tool that brings them cost visibility in detailed reports and sends alerts when certain parts of the infrastructure go beyond the set thresholds. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Cost reporting is incredibly important, but like I said - it’s just one side of the cost optimization coin.&lt;/p&gt;

&lt;h2&gt;But cost reporting alone doesn’t cut the chase&lt;/h2&gt;

&lt;p&gt;You need more than cost reports to make a real difference in your setup. After all, what cost monitoring and reporting tools give you are static recommendations that require a human to implement them.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If you have a small environment, a human engineer can make it work. But think about the scale of a mid-sized company or enterprise. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Applying all the recommendations manually and on a regular basis translates into time, which translates into cost (not to mention all the lost optimization opportunities for sudden traffic spikes and such).&lt;/p&gt;

&lt;p&gt;What you need is to add &lt;strong&gt;automated cost optimization&lt;/strong&gt; to the mix.&lt;/p&gt;

&lt;p&gt;If you’re wondering how the combination of Kubernetes cost reporting and optimization works in practice, here’s a case study that shows it step by step.&lt;/p&gt;

&lt;h2&gt;How automated cost optimization helped reduce Amazon EKS costs in 15 minutes&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Wyc-kQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/WL4gQe96MxZzUmjME-U_DtSnAO5hvq9KpTU2utUhZvXWy0qqL8nTQcffz5Ff6GfQ3z_8uT-qKtlx4UDBbvivWW6k2bjnx3w09C74QYeCILFvyQHovesDw-Musp3T2BGbnuIltvh1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Wyc-kQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/WL4gQe96MxZzUmjME-U_DtSnAO5hvq9KpTU2utUhZvXWy0qqL8nTQcffz5Ff6GfQ3z_8uT-qKtlx4UDBbvivWW6k2bjnx3w09C74QYeCILFvyQHovesDw-Musp3T2BGbnuIltvh1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I provisioned an e-commerce app (&lt;a href="https://github.com/castai/examples"&gt;see it here&lt;/a&gt;) on an EKS cluster with 6 m5 nodes (2 vCPU, 8 GiB) on the Amazon EKS platform. Then, I deployed &lt;a href="https://cast.ai/eks-optimizer/"&gt;an AI engine&lt;/a&gt; to go through my application and suggest some optimizations. I got some pretty interesting recommendations in the Savings Report, so I activated the automated optimization feature.&lt;/p&gt;

&lt;p&gt;Here are the results:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Initial cluster cost: $414 / month.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Within &lt;strong&gt;15 minutes&lt;/strong&gt; after turning the automation on, the cluster cost got down to &lt;strong&gt;$207 (a 50% reduction) &lt;/strong&gt;by eliminating 3 nodes.&lt;/li&gt;
&lt;li&gt;And &lt;strong&gt;5 minutes&lt;/strong&gt; later, the solution added Spot Instances which made the cluster costs go down to &lt;strong&gt;$138 per month (a 66% reduction!)&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Here’s a more detailed take on this case study&lt;/h3&gt;

&lt;h3&gt;Step 1: Generating the Savings Report&lt;/h3&gt;

&lt;p&gt;After creating and deploying my EKS cluster, I connected it to CAST AI by creating a free account and selecting &lt;em&gt;Connect your cluster&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cFwwuQQ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/fc3rkSJxugy-Q1AyBnB3a27HN4PAVYJOJNCtNTLYF14CuWFjF2_-cMeapNRR494-dW6_O1vyjOtn8-NVJTinEUc6Z3MmVJT2iC7fEMuewQIyI5UmvTGW31j9rR8jesrPrvjRBvKK" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cFwwuQQ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/fc3rkSJxugy-Q1AyBnB3a27HN4PAVYJOJNCtNTLYF14CuWFjF2_-cMeapNRR494-dW6_O1vyjOtn8-NVJTinEUc6Z3MmVJT2iC7fEMuewQIyI5UmvTGW31j9rR8jesrPrvjRBvKK" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fRzh44KR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/oSRjPaBQifDoRwW_v1t3-9IyuI6KiFEqKv92dQWBaeG22G7JfcahK2dgmh1w6cZKLB-Aj6AT8-5F2_KBVM_bnGUWxnCj3_4z9fvh5b594uumkvPaakQvfbQkHs8OrRfNhKutVMOL" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fRzh44KR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/oSRjPaBQifDoRwW_v1t3-9IyuI6KiFEqKv92dQWBaeG22G7JfcahK2dgmh1w6cZKLB-Aj6AT8-5F2_KBVM_bnGUWxnCj3_4z9fvh5b594uumkvPaakQvfbQkHs8OrRfNhKutVMOL" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I then copied and ran the script successfully in my terminal.&lt;/p&gt;

&lt;p&gt;The CAST AI agent analyzed my EKS cluster in read-only mode and generated this Savings Report:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oOIWFeK4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/ibksdy3608iGxRkN9wEJ-KvTr4ClJWi3xuV44AJK3b28yCV8FQw9oQuKYOK70LbCOq_ro5tSNSGjWPZa89nKT5_xLDbbIx8rRK6LbZkPPXp_Rn_LqmRoVU1LSCpfaW7Oi6sm2NCB" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oOIWFeK4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/ibksdy3608iGxRkN9wEJ-KvTr4ClJWi3xuV44AJK3b28yCV8FQw9oQuKYOK70LbCOq_ro5tSNSGjWPZa89nKT5_xLDbbIx8rRK6LbZkPPXp_Rn_LqmRoVU1LSCpfaW7Oi6sm2NCB" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As it turns out, if I switched my 6 m5.large to 3 c5a.large, I could slash my bill by almost 60%. &lt;/p&gt;

&lt;p&gt;And I could get even higher savings (66.5%!) if I decided to use Spot Instances:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D_bwqt-l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/Dur8N8u7MUgcwIzcpinxLiihk2BCv36sShMGSVolYw68ZRJLlnwTZMxFo4a5TI2ThD6e0Lxg5teSTgTll0gERUwujFt4jfHmFDntaLk55AUibDIwRO46dISvaFMH8roM2oApMqeR" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D_bwqt-l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/Dur8N8u7MUgcwIzcpinxLiihk2BCv36sShMGSVolYw68ZRJLlnwTZMxFo4a5TI2ThD6e0Lxg5teSTgTll0gERUwujFt4jfHmFDntaLk55AUibDIwRO46dISvaFMH8roM2oApMqeR" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step 2: Activating the cost optimization&lt;/h3&gt;

&lt;p&gt;Turning automated optimization on made a lot of sense, so I had to grab my AWS access key ID and Secret access key, and add both to the platform. &lt;/p&gt;

&lt;p&gt;To get the access keys, I had to run this script:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---c7lc2oB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/gyvjtYMafi6cMNAb-G9wJZH1MztwY-pQxrJgCmCuLTYkNpiLJRD_znqs_6BDGEWMw0QpbWnouBKcWLvumJwUBqYQcAgat4F-R4evh97YdywQvaFmCWmECQH_brmmVdYz_NXiYCLm" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---c7lc2oB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/gyvjtYMafi6cMNAb-G9wJZH1MztwY-pQxrJgCmCuLTYkNpiLJRD_znqs_6BDGEWMw0QpbWnouBKcWLvumJwUBqYQcAgat4F-R4evh97YdywQvaFmCWmECQH_brmmVdYz_NXiYCLm" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step 3: Enabling cost policies&lt;/h3&gt;

&lt;p&gt;To achieve maximum cost savings, I turned on all the policies available in CAST AI:&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;CPU Policy: I used this policy to set the maximum budget of 200 CPUs.&lt;/li&gt;&lt;/ul&gt;

&lt;ul&gt;&lt;li&gt;Node autoscaler: Whenever I get unscheduled pods, CAST AI will start looking for a place to run them - starting with Spot Instances (if they’re Spot Instance-friendly) or On-Demand instances.&lt;/li&gt;&lt;/ul&gt;

&lt;ul&gt;&lt;li&gt;Node Deletion + Evictor: Evictor is a background process that continuously reduces the cluster to the minimum number of nodes by bin-packing pods. Once a node becomes empty, it’s instantly deleted. &lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;Step 4: Running Evictor&lt;/h3&gt;

&lt;p&gt;This is what the last policy and Evictor tool look like in action:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;One node (marked in red) is identified as a good candidate for eviction.&lt;/li&gt;
&lt;li&gt;Evictor automatically moves pods to other nodes for “bin-packing.”&lt;/li&gt;
&lt;li&gt;Once the node becomes empty, it’s deleted from the cluster.&lt;/li&gt;
&lt;li&gt;Evictor returns to step 1 and keeps on looking for other nodes that could be deleted to cut costs.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After about 10 minutes, Evictor deleted 3 nodes and left just 3 nodes running. CPUs were at a much healthier 80% rate.&lt;/p&gt;

&lt;p&gt;The cost of my cluster is now $207.36 per month - so, 50% of the initial cost ($414 per month_.&lt;/p&gt;

&lt;h3&gt;Step 5: Moving workloads to new optimized nodes&lt;/h3&gt;

&lt;p&gt;This is a more advanced and optional step where CAST AI actively replaced my current nodes with more optimized ones - for example, Spot Instances. To do that, CAST AI cordons the cluster, drains nodes, and then replaces them with more optimized nodes.&lt;/p&gt;

&lt;p&gt;So, my nodes were cordoned:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cyHD3Zwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/rkJiSSY6WiznSOo2EHu7XY5C-TMNpP53qZyQOX2UFayBkySWO3TF1ndw4Qfh8d1O0FRUlepUsrrt00xNmHuYfoBrR-IqNeYNlBZA3-F1ioCoCcDg9aFGvuHlecxzdtBQjUz3dP15" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cyHD3Zwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/rkJiSSY6WiznSOo2EHu7XY5C-TMNpP53qZyQOX2UFayBkySWO3TF1ndw4Qfh8d1O0FRUlepUsrrt00xNmHuYfoBrR-IqNeYNlBZA3-F1ioCoCcDg9aFGvuHlecxzdtBQjUz3dP15" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first two nodes were drained, and the AI engine selected the best instance type for these nodes. Here’s what I saw in my CAST AI dashboard:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S1UrJvpB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/HIUzBn-QnMHndSrzb2qATRve_a6t0YF2gN2wHVRsvq1fVfwxWEXuapwEMjn4cZdlLjko4pQ1FWaPhC_E_HxH9m8-y6FZAB1zdd_i6jY4MObMN7yi96sByIp_DGotY2pw2lhdpT99" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S1UrJvpB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/HIUzBn-QnMHndSrzb2qATRve_a6t0YF2gN2wHVRsvq1fVfwxWEXuapwEMjn4cZdlLjko4pQ1FWaPhC_E_HxH9m8-y6FZAB1zdd_i6jY4MObMN7yi96sByIp_DGotY2pw2lhdpT99" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, my cluster is now running on 2 nodes that cost me $138 per month. It’s hard to believe that I initially got a monthly EKS bill of $414.72!&lt;/p&gt;

&lt;h2&gt;Running clusters on Amazon EKS? Give automated optimization a try&lt;/h2&gt;

&lt;p&gt;Run the free &lt;a href="https://cast.ai/eks-optimizer/"&gt;CAST AI Savings Report&lt;/a&gt; to check how much you could potentially save. It also gives you actionable steps to reduce the bill that other tools ask you to pay for. And when you’re ready, turn automated cost optimization on to see how your cloud bill shrinks with every minute. &lt;/p&gt;

</description>
      <category>aws</category>
      <category>kubernetes</category>
      <category>devops</category>
      <category>startup</category>
    </item>
    <item>
      <title>How to Get Project Ideas to Practice JavaScript</title>
      <author>Nico Zerpa (he/him)</author>
      <pubDate>Thu, 22 Jul 2021 15:58:45 +0000</pubDate>
      <link>https://dev.to/nicozerpa/how-to-get-project-ideas-to-practice-javascript-3ip3</link>
      <guid>https://dev.to/nicozerpa/how-to-get-project-ideas-to-practice-javascript-3ip3</guid>
      <description>&lt;p&gt;&lt;strong&gt;Practising is, by far, the best way to learn JavaScript.&lt;/strong&gt; No matter if you read hundreds of articles or watch dozens of courses, you need to practice coding to really learn. However, for many beginners, it's hard to come up with ideas. Which ideas or projects should I create to practise?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create simple clones of your favourite websites or web applications&lt;/strong&gt;. That's what I've always done to practice coding when I was younger. &lt;strong&gt;If you're at the very early stages of your learning journey, copy only the basic functionality.&lt;/strong&gt; For example, if you want to build a Reddit clone, just make it display the posts of a single subreddit.&lt;/p&gt;

&lt;p&gt;A good source of projects ideas is VanillaJSProjects.com. This site was created by developer &lt;a href="https://gomakethings.com/"&gt;Chris Ferdinandi&lt;/a&gt;, and has 21 project ideas that you can try. Even though they are intended for Vanilla JavaScript, you can make the projects using any UI framework or library. &lt;a href="https://vanillajsprojects.com"&gt;You can access the project list here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-if-a-project-becomes-too-hard"&gt;
  &lt;/a&gt;
  What If a Project Becomes Too Hard?
&lt;/h2&gt;

&lt;p&gt;That could be discouraging, but &lt;strong&gt;don't worry. Just make the project simpler!&lt;/strong&gt; You can go back to it later.&lt;/p&gt;

&lt;p&gt;In this case, practising programming is like working out. If you go to the gym for the first time, you start lifting small weights. Little by little, you'll become stronger and you can increase the weights.&lt;/p&gt;

&lt;p&gt;If you're starting out, start doing small things. If you are consistent, &lt;strong&gt;these simple projects will become easier over time&lt;/strong&gt;, and that's the time to increase the difficulty a bit.&lt;/p&gt;




&lt;p&gt;Become a Better JavaScript Developer! My newsletter has easy, actionable steps to level up your JavaScript skills, right to your inbox. &lt;a href="https://nicozerpa.com/newsletter"&gt;Click here to subscribe&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Publishing your Android library - the local way</title>
      <author>Nadia Castelli</author>
      <pubDate>Thu, 22 Jul 2021 15:43:37 +0000</pubDate>
      <link>https://dev.to/cloudx/publishing-your-android-library-the-local-way-2059</link>
      <guid>https://dev.to/cloudx/publishing-your-android-library-the-local-way-2059</guid>
      <description>&lt;p&gt;If you ever built an Android library, meant to be used in one or more projects, you have for sure faced the need to publish it in order to test its integration into your target app. You probably publish your libraries in some repository, such as JitPack, Nexus, JFrog, or other. But, what if you need to continue introducing changes or working on fixes in your library? Maybe publishing it to a remote repository each time is not the most time-saving option, especially if your library is a bit overweight. Or maybe your Internet access was cut off; how are you supposed to continue working like this? Well, there is actually a convenient, effective way to quickly get your library published and available to be integrated into your other projects: the Maven local repository.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#maven-local"&gt;
  &lt;/a&gt;
  Maven local
&lt;/h2&gt;

&lt;p&gt;Maven local is actually a repository, but it is located in your own computer. As simple as that. So you can use this directory to store your project dependencies.&lt;/p&gt;

&lt;p&gt;Depending on your computer's operating system, the default location for Maven local repository may vary.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mac: &lt;code&gt;/Users/[username]/.m2&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Linux: &lt;code&gt;/home/[username]/.m2&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Windows: &lt;code&gt;C:\Users\[username]\.m2&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B7_LwoV3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8jtaur3fkwp7x6xtvd2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B7_LwoV3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8jtaur3fkwp7x6xtvd2.png" alt=".m2 folder contents"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#publishing-your-library"&gt;
  &lt;/a&gt;
  Publishing your library
&lt;/h2&gt;

&lt;p&gt;First, we are going to navigate to our library's module, and there we are going to create a Gradle file, which will contain all the necessary code to publish the library locally. We are going to name it &lt;code&gt;publishLocal.gradle&lt;/code&gt;. Its content will be the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="n"&gt;apply&lt;/span&gt; &lt;span class="nl"&gt;plugin:&lt;/span&gt; &lt;span class="s1"&gt;'maven-publish'&lt;/span&gt; 

&lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="nf"&gt;sourceJar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;type:&lt;/span&gt; &lt;span class="n"&gt;Jar&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sourceSets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;main&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;srcDirs&lt;/span&gt; 
    &lt;span class="n"&gt;classifier&lt;/span&gt; &lt;span class="s2"&gt;"sources"&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt; 

&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;afterEvaluate&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;publishToMavenLocal&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
        &lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;groupId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LIBRARY_GROUP&lt;/span&gt; 
        &lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;artifactId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LIBRARY_ARTIFACT_ID&lt;/span&gt; 
        &lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LIBRARY_VERSION_NAME&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;"-local"&lt;/span&gt; 
        &lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;debugSuffix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"-debug"&lt;/span&gt; 
        &lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;releaseSuffix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"-release"&lt;/span&gt; 
        &lt;span class="k"&gt;publishing&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
            &lt;span class="n"&gt;publications&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                &lt;span class="n"&gt;LibraryRelease&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;MavenPublication&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                    &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;release&lt;/span&gt; 
                    &lt;span class="nf"&gt;artifact&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sourceJar&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; 
                    &lt;span class="n"&gt;setGroupId&lt;/span&gt; &lt;span class="n"&gt;groupId&lt;/span&gt; 
                    &lt;span class="n"&gt;setArtifactId&lt;/span&gt; &lt;span class="n"&gt;artifactId&lt;/span&gt; 
                    &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;releaseSuffix&lt;/span&gt; 
                &lt;span class="o"&gt;}&lt;/span&gt; 
                &lt;span class="n"&gt;LibraryDebug&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;MavenPublication&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                    &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;debug&lt;/span&gt; 
                    &lt;span class="nf"&gt;artifact&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sourceJar&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; 
                    &lt;span class="n"&gt;setGroupId&lt;/span&gt; &lt;span class="n"&gt;groupId&lt;/span&gt; 
                    &lt;span class="n"&gt;setArtifactId&lt;/span&gt; &lt;span class="n"&gt;artifactId&lt;/span&gt; 
                    &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;debugSuffix&lt;/span&gt; 
                &lt;span class="o"&gt;}&lt;/span&gt; 
            &lt;span class="o"&gt;}&lt;/span&gt; 
            &lt;span class="n"&gt;publications&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;all&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                &lt;span class="n"&gt;pom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;withXml&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                    &lt;span class="n"&gt;asNode&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;dependencies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;'*'&lt;/span&gt;
                    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findAll&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                        &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'runtime'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                        &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;configurations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;implementation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;allDependencies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;find&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                            &lt;span class="n"&gt;dep&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dep&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;artifactId&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; 
                        &lt;span class="o"&gt;}&lt;/span&gt;
                    &lt;span class="o"&gt;}.&lt;/span&gt;&lt;span class="na"&gt;each&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;*.&lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'compile'&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; 
                &lt;span class="o"&gt;}&lt;/span&gt; 
            &lt;span class="o"&gt;}&lt;/span&gt; 
        &lt;span class="o"&gt;}&lt;/span&gt; 

        &lt;span class="n"&gt;doLast&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
            &lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;prettyPrint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;upto&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;"="&lt;/span&gt; &lt;span class="o"&gt;})&lt;/span&gt; 
                &lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt; 
            &lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; 
            &lt;span class="n"&gt;prettyPrint&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;println&lt;/span&gt; &lt;span class="s2"&gt;"PUBLICATION FINISHED"&lt;/span&gt; 
            &lt;span class="n"&gt;println&lt;/span&gt; &lt;span class="s2"&gt;"Artifact RELEASE: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;groupId&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;":"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;artifactId&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;  &lt;span class="s2"&gt;":"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;releaseSuffix&lt;/span&gt; 
            &lt;span class="n"&gt;println&lt;/span&gt; &lt;span class="s2"&gt;"Artifact DEBUG: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;groupId&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;":"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;artifactId&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;  &lt;span class="s2"&gt;":"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;debugSuffix&lt;/span&gt;
            &lt;span class="n"&gt;prettyPrint&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; 
        &lt;span class="o"&gt;}&lt;/span&gt; 
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can include this script in our module-level &lt;code&gt;build.gradle&lt;/code&gt; file. And that's it!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="o"&gt;...&lt;/span&gt; 
&lt;span class="n"&gt;apply&lt;/span&gt; &lt;span class="nl"&gt;from:&lt;/span&gt; &lt;span class="s1"&gt;'publishLocal.gradle'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-code-in-depth"&gt;
  &lt;/a&gt;
  The code in depth
&lt;/h3&gt;

&lt;p&gt;If you take a look at our first line of code, you can see that we are including the &lt;a href="https://docs.gradle.org/current/userguide/publishing_maven.html"&gt;Maven Publish&lt;/a&gt; plugin, which lets us publish artifacts to an Apache Maven repository.&lt;/p&gt;

&lt;p&gt;Below that line, we configure a task called &lt;code&gt;sourceJar&lt;/code&gt;, which will generate the &lt;code&gt;.jar&lt;/code&gt; file with our library's source files.&lt;/p&gt;

&lt;p&gt;Now we are getting to the meaty part. We configure &lt;code&gt;publishToMavenLocal&lt;/code&gt; task, indicating the publications it should perform. In this case, there are two: &lt;code&gt;LibraryRelease&lt;/code&gt; and &lt;code&gt;LibraryDebug&lt;/code&gt;; each of them uses a different build variant.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;LIBRARY_GROUP, LIBRARY_ARTIFACT_ID, and LIBRARY_VERSION_NAME are constants defined in gradle.properties file.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's see each &lt;code&gt;MavenPublication&lt;/code&gt; in detail:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="n"&gt;LibraryRelease&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;MavenPublication&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;release&lt;/span&gt; 
    &lt;span class="nf"&gt;artifact&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sourceJar&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; 
    &lt;span class="n"&gt;setGroupId&lt;/span&gt; &lt;span class="n"&gt;groupId&lt;/span&gt; 
    &lt;span class="n"&gt;setArtifactId&lt;/span&gt; &lt;span class="n"&gt;artifactId&lt;/span&gt; 
    &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;releaseSuffix&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are taking &lt;code&gt;LibraryRelease&lt;/code&gt; as an example. First, we apply the component with the release build variant. After that, we indicate that besides the &lt;code&gt;.aar&lt;/code&gt; file that is going to be generated, we also want to compile a &lt;code&gt;.jar&lt;/code&gt; file with the source files (this step is optional). Finally, we set a group ID, an artifact ID, and a version name for our library (in this case we are using different suffixes for debug and release variants).&lt;/p&gt;

&lt;p&gt;It is now time to generate a &lt;code&gt;.pom&lt;/code&gt; file for each of the publications. The &lt;code&gt;.pom&lt;/code&gt; file contains all the necessary configuration details that Maven uses to compile our project. Here we can find, among other things, the dependencies our library includes in detail.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="n"&gt;publications&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;all&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;pom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;withXml&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
        &lt;span class="n"&gt;asNode&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;dependencies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;'*'&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findAll&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
            &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'runtime'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
            &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;configurations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;implementation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;allDependencies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;find&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;dep&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dep&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;artifactId&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; 
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}.&lt;/span&gt;&lt;span class="na"&gt;each&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;*.&lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'compile'&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; 
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;In my particular case, I had to write a special rule to correct the Maven scope of some of the dependencies I use in my library. This may not be necessary for you. More information on Maven scopes &lt;a href="https://reflectoring.io/maven-scopes-gradle-configurations/"&gt;here&lt;/a&gt; and &lt;a href="https://andresalmiray.com/maven-scopes-vs-gradle-configurations/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We end our script by printing a log with information about the published artifacts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#publishing-to-maven-local"&gt;
  &lt;/a&gt;
  Publishing to Maven local
&lt;/h3&gt;

&lt;p&gt;If you head to Gradle's task tree, inside the publishing section you will see we have these tasks available, which we can run depending on our needs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;publish[MODULE_NAME]DebugPublicationToMavenLocal&lt;/code&gt; compiles the project in debug mode.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;publish[MODULE_NAME]ReleasePublicationToMavenLocal&lt;/code&gt; compiles the project in release mode.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;publishToMavenLocal&lt;/code&gt; generates both debug and release versions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lZrURJ_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/72djerhkfu34y3lb9j8m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lZrURJ_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/72djerhkfu34y3lb9j8m.png" alt="Gradle task tree"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the following screenshot we can observe the output of a successful execution of &lt;code&gt;publishToMavenLocal&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JEVs-h-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sxmxsklx4q66jtkgbyme.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JEVs-h-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sxmxsklx4q66jtkgbyme.png" alt="Published library log"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Gradle tasks can also be run from the command line, for example:&lt;br&gt;
&lt;code&gt;./gradlew publishToMavenLocal&lt;/code&gt;&lt;br&gt;
&lt;code&gt;./gradlew publishLibraryDebugPublicationToMavenLocal&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Awesome! We already have our library, with its two variants and their artifacts, published in Maven local. But now, how can we integrate it into another project?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#integrating-your-library-in-a-project"&gt;
  &lt;/a&gt;
  Integrating your library in a project
&lt;/h2&gt;

&lt;p&gt;To import our library into another library or into an Android app, first we need to open our project-level &lt;code&gt;build.gradle&lt;/code&gt; file, and instruct it to use &lt;code&gt;mavenLocal()&lt;/code&gt; as repository:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="k"&gt;buildscript&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;repositories&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
        &lt;span class="n"&gt;mavenLocal&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; 
        &lt;span class="o"&gt;...&lt;/span&gt; 
    &lt;span class="o"&gt;}&lt;/span&gt; 
    &lt;span class="o"&gt;...&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt; 

&lt;span class="k"&gt;allprojects&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;repositories&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
        &lt;span class="n"&gt;mavenLocal&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; 
        &lt;span class="o"&gt;...&lt;/span&gt; 
    &lt;span class="o"&gt;}&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once this is done, we must include our library as a dependence in our app-level (or module-level) &lt;code&gt;build.gradle&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="k"&gt;dependencies&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;implementation&lt;/span&gt; &lt;span class="s2"&gt;"com.me:my-awesome-lib:1.0.0"&lt;/span&gt; 
    &lt;span class="o"&gt;...&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Our library's identifier, in this case &lt;code&gt;com.me:my-awesome-lib:1.0.0&lt;/code&gt;, has the format &lt;code&gt;groupId:artifactId:versionName&lt;/code&gt;, as we instructed to Gradle earlier. This information can also be seen in the .pom file generated with the publication.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So we arrived at the final step! Now it's time to compile our project and check that our library is imported correctly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Today we tried an alternative to publishing an Android library, which hopefully will help you speed up your development process. We configured a Gradle file to publish debug and release versions of an Android library to Maven local repository, and then we learnt how to integrate it into our main project. I hope this article serves as one more tool for your daily work as an Android library developer.&lt;/p&gt;

</description>
      <category>android</category>
      <category>maven</category>
      <category>mavenlocal</category>
      <category>library</category>
    </item>
    <item>
      <title>Game Development Roadmap For Beginners</title>
      <author>Rocky</author>
      <pubDate>Thu, 22 Jul 2021 15:39:49 +0000</pubDate>
      <link>https://dev.to/codelivly/game-development-roadmap-for-beginners-4a53</link>
      <guid>https://dev.to/codelivly/game-development-roadmap-for-beginners-4a53</guid>
      <description>&lt;p&gt; By &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/&amp;amp;ved=2ahUKEwier_PQ1fbxAhXa4jgGHVYsAvoQFjAAegQIBxAC&amp;amp;usg=AOvVaw1PUPii-XosNgl1ZTInOseb"&gt;&lt;span&gt;Codelivly&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;:&lt;/p&gt;
&lt;p&gt;Game development is the art of creating games. Game developement is very exciting and intresting. It is a great carrer to pursue as there are many gamers around the world who play games in their daily life. But there are not a lot of game developers so there is a high demand for game developers.&lt;/p&gt;
&lt;p&gt;Average salary of a game developer is between $65k to $80k per month. You can also become a indie game developer who creates games individually and publish it to the playstore or appstore.&lt;/p&gt;
&lt;p&gt;So you have decided that you want to become a game developer but don’t know where to begin your journey don’t worry because today this is artcle is about game development roadmap and at end of this article you will be able to :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Have clear way of your journey&lt;/li&gt;
&lt;li&gt;And Start making games&lt;/li&gt;
&lt;/ul&gt;
&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;Read More&lt;/b&gt;: &lt;/span&gt;&lt;span&gt;&lt;a href="https://bit.ly/3hXvBBO"&gt;Game Development Roadmap &lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>Internationalization(i18n) and Localization(L10n)</title>
      <author>Dawei Ma</author>
      <pubDate>Thu, 22 Jul 2021 15:14:06 +0000</pubDate>
      <link>https://dev.to/madawei2699/international-i18n-and-localization-l10n-48d2</link>
      <guid>https://dev.to/madawei2699/international-i18n-and-localization-l10n-48d2</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;a href="#internationalizationi18n"&gt;internationalization(i18N)&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#problems-to-be-solved-for-internationalization"&gt;Problems to be solved for internationalization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#text-encoding"&gt;Text Encoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#locale"&gt;locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#language-and-country-codes"&gt;Language and Country Codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gettext"&gt;gettext&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#internationalization-process"&gt;Internationalization Process&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#localizationl10n"&gt;Localization(L10N)&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#localization-process"&gt;Localization Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#develop-a-localization-strategy"&gt;Develop a localization strategy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#region-and-language"&gt;Region and Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#add-new-regionlanguageservice"&gt;Add new region/language/service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#incremental-localization"&gt;Incremental Localization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#management-of-translation"&gt;Management of translation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localized-implementation"&gt;Localized implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localized-multilingual-implementation"&gt;Localized multilingual implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-challenges-of-localization"&gt;The Challenges of Localization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#do-you-need-to-consider-seo"&gt;Do you need to consider SEO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localization-of-product-design"&gt;Localization of product design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localization-under-microservices"&gt;Localization under Microservices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localized-technical-or-business-standards-development"&gt;Localized technical or business standards development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#development-environment-and-business-processes"&gt;Development Environment and Business Processes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#static-text-processing"&gt;Static text processing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#whether-to-store-language-and-region-settings"&gt;Whether to store language and region settings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localization-of-back-end-services"&gt;Localization of back-end services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localization-of-third-party-services-and-resources"&gt;Localization of third-party services and resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#release-process"&gt;Release Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localization-under-micro-front-end-architecture"&gt;Localization under micro front-end architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localized-testing"&gt;Localized testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localization-platform"&gt;Localization Platform&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A successful product needs to go global through many stages, from the perspective of software development there are two main processes: internationalization and localization.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1FGOTsnz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/53875fc9-00ac-e8e2-8d91-06399755dcba.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1FGOTsnz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/53875fc9-00ac-e8e2-8d91-06399755dcba.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A language environment is the use of a specific language or language variant within a country or geographic region, which determines the format and parsing of dates, times, numbers and currencies, as well as the various measurement units and translated names of time zones, languages, countries and regions. &lt;strong&gt;Internationalization enables a piece of software to handle multiple language environments, localization enables a piece of software to support a specific regional language environment&lt;/strong&gt;. This means that the process of globalization is to first make the software internationalized, and then to do the localization implementation so that it can support a specific language environment in a specific region.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;They are often abbreviated as i18n (18 means that there are 18 letters between i and n in the word "internationalization") and L10n, respectively, due to the length of their single words, using a capital L to distinguish the i in i18n and to make it easy to distinguish the lowercase l from the 1.(&lt;a href="https://en.wikipedia.org/wiki/Internationalization_and_localization"&gt;Wikipedia&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#internationalizationi18n"&gt;
  &lt;/a&gt;
  internationalization(i18N)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#problems-to-be-solved-for-internationalization"&gt;
  &lt;/a&gt;
  Problems to be solved for internationalization
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The ability to display text in the user's native language.&lt;/li&gt;
&lt;li&gt;Ability to enter text in the user's native language.&lt;/li&gt;
&lt;li&gt;Ability to process text in the user's native language in a specific encoding.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#text-encoding"&gt;
  &lt;/a&gt;
  Text Encoding
&lt;/h3&gt;

&lt;p&gt;The Unicode character set can display almost every character known to man in code points ranging from 0 to 10FFFF (hexadecimal). It requires at least 21 bits for storage. The text encoding system UTF-8 adapts Unicode code points to a reasonable 8-bit data stream and is compatible with the ASCII data processing system.UTF stands for Unicode Transformation Format.&lt;/p&gt;

&lt;p&gt;Since 2009, UTF-8 has been the dominant encoding form on the World Wide Web. As of November 2019, UTF-8 is used in 94.3% of all web pages (some of which are ASCII only, as it is a subset of UTF-8), and 96% of the top 1000 pages. Therefore, UTF-8 encoding is recommended for internationalization.&lt;/p&gt;

&lt;p&gt;This article &lt;a href="https://mp.weixin.qq.com/s/j5hfWOBsOMYcQuMG36zqNA"&gt;Internationalization of IT products is never enough to "support English"&lt;/a&gt; mentions that some GBK-encoded texts have many The text that "looks the same" is actually slightly different. However, in order to save space in Unicode, the same Code Point is assigned to them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SKe-2Z0l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/274d1394-df55-c0cb-331c-635979581c65.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SKe-2Z0l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/274d1394-df55-c0cb-331c-635979581c65.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How can we distinguish these identical characters with the same code (displaying a character in a different glyph, i.e. the same character)? This requires the help of locale.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When calculating the number of Chinese characters, it is usually done by character form, i.e., simplified, traditional, variant, new, old, etc., of a character representing the same phonetic meaning. This way of counting is in fact counting variants. Therefore, the number of glyphs included in large dictionaries has long been wrongly regarded as the size of the Chinese character system.(&lt;a href="https://en.wikipedia.org/wiki/Grapheme"&gt;Wikipedia&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#locale"&gt;
  &lt;/a&gt;
  locale
&lt;/h3&gt;

&lt;p&gt;A locale is the language environment of the software at runtime, which includes Language, Territory and Codeset. A locale is written in the following format: Language[_Territory[. UTF8. In Linux, a locale consists of the following parts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;LC_COLLATE: Controls character sorting.&lt;/li&gt;
&lt;li&gt;LC_CTYPE: controls the character handling function in handling upper and lower case or determining if it is a character.&lt;/li&gt;
&lt;li&gt;LC_MESSAGES: format of prompt messages.&lt;/li&gt;
&lt;li&gt;LC_MONETARY: format of currency.&lt;/li&gt;
&lt;li&gt;LC_NUMERIC: the format of the number.&lt;/li&gt;
&lt;li&gt;LC_TIME: the format of time.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If your locale is en_US.UTF8, you must change it to zh_CN.UTF8 to display Chinese correctly. All supported locales are stored in the &lt;code&gt;/usr/share/locale&lt;/code&gt; directory of the macOS operating system.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yU_RiJsK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/b40d3f61-046a-df48-735f-b27ec188a3e8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yU_RiJsK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/b40d3f61-046a-df48-735f-b27ec188a3e8.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#language-and-country-codes"&gt;
  &lt;/a&gt;
  Language and Country Codes
&lt;/h3&gt;

&lt;p&gt;The same language may have some subtle differences in different countries and regions, for example, there are some differences between American English and British English. The same country may also have multiple languages, for example, China has simplified and traditional languages. In the introduction to locale above we saw the use of &lt;code&gt;language_region&lt;/code&gt; to express the exact language of a country.&lt;/p&gt;

&lt;p&gt;For countries and languages ISO has developed corresponding standard codes &lt;a href="https://en.wikipedia.org/wiki/ISO_3166-1"&gt;ISO 3166-1&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/ISO_639-1"&gt;ISO 639-1&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The browser uses the language code to send the name of the language accepted by the browser in the &lt;code&gt;Accept-Language&lt;/code&gt; HTTP header. For example: it, de-at, es, pt-br.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gettext"&gt;
  &lt;/a&gt;
  gettext
&lt;/h3&gt;

&lt;p&gt;GNU gettext is the GNU Internationalization and Localization (i18n) library, which is often used to write multilingualization (M17N) programs. Many programming languages such as C, C++, Python, PHP, Rust, Elixir, etc. support the use of gettext from within the language.&lt;/p&gt;

&lt;p&gt;The following is the flow of how Java calls gettext to complete internationalization.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QkFZxGmL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/4a7179b3-ccae-ca0e-8554-1cb19a753e7d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QkFZxGmL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/4a7179b3-ccae-ca0e-8554-1cb19a753e7d.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;xgettext scans the source code to extract the input strings for the i18n functions tr(), trc(), and trn() and creates a pot file containing all the source language strings. The object that the translator needs to work with is the .po file, which is generated by the msginit program from the .pot template file.&lt;/li&gt;
&lt;li&gt;msgmerge merges the strings into a po file containing the translations for a single locale.&lt;/li&gt;
&lt;li&gt;msgfmt is used to generate Java class files that inherit from the Java &lt;code&gt;ResourceBundle&lt;/code&gt; class.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following diagram shows the flow of internationalization in PHP using gettext.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n8ZR74EV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/5da7482c-d121-958e-606e-ff36aded4a1f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n8ZR74EV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/5da7482c-d121-958e-606e-ff36aded4a1f.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Elixir implements i18n's directory structure using gettext.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;priv/gettext
└─ en_US
|  └─ LC_MESSAGES
|     ├─ default.po
|     └─ errors.po
└─ it
   └─ LC_MESSAGES
      ├─ default.po
      └─ errors.po
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#internationalization-process"&gt;
  &lt;/a&gt;
  Internationalization Process
&lt;/h3&gt;

&lt;p&gt;The process of using gettext is a typical process of making an application support i18n internationalization.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Configure the i18n framework. i18n framework automatically obtains the relevant language files by the language identifier of the system or browser (in the case of web applications). For example, gettext uses a file with .mo suffix, while Javascript is usually a .json file and Java is a .properties file.&lt;/li&gt;
&lt;li&gt;extract the hard-coded source language text. Call the i18n function at the hard-coded place. For this part can be extracted manually, or automatically through a program or plugin (e.g. i18next internationalization framework for Javascript has i18next-scanner).&lt;/li&gt;
&lt;li&gt;finally implement &lt;strong&gt;localization&lt;/strong&gt;. Translate (either manually or by machine translation, there are also relevant translation platforms that can be integrated) these extracted files in the language of the country to be supported.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#localizationl10n"&gt;
  &lt;/a&gt;
  Localization(L10N)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#localization-process"&gt;
  &lt;/a&gt;
  Localization Process
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YnuZDFRI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/9adbc2f4-7fa4-0f67-046b-f135c4b117b7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YnuZDFRI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/9adbc2f4-7fa4-0f67-046b-f135c4b117b7.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A typical localization flow chart is shown in the figure above. Among the parties involved are.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dev Team: Developers make the system internationalized and deploy the machine-translated version of the multilingual version to the integration environment for testers to test, and can build an automated translation integration pipeline.&lt;/li&gt;
&lt;li&gt;Market Team: Confirm the market and supported languages of the product, organize the glossary of terms involved in the product, and purchase professional translation services to determine the final multilingual translated version. In the case of large companies, there may be a dedicated globalization team to do this work.&lt;/li&gt;
&lt;li&gt;Translation management platform (TMS): completes the management of translation languages, generally with specific API interfaces or SDK development kits that can be integrated into CI/CD environments and can automate the upload and download of source and translation language files. It also has a management interface for translators to modify and determine the final version of the translation. Can provide multiple machine translation services, as well as provide human translation for purchase or complete human translation in an open source collaborative manner.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#develop-a-localization-strategy"&gt;
  &lt;/a&gt;
  Develop a localization strategy
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#region-and-language"&gt;
  &lt;/a&gt;
  Region and Language
&lt;/h4&gt;

&lt;p&gt;This piece begins with these basic antecedent considerations.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Business implications of region&lt;/li&gt;
&lt;li&gt;Default region of the user&lt;/li&gt;
&lt;li&gt;Default language of the locale&lt;/li&gt;
&lt;li&gt;Whether different regions use the same system&lt;/li&gt;
&lt;li&gt;Whether to support users to switch locales&lt;/li&gt;
&lt;li&gt;Whether the user can belong to multiple locales&lt;/li&gt;
&lt;li&gt;Whether there is a one-to-one relationship between locale and country&lt;/li&gt;
&lt;li&gt;Mapping between locale and language&lt;/li&gt;
&lt;li&gt;Is there a linkage between locale and language (can the user see all languages supported by all locales)&lt;/li&gt;
&lt;li&gt;Whether language switching needs to be saved to the user's personal information&lt;/li&gt;
&lt;li&gt;Whether the user's default language needs to be set by the user's environment language identifier (OS or browser)&lt;/li&gt;
&lt;li&gt;Whether the &lt;strong&gt;service is deployed in multiple geographies and whether the data is isolated in multiple geographies&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#add-new-regionlanguageservice"&gt;
  &lt;/a&gt;
  Add new region/language/service
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Whether the system can support the process of adding new regions and new regions&lt;/li&gt;
&lt;li&gt;Whether the system can support the process of adding new languages and the process of adding new languages&lt;/li&gt;
&lt;li&gt;The process of localization when adding subservices to the system&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#incremental-localization"&gt;
  &lt;/a&gt;
  Incremental Localization
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Localization process when new pages or components appear when localization is implemented&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#management-of-translation"&gt;
  &lt;/a&gt;
  Management of translation
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Whether you need a translation management platform (TMS)&lt;/li&gt;
&lt;li&gt;Selection of Translation Management Platform&lt;/li&gt;
&lt;li&gt;Integration of translation management platform&lt;/li&gt;
&lt;li&gt;Whether to subscribe to professional translation services&lt;/li&gt;
&lt;li&gt;Development of collaborative processes with translation teams&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#localized-implementation"&gt;
  &lt;/a&gt;
  Localized implementation
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Whether each service of the system is localized by its own development team&lt;/li&gt;
&lt;li&gt;Whether there is a dedicated localization team to do localization&lt;/li&gt;
&lt;li&gt;The collaboration mode between localization team and each service development team

&lt;ul&gt;
&lt;li&gt;Whether localization is done by code Open PR&lt;/li&gt;
&lt;li&gt;How each service development team does incremental localization&lt;/li&gt;
&lt;li&gt;Synchronization of knowledge on localization among teams&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Development of technical standards for localization and promotion within the organization

&lt;ul&gt;
&lt;li&gt;Use of industry standard libraries (e.g. Unicode Common Locale Data Repository &lt;a href="http://cldr.unicode.org/"&gt;CLDR&lt;/a&gt;) for language-specific formats for dates, times, time zones, numbers, and currencies&lt;/li&gt;
&lt;li&gt;The locale identifier is in &lt;code&gt;language_region&lt;/code&gt; format, e.g. en_US for United States English language.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#localized-multilingual-implementation"&gt;
  &lt;/a&gt;
  Localized multilingual implementation
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Distinguish multilingualism by subdomains (gTLDS) or ccTLDs (e.g. ccTLDs). For example: &lt;a href="https://en.wikipedia.org/"&gt;https://en.wikipedia.org/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Distinguish multilingualism by URL paths. For example: &lt;a href="https://localizejs.com/de/"&gt;https://localizejs.com/de/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Multilingual by URL query parameters (not SEO friendly). e.g. &lt;a href="https://locize.com/?lng=de"&gt;https://locize.com/?lng=de&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Multi-language by user language setting. E.g. &lt;a href="https://myaccount.google.com/language"&gt;https://myaccount.google.com/language&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Multilingual by browser local storage. E.g. &lt;a href="https://www.instagram.com/"&gt;https://www.instagram.com/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#the-challenges-of-localization"&gt;
  &lt;/a&gt;
  The Challenges of Localization
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g4BPqDvc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/f655798a-fd23-5828-1b72-b6ecd6d83b7a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g4BPqDvc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/f655798a-fd23-5828-1b72-b6ecd6d83b7a.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The challenges of localization are mainly issues arising from differences in language, culture, writing habits and laws in different geographic areas, in the following categories.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Text encoding: For text in most Western European languages, ASCII character encoding is sufficient. However, languages that use non-Latin alphabets (e.g. Russian, Chinese, Hindi and Korean) require a larger character encoding, such as Unicode.&lt;/li&gt;
&lt;li&gt;Singular and plural: Different languages have different forms of singular and plural. The plural is used to represent a number that is "not one". The singular and plural forms vary from language to language, with the most common plural form being used to represent numbers of two or greater. In some languages, it is also used to represent fractions, zeroes, negative numbers, or twos.&lt;/li&gt;
&lt;li&gt;Image translation: Images with text need to be translated.&lt;/li&gt;
&lt;li&gt;Dynamic data (data from the API): The data passed from the back-end to the front-end that is displayed on the interface needs to be localized. But it is a challenge to distinguish the source of this data, for example, although the data is sourced from the back-end, it may come from a database, it may come from a file, it may come from other internal services, or it may come from a third-party dependent service.&lt;/li&gt;
&lt;li&gt;Icons: Some icons that are highly recognizable in one region may look completely unrecognizable to users in other regions or be something else.&lt;/li&gt;
&lt;li&gt;Name/address: The order of the last name and first name, and the order in which addresses are written. For example, in Chinese, the last name comes first, then the first name.&lt;/li&gt;
&lt;li&gt;Gender: Some languages such as French place a lot of emphasis on gender.&lt;/li&gt;
&lt;li&gt;Phone: The format of phone calls varies from country to country.&lt;/li&gt;
&lt;li&gt;Voice: Inappropriate voices or cues may be offensive, and some countries are sensitive to the gender of the voice.&lt;/li&gt;
&lt;li&gt;Color: Colors and shades are associated with geographic regions or markets, for example, red in the U.S. indicates a decline and in the A-share indicates a rise.&lt;/li&gt;
&lt;li&gt;Units of Measure

&lt;ul&gt;
&lt;li&gt;Currency: Currency formatting must take into account the currency symbol, the position of the currency symbol and the position of the minus sign. Most currencies use the same decimal separator and thousands separator as the numbers in the regional or area setting. However, in some places this is not the case, for example in Switzerland, the decimal separator for the Swiss franc is a period.&lt;/li&gt;
&lt;li&gt;Date and time: The internationalization of date/time involves not only the geographical location (e.g. localized representation of calendar such as day of the week, month, etc.), but also the time zone (TimeZone, for UTC/GMT offsets). Time zones are not only geographically defined, but also politically defined. For example, China geographically spans 5 time zones, but only uses one unified time zone. Many other countries have "daylight saving time" and the difference between Berlin time and Beijing time is subject to change. Sometimes it is 7 hours (winter time), sometimes it is 6 hours (daylight saving time).&lt;/li&gt;
&lt;li&gt;Numbers: There are also differences in the way numbers are represented in different countries and regions. Factors that affect the representation of numbers include the representation of numeric characters, the representation of numeric symbols, the type of numbers, etc.&lt;/li&gt;
&lt;li&gt;Weight/length/physical units: Because of the differences in units, multiple geographical versions of the same set of data need to be converted.&lt;/li&gt;
&lt;li&gt;Business-related units of measurement: For example, different countries have different billing rules for their products. This requires business staff support to find out the corresponding position and give conversion rules.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Sentence length: German is usually longer than English, and Arabic requires more vertical space.&lt;/li&gt;
&lt;li&gt;Writing direction: In many languages it is left to right, but in Hebrew and Arabic it is right to left and in some Asian languages it is vertical.&lt;/li&gt;
&lt;li&gt;Punctuation: e.g. quotation marks ("") in English, low quotation marks (,,") in German and quotation marks (&amp;lt;&amp;lt;&amp;gt;&amp;gt;) in French.&lt;/li&gt;
&lt;li&gt;Line breaks/splits: The rules of Asian CJK (Chinese, Japanese, Korean) character set languages are completely different from those of Western languages. For example, unlike most Western written languages, Chinese, Japanese, Korean and Thai do not necessarily use spaces to separate one word from the next. Thai does not even use punctuation.&lt;/li&gt;
&lt;li&gt;Case conversion: English has case conversion, while Chinese has no case distinction.&lt;/li&gt;
&lt;li&gt;Legal related: e.g. GDPR using personal data of EU citizens.&lt;/li&gt;
&lt;li&gt;Politics-related: For example, localization involves the display of flags and maps, which can easily cause major accidents if not handled properly.&lt;/li&gt;
&lt;li&gt;Sorting methods: For example, English is sorted alphabetically, while Chinese can be sorted in pinyin.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#do-you-need-to-consider-seo"&gt;
  &lt;/a&gt;
  Do you need to consider SEO
&lt;/h4&gt;

&lt;p&gt;If you are localizing a website for toC, you need to consider some things related to search engine optimization (SEO), such as this &lt;a href="https://marketfinder.thinkwithgoogle.com/intl/en/guide/how-to-approach-i18n/#make-languages-easily-discoverable"&gt;How to approach an international strategy&lt;/a&gt; mentions some key points.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you offer your site in multiple languages, use a single language for content and navigation on each page, and avoid side-by-side translations.&lt;/li&gt;
&lt;li&gt;Keep the content in each language on a separate URL and mark the language in the URL. For example, the URL &lt;code&gt;www.mysite.com/de/&lt;/code&gt; would tell the user that the page is in German.&lt;/li&gt;
&lt;li&gt;Display the language you want to locate to Google via the hreflang meta tag. For example, &lt;code&gt;&amp;lt;link rel="alternate" href="http://example.com" hreflang="en-us" /&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Do not translate only the template text, but also the content within the template.&lt;/li&gt;
&lt;li&gt;do not use automatic translation exclusively, which can affect the user experience&lt;/li&gt;
&lt;li&gt;don't use cookies or scripting techniques to switch languages, Google crawlers can't index this content properly.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#localization-of-product-design"&gt;
  &lt;/a&gt;
  Localization of product design
&lt;/h4&gt;

&lt;p&gt;Using a more localized design for the same content in different geographies can lead to better results, as mentioned in the article &lt;a href="http://www.woshipm.com/pd/4404611.html"&gt;Internationalization and Localization of Product Design&lt;/a&gt; about the different presentation of Spotify's song covers in different countries.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y-hx-FMO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/165e3e02-74a9-a776-cc5a-cf8ef85f8f46.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y-hx-FMO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/165e3e02-74a9-a776-cc5a-cf8ef85f8f46.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#localization-under-microservices"&gt;
  &lt;/a&gt;
  Localization under Microservices
&lt;/h3&gt;

&lt;p&gt;The localization process for a single application is relatively simple from an architectural point of view. However, many applications nowadays are microservice architectures with multiple teams collaborating on the development model. If individual teams are responsible for the localization of their respective services, there must be a unified localization committee to develop technical standards for localization.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The identification of language markers.&lt;/li&gt;
&lt;li&gt;The design of language switching in front and back-end solutions.&lt;/li&gt;
&lt;li&gt;The design of translation automation process, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or there is a dedicated localization team to implement localization, and this team will be responsible for solving the previous problems. The project I am involved in falls into the latter category. Our team completed the localization of nearly a dozen microservice subsystems for the entire large system, and these dozens of systems were handled by several large groups of multiple teams, so the collaborative process of such cross-functional requirements (CFR) across multiple teams is a complex task.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#localized-technical-or-business-standards-development"&gt;
  &lt;/a&gt;
  Localized technical or business standards development
&lt;/h4&gt;

&lt;p&gt;Prior to the implementation of localization, it is important to identify the relevant technical or operational standards, some of which are.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Internationalization implementation standards for different technology stacks in front and back ends. Since there may be multiple technology stacks in microservices, each with its own internationalization implementation, the development of implementation standards for different technology stacks can help to use the same implementation across services.&lt;/li&gt;
&lt;li&gt;The determination of locale markers.

&lt;ul&gt;
&lt;li&gt;The possibility of storing language-related text in front-end or back-end static text extraction to files named by language identifiers, e.g. en.json for static text in English, and en_US.json for text related to US English (e.g. units of measure, dates, numbers, currency, etc.).&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;language_region&lt;/code&gt; format is uniformly used in remote service calls (front-end calls to back-end or back-end calls to other internal or external services), e.g. en_US stands for getting the localized version of the English language for the US region.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Language specific formats for dates, times, time zones, numbers and currencies use industry standard libraries. For example, using libraries that implement the &lt;a href="https://en.wikipedia.org/wiki/Common_Locale_Data_Repository"&gt;CLDR&lt;/a&gt; standard.&lt;/li&gt;
&lt;li&gt;Dynamic data type identification. Identifying, for example, which data comes from internal systems (databases or files); which comes from external systems; whether these dynamic data have internationalization capabilities; and how to localize them in stages.&lt;/li&gt;
&lt;li&gt;Localization of documents. Localization of electronic documents (PDF) or emails generated by the back-office system. If these documents are sent to clients, also consider whether to generate documents in the client's language preference.&lt;/li&gt;
&lt;li&gt;List of supported regions and languages. For example, whether the error page is entered when an unsupported country or language appears or whether the default regional or language localized version is displayed.&lt;/li&gt;
&lt;li&gt;The default region and default language.&lt;/li&gt;
&lt;li&gt;whether the region and language have a binding relationship.&lt;/li&gt;
&lt;li&gt;Whether the language switch needs to be saved to the user's personal information.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#development-environment-and-business-processes"&gt;
  &lt;/a&gt;
  Development Environment and Business Processes
&lt;/h4&gt;

&lt;p&gt;In fact, the most time-consuming part of localization for our team was the start-up of the local environment. With so many services involved and slight differences in the way different services are launched, and even wrong guidance documents, we needed to keep stepping on the toes to finish setting up the environment. In the end, our way of dealing with this was to contact the development teams, and each time we did the pre-localization of a service, we would ask the development team to help us set up the local environment.&lt;/p&gt;

&lt;p&gt;Another difficulty was our lack of understanding of the business. Since each service has a large number of components and pages, including dynamic data from different sources of back-end services, it was hard to figure out just by ourselves. In the end, when we did the pre-localization of this service, we would get business analysts from the development team to help us introduce the business processes involved in this service.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#static-text-processing"&gt;
  &lt;/a&gt;
  Static text processing
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Sorting through static text on the front and back ends to identify which systems have internationalization capabilities (initial language versions have had locale files extracted and internationalization libraries set up).&lt;/li&gt;
&lt;li&gt;Identifying where date, currency, and number formats occur and calling the industry standard libraries identified by the localization technical standards in those places.&lt;/li&gt;
&lt;li&gt;Identification of incremental static text translation processes, which need to be used to process new texts when they are added after the system has already been localized, using localization processes.&lt;/li&gt;
&lt;li&gt;Automated integration of translation platforms, where development teams use scripts or CI/CD streams to automatically upload and download files in the original and translated languages.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#whether-to-store-language-and-region-settings"&gt;
  &lt;/a&gt;
  Whether to store language and region settings
&lt;/h4&gt;

&lt;p&gt;Some internationalized sites have language or region switching designed as hyperlinks that allow users to access different language and region versions of the site, which do not require storing language or region configurations.&lt;/p&gt;

&lt;p&gt;Sites with user profile configuration generally offer to set the preferred language and region in the profile settings, so that users can synchronize the last set language or region when switching devices.&lt;/p&gt;

&lt;p&gt;If your site users switch devices infrequently, a simple process can store these configurations in the browser store. When the user switches devices, the default settings are automatically restored. The advantage of such a design is that it is simple, and it is easier to overtake to other solutions later. The specific design chosen needs to be combined with the specific business to choose.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#localization-of-backend-services"&gt;
  &lt;/a&gt;
  Localization of back-end services
&lt;/h4&gt;

&lt;p&gt;Localization of back-end services involves the following four components.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Static text. These can be read by walking through the code to find the relevant string.&lt;/li&gt;
&lt;li&gt;Databases, caches or files. Initial data that does not meet localization needs can be found by walking through the database initialization script, but for dynamically stored data, tables need to be designed to meet multilingual storage as well. For some resource files where translation is necessary there is also a need to provide multilingual versions and to adapt the code that uses the files.&lt;/li&gt;
&lt;li&gt;Remote calls to other internal services (RPC). The locale markers for internal service calls are part of the localization technology standards developed. For example, the &lt;code&gt;locale = en_US&lt;/code&gt; HTTP header can be used to request pages in English for the United States.&lt;/li&gt;
&lt;li&gt;Generate documents (PDF or Email). Generated documents include the final language version of the template static text and dynamic data rendering. Especially when these documents and emails need to be sent to users, they need to be generated in the language that matches the user's language.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If the technology stack of the back-end service is different, the localization team also needs to summarize the internationalization process for the different technology stacks of the back-end service and synchronize it with other development teams within the organization.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#localization-of-thirdparty-services-and-resources"&gt;
  &lt;/a&gt;
  Localization of third-party services and resources
&lt;/h4&gt;

&lt;p&gt;There are cases of calling external services in the backend service remote call. If you call external services, you need to confirm whether the external services support multi-language version first, and if they do, you can integrate them according to the docking documentation. If not, you need to contact the external service provider to determine the support plan.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#release-process"&gt;
  &lt;/a&gt;
  Release Process
&lt;/h4&gt;

&lt;p&gt;Since the implementation of localization involves the transformation of more than a dozen subservices, localization can be controlled by &lt;a href="https://martinfowler.com/articles/feature-toggles.html"&gt;Feature Toggles&lt;/a&gt; to be turned on or off in different environments. The tests affected by localization (unit tests, integration tests and UI tests) also need to be controlled via Feature Toggles so that the test suite of the original service is minimally affected.&lt;/p&gt;

&lt;p&gt;Once all services have been localized and implemented, the localized Feature Toggles for all services can be opened to bring the final version online.&lt;/p&gt;

&lt;p&gt;There are two designs to choose from regarding localized Feature Toggles.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Centralized Feature Toggles. for example, a centralized feature configuration service can be built, and all localization-related services request this service to get the configuration switch status. The advantage is that localized features can be switched on and off in real time without going back online. The downside is that there is no flexibility to control the localized features of each service.&lt;/li&gt;
&lt;li&gt;Independent Feature Toggles: In contrast to centralized, each service sets its own localized Feature Toggles for flexible decoupling, but the downside is that each switch requires a new release to bring a single service online.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#localization-under-micro-frontend-architecture"&gt;
  &lt;/a&gt;
  Localization under micro front-end architecture
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vV8EnTA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/f57bbd44-f288-c81a-9f26-a55b767c6044.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vV8EnTA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/f57bbd44-f288-c81a-9f26-a55b767c6044.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As the above figure shows a micro front-end architecture website, the whole website interface is composed of five service pages of A/B/C/D/E. The language switch button is on service A. When the user switches from English to Chinese, the other services B/C/D/E need to switch their respective interfaces to the Chinese language version.&lt;/p&gt;

&lt;p&gt;One way is to have the internationalization (i18n) library instance initialized by Service A and mounted on the browser window object when the browser loads the page, and Services B/C/D/E use the internationalization library instance object initialized by Service A. When switching languages, the internationalization instance object of Service A switches the language of all services.&lt;/p&gt;

&lt;p&gt;The locale files for each service can be loaded into the browser uniformly by Service A. The advantage of this approach is that we know when the last language file is loaded, which means that the localization of all services on the whole page is initialized and the user can switch languages normally.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#localized-testing"&gt;
  &lt;/a&gt;
  Localized testing
&lt;/h3&gt;

&lt;p&gt;Localization testing verifies that the application or website content meets the language, cultural and geographical requirements of a particular country or region.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--desP9ct_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/1b30e009-c4bb-0d8d-f148-82ac680671e9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--desP9ct_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/1b30e009-c4bb-0d8d-f148-82ac680671e9.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more details, see this article &lt;a href="https://levelup.gitconnected.com/localization-testing-9b8db20fb62f"&gt;Localization testing: why and how to do it&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#localization-platform"&gt;
  &lt;/a&gt;
  Localization Platform
&lt;/h3&gt;

&lt;p&gt;A very important piece of localization is the selection of a suitable translation management platform (TMS), which generally has the following function points.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Glossary: A glossary of specialized brand terms or domain terms that can help translators more accurately translate specialized language related to a product or market.&lt;/li&gt;
&lt;li&gt;Translation Memory (TM): TM is a database for storing strings of previously translated content. Translations are reused for the same or similar content. This ensures consistency of translations.&lt;/li&gt;
&lt;li&gt;Context Editor (In-Context Editor): This editor crawls website pages and allows translators to understand the context of the entire page, helping to improve the quality of the translation.&lt;/li&gt;
&lt;li&gt;Machine Translations (Machine Translations): most TMS platforms are docked to some machine translation platforms (such as Google Translate), which can automatically translate the target language and are suitable for developers.&lt;/li&gt;
&lt;li&gt;Human Translations: Professional human translation services can be ordered from the TMS platform. However, there are also features such as Crowdin, which provides localized translation collaboration for open source projects, and anyone can participate in this project for free, and the translated text with high votes will be used first.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Major localization platforms.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://crowdin.com/"&gt;Crowdin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lokalise.com/"&gt;Lokalise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://localizejs.com"&gt;localizejs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://phrase.com/"&gt;Phrase&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This concludes some introductions to internationalization and the basic process of localization. Localization is a complex task, and the biggest difficulty is &lt;strong&gt;not knowing enough about the target language and culture&lt;/strong&gt;. But after you've read this article, I hope it will give you more confidence to do localization-related work.&lt;/p&gt;

</description>
      <category>i18n</category>
      <category>l10n</category>
      <category>localization</category>
      <category>translations</category>
    </item>
    <item>
      <title>Core 2 M5 IoT Stack AWS EduKit Unboxing</title>
      <author>Mick</author>
      <pubDate>Thu, 22 Jul 2021 15:11:34 +0000</pubDate>
      <link>https://dev.to/aws-builders/core-2-m5-iot-stack-aws-edukit-unboxing-1gp0</link>
      <guid>https://dev.to/aws-builders/core-2-m5-iot-stack-aws-edukit-unboxing-1gp0</guid>
      <description>&lt;p&gt;I have no idea how I missed this one, I only just caught this on my network someone (can't recall who) was promoting the last days to register for the &lt;a href="https://www.hackster.io/contests/Healthy-Spaces-with-AWS"&gt;hackster healthy spaces challenge&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I didn't end up registering for the free hardware but I went ahead and purchased one and registered for the event. I'm going to run through unboxing the Core 2 M5 Stack and first impressions.&lt;br&gt;
Where cloud?&lt;/p&gt;

&lt;p&gt;OK, you're probably wondering where the cloud part comes in and if you know me, more specially where does the AWS part come in. Well, this is the M5Stack Core2 ESP32 IoT Development Education Kit for AWS which as you've probably gathered is geared towards using the device with AWS IoT, it's also branded with AWS logos.&lt;br&gt;
Why this kit?&lt;/p&gt;

&lt;p&gt;Apart from just being keen on AWS in general, this device looked pretty cool on the surface. In the past I've dabbled in various micro controllers and typically what I've found has been more challenging is once you start adding a bunch of sensors the bread board gets pretty busy and it's usually not so plug n play. If you want battery than that will be another challenge. This device has a bunch of built in sensors (and LiPO) built-in that you can start using with little effort, helps for prototyping quickly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unboxing"&gt;
  &lt;/a&gt;
  Unboxing
&lt;/h3&gt;

&lt;p&gt;The box itself is cool, branded in the M5 stack logo on the cardboard and tape. I like this subtle detail. The overall weight of the unit is very light, the approximate weight is around 100 grams.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ky56aw77--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fpz7xm3ws5qx0d9xisly.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ky56aw77--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fpz7xm3ws5qx0d9xisly.png" alt="core2 m5 close"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rh8qkZ-q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2wmljjdo5rlces8p1oao.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rh8qkZ-q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2wmljjdo5rlces8p1oao.png" alt="core2 m5 open"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Upon opening the box you'll be greeted with a pretty decent chunk of bubble wrap. The actual contents of the box are pretty small. I should note that I purchased an additional cable that I wanted and an additional sensor. I'd be curious to hear if the box is smaller if you just get the Core 2 on its own?&lt;/p&gt;

&lt;p&gt;The actual Core 2 packaging reminds me of a matchbox, sliding the contents outwards. I really liked the AWS branding on the packaging but in general don't expect Apple quality packaging. There is a sticker that needs to be removed before you can slide it out which is a little tricky or you'll need a knife or something.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v5MZOaja--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g23on4g3gmqw7ebka05n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v5MZOaja--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g23on4g3gmqw7ebka05n.png" alt="core2 m5 inside"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aLYhW9oc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e80abru7crffzz6uew7u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aLYhW9oc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e80abru7crffzz6uew7u.png" alt="core2 m5 matchbox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see from the size, it's quite a small footprint, it easily fits in the palm of my hand.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ux-vJ3BN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03o7yvkvnbht9y4w1fe4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ux-vJ3BN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03o7yvkvnbht9y4w1fe4.png" alt="palm of hand"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-in-the-box"&gt;
  &lt;/a&gt;
  Whats in the box
&lt;/h3&gt;

&lt;p&gt;Firstly, there are no instructions in the box, there is no QR code or anything on the box guiding you to what you're supposed to do next. The box is limited to the following items:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Core 2 M5 Stack device
2. USB-C to USB-A cable
3. Allen key / hex wrench
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Naturally, by including a tool I'm going to open this thing...     &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4-FMKccz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ig6ylxtpp7h0zi4pozdl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4-FMKccz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ig6ylxtpp7h0zi4pozdl.png" alt="exploring"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2hlvISAc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spqc1blcc6f1g866zdt6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2hlvISAc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spqc1blcc6f1g866zdt6.png" alt="underneath"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-inside-the-box-inside-the-core-2"&gt;
  &lt;/a&gt;
  What's inside the box inside the Core 2
&lt;/h3&gt;

&lt;p&gt;Once you remove the four hex screws you get a better look inside the Core 2, you'll notice the battery and the small ESP32 board. Separating the cover is a little tricky, you kind of need to pry it open and be careful not to bend the pins but it's not to bad.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qSpQCXtV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71pjirj5y7vt9eflemyp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qSpQCXtV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71pjirj5y7vt9eflemyp.png" alt="inside the stack"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tip: Take note of the different length screws, it's a tad annoying that they are different lengths.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---oYWeI8H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spy4hnlwptfdfd18zuwn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---oYWeI8H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spy4hnlwptfdfd18zuwn.png" alt="screw length"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The specs&lt;/p&gt;

&lt;p&gt;It's probably easy to just show you the diagram from the supplier as it lists out the specs pretty nicely.&lt;/p&gt;

&lt;p&gt;Here are some key take aways:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;* ESP32 16MB
* USB-C interface for connection, power etc
* Capacitive colour touch screen
* Microphone
* Speaker
* Vibration motor (kind of like your smart phone when it vibrates)
* RGB lights either side of the unit
* Led light
* Micro SD card slot
* Battery - 500mAh lithium
* 2.4Ghz Wifi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The M5 store has the most details if you want to dig further into it&lt;br&gt;
&lt;a href="https://shop.m5stack.com/collections/m5-core/products/m5stack-core2-esp32-iot-development-kit-for-aws-iot-edukit"&gt;https://shop.m5stack.com/collections/m5-core/products/m5stack-core2-esp32-iot-development-kit-for-aws-iot-edukit&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Plibt2ML--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/74mkq17uzmapqz58xrc2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Plibt2ML--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/74mkq17uzmapqz58xrc2.png" alt="core2 m5 promo image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The construction of the casing is pretty impressive, there are no sharp corners or manufacturing defects on my unit. The screen is protected by a plastic film that you can peel back and dispose of. There is a nice subtle M5 imprinted on the side of the unit which is nice detail. Apart from the unit being AWS orange there is no AWS logo or wording on the case itself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bonus-component"&gt;
  &lt;/a&gt;
  Bonus component
&lt;/h3&gt;

&lt;p&gt;I did purchase an additional sensor, a microphone. I was curious to see what the quality of additional sensors was like and for my hackster project I need to use a microphone. I was unsure what the quality of the built-in mic would be so it was a just in case purchase (deadlines)&lt;/p&gt;

&lt;p&gt;The mic sensor is pretty sweet. Again, the construction of the casing for the sensor is great and the cable is plugs in snugly. The sensor comes in its only little case. Which reminds me of gameboy game cases for some reason, ha! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5yrPzO0X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yv6bhcxlxecea8rv39rh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5yrPzO0X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yv6bhcxlxecea8rv39rh.png" alt="mic check"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boot-up"&gt;
  &lt;/a&gt;
  Boot up
&lt;/h3&gt;

&lt;p&gt;There is a small power button that you press to power up the beast, it only takes a moment, you've got to be quick if you want to snap a pic of the AWS logo but it's glorious!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VlrcoJ7s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7u5kknt0fqwvqg3ncu1a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VlrcoJ7s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7u5kknt0fqwvqg3ncu1a.png" alt="it's alive"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The lack of instructions becomes less of an issue as the touch screen welcomes you and has a bit of demo of the various sensors included with the device.&lt;/p&gt;

&lt;p&gt;The welcome program will have you swipe through and interact with the device to activate the vibration sensor, use the microphone, toggle controls and others like the gyro. Don't expect the same touch responsiveness as your phone, I think it's pretty good considering, I did find that when I loaded one of demo firmwares the controls weren't as good as the demo loaded from factory. I'm guessing there is an activate area or something that needs to be programmed. I haven't gotten that far.&lt;/p&gt;

&lt;p&gt;The final screen is a url to the &lt;a href="https://edukit.workshop.aws/"&gt;AWS EduKit website&lt;/a&gt; to begin going through the "hello-world" samples.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ignore-the-help"&gt;
  &lt;/a&gt;
  Ignore the help
&lt;/h3&gt;

&lt;p&gt;So, I did the obvious which was ignore the instructions, how hard could it be? I continued to fumble my way though thinking there must be a way to connect this to the wifi or there must be a mobile app. Again, none of this was obvious.&lt;/p&gt;

&lt;p&gt;Don't do what I did, &lt;a href="https://edukit.workshop.aws/"&gt;read the instructions from AWS&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mac-os-cable-connection"&gt;
  &lt;/a&gt;
  Mac OS Cable Connection
&lt;/h3&gt;

&lt;p&gt;If you're running Apple devices like a macbook you might run into trouble with the USB-C connection. When you plug the M5 in it loads a driver and creates a serial connection which you use to interface with. Connecting through my dock / hub didn't work, I had to connect to directly. Booo...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you're running a macbook usb-c only, make sure you have a cable e.g. USB-C to USB-C (not included). I can confirm the genuine Apple USB-C display, USB adapter worked if you have one of those.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#a-tale-of-two-buttons"&gt;
  &lt;/a&gt;
  A tale of two buttons
&lt;/h3&gt;

&lt;p&gt;One thing I found kinda of funny was the power and reset buttons, there are two buttons. For some reason I thought there was only one button but you held it down to reset the device. This is the most common type of button I've seen on IoT devices. The M5 has two separate buttons, one for power and one for reset, they are identical but on different sides. Subtle.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P4iKETOG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odgbskbys5t79pvx9u1e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4iKETOG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odgbskbys5t79pvx9u1e.png" alt="power button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#initial-connections-ide"&gt;
  &lt;/a&gt;
  Initial connections, IDE
&lt;/h3&gt;

&lt;p&gt;Good news! The M5 uses PlatformIO which integrates with Visual Studio Code, so you get that familiar IDE. I did find the PlatformIO extension to be pretty chunky and generally not very intuitive though. In my opinion it's the separate menu systems inside the extension which add to the confusion for me, it doesn't take long to work it out, so this is minor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MjfqKgZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2zk62sjzz8t6hvrrdo5o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MjfqKgZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2zk62sjzz8t6hvrrdo5o.png" alt="platformio ide"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you've connected the device and confirmed you actual have a serial connection available, loading firmware is pretty easy. I went ahead and loaded the getting started firmware, this firmware has a very basic spinning fan on the display that you can control.&lt;/p&gt;

&lt;p&gt;To toggle the controls remotely you can use the cli or you can use the mobile app. Follow the AWS EduKit guide to find the app.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tip: Restart the device once you've loaded the firmware and watch the terminal output on your computer. The QR code needed for claiming and registration is in the terminal output.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#recap-key-tips"&gt;
  &lt;/a&gt;
  Recap key tips
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;* If you're running Apple Mac or USB-C only host, buy a USB-C &amp;lt;&amp;gt; USB-C cable

&lt;ul&gt;
&lt;li&gt;Restart the M5 once flashed, monitor the output for the QR code for claiming&lt;/li&gt;
&lt;li&gt;Read the manual (shocker)&lt;/li&gt;
&lt;li&gt;Note the screws if you take it apart as they are different lengths
&lt;/li&gt;
&lt;/ul&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;a href="#final-thoughts"&gt;
&lt;/a&gt;
Final Thoughts
&lt;/h3&gt;


&lt;p&gt;As an owner of multiple generations of raspberry pi's, various hats, cases, feathers and other mc's i'm impressed by the build quality most. The case construction, fitting and detail that has gone into it is really impressive for the price (~$49.90 USD). Shipping was pretty quick at around 5-7 days to Australia.&lt;/p&gt;

&lt;p&gt;I thought the on-boarding wasn't as smooth as other IoT devices that I've used in the past, which would be scan a QR code, download app, register and toggle various buttons through the app. There are a few more steps to jump through to get going.&lt;/p&gt;

&lt;p&gt;The platformIO IDE looks pretty powerful, bit of a learning curve there, I would have liked a more basic interface. One thing to note is that the platformIO IDE caters to many different types of devices which is probably why its feature rich.&lt;/p&gt;

&lt;p&gt;In summary, I'm happy with the purchase so far, I'm looking forward to having a play with the Core 2 M5 and AWS IoT. Hopefully I'll have some more info to share soon!&lt;/p&gt;

</description>
      <category>aws</category>
      <category>iot</category>
      <category>core2m5</category>
      <category>hackster</category>
    </item>
  </channel>
</rss>
