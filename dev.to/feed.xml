<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>üéØ Level Up JavaScript Skills By Building Games.</title>
      <author>Chetan AtrawalkarüëâCA.</author>
      <pubDate>Mon, 09 Aug 2021 05:50:32 +0000</pubDate>
      <link>https://dev.to/chetan_atrawalkar/level-up-javascript-skills-by-building-games-2cp1</link>
      <guid>https://dev.to/chetan_atrawalkar/level-up-javascript-skills-by-building-games-2cp1</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q2B13LCL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zzbmb8zam39bl5poz4kl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q2B13LCL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zzbmb8zam39bl5poz4kl.png" alt="javascript"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;JavaScript&lt;/strong&gt; is mainly used for web-based applications and web browsers. But JavaScript is also used beyond the Web in software, servers and embedded hardware controls. Here are some basic things JavaScript is used for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Adding interactive behavior to web pages&lt;/li&gt;
&lt;li&gt;Creating web and mobile apps&lt;/li&gt;
&lt;li&gt;Building web servers and developing server applications&lt;/li&gt;
&lt;li&gt;Game development&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;In this article&lt;/strong&gt; will share some interesting games to level up your javascript skills from zero to hero.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SxXiPJ2E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1hayj2i9gp0f2vyfinmd.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SxXiPJ2E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1hayj2i9gp0f2vyfinmd.gif" alt="level"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;‚è© Here some best open source JavaScript games.&lt;/strong&gt; As the source code of these games is publicly available so it allows you to get an understanding of the actual procedure behind creating such games.&lt;/p&gt;

&lt;p&gt;The best thing about these open source JavaScript games is that you can &lt;strong&gt;easily download their source code&lt;/strong&gt; in your computer, modify it according to your needs, run it using the web browser.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-hextris"&gt;
  &lt;/a&gt;
  1. Hextris
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XJbnIQ4I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/548vuzqmhkhzw7ti5yiu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XJbnIQ4I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/548vuzqmhkhzw7ti5yiu.jpg" alt="hex"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Hextris&lt;/strong&gt; is an awesome puzzle game that is according to its developer inspired by the famous game Tetris.&lt;/li&gt;
&lt;li&gt;The game steadily increases its pace as it progresses which makes it very addictive. &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/Hextris/hextris"&gt;Source Code&lt;/a&gt;
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Hextris"&gt;
        Hextris
      &lt;/a&gt; / &lt;a href="https://github.com/Hextris/hextris"&gt;
        hextris
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Fast paced HTML5 puzzle game inspired by Tetris!
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#2-flexbox-froggy"&gt;
  &lt;/a&gt;
  2. Flexbox Froggy
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ub3JVjMV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwg2d08mjd866j6hdst0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ub3JVjMV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwg2d08mjd866j6hdst0.jpg" alt="Froggy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Flexbox Froggy&lt;/strong&gt; is the game developed. This game allows you to enter CSS styles in order to move the frog and reach the bottom where the pond is situated. &lt;/li&gt;
&lt;li&gt;The game is developed simply using HTML5, JavaScript, CSS styles, and some images.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/thomaspark/flexboxfroggy"&gt;Source Code&lt;/a&gt;
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/thomaspark"&gt;
        thomaspark
      &lt;/a&gt; / &lt;a href="https://github.com/thomaspark/flexboxfroggy"&gt;
        flexboxfroggy
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A game for learning CSS flexbox üê∏
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#3-2048"&gt;
  &lt;/a&gt;
  3. 2048
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JErf3Wts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07t3c4mm8hqac71cdih4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JErf3Wts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07t3c4mm8hqac71cdih4.jpg" alt="Al2048"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;2048&lt;/strong&gt; is a clone of popular Play Store game 1024. Its source code is written in HTML5, CSS3, and JavaScript.&lt;/li&gt;
&lt;li&gt;If you are familiar with these languages then I would suggest you to contribute in this stunning game and display your skills to the whole world. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/gabrielecirulli/2048"&gt;Source Code&lt;/a&gt;
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/gabrielecirulli"&gt;
        gabrielecirulli
      &lt;/a&gt; / &lt;a href="https://github.com/gabrielecirulli/2048"&gt;
        2048
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A small clone of 1024 (https://play.google.com/store/apps/details?id=com.veewo.a1024)
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#4-clumsy-bird"&gt;
  &lt;/a&gt;
  4. Clumsy Bird
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tLiNEe7_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2dntbo6wr2igk6hyzaz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tLiNEe7_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2dntbo6wr2igk6hyzaz.jpg" alt="Bird"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Clumsy Bird&lt;/strong&gt; is a clone of the ‚ÄúFlappy Bird‚Äù game and it makes use of the open source and lightweight HTML5 game engine MelonJS. &lt;/li&gt;
&lt;li&gt;The game works by you controlling a flying character and the mission is to successfully pass it from in-between the incoming walls without hitting them.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/ellisonleao/clumsy-bird"&gt;Source Code&lt;/a&gt;
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ellisonleao"&gt;
        ellisonleao
      &lt;/a&gt; / &lt;a href="https://github.com/ellisonleao/clumsy-bird"&gt;
        clumsy-bird
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üê¶ üéÆ A MelonJS port of the famous Flappy Bird Game
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#5-snake-game"&gt;
  &lt;/a&gt;
  5. Snake Game
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SG_rl3nE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4d5ikttnwafh16ib8yv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SG_rl3nE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4d5ikttnwafh16ib8yv.png" alt="snake"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;The Snake game&lt;/strong&gt;, created using JavaScript, and The HTML5 canvas.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/CodeExplainedRepo/Snake-JavaScript"&gt;Source Code&lt;/a&gt;
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/CodeExplainedRepo"&gt;
        CodeExplainedRepo
      &lt;/a&gt; / &lt;a href="https://github.com/CodeExplainedRepo/Snake-JavaScript"&gt;
        Snake-JavaScript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The Snake game, created using JavaScript, and The HTML5 canvas.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#6-tic-tac-toe"&gt;
  &lt;/a&gt;
  6. Tic Tac Toe
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ec6_L6J1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8o4q5zoijrh89ie62u5v.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ec6_L6J1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8o4q5zoijrh89ie62u5v.jpg" alt="tac toe"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Tic Tac Toe&lt;/strong&gt; is one of the most simple and addictive available out there. This game is developed using HTML5, JavaScript, and CSS for some styling. &lt;/li&gt;
&lt;li&gt;The developer has made use of Google fonts to make this game more visually appealing. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://codepen.io/timrijkse/pen/XjLGKv"&gt;Source Code&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/timrijkse/embed/XjLGKv?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-canvas-tetris"&gt;
  &lt;/a&gt;
  7. Canvas Tetris
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PaGzE_W1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iro6rc70o3lo6xw6zti8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PaGzE_W1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iro6rc70o3lo6xw6zti8.jpg" alt="Canvas"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Canvas Tetris&lt;/strong&gt; is a really simple illustration of the Tetris game which is written in HTML5 and JavaScript to give beginner developers a basic understanding of 2D game concepts. &lt;/li&gt;
&lt;li&gt;The developer has mentioned that he created this game in just 45 minutes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/dionyziz/canvas-tetris"&gt;Source Code&lt;/a&gt;
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dionyziz"&gt;
        dionyziz
      &lt;/a&gt; / &lt;a href="https://github.com/dionyziz/canvas-tetris"&gt;
        canvas-tetris
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A 2D tetris game in HTML5 canvas
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#8-pacmancanvas"&gt;
  &lt;/a&gt;
  8. Pacman-canvas
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rs9dXWYU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfde8zvzb17etqb6gbiu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rs9dXWYU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfde8zvzb17etqb6gbiu.jpg" alt="Pacman"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Pacman-canvas&lt;/strong&gt; is completely re-written from scratch in HTML5 and JavaScript. &lt;/li&gt;
&lt;li&gt;In Pacman-canvas you have to control a character using arrow keys on the keyboard and collect the items placed in a maze while protecting yourself from enemy units.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/platzhersh/pacman-canvas"&gt;Source Code&lt;/a&gt;
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/platzhersh"&gt;
        platzhersh
      &lt;/a&gt; / &lt;a href="https://github.com/platzhersh/pacman-canvas"&gt;
        pacman-canvas
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      An old classic, re-written in HTML5.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;JavaScript and modern browsers are improving everyday with excitingly new features that are very powerful, using javascript and HTML5 you can create breathtaking games that do not require Flash to work and it's helpful to level up your javascript skills. &lt;/li&gt;
&lt;li&gt;We hope these JavaScript Games will surely give you fun and also inspire you to create something new in your next projects. Share your thoughts with me in comment section and stay tuned for more interesting articles.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;üëç Don't forget to like, keep following ü§ó&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mr2mASwx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4awijdtgg2grwjpzei6r.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mr2mASwx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4awijdtgg2grwjpzei6r.gif" alt="like"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keep-claim-and-just-code-it-"&gt;
  &lt;/a&gt;
  Keep Claim And Just Code It üòé.
&lt;/h3&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>gamedev</category>
    </item>
    <item>
      <title>Artificial Intelligence</title>
      <author>Kouluru Nanda Kishore Reddy</author>
      <pubDate>Mon, 09 Aug 2021 04:55:56 +0000</pubDate>
      <link>https://dev.to/koulurunandakishorereddy/artificial-intelligence-3f7m</link>
      <guid>https://dev.to/koulurunandakishorereddy/artificial-intelligence-3f7m</guid>
      <description>&lt;h1&gt;What is Artificial Intelligence(AI) ?&lt;/h1&gt;

&lt;p&gt;Artificial intelligence (AI) is a wide-ranging branch of computer science concerned with building smart machines capable of performing tasks that typically require human intelligence. AI is an interdisciplinary science with multiple approaches, but advancements in machine learning and deep learning are creating a paradigm shift in virtually every sector of the tech industry. &lt;/p&gt;

&lt;p&gt; AI is the future. It is shaping many industries even when it‚Äôs new compared to other technologies. AI is also growing as scientists and engineers are doing research at a rapid pace. Companies such as Google, Facebook, Microsoft, and others are also investing heavily in AI research, and the results are quite evident. The release of self-driving cars is just an example of rapid AI growth.&lt;/p&gt;

&lt;h2&gt;History and Evolution of Artificial Intelligence&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jy_odt2W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625234809634/eDEONIrqv.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jy_odt2W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625234809634/eDEONIrqv.jpeg" alt="History-of-Artificial-Intelligence-1200x720.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The idea of Artificial Intelligence is believed to be born back in 1940s and 1950s when some scientists came up with the idea of creating artificial brain. Since then, there is no turning back.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Turing test(1950s)&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Xm4YQNT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625234881052/8WTxKqj1h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Xm4YQNT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625234881052/8WTxKqj1h.png" alt="turing-test-in-ai.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;
- Turing test is a very famous and the very first one performed by a British computer scientist Alan Turing. In this test, Turing tried to replace a machine with a human in a conversation over a teleprinter and checked whether a computer can replace human with a significant level of intelligence.&lt;/p&gt;
&lt;p&gt;
- He published his research in the famous landmark paper "Computing Machinery and intelligence" in 1950s.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;ELIZA(1960s)&lt;/b&gt;&lt;/p&gt;



&lt;p&gt;
- LIZA was a chatterbot created by Joseph Weizenbaum which is believed to have been one of the first programs to pass Turing test.&lt;/p&gt;
&lt;p&gt;
- It managed to mislead many people by mimicking the role of a therapist. It encouraged the people to speak more by cross questioning them. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;IBM's Deep Blue&lt;/b&gt;&lt;/p&gt;


&lt;p&gt;In 1997, AI achieved a remarkable goal when the world chess champion and grand master Gary Kasparov was defeated by IBM‚Äôs Deep Blue, a chess playing computer program.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Kismet(1990s)&lt;/b&gt;&lt;/p&gt;



&lt;p&gt;Kismet is a robot made in late 1990s. This robot had the capability to recognize and simulate facial expressions. It responded by making different facial expression like those of happiness, excitement, sorrow and so on for different scenarios.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Sony's AIBO(1999)&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;
- AIBO(The Artificial Intelligence robot) was a robotic dog created by Sony in 1999 originally for entertainment purposes.&lt;/p&gt;
&lt;p&gt;
- This Robotic dog, AIBO has the capability to develop its own personality over time. It also has face recognition capability which helps it to detect different members of your family.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;ASIMO(2000)&lt;/b&gt;&lt;/p&gt;



&lt;p&gt;
- ASIMO(Advanced Step in Innovative Mobility) is a humanoid robot which was designed by Honda in 2000. ASIMO has the capability to recognize and simulate the surrounding environment such as recognition of moving objects, postures, sounds and faces etc.&lt;/p&gt;
&lt;p&gt;
- It is basically designed to help people. It can even recognize when a person offers it a handshake or calls it by the name.
&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Siri(2011)&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bzHruEnA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625236154431/qwcNcrNn6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bzHruEnA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625236154431/qwcNcrNn6.png" alt="Screen-shot-2011-10-04-at-1.34.33-PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;
- Siri was the first digital virtual assistant designed originally by SRI International and is widely used in iOS, macOS, iPadOS and watchOS.&lt;/p&gt;

&lt;p&gt;
- Siri has many amazing features like scheduling events and reminders, Navigation, device settings, Phone and text actions, handle payments through Apple Pay and much more.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Google DeepMind's AlphaGo(2016)&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5hqgGyAi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625236373944/1blVg-Zwq.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5hqgGyAi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625236373944/1blVg-Zwq.jpeg" alt="google-deepmind-go.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In 2016, Google DeepMind's AlphaGo defeated a professional Korean 'Go champion' who won 27 major tournaments from 2002 to 2016.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Microsoft's Cortana and Amazon's Alexa&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WG8bxFvI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625236483874/fbFVzfkj2.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WG8bxFvI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625236483874/fbFVzfkj2.jpeg" alt="cortana-larger-user-base-amazon-alexa.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;
- The era of virtual assistants started with the release of Apple's Siri. Since then, many developments were made in this field. Alexa, a virtual assistant by Amazon, first came into existence in November,2014 whereas Microsoft announced the availability of Cortana for Windows 10 desktops and mobile devices in January,2015.    &lt;/p&gt;
&lt;p&gt;
- In today's times, these virtual assistants are capable of performing so many daily based tasks with a remarkable level of efficiency&lt;/p&gt;

&lt;h1&gt;HOW DOES ARTIFICIAL INTELLIGENCE WORK?&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SEzD4kIq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625236824567/wdhwv9Xdi.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SEzD4kIq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625236824567/wdhwv9Xdi.jpeg" alt="AI 1_0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AI works by combining large amounts of data with fast, iterative processing and intelligent algorithms, allowing the software to learn automatically from patterns or features in the data. AI is a broad field of study that includes many theories, methods and technologies, as well as the following major subfields:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;&lt;em&gt;Machine learning&lt;/em&gt;&lt;/b&gt; automates analytical model building. It uses methods from neural networks, statistics, operations research and physics to find hidden insights in data without explicitly being programmed for where to look or what to conclude.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;&lt;em&gt;A neural network&lt;/em&gt;&lt;/b&gt; is a type of machine learning that is made up of interconnected units (like neurons) that processes information by responding to external inputs, relaying information between each unit. The process requires multiple passes at the data to find connections and derive meaning from undefined data.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;b&gt;&lt;em&gt;Deep learning &lt;/em&gt;&lt;/b&gt;uses huge neural networks with many layers of processing units, taking advantage of advances in computing power and improved training techniques to learn complex patterns in large amounts of data. Common applications include image and speech recognition.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;b&gt;&lt;em&gt; Cognitive computing&lt;/em&gt;&lt;/b&gt; is a subfield of AI that strives for a natural, human-like interaction with machines. Using AI and cognitive computing, the ultimate goal is for a machine to simulate human processes through the ability to interpret images and speech ‚Äì and then speak coherently in response&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;b&gt;&lt;em&gt;Computer vision&lt;/em&gt;&lt;/b&gt; relies on pattern recognition and deep learning to recognize what‚Äôs in a picture or video. When machines can process, analyze and understand images, they can capture images or videos in real time and interpret their surroundings.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;b&gt;&lt;em&gt; Natural language processing (NLP) &lt;/em&gt;&lt;/b&gt;is the ability of computers to analyze, understand and generate human language, including speech. The next stage of NLP is natural language interaction, which allows humans to communicate with computers using normal, everyday language to perform tasks.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;HOW IS AI USED?&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b8KI1cvp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625240202143/VIJnDYQbv.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b8KI1cvp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625240202143/VIJnDYQbv.jpeg" alt="2156889_1588010158_politics.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;"AI is a computer system able to perform tasks that ordinarily require human intelligence... Many of these artificial intelligence systems are powered by machine learning, some of them are powered by deep learning and some of them are powered by very boring things like rules."&lt;/p&gt;

&lt;p&gt;Artificial intelligence generally falls under two broad categories: &lt;/p&gt;

&lt;p&gt;-&lt;b&gt; Narrow AI:&lt;/b&gt; Sometimes referred to as "Weak AI," this kind of artificial intelligence operates within a limited context and is a simulation of human intelligence. Narrow AI is often focused on performing a single task extremely well and while these machines may seem intelligent, they are operating under far more constraints and limitations than even the most basic human intelligence. &lt;/p&gt;

&lt;p&gt;-&lt;b&gt;Artificial General Intelligence (AGI): &lt;/b&gt;AGI, sometimes referred to as "Strong AI," is the kind of artificial intelligence we see in the movies, like the robots from Westworld or Data from Star Trek: The Next Generation. AGI is a machine with general intelligence and, much like a human being, it can apply that intelligence to solve any problem.  &lt;/p&gt;

&lt;h1&gt;Advantages of Artificial Intelligence&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LNg0U9-f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625240628748/mol3-YfxQ.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LNg0U9-f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625240628748/mol3-YfxQ.jpeg" alt="Advantages-of-Artificial-Intelligence.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1) Reduction in Human Error&lt;/p&gt;

&lt;p&gt;2) Takes risks instead of Humans&lt;/p&gt;

&lt;p&gt;3) Available 24x7&lt;/p&gt;

&lt;p&gt;4) Helping in Repetitive Jobs&lt;/p&gt;

&lt;p&gt;5) Digital Assistance&lt;/p&gt;

&lt;p&gt;6) Faster Decisions&lt;/p&gt;

&lt;p&gt;7) Daily Applications&lt;/p&gt;

&lt;p&gt;8) New Inventions&lt;/p&gt;

&lt;h1&gt;Disadvantages of Artificial Intelligence&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OkzQnsgr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625240963976/guiYR5O5l.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OkzQnsgr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625240963976/guiYR5O5l.jpeg" alt="download.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1)High cost of implementation&lt;/p&gt;

&lt;p&gt;2)Doesn't improve with experience&lt;/p&gt;

&lt;p&gt;3)Lacks creativity&lt;/p&gt;

&lt;p&gt;4)Risk of unemployment&lt;/p&gt;

&lt;h2&gt;Finally :&lt;/h2&gt;

&lt;p&gt;I am going to close by giving some general conclusions about Artificial Intelligence (AI). AI is the ability of machines to adapt to external inputs by forming rational behaviors based on that input. Using AI, we can create systems that can perform tasks that would otherwise require human intelligence.&lt;/p&gt;

&lt;p&gt;Thank you for reading üòä&lt;/p&gt;

&lt;p&gt;If you have enjoyed this article and would like to buy me a coffee you can do it here üòäüëá&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/koulurunanda"&gt;Buy me a Coffee&lt;/a&gt; &lt;/p&gt;

</description>
      <category>ai</category>
      <category>techtalks</category>
      <category>programming</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Angular: Pros and Cons</title>
      <author>Siddharth</author>
      <pubDate>Mon, 09 Aug 2021 03:49:19 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/angular-pros-and-cons-m9l</link>
      <guid>https://dev.to/siddharthshyniben/angular-pros-and-cons-m9l</guid>
      <description>&lt;p&gt;&lt;a href="https://angular.io"&gt;Angular&lt;/a&gt;, maintained by Google and one of the most powerful web development frameworks out there, is a pretty good choice for web development. To help you decide whether Angular is good for you, here's a list of Angular pros and cons.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: We are talking about Angular (2-12), &lt;strong&gt;NOT&lt;/strong&gt; Angular.js.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;Scroll to the end of the post for a summary if you don't want to read the whole thing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; Angular sites are &lt;strong&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/SPA"&gt;Single Page Applications (SPA)&lt;/a&gt;&lt;/strong&gt;. SPAs allow us to load new pages without requesting the server, giving a more dynamic and interactive experience. For example, &lt;a href="https://gmail.com"&gt;GMail&lt;/a&gt; is a SPA.&lt;/li&gt;
&lt;li&gt; Angular is &lt;strong&gt;feature-packed&lt;/strong&gt;. State? Baked in. Reactivity? Baked in. Routing? Baked in. DI? Baked in. Services? Baked in.&lt;/li&gt;
&lt;li&gt; Angular is &lt;strong&gt;cross-platform&lt;/strong&gt;.

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;PWAs&lt;/strong&gt;: Use modern web platform capabilities to deliver app-like experiences. High performance, offline, and zero-step installation.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Native&lt;/strong&gt;: Build native mobile apps with strategies from Cordova, Ionic, or NativeScript.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Desktop&lt;/strong&gt;: Create desktop-installed apps across Mac, Windows, and Linux using the same Angular methods you've learned for the web plus the ability to access native OS APIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt; Angular **optimizes your templates into code that's highly optimized for today's JavaScript virtual machines, giving you all the benefits of hand-written code with the productivity of a framework.&lt;/li&gt;
&lt;li&gt; Angular has &lt;strong&gt;automatic code-splitting&lt;/strong&gt; so users only load code required to render the view they request.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Angular uses TypeScript&lt;/strong&gt;, which provides better tooling, cleaner code, and higher scalability.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Angular is productive.&lt;/strong&gt; It provides all the tools you need to scaffold apps and components. Angular provides a handy CLI which can generate production-ready apps and components with a single command.&lt;/li&gt;
&lt;li&gt; Angular's &lt;strong&gt;MVC Architecture&lt;/strong&gt; makes it easy to separate styles from logic from markup.&lt;/li&gt;
&lt;li&gt;Angular has a &lt;strong&gt;flexible templating system&lt;/strong&gt; which supports 1 or 2-way binding, pipes, custom structural directives, and more.&lt;/li&gt;
&lt;li&gt; Angular has built-in support for &lt;strong&gt;Services and Dependency Injection (DI)&lt;/strong&gt;. This further separates the business logic from your components, which provides cleaner code.&lt;/li&gt;
&lt;li&gt; Angular &lt;strong&gt;sets up testing frameworks automatically&lt;/strong&gt;. With Karma for unit tests, you can know if you've broken things every time you save.&lt;/li&gt;
&lt;li&gt; Angular has a built-in animation API for high-performance, complex choreographies and animation timelines with very little code.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Pre-render Angular with Angular Universal&lt;/strong&gt; and serve the first view of your application on Node.js, .NET, &lt;code&gt;PHP&lt;/code&gt;, and other servers for near-instant rendering in just HTML and CSS. Also paves the way for sites that optimize for SEO.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; Angular is a SPA, so it has &lt;strong&gt;limited SEO capabilities&lt;/strong&gt;. But, you can prerender Angular using Angular Universal.&lt;/li&gt;
&lt;li&gt; Angular has a &lt;strong&gt;steep learning curve&lt;/strong&gt;, But it's worth the effort, as Angular is super powerful.&lt;/li&gt;
&lt;li&gt; Angular is &lt;strong&gt;complex and verbose&lt;/strong&gt;, so it's not really suitable for small apps. It's designed for complex systems.&lt;/li&gt;
&lt;li&gt; Angular has a (kind of) low ranking on some developer surveys. On The State of JavaScript, Angular has high negative opinions. On the Stack Overflow developer survey, Angular is the ninth most loved developer framework, behind React and Vue, which are at 2nd and 3rd place. Angular is the 8th most dreaded web framework, and it's the third most wanted web framework.&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;


&lt;center&gt;
&lt;strong&gt;13&lt;/strong&gt; pros &lt;strong&gt;‚Ä¢&lt;/strong&gt; &lt;strong&gt;4&lt;/strong&gt; cons&lt;/center&gt;
&lt;br&gt;

&lt;p&gt;Angular is a &lt;em&gt;powerful&lt;/em&gt; framework if you are willing to spend time and effort learning it. It has all sorts of features like DI, Services, Components, and more, but its SPA nature makes it bad at SEO. It's also not the most popular framework, owing to its steep learning curve. It's also highly focused on scalability.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Use Angular&lt;/strong&gt; if you are building large, complex applications that should be scalable and modular.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don't use Angular&lt;/strong&gt; smaller apps which don't need all the complexity Angular provides. Don't use them for static sites, because of the accessibility problems and over complexity.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>codenewbie</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What did you teach this week? (1-8 Aug)</title>
      <author>Aatmaj</author>
      <pubDate>Mon, 09 Aug 2021 03:12:04 +0000</pubDate>
      <link>https://dev.to/aatmaj/what-did-you-teach-this-week-1-8-aug-4j6i</link>
      <guid>https://dev.to/aatmaj/what-did-you-teach-this-week-1-8-aug-4j6i</guid>
      <description>&lt;h2&gt;
  &lt;a href="#welcome-all-did-you-teach-anyone-anything-this-week-i-am-sure-you-did-think-carefully-and-post-in-the-comments-below"&gt;
  &lt;/a&gt;
   Welcome all! Did you teach anyone anything this week? I am sure you did. Think carefully and post in the comments below! 
&lt;/h2&gt;




&lt;p&gt;&lt;em&gt;Teaching can be like.......&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lending a helping hand to your Colleague in learning a new concept &lt;/li&gt;
&lt;li&gt;Posting a blog which teaches a new technology&lt;/li&gt;
&lt;li&gt;Answering on Stack Overflow&lt;/li&gt;
&lt;li&gt;Participating in group training activities&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;....................and many other ways&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6jRA5m_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ex3xvf47nnq99aecrrd1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6jRA5m_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ex3xvf47nnq99aecrrd1.gif" alt="teacgher"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So regardless how much you have taught, whome you have taught or how you have taught, please comment below. Let us all join together and create a source of positive energy by teaching others.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d2lCL7CQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofbjeoc07h4qxojsh187.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d2lCL7CQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofbjeoc07h4qxojsh187.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>teachingthisweek</category>
      <category>teaching</category>
    </item>
    <item>
      <title>Its 2021, and UX is still Overrated</title>
      <author>Denin Paul</author>
      <pubDate>Mon, 09 Aug 2021 02:23:40 +0000</pubDate>
      <link>https://dev.to/byteslash/its-2021-and-ux-is-still-overrated-50kj</link>
      <guid>https://dev.to/byteslash/its-2021-and-ux-is-still-overrated-50kj</guid>
      <description>&lt;p&gt;&lt;em&gt;...or at least the "UX" the internet talks on.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It's been long since I've been observing articles, tweets, or videos on how UX is like the "single most important item" or like "the icing on the cake". You even have parts of the UX community continuously trashing on anyone who just opens dribbble.com, or who would not agree to "Usability over aesthetics" (cause it ain't true always).&lt;/p&gt;

&lt;p&gt;Even I fell into this ego trap and established my authority using the "UX" entitlement. It took a while for me to have a big enough slap on my face and be aware of it. And I just don't want anyone who's getting into UI/UX to be up there.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BsRRcc2H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/CDb1zMILM74AAAAC/batman-slap.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BsRRcc2H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/CDb1zMILM74AAAAC/batman-slap.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What's worse is how everyone wraps the UX side all up with some "linear" systematic process and case studies, which is usually what someone starting out observes everywhere (esp on Medium). Most of these depend on data from users (mostly fake), obtained through boring forms &amp;amp; other metrics, and stops right after the first iteration of the design.&lt;/p&gt;

&lt;p&gt;"So why is this a problem" you might ask. Lemme explain.&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-ketchup-bottle-analogy"&gt;
  &lt;/a&gt;
  The ketchup bottle analogy
&lt;/h2&gt;

&lt;p&gt;Ah, it all comes to this very overused analogy, which shows how 'UX is always the King' and how 'the aesthetics don't matter, it's always the accessibility &amp;amp; usability. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N1aZJQPR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/818cavzkzf9gkl30hthy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N1aZJQPR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/818cavzkzf9gkl30hthy.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When it simply ain't it! It's missing something else which is much important.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"The context."&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;What if you are to place a couple of them in a premium restaurant/hotel? which one would you choose? Wouldn't it be the one labeled "UI"?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As the design labeled "UX" uses plastic, isn't that not recommended if the brand is about being eco-friendly and having organic ketchup being served?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If the design tagged "UI" has more premium ketchup inside it, wouldn't users care about the hassle and jump the hurdles to get to the value?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is just the tip of the iceberg. Ask a couple more questions and would get to know why it isn't as simple as just "what the user wants". &lt;/p&gt;

&lt;p&gt;And that's exactly the problem with most of the UX goers&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-overemphasis-on-user"&gt;
  &lt;/a&gt;
  The over-emphasis on user
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UVsKjhEf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.redd.it/s2un7gty0vd51.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UVsKjhEf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.redd.it/s2un7gty0vd51.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lemme be honest, I would use the ketchup bottle labeled "UX". &lt;/p&gt;

&lt;p&gt;I mean if you took a survey, even most would choose it. And you can show this to the premium hotel manager client and be like: "You are fricking wrong. See what the data says". To which the client would reply he doesn't care, he just wants the one that is labeled "UI" cause it looks more premium, and fits his brand.&lt;/p&gt;

&lt;p&gt;This then sets you off to making tweets, articles, or memes on how clients are fools, and how they need to learn a bit of UX to get some sense in the puny brain of theirs, or something (I am seriously not venting out on my previous clients over here). &lt;/p&gt;

&lt;p&gt;Thus teaching new designers, who get to see all these, to give zero facks about the client.&lt;/p&gt;

&lt;p&gt;Okay, I guess I went too far but wasn't that scarily accurate?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pcMlORpw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/rF5ERf7ncqUAAAAC/oh-no-top-gear.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pcMlORpw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/rF5ERf7ncqUAAAAC/oh-no-top-gear.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I don't mean to say that the client can never be wrong. What I mean is the fact that you have been focusing on the wrong group of syllables of "User Experience". &lt;/p&gt;

&lt;p&gt;Your eyes where on "User", instead of focusing on "Experience"&lt;/p&gt;

&lt;p&gt;And that's where you went wrong! Your job was never about providing what the users wanted, it was to design a great experience for them. To know what experience you have to serve your users, you might need to take some context into your research. You might need to know what the business is, the brand they are going for, THE BIG PICTURE.&lt;/p&gt;

&lt;p&gt;You need to collaborate! &lt;/p&gt;

&lt;p&gt;And suddenly you are not the 'entitled being' who knows it all. You are just a part of the team that works with the UI Designer and others, helping in designing the greatest experiences for the "humans" using it. (yes "humans", not data points)&lt;/p&gt;

&lt;p&gt;And the scary part of this is you can't predict or control much of the human experiences or emotions. You can only influence it. So how do you do it?&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-a-better-experience"&gt;
  &lt;/a&gt;
  How to create a better experience
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VSZ2VchC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/vHcHG7mOtuAAAAAC/thumbs-up-ok.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VSZ2VchC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/vHcHG7mOtuAAAAAC/thumbs-up-ok.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instead of doing more research, giving out more forms, getting more personal data of the users, or doing more wireframe tests ‚Äî start thinking about how the users would use the products in the given context. &lt;/p&gt;

&lt;p&gt;This is why empathy and psychology are really necessary for UX thinking (also the reason even I dwell a lot into learning psychology)&lt;/p&gt;

&lt;p&gt;"Aren't you gonna end up with assumptions?", you might ask. I mean yes you are gonna end up with assumptions. &lt;/p&gt;

&lt;p&gt;But it's the same with doing all research and collecting data too. It's just that these assumptions have selective data to back it up (notice that I used 'selective' and not incorrect). And that adds up to your ego too :P&lt;/p&gt;

&lt;p&gt;The real research starts after the user uses your first draft/prototype of the design. This is where you need to gather data and ask in to fill the forms with regards to the experience, not about the user. &lt;/p&gt;

&lt;p&gt;This means yes, it's not a linear systematic process where you do the research, collect gibberish, make some wireframe, submit it to the UI Designer, and shake the dust off your hands. Collaboration and finding a middle ground is the key. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5bOccd9w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://thumbs.gfycat.com/SpanishKindheartedAdouri-size_restricted.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5bOccd9w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://thumbs.gfycat.com/SpanishKindheartedAdouri-size_restricted.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, start collaborating with the UI Designers and others to forge the greatest experience for the user. For this, the UI Designers must know about UX and vise versa, as it's important for effective communication.&lt;/p&gt;

&lt;p&gt;As soon as you change your perspective and start delivering experiences you will get to understand how much a role UI plays. You realize the amount of correlation both have. Contrary to popular belief, UI is a part of the UX, and they aren't separate entities. &lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-whats-the-takeaway"&gt;
  &lt;/a&gt;
  So What's the takeaway
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DtOGuQ6y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/Ch2H6tcXVRIAAAAd/blac-youngsta-smile.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DtOGuQ6y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/Ch2H6tcXVRIAAAAd/blac-youngsta-smile.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;People (especially those who write UX Case Studies on Medium) often forget that Design is an iterative process. Instead of testing their design and improving upon the feedback they receive, of the experience they deliver, they just stop after the first iteration of the design, and tell how right they are through pointless research, fake personas, and whatnot.&lt;/p&gt;

&lt;p&gt;Instead, I encourage y'all to start focusing on documenting the feedback process after the first iteration of the design and show how you improved it upon feedback. This way you can accurately understand wherein you have come short when it comes to delivering the experience to the user, and have an idea on how you can make the experience even better by the next iteration.&lt;/p&gt;

&lt;p&gt;At the end of the day, the greatest products aren't the ones with great user research, its the one that provides great value and also improves on feedback. &lt;/p&gt;

&lt;p&gt;Cheerio!&lt;/p&gt;

</description>
      <category>ux</category>
      <category>design</category>
      <category>webdev</category>
      <category>uiweekly</category>
    </item>
    <item>
      <title>Fun Ruby tricks I learned in codewars</title>
      <author>Ashley</author>
      <pubDate>Mon, 09 Aug 2021 02:08:44 +0000</pubDate>
      <link>https://dev.to/saturn226/fun-ruby-tricks-i-learned-in-codewars-41nl</link>
      <guid>https://dev.to/saturn226/fun-ruby-tricks-i-learned-in-codewars-41nl</guid>
      <description>&lt;p&gt;I have been playing around with codewars a lot lately. (&lt;a href="http://www.codewars.com"&gt;www.codewars.com&lt;/a&gt;) I like working with code challenges they are pretty fun. One thing that is great about playing with codewars is that I got to use a lot of tools and methods I would have never else thought of for example&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;delete&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This comes in handy for challenges that ask you to remove a series of elements from a string.&lt;br&gt;
For example, if you need to remove some vowels from a string&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt; &lt;span class="n"&gt;my_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"This is such a wonderful method"&lt;/span&gt;
 &lt;span class="n"&gt;my_string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"aeiou"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;Ths&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;sch&lt;/span&gt;  &lt;span class="n"&gt;wndrfl&lt;/span&gt; &lt;span class="n"&gt;mthd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is much easier than using gsub!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;to_str(base)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So most everyone knows how to_s works, you are converting a non string object to a string representation of that object. But one thing a lot of people forget is that you can pass in an argument to to_s when its placed on a Fixnum. This argument represents a numerical base which by default is 10. Therefore, this method can be used to convert numbers to different bases&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"100011"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;partition&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is a great way to split up some data. It accepts a block and creates 2 arrays. For the elements that are true, they are first array, while the rest are placed in the second array.  Imagine we have a problem where we need to seperate some evens and odds&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="n"&gt;my_array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;my_array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;partition&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;even?&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;even? odd?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Which reminds me, I have a tendency to forget about these ruby methods. They work just as you expect. The question mark signify's this method returns some sort of boolean.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;even?&lt;/span&gt;
  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;

    &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;odd?&lt;/span&gt;
    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Its a shame how often I resort to modulo to check for evens and odds knowing this exists&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;chars&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;chars will split a string into an array of chars&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt; &lt;span class="s2"&gt;"This is my string"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chars&lt;/span&gt;
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"T"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"h"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"i"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"i"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"m"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"t"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"r"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"i"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"g"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;of course split('') would do the same, but I like this better&lt;/p&gt;

&lt;p&gt;Code challenges are super fun, and its great to learn new tricks. I recomment trying codwars sometime or even hacker rank or leetcode. I think Im going to go do some SQL challenges now!&lt;/p&gt;

</description>
      <category>codewars</category>
      <category>ruby</category>
      <category>fun</category>
    </item>
    <item>
      <title>Web Development Roadmap -2021</title>
      <author>Jjyygh</author>
      <pubDate>Mon, 09 Aug 2021 01:05:00 +0000</pubDate>
      <link>https://dev.to/jjyygh/web-development-roadmap-2021-54o0</link>
      <guid>https://dev.to/jjyygh/web-development-roadmap-2021-54o0</guid>
      <description>&lt;p&gt;¬†&lt;/p&gt;
&lt;p&gt;There has never been a better time to learn to code or make a career change to software engineering. The demand for web developers is at an all-time high, and it‚Äôs only increasing. There are both free and premium tutorials online that teach you the skills to get a job as a developer ‚Äî no CS degree required ü§ì.&lt;/p&gt;
&lt;p id="561d"&gt;This article details the needed skills and the corresponding tutorials to learn them effectively. The illustrated guide is provided by &lt;b&gt;&lt;a href="http://www.codelivly.com"&gt;Codelivly&lt;/a&gt;&lt;/b&gt;¬†and can be found on¬†codelivly¬†¬†‚Äî Codelivly work is excellent so be sure to star the repo and subscribe to his newsletter to support his efforts. Don‚Äôt be intimidated by the map. It may seem like a lot, but I‚Äôll break it down so you can learn each part step-by-step.&lt;/p&gt;
&lt;p id="dda0"&gt;This article will be divided into the following sections:&lt;/p&gt;
&lt;p id="dda0"&gt;1. &lt;b&gt;&lt;a href="https://www.codelivly.com/web-developer-roadmap-2021/"&gt;Full Stack Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;2. &lt;b&gt;&lt;a href="https://www.codelivly.com/frontend-web-developer-roadmap/"&gt;Frontend Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;3. &lt;b&gt;&lt;a href="https://www.codelivly.com/backend-web-developer-roadmap/"&gt;Backend Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;4. &lt;b&gt;&lt;a href="https://www.codelivly.com/the-best-python-frameworks-for-web-development-in-2021/"&gt;Best Python Framework For Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;







</description>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>10 Computer Vision Startups Disrupting the Retail Industry</title>
      <author>SiaSearch</author>
      <pubDate>Mon, 09 Aug 2021 01:02:01 +0000</pubDate>
      <link>https://dev.to/siasearch/10-computer-vision-startups-disrupting-the-retail-industry-2lck</link>
      <guid>https://dev.to/siasearch/10-computer-vision-startups-disrupting-the-retail-industry-2lck</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally published at: &lt;a href="https://www.siasearch.io/blog/computer-vision-startups-retail-industry"&gt;https://www.siasearch.io/blog/computer-vision-startups-retail-industry&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Online retail has been growing steadily for years with no sign of stopping. Especially amid movement restrictions induced by the COVID-19 pandemic, &lt;a href="https://news.un.org/en/story/2021/05/1091182"&gt;research shows that global online sales jumped to $26.7 trillion&lt;/a&gt; in 2020. With the rise of ecommerce, one thing is abundantly clear: brick-and-mortar retailers need to innovate if they want to stay competitive. &lt;/p&gt;

&lt;p&gt;The use of AI technologies like computer vision is rapidly increasing in the retail industry. &lt;a href="https://www.siasearch.io/retail"&gt;AI-enhanced retail&lt;/a&gt; holds the promise to eliminate operational inefficiencies and provide shoppers with frictionless in-store experiences. In this article, we‚Äôve put together a list of the most innovative computer vision startups in the retail space.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-future-of-ai-in-retail"&gt;
  &lt;/a&gt;
  The Future of AI in Retail
&lt;/h2&gt;

&lt;p&gt;In recent years, an increasing number of retail companies have started to quietly transform physical stores. Walmart, for instance, began &lt;a href="https://corporate.walmart.com/newsroom/2019/04/25/walmarts-new-intelligent-retail-lab-shows-a-glimpse-into-the-future-of-retail-irl"&gt;installing an array of sensors, cameras and processors&lt;/a&gt; to monitor inventory levels, perform automated product quality checks, and more.&lt;/p&gt;

&lt;p&gt;Many industry giants have followed suit by employing similar approaches to drive in-store efficiency, better logistics, prevent theft, and more. Research shows that the retail AI market is growing fast‚Äîaccording to a recent RIS News report, only 3% of retailers were utilizing computer vision technology at the end of 2020, yet an additional 40% had plans to deploy new solutions within the next year. &lt;/p&gt;

&lt;p&gt;Computer vision solutions present retailers with ample opportunity to boost operations as well as enhance the shopping experience for customers. Among the most promising applications of computer vision include inventory management, loss prevention, automated checkout, and behavioral analytics. From employee-free shops to in-store surveillance, here are several computer vision startups disrupting the retail industry.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#computer-vision-startups-in-retail"&gt;
  &lt;/a&gt;
  Computer vision startups in retail
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Inventory management&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://goradar.com/"&gt;RADAR&lt;/a&gt;: RADAR is a fully integrated hardware and software solution to automate inventory management using RFID and computer vision techniques. Their mission is to streamline inventory management via automated inventory counts, improved in-store replenishment and instantaneous customer stock checks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://traxretail.com/resources/trax-computer-vision-platform/"&gt;Trax&lt;/a&gt;: Singapore-based startup Trax provides an in-store solution that uses a combination of computer vision models and hardware to keep track of their inventory in real time. This solution ensures out-of-stock items are repurchased efficiently, while expired items are pulled off from the shelves. The company holds 23 patents on its technology and can analyze images from phones, in-store cameras, and grocery store robots.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Automated checkout&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://standard.ai/"&gt;Standard.ai&lt;/a&gt;: Previously known as Standard Cognition, Standard.ai‚Äôs automated checkout solution is made to fit with retailers‚Äô existing stores and technology. They boast an easy to install camera-first solution that doesn‚Äôt employ the use of turnstiles or gates. Standard doesn't use any facial recognition or biometrics, and all deployments are on-premise to ensure maximum performance and security for retailers and shoppers alike.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://trigo.tech/"&gt;Trigo&lt;/a&gt;: Using proprietary algorithms and affordable off-the-shelf sensor kits, Tel Aviv-based Trigo allows retailers to analyze anonymized shoppers‚Äô movements and product choices in real time. The system automatically compiles selected items into a virtual shopping list, enabling shoppers to leave without going through a traditional checkout line.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.accelrobotics.com/"&gt;Accel Robotics&lt;/a&gt;: Accel Robotics provides checkout-free shopping experiences across existing and new store formats with its patented camera-based AI system. They recently launched Valet Market, a completely automated convenience storefront without cashiers or checkout kiosks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Loss prevention&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.stoplift.com/"&gt;StopLift&lt;/a&gt;: With roots in MIT‚Äôs artificial intelligence labs, StopLift analyzes security video and POS data to distinguish between legitimate and fraudulent behavior at checkout. By applying advanced computer vision algorithms to existing camera feeds, StopLift‚Äôs ScanItAll system is capable of tracking items that pass through the checkout lane, associate them with POS, and flag suspicious activity as it happens.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://vaak.co/vaakeye-store/"&gt;Vaak&lt;/a&gt;: Japanese startup Vaak provides a cloud-based computer vision system that monitors retail security camera footage for suspicious behavior. Already deployed in over 50 stores within Japan, VaakEye analyzes movement at more than 100 points across the body, automatically weighing behavior for suspiciousness. Once a customer reaches a certain threshold, the system sends an alert, along relevant video clips, to the appropriate staff member.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Behavioral analytics&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://deepnorth.com/"&gt;Deep North&lt;/a&gt;: Deep North provides an analytics platform that builds real-time video intelligence for retailers based on video data from CCTV and other cameras that those retailers already use. Deep North‚Äôs proprietary technology captures parameters as daily entries and exits, customer occupancy, queue times, conversions and more.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://advertima.com/"&gt;Advertima&lt;/a&gt;: Based on information captured by visual sensors, Advertima‚Äôs platform provides retailers with a real-time view of what‚Äôs going on in physical stores as shoppers move through the space. The platform claims to only process minimal anonymized data, without storing any recordings or personal information for future use.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cosmose.co/"&gt;Cosmose&lt;/a&gt;: Cosmose provides a data analytics platform that analyzes foot traffic in physical stores to help predict customer behavior. They offer 3 main products: Cosmose Analytics, which tracks customers‚Äô movements inside physical stores; Cosmose AI, a data analytics and prediction platform to help retailers create marketing campaigns and drive sales; and Cosmose Media, for targeting online ads.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Real-time visibility is essential to operating brick-and-mortar retail. That‚Äôs why more and more retailers are employing computer vision in an effort to increase operational efficiency, better the customer experience, and gain an edge over competitors. &lt;/p&gt;

&lt;p&gt;Early adopters are already seeing great results‚Äîaccording to estimates from RBC Capital Markets analysts, cashierless Amazon Go stores bring in about 50% more revenue on average than typical convenience stores.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#visual-data-management-for-retail"&gt;
  &lt;/a&gt;
  Visual data management for retail
&lt;/h2&gt;

&lt;p&gt;Companies that build computer vision solutions for retail are constantly building and growing their ML training data sets. Today, most companies have to rely on internal tools or manual solutions like spreadsheets to do this. &lt;/p&gt;

&lt;p&gt;SiaSearch helps retail companies to simplify and speed up this process with a lightweight API that simplifies data exploration, visualization and selection. As a result, companies can reduce annotation costs and increase model performance.&lt;/p&gt;

&lt;p&gt;Interested in learning more? &lt;a href="https://www.siasearch.io/request-a-demo"&gt;Reach out to the SiaSearch team&lt;/a&gt; for a free proof of concept.&lt;/p&gt;

</description>
      <category>datascience</category>
      <category>startup</category>
      <category>computerscience</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Data Science Complete Roadmap -2021</title>
      <author>Jjyygh</author>
      <pubDate>Mon, 09 Aug 2021 01:01:58 +0000</pubDate>
      <link>https://dev.to/jjyygh/data-science-complete-roadmap-2021-15io</link>
      <guid>https://dev.to/jjyygh/data-science-complete-roadmap-2021-15io</guid>
      <description>&lt;p id="2998"&gt;Around three years ago, I did an undergraduate degree in computer science. I chose to major in data science since it was so hyped up at that time.&lt;/p&gt;
&lt;p id="d6d8"&gt;I realized one year back that my degree did not equip me with the skills necessary to become a data scientist.&lt;/p&gt;
&lt;p id="b99f"&gt;And it cost my parents approximately $25K.&lt;/p&gt;
&lt;p id="9466"&gt;This was before I knew about online learning platforms like edX and Coursera.&lt;/p&gt;
&lt;p id="1ca5"&gt;I taught myself all the skills required to become a data scientist. And I learnt it all outside my degree ‚Äî I learnt it online.&lt;/p&gt;
&lt;p id="e31a"&gt;Now, I&lt;span id="rmm"&gt;‚Äô&lt;/span&gt;m working as a data scientist for a data and AI company.&lt;/p&gt;
&lt;p id="c563"&gt;In an¬†article¬†I wrote last year, I provided a list of courses you could take to break into the data science industry.&lt;/p&gt;
&lt;p id="7681"&gt;I will refresh that list here, and provide you with a few more learning resources that will help you break into data science in 2021.&lt;/p&gt;
&lt;p id="7681"&gt;&lt;span&gt;Read More: &lt;/span&gt;&lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/a-complete-data-science-roadmap-in-2021/"&gt;Data Science Complete Roadmap 2021&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;




</description>
      <category>datascience</category>
    </item>
    <item>
      <title>10 Magical JavaScript Tips for Every Web Developer</title>
      <author>Jjyygh</author>
      <pubDate>Mon, 09 Aug 2021 00:56:03 +0000</pubDate>
      <link>https://dev.to/jjyygh/10-magical-javascript-tips-for-every-web-developer-1pnk</link>
      <guid>https://dev.to/jjyygh/10-magical-javascript-tips-for-every-web-developer-1pnk</guid>
      <description>&lt;p id="f6cc"&gt;In this article, we will discuss the 15 useful JavaScript tips for every web developer to save their valuable and precious time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p id="e1bb"&gt;I am always ready to learn although I do not always like being taught&lt;/p&gt;

&lt;p id="0fe5"&gt;‚Äî Winston Churchill&lt;/p&gt;


&lt;/blockquote&gt;
&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;h1 id="fa85"&gt;Tip 1. Flatten the array of the array&lt;/h1&gt;
&lt;p id="4e31"&gt;This tip will help you to flatten a deeply nested array of arrays by using¬†&lt;code&gt;Infinity&lt;/code&gt;¬†in¬†&lt;code&gt;flat&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;span id="e3aa"&gt;var array = [123, 500, [1, 2, [34, 56, 67, [234, 1245], 900]], 845, [30257]]&lt;/span&gt;&lt;span id="16da"&gt;//flatten array of array&lt;br&gt;array.flat(Infinity)&lt;/span&gt;&lt;span id="b0d8"&gt;// output:&lt;br&gt;// [123, 500, 1, 2, 34, 56, 67, 234, 1245, 900, 845, 30257]&lt;/span&gt;&lt;/pre&gt;
&lt;h1 id="902c"&gt;Tip 2. Easy Exchange Variables&lt;/h1&gt;
&lt;p id="ebf9"&gt;You probably swap the two variables using a third variable¬†&lt;code&gt;temp&lt;/code&gt;. But this tip will show you a new way to exchange variables using destructuring.&lt;/p&gt;
&lt;pre&gt;&lt;span id="298c"&gt;//example 1&lt;/span&gt;&lt;span id="3316"&gt;var a = 6;&lt;br&gt;var b = 7;&lt;/span&gt;&lt;span id="b133"&gt;[a,b] = [b,a]&lt;/span&gt;&lt;span id="aa36"&gt;console.log(a,b) // 7 6&lt;/span&gt;&lt;/pre&gt;
&lt;br&gt;Read More: &lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/magical-javascript-tips-for-every-web-developer/"&gt;10 Magical JavaScript Tips for Every Web Developer&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Understanding Switch Statement In Javascript</title>
      <author>Aya Bouchiha</author>
      <pubDate>Mon, 09 Aug 2021 00:44:30 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/understanding-switch-statement-in-javascript-40i9</link>
      <guid>https://dev.to/ayabouchiha/understanding-switch-statement-in-javascript-40i9</guid>
      <description>&lt;p&gt;Hello, I'm &lt;a href="//developer.aya.b@gmail.com"&gt;Aya Bouchiha&lt;/a&gt;, today, we're going to discuss switch statements in Javascript.&lt;/p&gt;

&lt;p&gt;The switch is a statement used to perform different operations based on multiple conditions (cases)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-a-switch-statement"&gt;
  &lt;/a&gt;
  Writing a switch statement
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;value_1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;// do something&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;value_2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;// do something&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;value_3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;// do something&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// do something if the varaibale does not match any case&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  we need to know that if the variable matches multiple cases, the code block of the first matched case will be executed.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;case&lt;/strong&gt;: we use it to match against an expression, If it matches, the code block of this case will be executed. If It is not, The default code block will be executed.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;default&lt;/strong&gt;: is used to perform some operations if the variable does not match any case of the specified cases.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;break&lt;/strong&gt; (optional): is a statement associated with each case that orders the program to breaks out of the switch statement.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example 1:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;country&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Morocco&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;country&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;USA&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Washington&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Morocco&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Rabat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Egypt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cairo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Spain&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Madrid&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;France&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Paris&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;your country is not in our list&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;on this code above, the program will log &lt;strong&gt;Rabat&lt;/strong&gt;, because the given country is equal to &lt;strong&gt;Morocco&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Rabat&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example 2&lt;/p&gt;

&lt;p&gt;Let's delete all break statements;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;country&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Morocco&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;country&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;USA&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Washington&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// break;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Morocco&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Rabat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// break;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Egypt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cairo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// break;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Spain&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Madrid&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// break;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;France&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Paris&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// break;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;your country is not in our list&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Rabat
Cairo
Madrid
Paris
your country is not in our list
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We observe that the code blocks of the matched case which is Morocco, and the rest cases including the default one are executed due to forgetting to write break statements.&lt;/p&gt;

&lt;p&gt;Example 3&lt;/p&gt;

&lt;p&gt;Let's remove break statements that are only inside Morocco's and Egypt's case, Let's see what will happen :)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;country&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Morocco&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;country&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;USA&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Washington&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Morocco&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Rabat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// break;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Egypt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cairo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// break;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Spain&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Madrid&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;France&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Paris&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;your country is not in our list&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Rabat
Cairo
Madrid
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We observe that the code blocks of Morocco's and Egypt's cases are executed because of not writing a break statement.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion-1"&gt;
  &lt;/a&gt;
  conclusion 1
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  If the break statement is not written, the code block of the matched case and the rest cases including the default one, will be executed until the program finds a break statement.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example 4:&lt;/p&gt;

&lt;p&gt;If we wrote the same code of example 3 and we replaced Spain's break statement with a return statement, the program will log the same thing.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;country&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Morocco&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;country&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;USA&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Washington&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Morocco&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Rabat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// break;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Egypt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cairo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// break;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Spain&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Madrid&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;France&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Paris&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;your country is not in our list&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Rabat
Cairo
Madrid
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion-2"&gt;
  &lt;/a&gt;
  Conclusion 2
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  break statement is not required if the code block contains a return statement.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example 5:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;price&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;you have to pay 100$&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;you have to pay 80$&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;you have to pay 60$&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I don't know !&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;you have to pay 60$
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, the program logged "you have to pay 60$" because the price is 60. Let's do a small change by replacing the price cases with a string without changing the value, just adding a double or single quote :)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;price&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;you have to pay 100$&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;80&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;you have to pay 80$&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;60&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;you have to pay 60$&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I don't know !&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;I don't know!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We observe that the code block of the default case is executed instead of the third case code block due to changing the datatype.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion-3"&gt;
  &lt;/a&gt;
  conclusion 3
&lt;/h3&gt;

&lt;p&gt;Switch cases use strict comparison which is ===, So the cases values should be the same type of the given expression.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Switch&lt;/strong&gt; statement use strict comparison.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;case&lt;/strong&gt;: we use it to match against an expression, If it matches, the code block of this case will be executed. If It is not, The default code block will be executed.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;default&lt;/strong&gt;: is used to perform some operations if the variable does not match any case of the specified cases.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;break&lt;/strong&gt; (optional): is a statement associated with each case that orders the program to breaks out of the switch statement. In addition, a break statement is not required if the code block contains a return statement.&lt;/li&gt;
&lt;li&gt;If the break statement is not written, the code block of the matched case and the rest cases including the default one, will be executed until the program finds a break or a return statement.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope you enjoyed reading this post&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#suggested-posts"&gt;
  &lt;/a&gt;
  Suggested Posts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/youtube-courses-projects-to-master-javascript-3lhc"&gt;Youtube Courses, Projects To Learn Javascript&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/you-complete-guide-to-set-object-in-javascript-12gc"&gt;You Complete Guide To Set Object In Javascript&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/all-js-string-methods-in-one-post-4h23"&gt;All JS String Methods In One Post!&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="//www.w3schools.com"&gt;www.w3schools.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="//www.developer.mozilla.org"&gt;www.developer.mozilla.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To Contact Me:&lt;/p&gt;

&lt;p&gt;email:&lt;a href="mailto:developer.aya.b@gmail.com"&gt;developer.aya.b@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;telegram: &lt;a href="https://t.me/AyaBouchiha"&gt;Aya Bouchiha&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope you enjoyed reading this post :)&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Updating My "Get On The Beers" Indicator To Track Vaccinations</title>
      <author>Mitch Pomery (he/him)</author>
      <pubDate>Sun, 08 Aug 2021 23:45:00 +0000</pubDate>
      <link>https://dev.to/mitchpommers/updating-my-get-on-the-beers-indicator-to-track-vaccinations-495b</link>
      <guid>https://dev.to/mitchpommers/updating-my-get-on-the-beers-indicator-to-track-vaccinations-495b</guid>
      <description>&lt;p&gt;Over 6 months have passed since I first made this indicator light, and while it was good during previous outbreaks, the increasing availability of vaccinations in Australia means runs of 0 cases is less important. More important is getting jabbed! So I updated my light to track daily jabs!&lt;/p&gt;

&lt;p&gt;The New Colour Code:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No data yet: White&lt;/li&gt;
&lt;li&gt;Under 25,000 jabs in NSW today: Red&lt;/li&gt;
&lt;li&gt;Under 80,000 jabs: Blue&lt;/li&gt;
&lt;li&gt;Under 80,000 jabs: Green&lt;/li&gt;
&lt;li&gt;100,000 plus jabs: Party Mode!&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#finding-the-data"&gt;
  &lt;/a&gt;
  Finding The Data
&lt;/h1&gt;

&lt;p&gt;Just like the original build, finding a data source to use was critical to making it work. Data NSW didn't have vaccination data available that I could find and I didn't want to go down the path of searching for different API's hoping that one would have the data I wanted.&lt;/p&gt;

&lt;p&gt;The COVID LIVE website has a page with &lt;a href="https://covidlive.com.au/report/daily-vaccinations/nsw"&gt;NSW Daily vaccinations&lt;/a&gt; on it in table form! There's also a nice JSON file with all the data that it's creator &lt;a href="https://twitter.com/migga"&gt;Migga&lt;/a&gt; told me about when he came across my indicator light the first time. The Electric Imp agent has a 2048kB memory limit though, so I can't load the full JSON file in. The page with the table on it will have to do!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AnbIaP5o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqngtk5cexk26dbgzcsf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AnbIaP5o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqngtk5cexk26dbgzcsf.png" alt="A screenshot of the COVID LIVE website showing the latest vaccination numbers for NSW."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The source code of the website makes it easy to extract the number I want to make the light colour decision on. I need to find the last column in the first table row (not table header) and understand that number.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w7N8LgSu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r0vj6dpuxmufaghude5r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w7N8LgSu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r0vj6dpuxmufaghude5r.png" alt="The source code for the COVID LIVE website showing the table of daily vaccinations that I am interested in."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#making-it-light-up"&gt;
  &lt;/a&gt;
  Making It Light Up
&lt;/h1&gt;

&lt;p&gt;I used the code from the &lt;a href="https://dev.to/mitchpommers/get-on-the-beers-indicator-using-electric-imp-17n8"&gt;previous version that tracked daily cases of known local transmission&lt;/a&gt; as the starting point. It has code on the device to set the lights colour based on the number it received. And the agent has code to make a web request and massage data in the response to determine the number and send it oto the device.&lt;/p&gt;

&lt;p&gt;I started with the device code (code that runs on the hardware), changing the numbers for each colour. Then I reversed the order of the logic. This meant it would check if it was going to be party mode first, then work back towards 0 for red, and finally treat any other response (i.e. negative numbers) as an indication to show white. The main driver behind reversing the order of the code was to make it so I only needed to disable party mode once, instead of disabling it for each colour. Once done this was the device code:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Once I had the device code updated (and had tested it by feeding it some hardcoded data) I moved on to writing the agent code (code that runs in the cloud).&lt;/p&gt;

&lt;p&gt;I renamed variables and functions to represent what the code would now be doing, then started writing code to parse the HTML that I was extracting the data from. To extract the data I:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Found the first line of the table rows&lt;/li&gt;
&lt;li&gt;Found the end of the opening tag for the net change column&lt;/li&gt;
&lt;li&gt;Removed everything prior to that&lt;/li&gt;
&lt;li&gt;Found the first closing tag (which could either be the a span or a td tag)&lt;/li&gt;
&lt;li&gt;Removed it and everything after it&lt;/li&gt;
&lt;li&gt;Checked if there was still an opening tag that needed removing&lt;/li&gt;
&lt;li&gt;Removed it if there was&lt;/li&gt;
&lt;li&gt;Checked if all I had left was a "-" character (indicating that there was no data for the day yet)&lt;/li&gt;
&lt;li&gt;If there wasn't, removed all commas from the string and turned it into an integer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I tried thinking of other ways I could simplify the code for extracting this data, but there weren't any libraries or functions I could see that would help. This was the agent code once I was finished:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#closing"&gt;
  &lt;/a&gt;
  Closing
&lt;/h1&gt;

&lt;p&gt;Now that I have it updated and have tested that it is working (and fixed the edge cases I didn't think of when I was first coding it) I have it sitting somewhere a bit more visible on my desk, waiting for the day it first goes multicoloured.&lt;/p&gt;

&lt;p&gt;Personally, I'm hoping it does that on tomorrow because I am getting jabbed today (and that's when today's numbers will be shown).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---EN7tuxX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mayzxknwrmpcmr5oteko.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---EN7tuxX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mayzxknwrmpcmr5oteko.png" alt='"Beers?" indicator lit blue showing that there were between 25000 and 80000 vaccinations administered in NSW. The textable light (lit blue, pink then white) and the textable cat (showing a message of "Goodnight") are also visible'&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>electronics</category>
      <category>electricimp</category>
    </item>
  </channel>
</rss>
