<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Chaos Engineering - The Practice Behind Controlling Chaos</title>
      <author>Conor Bronsdon</author>
      <pubDate>Tue, 04 Jan 2022 18:50:41 +0000</pubDate>
      <link>https://dev.to/linearb/chaos-engineering-the-practice-behind-controlling-chaos-9n6</link>
      <guid>https://dev.to/linearb/chaos-engineering-the-practice-behind-controlling-chaos-9n6</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was written exclusively for &lt;a href="https://devinterrupted.com/chaos-engineering-the-practice-behind-controlling-chaos/"&gt;devinterrupted.com&lt;/a&gt; by Matthew Fornaciari, CTO of Gremlin&lt;/em&gt;&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
Chaos Engineering might sound like a buzzword - but take it from someone who used to joke his job title was Chief Chaos Engineer (more on that later) it is much more than buzz or a passing fad - it’s a practice. &lt;/p&gt;

&lt;p&gt;The world can be a scary place and more and more companies are beginning to turn to Chaos Engineering to proactively poke and prod their systems and in doing so are improving their reliability and guarding against unexpected failures in production and unplanned downtime. &lt;/p&gt;

&lt;p&gt;During my career I dealt with my fair share of outages, including one that caught me mid-song during a bout of karaoke and far too many that woke me up at 02:00. As the co-founder and CTO at &lt;a href="https://www.gremlin.com/"&gt;Gremlin&lt;/a&gt;, I do my best to make sure no other engineers have to suffer sleepless nights worrying about their product. &lt;/p&gt;

&lt;p&gt;But the question remains, what is Chaos Engineering and where did it come from?&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/2xwZ0IxHB5fvljUEf9EpNi"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-short-history"&gt;
  &lt;/a&gt;
  A Short History
&lt;/h2&gt;

&lt;p&gt;The spiritual predecessor to Chaos Engineering is often called by a much more widely recognized name - disaster recovery. The focus when this practice was introduced is much the same as today: proactively suss out production problems by injecting failure. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://netflix.github.io/chaosmonkey/"&gt;Netflix&lt;/a&gt;’s Chaos Monkey is probably the most well publicized Chaos Engineering tool as it arguably kickstarted the adoption of Chaos Engineering outside of large companies, but this has led to the erroneous belief that Netflix invented the practice. In fact, the practice was already widely in use amongst the titans of technology. &lt;/p&gt;

&lt;p&gt;Over a decade ago during my time as a Lead Software Engineer at Amazon, we implemented several crude practices designed to inject failure into our systems. The most rudimentary of which was employed by a man called Jesse Robbins, who earned the nickname “Master of Disaster” by running through data centers pulling out cables. &lt;/p&gt;

&lt;p&gt;Let’s just say the practice has evolved a lot since those early days and your data center cables are much safer these days.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-chaos-engineering"&gt;
  &lt;/a&gt;
  What is Chaos Engineering?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;“What Chaos Engineering really is, is the art, if you want to call it that, of introducing controlled chaos.” - &lt;a href="https://open.spotify.com/episode/2xwZ0IxHB5fvljUEf9EpNi?si=grNoRb21QiOMCQYSCu5Q4g&amp;amp;dl_branch=1"&gt;2:16 on the Dev Interrupted podcast&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-O0vjlejc6U"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;At its core, Chaos Engineering is a disciplined approach of identifying potential failures &lt;strong&gt;before&lt;/strong&gt; they have an opportunity to become customer facing outages. &lt;/p&gt;

&lt;p&gt;It is a practice that lets you safely test your assumption about how your systems will behave under duress by actually exercising resilient mechanisms in a controlled fashion. You literally "&lt;a href="https://www.gremlin.com/blog/breaking-things-on-purpose/"&gt;break things on purpose&lt;/a&gt;" to validate and build resiliency. The end goal of Chaos Engineering is not to inject arbitrary failure into a system, but rather to strategically inject turbulence to enhance the stability and resiliency of your systems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-chaotic-is-chaos-engineering"&gt;
  &lt;/a&gt;
  How Chaotic is Chaos Engineering?
&lt;/h2&gt;

&lt;p&gt;I always tell people that Chaos Engineering is a bit of a misnomer because it’s actually as far from chaotic as you can get. When performed correctly everything is in control of the operator. That mentality is the reason our core product principles at Gremlin are: safety, simplicity and security. True chaos can be daunting and can cause harm. But controlled chaos fosters confidence in the resilience of systems and allows for operators to sleep a little easier knowing they’ve tested their assumptions. After all, the laws of entropy guarantee the world will consistently keep throwing randomness at you and your systems. You shouldn’t have to help with that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-start"&gt;
  &lt;/a&gt;
  How do I Start?
&lt;/h2&gt;

&lt;p&gt;One of the most common questions I receive is: “I want to get started with Chaos Engineering, where do I begin?” There is no one size fits all answer unfortunately. You could start by validating your observability tooling, ensuring auto-scaling works, testing failover conditions, or one of a myriad of other use cases. The one thing that does apply across all of these use cases is &lt;strong&gt;start slow, but do not be slow to start.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What I mean by this is to start testing across just a few nodes versus impacting your entire fleet. We refer to the impacted area as the “blast radius” and we highly recommend starting with a small blast radius (the number of systems impacted) and increasing it over time.&lt;/p&gt;

&lt;p&gt;By starting small you allow yourself to gain confidence in both the experiments you are running and your systems. Of course your risk tolerance is also a factor of how large a blast radius your organization will use. &lt;/p&gt;

&lt;p&gt;For instance, a large banking institution with millions of customers has a much lower risk tolerance than a tech startup with a couple hundred customers. In that case, they would want to run experiments in a programmatic way and would need to be very explicit about communicating to the rest of the organization what tests are going to be run and when to avoid any unplanned 2am or 3am disasters. &lt;/p&gt;

&lt;p&gt;Eventually you want to get to the point where all of this is automated, a process we refer to as “continuous chaos.” Starting small with automation could be something as simple as taking out a single node; then taking out five nodes; then ten; and so on. Eventually you automate the process at a level you are comfortable with.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Ultimately you want to be able to handle any of this random chaos being thrown at you, because that's what the world is, it's entropy, it's degradation” - &lt;a href="https://open.spotify.com/episode/2xwZ0IxHB5fvljUEf9EpNi?si=grNoRb21QiOMCQYSCu5Q4g&amp;amp;dl_branch=1&amp;amp;nd=1"&gt;7:35 on the Dev Interrupted podcast&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#no-tolerance-for-downtime"&gt;
  &lt;/a&gt;
  No Tolerance for Downtime
&lt;/h2&gt;

&lt;p&gt;When I founded &lt;a href="https://www.gremlin.com/"&gt;Gremlin&lt;/a&gt;, it was just myself and my co-founder developing the first iteration of the product. The business looked very different then and I jokingly referred to myself as the “Chief Chaos Engineer” responsible for implementing code that was mostly used by enterprise companies. Many of these companies came to us because they had reliance thrust upon them by the US government or they had top-down reliability standards and they wanted a tool to help them shore up their systems. &lt;/p&gt;

&lt;p&gt;As the company began to evolve, so did the customer base. These days it’s not just Fortune 500 companies that care about reliability, it’s everybody. Planned downtime is a relic of days gone by. It is no longer acceptable to espouse planned maintenance windows as part of development lifecycles and customers don’t have the patience for products they rely upon to spend any time unavailable. Companies recognize this dynamic - and it’s not a hard one to miss. &lt;/p&gt;

&lt;p&gt;Seemingly our appetite for technology has gone up exponentially while our ability to stomach downtime has drastically decreased. Customers expect that your product is always working, always running. If your product is down because of outages then there are ten other similar products waiting in the wings to take their money. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#making-lives-better"&gt;
  &lt;/a&gt;
  Making Lives Better
&lt;/h2&gt;

&lt;p&gt;Visibility is high these days and companies don’t need the publicity that comes with making any unforced errors, let alone to be subject to errors not of their making. No one wants to be blown up on &lt;a href="https://twitter.com/"&gt;Twitter&lt;/a&gt; because their product isn’t working or because one of their downstream dependencies or their cloud provider had an unexpected outage. &lt;/p&gt;

&lt;p&gt;By preparing for the worst, we can be at our best as an industry and can be prepared when disaster eventually comes knocking. That’s why when an unexpected outage occurs or there is a production failure customers will never even know it happened. &lt;/p&gt;

&lt;p&gt;I often joke that we are the engineers’ engineers because many of us know that feeling of being jolted from a dream at 03:00 by our pagers, groggily wiping our eyes and whipping out the laptop to go dig through a sea of monitoring dashboards and logs. It’s not fun and it’s exactly why I founded Gremlin. Because there is a better way to approach operations than merely sitting back on our haunches and waiting for the next outage. Chaos Engineering not only helps to protect against the randomness of the world, but also teaches people how to build more reliable software. And if enough people build more reliable software, we build a more reliable internet.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;&lt;em&gt;Starved for top-level software engineering content? Need some good tips on how to manage your team? This article is inspired by &lt;a href="https://devinterrupted.com/podcasts/"&gt;Dev Interrupted&lt;/a&gt; - the go-to podcast for engineering leaders.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Dev Interrupted features expert guests from around the world to explore strategy and day-to-day topics ranging from dev team metrics to accelerating delivery. With new guests every week from Google to small startups, the Dev Interrupted Podcast is a fresh look at the world of software engineering and engineering management.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devinterrupted.com/podcasts/"&gt;&lt;strong&gt;&lt;em&gt;Listen and subscribe on your streaming service of choice today.&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NibJBwTV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bhjb103fsrn64mdurln3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NibJBwTV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bhjb103fsrn64mdurln3.png" alt="https://devinterrupted.com/podcasts/" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>management</category>
      <category>devops</category>
      <category>operations</category>
      <category>performance</category>
    </item>
    <item>
      <title>Kotlin – Android’in Yeni Resmi Programlama Dili
</title>
      <author>Berk CAN</author>
      <pubDate>Tue, 04 Jan 2022 18:43:28 +0000</pubDate>
      <link>https://dev.to/nrkdrk/kotlin-androidin-yeni-resmi-programlama-dili-e9e</link>
      <guid>https://dev.to/nrkdrk/kotlin-androidin-yeni-resmi-programlama-dili-e9e</guid>
      <description>&lt;p&gt;Google her yıl düzenlediği I/O etkinliğinde bu sene biz Android geliştiricilerine bir süpriz yaptı. 17-19 Mayıs tarihleri arasında düzenlenen I/O 2017 etkinliğinde Android için yeni bir programlama dilini tanıttı. Bu dil JetBrains firmasının geliştirmiş olduğu Kotlin Programlama dili.Bu dil aynı java gibi JVM (Java Virtual Machine) üzerinde çalışabilen bir dildir. Yani bir defa yaz her platformda çalıştır mantığıyla çalışmaktadır.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://nrkdrk.blogspot.com/2017/07/kotlin-androidin-yeni-resmi-programlama.html"&gt;Adres&lt;/a&gt;&lt;/p&gt;

</description>
      <category>nrkdrk</category>
      <category>android</category>
      <category>kotlin</category>
      <category>programming</category>
    </item>
    <item>
      <title>Statik ve Dinamik Programlama Dillerinin Farkları
</title>
      <author>Berk CAN</author>
      <pubDate>Tue, 04 Jan 2022 18:42:52 +0000</pubDate>
      <link>https://dev.to/nrkdrk/statik-ve-dinamik-programlama-dillerinin-farklari-115h</link>
      <guid>https://dev.to/nrkdrk/statik-ve-dinamik-programlama-dillerinin-farklari-115h</guid>
      <description>&lt;p&gt;Statik Programlama Dilleri&lt;br&gt;
Statik programlama dili nedir onu açıklayarak başlayalım. Statik programlama dili, her değişken tipinin önceden belirtiliyor olmasıdır. Yani string bir değer tanımlıyorken başına string, sayi tanımlıyorken int, double, float gibi tipleri yazıyoruz. Bu nedenle değişken tipleri program henüz çalışmıyorken bile bu tiplerin neler olduğunu biliyor. Bu da program henüz çalışmıyorken bile bir hata yapmışsanız sizi uyarır ve hatayı düzeltmenizi bekler.Ya da daha etkili öneriler sunabilir IDE'ye bağlı olarak.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://nrkdrk.blogspot.com/2017/07/statik-ve-dinamik-programlama.html"&gt;Adres&lt;/a&gt;&lt;/p&gt;

</description>
      <category>nrkdrk</category>
      <category>programming</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>Docker. Communication between Laravel containers</title>
      <author>Berk CAN</author>
      <pubDate>Tue, 04 Jan 2022 18:40:44 +0000</pubDate>
      <link>https://dev.to/nrkdrk/docker-communication-between-laravel-containers-399h</link>
      <guid>https://dev.to/nrkdrk/docker-communication-between-laravel-containers-399h</guid>
      <description>&lt;p&gt;I have a project that I am trying to develop with a microservices approach. I prepared the APIs on two separate microservices and completed their tests. When I send a request from container A to container B, I get the error cURL error 7: Could not connect to localhost port 8100: Connection refused. After my research, I couldn't find a solution.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/69954303/docker-communication-between-laravel-containers"&gt;Address&lt;/a&gt;&lt;/p&gt;

</description>
      <category>nrkdrk</category>
      <category>laravel</category>
      <category>docker</category>
    </item>
    <item>
      <title>Recap the use of some Algorithms</title>
      <author>Lakkireddy Pulla Reddy</author>
      <pubDate>Tue, 04 Jan 2022 18:07:22 +0000</pubDate>
      <link>https://dev.to/lakkireddy9100/recap-the-use-of-some-algorithms-29j5</link>
      <guid>https://dev.to/lakkireddy9100/recap-the-use-of-some-algorithms-29j5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#binary-search-algorithm"&gt;
  &lt;/a&gt;
  Binary Search Algorithm
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
- Efficient algorithm for finding an item from a **sorted list**
 of items

- The time complexity of the binary search algorithm is O(log n)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CMBj9SYw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/08bh3eumtbno0mg7gr8b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CMBj9SYw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/08bh3eumtbno0mg7gr8b.png" alt="loading!!!" width="550" height="319"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#breadth-first-search-bfs-algorithm"&gt;
  &lt;/a&gt;
  Breadth First Search (BFS) Algorithm
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- Breadth–first search (BFS) is an algorithm for traversing or searching tree or graph data structures.
- It uses a queue.
- The time complexity of BFS traversal is O(V + E), where V and E are the total number of vertices and edges in the graph.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#depth-first-search-dfs-algorithm"&gt;
  &lt;/a&gt;
  Depth First Search (DFS) Algorithm
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- Depth–first search (DFS) is an algorithm for traversing or searching tree or graph data structures.
- It uses a stack.
- The time complexity of DFS traversal is O(V + E), where V and E are the total number of vertices and edges in the graph.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#merge-sort-algorithm"&gt;
  &lt;/a&gt;
  Merge Sort Algorithm
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- Merge sort is an efficient sorting algorithm that produces a stable sort, which means that if two elements have the same value, they hold the same relative position in the sorted sequence as they did in the input
- Merge sort is a Divide and Conquer algorithm
- The worst case time complexity of merge sort is O(n log(n))

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#quicksort-algorithm"&gt;
  &lt;/a&gt;
  Quicksort Algorithm
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
- Quicksort is an efficient in-place sorting algorithm, which usually performs about two to three times faster than merge sort and heapsort when implemented well.
- Time complexity of Quicksort is O(n log(n)).

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#kruskals-algorithm"&gt;
  &lt;/a&gt;
  Kruskal’s Algorithm
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
- Kruskal’s Minimum Spanning Tree algorithm, a greedy algorithm to find a minimum spanning tree for a connected weighted graph.
- Kruskal's algorithm's time complexity is O(E log V), V being the number of vertices

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#singlesource-shortest-path-vs"&gt;
  &lt;/a&gt;
  Single-Source Shortest Path  VS
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#allpairs-shortest-path"&gt;
  &lt;/a&gt;
  All-Pairs Shortest Path
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
- The Single-Source Shortest Path (SSSP) problem consists of finding the shortest paths between a given vertex v and all other vertices in the graph.
- The All-Pairs Shortest Path(APSP) problem is the determination of the shortest graph distances between every pair of vertices in a given graph
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#floyd-warshall-algorithm"&gt;
  &lt;/a&gt;
  Floyd Warshall Algorithm
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
- The Floyd Warshall Algorithm is for solving the All Pairs Shortest Path problem. The problem is to find shortest distances between every pair of vertices in a given edge weighted directed Graph.
- The Floyd-Warshall all-pairs shortest path runs in O(n^3) time.

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#dijkstras-algorithm"&gt;
  &lt;/a&gt;
  Dijkstra’s Algorithm
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
- Dijkstra's algorithm is the iterative algorithmic process to provide us with the shortest path from one specific starting node to all other nodes of a graph

- Time Complexity of Dijkstra's Algorithm is O(V^2)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#kadanes-algorithm"&gt;
  &lt;/a&gt;
  Kadane’s Algorithm
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
- Simply putting for writing a logic to find the sum of contiguous subarray  within a one-dimensional array of numbers that has the largest sum, we use Kadane’s Algorithm. 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#lee-algorithm"&gt;
  &lt;/a&gt;
  Lee Algorithm
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
- The Lee algorithm is one possible solution for maze routing problems based on breadth-first search.

- It always gives an optimal solution, if one exists, but is slow and requires considerable memory
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#floyds-cycle-detection-algorithm"&gt;
  &lt;/a&gt;
  Floyd’s Cycle Detection Algorithm
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;As the name it self states, Floyd's Cycle detection algorithm or Hair Tortoise algorithm is used to detect if there is a cycle in a linked list
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#union-find-algorithm"&gt;
  &lt;/a&gt;
  Union Find Algorithm
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- Recap Dis Joint Data Structure.
- A union-find algorithm is an algorithm that performs two useful operations find and union.
- Find: Determine which subset a particular element is in.
- Union: Join two subsets into a single subset.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#kmp-algorithm"&gt;
  &lt;/a&gt;
  KMP Algorithm
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- The Knuth–Morris–Pratt string-searching algorithm (or KMP algorithm) searches for occurrences of a "word" W within a main "text string" S.

- It is a Pattern Matching Algorithm
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#sorting-algorithms"&gt;
  &lt;/a&gt;
  Sorting Algorithms
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
- A Sorting Algorithm is used to rearrange a given array or list elements according to a comparison operator on the elements.

- Examples
      1. Insertion Sort Algorithm
      2. Selection Sort Algorithm
      3. Counting Sort Algorithm
      4. Heap Sort Algorithm ​

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#euclids-algorithm"&gt;
  &lt;/a&gt;
  Euclid’s Algorithm
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
-  Efficient algorithm for computing the greatest common divisor (GCD)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
    </item>
    <item>
      <title>Render a pdf in react app</title>
      <author>Aishanii</author>
      <pubDate>Tue, 04 Jan 2022 17:43:13 +0000</pubDate>
      <link>https://dev.to/aishanipach/render-a-pdf-in-react-app-3aeo</link>
      <guid>https://dev.to/aishanipach/render-a-pdf-in-react-app-3aeo</guid>
      <description>&lt;p&gt;If you want to render a pdf file in a react app, there are different options out there. The one that I recently used and would recommend for beginners is &lt;strong&gt;react-pdf&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install react-pdf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For activating links:&lt;br&gt;
&lt;code&gt;import 'react-pdf/dist/esm/Page/AnnotationLayer.css';&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Check out the script example here:&lt;br&gt;
&lt;a href="https://github.com/Aishanipach/React-pdf-devto"&gt;https://github.com/Aishanipach/React-pdf-devto&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>🙌 How to get rid of vulnerabilities with just NPM 👀</title>
      <author>Luís Von Muller</author>
      <pubDate>Tue, 04 Jan 2022 17:42:05 +0000</pubDate>
      <link>https://dev.to/luisvonmuller/how-to-auto-fix-vulnerabilities-with-npm-47fa</link>
      <guid>https://dev.to/luisvonmuller/how-to-auto-fix-vulnerabilities-with-npm-47fa</guid>
      <description>&lt;p&gt;Sometimes when you're trying to &lt;strong&gt;install&lt;/strong&gt; or re-use some kind of global package on the &lt;strong&gt;NPM&lt;/strong&gt; environment, you will get messages telling you something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--trjvBeTD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osibi9y5aix0u7x47tey.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--trjvBeTD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osibi9y5aix0u7x47tey.png" alt="Installing a package" width="880" height="229"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As NPM itself &lt;strong&gt;will&lt;/strong&gt; suggest, you, should &lt;strong&gt;audit&lt;/strong&gt; them, to kindly fix them ☺️&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rv60KC0p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5d9grr7fdoo0tpsl0pqc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rv60KC0p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5d9grr7fdoo0tpsl0pqc.png" alt="Warnings of vulnerabilities" width="776" height="164"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;But let me make it clear,: That is for sure, not the real way to "Security" audit things, but it is for sure, the minimum safe way that you must stay (at least) for the greater good!&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;This kind of vulnerability &lt;strong&gt;could became a real problem&lt;/strong&gt;, especially when your packages are &lt;strong&gt;global packages&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;I mean, When you're using the "-g" flag to make it system wide available. &lt;/small&gt;&lt;/p&gt;

&lt;p&gt;For this, its a minimum good practice to also use things like &lt;strong&gt;NPX&lt;/strong&gt;. But... if you're that &lt;strong&gt;lazy&lt;/strong&gt;, as I am, here is this small &lt;strong&gt;shenanigan&lt;/strong&gt; that could help you to keep yourself a bit &lt;strong&gt;more safe&lt;/strong&gt;. 👀&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-by-step"&gt;
  &lt;/a&gt;
  🚶 Step by Step 🚶
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-lets-update-npm-itself"&gt;
  &lt;/a&gt;
  1. Lets update &lt;strong&gt;NPM&lt;/strong&gt; itself! 👉
&lt;/h3&gt;

&lt;p&gt;On the bash, or terminal, type:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ npm install npm@latest -g&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;small&gt; The $ means that you're into the bash or at least on a terminal like prompt 😅 &lt;/small&gt;&lt;/p&gt;

&lt;p&gt;The output will look something near like...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kf7ILzCP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/co6ckjqlh2yzhp64paky.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kf7ILzCP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/co6ckjqlh2yzhp64paky.png" alt="Updating NPM" width="880" height="297"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And... &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8-td2A57--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbrbtyywyp21hklakl8x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8-td2A57--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbrbtyywyp21hklakl8x.png" alt="Image description" width="622" height="96"&gt;&lt;/a&gt;&lt;br&gt;
... Ok I'll just type the "$ npm audit" then...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gdKjlxS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j2fz2j73yuav394o9qrx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gdKjlxS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j2fz2j73yuav394o9qrx.png" alt="Image description" width="880" height="133"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wat"&gt;
  &lt;/a&gt;
  WAT?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ofre2jUh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dm0d0ujwif47hf3iyzsh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ofre2jUh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dm0d0ujwif47hf3iyzsh.png" alt="Image description" width="700" height="525"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes, that is totally accurate! 👌 &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NPM&lt;/strong&gt; audit will check inside the &lt;strong&gt;package you're on&lt;/strong&gt; (or even none if your not). &lt;strong&gt;It will not check the for entire "NPM" global environment&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;OMG&lt;/strong&gt; - David504 &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;small&gt;Context for the quote: &lt;a href="https://www.youtube.com/watch?v=B6LpzJLrhpw"&gt;https://www.youtube.com/watch?v=B6LpzJLrhpw&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-so-what-should-i-do"&gt;
  &lt;/a&gt;
  2. So, what should I do!? 🤔
&lt;/h3&gt;

&lt;p&gt;The right way? &lt;small&gt;use rust 🦀 &lt;/small&gt;. Joking, you could use NPX, but if you don't want to (as I don't)... &lt;strong&gt;wait there!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You know what &lt;strong&gt;NPM people loves&lt;/strong&gt;? &lt;strong&gt;Packages&lt;/strong&gt;. 📦&lt;/p&gt;

&lt;p&gt;And &lt;strong&gt;so we does!&lt;/strong&gt; We love packages 🥰! &lt;strong&gt;But what about installing another global package to fix global packages?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uAYEByee--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fzovuc1s1s4gk2ssahng.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uAYEByee--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fzovuc1s1s4gk2ssahng.png" alt="Avarege Package Enjoyer with a big brain" width="880" height="586"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Now you must say: That looks sooo great!&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Then, Kindly type into the terminal &lt;strong&gt;this&lt;/strong&gt;, while praying to NPM's gods:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ npm install -g npm-check-updates&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;small&gt;The output gonna be like:&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KXLA7O5y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oy3vh1pf8sabm98uf8gy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KXLA7O5y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oy3vh1pf8sabm98uf8gy.png" alt="Output of npm install minus g npm check updates" width="880" height="191"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt; Thanks god that wasn't any vulnerability inside the vulnerability checking package 😮‍💨&lt;/small&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-ncu-a-package-inception"&gt;
  &lt;/a&gt;
  3. NCU - A Package Inception! 😳
&lt;/h3&gt;

&lt;p&gt;If all went good till now, guess what? You will have &lt;strong&gt;another&lt;/strong&gt; package &lt;strong&gt;globally&lt;/strong&gt; available to use! 😌 &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#and-guess-what-this-one-can-say-which-ones-we-should-upgrade-to-get-rid-of"&gt;
  &lt;/a&gt;
  And guess what? This &lt;strong&gt;one can say which ones we should upgrade&lt;/strong&gt; to get rid of:
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;(っ◔◡◔)っ ♥ legacy code vulnerabilities ♥&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZgRMW787--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cn2wbenohb6oj6k5q40u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZgRMW787--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cn2wbenohb6oj6k5q40u.png" alt="Another Global package? Thats great!" width="458" height="432"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But, &lt;strong&gt;how do we use it?&lt;/strong&gt;. Again, from the terminal, type:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ ncu -g &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;small&gt;Output should like:&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a6EVzNhv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pbbcc7xjoibywjx2k45f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a6EVzNhv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pbbcc7xjoibywjx2k45f.png" alt="An output from the ncu package" width="880" height="217"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the last line, it will give yourself the minimum needed updates to fix common vulnerabilities that were fixed on newer versions! 🤩&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vuk649P7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9394kqi8r38twv5725h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vuk649P7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9394kqi8r38twv5725h.png" alt="my upgrade listings..." width="880" height="56"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now... lets just, as always: &lt;strong&gt;CTRL+C -&amp;gt; CTRL+V&lt;/strong&gt; stuff. 😎&lt;/p&gt;

&lt;p&gt;Then you will be prompted with:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--62Rxar_D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5j6inptfvhzdlub1vgx7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--62Rxar_D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5j6inptfvhzdlub1vgx7.png" alt="After running upgrades..." width="880" height="233"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vulnerabilities-again"&gt;
  &lt;/a&gt;
  Vulnerabilities again?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m52Ip9pl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nz9qg6we9c7wz6ozoae4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m52Ip9pl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nz9qg6we9c7wz6ozoae4.png" alt="65 WAT?" width="880" height="882"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes, that is &lt;strong&gt;again&lt;/strong&gt;, fairly right 🤦‍♂️&lt;/p&gt;

&lt;p&gt;&lt;del&gt;What you will need to execute, instead of the other command that I told you to run is this one:&lt;br&gt;&lt;br&gt;
curl --proto '=https' --tlsv1.2 -sSf &lt;a href="https://sh.rustup.rs"&gt;https://sh.rustup.rs&lt;/a&gt; | sh &lt;br&gt;
and you will have Rust and Rust's Cargo!&lt;/del&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nah-lets-talk-serious-now"&gt;
  &lt;/a&gt;
  Nah, lets talk serious now... 🙄
&lt;/h2&gt;

&lt;p&gt;You got rid of the Global Packages vulnerabilities (from themselves) by upgrading them. But those packages (sometimes) depends on other packages...&lt;br&gt;
&lt;small&gt; I told you that NPM's guys really like packages ¯_(ツ)_/¯ &lt;/small&gt;&lt;/p&gt;

&lt;p&gt;There will be, always, some vulnerabilities left inside these (dependencies). But not within being &lt;strong&gt;into a Global Package itself&lt;/strong&gt;, then we're kinda good to go.&lt;/p&gt;

&lt;p&gt;And to make sure there is not left, you can &lt;strong&gt;re-check&lt;/strong&gt; it by doing so:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ ncu -g&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;small&gt;(to check if there is the need to upgrade any to a safer version)&lt;/small&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PywLL8Nc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dqmdjiooe0c1nh8wzpy2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PywLL8Nc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dqmdjiooe0c1nh8wzpy2.png" alt="Rechecking global packages." width="880" height="145"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion? 🤔
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;If you gonna stand with just NPM without NPX please, at least do this.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;I will soon write a how to NPX... &lt;small&gt;or not&lt;/small&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Thanks! Follow me on the Dev Bubble on &lt;a href="https://twitter.com/luisvonmuller"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>typescript</category>
      <category>npm</category>
    </item>
    <item>
      <title>Django Basics: Creating Models</title>
      <author>Meet Gor</author>
      <pubDate>Tue, 04 Jan 2022 17:11:25 +0000</pubDate>
      <link>https://dev.to/mr_destructive/django-basics-creating-models-2bg5</link>
      <guid>https://dev.to/mr_destructive/django-basics-creating-models-2bg5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;We have seen the basics of Django templating in the previous parts of the series. Now, we can move on to the more backend stuff in Django which deals with the Databases, queries, admin section, and so on. In this particular part, we'll cover the fundamental part of any application in Django i.e the &lt;code&gt;Model&lt;/code&gt;. We'll understand what the model is, how to structure one, how to create relationships and add constraints on the fields, etc. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-models"&gt;
  &lt;/a&gt;
  What are Models?
&lt;/h2&gt;

&lt;p&gt;A model is a Django-way(Pythonic) to structure a database for a given application. It is technically a class that can act as a table in a database generally and inside of the class, the properties of it act as the attributes of that database. It's that simple. Just a blueprint to create a table in a database, don't worry about what and where is our database. We will explore the database and its configuration in the next part. &lt;/p&gt;

&lt;p&gt;By creating a model, you don't have to write all the basic SQL queries like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CREATE TABLE NAME(
attrb1_name type,
attrb2_name type,
.
.
.
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If your application is quite big or is complex in terms of the relations among the entities, writing SQL queries manually is a daunting task and also quite repetitive at times. So Django handles all the SQL crap out of the way for the programmer. So Models are just a Pythonic way to create a table for the project/application's database.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-a-model"&gt;
  &lt;/a&gt;
  How to create a Model?
&lt;/h2&gt;

&lt;p&gt;Creating a model for an application is as easy as creating a class in python. But hey! It's more than that as there are other questions to address while designing the class. You need to design the database before defining the fields in the model.&lt;/p&gt;

&lt;p&gt;OK, well it's not straightforward as it seems to but still for creating simple and dummy projects to start with. You can use certain tools like &lt;a href="https://www.lucidchart.com/pages/database-diagram/database-design-tool"&gt;lucidchart&lt;/a&gt;, &lt;a href="https://dbdiagram.io/home"&gt;dbdiagrams.io&lt;/a&gt;, and other tools you are comfortable with. It's important to visualize the database schema or the structure of the application before tinkering with the actual database inside the project. Let's not go too crazy and design a simple model to understand the process.&lt;/p&gt;

&lt;p&gt;Here's a basic model for a Blog:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#from django.db import models
from django.contrib.auth.models import User

class Article(models.Model):
    title = models.CharField(max_length=255)
    post = models.TextField()
    author = models.ForeignKey(User, on_delete=models.CASCADE, related_name='Article')
    created = models.DateTimeField(auto_now_add=True)
    updated = models.DateTimeField(auto_now=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ignore the &lt;code&gt;from django.db import models&lt;/code&gt; as it is already in the file created by Django. If not, please uncomment the line and that should be good to go.&lt;br&gt;
This is a basic model you might wanna play with but don't dump it anywhere. &lt;/p&gt;

&lt;p&gt;We define or create our models in the application inside the project. Inside the application there is already a file called &lt;code&gt;models.py&lt;/code&gt; just &lt;strong&gt;append&lt;/strong&gt; the above code into it. The application can be any application which makes the most sense to you or better create a app if not already created and name it as &lt;code&gt;article&lt;/code&gt; or &lt;code&gt;post&lt;/code&gt; or anything you like.&lt;/p&gt;

&lt;p&gt;If you are familiar with Python OOP(object-oriented programming), we have basically inherited the &lt;code&gt;models.Model&lt;/code&gt; class from the &lt;code&gt;django.db&lt;/code&gt; module into our model.&lt;/p&gt;

&lt;p&gt;If you want more such examples, let's see more such models :&lt;/p&gt;

&lt;p&gt;An E-Mail application core model. Attributes like &lt;code&gt;sender&lt;/code&gt;, &lt;code&gt;subject&lt;/code&gt; of the mail, &lt;code&gt;body&lt;/code&gt; of the mail, &lt;code&gt;recipients_list&lt;/code&gt; i.e. the &lt;code&gt;To:&lt;/code&gt; section in a mail system and the &lt;code&gt;attachment_file&lt;/code&gt; for a file attachment to a mail if any.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#from django.db import models
from user import EmailUser

class EMail(models.Model):
    sender = models.EmailField(max_length = 255) 
    subject = models.CharField(max_length = 78)
    body = models.CharField(max_length = 40000)
    recipients_list = models.ManyToManyField(EmailUser, related_name = 'mail_list')
    attachment_file = models.FileField(blank=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A sample model for a note-taking app, consisting of a Note and a Book. A book might be a collection of multiple notes i.e. a single book can have multiple notes so we are using a &lt;code&gt;ManyToManyField&lt;/code&gt;, what is that? We'll see that shortly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.db import models
from user.models import User

class Notes(models.Model):
    author = models.ForeignKey(User, on_delete=models.CASCADE)
    title = models.CharField(max_length = 1024)
    content = models.Textfield()
    created = models.DateTimeField(auto_now_add = True)
    modified = models.DateTimeField(auto_now = True)
    book = models.ManyToManyField(Book, related_name = 'book')

class Book():
    name = models.CharField(max_length = 1024)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are just dummies and are not recommended to use anywhere especially in a serious project. &lt;br&gt;
So, we have seen a model, but what are these fields and the constraints like &lt;code&gt;on_delete&lt;/code&gt;, &lt;code&gt;max_length&lt;/code&gt;, and others in the upcoming section on fields.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#fields-in-django"&gt;
  &lt;/a&gt;
  Fields in Django
&lt;/h2&gt;

&lt;p&gt;Fields are technically the attributes of the class which here is the model, but they are further treated as a attribute in a table of a database. So the model becomes a list of attributes which will be then parsed into an actual database. &lt;/p&gt;

&lt;p&gt;By creating attributes inside a class we are defining the structure for a table. We have several types of fields defined already by django for the ease of validating and making a constrained setup for the database schema.&lt;/p&gt;

&lt;p&gt;Let's look at some of the types of fields in Django Models.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#types-of-fields"&gt;
  &lt;/a&gt;
  Types of Fields
&lt;/h3&gt;

&lt;p&gt;Django has a lot of fields defined in the models class. If you want to go through all the fields, you read through the django docs &lt;a href="https://docs.djangoproject.com/en/4.0/ref/models/fields/#model-field-types"&gt;field references&lt;/a&gt;. We can access the fields from the &lt;code&gt;models&lt;/code&gt; module like &lt;code&gt;name = models.CharField(max_length=10)&lt;/code&gt;, this is a example of defining a attributes &lt;code&gt;name&lt;/code&gt; which is a CharField. We can set the max_length which acts a constraint to the attribute as we do not want the name field to be greater than 10 and hence parsing the parameter &lt;code&gt;max_length&lt;/code&gt; to 10. &lt;/p&gt;

&lt;p&gt;We have other field types like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;IntegerField&lt;/code&gt; -&amp;gt; for an integer value.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;TextField&lt;/code&gt; -&amp;gt; for long input of text (like text area in html).&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;EmailField&lt;/code&gt; -&amp;gt; for an single valid email field.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DateField&lt;/code&gt; -&amp;gt; for inputting in a date format. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;URLField&lt;/code&gt; -&amp;gt; for input a URL field.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;BooleanField&lt;/code&gt; -&amp;gt; for a boolean value input.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And there are other fields as well which can be used as per requirements.&lt;/p&gt;

&lt;p&gt;We also have some other fields which are not directly fields so to speak but are kind of relationship defining fields like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;ForeignKey&lt;/code&gt; -&amp;gt; Define a many-to-one relationship to another model/class. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ManyToManyField&lt;/code&gt; -&amp;gt; define a many-to-many relationship to another model/class.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;OneToOneField&lt;/code&gt; -&amp;gt; define a one to one relationship between different tables/model/class.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, that's about the field types for just a feel of how to structure or design a database table using a model with some types of attributes. We also need to talk about constraints which needs to added to the fields inside the models. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#field-optionsarguments"&gt;
  &lt;/a&gt;
  Field Options/Arguments
&lt;/h3&gt;

&lt;p&gt;We can add constraints and pass arguments to the fields in the models. We can add arguments like &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;blank&lt;/code&gt;, &lt;code&gt;defualt&lt;/code&gt;, &lt;code&gt;choices&lt;/code&gt;, etc. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;null=True/False&lt;/code&gt; -&amp;gt; Set a check for the entry in the table as not null in the database.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;blank=True/False&lt;/code&gt; -&amp;gt; Set a check for the input validation to empty or not.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;unique=True/False&lt;/code&gt; -&amp;gt; Set a constraint to make the entry unique throughout the table.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;defualt=anyvalue&lt;/code&gt; -&amp;gt; Set a default value for the field.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;choices=list&lt;/code&gt; -&amp;gt; Set a list of defined choices to select in the field (a list of two valued tuple).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We also have another constraint specific to the fields like &lt;code&gt;max_length&lt;/code&gt; for &lt;code&gt;CharField&lt;/code&gt;, &lt;code&gt;on_delete&lt;/code&gt; for ForeignKey which can be used as a controller for the model when the related model is deleted, &lt;code&gt;verbose_name&lt;/code&gt; to set a different name for referencing the entry in the table/model from the admin section compared to the default name of the model, &lt;code&gt;verbose_name_plural&lt;/code&gt; similar to the &lt;code&gt;verbose_name&lt;/code&gt; but for referencing the entire table/model. Also &lt;code&gt;auto_now_add&lt;/code&gt; and &lt;code&gt;auto_now&lt;/code&gt; for &lt;code&gt;DateTimeField&lt;/code&gt; so as to set the current date-time by default.&lt;/p&gt;

&lt;p&gt;More options and arguments that can be passed to the fields in models are given in the django docs &lt;a href="https://docs.djangoproject.com/en/4.0/topics/db/models/#field-options"&gt;field options&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These are some of the options or arguments that we can or need to pass to the fields to set up a constrained schema for our database. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#meta-class"&gt;
  &lt;/a&gt;
  Meta class
&lt;/h3&gt;

&lt;p&gt;Meta class is a nested class inside the model class which is most of the times used for ordering the entries(objects) in the table, managing permissions for accessing the model, add constraints to the models related to the attributes/fields inside it, etc.&lt;/p&gt;

&lt;p&gt;You can read about the functionalities of the Meta class in the &lt;a href="https://docs.djangoproject.com/en/4.0/ref/models/options/"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#model-methods"&gt;
  &lt;/a&gt;
  Model methods
&lt;/h2&gt;

&lt;p&gt;As a class can have functions, so does a model as it is a Python class after all. We can create kind of a helper methods/functions inside the model. The model class provides a helpful &lt;code&gt;__str__()&lt;/code&gt; function which is used to rename an object from the database. We also have other predefined helper functions like &lt;code&gt;get_absolute_url&lt;/code&gt; that generates the URL and returns it for further redirection or rendering.&lt;/p&gt;

&lt;p&gt;Also, you can define the custom functions that can be used as to help the attributes inside the model class.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#django-orm"&gt;
  &lt;/a&gt;
  Django ORM
&lt;/h2&gt;

&lt;p&gt;Django has an Object Relational Mapper is the core concept in Django or the component in Django that allows us to interact with the database without the programmer writing SQL/DB queries. It is like a Pythonic way to write and execute sql queries, it basically abstracts away the layer to manually write SQL queries. &lt;/p&gt;

&lt;p&gt;We'll explore the details of how the ORM works under the hood but it's really interesting and fascinating for a Beginner to make web applications without learning SQL(not recommended though personally). For now, its just magical to see Django handling the DB operations for you. You can get the references for learning about the Queryset in ORM from the &lt;a href="https://docs.djangoproject.com/en/4.0/ref/models/querysets/"&gt;docs&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#example-model"&gt;
  &lt;/a&gt;
  Example Model
&lt;/h2&gt;

&lt;p&gt;Let us set up a model from what we have learned so far. &lt;/p&gt;

&lt;p&gt;We'll create a model for a Blog Post again but with more robust fields and structure.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#from django.db import models
from django.contrib.auth.models import User

class Article(models.Model):

    options = (
    ('draft', 'Draft'),
    ('published', 'Published'),
    )

    title = models.CharField(max_length=255, unique=True)
    slug = models.SlugField(max_length=255, unique_for_date='publish')
    post = models.TextField()
    author = models.ForeignKey(User, on_delete=models.CASCADE, related_name='Posts')
    created = models.DateTimeField(auto_now_add=True)
    updated = models.DateTimeField(auto_now=True)
    status = models.CharField(max_length=16, choices=option, default='draft')

    def __str__()
        return self.title

    class Meta:
        ordering = ('-publish',)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can see in the above model that we have defined the Meta class which is optional and is generally written to modify how to entries inside the table appear or order with other functionalities as well. We have also added the choices option in the status field which has two choices &lt;code&gt;Draft&lt;/code&gt; and &lt;code&gt;Publish&lt;/code&gt; one which is seen by the django interface and the other to the end-users. We have also added certain fields like slug that will create the URL for the blog post, also certain options like &lt;code&gt;unique&lt;/code&gt; has been set to restrict duplicate entries being posted to the database. The &lt;code&gt;related_name&lt;/code&gt; in the &lt;code&gt;ForeignKey&lt;/code&gt; refers to the name given to the relation from the Article model to the User model in this case. &lt;/p&gt;

&lt;p&gt;So, we can see that Django allows us to structure the schema of a database. Though nothing is seen as an end result, when we configure and migrate the model to our database we will see the results of the hard work spent in creating and designing the model. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#database-specific-fields"&gt;
  &lt;/a&gt;
  Database Specific fields
&lt;/h2&gt;

&lt;p&gt;By this time, you will have gotten a feel of what a database might be. Most of the projects are designed around SQL databases but No-SQL databases and others are also used in cases which suite them the most. We have tools to manage this database in SQL we call it the Database Management System (DBMS). It's just a tool to manage data, but there is not just a single Database management tool out there, there are gazillions and bazillions of them. Most  popular include &lt;code&gt;MySQL&lt;/code&gt;, &lt;code&gt;PostgreSQL&lt;/code&gt;, &lt;code&gt;SQLite&lt;/code&gt;, &lt;code&gt;Oracle&lt;/code&gt;, &lt;code&gt;Microsoft Access&lt;/code&gt;, &lt;code&gt;Maria DB&lt;/code&gt;, and tons of others. &lt;/p&gt;

&lt;p&gt;Well, these different DBMS tools are almost similar with a few hiccups here and there. So, different Database tools might have different fields they provide. For Example, in Database &lt;code&gt;PostgreSQL&lt;/code&gt; provides the ListField which &lt;code&gt;SQLite&lt;/code&gt; doesn't that can be the decision to be taken before creating any project. There might be some fields that some DBMS provide and other doesn't.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We understood the basics of creating a model. We didn't touch on the database yet but the next part is all about configuration and migration so we'll get hands-on with the databases. We covered how to structure our database, how to write fields in the model, add constraints and logic to them and explore the terminologies in Django like ORM, Database Types, etc. &lt;/p&gt;

&lt;p&gt;Thank you for reading the article, if you have any feedback kindly let me know, and until then Happy Coding :)&lt;/p&gt;

</description>
      <category>django</category>
      <category>python</category>
      <category>webdev</category>
      <category>backend</category>
    </item>
    <item>
      <title>Variáveis - Ruby</title>
      <author>Diego Novais</author>
      <pubDate>Tue, 04 Jan 2022 16:55:14 +0000</pubDate>
      <link>https://dev.to/dnovais/variaveis-ruby-f8p</link>
      <guid>https://dev.to/dnovais/variaveis-ruby-f8p</guid>
      <description>&lt;h2&gt;
  &lt;a href="#vari%C3%A1veis-locais"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Variáveis Locais&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;As variáveis locais são as mais comuns quando estamos utilizando o Ruby. Para usá-la basta que seja atribuído um valor à variável desejada. Vejam os exemplos:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Diego Novais'&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"Diego Novais"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;as variáveis possuem seu escopo, por ex. uma variável local exercerá seu papel apenas “no local” onde foi definida.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;my_name_is&lt;/span&gt;
  &lt;span class="n"&gt;first_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Diego'&lt;/span&gt;
  &lt;span class="n"&gt;last_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Novais'&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="ss"&gt;:my_name_is&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Se tentarmos imprimir uma das variáveis fora do escopo do método &lt;code&gt;my_name_is&lt;/code&gt; teremos um erro:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;010&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;first_name&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="no"&gt;NameError&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;undefined&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;method&lt;/span&gt; &lt;span class="sb"&gt;`first_name' for main:Object)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#vari%C3%A1veis-globais%C2%A0"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Variáveis Globais $&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;O conceito de variável global é, basicamente, uma referência acessível em qualquer parte da aplicação. Existe uma convenção de nomes onde diz que estas variáveis devem ser iniciadas com $ (cifrão).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="vg"&gt;$version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"1.2.3"&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"1.2.3"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;defined?&lt;/span&gt; &lt;span class="vg"&gt;$version&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"global-variable"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#vari%C3%A1veis-de-inst%C3%A2ncia-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Variáveis de Instância @&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;As variáveis de instância são aquelas que &lt;strong&gt;ficam disponíveis para cada uma das instâncias de uma classe&lt;/strong&gt;, ou seja, isoladamente em cada objeto. Ou seja, variáveis de instância implementam os atributos de uma classe, ou suas variáveis membro, e, coletivamente, representam o estado de um objeto. São definidas na classe de forma independente dos outros objetos da mesma classe.&lt;/p&gt;

&lt;p&gt;Veja o exemplo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;
    &lt;span class="vi"&gt;@name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"teste"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;speak&lt;/span&gt;
    &lt;span class="s2"&gt;"I'm speaking with you! &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="ss"&gt;:speak&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
&lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;instance_variables&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:@name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#vari%C3%A1veis-de-classe%C2%A0"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Variáveis de Classe @@&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Variáveis de classe são responsáveis por guardar informações em um classe. Armazenam seu próprio estado e são compartilhadas entre todos os objetos e &lt;strong&gt;“atravessam” as heranças entre classes&lt;/strong&gt;. Variáveis de classe devem ser iniciadas com @@ (2 arrobas).&lt;/p&gt;

&lt;p&gt;Veja o exemplo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Animal&lt;/span&gt;
  &lt;span class="vc"&gt;@@kind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'flying'&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;kind&lt;/span&gt;
    &lt;span class="vc"&gt;@@kind&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;Animal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;kind&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"flying"&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Duck&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Animal&lt;/span&gt;
  &lt;span class="vc"&gt;@@kind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'walk'&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;Duck&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;kind&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"walk"&lt;/span&gt;

&lt;span class="no"&gt;Animal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;class_variables&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:@@kind&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>braziliandevs</category>
      <category>ruby</category>
      <category>rails</category>
    </item>
    <item>
      <title>Beautify Your GitHub Profile README</title>
      <author>Xyphuz</author>
      <pubDate>Tue, 04 Jan 2022 16:37:44 +0000</pubDate>
      <link>https://dev.to/wst24365888/beautify-your-github-profile-readme-24fg</link>
      <guid>https://dev.to/wst24365888/beautify-your-github-profile-readme-24fg</guid>
      <description>&lt;p&gt;Have you ever seen a beautiful &lt;a href="https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/managing-your-profile-readme"&gt;profile README&lt;/a&gt; while browsing the GitHub profiles of someone?&lt;/p&gt;

&lt;p&gt;You may be wondering how to make it look like that. Here are some tips:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-html-elements"&gt;
  &lt;/a&gt;
  Use HTML Elements
&lt;/h2&gt;

&lt;p&gt;Because README uses Markdown syntax, there are some features in the layout that HTML Elements can do that Markdown cannot, such as centering blocks and resizing images.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-tools"&gt;
  &lt;/a&gt;
  Use Tools
&lt;/h2&gt;

&lt;p&gt;There are many tools that can help you make your README more beautiful. The idea is to use the GitHub API to dynamically generate SVG charts that show your GitHub data, such as contribution amount, cost used languages or total star earned, total PRs... etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-badges"&gt;
  &lt;/a&gt;
  For Badges
&lt;/h3&gt;

&lt;p&gt;For badges, try &lt;a href="https://shields.io/"&gt;&lt;strong&gt;shields.io&lt;/strong&gt;&lt;/a&gt;, it helps you create many different kinds of badges, and there are many parameters to create the badge you want to show.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/badges/shields"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Buk2TUq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github-readme-stats.vercel.app/api/pin/%3Fusername%3Dbadges%26repo%3Dshields" alt="repo-link" width="400" height="140"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is an example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4_hn_Qpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Example-black%3Flogo%3Ddev.to%26style%3Dfor-the-badge" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4_hn_Qpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Example-black%3Flogo%3Ddev.to%26style%3Dfor-the-badge" alt="badge-example" width="105" height="28"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-stats"&gt;
  &lt;/a&gt;
  For Stats
&lt;/h3&gt;

&lt;p&gt;For stats, try &lt;strong&gt;github-readme-stats&lt;/strong&gt;, it helps you create SVG for all kinds of your GitHub stats.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QWapfgqQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github-readme-stats.vercel.app/api/pin/%3Fusername%3Danuraghazra%26repo%3Dgithub-readme-stats" alt="repo-link" width="400" height="120"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is an example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T8XvN9Wh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github-readme-stats.vercel.app/api%3Fusername%3Dwst24365888%26border_radius%3D0%26icon_color%3D0aa%26bg_color%3D000%26text_color%3Dccc%26title_color%3DFCE928%26show_icons%3Dtrue%26count_private%3Dtrue%26hide_border%3Dtrue%26include_all_commits%3Dtrue%26hide_title%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T8XvN9Wh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github-readme-stats.vercel.app/api%3Fusername%3Dwst24365888%26border_radius%3D0%26icon_color%3D0aa%26bg_color%3D000%26text_color%3Dccc%26title_color%3DFCE928%26show_icons%3Dtrue%26count_private%3Dtrue%26hide_border%3Dtrue%26include_all_commits%3Dtrue%26hide_title%3Dtrue" alt="stats-example" width="495" height="165"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-commitcontribution-graph"&gt;
  &lt;/a&gt;
  For Commit/Contribution Graph
&lt;/h3&gt;

&lt;p&gt;For commit/contribution graph, try &lt;strong&gt;github-contribution-graph&lt;/strong&gt;! &lt;/p&gt;

&lt;p&gt;It's an awesome tool for dynamically generating contribution graphs that show your GitHub contributions.&lt;/p&gt;

&lt;p&gt;It's beautiful, it has SLIM animation, and it supports custom background image (even &lt;code&gt;.gif&lt;/code&gt; !)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ez4o/github-contribution-graph"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4WNZOX34--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github-readme-stats.vercel.app/api/pin/%3Fusername%3Dez4o%26repo%3Dgithub-contribution-graph" alt="repo-link" width="400" height="140"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is the demo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xkG8hHI5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ucxf4y60oi8go5cwf6p.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xkG8hHI5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ucxf4y60oi8go5cwf6p.gif" alt="Image description" width="632" height="680"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay, that's all about today's tips!&lt;/p&gt;

&lt;p&gt;If you have any ideas or questions, please feel free to share them with me in the comment section!&lt;/p&gt;

&lt;p&gt;If you like any of the above tools, don't forget to leave a star in their GitHub repo!&lt;/p&gt;

</description>
      <category>github</category>
      <category>profile</category>
      <category>readme</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Build Test Report Dashboard using MERN stack </title>
      <author>Akshay C A</author>
      <pubDate>Tue, 04 Jan 2022 16:35:34 +0000</pubDate>
      <link>https://dev.to/akshayca/build-test-report-dashboard-using-mern-stack-29c</link>
      <guid>https://dev.to/akshayca/build-test-report-dashboard-using-mern-stack-29c</guid>
      <description>&lt;p&gt;A test report dashboard is an organized summary of results. It is created and used to help stakeholders (product managers, analysts, testing teams, and developers) understand product quality and decide whether a product, feature or defect resolution is on track for release.&lt;/p&gt;

&lt;p&gt;The idea is to build a Dashboard that quickly encapsulates test results from browser UI tests, windows UI tests, API tests, performance tests, etc., performed by a particular build.&lt;/p&gt;

&lt;p&gt;I used &lt;strong&gt;MongoDB&lt;/strong&gt; because its flexible schema makes it easy to evolve and store data. &lt;strong&gt;React&lt;/strong&gt; and &lt;strong&gt;Express.js&lt;/strong&gt; for building the web application and API. &lt;/p&gt;

&lt;p&gt;So, the different testing frameworks would make the REST API call with the test results in JSON format to our application as soon as the test execution is completed. &lt;/p&gt;

&lt;p&gt;Our App which will be running on a server would store this data and display it to all the stakeholders in real-time.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#lets-get-started-"&gt;
  &lt;/a&gt;
  Let's get started !!
&lt;/h4&gt;

&lt;p&gt;You can clone my code repository for GitHub for your reference : &lt;a href="https://github.com/akshayca/Dashboard"&gt;Link&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;u&gt;&lt;strong&gt;Step 1&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Prerequisite:&lt;/em&gt;&lt;br&gt;
You need Docker installed on your machine. &lt;/p&gt;

&lt;p&gt;You need &lt;code&gt;mongo&lt;/code&gt; and &lt;code&gt;mongo-express&lt;/code&gt;. So, create a &lt;em&gt;docker-compose.yml&lt;/em&gt; file, add the below content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version: '3'
services:
  mongodb:
    image: mongo
    ports:
     - 27017:27017
    environment:
     - MONGO_INITDB_ROOT_USERNAME=admin
     - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
     - mongo-data:/data/db
  mongo-express:
    image: mongo-express
    ports:
     - 8081:8081
    environment:
     - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
     - ME_CONFIG_MONGODB_ADMINPASSWORD=password
     - ME_CONFIG_MONGODB_SERVER=mongodb
volumes:
  mongo-data:
    driver: local
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the Docker compose command -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker-compose -f docker-compose.yml up 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should be able to access it on localhost port- 8081.&lt;br&gt;
Go ahead and create the database and name it &lt;code&gt;DashboardApp&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LOXvvC_---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sc3qxw5kmugewqqf09k4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LOXvvC_---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sc3qxw5kmugewqqf09k4.png" alt="description" width="880" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;&lt;strong&gt;Step 2&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Prerequisite:&lt;/em&gt;&lt;br&gt;
You need Node installed on your machine. &lt;/p&gt;

&lt;p&gt;Create the React application by running this command&lt;br&gt;
&lt;code&gt;npx create-react-app &amp;lt;app-name&amp;gt;&lt;/code&gt;&lt;br&gt;
Now navigate into the App and create the &lt;em&gt;backend&lt;/em&gt; folder. &lt;br&gt;
Inside this folder, we will create the backend &lt;br&gt;
&lt;code&gt;npm init -y&lt;/code&gt;. &lt;br&gt;
So, that it connects to the MongoDB then we will come back and write the React later. &lt;/p&gt;

&lt;p&gt;We will install these dependencies for our backend.&lt;br&gt;
&lt;code&gt;npm install express cors mongoose dotenv&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Create the &lt;em&gt;server.js&lt;/em&gt; file to connect to the database and the &lt;em&gt;.env&lt;/em&gt; file to store the environment variables.&lt;/p&gt;

&lt;p&gt;Now you can start the server and the console should look something like this - &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I2Uskr-n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/287ceql4wu4wxczswjrj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I2Uskr-n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/287ceql4wu4wxczswjrj.png" alt="description" width="880" height="215"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;&lt;strong&gt;Step 3&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;Now let's create the database schema. Create a new directory called &lt;code&gt;models&lt;/code&gt;. &lt;br&gt;
Add all the different schemas you want to create in the &lt;code&gt;model.js&lt;/code&gt; files.&lt;br&gt;
Once this is done, we need to add the API endpoints routes to perform the &lt;strong&gt;CRUD&lt;/strong&gt; operations.&lt;br&gt;
Inside the backend folder, create another folder called routes and the CRUD operations code in it.&lt;/p&gt;

&lt;p&gt;You can test the server by making an API call. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dWoAuf5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7u3om38olwkr21zfk0sf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dWoAuf5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7u3om38olwkr21zfk0sf.png" alt="description" width="649" height="507"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PoCgelgL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2e2f0ehun2wra1hvta8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PoCgelgL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2e2f0ehun2wra1hvta8.png" alt="description" width="880" height="431"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;&lt;strong&gt;Step 4&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;Now it's time to build the front end using React.&lt;br&gt;
You also npm install &lt;code&gt;axios&lt;/code&gt;, &lt;code&gt;bootstrap&lt;/code&gt;, &lt;code&gt;react-bootstrap&lt;/code&gt;, &lt;code&gt;react-icons&lt;/code&gt;, &lt;code&gt;react-router-dom:5.0.0&lt;/code&gt; and &lt;code&gt;react-scripts:4.0.3&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You need to edit the default template provided by React in &lt;code&gt;index.html&lt;/code&gt;, &lt;code&gt;index.js&lt;/code&gt;, and in &lt;code&gt;App.js&lt;/code&gt; files&lt;/p&gt;

&lt;p&gt;You use components to tell what we want to see on the screen.&lt;br&gt;
So, create a folder called &lt;em&gt;components&lt;/em&gt; inside the &lt;em&gt;src&lt;/em&gt; folder.&lt;br&gt;
Create the components files or projects as per your project needs.&lt;/p&gt;

&lt;p&gt;Once, this is done you can start the Dashboard by running the &lt;code&gt;npm start&lt;/code&gt; command. &lt;br&gt;
The App should start running at localhost port- 3000. &lt;/p&gt;

&lt;p&gt;Added some more data into the database and the Dashboard UI should look something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9Lft8oBk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8yekfnv9rjnvtnt866a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Lft8oBk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8yekfnv9rjnvtnt866a.png" alt="description" width="880" height="352"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BSBrMgoJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yeo3tzs5xbn7ehdazis8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BSBrMgoJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yeo3tzs5xbn7ehdazis8.png" alt="description" width="880" height="338"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;&lt;strong&gt;Step 5&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;Now, let's Dockerize our Dashboard application. So, it will be easy to start our app or run on only server easily.&lt;/p&gt;

&lt;p&gt;We need to create a Dockerfile for the server and the client. The Dockerfile essentially contains the build instructions to build the image.&lt;/p&gt;

&lt;p&gt;And it using the docker build command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker build -t &amp;lt;image-name&amp;gt; .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To run our entire application together, i.e run all containers parallelly, we need to configure the docker-compose file.&lt;br&gt;
So, I will be editing the existing docker-compose file.&lt;/p&gt;

&lt;p&gt;To start the entire application services we need to run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker-compose up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: You need to update the .env file in the backend since we are running the services within the docker container.&lt;br&gt;
i.e &lt;code&gt;MONGO_URI=mongodb://mongodb:27017/DashboardApp&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can access the application at localhost port- 3000.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E2ASiuXb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nyu8vhz80f2debiflh7l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E2ASiuXb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nyu8vhz80f2debiflh7l.png" alt="description" width="880" height="313"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well, that's it!&lt;/p&gt;

&lt;p&gt;You can run this Dashboard App on your machine by following these steps&lt;/p&gt;

&lt;p&gt;Clone the repo&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https://github.com/akshayca/Dashboard.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;Dashboard
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start the app&lt;/p&gt;

&lt;p&gt;Go to the project directory and run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up &lt;span class="nt"&gt;--build&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The app will start running at &lt;code&gt;localhost:3000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let me know if you need any help :)&lt;/p&gt;

&lt;p&gt;Here are the links which you might find useful:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/7CqJlxBYj-M"&gt;Learn the MERN Stack&lt;/a&gt;&lt;br&gt;
&lt;a href="https://medium.com/mozilla-club-bbsr/dockerizing-a-mern-stack-web-application-ebf78babf136"&gt;Dockerizing a MERN Stack Web Application&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>mongodb</category>
      <category>dashboard</category>
    </item>
    <item>
      <title>¿Cómo es realmente buscar un trabajo en el siglo XXI?</title>
      <author>Manu Martinez</author>
      <pubDate>Tue, 04 Jan 2022 16:24:45 +0000</pubDate>
      <link>https://dev.to/whitehatdevv/what-is-it-really-like-to-look-for-a-job-in-the-21st-century-3h74</link>
      <guid>https://dev.to/whitehatdevv/what-is-it-really-like-to-look-for-a-job-in-the-21st-century-3h74</guid>
      <description>&lt;p&gt;Linkedin, Infojobs, Indeed, JobToday... hemos llegado al año 2022 y el mundo sigue sin tener una aplicación decente que nos ayude a encontrar un trabajo (ni que estuviéramos pidiendo tanto, hombre ya!). Existen un sin fin de aplicaciones que lo único que logran es hacernos perder el tiempo llenando formularios interminables y enviando cientos de curriculums, que con algo de suerte, alguna empresa llegará a leer algún día (si es que antes no te lo rechaza alguno de los software automáticos que tan de moda se han puesto ahora). &lt;/p&gt;

&lt;p&gt;Pero vaya, que siempre es la misma historia: te postulas a decenas de ofertas de trabajo, envías tu currículum a todo el mundo, casi nadie te responde, y si lo hacen, con suerte consigues una entrevista en la que tras un largo proceso de entrevistas y pruebas, te acaban diciendo el clásico “ya te llamaremos”. Todavía estoy esperando vuestra llamada! 💩 &lt;/p&gt;

&lt;p&gt;¿Pero por qué es tan complicado conseguir un trabajo en esta época?¿No se supone que vivimos en el momento de la historia con mayor conectividad del mundo? 🤖&lt;/p&gt;

&lt;p&gt;Estamos viviendo la mayor era digital de la historia, y aun así, nunca antes había sido tan difícil conseguir trabajo. Y es que buscar trabajo hoy en día se ha vuelto complicado, para que mentirnos. Antiguamente ibas a cualquier empresa, les dabas el cv en mano y el lunes comenzabas a trabajar con ellos. Hoy todo ese proceso se ha convertido en una grotesca escena de Los Juegos del Hambre, y plataformas como Linkedin, Indeed e Infojobs, lejos de ayudarnos, solo lograron complicarlo todo aún más.&lt;/p&gt;

&lt;p&gt;Fíjate en mi caso, nada más terminar la carrera salí al mundo con ganas de comérmelo entero, pero me dí de morros al ver realmente como funcionan las cosas aquí afuera: ya no alcanzaba con enviar tu CV a una empresa por email, ahora tienes que enviar tu portfolio, un vídeo de presentación, tener todas las redes sociales a la orden del día, ser un influencer y community manager a la vez, haber fundado una empresa exitosa antes de los 18, y al menos tener un Record Guiness... Si lo llego a saber antes me hubiera hecho un canal de YouTube en vez de estudiar Ingeniería 👨‍🎓&lt;/p&gt;

&lt;p&gt;Lo cierto es que estaba muy perdido, y como sabia persona que soy, decidí buscar consejos en mis amigos, y uno de ellos me dijo “Tío métete a LinkedIn, es lo que ahora se lleva, es lo que usan todas las empresas” 🚀&lt;/p&gt;

&lt;p&gt;Dicho y hecho, empecé a descubrir como funcionaba todo aquello de buscar trabajo por internet empezando con Linkedin. Y si tengo que serte sincero, a día de hoy, todavía no sé que coño estoy haciendo ahí metido. ¿Qué es exactamente Linkedin? Porque a mí me recuerda a Facebook, pero con otro nombre. Te dice que puedes encontrar un empleo a través de su plataforma y lo único que terminas haciendo es perder el tiempo haciendo scroll infinito, mirando memes, y leyendo las historias de una red de contactos, que no conoces ni vas a conocer, y con la que has ido conectando solo porque se dedican al mismo trabajo que tú o te han dado like en tu última publicación. 🕵🏼&lt;/p&gt;

&lt;p&gt;Digamos que ya tienes tu perfil actualizado y decides comenzar con la búsqueda de empleo: primero tienes que pasar horas y horas revisando cientos de ofertas en busca de alguna que encaje con tu perfil, para que cuando finalmente des con la oferta perfecta, esa oferta que coincide en todo contigo, y que hasta parece que lleva tu nombre escrito, tenga nada más ni menos que... BOOM! 200 solicitudes en las últimas 2 horas. Holy shit. ¿En serio tengo que “competir” contra más de 200 candidatos por un único puesto de trabajo? &lt;/p&gt;

&lt;p&gt;En mi opinión, alguien deberia quitar ese contador de solicitudes tan desalentador. 😱&lt;/p&gt;

&lt;p&gt;Pero bueno, ¿tu seguro que no eres de los que se desanima por algo así, verdad que no? Y con un par de pelotas, decides aplicar a la oferta, pero de pronto se abre otra pestaña y... SORPRESA! Tienes que registrarte en la página web de la empresa si quieres aplicar a la oferta! 😈Así que ahora toca rellenar todos tus datos de nuevo (y regalar toda tu información personal a una empresa que no sabrás que hará con ellos 💸). Y mucho cuidado con las ofertas falsas, que solo buscan tener tus datos para venderlos y ganar dinero a tu costa. No se puede negar que uno de los problemas que tienen plataformas como Linkedin es que tratan de abarcar tantas funcionalidades, que hasta las ratas se cuelan en el propio barco. 🐀&lt;/p&gt;

&lt;p&gt;Pero vaya, te voy a ir dejando ya, que tengo que colgar un nuevo post para que las empresas me vean como un perfil activo, siempre conectado y listo para la acción. Que si no publico mínimo una vez por semana e interactúo cada día con toda mi red de contactos desconocidos, el algoritmo me pondrá al final de la cola de posibles candidatos viables. ¿Sabes que creo? Que más que en la era de la conectividad digital, estamos en la era de hacer el paripé para vendernos a nosotros mismos 🤡. Ves, por eso no me gustan las redes sociales, porque todo el mundo tiene que estar al tanto de todo lo que haces en todo momento. Ya no existe la privacidad ni para buscar trabajo. ⛔&lt;/p&gt;

&lt;p&gt;Nos pasa a todos y seguirá pasando hasta que algo cambie.&lt;/p&gt;

&lt;p&gt;LinkedIn, InfoJobs, Indeed, JobToday… hemos llegado al año 2022 y el mundo aún no conoce una aplicación que nos de lo que todos estamos buscando: una plataforma moderna y eficiente que no nos haga perder el tiempo, y que sobre todo, nos ayude a encontrar un trabajo acorde a nuestras habilidades y preferencias, en vez de enviarnos ofertas basadas solo en el nombre del puesto de trabajo. 😷&lt;/p&gt;

&lt;p&gt;¿Algo así suena a utopía, verdad? Pero no tiene porque serlo. &lt;/p&gt;

&lt;p&gt;Manteneros al tanto. El cambio está en camino.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>works</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
