<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Binomial Distribution and Case studies</title>
      <author>Ambarish Ganguly</author>
      <pubDate>Sun, 31 Oct 2021 18:39:04 +0000</pubDate>
      <link>https://dev.to/ambarishg/binomial-distribution-and-case-studies-md3</link>
      <guid>https://dev.to/ambarishg/binomial-distribution-and-case-studies-md3</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Mti755NyFNc"&gt;
&lt;/iframe&gt;
            &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/yyqoggEqMG8"&gt;
&lt;/iframe&gt;
           &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/wYY52gc-QFc"&gt;
&lt;/iframe&gt;
  &lt;/p&gt;

</description>
      <category>statistics</category>
    </item>
    <item>
      <title>Using KEDA and Prometheus to auto-scale your k8s workloads</title>
      <author>Djamaile</author>
      <pubDate>Sun, 31 Oct 2021 18:30:09 +0000</pubDate>
      <link>https://dev.to/djamaile/using-keda-and-prometheus-to-auto-scale-your-k8s-workloads-57e6</link>
      <guid>https://dev.to/djamaile/using-keda-and-prometheus-to-auto-scale-your-k8s-workloads-57e6</guid>
      <description>&lt;p&gt;These days, everyone and their grandma are using Kubernetes and one important&lt;br&gt;
aspect of Kubernetes is scaling your workloads. With KEDA, it is extremely&lt;br&gt;
simple to scale your workloads! Let’s have a look.&lt;/p&gt;

&lt;p&gt;repository: &lt;a href="https://github.com/djamaile/keda-demo"&gt;https://github.com/djamaile/keda-demo&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;Straight from the website of &lt;a href="https://keda.sh"&gt;KEDA&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;KEDA is a Kubernetes-based Event Driven&lt;br&gt;
Autoscaler. With KEDA, you can drive the scaling of any container in Kubernetes&lt;br&gt;
based on the number of events needing to be processed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;KEDA provides many 'triggers' on which your application can scale on. For&lt;br&gt;
example, Prometheus, PubSub, Postgres and many more. In this blog post we will&lt;br&gt;
focus on Prometheus.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#starting-up"&gt;
  &lt;/a&gt;
  Starting up
&lt;/h3&gt;

&lt;p&gt;First let's spin up a cluster! I am using &lt;a href="https://kind.sigs.k8s.io/"&gt;kind&lt;/a&gt; but&lt;br&gt;
you are free to use minikube if you prefer that :).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;kind create cluster
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Create the namespace&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;kubectl create ns keda-demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Switch to the namespace&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;kubectl config set-context &lt;span class="nt"&gt;--current&lt;/span&gt; &lt;span class="nt"&gt;--namespace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;keda-demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the cluster is spun up, we can start deploying our Prometheus. For this, I&lt;br&gt;
have already written a prometheus manifest so you won’t have to do it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;prometheus.yaml&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rbac.authorization.k8s.io/v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ClusterRole&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prometheus&lt;/span&gt;
&lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;apiGroups&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;resources&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;services&lt;/span&gt;
    &lt;span class="na"&gt;verbs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;get"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;list"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;watch"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;nonResourceURLs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;/metrics"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;verbs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;get"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ServiceAccount&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;keda-demo&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rbac.authorization.k8s.io/v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ClusterRoleBinding&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prometheus&lt;/span&gt;
&lt;span class="na"&gt;roleRef&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;apiGroup&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rbac.authorization.k8s.io&lt;/span&gt;
  &lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ClusterRole&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prometheus&lt;/span&gt;
&lt;span class="na"&gt;subjects&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ServiceAccount&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;keda-demo&lt;/span&gt;
    &lt;span class="na"&gt;namespace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;keda-demo&lt;/span&gt;
&lt;span class="s"&gt;--------&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ConfigMap&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prom-conf&lt;/span&gt;
  &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prom-conf&lt;/span&gt;
&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;prometheus.yml&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|-&lt;/span&gt;
    &lt;span class="s"&gt;global:&lt;/span&gt;
      &lt;span class="s"&gt;scrape_interval: 5s&lt;/span&gt;
      &lt;span class="s"&gt;evaluation_interval: 5s&lt;/span&gt;
    &lt;span class="s"&gt;scrape_configs:&lt;/span&gt;
      &lt;span class="s"&gt;- job_name: 'go-prom-job'&lt;/span&gt;
        &lt;span class="s"&gt;kubernetes_sd_configs:&lt;/span&gt;
        &lt;span class="s"&gt;- role: service&lt;/span&gt;
        &lt;span class="s"&gt;relabel_configs:&lt;/span&gt;
        &lt;span class="s"&gt;- source_labels: [__meta_kubernetes_service_label_run]&lt;/span&gt;
          &lt;span class="s"&gt;regex: go-prom-app-service&lt;/span&gt;
          &lt;span class="s"&gt;action: keep&lt;/span&gt;
&lt;span class="s"&gt;--------&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;apps/v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deployment&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prometheus-deployment&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;replicas&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;matchLabels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prometheus-server&lt;/span&gt;
  &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prometheus-server&lt;/span&gt;
    &lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;serviceAccountName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;keda-demo&lt;/span&gt;
      &lt;span class="na"&gt;containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prometheus&lt;/span&gt;
          &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prom/prometheus&lt;/span&gt;
          &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;--config.file=/etc/prometheus/prometheus.yml"&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;--storage.tsdb.path=/prometheus/"&lt;/span&gt;
          &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;containerPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;9090&lt;/span&gt;
          &lt;span class="na"&gt;volumeMounts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prometheus-config-volume&lt;/span&gt;
              &lt;span class="na"&gt;mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/etc/prometheus/&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prometheus-storage-volume&lt;/span&gt;
              &lt;span class="na"&gt;mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/prometheus/&lt;/span&gt;
      &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prometheus-config-volume&lt;/span&gt;
          &lt;span class="na"&gt;configMap&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;defaultMode&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;420&lt;/span&gt;
            &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prom-conf&lt;/span&gt;

        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prometheus-storage-volume&lt;/span&gt;
          &lt;span class="na"&gt;emptyDir&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{}&lt;/span&gt;
&lt;span class="s"&gt;--------&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Service&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prometheus-service&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;9090&lt;/span&gt;
      &lt;span class="na"&gt;protocol&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TCP&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prometheus-server&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Prometheus manifest is really simple. Just a Prometheus workload with a&lt;br&gt;
clusterrole and a clusterrolebinding. Don't forget to apply the manifest:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; prometheus.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the pod is up and running, let's see if it also works:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;kubectl port-forward svc/prometheus-service 9090
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now visit &lt;code&gt;http://localhost:9090&lt;/code&gt; and you should see the user interface of&lt;br&gt;
Prometheus.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#deploying-keda"&gt;
  &lt;/a&gt;
  Deploying Keda
&lt;/h3&gt;

&lt;p&gt;We can now deploy the KEDA operator. KEDA provides multiple ways to deploy their&lt;br&gt;
operator, but for now we will use the k8s manifest.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; https://github.com/kedacore/keda/releases/download/v2.4.0/keda-2.4.0.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now there should be two pods in the namespace &lt;code&gt;keda&lt;/code&gt; you can check it with the&lt;br&gt;
following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;kubectl get pods &lt;span class="nt"&gt;-n&lt;/span&gt; keda
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see there are two pods being spinned up:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;on 🤠 kind-kind &lt;span class="o"&gt;(&lt;/span&gt;keda&lt;span class="o"&gt;)&lt;/span&gt; Desktop/projects/keda-prometheus ☁️  default
🕙[ 07:35:40 &lt;span class="o"&gt;]&lt;/span&gt; ❯ kubectl get pods                                                         335ms
NAME                                      READY   STATUS              RESTARTS   AGE
keda-metrics-apiserver-66b8c68649-2mwf8   0/1     ContainerCreating   0          5s
keda-operator-574c6d4769-q9mlc            0/1     ContainerCreating   0          5s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The metrics-apiserver exposes data to the Horizontal Pod Autoscaler, which gets&lt;br&gt;
consumed by a deployment. The operator pod activates Kubernetes deployments to&lt;br&gt;
scale to and from zero on no events.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creating-the-application-optional"&gt;
  &lt;/a&gt;
  Creating the application (Optional)
&lt;/h3&gt;

&lt;p&gt;The application is a simple go application that increments the metric&lt;br&gt;
&lt;code&gt;http_requests&lt;/code&gt; when you visit it. This section is optional because you are also&lt;br&gt;
free to use my docker image.&lt;/p&gt;

&lt;p&gt;in your folder execute the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;go mod init github.com/djamaile/keda-demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then in your &lt;code&gt;main.go&lt;/code&gt; you can put in the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"log"&lt;/span&gt;
    &lt;span class="s"&gt;"net/http"&lt;/span&gt;

    &lt;span class="s"&gt;"github.com/prometheus/client_golang/prometheus"&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/prometheus/client_golang/prometheus/promhttp"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;Labels&lt;/span&gt; &lt;span class="k"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;

&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;httpRequestsCounter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;prometheus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewCounter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prometheus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CounterOpts&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"http_requests"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;Help&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"number of http requests"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;// Metrics have to be registered to be exposed:&lt;/span&gt;
    &lt;span class="n"&gt;prometheus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MustRegister&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;httpRequestsCounter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/metrics"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;promhttp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Handler&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;defer&lt;/span&gt; &lt;span class="n"&gt;httpRequestsCounter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Inc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Hello, you've requested: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fatal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListenAndServe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;":8080"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now build the go application with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;go mod tidy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's then make a simple &lt;code&gt;Dockerfile&lt;/code&gt; for it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; golang as build-stage&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; go.mod /&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; go.sum /&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; main.go /&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; / &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;CGO_ENABLED&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0 &lt;span class="nv"&gt;GOOS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;linux go build &lt;span class="nt"&gt;-a&lt;/span&gt; &lt;span class="nt"&gt;-installsuffix&lt;/span&gt; cgo &lt;span class="nt"&gt;-o&lt;/span&gt; go-prom-app

&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; alpine&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; --from=build-stage /go-prom-app /&lt;/span&gt;
&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 8080&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["/go-prom-app"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Only thing left is to build and push the image:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; &amp;lt;your_username&amp;gt;/keda &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker push &amp;lt;your_username&amp;gt;/keda
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#running-the-application"&gt;
  &lt;/a&gt;
  Running the application
&lt;/h3&gt;

&lt;p&gt;If you don’t have a Docker account or don’t want to use it, that’s fine. You can&lt;br&gt;
use my docker image! Let’s get our go application running in our cluster, for&lt;br&gt;
that we need some k8s manifests. Not to worry because I already wrote them:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;go-deployment.yaml&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;apps/v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deployment&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;go-prom-app&lt;/span&gt;
  &lt;span class="na"&gt;namespace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;keda-demo&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;matchLabels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;go-prom-app&lt;/span&gt;
  &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;go-prom-app&lt;/span&gt;
    &lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;go-prom-app&lt;/span&gt;
          &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;djam97/keda&lt;/span&gt;
          &lt;span class="na"&gt;imagePullPolicy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Always&lt;/span&gt;
          &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;containerPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8080&lt;/span&gt;
&lt;span class="s"&gt;--------&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Service&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;go-prom-app-service&lt;/span&gt;
  &lt;span class="na"&gt;namespace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;keda-demo&lt;/span&gt;
  &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;go-prom-app-service&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8080&lt;/span&gt;
      &lt;span class="na"&gt;protocol&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TCP&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;go-prom-app&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can replace the image name with your own image if you prefer that.&lt;br&gt;
Let's apply the manifest:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; go-deployment.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the pod is up verify if it is working&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;kubectl port-forward svc/go-prom-app-service 8080
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you visit &lt;code&gt;http://localhost:8080&lt;/code&gt; you should see &lt;code&gt;Hello, you've requested: /&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scaling-the-application"&gt;
  &lt;/a&gt;
  Scaling the application
&lt;/h3&gt;

&lt;p&gt;Now that we have our go application up we can write a manifest that will scale&lt;br&gt;
our application. Keda offers many triggers that can scale our application, but&lt;br&gt;
of course we will use the &lt;a href="https://keda.sh/docs/2.4/scalers/prometheus/"&gt;Prometheus&lt;br&gt;
trigger&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In a new file called scaled-object.yaml add the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;keda.sh/v1alpha1&lt;/span&gt;
&lt;span class="c1"&gt;# Custom CRD provisioned by the Keda operator&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ScaledObject&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prometheus-scaledobject&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;scaleTargetRef&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# target our deployment&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;go-prom-app&lt;/span&gt;
  &lt;span class="c1"&gt;# Interval to when to query Prometheus&lt;/span&gt;
  &lt;span class="na"&gt;pollingInterval&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15&lt;/span&gt;
  &lt;span class="c1"&gt;# The period to wait after the last trigger reported active&lt;/span&gt;
  &lt;span class="c1"&gt;# before scaling the deployment back to 1&lt;/span&gt;
  &lt;span class="na"&gt;cooldownPeriod&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt;
  &lt;span class="c1"&gt;# min replicas keda will scale to&lt;/span&gt;
  &lt;span class="c1"&gt;# if you have an app that has an dependency on pubsub&lt;/span&gt;
  &lt;span class="c1"&gt;# this would be a good use case to set it to zero&lt;/span&gt;
  &lt;span class="c1"&gt;# why keep your app running if your topic has no messages?&lt;/span&gt;
  &lt;span class="na"&gt;minReplicaCount&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
  &lt;span class="c1"&gt;# max replicas keda will scale to&lt;/span&gt;
  &lt;span class="na"&gt;maxReplicaCount&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;
  &lt;span class="na"&gt;advanced&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# HPA config&lt;/span&gt;
    &lt;span class="c1"&gt;# Read about it here: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/&lt;/span&gt;
    &lt;span class="na"&gt;horizontalPodAutoscalerConfig&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;behavior&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;scaleDown&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;stabilizationWindowSeconds&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt;
          &lt;span class="na"&gt;policies&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Percent&lt;/span&gt;
              &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50&lt;/span&gt;
              &lt;span class="na"&gt;periodSeconds&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt;
        &lt;span class="na"&gt;scaleUp&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;stabilizationWindowSeconds&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
          &lt;span class="na"&gt;policies&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Percent&lt;/span&gt;
              &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50&lt;/span&gt;
              &lt;span class="na"&gt;periodSeconds&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;
  &lt;span class="na"&gt;triggers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prometheus&lt;/span&gt;
      &lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# address where keda can reach our prometheus on&lt;/span&gt;
        &lt;span class="na"&gt;serverAddress&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;http://prometheus-service.keda-demo.svc.cluster.local:9090&lt;/span&gt;
        &lt;span class="c1"&gt;# metric on what we want to scale&lt;/span&gt;
        &lt;span class="na"&gt;metricName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;http_requests_total&lt;/span&gt;
        &lt;span class="c1"&gt;# if treshold is reached then Keda will scale our deployment&lt;/span&gt;
        &lt;span class="na"&gt;threshold&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;100"&lt;/span&gt;
        &lt;span class="na"&gt;query&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;sum(rate(http_requests[1m]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Read the yaml manifest and it’s comments to understand what is going on. One&lt;br&gt;
important note as well is in&lt;br&gt;
&lt;code&gt;advanced.horizontalPodAutoscalerConfig.scaleUp.policies&lt;/code&gt; you can see I have&lt;br&gt;
specified 50%, that means our pod will scale up with 50% of it’s current amount&lt;br&gt;
of pods. &lt;code&gt;1 -&amp;gt; 2 -&amp;gt; 3 -&amp;gt; 5 -&amp;gt; 8 -&amp;gt; 12 -&amp;gt; 18 -&amp;gt; 20&lt;/code&gt; it will stop at 20 pods because&lt;br&gt;
that is the limit we specified.&lt;/p&gt;

&lt;p&gt;Let's apply the manifest:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; scaled-object.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will provision an HPA in your namespace which you can check with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;kubectl get hpa
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;but because this is a custom CRD you can also query the custom CRD wuth kubectl:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;kubectl get scaledobject.keda.sh/prometheus-scaledobject

NAME                      SCALETARGETKIND      SCALETARGETNAME   MIN   MAX   TRIGGERS     AUTHENTICATION   READY   ACTIVE   FALLBACK   AGE
prometheus-scaledobject   apps/v1.Deployment   go-prom-app       1     20    prometheus                    True    False    False      64s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can see that our &lt;code&gt;prometheus-scaledobject&lt;/code&gt; is ready so let’s scale our&lt;br&gt;
application! Remember our application scales on the metric&lt;br&gt;
&lt;code&gt;http_requests_total&lt;/code&gt;&lt;br&gt;
and our threshold is only 100 so we should be able reach that threshold. For&lt;br&gt;
this we can use a simple tool called &lt;a href="https://github.com/rakyll/hey"&gt;hey&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Run the application&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;kubectl port-forward svc/go-prom-app-service 8080
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;In another terminal watch the pods&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;kubectl get pods &lt;span class="nt"&gt;-w&lt;/span&gt; &lt;span class="nt"&gt;-n&lt;/span&gt; keda-demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Put load on the application (Do this continuously, until there are 20 pods)&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;hey &lt;span class="nt"&gt;-n&lt;/span&gt; 10000 &lt;span class="nt"&gt;-m&lt;/span&gt; GET http://localhost:8080
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It can take a minute before the application actually starts scaling. After a&lt;br&gt;
while you should have 20 pods up and running! Now let’s also look at the scale&lt;br&gt;
down process. Stop putting load on the application and let’s just watch the&lt;br&gt;
pods. This process should go from &lt;code&gt;20 -&amp;gt; 10 -&amp;gt; 5 - &amp;gt; 2 -&amp;gt; 1&lt;/code&gt;. This is basically&lt;br&gt;
how KEDA goes to work!&lt;/p&gt;

&lt;p&gt;If you like KEDA please check out their docs for more examples and what type of&lt;br&gt;
different triggers they provide. Happy auto-scaling!&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>keda</category>
      <category>prometheus</category>
    </item>
    <item>
      <title>The Difference Between Web Scraping vs Web Crawling</title>
      <author>Stefan Smiljkovic</author>
      <pubDate>Sun, 31 Oct 2021 18:08:46 +0000</pubDate>
      <link>https://dev.to/shtefcs/the-difference-between-web-scraping-vs-web-crawling-5eo6</link>
      <guid>https://dev.to/shtefcs/the-difference-between-web-scraping-vs-web-crawling-5eo6</guid>
      <description>&lt;p&gt;People sometimes wrongly use the terms web scraping and web crawling synonymously. Although they’re closely related, they’re different actions that need proper delineation — at least, so you can know which one is ideal for your needs at a certain point in time. And understand what the differences are.&lt;/p&gt;

&lt;p&gt;So starting with web scraping, let’s dive into the nitty-gritty of each of these two web actions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-scrape-the-web"&gt;
  &lt;/a&gt;
  Why Scrape the Web?
&lt;/h2&gt;

&lt;p&gt;With millions of information getting scraped daily, data scraping is now a part of the new internet trend. Despite this, &lt;a href="https://www.statista.com/statistics/871513/worldwide-data-created/"&gt;Statista&lt;/a&gt; still estimated the amount of data generated on the internet in 2020 alone to be 64.2 zettabytes. It then projected that this value would’ve increased by more than 179 percent by 2025.&lt;/p&gt;

&lt;p&gt;Big organizations and individuals have used the data available on the web for purposes including, but not limited to: predictive marketing, stock price prediction, sales forecasting, competitive monitoring, and more. With these applications, it’s glaring that data is a driver of growth for many businesses today.&lt;/p&gt;

&lt;p&gt;Additionally, with the world now drifting more towards automation, data-driven machines are now springing up. These machines, as accurate as they are, feed on data using machine learning technology. A strict rule of machine learning requires that an algorithm learns patterns from big data over time. Thus, it probably would’ve been impossible to train machines without data. Nonetheless, images, texts, videos, and products on e-commerce websites are all valuable information that drives the world of artificial intelligence.&lt;/p&gt;

&lt;p&gt;It’s, therefore not far-fetched, why existing companies, start-ups, and individuals resort to the web to gather as much information as they can. Ultimately, it means in today’s business world, the more data you have, the more likely you are to be ahead of your competitors. Thus, web scraping becomes essential.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-web-scraping"&gt;
  &lt;/a&gt;
  What Is Web Scraping?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HBDJu90Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3840/0%2A4UbNnQ_jmeQ_q4xN.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HBDJu90Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3840/0%2A4UbNnQ_jmeQ_q4xN.jpg" alt="What Is Web Scraping?" width="880" height="502"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web scraping, as it sounds, is an act of extracting or sweeping off information from the web. Regardless of the target data, web scraping may be automated using scripted languages and &lt;a href="https://automatio.co/blog/no-code-web-scrapers-ultimate-list/"&gt;dedicated scraping tools&lt;/a&gt; or done manually via copying and pasting. Manual web scraping, of course, isn’t practical. And while writing a scraping script might help, it can be costly and technical as you might need to hire a programmer for it.&lt;/p&gt;

&lt;p&gt;However, using automatic no-code web scraping tools makes the process easy and faster without shedding huge bucks. &lt;a href="https://automatio.co/"&gt;Automatio&lt;/a&gt;, for instance, in addition to its versatile automation toolset, also offers a reliable, flexible, fast, and efficient out-of-the-box no-code tool for scraping any website. So it lets you get as much data as you want, and you can design your scraping bot in no time without writing a single line of code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-web-scrapers-work"&gt;
  &lt;/a&gt;
  How Do Web Scrapers Work?
&lt;/h2&gt;

&lt;p&gt;Web scrapers use the hypertext transfer protocol (HTTP) to request data from a web page using the get method. On most occasions, once it receives a valid response from the web page, a scraper collects updated content from the client side. It does so by attaching itself to specific HTML tags containing readily updated target data.&lt;/p&gt;

&lt;p&gt;There are many methods of web scraping, though. For instance, a scraping bot can evolve to request data directly from another website’s database. Thus, getting real-time updated content from the provider’s server. This type of request to another database from a data scraper usually requires that the website offering the data provides an application programming interface (API), which uses defined authentication protocols to connect the scraper to its database.&lt;/p&gt;

&lt;p&gt;Web scrapers created using Python, for instance, may use the &lt;strong&gt;request.get&lt;/strong&gt; method to retrieve data from a source or use dedicated web scraping libraries like &lt;strong&gt;BeautifulSoup&lt;/strong&gt; to gather rendered content from a web page. Those built using JavaScript typically depend on &lt;strong&gt;fetch&lt;/strong&gt; or &lt;strong&gt;Axios&lt;/strong&gt; to connect and get data from a source.&lt;/p&gt;

&lt;p&gt;After getting the data, scrapers often dump collected information into a dedicated database, a JSON object, a text file, or an excel file. And because of the inconsistencies in the gathered information, data cleaning often follows scraping.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-scraping-methods"&gt;
  &lt;/a&gt;
  Web Scraping Methods
&lt;/h2&gt;

&lt;p&gt;Whether you use third-party automated tools or code from scratch, web scraping involves any or a combination of these methods:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;DOM or tag parsing&lt;/strong&gt;: DOM parsing involves client-side inspection of a webpage to create an in-depth DOM tree that shows all nodes. Thus, making it easy to retrieve related data from a webpage.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tag grabbing&lt;/strong&gt;: Here, a web scraper targets specific tags on a web page and collects their content. For example, an e-commerce scraper might collect content in all &lt;strong&gt;h2&lt;/strong&gt; tags because they contain product names and reviews.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;HTTP API requests&lt;/strong&gt;: This involves connecting to a data source using an API. It’s helpful when the goal is to retrieve updated content from a database.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Use of semantic or metadata annotation&lt;/strong&gt;: This method leverages the relationship between a group of data called metadata to extract information in a trendy fashion. For instance, you might decide to retrieve information relating to animals and countries from a web page.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Unix text gripping&lt;/strong&gt;: Text gripping uses standard Unix regex to grab matching data from a large log of files or a web page.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#what-is-web-crawling-and-how-does-it-work"&gt;
  &lt;/a&gt;
  What Is Web Crawling and How Does it Work?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--83fVUkny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3800/0%2AEdvxkDWTWp3G8j1m.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--83fVUkny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3800/0%2AEdvxkDWTWp3G8j1m.jpg" alt="What Is Web Crawling and How Does it Work?" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While a crawler or a spider bot might download a website’s content in the process of crawling it, scraping isn’t its ultimate goal. A web crawler typically scans the information on a website to check specific metrics. Ultimately it learns about a website’s structure and what it’s all about.&lt;/p&gt;

&lt;p&gt;A crawler works by collecting Unique Resource Locators (URLs) belonging to many web pages into a crawl frontier. It then uses a site downloader to retrieve content, including the entire DOM structure, to create replicas of browsed web pages. It then stores these into a database, where they can be accessed as a list of relevant results when queried.&lt;/p&gt;

&lt;p&gt;Thus, a web crawler is a programmed software that serially and rapidly surfs the internet for content and organizes them to display relevant ones upon request.&lt;/p&gt;

&lt;p&gt;Some crawlers like Google and Bing bots, for instance, rank content based on many factors. A notable ranking factor is the use of naturally occurring keywords in a website’s content. You can view this as a seller collecting different items from a wholesale store, arranging them in order of importance, and providing the most relevant to buyers on request. Invariably, a crawling bot typically branches into related external links it finds while crawling a website. It then crawls and indexes them as well.&lt;/p&gt;

&lt;p&gt;There are many crawlers out there besides Google and Bing bots, though. And many of them also offer specific services besides indexing.&lt;/p&gt;

&lt;p&gt;Unlike a web scraper, a crawling bot surfs the web continuously. In essence, it’s automatically triggered. It then gathers real-time content from many websites as they get updated on the client side. Moving across a website, they recognize and pick up all crawlable links to assess scripts, HTML tags, and metadata on all its pages, except for those restricted by one means or another. Sometimes, spider bots leverage site maps to achieve the same purpose. Websites with sitemaps are, however, faster to crawl than those without one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#applications-of-web-crawling"&gt;
  &lt;/a&gt;
  Applications of Web Crawling
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JLYmu6bk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3804/0%2A4zOq1GFbBnjpDPSo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JLYmu6bk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3804/0%2A4zOq1GFbBnjpDPSo.jpg" alt="Applications of Web Crawling" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unlike web scraping, web crawling has more applications ranging from Search Engine Optimization (SEO) analytics to search engine indexing, general performance monitoring, and more. And part of its applications may also include scraping a web page.&lt;/p&gt;

&lt;p&gt;While you might manually scrape the web slowly, you can’t crawl it all by yourself, as it requires faster and more accurate bots; this is why they sometimes call crawlers spider bots.&lt;/p&gt;

&lt;p&gt;After creating and launching your website, for instance, Google’s crawling algorithm automatically crawls it within few days to display semantics like meta tags, header tags, and relevant content when people search for it.&lt;/p&gt;

&lt;p&gt;As earlier highlighted, depending on its goal, a spider bot might crawl your website to extract its data, index it in search engines, audit its security, compare it with competitors’ content, or analyze its SEO compliance. But despite its positives, like web scrapers, we can’t sweep the possible malicious use of crawlers under the hood.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-web-crawlers"&gt;
  &lt;/a&gt;
  Types of Web Crawlers
&lt;/h2&gt;

&lt;p&gt;Based on their applications, crawling bots come in various forms. Here is a list of the different types and what they do:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Content-focused web crawlers:&lt;/strong&gt; These types of spider bots collect related content across the web. Ultimately, they work by ranking URLs of related websites based on how relevant their content is to a search term. Because they focus on retrieving more niche-related content, an advantage of content or topical crawling bots is that they use fewer resources.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;In-house crawlers:&lt;/strong&gt; Some organizations build in-house crawlers for specific purposes. These could include spider bots made for checking software vulnerabilities. The onus of managing them is often on the programmers who’re familiar with the architecture of the organization’s software.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Continuous web crawlers:&lt;/strong&gt; Also called an incremental spider bot. A progressive crawler browses websites’ content repeatedly as it gets updated. The crawling may be scheduled or random, depending on specific settings.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Synergetic or distributed crawling bots:&lt;/strong&gt; Distributed bots aim to optimize the tedious crawling activities that may be overwhelming when using a single bot. Invariably, they work together towards the same goal. So they efficiently fragment the crawling workload. Thus, they’re generally faster and more efficient than traditional ones.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Monitoring bots:&lt;/strong&gt; Whether a source authorizes them or not, these crawlers use unique algorithms to spy on competitors’ content and traffic. Even if they don’t impede the functioning of the website they monitor, they might start drawing traffic away from other websites into the bot’s source. While people sometimes use them this way, their positive uses outweigh their downsides. For instance, some organizations use them in-house to discover potential loopholes in their software or improve SEO.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Parallel spider bots:&lt;/strong&gt; Although they’re also distributed, parallel crawlers only surf and download fresh content. Nevertheless, they may ignore a website if it’s not regularly updated or contains old content.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#key-differences-between-web-crawlers-and-web-scrapers"&gt;
  &lt;/a&gt;
  Key Differences Between Web Crawlers and Web Scrapers
&lt;/h2&gt;

&lt;p&gt;To narrow the explanations down, here are the notable differences between scraping and crawling:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Unlike web crawlers, scrapers don’t necessarily need to follow the pattern of downloading data into a database. It may write it into other file types.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Web crawlers are more generic and may include web scraping in their workflow.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Scraping bots target specific web pages and content. So they may not collect data at once from multiple sources.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unlike the static to manually triggered data collecting nature of scrapers, web crawlers regularly gather real-time content.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;While scraping bots only aim to fetch data when prompted, web crawlers follow specific algorithms. So many tech companies use them to get real-time web insights. And it’s also schedulable. One of its use-cases is periodic web traffic and SEO analytics.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Crawling involves serial whole web download and subsequent indexing based on relevance. Web scraping, on the other hand, doesn’t index retrieved content.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unlike crawling bots which are more functionally versatile and expensive to develop, building a scraper is cost-effective and less time-consuming.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#key-similarities-between-web-crawling-and-web-scraping"&gt;
  &lt;/a&gt;
  Key Similarities Between Web Crawling and Web Scraping
&lt;/h2&gt;

&lt;p&gt;While we’ve maintained that crawling and scaping are different in many ways, they still share some similarities:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;They both access data by making HTTP requests.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;They’re both automated processes. So they provide more accuracy during data retrieval.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dedicated tools are available all over the web to either scrape or crawl a website.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;They can both serve malicious purposes when used against a sources’ data protection terms.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Web crawlers and scrapers are subject to outright blockades — either through IP clamp down or other means.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Although the workflow may differ, they both download data from the web.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#can-you-block-crawling-and-scraping-on-your-website"&gt;
  &lt;/a&gt;
  Can You Block Crawling and Scraping on Your Website?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CkFolrNT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3840/0%2ANpKAuvXSbc2Hw0G_.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CkFolrNT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3840/0%2ANpKAuvXSbc2Hw0G_.jpg" alt="Can You Block Crawling and Scraping on Your Website?" width="880" height="474"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Of course, you can go the extra mile and wade off these bots. But while you might want to prevent scraping bots from accessing your content, you need to take care when deciding whether you should block crawlers or not. Unlike scraping bots, spider bots’ crawling influences the growth of your website. Preventing crawling on all of your web pages, for instance, might hurt your discoverability as you might end up obscuring pages with traffic-driving potential.&lt;/p&gt;

&lt;p&gt;Instead of blocking bots outrightly, a best practice is to prevent them from accessing private directories like the admin, registration, and login pages. This ensures that search engines don’t index these pages to bring them up as search results.&lt;/p&gt;

&lt;p&gt;Although we’ve mentioned using robots.txt earlier, there are many other methods that you can use to defend your website against bots invasion:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;You can block bots using the CAPTCHA method.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can also block malicious IP addresses.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Monitor sudden suspicious increase in traffic.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Evaluate your traffic sources.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Clampdown known or specific bots.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Target potential malicious bots.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#can-web-bots-bypass-cors-and-robotstxt"&gt;
  &lt;/a&gt;
  Can Web Bots Bypass CORS and Robots.txt?
&lt;/h2&gt;

&lt;p&gt;The internet, however, follows strict rules when it comes to cross-interaction between software belonging to different origins. So in cases where a resource server doesn’t authorize a bot from another domain, web browsers consequently block its request via a rule called cross-origin resource policy (CORS).&lt;/p&gt;

&lt;p&gt;It’s therefore hard to download data from a resource database directly without using its API or other means like authentication tokens to authorize requests. Additionally, robots.txt, when found on a website, explicitly states rules for crawling certain pages. Thus, it also prevents bots from accessing them.&lt;/p&gt;

&lt;p&gt;But to avert this blockade, some bots mimic real browsers by including a user-agent in their request headers. Ultimately, CORS sees such a bot as a browser and gives it access to the website’s resources. And since robots.txt only prevents bots, such bypass easily fools it and renders its rules impotent.&lt;/p&gt;

&lt;p&gt;So despite several preventive measures, even tech giants still have their data scraped or crawled. So you can only try to put control measures in place, too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Despite the differences, as you can see by now, web crawling and scraping are valuable data collection techniques. So since they have some key differences in their applications, you must explicitly define your goal to know the right tool to use in specific scenarios. Moreover, they’re essential business tools that you don’t want to discard. And as mentioned earlier, whether you intend to scrape a web page or crawl it for some reason, there are many third-party automating tools to achieve your aim. So feel free to leverage them.&lt;/p&gt;

</description>
      <category>webscraper</category>
      <category>scraper</category>
      <category>webcrawling</category>
      <category>crawler</category>
    </item>
    <item>
      <title>Building A Meme Generator using Appsmith</title>
      <author>Curious Paul</author>
      <pubDate>Sun, 31 Oct 2021 17:43:52 +0000</pubDate>
      <link>https://dev.to/curiouspaul1/building-a-meme-generator-using-appsmith-2cg9</link>
      <guid>https://dev.to/curiouspaul1/building-a-meme-generator-using-appsmith-2cg9</guid>
      <description>&lt;p&gt;In this article I will be showing you how to build a simple meme generator platform using appsmith and a third party api called &lt;a href="https://humorapi.com/"&gt;&lt;code&gt;Humor Api&lt;/code&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  &lt;u&gt;Pre-Requisites&lt;/u&gt;
&lt;/h3&gt;

&lt;p&gt;In order to follow along with this tutorial you will need the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Appsmith account: if you don't already have one you can create one via this &lt;a href="https://app.appsmith.com/user/signup"&gt;link&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;h3&gt;
  &lt;a href="#building-the-interface-on-appsmith"&gt;
  &lt;/a&gt;
  Building The Interface on Appsmith
&lt;/h3&gt;

&lt;p&gt;We'll start by building the interface to the meme generator platform  on appsmith, so login to your appsmith dashboard and click on the button to create a new application. &lt;/p&gt;

&lt;p&gt;On the design area, we're going to drag an &lt;code&gt;image widget&lt;/code&gt; to the middle of the screen which will display the meme, we also need a &lt;code&gt;button&lt;/code&gt; widget that will randomize the meme each time its clicked, change the default text on the button to &lt;code&gt;generate meme&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Your design should look something like that shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BuIWuPN_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9dud4c8vfktad1wrmwq8.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BuIWuPN_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9dud4c8vfktad1wrmwq8.PNG" alt="Image description" width="679" height="503"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#integrating-with-humorapi"&gt;
  &lt;/a&gt;
  Integrating With HumorApi
&lt;/h3&gt;

&lt;p&gt;To begin with you need to sign up for a free account on &lt;code&gt;HumorApi&lt;/code&gt; platform and then get your &lt;code&gt;api-key&lt;/code&gt; which will be used to communicate with the &lt;code&gt;Humor APi&lt;/code&gt; server. You can sign up for a free account &lt;a href="https://humorapi.com/console/#Dashboard"&gt;&lt;/a&gt;. Once you're signed up head over to the &lt;code&gt;Profile&lt;/code&gt; section on your dashboard and copy your api-key as shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--skNRW5oy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x6qjsfpjmd1aefd053vz.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--skNRW5oy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x6qjsfpjmd1aefd053vz.PNG" alt="Image description" width="880" height="414"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will now link the interface with the api, in order for us to this we need to create a new data source. Head over to the &lt;code&gt;Datasources&lt;/code&gt; section on the dashboard and then click the option to create a new api, give this api a name, perhaps &lt;code&gt;randomMemes&lt;/code&gt;. It will send a &lt;code&gt;GET&lt;/code&gt; request to the &lt;code&gt;Humor Api&lt;/code&gt; endpoint of &lt;code&gt;https://api.humorapi.com/memes/random?api-key=YOUR-API-KEY&amp;amp;keywords=random&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--89p3XxAF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/weki95t81sdkoefwhs6z.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--89p3XxAF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/weki95t81sdkoefwhs6z.PNG" alt="Image description" width="754" height="163"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This API will be responsible for fetching random memes from the public api. Save this api and head back to the widgets section. Head over to the submit widget and bring up the settings pane, and under the &lt;code&gt;Actions&lt;/code&gt; section choose the option to &lt;code&gt;Execute a query&lt;/code&gt; and then select the &lt;code&gt;randomMemes&lt;/code&gt; api from the list of options showed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TqhJ3Fh7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ifer6wuc3s0h3zjwqkfl.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TqhJ3Fh7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ifer6wuc3s0h3zjwqkfl.PNG" alt="Image description" width="249" height="340"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the image widget bring up the settings pane as well, and in the &lt;code&gt;image&lt;/code&gt; option add the following so that the image loads the url from the response of the  random meme api.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;randomMemes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now click on the &lt;code&gt;generate meme&lt;/code&gt; button and you should now see that the image changes the meme appearing on it, each time you click it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5j4zXgzz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lye7gl7ik8je9c84xx51.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5j4zXgzz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lye7gl7ik8je9c84xx51.PNG" alt="Image description" width="641" height="540"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can choose to deploy this application and share with the public however we want. That's it, you have successfully created a random meme generator in a few easy steps, thanks for staying with me - have fun coding!.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>#1 Anti-Pattern - Mutable Default Arguments</title>
      <author>Dollar Dhingra</author>
      <pubDate>Sun, 31 Oct 2021 17:34:56 +0000</pubDate>
      <link>https://dev.to/dollardhingra/1-anti-pattern-mutable-default-arguments-3bp5</link>
      <guid>https://dev.to/dollardhingra/1-anti-pattern-mutable-default-arguments-3bp5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;If you are not sure what a mutable default argument is, please read the full article as it can save you hours of &lt;br&gt;
debugging.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#code-example-with-a-mutable-default-argument"&gt;
  &lt;/a&gt;
  Code Example With A Mutable Default Argument
&lt;/h2&gt;

&lt;p&gt;Consider the following code example below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_fruit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[]):&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's understand step by step what is happening:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We are creating a function to add fruits(str) in a box(list)&lt;/li&gt;
&lt;li&gt;There is a &lt;code&gt;add_fruit&lt;/code&gt; function which is responsible for adding the &lt;code&gt;fruit&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;This function takes 2 arguments: &lt;code&gt;fruit&lt;/code&gt; and &lt;code&gt;box&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Attention!&lt;/strong&gt; : The second argument here is a mutable default argument.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#so-what-is-mutable-default-argument"&gt;
  &lt;/a&gt;
  So, what is mutable default argument?
&lt;/h2&gt;

&lt;p&gt;An argument in a function with default value as mutable. &lt;/p&gt;

&lt;p&gt;In short, Python has both mutable and immutable types. The difference being: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;mutables can be modified&lt;/li&gt;
&lt;li&gt;immutables can't be modified.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For eg: Tuple is an immutable type. If we define a tuple like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;weekends&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'saturday'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'sunday'&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;

&lt;span class="n"&gt;weekends&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Monday'&lt;/span&gt; &lt;span class="c1"&gt;# TypeError: 'tuple' object does not support item assignment
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;An immutable type can never be modified.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-might-expect"&gt;
  &lt;/a&gt;
  What You Might Expect
&lt;/h2&gt;

&lt;p&gt;let's modify our code and create a couple of boxes, i.e. red box and yellow box&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_fruit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[]):&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;

&lt;span class="n"&gt;red_box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add_fruit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"apple"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"red box: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;red_box&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;yellow_box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add_fruit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"mango"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"yellow box: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;yellow_box&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#expected-output"&gt;
  &lt;/a&gt;
  Expected Output
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;red box: ["apple"]

yellow box: ["mango"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#actually-output"&gt;
  &lt;/a&gt;
  Actually Output
&lt;/h3&gt;

&lt;p&gt;Actually, you get the following output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;red box: ["apple"]

yellow box: ["apple", "mango"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Wait? What? We never added apple in the yellow box. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-exactly-happened"&gt;
  &lt;/a&gt;
  What Exactly Happened
&lt;/h2&gt;

&lt;p&gt;A new list is created once when the function is defined, and the same list is used in each successive call. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Python’s default arguments are evaluated once when the function is defined. This means that if you use a mutable default argument and mutate it, you will and have mutated that object for all future calls to the function as well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We will get the same result for other mutable types also(For eg: dict).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-should-be-done"&gt;
  &lt;/a&gt;
  What Should Be Done
&lt;/h2&gt;

&lt;p&gt;If your function needs to have a default argument for a mutable type, then default it with None and also add a check for same.&lt;br&gt;
Let's modify our &lt;code&gt;add_fruit&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_fruit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

    &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;

&lt;span class="n"&gt;red_box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add_fruit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"apple"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"red box: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;red_box&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;yellow_box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add_fruit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"mango"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"yellow box: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;yellow_box&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This extra check can saves hours of debugging!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;It's always a best practice to not use mutable default arguments. Instead, try adding an extra comparison check with &lt;br&gt;
None to handle default arguments which are mutable.&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>A list of cache providers</title>
      <author>Nicolas Frankel</author>
      <pubDate>Sun, 31 Oct 2021 17:28:27 +0000</pubDate>
      <link>https://dev.to/nfrankel/a-list-of-cache-providers-3o5o</link>
      <guid>https://dev.to/nfrankel/a-list-of-cache-providers-3o5o</guid>
      <description>&lt;p&gt;Last week, we described &lt;a href="https://blog.frankel.ch/choose-cache/1/"&gt;several criteria to look at to choose a cache&lt;/a&gt;.
This week, it’s time to list Java cache providers based on these criteria.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#java-caching-system"&gt;Java Caching System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#guava"&gt;Guava&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#caffeine"&gt;Caffeine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ehcache"&gt;Ehcache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#infinispan"&gt;Infinispan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coherence-community-edition"&gt;Coherence Community Edition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ignite"&gt;Ignite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#geode"&gt;Geode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hazelcast"&gt;Hazelcast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="java-caching-system"&gt;Java Caching System&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;JCS is a distributed caching system written in Java.
It is intended to speed up applications by providing a means to manage cached data of various dynamic natures.
Like any caching system, JCS is most useful for high read, low put applications.
Latency times drop sharply and bottlenecks move away from the database in an effectively cached system.&lt;/p&gt;
-— https://commons.apache.org/proper/commons-jcs/index.html
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
  &lt;th&gt;Name&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://commons.apache.org/proper/commons-jcs/"&gt;Java Caching System&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Provider&lt;/th&gt;
  &lt;td&gt;The Apache Foundation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Source&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/apache/commons-jcs"&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;License&lt;/th&gt;
  &lt;td&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;Apache 2.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Inception date&lt;/th&gt;
  &lt;td&gt;2002&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Last commit&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/apache/commons-jcs/commits/master"&gt;c6b852c&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;GitHub stars&lt;/th&gt;
  &lt;td&gt;76&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Configuration&lt;/th&gt;
  &lt;td&gt;File-based (&lt;code&gt;cache.ccf&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
&lt;pre&gt;jcs.default=
jcs.default.cacheattributes=\
    org.apache.commons.jcs3.engine.CompositeCacheAttributes
jcs.default.cacheattributes.MaxObjects=1000
jcs.default.cacheattributes.MemoryCacheName=\
    org.apache.commons.jcs3.engine.memory.lru.LRUMemoryCache&lt;/pre&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Sample code&lt;/th&gt;
  &lt;td&gt;
&lt;pre&gt;
var cache =
  JCS.&amp;lt;Long, String&amp;gt;getInstance("cache"); // 1
cache.put(1L, "One");                           // 2
var value = cache.get(1L);                      // 3
System.out.println(value);
JCS.shutdown();                                 // 4
&lt;/pre&gt;
&lt;ol&gt;
  &lt;li&gt;Get access to the cache region
  &lt;/li&gt;
&lt;li&gt;Put
  &lt;/li&gt;
&lt;li&gt;Get
  &lt;/li&gt;
&lt;li&gt;Clean up
&lt;/li&gt;
&lt;/ol&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Local/distributed&lt;/th&gt;
  &lt;td&gt;Local and distributed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Non-blocking&lt;/th&gt;
  &lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;JCache&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Spring Cache&lt;/th&gt;
  &lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;TTL&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Eviction strategies&lt;/th&gt;
  &lt;td&gt;LRU&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Miscellaneous&lt;/th&gt;
  &lt;td&gt;
&lt;blockquote&gt;
  &lt;p&gt;The JCS goes beyond simply caching objects in memory. It provides numerous additional features:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Memory management
    &lt;/li&gt;
&lt;li&gt;Disk overflow (and defragmentation)
    &lt;/li&gt;
&lt;li&gt;Thread pool controls
    &lt;/li&gt;
&lt;li&gt;Element grouping
    &lt;/li&gt;
&lt;li&gt;Minimal dependencies
    &lt;/li&gt;
&lt;li&gt;Quick nested categorical removal
    &lt;/li&gt;
&lt;li&gt;Data expiration (idle time and max life)
    &lt;/li&gt;
&lt;li&gt;Extensible framework
    &lt;/li&gt;
&lt;li&gt;Fully configurable runtime parameters
    &lt;/li&gt;
&lt;li&gt;Region data separation and configuration
    &lt;/li&gt;
&lt;li&gt;Fine grained element configuration options
    &lt;/li&gt;
&lt;li&gt;Remote synchronization
    &lt;/li&gt;
&lt;li&gt;Remote store recovery
    &lt;/li&gt;
&lt;li&gt;Non-blocking "zombie" (balking facade) pattern
    &lt;/li&gt;
&lt;li&gt;Lateral distribution of elements via HTTP, TCP, or UDP
    &lt;/li&gt;
&lt;li&gt;UDP Discovery of other caches
    &lt;/li&gt;
&lt;li&gt;Element event handling
    &lt;/li&gt;
&lt;li&gt;Remote server chaining (or clustering) and failover
    &lt;/li&gt;
&lt;li&gt;Custom event logging hooks
    &lt;/li&gt;
&lt;li&gt;Custom event queue injection
    &lt;/li&gt;
&lt;li&gt;Custom object serializer injection
    &lt;/li&gt;
&lt;li&gt;Key pattern matching retrieval
    &lt;/li&gt;
&lt;li&gt;Network efficient multi-key retrieval&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="guava"&gt;Guava&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Guava is a set of core Java libraries from Google that includes new collection types (such as multimap and multiset), immutable collections, a graph library, and utilities for concurrency, I/O, hashing, &lt;strong&gt;caching&lt;/strong&gt;, primitives, strings, and more!
  It is widely used on most Java projects within Google, and widely used by many other companies as well.&lt;/p&gt;
  — https://github.com/google/guava
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
  &lt;th&gt;Name&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/google/guava/wiki/CachesExplained"&gt;Guava&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Provider&lt;/th&gt;
  &lt;td&gt;Google&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Source&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/google/guava"&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;License&lt;/th&gt;
  &lt;td&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;Apache 2.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Inception date&lt;/th&gt;
  &lt;td&gt;2010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Last commit&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/google/guava/commits/master"&gt;ba690ba&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;GitHub stars&lt;/th&gt;
  &lt;td&gt;42.6k&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Configuration&lt;/th&gt;
  &lt;td&gt;Programmatic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
&lt;pre&gt;var cache = CacheBuilder.newBuilder()
                        .maximumSize(1000)
                        .build()&lt;/pre&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Sample code&lt;/th&gt;
  &lt;td&gt;
&lt;pre&gt;
cache.put(1L, "One");               // 1             
var value = cache.getIfPresent(1L); // 2
System.out.println(value);
cache.cleanUp();                    // 3
&lt;/pre&gt;
    &lt;ol&gt;
      &lt;li&gt;Put
      &lt;/li&gt;
&lt;li&gt;Get
      &lt;/li&gt;
&lt;li&gt;Clean up
  &lt;/li&gt;
&lt;/ol&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Local/distributed&lt;/th&gt;
  &lt;td&gt;Local&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Non-blocking&lt;/th&gt;
  &lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;JCache&lt;/th&gt;
  &lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Spring Cache&lt;/th&gt;
  &lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;TTL&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Eviction strategies&lt;/th&gt;
  &lt;td&gt;
    &lt;ul&gt;
    &lt;li&gt;
FIFO
    &lt;/li&gt;
&lt;li&gt;Weight-based eviction:
One can assign a weight to each entry, according to a custom algorithm, and set the cache a weight limit.
Then, if a new entry would exceed the maximum weight, the "heaviest" entries are removed until the sum of the weights is below the set threshold.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="6"&gt;Miscellaneous&lt;/th&gt;
  &lt;td&gt;Guava is a single JAR that provides cache among many other capabilities&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;A &lt;a href="https://github.com/ocafebabe/guava-jcache"&gt;third-party project&lt;/a&gt; provides a JCache adapter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;The &lt;code&gt;get&lt;/code&gt; method accepts a &lt;code&gt;Callable&lt;/code&gt; parameter that allows to get a value from the cache &lt;strong&gt;or&lt;/strong&gt; compute it and store it if it’s not found&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;The &lt;a href="https://github.com/google/guava/wiki/CachesExplained#reference-based-eviction"&gt;API&lt;/a&gt; uses soft and weak references in keys and values&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;Allows you to attach &lt;a href="https://github.com/google/guava/wiki/CachesExplained#removal-listeners"&gt;event handlers&lt;/a&gt; when entries are evicted&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="caffeine"&gt;Caffeine&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Caffeine is a &lt;a href="https://github.com/ben-manes/caffeine/wiki/Benchmarks"&gt;high performance&lt;/a&gt;, &lt;a href="https://github.com/ben-manes/caffeine/wiki/Efficiency"&gt;near optimal&lt;/a&gt; caching library.
For more details, see our &lt;a href="https://github.com/ben-manes/caffeine/wiki"&gt;user’s guide&lt;/a&gt; and browse the &lt;a href="http://www.javadoc.io/doc/com.github.ben-manes.caffeine/caffeine"&gt;API docs&lt;/a&gt; for the latest release.&lt;/p&gt;
— https://github.com/ben-manes/caffeine
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
  &lt;th&gt;Name&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/ben-manes/caffeine/wiki"&gt;Caffeine&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Provider&lt;/th&gt;
  &lt;td&gt;Ben Manes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Source&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/ben-manes/caffeine"&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;License&lt;/th&gt;
  &lt;td&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;Apache 2.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Inception date&lt;/th&gt;
  &lt;td&gt;2014&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Last commit&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/ben-manes/caffeine/commits/master"&gt;41abb08&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;GitHub stars&lt;/th&gt;
  &lt;td&gt;10.6k&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Configuration&lt;/th&gt;
  &lt;td&gt;Programmatic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
&lt;pre&gt;var cache = Caffeine.newBuilder()
                    .maximumSize(1000)
                    .build()&lt;/pre&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Sample code&lt;/th&gt;
  &lt;td&gt;
&lt;pre&gt;
cache.put(1L, "One");                 // 1
var value = cache.getIfPresent(1L);   // 2
System.out.println(value);
cache.cleanUp();                      // 3
&lt;/pre&gt;
  &lt;ol&gt;
    &lt;li&gt;Put
    &lt;/li&gt;
&lt;li&gt;Get
    &lt;/li&gt;
&lt;li&gt;Clean up
  &lt;/li&gt;
&lt;/ol&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Local/distributed&lt;/th&gt;
  &lt;td&gt;Local&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Non-blocking&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
&lt;pre&gt;var cache = Caffeine.newBuilder()
                    .maximumSize(1000)
                    .&amp;lt;Long, String&amp;gt;buildAsync();        // 1

CompletableFuture future =
    cache.get(1L, k -&amp;gt; expensiveLookup(1L));&lt;/pre&gt;
    &lt;ol&gt;
      &lt;li&gt;Build an asynchronous cache&lt;/li&gt;
    &lt;ol&gt;
  &lt;/ol&gt;
&lt;/ol&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;JCache&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Spring Cache&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;TTL&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Eviction strategies&lt;/th&gt;
  &lt;td&gt;
    &lt;ul&gt;
      &lt;li&gt;
FIFO
      &lt;/li&gt;
&lt;li&gt;Weight-based eviction:
One can assign a weight to each entry, according to a custom algorithm, and set the cache a weight limit.
Then, if a new entry would exceed the maximum weight, the "heaviest" entries are removed until the sum of the weights is below the set threshold.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Miscellaneous&lt;/th&gt;
  &lt;td&gt;Caffeine is rewrite of Guava, inspired by its API, but with non-blocking principles at its core.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
    &lt;blockquote&gt;
      &lt;ul&gt;
        &lt;li&gt;
&lt;a href="https://github.com/ben-manes/caffeine/wiki/Population"&gt;Automatic loading of entries&lt;/a&gt; into the cache, optionally asynchronously
        &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ben-manes/caffeine/wiki/Eviction#size-based"&gt;Size-based eviction&lt;/a&gt; when a maximum is exceeded based on &lt;a href="https://github.com/ben-manes/caffeine/wiki/Efficiency"&gt;frequency and recency&lt;/a&gt;
        &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ben-manes/caffeine/wiki/Eviction#time-based"&gt;Time-based expiration&lt;/a&gt; of entries, measured since last access or last write
        &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ben-manes/caffeine/wiki/Refresh"&gt;Asynchronously refresh&lt;/a&gt; when the first stale request for an entry occurs
        &lt;/li&gt;
&lt;li&gt;Keys automatically wrapped in &lt;a href="https://github.com/ben-manes/caffeine/wiki/Eviction#reference-based"&gt;weak references&lt;/a&gt;
        &lt;/li&gt;
&lt;li&gt;Values automatically wrapped in &lt;a href="https://github.com/ben-manes/caffeine/wiki/Eviction#reference-based"&gt;weak or soft references&lt;/a&gt;
        &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ben-manes/caffeine/wiki/Removal"&gt;Notification&lt;/a&gt; of evicted (or otherwise removed) entries
        &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ben-manes/caffeine/wiki/Compute"&gt;Writes propagated&lt;/a&gt; to an external resource
        &lt;/li&gt;
&lt;li&gt;Accumulation of cache access &lt;a href="https://github.com/ben-manes/caffeine/wiki/Statistics"&gt;statistics&lt;/a&gt;
&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/blockquote&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="ehcache"&gt;Ehcache&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Ehcache is an open source, standards-based cache that boosts performance, offloads your database, and simplifies scalability.
It’s the most widely-used Java-based cache because it’s robust, proven, full-featured, and integrates with other popular libraries and frameworks.
Ehcache scales from in-process caching, all the way to mixed in-process/out-of-process deployments with terabyte-sized caches.&lt;/p&gt;
-— https://www.ehcache.org/
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
  &lt;th&gt;Name&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://www.ehcache.org/"&gt;Ehcache&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Provider&lt;/th&gt;
  &lt;td&gt;Software AG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Source&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/ehcache/ehcache3"&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;License&lt;/th&gt;
  &lt;td&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;Apache 2.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Inception date&lt;/th&gt;
  &lt;td&gt;2009&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Last commit&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/ehcache/ehcache3"&gt;212c63c&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;GitHub stars&lt;/th&gt;
  &lt;td&gt;1.7k&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Configuration&lt;/th&gt;
  &lt;td&gt;Programmatic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
&lt;pre&gt;var cacheManager = CacheManagerBuilder
    .newCacheManagerBuilder()
    .withCache(
        "cache",
        CacheConfigurationBuilder.newCacheConfigurationBuilder(
            Long.class,
            String.class,
            ResourcePoolsBuilder.heap(10)
        )
    ).build();
cacheManager.init();
var cache = cacheManager.getCache(
    "cache", Long.class, String.class
);&lt;/pre&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Sample code&lt;/th&gt;
  &lt;td&gt;
&lt;pre&gt;cache.put(key, value);         // 1 
var value = cache.get(key);         // 2
cacheManager.close();               // 3&lt;/pre&gt;
  &lt;ol&gt;
    &lt;li&gt;Put
    &lt;/li&gt;
&lt;li&gt;Get
    &lt;/li&gt;
&lt;li&gt;Clean up
  &lt;/li&gt;
&lt;/ol&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Local/distributed&lt;/th&gt;
  &lt;td&gt;Local&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Non-blocking&lt;/th&gt;
  &lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;JCache&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Spring Cache&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;TTL&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Eviction strategies&lt;/th&gt;
  &lt;td&gt;
&lt;ul&gt;
&lt;li&gt;
LRU
    &lt;/li&gt;
&lt;li&gt;
LFU
    &lt;/li&gt;
&lt;li&gt;
FIFO
    &lt;/li&gt;
&lt;li&gt;Pluggable policy:
EhCache provides an API to write your own eviction policy&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Miscellaneous&lt;/th&gt;
  &lt;td&gt;Ehcache 3.x is a complete rewrite from Ehache 2.x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;Terracota is the Enterprise version of Ehcache.
It provides distributed capabilities.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;



&lt;h2 id="infinispan"&gt;Infinispan&lt;/h2&gt;

&lt;blockquote&gt;

&lt;p&gt;Infinispan is an open-source in-memory data grid that offers flexible deployment options and robust capabilities for storing, managing, and processing data.
Infinispan provides a key/value data store that can hold all types of data, from Java objects to plain text.
Infinispan distributes your data across elastically scalable clusters to guarantee high availability and fault tolerance, whether you use Infinispan as a volatile cache or a persistent data store.&lt;/p&gt;

— https://infinispan.org/
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
  &lt;th&gt;Name&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://infinispan.org/"&gt;Infinispan&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Provider&lt;/th&gt;
  &lt;td&gt;RedHat&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Source&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/infinispan/infinispan"&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;License&lt;/th&gt;
  &lt;td&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;Apache 2.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Inception date&lt;/th&gt;
  &lt;td&gt;2009&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Last commit&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/infinispan/infinispan"&gt;3dd18ce&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;GitHub stars&lt;/th&gt;
  &lt;td&gt;910&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Configuration&lt;/th&gt;
  &lt;td&gt;Programmatic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
&lt;pre&gt;var cacheManager = new DefaultCacheManager();
cacheManager.defineConfiguration("cache",
    new ConfigurationBuilder().memory().maxSize("1000").build()
);
var cache = cacheManager.&amp;lt;Long, String&amp;gt;getCache("cache");&lt;/pre&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Sample code&lt;/th&gt;
  &lt;td&gt;
&lt;pre&gt;
cache.put(1L, "One");               // 1
var value = cache.get(1L);          // 2
System.out.println(value);
cacheManager.close();               // 3
&lt;/pre&gt;
  &lt;ol&gt;
    &lt;li&gt;Put
    &lt;/li&gt;
&lt;li&gt;Get
    &lt;/li&gt;
&lt;li&gt;Clean up
  &lt;/li&gt;
&lt;/ol&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Local/distributed&lt;/th&gt;
  &lt;td&gt;Local and distributed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Non-blocking&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
&lt;pre&gt;CompletableFuture&amp;lt;String&amp;gt; future =
    cache.getAsync(1L, k -&amp;gt; expensiveLookup(1L));&lt;/pre&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;JCache&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Spring Cache&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;TTL&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Eviction strategies&lt;/th&gt;
  &lt;td&gt;
&lt;p&gt;LFU&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Miscellaneous&lt;/th&gt;
  &lt;td&gt;Infinispan is the successor of JBoss Cache&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
    &lt;blockquote&gt;
      &lt;ul&gt;
        &lt;li&gt;Interoperability: access data across multiple protocols and programming languages
        &lt;/li&gt;
&lt;li&gt;Resilient and Fault Tolerant Data: ensure data is always available to meet demanding workloads
        &lt;/li&gt;
&lt;li&gt;ACID Transactions: guarantee that data is always valid and consistent
        &lt;/li&gt;
&lt;li&gt;Clustered Processing: process data in real-time without burdening resources
        &lt;/li&gt;
&lt;li&gt;Queries: perform simple, accurate, and fast searches across distributed data sets&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/blockquote&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="coherence-community-edition"&gt;Coherence Community Edition&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Coherence is scalable, fault-tolerant, cloud-ready, distributed platform for building grid-based applications and reliably storing data.
The product is used at scale, for both compute and raw storage, in a vast array of industries such as critical financial trading systems, high performance telecommunication products, and eCommerce applications.&lt;/p&gt;

—- https://coherence.community/latest/21.06/docs/
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
  &lt;th&gt;Name&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://coherence.community/"&gt;Coherence&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Provider&lt;/th&gt;
  &lt;td&gt;Oracle&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Source&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/oracle/coherence"&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;License&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://oss.oracle.com/licenses/upl/"&gt;Universal Permissive License&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Inception date&lt;/th&gt;
  &lt;td&gt;2001&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Last commit&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/oracle/coherence/commits/master"&gt;5f0b968&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;GitHub stars&lt;/th&gt;
  &lt;td&gt;340&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Configuration&lt;/th&gt;
  &lt;td&gt;File-based&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
&lt;pre&gt;
&amp;lt;?xml version="1.0"?&amp;gt;
&amp;lt;cache-config&amp;gt;
    &amp;lt;caching-scheme-mapping&amp;gt;
        &amp;lt;cache-mapping&amp;gt;
            &amp;lt;cache-name&amp;gt;cache&amp;lt;/cache-name&amp;gt;
            &amp;lt;scheme-name&amp;gt;local&amp;lt;/scheme-name&amp;gt;
        &amp;lt;/cache-mapping&amp;gt;
    &amp;lt;/caching-scheme-mapping&amp;gt;
    &amp;lt;caching-schemes&amp;gt;
        &amp;lt;local-scheme&amp;gt;
            &amp;lt;scheme-name&amp;gt;local&amp;lt;/scheme-name&amp;gt;
            &amp;lt;high-units&amp;gt;1000&amp;lt;/high-units&amp;gt;
        &amp;lt;/local-scheme&amp;gt;
    &amp;lt;/caching-schemes&amp;gt;
&amp;lt;/cache-config&amp;gt;
&lt;/pre&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Sample code&lt;/th&gt;
  &lt;td&gt;
&lt;pre&gt;
var cache = CacheFactory.&amp;lt;Long, String&amp;gt;getCache("cache"); // 1
cache.put(1L, "One");        // 2
var value = cache.get(1L);   // 3
System.out.println(value);
cache.close();               // 4
&lt;/pre&gt;
    &lt;ol&gt;
      &lt;li&gt;Get a reference to the cache
      &lt;/li&gt;
&lt;li&gt;Put
      &lt;/li&gt;
&lt;li&gt;Get
      &lt;/li&gt;
&lt;li&gt;Clean up
  &lt;/li&gt;
&lt;/ol&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Local/distributed&lt;/th&gt;
  &lt;td&gt;Local and distributed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Non-blocking&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
&lt;pre&gt;var cache = CacheFactory
                .&amp;lt;Long, String&amp;gt;getCache("cache")
                .async();
CompletableFuture future = cache.get(1L);&lt;/pre&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;JCache&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Spring Cache&lt;/th&gt;
  &lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;TTL&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Eviction strategies&lt;/th&gt;
  &lt;td&gt;
    &lt;ul&gt;
      &lt;li&gt;
MFU and MRU scaled on a logarithmic curve
      &lt;/li&gt;
&lt;li&gt;
LRU
      &lt;/li&gt;
&lt;li&gt;
LFU
      &lt;/li&gt;
&lt;li&gt;Pluggable policy: EhCache provides an API to write your own eviction policy&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="3"&gt;Miscellaneous&lt;/th&gt;
  &lt;td&gt;Oracle bought Coherence from Tangsol in 2007&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
    &lt;p&gt;Commercial versions are available:&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Standard
      &lt;/li&gt;
&lt;li&gt;Enterprise
      &lt;/li&gt;
&lt;li&gt;Grid
    &lt;/li&gt;
&lt;/ul&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
    &lt;ul&gt;
      &lt;li&gt;Clustering and Data Sharding
      &lt;/li&gt;
&lt;li&gt;Scalability and High Avalability
      &lt;/li&gt;
&lt;li&gt;Disk-Based Persistence
      &lt;/li&gt;
&lt;li&gt;Key-Value Data Store
      &lt;/li&gt;
&lt;li&gt;Parallel Queries
      &lt;/li&gt;
&lt;li&gt;Efficient Aggregation
      &lt;/li&gt;
&lt;li&gt;In-Place Processing
      &lt;/li&gt;
&lt;li&gt;Sophisticated Event Model&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="ignite"&gt;Ignite&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Distributed Database For High-Performance Computing With In-Memory Speed&lt;/p&gt;

-- https://ignite.apache.org/
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
  &lt;th&gt;Name&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://ignite.apache.org/"&gt;Ignite&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Provider&lt;/th&gt;
  &lt;td&gt;GridGain&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Source&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/apache/ignite"&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;License&lt;/th&gt;
  &lt;td&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;Apache 2.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Inception date&lt;/th&gt;
  &lt;td&gt;?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Open-Sourced&lt;/th&gt;
  &lt;td&gt;2014&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Last commit&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/apache/ignite/commits/master"&gt;73a687d&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;GitHub stars&lt;/th&gt;
  &lt;td&gt;4k&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Configuration&lt;/th&gt;
  &lt;td&gt;Programmatic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
&lt;pre&gt;var cacheCfg = new CacheConfiguration&amp;lt;Long, String&amp;gt;();
cacheCfg.setOnheapCacheEnabled(true);
cacheCfg.setEvictionPolicyFactory(
    () -&amp;gt; new LruEvictionPolicy&amp;lt;&amp;gt;(1000)
);
cacheCfg.setName("cache");
var cfg = new IgniteConfiguration();
cfg.setCacheConfiguration(cacheCfg);
ignite = Ignition.start(cfg);
var cache = ignite.getOrCreateCache("cache");&lt;/pre&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Code sample&lt;/th&gt;
  &lt;td&gt;
&lt;pre&gt;
cache.put(1L, "One");             // 1
var value = cache.get(1L);        // 2
System.out.println(value);
ignite.close();                   // 3
&lt;/pre&gt;
    &lt;ol&gt;
      &lt;li&gt;Put
      &lt;/li&gt;
&lt;li&gt;Get
      &lt;/li&gt;
&lt;li&gt;Clean up
  &lt;/li&gt;
&lt;/ol&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Non-blocking&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
&lt;pre&gt;
IgniteFuture&amp;lt;String&amp;gt; future = cache.getAsync(1L); // 1&lt;/pre&gt;
    &lt;ol&gt;&lt;li&gt;Ignite provides its own asynchronous primitives, which are different from the JDK’s&lt;/li&gt;&lt;/ol&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;JCache&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Spring Cache&lt;/th&gt;
  &lt;td&gt;✅ (provided by Ignite)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;TTL&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Eviction strategies&lt;/th&gt;
  &lt;td&gt;
    &lt;ul&gt;
      &lt;li&gt;
LRU
      &lt;/li&gt;
&lt;li&gt;
FIFO
      &lt;/li&gt;
&lt;li&gt;Sorted:
      Entries are removed in order, so that they need to implement &lt;code&gt;Comparable&lt;/code&gt; or you need to configure you own &lt;code&gt;Comparator&lt;/code&gt; implementation&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Miscellaneous&lt;/th&gt;
  &lt;td&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Core features:&lt;/p&gt;
      &lt;ul&gt;
          &lt;li&gt;Distributed SQL
          &lt;/li&gt;
&lt;li&gt;Multi-tier Storage
          &lt;/li&gt;
&lt;li&gt;Co-located Compute
          &lt;/li&gt;
&lt;li&gt;ACID Transactions
          &lt;/li&gt;
&lt;li&gt;Machine Learning
          &lt;/li&gt;
&lt;li&gt;Continuous Queries&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/blockquote&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;GridGrain offers an enterprise version of Ignite named GridGain In-Memory Computing Platform&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="geode"&gt;Geode&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Apache Geode is a data management platform that provides real-time, consistent access to data-intensive applications throughout widely distributed cloud architectures.&lt;/p&gt;
&lt;p&gt;Apache Geode pools memory, CPU, network resources, and optionally local disk across multiple processes to manage application objects and behavior.
It uses dynamic replication and data partitioning techniques to implement high availability, improved performance, scalability, and fault tolerance.
In addition to being a distributed data container, Apache Geode is an in-memory data management system that provides reliable asynchronous event notifications and guaranteed message delivery.&lt;/p&gt;

-- https://github.com/apache/geode
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
  &lt;th&gt;Name&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://geode.apache.org/"&gt;Geode&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Provider&lt;/th&gt;
  &lt;td&gt;Pivotal&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Source&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/apache/geode"&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;License&lt;/th&gt;
  &lt;td&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;Apache 2.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Inception date&lt;/th&gt;
  &lt;td&gt;2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Open-Sourced&lt;/th&gt;
  &lt;td&gt;2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Last commit&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/apache/geode/commits/develop"&gt;a21df0b&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;GitHub stars&lt;/th&gt;
  &lt;td&gt;2k&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Configuration&lt;/th&gt;
  &lt;td&gt;File-based and programmatic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
&lt;pre&gt;var cache = new CacheFactory().create();
var factory = cache.&amp;lt;Long, String&amp;gt;createRegionFactory();
factory.setEvictionAttributes(
    EvictionAttributes.createLRUEntryAttributes(1000)
);
var region = factory.create("cache");&lt;/pre&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Code sample&lt;/th&gt;
  &lt;td&gt;
&lt;pre&gt;
region.put(1L, "One");         // 1 
var value = region.get(1L);    // 2
System.out.println(value);
cache.close();                 // 3
&lt;/pre&gt;
    &lt;ol&gt;
      &lt;li&gt;Put
      &lt;/li&gt;
&lt;li&gt;Get
      &lt;/li&gt;
&lt;li&gt;Clean up
  &lt;/li&gt;
&lt;/ol&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Non-blocking&lt;/th&gt;
  &lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;JCache&lt;/th&gt;
  &lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Spring Cache&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;TTL&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Eviction strategies&lt;/th&gt;
  &lt;td&gt;
&lt;p&gt;LRU&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Miscellaneous&lt;/th&gt;
  &lt;td&gt;GemStone is the company that initially developed Geode. In 2010, SpringSource acquired GemStone.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
    &lt;blockquote&gt;
      &lt;p&gt;[...] &lt;a href="https://geode.apache.org/docs/guide/114/getting_started/product_intro.html"&gt;main features and key functionality&lt;/a&gt;:&lt;/p&gt;
      &lt;ul&gt;
        &lt;li&gt;High Read-and-Write Throughput
        &lt;/li&gt;
&lt;li&gt;Low and Predictable Latency
        &lt;/li&gt;
&lt;li&gt;High Scalability
        &lt;/li&gt;
&lt;li&gt;Continuous Availability
        &lt;/li&gt;
&lt;li&gt;Reliable Event Notifications
        &lt;/li&gt;
&lt;li&gt;Parallelized Application Behavior on Data Stores
        &lt;/li&gt;
&lt;li&gt;Shared-Nothing Disk Persistence
        &lt;/li&gt;
&lt;li&gt;Reduced Cost of Ownership
        &lt;/li&gt;
&lt;li&gt;Single-Hop Capability for Client/Server
        &lt;/li&gt;
&lt;li&gt;Client/Server Security
        &lt;/li&gt;
&lt;li&gt;Multisite Data Distribution
        &lt;/li&gt;
&lt;li&gt;Continuous Querying
        &lt;/li&gt;
&lt;li&gt;Heterogeneous Data Sharing&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/blockquote&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="hazelcast"&gt;Hazelcast&lt;/h2&gt;

&lt;p&gt;I work for Hazelcast at the time of this writing.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hazelcast is a streaming and memory-first application platform for fast, stateful, data-intensive workloads on-premises, at the edge or as a fully managed cloud service.&lt;/p&gt;
—- https://hazelcast.com/
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
  &lt;th&gt;Name&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://hazelcast.com/"&gt;Hazelcast&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Provider&lt;/th&gt;
  &lt;td&gt;Hazelcast&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Source&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/hazelcast/hazelcast"&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;License&lt;/th&gt;
  &lt;td&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;Apache 2.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Inception date&lt;/th&gt;
  &lt;td&gt;2008&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Last commit&lt;/th&gt;
  &lt;td&gt;&lt;a href="https://github.com/hazelcast/hazelcast/commits/master"&gt;de91d6b&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;GitHub stars&lt;/th&gt;
  &lt;td&gt;4.6k&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Configuration&lt;/th&gt;
  &lt;td&gt;File-based and programmatic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
&lt;pre&gt;var hazelcast = Hazelcast.newHazelcastInstance();
hazelcast.getConfig()
         .getMapConfig("cache")
         .getEvictionConfig()
         .setSize(1000);
var map = hazelcast.getMap("cache");&lt;/pre&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Code sample&lt;/th&gt;
  &lt;td&gt;
&lt;pre&gt;
map.put(1L, "One");               // 1 
var value = map.get(1L);          // 2
System.out.println(value);
hazelcast.shutdown();             // 3
&lt;/pre&gt;
    &lt;ol&gt;
      &lt;li&gt;Put
      &lt;/li&gt;
&lt;li&gt;Get
      &lt;/li&gt;
&lt;li&gt;Clean up
  &lt;/li&gt;
&lt;/ol&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Non-blocking&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
&lt;pre&gt;CompletionStage&amp;lt;String&amp;gt; stage = cache.getAsync(1L);&lt;/pre&gt;  
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;JCache&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Spring Cache&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;TTL&lt;/th&gt;
  &lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Eviction strategies&lt;/th&gt;
  &lt;td&gt;
    &lt;ul&gt;
      &lt;li&gt;
LRU
      &lt;/li&gt;
&lt;li&gt;
LFU
      &lt;/li&gt;
&lt;li&gt;Pluggable policy:
Hazelcast provides an API to write your own eviction policy&lt;/li&gt;
&lt;/ul&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th rowspan="2"&gt;Miscellaneous&lt;/th&gt;
  &lt;td&gt;Hazelcast provides an Enterprise edition with additional features&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
    &lt;blockquote&gt;
      &lt;ul&gt;
        &lt;li&gt;Distributed computation, data structures, and events
        &lt;/li&gt;
&lt;li&gt;Streaming data processing
        &lt;/li&gt;
&lt;li&gt;Connectors to read from/write to systems like Apache Kafka, JMS, JDBC and HDMS
        &lt;/li&gt;
&lt;li&gt;Querying with SQL and predicates
        &lt;/li&gt;
&lt;li&gt;CP subsystem for distributed coordination use cases
        &lt;/li&gt;
&lt;li&gt;JCache implementation
        &lt;/li&gt;
&lt;li&gt;Replication of web sessions (filter, Tomcat, Jetty based)
        &lt;/li&gt;
&lt;li&gt;Administration and monitoring utilities including Management Center, JMX, metrics and diagnostics&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/blockquote&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;The following Maven project shows a simple key get-put for each cache.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ajavageek"&gt;
        ajavageek
      &lt;/a&gt; / &lt;a href="https://github.com/ajavageek/cacheproviders"&gt;
        cacheproviders
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;I tried my best to provide accurate objective information.
Please let me know in the comments if something is wrong.&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;To go further:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://blog.frankel.ch/choose-cache/1/"&gt;How to choose a cache&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://medium.com/outbrain-engineering/oh-my-guava-we-are-moving-to-caffeine-99387819fdbb"&gt;Oh my Guava! We are moving to Caffeine&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://db-engines.com/en/system/Ehcache%3BGeode%3BHazelcast%3BIgnite%3BOracle+Coherence"&gt;System Properties Comparison&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://blog.frankel.ch/choose-cache/2/"&gt;A Java Geek&lt;/a&gt; on October 31&lt;sup&gt;st&lt;/sup&gt;, 2021&lt;/em&gt;       &lt;/p&gt;

</description>
      <category>java</category>
      <category>cache</category>
      <category>performance</category>
    </item>
    <item>
      <title>Jetstream user banner photo upload</title>
      <author>HAMZA EL MAGHARI</author>
      <pubDate>Sun, 31 Oct 2021 17:24:58 +0000</pubDate>
      <link>https://dev.to/hamza_elmaghari/jetstream-user-banner-photo-upload-268m</link>
      <guid>https://dev.to/hamza_elmaghari/jetstream-user-banner-photo-upload-268m</guid>
      <description>&lt;p&gt;Hi, devs!&lt;br&gt;
Does anyone of you understand the proccess of uploading photos for users.&lt;br&gt;
I mean Jetstream already provide devs with the ability to uncomment fortify file user profile photo feature line;&lt;br&gt;
But what if I want to let users upload their own profile banner photo. The proccess can't be understandable.&lt;br&gt;
ANy help devs?!&lt;/p&gt;

</description>
      <category>jetstream</category>
      <category>laravel</category>
      <category>photo</category>
      <category>fortify</category>
    </item>
    <item>
      <title>Selenium 4 Looks Pretty</title>
      <author>Lucas Andrade</author>
      <pubDate>Sun, 31 Oct 2021 17:22:05 +0000</pubDate>
      <link>https://dev.to/lucashdoa/selenium-4-looks-pretty-1a83</link>
      <guid>https://dev.to/lucashdoa/selenium-4-looks-pretty-1a83</guid>
      <description>&lt;p&gt;Hello there! 👋&lt;/p&gt;

&lt;p&gt;I'm Lucas, a Brazilian QA engineer, and this is Another QA Content nobody asked for (but i made it anyway 😂). My goal with this blog is to talk about things related to the QA world in my own way, giving my opinion and point of view. If you like it, follow me for more posts like this one!&lt;/p&gt;

&lt;p&gt;Selenium 4 is finally officially released! And I've been playing with some of the new features. In this post, I'll show you in practice some cool new things you can do with Selenium now.&lt;/p&gt;

&lt;p&gt;I won't be focusing on good practices, like using hooks or not setting long explicit waits. The main goal here is to test out some new stuff. I'll show code snippets to summarize, but you can find a link to the Github repo at the end of this post if you want to check out the full code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L_LAAAke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3j43il2mpmogoxsa9t8e.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L_LAAAke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3j43il2mpmogoxsa9t8e.gif" alt="lets get to work" width="480" height="400"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#relative-locators-are-here"&gt;
  &lt;/a&gt;
  😃 Relative Locators are here
&lt;/h2&gt;

&lt;p&gt;Remember &lt;a href="https://dev.to/lucashdoa/interacting-with-a-web-page-without-inspecting-it-using-taiko-2597"&gt;Taiko's Proximity Selectors&lt;/a&gt;? Selenium now has its own similar feature called Relative Locators. It works similarly, you can find web elements that are &lt;em&gt;above&lt;/em&gt;, &lt;em&gt;below&lt;/em&gt;, &lt;em&gt;toRightOf&lt;/em&gt;, &lt;em&gt;toLeftOF&lt;/em&gt; or even &lt;em&gt;near&lt;/em&gt; a fixed reference element.&lt;/p&gt;

&lt;p&gt;And it's simple to use. All you have to do is import the &lt;em&gt;with&lt;/em&gt; class. Use &lt;em&gt;with&lt;/em&gt; to encapsulate the &lt;em&gt;By&lt;/em&gt; object and then, you'll be able to chain a relative selector.&lt;/p&gt;

&lt;p&gt;For this example, we'll be using &lt;a href="https://blazedemo.com/"&gt;BlazeDemo&lt;/a&gt; (a sample travel agency website). Let's try to perform a simple click at the button "Find Flights" without creating a specific &lt;em&gt;selector/xpath&lt;/em&gt; for it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0qKbCopJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xo4j0zzojk21qaafxwbf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0qKbCopJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xo4j0zzojk21qaafxwbf.png" alt="button we want to interact" width="880" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To achieve our goal, let's use the destination city &lt;em&gt;select&lt;/em&gt; as reference. Inspecting it, we can see that one option to retrieve it is by its "name" &lt;em&gt;attribute&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Let's implement a simple test then. We'll select "Dublin" as the destination city and then assert that the available flights page title is displayed correctly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
* File: AppTest.java
*/&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AppTest&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="nd"&gt;@Test&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;relativeSelector&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="c1"&gt;// 1. Configuration steps;&lt;/span&gt;
        &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;expectedTitle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Flights from Paris to Dublin:"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setProperty&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"webdriver.chrome.driver"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"c:/chromedriver.exe"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;WebDriver&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ChromeDriver&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;window&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;maximize&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://blazedemo.com/"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;// 2. Retrieve the select "Destination city" and select option 'Dublin';&lt;/span&gt;
        &lt;span class="nc"&gt;WebElement&lt;/span&gt; &lt;span class="n"&gt;toDestination&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findElement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cssSelector&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"[name='toPort']"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="nc"&gt;Select&lt;/span&gt; &lt;span class="n"&gt;selectElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Select&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;toDestination&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;selectElement&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;selectByVisibleText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Dublin"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;// 3. Use Relative Locator 'below' to retrieve the "Find Flights" button;&lt;/span&gt;
        &lt;span class="nc"&gt;WebElement&lt;/span&gt; &lt;span class="n"&gt;findFlightsButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findElement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;tagName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"input"&lt;/span&gt;&lt;span class="o"&gt;)).&lt;/span&gt;&lt;span class="na"&gt;below&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;toDestination&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;findFlightsButton&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;click&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="c1"&gt;// 4. Assert that the button was clicked by validating page title.&lt;/span&gt;
        &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;actualTitle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findElement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;tagName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"h3"&lt;/span&gt;&lt;span class="o"&gt;)).&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="nc"&gt;Assertions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;assertEquals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expectedTitle&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;actualTitle&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;quit&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I've added a sleep to the code snippet above so that we can see the test in action!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zs5V2iUH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xol9z1de8qij1gjc7pf7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zs5V2iUH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xol9z1de8qij1gjc7pf7.gif" alt="test 1 running" width="880" height="441"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is useful when you don't have access to the source code (to add an &lt;em&gt;'id'&lt;/em&gt; or &lt;em&gt;'test-id'&lt;/em&gt; in the HTML) and want to avoid writing a complex &lt;em&gt;xpath&lt;/em&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#support-for-chrome-devtools-protocol"&gt;
  &lt;/a&gt;
  🤯 Support for Chrome DevTools Protocol
&lt;/h2&gt;

&lt;p&gt;The Chrome DevTools Protocol (CDP) is a protocol to communicate with Chromium-based browser internal configurations. Tools can build an API around it to allow a low-level browser configuration (e.g. instrument, inspect, debug and profile). If you're interested in learning more about what you can do with it, visit &lt;a href="https://chromedevtools.github.io/devtools-protocol/"&gt;CDP Github.io page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Selenium 4 brings its own API to communicate with CDP. Now its possible to do a lot of advanced browser configurations for your tests, like changing the client's geolocation for example.&lt;/p&gt;

&lt;p&gt;We can implement a sample test for the above situation using the page &lt;a href="https://www.gps-coordinates.net/my-location"&gt;gps-coordinates/my-location&lt;/a&gt;. It has a feature that show user's location coordinates and address based on the geolocation. We'll implement a test that simply asserts that the location shown is the location we set. See an example below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NotVvatr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uc18sm47kf0hbdlfjizh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NotVvatr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uc18sm47kf0hbdlfjizh.png" alt="geolocation example" width="880" height="364"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Since I need some vacation, let's teleport ourselves to Cancún/Mexico using code! I've already googled the latitude and longitude values for us, so let's jump to the part where i show you the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
* File: AppTest.java
*/&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AppTest&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="nd"&gt;@Test&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;setGeolocation&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="nf"&gt;InterruptedException&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="c1"&gt;// 1. Configuration Steps&lt;/span&gt;
        &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;expectedAddress&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Calle 50 Poniente, 77510 Cancun, ROO, Mexico"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setProperty&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"webdriver.chrome.driver"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"c:/chromedriver.exe"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;WebDriver&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ChromeDriver&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;window&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;maximize&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="c1"&gt;// 2. Create map with arguments for "Emulate.setGeolocationOverride"&lt;/span&gt;
        &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;coordinatesMap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class="n"&gt;coordinatesMap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"latitude"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;21.17429&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;coordinatesMap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"longitude"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;86.84656&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;coordinatesMap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"accuracy"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;// 3. Calls CDP's "Emulation.setGeolocationOverride" to set new geolocation&lt;/span&gt;
        &lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="nc"&gt;ChromeDriver&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;executeCdpCommand&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Emulation.setGeolocationOverride"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;coordinatesMap&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://www.gps-coordinates.net/my-location"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sleep&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;// 4. Asserts that the Address shown is Cancún/Mexico&lt;/span&gt;
        &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;actualAddress&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findElement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"addr"&lt;/span&gt;&lt;span class="o"&gt;)).&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="nc"&gt;Assertions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;assertEquals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expectedAddress&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;actualAddress&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;quit&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And it's time to see our second test running!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--brel4TdE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrldlhg82ffutimsbqpd.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--brel4TdE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrldlhg82ffutimsbqpd.gif" alt="test 2 running" width="880" height="441"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We've just teleported! Of course, you'll have to believe that i'm not writing this from Cancún 😂. But you'll have to agree with me, this new feature (calling CDP commands) is really powerful. This geolocation change allow us to test features like "Find the nearest store" for example.&lt;/p&gt;

&lt;p&gt;This is it for today. Have you learned some other new stuff on Selenium 4 already? Share with me in the comments!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qyW9pyc2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8q9g2cinqfx57hpvcd5i.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qyW9pyc2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8q9g2cinqfx57hpvcd5i.gif" alt="goku teleporting" width="500" height="281"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you've read this far, I hope the content has added something for you. If it didn't, remember: This is just another ordinary QA content 😬.&lt;/p&gt;

&lt;p&gt;🍀 See ya!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#full-code"&gt;
  &lt;/a&gt;
  👩‍💻 Full Code
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/lucashdoa/selenium4-demo"&gt;lucashdoa/selenium4-demo&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  🔍 References
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://chromedevtools.github.io/devtools-protocol/"&gt;Chrome DevTools Protocol docs&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=czp7mxGHL88&amp;amp;t=1051s"&gt;Naveem AutomationLabs YouTube Channel - Mock Geo Location using ChromeDevTools&lt;/a&gt;&lt;br&gt;
&lt;a href="https://angiejones.tech/selenium-4-mocking-geolocation/"&gt;Angie Jones's blog - Mocking Geolocation&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.selenium.dev/documentation/webdriver/locating_elements/"&gt;Selenium docs - Locating elements&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-chat"&gt;
  &lt;/a&gt;
  😁 Let's chat!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/lucashdoa"&gt;Github&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/lucashdoa/"&gt;Linkedin&lt;/a&gt;&lt;/p&gt;

</description>
      <category>todayilearned</category>
      <category>java</category>
      <category>selenium</category>
      <category>testing</category>
    </item>
    <item>
      <title>Axie Infinity - Breaking the market with bots</title>
      <author>mdichtler</author>
      <pubDate>Sun, 31 Oct 2021 17:21:32 +0000</pubDate>
      <link>https://dev.to/mdichtler/axie-infinity-breaking-the-market-with-bots-19gp</link>
      <guid>https://dev.to/mdichtler/axie-infinity-breaking-the-market-with-bots-19gp</guid>
      <description>&lt;p&gt;As many of us know, Axie Infinity has quickly risen to become the #1 NFT powered game in the world, with that, and ever growing market reaching $670M worth of transactions in the past month, it is also a great playground for developers to learn and practice new skills.&lt;/p&gt;

&lt;p&gt;In this article, will go over one of my &lt;a href="https://github.com/mdichtler/axie-infinity-sniper-bot"&gt;github repos&lt;/a&gt;, and learn how to setup a bot to scrape data from axie.zone (community website providing leaderboard information) and in combination with axie infinity's graphql API, find the Axies played by the top 100 players on the marketplace.&lt;/p&gt;

&lt;p&gt;While we likely are not able to find the exact Axies (same ID), we can find Axies with the same class, as well as parts, that make them practically identical in combat, allowing us to recreate the best teams on budget.&lt;/p&gt;

&lt;p&gt;If you would like to support development of this project and future tutorials, feel free to donate using Ko-Fi. &lt;br&gt;
&lt;a href="https://ko-fi.com/R5R56SOT1"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FKanlt08--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ko-fi.com/img/githubbutton_sm.svg" alt="ko-fi" width="223" height="30"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video Tutorial
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://youtu.be/LijzwzcuIKo"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6vBc8I9k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/baDtWpr.png" alt="IMAGE ALT TEXT HERE" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#instructions"&gt;
  &lt;/a&gt;
  Instructions
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/mdichtler/axie-infinity-sniper-bot"&gt;Clone the Github repo&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a Firebase account &amp;amp; Project&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enable Firestore&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;(optional) Enable Authentication using Google.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;(optional) Update security rules to enable any authenticated user to read data (this setup is assuming usage with the provided Web GUI, if used within your own project tailor your security rules to the given project).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;rules_version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'2'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="n"&gt;cloud&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;firestore&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;match&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;databases&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;database&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;documents&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;match&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;document&lt;/span&gt;&lt;span class="o"&gt;=**&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Within Firebase, navigate to Project Settings &amp;gt; Service Accounts, select Python and click on "Generate new private key"&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Rename the file to serviceAccountKey.json and import it into the project directory ./database/serviceAccountKey.json (this file is included in .gitignore)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create virtual environment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use the package manager &lt;a href="https://pip.pypa.io/en/stable/"&gt;pip&lt;/a&gt; to install dependencies from requirements.txt file.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip3 &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Run main.py, after script finishes, your data will be loaded into two collections, leaderboards (top 100 players at the runtime, multiple documents) and on_sale (all axies matching one of the most used axies by top 100 players, including their price, which top 100 player it matches, ID, class &amp;amp; parts, see example json below).&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#example-json"&gt;
  &lt;/a&gt;
  Example JSON:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "player_rank": 44,
    "image": "https://storage.googleapis.com/assets.axieinfinity.com/axies/7751721/axie/axie-full-transparent.png",
    "time": {
        "seconds": 1635428026,
        "nanoseconds": 751095000
    },
    "axie": {
        "class": "Bird",
        "player_mmr": "3312",
        "player_rank": 44,
        "axie_zone_score": "Excellent",
        "title": "",
        "matching_player": "#44 youtube.com de-hi games 3312 0 0%",
        "id": "7751721",
        "__typename": "Axie",
        "name": "Axie #7751721",
        "breedCount": 3,
        "battleInfo": {
            "banned": false,
            "__typename": "AxieBattleInfo"
        },
        "parts": [
            {
                "name": "Mavis",
                "specialGenes": null,
                "id": "eyes-mavis",
                "class": "Bird",
                "__typename": "AxiePart",
                "type": "Eyes"
            },
            {
                "type": "Ears",
                "specialGenes": null,
                "class": "Bird",
                "id": "ears-peace-maker",
                "__typename": "AxiePart",
                "name": "Peace Maker"
            },
            {
                "name": "Pigeon Post",
                "__typename": "AxiePart",
                "specialGenes": null,
                "id": "back-pigeon-post",
                "class": "Bird",
                "type": "Back"
            },
            {
                "specialGenes": null,
                "type": "Mouth",
                "__typename": "AxiePart",
                "class": "Bug",
                "id": "mouth-cute-bunny",
                "name": "Cute Bunny"
            },
            {
                "type": "Horn",
                "specialGenes": null,
                "class": "Bird",
                "name": "Eggshell",
                "id": "horn-eggshell",
                "__typename": "AxiePart"
            },
            {
                "id": "tail-post-fight",
                "class": "Bird",
                "specialGenes": null,
                "type": "Tail",
                "name": "Post Fight",
                "__typename": "AxiePart"
            }
        ],
        "stage": 4,
        "image": "https://storage.googleapis.com/assets.axieinfinity.com/axies/7751721/axie/axie-full-transparent.png",
        "player_url": "https://axie.zone/profile?ron_addr=0x1b246e446336f55b4150294ccd39693fb4a8aa9b",
        "matching_axie_name": "obasan",
        "auction": {
            "currentPrice": "40000000000000000",
            "__typename": "Auction",
            "currentPriceUSD": "165.82"
        }
    },
    "currentPriceUSD": 165.82,
    "id": "7751721",
    "class": "Bird"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>python</category>
      <category>react</category>
      <category>tutorial</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Dart In Appwrite</title>
      <author>Oshi Gupta</author>
      <pubDate>Sun, 31 Oct 2021 17:16:56 +0000</pubDate>
      <link>https://dev.to/oshi36/dart-in-appwrite-47e</link>
      <guid>https://dev.to/oshi36/dart-in-appwrite-47e</guid>
      <description>&lt;p&gt;In the &lt;a href="https://dev.to/oshi36/kotlin-in-appwrite-7n2"&gt;previous blog&lt;/a&gt; we have seen about how to use Kotlin in Appwrite. Now we will be seeing about how to use Dart in Appwrite.&lt;/p&gt;

&lt;p&gt;As we &lt;a href="https://appwrite.io/docs/sdks"&gt;Dart SDK&lt;/a&gt; is one of the server SDKs in Appwrite but first let's know what is Dart?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dart.dev/"&gt;Dart&lt;/a&gt; is an open-source, general-purpose, object-oriented programming language with C-style syntax developed by Google in 2011. The purpose of Dart programming is to create a frontend user interfaces for the web and mobile apps.&lt;/p&gt;

&lt;p&gt;So now how to write Dart in Appwrite function and how to install Dart SDK for it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dart-sdk-installation"&gt;
  &lt;/a&gt;
  Dart SDK Installation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Add this to your package's pubspec.yaml file:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dependencies:
  dart_appwrite: ^1.0.2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;You can install packages from the command line:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pub get dart_appwrite
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-the-function"&gt;
  &lt;/a&gt;
  Add the function
&lt;/h3&gt;

&lt;p&gt;You can add a new function from your &lt;strong&gt;Appwrite project's dashboard&lt;/strong&gt;. Access your Functions settings from your project's left navigation panel. Click the &lt;strong&gt;Add Function&lt;/strong&gt; button and choose your function name and code runtime.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#init-your-sdk"&gt;
  &lt;/a&gt;
  Init your SDK
&lt;/h3&gt;

&lt;p&gt;Initialize your SDK with your Appwrite server API endpoint and project ID which can be found in your project settings page and your new API secret Key project API keys section.&lt;br&gt;
This can be found out when you &lt;a href="https://appwrite.io/docs/installation"&gt;install Appwrite&lt;/a&gt; according to the Operating System and access the Appwrite Console UI&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rj9QsImd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k654m4hobn0f2swm0bzx.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rj9QsImd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k654m4hobn0f2swm0bzx.PNG" alt="" width="809" height="244"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-your-first-request"&gt;
  &lt;/a&gt;
  Make your first request
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yVjH4RSs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jttqwp0muz4l5ykqypua.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yVjH4RSs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jttqwp0muz4l5ykqypua.PNG" alt="" width="690" height="260"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, we will be seeing different operations which can be performed on these functions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;List functions&lt;/strong&gt; : To get a list of all the project's functions. You can use the query params to filter your results.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import 'package:dart_appwrite/dart_appwrite.dart';

void main() { // Init SDK
  Client client = Client();
  Functions functions = Functions(client);

  client
    .setEndpoint('https://[HOSTNAME_OR_IP]/v1') // Your API Endpoint
    .setProject('5df5acd0d48c2') // Your project ID
    .setKey('919c2d18fb5d4...a2ae413da83346ad2') // Your secret API key
  ;

  Future result = functions.list(
  );

  result
    .then((response) {
      print(response);
    }).catchError((error) {
      print(error.response);
  });
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Get function&lt;/strong&gt; : It will get a function by its unique ID.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import 'package:dart_appwrite/dart_appwrite.dart';

void main() { // Init SDK
  Client client = Client();
  Functions functions = Functions(client);

  client
    .setEndpoint('https://[HOSTNAME_OR_IP]/v1') // Your API Endpoint
    .setProject('5df5acd0d48c2') // Your project ID
    .setKey('919c2d18fb5d4...a2ae413da83346ad2') // Your secret API key
  ;

  Future result = functions.get(
    functionId: '[FUNCTION_ID]',
  );

  result
    .then((response) {
      print(response);
    }).catchError((error) {
      print(error.response);
  });
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Update function&lt;/strong&gt; : It will update the function by its unique ID.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import 'package:dart_appwrite/dart_appwrite.dart';

void main() { // Init SDK
  Client client = Client();
  Functions functions = Functions(client);

  client
    .setEndpoint('https://[HOSTNAME_OR_IP]/v1') // Your API Endpoint
    .setProject('5df5acd0d48c2') // Your project ID
    .setKey('919c2d18fb5d4...a2ae413da83346ad2') // Your secret API key
  ;

  Future result = functions.update(
    functionId: '[FUNCTION_ID]',
    name: '[NAME]',
    execute: [],
  );

  result
    .then((response) {
      print(response);
    }).catchError((error) {
      print(error.response);
  });
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So this is the basic idea of how to create functions in the Appwrite using the Dart SDK.&lt;/p&gt;

&lt;p&gt;For more you can always refer to &lt;a href="https://appwrite.io/docs/getting-started-for-server"&gt;Appwrite docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank You&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>dart</category>
      <category>appwrite</category>
      <category>sdk</category>
      <category>flutter</category>
    </item>
    <item>
      <title>Destructuring in php?</title>
      <author>Roy Ronalds</author>
      <pubDate>Sun, 31 Oct 2021 17:14:36 +0000</pubDate>
      <link>https://dev.to/rrsai/destructuring-in-php-3ad1</link>
      <guid>https://dev.to/rrsai/destructuring-in-php-3ad1</guid>
      <description>&lt;p&gt;I work on javascript/typescript on a constant basis, and php on an infrequent basis (on my legacy php app &lt;a href="http://www.ninjawars.net"&gt;http://www.ninjawars.net&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;When I switch back to php after a long time of using javascript or typescript, I really miss the clean code that you can write by using destructuring.&lt;/p&gt;

&lt;p&gt;Now, I talked a bit in another post about short circuit evaluation in js vs php, and that terseness of syntax allows for writing code with much less boilerplate, but what about destructuring in php?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#destructuring-in-js"&gt;
  &lt;/a&gt;
  Destructuring in js
&lt;/h2&gt;

&lt;p&gt;First, let's glance at destructuring in js:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;rest&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Banana&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cantalope&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Durian&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;...not only is destructuring smooth, it also allows for the powerful &lt;code&gt;...rest&lt;/code&gt; spread syntax.  I can't tell you the number of times that I have had some complex code block in javascript that was simplified by converting it to use destructuring, or a possibly undefined property that destructuring handles smoothly, like:&lt;br&gt;
&lt;code&gt;property api.data.user.name may be undefined&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// The dreaded chain of &amp;amp;&amp;amp; to avoid undefined properties&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;unknown&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// finally do something&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;another approach using the optional chaining operator from typescript:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Unknown user&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But here's another option, using destructuring:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Unknown&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Unknown&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#destructuring-in-php"&gt;
  &lt;/a&gt;
  Destructuring in php
&lt;/h2&gt;

&lt;p&gt;Sadly, php only supports a very limited bit of destructuring, specifically, when destructuring arrays, by using &lt;code&gt;list()&lt;/code&gt; destructuring or &lt;code&gt;[]&lt;/code&gt; destructuring.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'apple'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'banana'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'cantaloupe'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OR&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="p"&gt;[,,,&lt;/span&gt;&lt;span class="nv"&gt;$d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'apple'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'banana'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'cantaloupe'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'durian'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'eggplant'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thankfully, you are also allowed to destructure named keys from associative arrays:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$fruit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
 &lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s1"&gt;'apple'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'b'&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s1"&gt;'banana'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'c'&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s1"&gt;'cantaloupe'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
 &lt;span class="s1"&gt;'d'&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s1"&gt;'durian'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'e'&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s1"&gt;'eggplant'&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="c1"&gt;// Have to set the $fruit var because for some reason php doesn't like it when you try to directly destructure from the  associative array you just created.&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'d'&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;$d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'e'&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$fruit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Durian now&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Eggplant&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So &lt;em&gt;as long as you are dealing with an array or an associative array&lt;/em&gt; you can do some destructuring.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#destructuring-php-objects"&gt;
  &lt;/a&gt;
  Destructuring php objects
&lt;/h2&gt;

&lt;p&gt;It's somewhat possible to destructure a php object by transforming it into an array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'George Washington'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt; &lt;span class="c1"&gt;// A nested data object&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To destructure this you generally have to turn it into an array first, and deal with the proposition of turning it's nested properties into arrays as well.  This may be a diminishing return on effort.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-about-spreading-values"&gt;
  &lt;/a&gt;
  What about ...spreading values?
&lt;/h3&gt;

&lt;p&gt;More modern versions of php, at least 8+, support spread/splat operators on arrays in weird ways, having supported spread operators on function arguments since way back in php 5.6.&lt;/p&gt;

&lt;p&gt;Spread on arrays in php:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$fruit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'apple'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'banana'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'canteloupe'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'durian'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="nv"&gt;$rest&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$fruit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$rest&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ['banana', 'canteloupe', 'durian']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For whatever reason, the above doesn't quite work, php errors out saying:&lt;br&gt;
&lt;code&gt;PHP Fatal error:  Spread operator is not supported in assignments in php shell code on line 1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So the spread operator exists, but it doesn't work quite the way I would expect in php.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-takeaway"&gt;
  &lt;/a&gt;
  The takeaway
&lt;/h2&gt;

&lt;p&gt;Still, there is a lot of potential for destructuring as a way to clean up and simplify code.&lt;/p&gt;

</description>
      <category>php</category>
      <category>destructuring</category>
      <category>spread</category>
      <category>splat</category>
    </item>
    <item>
      <title>Week 1 - Building Projects to impress 🤯🤯 Employers or Hiring Managers [VoteSub]</title>
      <author>kiranbansode</author>
      <pubDate>Sun, 31 Oct 2021 17:11:05 +0000</pubDate>
      <link>https://dev.to/kiranbansode/week-1-building-projects-to-impress-employers-or-hiring-managers-votesub-4e9n</link>
      <guid>https://dev.to/kiranbansode/week-1-building-projects-to-impress-employers-or-hiring-managers-votesub-4e9n</guid>
      <description>&lt;p&gt;Hey everyone, My name is Kiran A. Bansode. I'm a self-taught Full-Stack web developer.&lt;/p&gt;

&lt;p&gt;This is 2nd blog of Building Projects to impress 🤯🤯 Employers or Hiring Managers[VoteSub] series.&lt;/p&gt;

&lt;p&gt;So as from 1st blog you already know, Why I'm buiding this project ?&lt;/p&gt;

&lt;p&gt;In this blog I'm going to share you, What I did in last 3 days ?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-1-thursday-28102021"&gt;
  &lt;/a&gt;
  Day - 1 [Thursday, 28/10/2021]
&lt;/h2&gt;

&lt;p&gt;No matter what if your project is small or big,  SDLC(Software Development Life-Cycle) methodology will provide clearly defined processes for creating high-quality software.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#this-methodology-consist-following-phases-"&gt;
  &lt;/a&gt;
  This methodology consist following phases -
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Requirement(Research)&lt;/li&gt;
&lt;li&gt;Design&lt;/li&gt;
&lt;li&gt;Coding&lt;/li&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;li&gt;Production &lt;/li&gt;
&lt;li&gt;Maintenance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On Day - 1, I did some research for my project like, Which will be most common input fields ? What data will be required for firebase to create a new user ? ... and much more.&lt;/p&gt;

&lt;p&gt;On the basis of that research, I designed two pages using Figma.&lt;/p&gt;

&lt;p&gt;You can view them in Figma designs &lt;a href="https://www.figma.com/file/ibh6SGKzcY9jgaTqusZy7b/VoteSub?node-id=0%3A1"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-2-friday-29102021"&gt;
  &lt;/a&gt;
  Day - 2 [Friday, 29/10/2021]
&lt;/h2&gt;

&lt;p&gt;Day - 2  was all about setting up project and adding required dependencies. I installed following dependencies - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;@mui/material, @mui/icons-material, @emotion/react, @emotion/styled,&lt;/li&gt;
&lt;li&gt;@reduxjs/toolkit, react-redux&lt;/li&gt;
&lt;li&gt;react-hook-form, yup, @hookform/resolvers&lt;/li&gt;
&lt;li&gt;sass, styled-components&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also install devDependencies like - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;prettier&lt;/li&gt;
&lt;li&gt;eslint&lt;/li&gt;
&lt;li&gt;husky&lt;/li&gt;
&lt;li&gt;lint-staged&lt;/li&gt;
&lt;li&gt;commitlint&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The will help me to have readable and maintainable code. I also configured ESLint, Prettier, Husky  and commitlint using their official docs.&lt;/p&gt;

&lt;p&gt;I also use git branching strategy. So far, I created 2 branches&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;master - production or live website related code&lt;/li&gt;
&lt;li&gt;develop - development realated code&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In future there will be 2 more branches.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;testing&lt;/li&gt;
&lt;li&gt;staging&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Note : I changed my default git branch to develop. So those who forked my git repo, please adjust your fork repo setting(I don't know How to ? so can't suggest anything).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#day-3-saturday-30102021"&gt;
  &lt;/a&gt;
  Day - 3 [Saturday, 30/10/2021]
&lt;/h2&gt;

&lt;p&gt;Not able to do much project related work because of school. But what ever time I got after school work, I was able to identify 3 most common component that I'll be needed most.&lt;br&gt;
I added them as card in trello.&lt;/p&gt;

&lt;p&gt;You can view trello cards &lt;a href="https://trello.com/b/dPmDCweY"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also added some more lists. Those lists reflects actual SDLC(it still not complete).&lt;/p&gt;

&lt;p&gt;In next week I'll start coding phase of project for those 2 pages (Login and Registration Page). In that week I will convert designs into code. Also add redux store and connect project to firebase backend. For this I'm going to use Agile model. I'll complete this project in weekly sprints.&lt;/p&gt;

&lt;p&gt;This week is going to be hectic because of Diwali vacation. Also I'll need to check my school's Semester - 1 papers. This is going to be fun and challenging.&lt;/p&gt;

&lt;p&gt;So till then bye bye . See on next Sunday.&lt;/p&gt;

</description>
      <category>votesub</category>
      <category>react</category>
      <category>typescript</category>
      <category>firebase</category>
    </item>
  </channel>
</rss>
