<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Hello World</title>
      <author>Ahmad Sufyan</author>
      <pubDate>Fri, 25 Jun 2021 11:01:25 +0000</pubDate>
      <link>https://dev.to/fyndev/hello-world-450e</link>
      <guid>https://dev.to/fyndev/hello-world-450e</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="n"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"hello world"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
    </item>
    <item>
      <title>10 DevTools tricks to help you with CSS and UX design</title>
      <author>Tapas Adhikary</author>
      <pubDate>Fri, 25 Jun 2021 10:41:15 +0000</pubDate>
      <link>https://dev.to/atapas/10-devtools-tricks-to-help-you-with-css-and-ux-design-1oj9</link>
      <guid>https://dev.to/atapas/10-devtools-tricks-to-help-you-with-css-and-ux-design-1oj9</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Web development is much more fun now than ever.  We have increasing opportunities with frameworks, libraries, communities, skills, and tools compared to what we had a decade ago. Today, there are hardly any web developers who want to limit themselves to write just the business logic. Instead, they want to explore design, look-and-feel, build a user experience end to end. &lt;/p&gt;

&lt;p&gt;Many times, it is challenging without the support of proper tools. This article will learn about ten things you can do using the browser's DevTools to make yourself more productive with CSS and User Experience(UX) Design. I hope you enjoy learning it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-are-devtools"&gt;
  &lt;/a&gt;
  What are DevTools?
&lt;/h1&gt;

&lt;p&gt;The modern browsers provide web developers with tools to help debug the source code, try out the changes early, and build the web page faster. The Google Chrome browser calls it &lt;code&gt;DevTools&lt;/code&gt;, Mozilla Firefox users know it as &lt;code&gt;Web Dev Tools&lt;/code&gt;, and the Microsoft Edge browser lovers would know it as &lt;code&gt;Developer Tools&lt;/code&gt;. For the sake of simplicity, we will refer to all of them as &lt;code&gt;DevTools&lt;/code&gt; in this article.&lt;/p&gt;

&lt;p&gt;You can use the key combinations, Option + ⌘ + I (on macOS) or Shift + CTRL + I (on Windows/Linux), to launch the DevTools from your favorite browser. For example, the image below shows the DevTools of the Chrome browser.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lqK9HDA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623149119568/ZwTP8IfM9.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lqK9HDA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623149119568/ZwTP8IfM9.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Chrome Browser DevTools&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Alright, let's dive into knowing the Tips &amp;amp; Tricks now 👇.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-turn-the-design-mode-on"&gt;
  &lt;/a&gt;
  1. Turn the Design Mode "ON"
&lt;/h1&gt;

&lt;p&gt;You can turn the design mode &lt;code&gt;on&lt;/code&gt; to edit any texts on your website. It is convenient to test how dynamic content(like texts) may impact your layout. To enable it, &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open the &lt;code&gt;DevTools&lt;/code&gt; and go to the &lt;code&gt;Console&lt;/code&gt; tab.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;document.designMode = "on"&lt;/code&gt; and press the enter key.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now you have the browser's document editable the way you want. For example, in the image below, we see some text changes and the notification count changes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7jeXEZVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622637001867/pNpEcCpwd.gif%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7jeXEZVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622637001867/pNpEcCpwd.gif%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="1_design_mode_on.gif"&gt;&lt;/a&gt;&lt;br&gt;
Figure 1.1: Design Mode On&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I had shared about this cool trick as Twitter tips a while back.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4hZqTreG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/tweet_video_thumb/E15v_z1VEAAh9px.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--gZs-D4vf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1305109781619724288/5-e1f9SQ_normal.jpg" alt="Tapas Adhikary profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Tapas Adhikary
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @tapasadhikary
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      💡 This is fun. &lt;br&gt;&lt;br&gt;&amp;gt; document.designMode="on"&lt;br&gt;&lt;br&gt;Useful for live editing of texts on your website/webapp.&lt;br&gt;&lt;br&gt;Just keep the designMode "on". With this, it is easy to propose any text changes quickly and share 🙂. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      09:58 AM - 21 May 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1395680416439300102" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1395680416439300102" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1395680416439300102" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;All the browsers support this, and it also works with iFrames. Great, let's move to the next one.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-color-picker"&gt;
  &lt;/a&gt;
  2. Color Picker
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;Color Picker&lt;/code&gt; is one of the most used tools in the DevTools set for web developers &amp;amp; designers. You can play with the color combinations, contrasts, accessibility all with this tool.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YeMFkHyr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622708631966/78z16EQ_9.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YeMFkHyr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622708631966/78z16EQ_9.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="2.color_picker_1.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 2.1: Color Picker&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let us take a look at the Color Picker interface. The image below shows the Color Picker of the Chrome DevTools. It has primarily four sections, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Color Selector/Picker&lt;/strong&gt;: You can select any color by dragging your mouse pointer in a color range for a specific color type. You can also select a color type along with the opacity value. Based on your color selection, you can copy the color code in different formats like RGB, HEX, and more.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Eye Dropper&lt;/strong&gt;: You can toggle between the Color Picker and &lt;code&gt;Eye Dropper&lt;/code&gt; mode using the small dropper icon. The &lt;code&gt;eye dropper&lt;/code&gt; mode helps you select a color from the document and use it elsewhere. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Color Contrast Ratio&lt;/strong&gt;: When you design a web page with a background color, it is crucial to maintain the color contrast and ratios of text, link, other HTML element colors. You can check the color contrast ratio and adjust it accordingly to meet the accessibility guidelines.&lt;/li&gt;
&lt;li&gt;*&lt;em&gt;Colore Palettes *&lt;/em&gt;: Last is the color palettes to choose from different types of color options.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--To5qC9Fa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622708645103/5PEXQGctI.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--To5qC9Fa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622708645103/5PEXQGctI.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="2.color_picker_2.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 2.2: Color Picker Sections&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The image below shows how to select a color from the color selector tool.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QpR6XfqQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622708666620/Mo-IS_TcU.gif%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QpR6XfqQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622708666620/Mo-IS_TcU.gif%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="2_color_picker_move.gif"&gt;&lt;/a&gt;&lt;br&gt;
Figure 2.3: The Color Selector&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is a quick demonstration of how to check the color contrast ratio and make corrections.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o2_qay46--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622708680427/fJPRfXSgI.gif%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o2_qay46--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622708680427/fJPRfXSgI.gif%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="2_color_picker_contrast.gif"&gt;&lt;/a&gt;&lt;br&gt;
Figure 2.4: Color Contrast Ratio&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When the &lt;code&gt;Eye Dropper&lt;/code&gt; mode is on, you can highlight and select the colors from the web page itself.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PSiAZDuh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622710261672/36kEjqvDx.gif%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PSiAZDuh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622710261672/36kEjqvDx.gif%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="2_color_picker_eye_ddropper.gif"&gt;&lt;/a&gt;&lt;br&gt;
Figure 2.5: The Eye Dropper Mode&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The color picker tool interface may vary from one browser to another. All the examples we discussed so far are using the chrome browser's DevTools.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-flexbox-editing-and-debugging"&gt;
  &lt;/a&gt;
  3. Flexbox Editing and Debugging
&lt;/h1&gt;

&lt;p&gt;Using CSS &lt;code&gt;Flexbox&lt;/code&gt; container to achieve the Flexbox module is ubiquitous in web design. The flexible layout is the easy answer for many of the layout issues we had earlier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.flex-container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-between&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;Flexbox&lt;/code&gt; layout module has many properties that control the layout and position of the elements. The Google Chrome browser version 90 got us a super cool tool to edit and debug &lt;code&gt;Flexbox&lt;/code&gt; properties. &lt;/p&gt;

&lt;p&gt;Whenever an HTML page element has the &lt;code&gt;display: flex&lt;/code&gt; or &lt;code&gt;display: inline-flex&lt;/code&gt;, you will get the &lt;code&gt;flex&lt;/code&gt; badge near the element in the &lt;code&gt;Elements&lt;/code&gt; panel. In addition, the &lt;code&gt;Styles&lt;/code&gt; panel will show a new icon to open the &lt;code&gt;Flexbox&lt;/code&gt; editor. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BNbWaHe2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622712200528/4nDD-2gxo.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BNbWaHe2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622712200528/4nDD-2gxo.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="3_open_flex_editr.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 3.1: The Flexbox Editor Icon&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Click on the icon to open the editor. Now, you will be able to select any of the flexbox properties as per your needs. As you chose the properties, they get added to the respective HTML element's style.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--927f0fhM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622713923228/adREH548_.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--927f0fhM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622713923228/adREH548_.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="3_flex_editor.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 3.2: The Flexbox Editor&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#4-gradient-selector"&gt;
  &lt;/a&gt;
  4. Gradient Selector
&lt;/h1&gt;

&lt;p&gt;The CSS gradients allow you to show smooth transitions between two or more colors. Usually, there are two types of gradients you can create,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Linear Gradients: With this type of gradient, the color transition can take place left, right, up, down, and diagonally.&lt;/li&gt;
&lt;li&gt;Radial Gradients: Their centers define the radial gradients.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To create a gradient, we use parameters like directions, colors, positions. You may have to try out different values for each parameter to achieve the gradient you are looking for. The Google Chrome &lt;code&gt;Devtools&lt;/code&gt; provides a Gradient Selector that helps you precisely with that. You can try and change the parameter values to get to your preferred gradient faster.&lt;/p&gt;

&lt;p&gt;The image below shows a linear gradient with a direction of 45 degrees and a couple of colors. Clicking on the direction value shows a direction selector. You can adjust the value to any direction using it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VxFIliDa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622711010188/QqHn_LdSx.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VxFIliDa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622711010188/QqHn_LdSx.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="4_gradient.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 4.1: The Gradient Selector&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;See this tweet to know how easy it is to play with it(I had fun doing it).&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_mjxcY1j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/tweet_video_thumb/EsVnd1eVoAIW2zV.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--gZs-D4vf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1305109781619724288/5-e1f9SQ_normal.jpg" alt="Tapas Adhikary profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Tapas Adhikary
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @tapasadhikary
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      The CSS angle debugging tool is super cool. You can find it in the latest Chrome browser.&lt;br&gt;&lt;br&gt;Now, I'm fully addicted to it...😂&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/devcommunity"&gt;#devcommunity&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/devtools"&gt;#devtools&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:00 PM - 22 Jan 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1352601966384271360" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1352601966384271360" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1352601966384271360" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h1&gt;
  &lt;a href="#5-clippath-editor"&gt;
  &lt;/a&gt;
  5. Clip-Path Editor
&lt;/h1&gt;

&lt;p&gt;CSS &lt;code&gt;clip-path&lt;/code&gt; is a great way to create shapes of your choice. The clip-path property creates a clipping region to decide the part of the element to show. The area outside of the clipping region will be hidden. Here is an example of a rectangular polygon using the &lt;code&gt;clip-path&lt;/code&gt; CSS property,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;clip-path&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;polygon&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;10&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="err"&gt;10&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt; &lt;span class="err"&gt;90&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="err"&gt;10&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt; &lt;span class="err"&gt;90&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="err"&gt;90&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt; &lt;span class="err"&gt;10&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="err"&gt;90&lt;/span&gt;&lt;span class="o"&gt;%);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is common for web developers to try out different combinations of the clip-path values to settle with a shape of their choice. However, it is a bit hard to remember and code for the clip-path property. It would be far easier if we get an editor to create a shape of our choice, which gives us the respective clip-path value. The &lt;code&gt;Mozilla Firefox&lt;/code&gt; DevTools provides a clip-path editor to create the shape with a few drag and drop.&lt;/p&gt;

&lt;p&gt;To use it, inspect the HTML element that has the clip-path CSS property in its style. You will notice a small shape in front of the clip-path value. Click on that tiny shape to select the clipped region of the element.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0wQVA8a---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623215771786/SUEVA8Eyv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0wQVA8a---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623215771786/SUEVA8Eyv.png" alt="clip_1.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 5.1: Select the Clipped Area&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The image below shows the clipped area selected.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WePTdhEx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622730779595/yW-wVKXBI.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WePTdhEx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622730779595/yW-wVKXBI.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="clip_2.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 5.2: Clipped Area Selected&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, you can drag-and-drop any of the points of the clipped shape and adjust it based on your need. As you do that, the clip-path property value gets changed as well. It is such a powerful tool to help to boost productivity.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SjkAjj2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622730794318/Gg4tGr-Bb.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SjkAjj2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622730794318/Gg4tGr-Bb.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="clip_3.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 5.3: Adjust the Shape&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Check out the demo below and notice how the clip-path property value gets adjusted when we drag and drop the clip points. It's magical.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--skqkdPSi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622730808363/yImdd0u7j.gif%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--skqkdPSi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622730808363/yImdd0u7j.gif%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="clip.gif"&gt;&lt;/a&gt;&lt;br&gt;
Figure 5.4: Clip-Path Editor Demo&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#6-css-overview"&gt;
  &lt;/a&gt;
  6. CSS Overview
&lt;/h1&gt;

&lt;p&gt;We will now talk about an experimental feature in Google Chrome DevTools. You will love knowing about it. It is called &lt;code&gt;CSS Overview&lt;/code&gt;. Using this tool, you can gather information about the colors, fonts, unused declarations of styles, media queries of a web page in a single place. You can then make use of this information to copy any part of it and reuse it elsewhere.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;CSS Overview&lt;/code&gt; feature may not be enabled in your Chrome browser by default. To enable it, please click on the &lt;code&gt;settings&lt;/code&gt; icon at the top-right corner of the DevTools interface.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iaU49oTi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622731187544/_xEoQUQQ1.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iaU49oTi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622731187544/_xEoQUQQ1.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="settings.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 6.1: Click on the Settings Icon&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next, select the &lt;code&gt;Experiments&lt;/code&gt; option from the left side. It will list a set of experimental features that are not available to use by default. Next, please select &lt;code&gt;CSS Overview&lt;/code&gt; by clicking on the checkbox beside it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--98J831Rt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622731203859/W1EJt55fE.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--98J831Rt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622731203859/W1EJt55fE.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="experiements.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 6.2: Select the CSS Overview Feature&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The browser may ask you to reload the DevTools for this newly enabled feature to take effect.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MWTFZXRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622731227603/kOIDQ3Xud.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MWTFZXRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622731227603/kOIDQ3Xud.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="reload_dev_tools.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 6.3: Reload DevTools&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, you will see a new tab, &lt;code&gt;CSS Overview&lt;/code&gt;, beside the &lt;code&gt;Console&lt;/code&gt; tab. Go to the CSS Overview and click on the &lt;code&gt;Capture overview&lt;/code&gt; button.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iL1pPsAN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622731245299/lZJAIDpe1.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iL1pPsAN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622731245299/lZJAIDpe1.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="capture_css_overview.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 6.4: Capture Overview&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It will capture the overview of the website/app opened in the browser currently. The image below shows the &lt;code&gt;Colors&lt;/code&gt; information of my portfolio website. You can browse other information like the font info, unused declarations, and more.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M6mj6f8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622731263226/xgTi-ypLv.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M6mj6f8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622731263226/xgTi-ypLv.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="css_overview.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 6.5: CSS Overview in Action&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I would encourage you strongly to try out other experimental features of the DevTools. Who knows, you may find another treasure! &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7-font-editor"&gt;
  &lt;/a&gt;
  7. Font Editor
&lt;/h1&gt;

&lt;p&gt;This one and the following two tricks are with Mozilla Firefox DevTools. You will find similar alternatives with Google Chrome DevTools as well. Fonts play a significant role in our web applications and websites. The font size, spacing, line height, weight, decorations all matter to make the website readable and presentable.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Font Editor&lt;/code&gt; tool provides you the control to adjust the font attributes. To open the font editor, please inspect an HTML element to edit the font properties. Then under the &lt;code&gt;Inspector&lt;/code&gt; tab, you should find a sub-tab called &lt;code&gt;Fonts&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TYcHTfIN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622800282517/FNUVKG1NX.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TYcHTfIN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622800282517/FNUVKG1NX.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="font_1.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 7.1: The Font Editor&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, you can adjust the font attributes by drag-drop and selections, as we see in the image below.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KI58VQJb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622800264598/W_YZKYO4Z.gif%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KI58VQJb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622800264598/W_YZKYO4Z.gif%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="font.gif"&gt;&lt;/a&gt;&lt;br&gt;
Figure 7.2: Adjust the Font Attributes&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#8-changes"&gt;
  &lt;/a&gt;
  8. Changes
&lt;/h1&gt;

&lt;p&gt;As you make styling changes in the DevTools, it captures the changes under the &lt;code&gt;Changes&lt;/code&gt; tab. You can find it just before the &lt;code&gt;Fonts&lt;/code&gt; tab we have seen above.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9LUqjAH2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622800437877/xzBMgeKnG.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9LUqjAH2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622800437877/xzBMgeKnG.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="changes.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 8.1: Changes&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can directly copy the code changes from the &lt;code&gt;Changes&lt;/code&gt; tab to your source code editor.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#9-animation-editor"&gt;
  &lt;/a&gt;
  9. Animation Editor
&lt;/h1&gt;

&lt;p&gt;Debugging animation issues could be challenging at times. The &lt;code&gt;Animations&lt;/code&gt; tool helps you with that. You will find the &lt;code&gt;Animations&lt;/code&gt; sub-tab under the &lt;code&gt;Inspector&lt;/code&gt; tab of Firefox DevTools.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YNLig8CU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622801119719/_SJaLcib3.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YNLig8CU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622801119719/_SJaLcib3.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="animation_1.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 9.1: Animation Tool&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can trace and track the animation property changes by time.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jRUp-Wlj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622801134046/qHgPWATbi.gif%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jRUp-Wlj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622801134046/qHgPWATbi.gif%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="animation_2.gif"&gt;&lt;/a&gt;&lt;br&gt;
Figure 9.2: Animation by Time&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Do you want to pinpoint a particular time or duration to inspect the animation behavior? Yes, you can drag and drop the handle, as we see in the image below.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fKvYYGGV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622801146919/sGXbUVsUd.gif%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fKvYYGGV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622801146919/sGXbUVsUd.gif%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="animation_3.gif"&gt;&lt;/a&gt;&lt;br&gt;
Figure 9.3: Debug Animation&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#10-device-toolbar"&gt;
  &lt;/a&gt;
  10. Device Toolbar
&lt;/h1&gt;

&lt;p&gt;Here goes the last trick, and it is my most favorite. One of the website/web app development criteria is adhering to the Responsive Web Design(RWD) principles. The web page should be responsive enough to meet user satisfaction on different devices(PC, Laptop, Smart Phones, Tablets, many more). &lt;/p&gt;

&lt;p&gt;When testing out the responsiveness, you may not have all the devices available to you. First, however, it is essential to test and certify that the page doesn't break on different devices, different resolutions. The Google Chrome browser's &lt;code&gt;Device Toolbar&lt;/code&gt; is to help you with it.&lt;/p&gt;

&lt;p&gt;To launch your page in the responsive mode, please activate the &lt;code&gt;Device Toolbar&lt;/code&gt; by clicking on the icon beside the inspector icon.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nj3b5Xl5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622802126001/JEB6l-ADV.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nj3b5Xl5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622802126001/JEB6l-ADV.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="toggle_device.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 10.1: Toggle Device Toolbar&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now you can select a device from the list to see how your webpage behaves to the responsiveness.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_QVn_CKg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622802142084/3baICWW_R.gif%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_QVn_CKg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622802142084/3baICWW_R.gif%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="device.gif"&gt;&lt;/a&gt;&lt;br&gt;
Figure 10.2: Test Responsiveness using the Device Toolbar&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That brings us to the end of this article. I hope you enjoyed learning about these tricks. If you are aware of any other DevTools tricks to help with CSS, User Experience Design, please comment below. Let's learn together.&lt;/p&gt;




&lt;p&gt;I hope you enjoyed this article or found it helpful. Let's connect. You can find me on &lt;a href="https://twitter.com/tapasadhikary"&gt;Twitter(@tapasadhikary)&lt;/a&gt;, sharing thoughts, tips, and code practices.&lt;/p&gt;

&lt;p&gt;You may also like,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.greenroots.info/i-made-a-photo-gallery-with-css-animation-heres-what-i-learned-ckfzbk6v903ea2xs14l1942f7"&gt;I made a photo gallery with CSS animation. Here’s what I learned.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.greenroots.info/10-trivial-yet-powerful-html-facts-you-must-know-ckmx0d7q30346c1s125iydcsa"&gt;10 trivial yet powerful HTML facts you must know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.greenroots.info/10-useful-html5-features-you-may-not-be-using-ckdua7ql300l1m3s1ez7teshc"&gt;10 useful HTML5 features, you may not be using&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>codenewbie</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Laravel 8 JQuery Form-Js Tutorial</title>
      <author>avani-trivedi</author>
      <pubDate>Fri, 25 Jun 2021 10:11:45 +0000</pubDate>
      <link>https://dev.to/avanitrivedi/laravel-8-jquery-form-js-tutorial-2li7</link>
      <guid>https://dev.to/avanitrivedi/laravel-8-jquery-form-js-tutorial-2li7</guid>
      <description>&lt;p&gt;Hi Dev,&lt;/p&gt;

&lt;p&gt;Today, I am going to learn you how to use and implement jquery form js plugin in laravel 8 application.so We will learn how to utilize in laravel 8 application. I written simple example for form js. I will justify you ajax submit a form without refresh in laravel 8.&lt;/p&gt;

&lt;p&gt;So, immediately submits the form through AJAX. In the most common use case this is invoked in response to the user clicking a submit button on the form. Use ajaxSubmit if you want to bind your own submit handler to the form.&lt;/p&gt;

&lt;p&gt;Here i will show you full example of jquery form js plugin in laravel 8. So let's started first of follow few step to get example.&lt;/p&gt;

&lt;p&gt;More..&lt;br&gt;
&lt;a href="https://www.mywebtuts.com/blog/laravel-8-jquery-form-js-example"&gt;https://www.mywebtuts.com/blog/laravel-8-jquery-form-js-example&lt;/a&gt;&lt;/p&gt;

</description>
      <category>jquery</category>
      <category>laravel</category>
    </item>
    <item>
      <title>Graphql-ruby and passing ISO8601 DateTimes without timezone</title>
      <author>Adam Piotrowski</author>
      <pubDate>Fri, 25 Jun 2021 10:00:00 +0000</pubDate>
      <link>https://dev.to/2nit/graphql-ruby-and-passing-iso8601-datetimes-without-timezone-5bmp</link>
      <guid>https://dev.to/2nit/graphql-ruby-and-passing-iso8601-datetimes-without-timezone-5bmp</guid>
      <description>&lt;p&gt;If you are writing web apps for some time, you had to encounter at least a few issues/situations when you had to deal with Timezones. If you are a Ruby developer, and you use Ruby on Rails then you are probably familiar with the difference of Time.now, Time.current and Time.zone.now. (if not, that is quick blogpost for one of those teams that are setting the standard of how to write Ruby code : &lt;a href="https://thoughtbot.com/blog/its-about-time-zones"&gt;https://thoughtbot.com/blog/its-about-time-zones&lt;/a&gt;)  &lt;/p&gt;

&lt;p&gt;Conclusions of that blogpost (and many others) are simple: use those methods that are referring to your app timezone and do not mess with that if you want to have smooth to maintain time-related code.  &lt;/p&gt;

&lt;p&gt;Now, let’s focus for a moment on a gem that helped a lot of us to have a nice time during working with our graphl API: &lt;a href="https://github.com/rmosolgo/graphql-ruby"&gt;https://github.com/rmosolgo/graphql-ruby&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;What is easy to forget, that this gem is for all ruby applications. Not only for rails-based.&lt;br&gt;&lt;br&gt;
If you are thinking about that gem as an addition to your rails app that is following “standard” approaches: remember that this gem doesn’t have access to Rails DateAndTime::Zones class for example.  &lt;/p&gt;

&lt;p&gt;That is Time class ancestors from gem:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="vg"&gt;$:&lt;/span&gt; &lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ancestors&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;Comparable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;ErrorBubblingHelpers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;Minitest&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Expectations&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;PP&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ObjectMixin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="no"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Ext&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Generator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;GeneratorMethods&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;Kernel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;BasicObject&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and that one is how Time ancestors looks like if we load default rails console:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="vg"&gt;$:&lt;/span&gt; &lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ancestors&lt;/span&gt;

&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;DateAndTime&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Compatibility&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;DateAndTime&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Calculations&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;DateAndTime&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Zones&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;Comparable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;ActiveSupport&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ToJsonWithActiveSupportEncoder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;ActiveSupport&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Dependencies&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Loadable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;PP&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ObjectMixin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Ext&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Generator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;GeneratorMethods&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;ActiveSupport&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Tryable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;Kernel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;BasicObject&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why is it important? Because when you realize that, you can assume and check it in the gem codebase to be sure how exactly it works if it comes to ISO8601DateTime types when they don't have a TimeZone passed from client side.  &lt;/p&gt;

&lt;p&gt;As you probably already suspect - it parse it using server timezone, not application timezone (because it doesn’t have access to it by default).  &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conslusion"&gt;
  &lt;/a&gt;
  Conslusion:
&lt;/h4&gt;

&lt;p&gt;Remember that graphql-ruby is a gem prepared not only for rails environment, so do not expect it will be operating on your rails app timezone. Ensure that your system have the same timezone as your app, and enjoy graphl-ruby gem, as you were before!&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#ps-few-tips-for-setup-that-we-mostly-work-with"&gt;
  &lt;/a&gt;
  P.S. (few tips for setup that we mostly work with)
&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;App&lt;/em&gt;&lt;/strong&gt;: To change timezone in app, go to config/environments/.rb and set:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;time_zone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"UTC"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;System&lt;/em&gt;&lt;/strong&gt; To change linux based system timezone just run
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;ln&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="sr"&gt;/usr/s&lt;/span&gt;&lt;span class="n"&gt;hare&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;zoneinfo&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;UTC&lt;/span&gt; &lt;span class="sr"&gt;/etc/&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;&lt;em&gt;Postgres Database&lt;/em&gt;&lt;/strong&gt; :

&lt;ul&gt;
&lt;li&gt;Run psql
&lt;/li&gt;
&lt;li&gt;show config_file;
&lt;/li&gt;
&lt;li&gt;because SET  TIME ZONE 'UTC; -from psql will work only until next restart of postgres to change timezone open config file and set
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="n"&gt;timezone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'UTC'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
`&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>ruby</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Let's Build a Colour Picker Web Component</title>
      <author>Benny Powers 🇮🇱🇨🇦</author>
      <pubDate>Fri, 25 Jun 2021 09:55:14 +0000</pubDate>
      <link>https://dev.to/open-wc/let-s-build-a-colour-picker-web-component-2j3n</link>
      <guid>https://dev.to/open-wc/let-s-build-a-colour-picker-web-component-2j3n</guid>
      <description>&lt;p&gt;Let's build a colour picker web component using HTML, CSS, and a little bit of JavaScript. In the end, we'll have a custom element that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Displays a colour spectrum using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/linear-gradient()"&gt;CSS Gradients&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Tracks the mouse position using a &lt;a href="https://lit.dev/docs/composition/controllers/"&gt;Reactive Controller&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Updates it's &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM"&gt;Shadow DOM&lt;/a&gt; via a small class mixin&lt;/li&gt;
&lt;li&gt;Fires a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent"&gt;Custom Event&lt;/a&gt; when the user clicks or drags&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#contents"&gt;
  &lt;/a&gt;
  Contents
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setting-up"&gt;Setting Up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#defining-our-element"&gt;Defining our Element&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#styling-our-element"&gt;Styling our Element&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#shadow-css-q-and-a"&gt;Shadow CSS Q-and-A&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#color-picker-styles"&gt;Color Picker Styles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#tracking-the-mouse-with-a-reactive-controller"&gt;Tracking the Mouse with a Reactive Controller&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#reusable-composable-controllers"&gt;Reusable, Composable Controllers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#adding-controller-support-to-our-element"&gt;Adding Controller Support to our Element&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hooking-up-the-cursor"&gt;Hooking up the Cursor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#firing-events"&gt;Firing Events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-our-colour-picker"&gt;Using our Colour Picker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#next-steps"&gt;Next Steps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#footnotes"&gt;Footnotes&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;To get the most out of this article, you should have a comfortable understanding of HTML, CSS, and JavaScript; including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link"&gt;load resources with &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Basic &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps/Getting_started"&gt;CSS syntax&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;How to use the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model"&gt;DOM API&lt;/a&gt; to query for elements&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object-oriented_JS"&gt;Object-oriented programming&lt;/a&gt; for web developers and the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/class"&gt;JavaScript &lt;code&gt;class&lt;/code&gt; keyword&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;What a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules"&gt;JavaScript module&lt;/a&gt; is&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You don't need to be an expert, but you should have the basics covered. You should also be familiar with the concept of component-based UI design and have an idea of what a web component is. If you've ever written a component with one of the popular JS frameworks, you're good to go. To catch up on what web components are, check out my blog series:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/bennypowers" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tS9gno9B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GY5S8cqH--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/74157/3d19f35b-c197-4c70-98f7-6dbcda996aa3.jpg" alt="bennypowers"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/bennypowers/lets-build-web-components-part-1-the-standards-3e85" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Lets Build Web Components! Part 1: The Standards&lt;/h2&gt;
      &lt;h3&gt;Benny Powers 🇮🇱🇨🇦 ・ Sep 18 '18 ・ 10 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webcomponents&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#customelements&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#setting-up"&gt;
  &lt;/a&gt;
  Setting Up
&lt;/h2&gt;

&lt;p&gt;Before we define our component, let's set up a project folder to work in and spin up a quick dev server to reload the page when we save a file. Paste the following script into a BASH terminal on a computer that has &lt;a href="https://nodejs.org/"&gt;nodejs and npm installed&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir&lt;/span&gt; ~/color-picker
&lt;span class="nb"&gt;cd&lt;/span&gt; ~/color-picker
&lt;span class="nb"&gt;touch &lt;/span&gt;index.html
&lt;span class="nb"&gt;touch &lt;/span&gt;style.css
&lt;span class="nb"&gt;touch &lt;/span&gt;mouse-controller.js
&lt;span class="nb"&gt;touch &lt;/span&gt;color-picker.js
&lt;span class="nb"&gt;touch &lt;/span&gt;color-picker.css
npx @web/dev-server &lt;span class="nt"&gt;--open&lt;/span&gt; &lt;span class="nt"&gt;--watch&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;These commands create a working directory in your &lt;code&gt;HOME&lt;/code&gt; folder with some empty files, then start an auto-reloading development server.&lt;br&gt;
Next, open the newly created folder in your text editor of choice and edit the index.html file, adding this snippet:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"color-picker.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;color-picker&amp;gt;&amp;lt;/color-picker&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And let's put some initial styles in &lt;code&gt;style.css&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;color-picker&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We don't see anything on screen yet, since we haven't defined the &lt;code&gt;&amp;lt;color-picker&amp;gt;&lt;/code&gt; element. Let's do that now.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#defining-our-element"&gt;
  &lt;/a&gt;
  Defining our Element
&lt;/h2&gt;

&lt;p&gt;Web components (or custom elements) are HTML elements that we the users define. Let's define the &lt;code&gt;&amp;lt;color-picker&amp;gt;&lt;/code&gt; element by extending from the &lt;code&gt;HTMLElement&lt;/code&gt; class. Open &lt;code&gt;color-picker.js&lt;/code&gt; and add this code:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;template&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`
        &amp;lt;link rel="stylesheet" href="color-picker.css"&amp;gt;
        &amp;lt;div id="loupe"&amp;gt;&amp;lt;/div&amp;gt;
      `&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ColorPicker&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attachShadow&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cloneNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;color-picker&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ColorPicker&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let's take that file block-by-block.&lt;/p&gt;

&lt;p&gt;We start by declaring a &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element to hold our element's HTML. We'll add a link to our component's &lt;a href="#styling-our-component"&gt;private CSS&lt;/a&gt; and two nested &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements that we'll use later on to enhance our component. By using a &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;, we make sure the browser does the work of parsing our HTML only one time, when the page loads. From then on, we can create as many &lt;code&gt;&amp;lt;color-picker&amp;gt;&lt;/code&gt; elements as we want, but each one will stamp a clone of the existing HTML, which is &lt;a href=""&gt;much faster than parsing it again&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next we declare our custom element class. In the constructor, we attach a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"&gt;ShadowRoot&lt;/a&gt; to our element, then stamp the contents of the template we created into it.&lt;/p&gt;

&lt;p&gt;Last, we call &lt;code&gt;customElements.define()&lt;/code&gt;, which assigns the HTML tag name &lt;code&gt;&amp;lt;color-picker&amp;gt;&lt;/code&gt; to custom element class, and instructs the browser to upgrade the &lt;code&gt;&amp;lt;color-picker&amp;gt;&lt;/code&gt; elements already present in the document.&lt;/p&gt;

&lt;p&gt;If you save the file, the dev server will reload the page, but we still won't see any changes because our element's content is invisible. Let's change that by applying some good-old CSS.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#styling-our-element"&gt;
  &lt;/a&gt;
  Styling our Element
&lt;/h2&gt;

&lt;p&gt;Open up &lt;code&gt;color-picker.css&lt;/code&gt; and paste in the following.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:host&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;crosshair&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.2turn&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;20%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.3turn&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;30%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.4turn&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;40%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.5turn&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.6turn&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;60%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.7turn&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;70%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.8turn&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;80%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.9turn&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;90%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1turn&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#loupe&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--hue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--saturation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="py"&gt;will-change&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;background&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We'll get into the details of our CSS rules shortly (&lt;a href="#color-picker-styles"&gt;skip ahead&lt;/a&gt;). For now, save the file to see our changes on the page. That's more like it. Now our element looks like a colour picker!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#shadow-css-qanda"&gt;
  &lt;/a&gt;
  Shadow CSS Q-and-A
&lt;/h3&gt;

&lt;p&gt;If you're unfamiliar with web components, you might be asking yourself some questions at this point:&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#-raw-host-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;:host&lt;/code&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;What the heck is &lt;code&gt;:host&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:host()"&gt;&lt;code&gt;:host&lt;/code&gt; CSS selector&lt;/a&gt; gets the element that hosts the root containing the stylesheet. If that doesn't make any sense to you, don't worry, we'll explain more shortly. For now, all you need to know is that in this context, &lt;code&gt;:host&lt;/code&gt; is synonymous with the &lt;code&gt;color-picker&lt;/code&gt; element itself.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#id-selectors-eg-raw-loupe-endraw-"&gt;
  &lt;/a&gt;
  ID Selectors (e.g. &lt;code&gt;#loupe&lt;/code&gt;)
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;ID selectors!? Aren't they a huge CSS no-no?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity"&gt;cascade&lt;/a&gt;, ID selectors have an extremely high specificity, which means they'll override rules with a lower specificity like classes or element selectors. In traditional (global) CSS, this can very quickly lead to unintended consequences.&lt;/p&gt;


&lt;div class="ltag__stackexchange--container"&gt;
  &lt;div class="ltag__stackexchange--title-container"&gt;
    
      &lt;div class="ltag__stackexchange--title"&gt;
        &lt;h1&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Gn-iPj_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackoverflow-logo-b42691ae545e4810b105ee957979a853a696085e67e43ee14c5699cf3e890fb4.svg" alt=""&gt;
            &lt;a href="https://stackoverflow.com/questions/8279132/why-shouldnt-i-use-id-selectors-in-css" rel="noopener noreferrer"&gt;
               Why shouldn't I use ID selectors in CSS?
            &lt;/a&gt;
        &lt;/h1&gt;
        &lt;div class="ltag__stackexchange--post-metadata"&gt;
          &lt;span&gt;Nov 26 '11&lt;/span&gt;
            &lt;span&gt;Comments: 9&lt;/span&gt;
            &lt;span&gt;Answers: 3&lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;a class="ltag__stackexchange--score-container" href="https://stackoverflow.com/questions/8279132/why-shouldnt-i-use-id-selectors-in-css" rel="noopener noreferrer"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9mJpuJP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-up-eff2e2849e67d156181d258e38802c0b57fa011f74164a7f97675ca3b6ab756b.svg" alt=""&gt;
        &lt;div class="ltag__stackexchange--score-number"&gt;
          28
        &lt;/div&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wif5Zq3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-down-4349fac0dd932d284fab7e4dd9846f19a3710558efde0d2dfd05897f3eeb9aba.svg" alt=""&gt;
      &lt;/a&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--body"&gt;
    
&lt;p&gt;I was shocked by this line "Don't use ID selectors in CSS". Is it true? I found many posts have written this. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="http://mattwilcox.net/archive/entry/id/1054/"&gt;http://mattwilcox.net/archive/entry/id/1054/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://screwlewse.com/2010/07/dont-use-id-selectors-in-css/"&gt;http://screwlewse.com/2010/07/dont-use-id-selectors-in-css/&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="http://oli.jp/2011/ids/"&gt;http://oli.jp/2011/ids/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I think we can use the ID for the selectors.&lt;/p&gt;

&lt;p&gt;I still want to clear this up.&lt;/p&gt;

    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--btn--container"&gt;
    
      &lt;a href="https://stackoverflow.com/questions/8279132/why-shouldnt-i-use-id-selectors-in-css" rel="noopener noreferrer"&gt;Open Full Question&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Our stylesheet isn't global though, since we &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; to it from within a &lt;code&gt;ShadowRoot&lt;/code&gt; instead of from the document, the styles are strongly scoped to that root. The browser itself enforces that scoping, not some JavaScript library. All that means the styles we define in &lt;code&gt;color-picker.css&lt;/code&gt; can't 'leak out' and affect styles elsewhere on the page, so the selectors we use can be very simple. We could even replace that &lt;code&gt;#loupe&lt;/code&gt; selector with a bare &lt;code&gt;div&lt;/code&gt; selector and it would work just the same.&lt;/p&gt;

&lt;p&gt;The shadow root encapsulation also means that the element IDs we're using in our template HTML are private. Go ahead and try this in the browser console:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;loupe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Without shadow DOM, we should see our &lt;code&gt;&amp;lt;div id="loupe"&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; element in the console, but we don't. Shadow DOM puts us in complete&lt;sup&gt;&lt;a href="#inherited-styles"&gt;*&lt;/a&gt;&lt;/sup&gt; control of our component's HTML and CSS, letting us put whatever HTML and CSS we want inside it without worrying about how they affect the rest of the page.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#cssinjs-bem-etc"&gt;
  &lt;/a&gt;
  CSS-in-JS, BEM, etc.
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;If this is supposed to be a reusable component, won't those styles and IDs affect the page? Shouldn't we use BEM, or add JavaScript or a command-line tool to transform those IDs into  unique random class names?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now that we've learned a little more about Shadow DOM works, we can answer that question for ourselves: The Shadow DOM (supported in all browsers) removes the need for complicated css-in-js tooling or class naming conventions like BEM. We can finally write simple, à la carte selectors in CSS, scoping our work to the task at hand.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#color-picker-styles"&gt;
  &lt;/a&gt;
  Color Picker Styles
&lt;/h3&gt;

&lt;p&gt;Equipped with our knowledge of the Shadow DOM, let's dive into our element's styles.&lt;/p&gt;

&lt;p&gt;The business-end of our element's &lt;code&gt;:host&lt;/code&gt; styles is a pair of &lt;code&gt;linear-gradient()&lt;/code&gt; calls, one which fades from transparent to grey, the other which turns &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/hsl()"&gt;360 degrees around the colour wheel&lt;/a&gt; in 10% increments as it moves from the far left of our element to the far right. We also threw in a cross-hair cursor and some default dimensions for good measure.&lt;/p&gt;

&lt;p&gt;Our &lt;code&gt;#loupe&lt;/code&gt; rule gives our colour-picking &lt;a href="https://www.wikiwand.com/en/Loupe"&gt;loupe&lt;/a&gt; a pleasing circular shape, but - crucially - defines its background-color and position in terms of &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties"&gt;CSS Custom Properties&lt;/a&gt; also called &lt;em&gt;CSS Variables&lt;/em&gt;. This is going to come in handy in the next step when we use JavaScript to animate the loupe element. We also nod to the browser, letting it know that the &lt;code&gt;background&lt;/code&gt; and &lt;code&gt;transform&lt;/code&gt; properties are likely to change.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#tracking-the-mouse-with-a-reactive-controller"&gt;
  &lt;/a&gt;
  Tracking the Mouse with a Reactive Controller
&lt;/h2&gt;

&lt;p&gt;Every component needs HTML, CSS, and JavaScript to handle properties, events, and reactivity. We covered HTML and CSS with &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;, &lt;code&gt;ShadowRoot&lt;/code&gt;, and &lt;code&gt;:host&lt;/code&gt;. Now let's move on to reactivity, meaning to update our element's state-of-affairs in reaction to some input like user actions or changing properties.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#reusable-composable-controllers"&gt;
  &lt;/a&gt;
  Reusable, Composable Controllers
&lt;/h3&gt;

&lt;p&gt;Oftentimes when writing components, we come across a bit of logic or behaviour that repeats itself in multiple places. Things like handling user input, or asynchronously fetching data over the network can end up in most if not all of the components in a given project. Instead of copy-pasting snippets into our element definitions, there are better ways to share code across elements.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/"&gt;JavaScript class mixins&lt;/a&gt; are a time-tested way to share code between components. For example you might have a component which fetches a file based on it's &lt;code&gt;src&lt;/code&gt; attribute. A &lt;code&gt;FetchSrcMixin&lt;/code&gt; would let you write that code in one place, then reuse it anywhere.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;JSONFetcher&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;FetchSrcMixin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;HTMLElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/*...*/&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;TextFetcher&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;FetchSrcMixins&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;HTMLElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/*...*/&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;json-fetcher&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"lemurs.json"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/json-fetcher&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;text-fetcher&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"othello.txt"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/text-fetcher&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;But mixins have a limitation - they have an 'is-a-*' relationship to their element class. Adding a mixin to a class means that the result &lt;em&gt;is&lt;/em&gt; the combination of the base class and the mixin class. Since mixins are functions, we can compose them with &lt;a href="https://www.wikiwand.com/en/Function_composition"&gt;function composition&lt;/a&gt;, but if one of the composed mixins overrides a class member (e.g. field, method, accessor), there could be trouble.&lt;/p&gt;

&lt;p&gt;To solve this problem, the &lt;a href="https://lit.dev"&gt;Lit&lt;/a&gt; team recently released a new "composition primitive" called &lt;a href="https://lit.dev/docs/composition/controllers/"&gt;Reactive Controllers&lt;/a&gt;, which represent a 'has-a-*' relationship. A controller is a JavaScript class that contains a reference to the host element, which must implement a certain set of methods called the &lt;code&gt;ReactiveControllerHost&lt;/code&gt; interface.&lt;/p&gt;

&lt;p&gt;In plain terms, that means you can write a controller class and add it to any element class that meets certain criteria. A controller host can have multiple independent or interdependent controllers, a controller instance can have one host, controllers can independently reference shared state.&lt;/p&gt;

&lt;p&gt;If you're familiar with React hooks, you might recognize the pattern that controllers fit. The downside to hooks though is that you can only use them with React.&lt;/p&gt;

&lt;p&gt;Similarly, the downside to controllers vs mixins is that they require their host element class to fulfill certain criteria, namely: the class must implement the &lt;code&gt;ReactiveControllerHost&lt;/code&gt; interface.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Composable&lt;/th&gt;
&lt;th&gt;Reusable&lt;/th&gt;
&lt;th&gt;Stackable&lt;/th&gt;
&lt;th&gt;Independent&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Mixins&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;⚠️&lt;/td&gt;
&lt;td&gt;❌&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Controllers&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Unlike React, though, controllers can be made to work with components from different frameworks or custom element classes other than &lt;code&gt;LitElement&lt;/code&gt;. Controllers can work with &lt;a href="https://www.npmjs.com/package/@lit-labs/react#user-content-usecontroller"&gt;React&lt;/a&gt;, &lt;a href="https://stackblitz.com/edit/angular-ivy-uuiqpj?file=src%2Fapp%2Fangular-controller-host.ts"&gt;Angular&lt;/a&gt;, &lt;a href="https://stackblitz.com/edit/vue-qniewc?file=src%2Fcomponents%2FHelloWorld.vue"&gt;Vue&lt;/a&gt;, &lt;a href=""&gt;Haunted&lt;/a&gt;, and others by virtue of some clever glue-code.&lt;/p&gt;

&lt;p&gt;In my &lt;a href="https://next.apolloelements.dev"&gt;Apollo Elements&lt;/a&gt; project, I wrote some reactive controllers that do GraphQL operations like &lt;a href="https://next.apolloelements.dev/api/core/controllers/query/"&gt;queries&lt;/a&gt; and &lt;a href="https://next.apolloelements.dev/api/core/controllers/mutation/"&gt;mutations&lt;/a&gt;. I wanted to use those controllers in any custom element, so I decided to solve that problem with a class mixin called &lt;code&gt;ControllerHostMixin&lt;/code&gt;. By applying it to an element's base class, it adds the bare-minimum required to host a reactive controller. If you apply it to a base class that already implements the &lt;code&gt;ReactiveControllerHost&lt;/code&gt; interface, it defers to the superclass, so you could safely (if pointlessly) apply it to &lt;code&gt;LitElement&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#adding-controller-support-to-our-element"&gt;
  &lt;/a&gt;
  Adding Controller Support to our Element
&lt;/h2&gt;

&lt;p&gt;Let's update (controller pun!) our element to accept controllers. Open &lt;code&gt;color-picker.js&lt;/code&gt; and replace the contents with the following:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ControllerHostMixin&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://unpkg.com/@apollo-elements/mixins@next/controller-host-mixin.js?module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;template&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`
        &amp;lt;link rel="stylesheet" href="color-picker.css"&amp;gt;
        &amp;lt;div id="loupe"&amp;gt;&amp;lt;/div&amp;gt;
      `&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ColorPicker&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;ControllerHostMixin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;HTMLElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attachShadow&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cloneNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;color-picker&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ColorPicker&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Whoa what's that? We're loading the &lt;code&gt;ControllerHostMixin&lt;/code&gt; over the internet from a CDN, no &lt;code&gt;npm&lt;/code&gt; required!&lt;/p&gt;

&lt;p&gt;This time, when you save the file and the page reloads, it will take a moment before you see the colour picker, while the page loads the necessary files from unpkg. Subsequent reloads should be faster, thanks to the browser cache. Go ahead and save &lt;code&gt;colour-picker.js&lt;/code&gt; again to see what I mean.&lt;/p&gt;

&lt;p&gt;Now that we're set up to host reactive controllers, let's add one which tracks the position and state of the mouse. Open &lt;code&gt;mouse-controller.js&lt;/code&gt; and add the following content:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MouseController&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;down&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nx"&gt;onMousemove&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientY&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestUpdate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nx"&gt;onMousedown&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;down&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestUpdate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nx"&gt;onMouseup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;down&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestUpdate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;hostConnected&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mousemove&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onMousemove&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mousedown&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onMousedown&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mouseup&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onMouseup&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;hostDisconnected&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mousemove&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onMousemove&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mousedown&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onMousedown&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mouseup&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onMouseup&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Notice how this module has no imports of its own. Controllers don't have to bundle any dependencies, they can be as simple as a single class in a single module, like we have here. Notice also where we reference the &lt;code&gt;host&lt;/code&gt; element:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;in the &lt;code&gt;constructor&lt;/code&gt; by calling &lt;code&gt;addController()&lt;/code&gt; to register this as one of the element's controllers&lt;/li&gt;
&lt;li&gt;in &lt;code&gt;hostConnected&lt;/code&gt; and &lt;code&gt;hostDisconnected&lt;/code&gt; to run our setup and cleanup code&lt;/li&gt;
&lt;li&gt;in our MouseEvent handlers, calling &lt;code&gt;host.requestUpdate()&lt;/code&gt; to update the host element&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That &lt;code&gt;host.requestUpdate()&lt;/code&gt; call is especially important, it's how reactive controllers inform their hosts that they should re-render. Calling it kicks off an asynchronous pipeline which includes a call to the host's &lt;code&gt;update()&lt;/code&gt; method. Read &lt;a class="mentioned-user" href="https://dev.to/thepassle"&gt;@thepassle&lt;/a&gt;
 's &lt;a href="https://medium.com/ing-blog/litelement-a-deepdive-into-batched-updates-b9431509fc4f"&gt;formidable deep dive into the LitElement lifecycle&lt;/a&gt; for more details.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/open-wc" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EmZ94rR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--SnYBxgnG--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/501/9ba4eb08-4a8a-4415-81b7-ec290b867878.png" alt="Open Web Components"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ldZsP1nq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--a8AniliW--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/110622/7c29d8b9-87ed-4c37-9d9b-58dab015af58.png" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/open-wc/litelement-a-deepdive-into-batched-updates-3hh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;LitElement: A Deepdive Into Batched Updates&lt;/h2&gt;
      &lt;h3&gt;Pascal Schilp for Open Web Components ・ Dec 3 '20 ・ 14 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#litelement&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webcomponents&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#lithtml&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;p&gt;Let's add the &lt;code&gt;MouseController&lt;/code&gt; to our element and use &lt;code&gt;console.log&lt;/code&gt; to observe updates. in &lt;code&gt;color-picker.js&lt;/code&gt;, import the controller:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;MouseController&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./mouse-controller.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then add it to the element's class:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;mouse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MouseController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mouse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;
  Full source
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ControllerHostMixin&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://unpkg.com/@apollo-elements/mixins@next/controller-host-mixin.js?module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;MouseController&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./mouse-controller.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;template&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`
        &amp;lt;link rel="stylesheet" href="color-picker.css"&amp;gt;
        &amp;lt;div id="loupe"&amp;gt;&amp;lt;/div&amp;gt;
      `&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ColorPicker&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;ControllerHostMixin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;HTMLElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;mouse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MouseController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attachShadow&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cloneNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mouse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;color-picker&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ColorPicker&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;

&lt;p&gt;After saving, when you move the mouse around the screen, you'll see the mouse' position logged to the console. We're now ready to integrate the &lt;code&gt;MouseController&lt;/code&gt;'s reactive properties into our host element.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#hooking-up-the-cursor"&gt;
  &lt;/a&gt;
  Hooking up the Cursor
&lt;/h3&gt;

&lt;p&gt;We'd like our &lt;code&gt;#loupe&lt;/code&gt; element to move with the mouse cursor, and for it's background color to reflect the colour under the cursor. Edit the &lt;code&gt;update()&lt;/code&gt; method of our element like so, making sure &lt;em&gt;not to forget the &lt;code&gt;super.update()&lt;/code&gt; call&lt;/em&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mouse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientLeft&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mouse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientTop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientWidth&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientHeight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientWidth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;saturation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientHeight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--x&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--y&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--hue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--saturation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;saturation&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In short, we get the mouse position from the controller, compare it to the element's bounding rectangle, and if the one is within the other, we set the &lt;code&gt;--x&lt;/code&gt;, &lt;code&gt;--y&lt;/code&gt;, &lt;code&gt;--hue&lt;/code&gt;, and &lt;code&gt;--saturation&lt;/code&gt; CSS custom properties, which if you recall, control the &lt;code&gt;transform&lt;/code&gt; and &lt;code&gt;background&lt;/code&gt; properties on our &lt;code&gt;#loupe&lt;/code&gt; element. Save the file and enjoy the show.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#firing-events"&gt;
  &lt;/a&gt;
  Firing Events
&lt;/h2&gt;

&lt;p&gt;Ok, we've done the lion's share of the work, all we have left to do is communicate with the outside world. We're going to use the browser's built-in message channel to do that. Let's start by defining a private &lt;code&gt;#pick()&lt;/code&gt; method that fires a custom &lt;code&gt;pick&lt;/code&gt; event, and we'll add a &lt;code&gt;color&lt;/code&gt; property to our element to hold the most recently selected colour.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;pick&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getComputedStyle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loupe&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;getPropertyValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;background-color&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatchEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CustomEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pick&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let's listen for click events in our element, and fire our pick event.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attachShadow&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cloneNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;pick&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Add some user feedback by changing the loupe's border colour:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#loupe&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/* ... */&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-color&lt;/span&gt; &lt;span class="m"&gt;0.1s&lt;/span&gt; &lt;span class="n"&gt;ease-in-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let's also let the user scrub around the picker with the mouse down, we'll add some conditions to our update function, right before the super call:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--loupe-border-color&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mouse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;down&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;white&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;black&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mouse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;down&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;pick&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;
  Full source
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ControllerHostMixin&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://unpkg.com/@apollo-elements/mixins@next/controller-host-mixin.js?module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;MouseController&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./mouse-controller.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;template&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`
        &amp;lt;link rel="stylesheet" href="color-picker.css"&amp;gt;
        &amp;lt;div id="loupe"&amp;gt;&amp;lt;/div&amp;gt;
      `&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ColorPicker&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;ControllerHostMixin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;HTMLElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;mouse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MouseController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attachShadow&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cloneNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;pick&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mouse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientLeft&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mouse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientTop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientWidth&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientHeight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientWidth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;saturation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientHeight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--x&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--y&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--hue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--saturation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;saturation&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--loupe-border-color&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mouse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;down&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;white&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;black&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mouse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;down&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;pick&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;pick&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getComputedStyle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loupe&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;getPropertyValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;background-color&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatchEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CustomEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pick&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;color-picker&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ColorPicker&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#using-our-colour-picker"&gt;
  &lt;/a&gt;
  Using our Colour Picker
&lt;/h2&gt;

&lt;p&gt;With our custom element finished, let's hook it up to the document by listening for the &lt;code&gt;pick&lt;/code&gt; event. Edit &lt;code&gt;index.html&lt;/code&gt; and add an &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; element to display our picked colour and an inline script to listen for the &lt;code&gt;pick&lt;/code&gt; event. Let's also add some global styles in &lt;code&gt;style.css&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;color-picker&amp;gt;&amp;lt;/color-picker&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;output&amp;gt;&amp;lt;/output&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;color-picker&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pick&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;document&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;output&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;background-color&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;output&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;120px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;Well we're done! We've met all our goals from above with a few extras laid on top. You can play with a live example on Glitch:&lt;/p&gt;


&lt;div class="glitch-embed-wrap"&gt;
  &lt;iframe src="https://glitch.com/embed/#!/embed/controller-host-mixin-color-picker?previewSize=100&amp;amp;path=index.html" alt="controller-host-mixin-color-picker on glitch"&gt;&lt;/iframe&gt;
&lt;/div&gt;



&lt;p&gt;You can also follow along with the steps by tracing the commit history on GitHub:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bennypowers"&gt;
        bennypowers
      &lt;/a&gt; / &lt;a href="https://github.com/bennypowers/controller-host-color-picker"&gt;
        controller-host-color-picker
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Color Picker Web Component With Reactive Controller
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;Let's build a colour picker web component using HTML, CSS, and a little bit of JavaScript. In the end, we'll have a custom element that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Displays a colour spectrum using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/linear-gradient()" rel="nofollow"&gt;CSS Gradients&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Tracks the mouse position using a &lt;a href="https://lit.dev/docs/composition/controllers/" rel="nofollow"&gt;Reactive Controller&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Updates it's &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM" rel="nofollow"&gt;Shadow DOM&lt;/a&gt; via a small class mixin&lt;/li&gt;
&lt;li&gt;Fires a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent" rel="nofollow"&gt;Custom Event&lt;/a&gt; when the user clicks or drags&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Contents&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bennypowers/controller-host-color-picker/main/readme.md/#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bennypowers/controller-host-color-picker/main/readme.md/#setting-up"&gt;Setting Up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bennypowers/controller-host-color-picker/main/readme.md/#defining-our-element"&gt;Defining our Element&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bennypowers/controller-host-color-picker/main/readme.md/#styling-our-element"&gt;Styling our Element&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bennypowers/controller-host-color-picker/main/readme.md/#shadow-css-q-and-a"&gt;Shadow CSS Q-and-A&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bennypowers/controller-host-color-picker/main/readme.md/#color-picker-styles"&gt;Color Picker Styles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bennypowers/controller-host-color-picker/main/readme.md/#tracking-the-mouse-with-a-reactive-controller"&gt;Tracking the Mouse with a Reactive Controller&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bennypowers/controller-host-color-picker/main/readme.md/#reusable-composable-controllers"&gt;Reusable, Composable Controllers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bennypowers/controller-host-color-picker/main/readme.md/#adding-controller-support-to-our-element"&gt;Adding Controller Support to our Element&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bennypowers/controller-host-color-picker/main/readme.md/#hooking-up-the-cursor"&gt;Hooking up the Cursor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bennypowers/controller-host-color-picker/main/readme.md/#firing-events"&gt;Firing Events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bennypowers/controller-host-color-picker/main/readme.md/#using-our-colour-picker"&gt;Using our Colour Picker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bennypowers/controller-host-color-picker/main/readme.md/#next-steps"&gt;Next Steps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bennypowers/controller-host-color-picker/main/readme.md/#footnotes"&gt;Footnotes&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
Prerequisites&lt;/h2&gt;
&lt;p&gt;To get the most out of this article, you should have a comfortable understanding of HTML, CSS, and JavaScript; including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How to &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link" rel="nofollow"&gt;load resources with &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Basic &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps/Getting_started" rel="nofollow"&gt;CSS syntax&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;How to use the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model" rel="nofollow"&gt;DOM API&lt;/a&gt; to query for elements&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object-oriented_JS" rel="nofollow"&gt;Object-oriented programming&lt;/a&gt; for web developers and…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bennypowers/controller-host-color-picker"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Can you improve on the design? Here are some ideas to get your gears turning:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Display the picked colour in HEX, HSL, or RGB&lt;/li&gt;
&lt;li&gt;Use the picker in a popover menu&lt;/li&gt;
&lt;li&gt;Add a lightness slider&lt;/li&gt;
&lt;li&gt;Use alternate colour spaces&lt;/li&gt;
&lt;li&gt;Keep the loupe always within the colour picker area&lt;/li&gt;
&lt;li&gt;Animate the cursor&lt;/li&gt;
&lt;li&gt;Build a magnifying loupe element that wraps graphics elements&lt;/li&gt;
&lt;li&gt;Optimize the runtime performance or bundle size

&lt;ul&gt;
&lt;li&gt;How would you rewrite MouseController if you knew that an arbitrary multiple number of components in your app would use it?&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Show us what you come up with in the comments. If you're looking for a production-ready colour picker element, check out &lt;a class="mentioned-user" href="https://dev.to/webpadawan"&gt;@webpadawan&lt;/a&gt;
's &lt;a href="https://github.com/web-padawan/vanilla-colorful"&gt;&lt;code&gt;&amp;lt;vanilla-colorful&amp;gt;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#footnotes"&gt;
  &lt;/a&gt;
  Footnotes
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#inherited-styles"&gt;
  &lt;/a&gt;
  Inherited Styles
&lt;/h3&gt;

&lt;p&gt;While Shadow DOM does provide strong encapsulation, inherited CSS properties are able to 'pierce' the shadow boundary, so things like &lt;code&gt;color&lt;/code&gt;, &lt;code&gt;font-family&lt;/code&gt;, and any CSS custom properties can reach down into our shadow roots and style our private shadow DOM.&lt;/p&gt;

</description>
      <category>webcomponents</category>
      <category>html</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>6 skills you’ll need to master to become a web developer</title>
      <author>Christopher Glikpo</author>
      <pubDate>Fri, 25 Jun 2021 09:14:02 +0000</pubDate>
      <link>https://dev.to/cglikpo/6-skills-you-ll-need-to-master-to-become-a-web-developer-33ji</link>
      <guid>https://dev.to/cglikpo/6-skills-you-ll-need-to-master-to-become-a-web-developer-33ji</guid>
      <description>&lt;p&gt;You'll need a certain set of talents and abilities to be recruited as a web developer, which will help you reach great performance and success in this field. It can be difficult to know what skills a web developer should have when you first start out, so we put together a list of the most in-demand skills in this field.&lt;/p&gt;

&lt;p&gt;While the needed skill set for web developers varies depending on the business, you will undoubtedly encounter many of the important abilities on our list while looking for a web development job. Continue reading to learn what you'll need to succeed as a web developer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#communication-skills"&gt;
  &lt;/a&gt;
  Communication Skills
&lt;/h2&gt;

&lt;p&gt;The ability to communicate properly with clients and coworkers will save time, energy, and money for everyone.&lt;/p&gt;

&lt;p&gt;Because communication is a two-way street, be careful to pay attention to what others have to say.&lt;/p&gt;

&lt;p&gt;Learn how to have a fruitful conversation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#determination"&gt;
  &lt;/a&gt;
  Determination
&lt;/h2&gt;

&lt;p&gt;When things don't go your way, it's tempting to give up and throw in the towel.&lt;/p&gt;

&lt;p&gt;Maintaining your determination to complete what you've begun will offer you an advantage over your competitors.&lt;/p&gt;

&lt;p&gt;The majority of people quit up at the first hurdle; make sure you over it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creativity"&gt;
  &lt;/a&gt;
  Creativity
&lt;/h2&gt;

&lt;p&gt;If you can't sketch or paint well, you may believe you're not creative.&lt;/p&gt;

&lt;p&gt;This is not the case. Creativity occurs in a variety of forms and sizes.&lt;/p&gt;

&lt;p&gt;The capacity to think creatively about your business can offer you opportunities you never knew existed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#inquisitiveness"&gt;
  &lt;/a&gt;
  Inquisitiveness
&lt;/h2&gt;

&lt;p&gt;Your education will never be finished.&lt;/p&gt;

&lt;p&gt;There will always be more information to go through.&lt;/p&gt;

&lt;p&gt;You'll be astonished at what you can accomplish if you keep your mind open to new ideas.&lt;/p&gt;

&lt;p&gt;Set reasonable objectives for yourself and stick to them for the best results.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#problem-solving"&gt;
  &lt;/a&gt;
  Problem solving
&lt;/h2&gt;

&lt;p&gt;It's not about remembering syntax when it comes to web development.&lt;/p&gt;

&lt;p&gt;It's all about resolving the issue that has been given to you.&lt;/p&gt;

&lt;p&gt;Sharpening your problem-solving abilities will enable you to identify answers faster and apply them more effectively.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#humility"&gt;
  &lt;/a&gt;
  Humility
&lt;/h2&gt;

&lt;p&gt;Nobody enjoys a know-it-all.&lt;/p&gt;

&lt;p&gt;Maintain a sense of realism and realize that everyone knows something you don't.&lt;/p&gt;

&lt;p&gt;Make the most of it by cultivating meaningful friendships with like-minded people.&lt;/p&gt;

&lt;p&gt;As a result, everyone benefits from each other's knowledge and growth.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;I hope you now have a clear understanding of the abilities needed to be a successful web developer. It's not a problem if you don't have these abilities when you first start out as a web developer. Most of these may be improved with practice, thus the more you work as a web developer, the better you will become.&lt;/p&gt;

&lt;p&gt;Having your own personal web development projects is a great way to hone these abilities. Contribute to open source projects and provide tools or plugins if possible.&lt;/p&gt;

&lt;p&gt;Thank you guys for reading my posts.If you  want to learn more about Web Development, feel free to &lt;a href="https://www.youtube.com/c/ChristopherGlikpo/featured"&gt;follow me on Youtube!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>programming</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Why to Learn WEBPACK before diving into REACT?</title>
      <author>Suraj Narsale</author>
      <pubDate>Fri, 25 Jun 2021 08:57:59 +0000</pubDate>
      <link>https://dev.to/surajnarsale/learn-webpack-before-diving-into-react-4lk3</link>
      <guid>https://dev.to/surajnarsale/learn-webpack-before-diving-into-react-4lk3</guid>
      <description>&lt;h2&gt;
  &lt;a href="#globewithmeridianshow-browser-runs-javascript"&gt;
  &lt;/a&gt;
  🌐How browser runs JavaScript
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;   The browser contains a 🔥JavaScript engine that can be pointed as the 🎯brain of the browser.&lt;/li&gt;
&lt;li&gt;  Without JavaScript, the browser engine would not be able to read JavaScript files.&lt;/li&gt;
&lt;li&gt; So if your HTML file contains many script files, probably engine would load your files in the order which you don’t want.&lt;/li&gt;
&lt;li&gt;If you aren't dynamically loading scripts or marking them as defer or async, then scripts are loaded in the order encountered in the page. It doesn't matter whether it's an external script or an inline script - they are executed in the order they are encountered in the page.&lt;/li&gt;
&lt;li&gt;To setup the order of scripts would be the restless activity?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;To solve this problem&lt;/em&gt; 👋&lt;strong&gt;WEBPACK&lt;/strong&gt; &lt;em&gt;can come in handy.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whitecheckmark-what-is-webpack"&gt;
  &lt;/a&gt;
  ✅ What is WEBPACK?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  If you are into building moderns JavaScript apps, probably you would have come across the term &lt;strong&gt;webpack&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Webpack is a &lt;strong&gt;module bundler&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;It bundles all your JavaScript files and produces a single JavaScript  file, mostly called as &lt;strong&gt;production build file&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#whitecheckmark-why-to-use-webpack"&gt;
  &lt;/a&gt;
  ✅ Why to use WEBPACK?
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; So you don’t want to manage the order of dependencies.&lt;/li&gt;
&lt;li&gt;It converts all your JavaScript files into one big JavaScript file.&lt;/li&gt;
&lt;li&gt; It also converts all your CSS files into one single CSS file.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#whitecheckmark-how-webpack-worksslotmachine"&gt;
  &lt;/a&gt;
  ✅ How  WEBPACK works🎰?
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; It observes your import-export statements and builds a &lt;strong&gt;DEPENDENCY GRAPH&lt;/strong&gt;. Then it generates one or more bundles and pushes them into the production build folder

&lt;ol&gt;
&lt;li&gt;Webpack also takes your assets and converts them to dependencies.&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#whitecheckmark-principals-on-which-webpack-works"&gt;
  &lt;/a&gt;
  ✅  Principals on which WEBPACK works
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;You don't need to understand these below concepts. We will see these in practice in the next section. They are here to just give you an overview.&lt;/em&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;PRINCIPALS&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Entry&lt;/td&gt;
&lt;td&gt;Entry is the entry point for the application. It is the first module (JavaScript file)that Webpack will process to build out the full dependency graph&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Output&lt;/td&gt;
&lt;td&gt;Output point is where the files are to be written on disk with the name of the files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. Loaders&lt;/td&gt;
&lt;td&gt;Loaders can transform files from a different language (like TypeScript) to JavaScript or load inline images as data URLs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. Plugins&lt;/td&gt;
&lt;td&gt;Plugins handle the additional tasks that can’t be completed by a loader.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5. Mode&lt;/td&gt;
&lt;td&gt;Mode tells  Webpack which configuration and optimizations to use for your application.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#whitecheckmark-lets-get-to-the-playground"&gt;
  &lt;/a&gt;
  ✅ Let's get to the  playground
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;must have node installed.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#1-dependencies"&gt;
  &lt;/a&gt;
  👍 Dependencies
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;npm init -y&lt;/code&gt; : (Initialize node project)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm i wepack webpack-cli --save-dev&lt;/code&gt; : (They are installed as dev dependency cause they just become Single Page Application at the end during production.)&lt;/li&gt;
&lt;li&gt; &lt;code&gt;npm i svg-inline-loader --save-dev&lt;/code&gt;: (Just a random SVG dependency for our practice.) JavaScript is not able to load SVG files directly, so we are going to use the svg-inline-loader module.&lt;/li&gt;
&lt;li&gt; &lt;code&gt;npm i --save-dev css-loader&lt;/code&gt;: (css loader used to load css in html file)&lt;/li&gt;
&lt;li&gt; &lt;code&gt;npm i --save-dev babel-loader&lt;/code&gt;:(so that we can use modern JavaScript)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm i --save-dev html-webpack-plugin&lt;/code&gt;:(it injects your output code into html)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm i --save-dev webpack-dev-server&lt;/code&gt;:(dev server which fast reloads when you save your file.)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1-raw-webpackconfigjs-endraw-"&gt;
  &lt;/a&gt;
  👍&lt;code&gt;webpack.config.js&lt;/code&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create file  &lt;code&gt;webpack.config.js&lt;/code&gt; in the root folder.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Add following code in it&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;HtmlWebpackPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;html-webpack-plugin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app/index.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;svg$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;svg-inline-loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;css$/i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;style-loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;css-loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.(&lt;/span&gt;&lt;span class="sr"&gt;js&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;babel-loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
     &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dist&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bundle.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
     &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HtmlWebpackPlugin&lt;/span&gt;&lt;span class="p"&gt;()],&lt;/span&gt;
     &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NODE_ENV&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;production&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;production&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-webpackconfigjs-endraw-explained"&gt;
  &lt;/a&gt;
  &lt;code&gt;webpack.config.js&lt;/code&gt; Explained
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;entry&lt;/code&gt;: 
-- In the above code, we defined entry point to our codebase ie. &lt;code&gt;entry: "./src/index.js",&lt;/code&gt;JavaScript engine would start to read code from this file.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;modules&lt;/code&gt;: &lt;/li&gt;
&lt;li&gt;We also defined some loaders like  &lt;code&gt;svg-inline-loader&lt;/code&gt;  &amp;amp;  &lt;code&gt;css-loader&lt;/code&gt;
  --css-loader uses &lt;code&gt;style-loader&lt;/code&gt; under the hood.
          &lt;code&gt;rules&lt;/code&gt; defines some rules
      &lt;code&gt;test&lt;/code&gt; search files with given extention
      &lt;code&gt;use&lt;/code&gt; when files with given extention is found use particular loader&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;output&lt;/code&gt;:&lt;/li&gt;
&lt;li&gt; It defines the path of the output file&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;plugins&lt;/code&gt;:
    - &lt;code&gt;html-webpack-plugin&lt;/code&gt; : It  generates&lt;code&gt;index.html&lt;/code&gt; file &amp;amp; takes output file from above and injects it into &lt;code&gt;index.html&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;mode&lt;/code&gt;:
    - It says whether code should be in &lt;strong&gt;production mode&lt;/strong&gt; or &lt;strong&gt;development mode&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1-raw-packagejson-endraw-"&gt;
  &lt;/a&gt;
  👍&lt;code&gt;package.json&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Add these two scripts in package.json&lt;/em&gt;&lt;br&gt;
✔️ For macOS users&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scripts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webpack serve&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;build&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;NODE_ENV='production' webpack&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;✔️For Window users&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scripts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webpack serve&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;build&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SET NODE_ENV='production' &amp;amp; webpack&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;"start":"webpack"&lt;/code&gt;: It seraches in node_modules for webpack&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;"build":"SET NODE_ENV='production' &amp;amp; webpack"&lt;/code&gt; : It creates dist folder which can be used for production.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1-raw-indexjs-endraw-"&gt;
  &lt;/a&gt;
  👍&lt;code&gt;index.js&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;create &lt;code&gt;app/index.js&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Add following code in it&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Monday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Tuesday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Wednesday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Thursday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Friday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Saturday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#whitecheckmark-conclusion"&gt;
  &lt;/a&gt;
  ✅ Conclusion
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;If you run the &lt;code&gt;start&lt;/code&gt; script you can see our app running in the browser.&lt;/li&gt;
&lt;li&gt;If you run the &lt;code&gt;build&lt;/code&gt; script you can see webpack creates dist folder which is our production build.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Finally, we can see the JS file running in the browser is nothing but the bundle.js.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H6F7CSyK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9zh03umtnw5s0vf3ij2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H6F7CSyK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9zh03umtnw5s0vf3ij2.png" alt="Browser file"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webpack</category>
      <category>javascipt</category>
      <category>modulebundler</category>
    </item>
    <item>
      <title>Solution: Redundant Connection</title>
      <author>seanpgallivan</author>
      <pubDate>Fri, 25 Jun 2021 08:37:14 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-redundant-connection-44ha</link>
      <guid>https://dev.to/seanpgallivan/solution-redundant-connection-44ha</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/redundant-connection/discuss/1295728"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-684-medium-redundant-connection"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/redundant-connection/"&gt;Leetcode Problem #684 (&lt;em&gt;Medium&lt;/em&gt;): Redundant Connection&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In this problem, a tree is an &lt;strong&gt;undirected graph&lt;/strong&gt; that is connected and has no cycles.&lt;/p&gt;

&lt;p&gt;You are given a graph that started as a tree with &lt;code&gt;n&lt;/code&gt; nodes labeled from &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;n&lt;/code&gt;, with one additional edge added. The added edge has two &lt;strong&gt;different&lt;/strong&gt; vertices chosen from &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;n&lt;/code&gt;, and was not an edge that already existed. The graph is represented as an array &lt;code&gt;edges&lt;/code&gt; of length &lt;code&gt;n&lt;/code&gt; where &lt;code&gt;edges[i] = [ai, bi]&lt;/code&gt; indicates that there is an edge between nodes &lt;code&gt;ai&lt;/code&gt; and &lt;code&gt;bi&lt;/code&gt; in the graph.&lt;/p&gt;

&lt;p&gt;Return an edge that can be removed so that the resulting graph is a tree of &lt;code&gt;n&lt;/code&gt; nodes. If there are multiple answers, return the answer that occurs last in the input.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;edges = [[1,2],[1,3],[2,3]]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[2,3]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uyJyYGIX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.leetcode.com/uploads/2021/05/02/reduntant1-1-graph.jpg" alt="Example 1 Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;edges = [[1,2],[2,3],[3,4],[1,4],[1,5]]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[1,4]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MS30yLf3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.leetcode.com/uploads/2021/05/02/reduntant1-2-graph.jpg" alt="Example 2 Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;n == edges.length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3 &amp;lt;= n &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;edges[i].length == 2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= ai &amp;lt; bi &amp;lt;= edges.length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ai != bi&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;There are no repeated edges.&lt;/li&gt;
&lt;li&gt;The given graph is connected.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;In this problem, the redundant edge will be the one that links together an already-linked graph. To determine whether already-seen segments of the graph have been connected, we can use a simple &lt;strong&gt;union-find&lt;/strong&gt; (&lt;strong&gt;UF&lt;/strong&gt;) implementation to keep track of the different segments.&lt;/p&gt;

&lt;p&gt;With &lt;strong&gt;UF&lt;/strong&gt;, we must define two functions: &lt;strong&gt;union&lt;/strong&gt; and &lt;strong&gt;find&lt;/strong&gt;. The &lt;strong&gt;find&lt;/strong&gt; function will &lt;strong&gt;recursively&lt;/strong&gt; trace a node's lineage back to its ultimate parent and update its value in the parent array (&lt;strong&gt;par&lt;/strong&gt;), providing a shortcut for the next link.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;union&lt;/strong&gt; function merges two segments by assigning the ultimate parent of one segment to another.&lt;/p&gt;

&lt;p&gt;We can iterate through &lt;strong&gt;edges&lt;/strong&gt; and &lt;strong&gt;find&lt;/strong&gt; both vertices of the edge to see if they belong to the same segment. If so, we've located our redundant edge and can &lt;strong&gt;return&lt;/strong&gt; it. If not, we should merge the two different segments with &lt;strong&gt;union&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N)&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; is the length of &lt;strong&gt;edges&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(N)&lt;/strong&gt; for &lt;strong&gt;par&lt;/strong&gt; and the recursion stack&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;findRedundantConnection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;edges&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;par&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;edges&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;find&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;par&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;par&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;par&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;par&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;union&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;par&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;edges&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;union&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;findRedundantConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;edges&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;par&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;edges&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;union&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;edges&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;union&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="nf"&gt;findRedundantConnection&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="n"&gt;edges&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;par&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;edges&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
            &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;edges&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nf"&gt;union&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;edges&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;union&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;findRedundantConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;edges&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;edges&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;edges&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;uniun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;edges&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nl"&gt;private:&lt;/span&gt;
    &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;uniun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>10 Websites To Find Your Next Programming Course</title>
      <author>Vishnu Chilamakuru</author>
      <pubDate>Fri, 25 Jun 2021 08:36:55 +0000</pubDate>
      <link>https://dev.to/vishnuchilamakuru/10-websites-to-find-your-next-programming-course-526l</link>
      <guid>https://dev.to/vishnuchilamakuru/10-websites-to-find-your-next-programming-course-526l</guid>
      <description>&lt;p&gt;In this blog, I will list the Top 10 Popular Websites where you can find Programming-related courses covering multiple topics including Frontend &amp;amp; Backend Development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-freecodecamp"&gt;
  &lt;/a&gt;
  1. Freecodecamp
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PDn6I1Ji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--lfMhrPQM--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_900%2Cq_auto%2Cw_1600/https://dev-to-uploads.s3.amazonaws.com/i/rphqzfoh2cbz3zj8m8t1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PDn6I1Ji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--lfMhrPQM--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_900%2Cq_auto%2Cw_1600/https://dev-to-uploads.s3.amazonaws.com/i/rphqzfoh2cbz3zj8m8t1.png" alt="freecodecamp-logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.freecodecamp.org/"&gt;Freecodecamp&lt;/a&gt; provides multiple courses starting from Python, Responsive Web Design, Javascript Algorithms &amp;amp; Data Structures, React, Machine Learning, Data Analysis, etc...&lt;/p&gt;

&lt;p&gt;They also offer tutorials/courses on how to build real-world applications in multiple programming languages like Ruby on Rails, Python, Node Js, etc... in their &lt;a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ"&gt;YouTube Channel&lt;/a&gt; and its pretty popular one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-coursera"&gt;
  &lt;/a&gt;
  2. Coursera
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7o0cbO1h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mms.businesswire.com/media/20210330006145/en/868463/22/coursera-logo-full-rgb_%25282%2529.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7o0cbO1h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mms.businesswire.com/media/20210330006145/en/868463/22/coursera-logo-full-rgb_%25282%2529.jpg" alt="coursera-logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.coursera.org/"&gt;Coursera&lt;/a&gt; is a popular website where you can find courses from popular Ivy League colleges. It provides courses in multiple subjects ranging from Programming Languages, Data Engineering, Machine Learning, Mobile Development, Cloud Computing, etc...&lt;/p&gt;

&lt;p&gt;It offers Paid certifications and Free courses as well. If you want to just learn the contents of the course irrespective of certification you can just Audit the course.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-udemy"&gt;
  &lt;/a&gt;
  3. Udemy
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FVZGV1EM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thesecurityhub.org/wp-content/uploads/2021/04/Udemy-1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FVZGV1EM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thesecurityhub.org/wp-content/uploads/2021/04/Udemy-1.jpg" alt="udemy-logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/"&gt;Udemy&lt;/a&gt; is the most popular website where most of the developers and people from the tech community refer to. Udemy is pretty much like a marketplace of courses where Instructors can signup and create courses. If you are an expert in any domain you can create a course on the same and upload it in Udemy. &lt;/p&gt;

&lt;p&gt;Udemy has many great courses for almost all Programming Languages, Databases, Mobile development, Frontend, and Backend technologies.&lt;/p&gt;

&lt;p&gt;Most of the Udemy Courses are paid courses. It offers great discounts on selected courses most of the time. So make sure u check out offers for your course before you purchase it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-linkedin-learning"&gt;
  &lt;/a&gt;
  4. LinkedIn Learning
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vr7otb-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3.amazonaws.com/media.al-fanarmedia.org/wp-content/uploads/2020/04/29065717/linkedin-learning-%25D9%2584%25D9%258A%25D9%2586%25D9%2583%25D8%25AF-%25D8%25A5%25D9%2586.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vr7otb-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3.amazonaws.com/media.al-fanarmedia.org/wp-content/uploads/2020/04/29065717/linkedin-learning-%25D9%2584%25D9%258A%25D9%2586%25D9%2583%25D8%25AF-%25D8%25A5%25D9%2586.jpg" alt="linkedin-learning"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/learning"&gt;LinkedIn Learning&lt;/a&gt; offers video courses often taught by domain and industry experts in business, leadership, creative, and software technologies. It is one of the subsidiaries of LinkedIn. Most of the courses in LinkedIn Learning fall into 3 categories.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Business&lt;/li&gt;
&lt;li&gt;Creative&lt;/li&gt;
&lt;li&gt;Technology&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It offers paid courses and the first month of your LinkedIn learning is free.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-pluralsight"&gt;
  &lt;/a&gt;
  5. Pluralsight
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ApPFJiFU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jamiemaguire.net/wp-content/uploads/2020/02/2020-02-04_14-11-53.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ApPFJiFU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jamiemaguire.net/wp-content/uploads/2020/02/2020-02-04_14-11-53.png" alt="pluralsight-logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.pluralsight.com/"&gt;Pluralsight&lt;/a&gt; offers a variety of video training courses for software developers, IT administrators, and creative professionals. It provides multiple products like &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Paths - Where courses are curated by Experts based on difficulty level to learn the skill. &lt;/li&gt;
&lt;li&gt;Course Discussions - Where you can engage and discuss with the community and experts to discuss course-related topics.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It offers paid courses and the first 10 days of free subscription on signup.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-udacity"&gt;
  &lt;/a&gt;
  6. Udacity
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sl_JISlp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ideahuntr.com/wp-content/uploads/2021/03/Udacity-Running-a-Flash-Sale-75-Off-Through-the-End.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sl_JISlp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ideahuntr.com/wp-content/uploads/2021/03/Udacity-Running-a-Flash-Sale-75-Off-Through-the-End.png" alt="udacity-logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.udacity.com/"&gt;Udacity&lt;/a&gt; offers Nanodegree programs that are built in partnership with the tech companies and taught by industry leaders like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Google&lt;/li&gt;
&lt;li&gt;Amazon&lt;/li&gt;
&lt;li&gt;IBM&lt;/li&gt;
&lt;li&gt;Microsoft &lt;/li&gt;
&lt;li&gt;Intel etc...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It provides courses in subjects like Programming, Databases, Machine Learning, Artificial Intelligence, Robotics, Self-Driving Cars, etc...It also provides financial aid to the learners based on their merit and performance in the Nanodegree Program.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-futurelearn"&gt;
  &lt;/a&gt;
  7. FutureLearn
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JdBzHbjx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.kent.ac.uk/media/news/2020/12/00_FL_Main_logo_RGB-e1607088347134.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JdBzHbjx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.kent.ac.uk/media/news/2020/12/00_FL_Main_logo_RGB-e1607088347134.jpeg" alt="futurelearn"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.futurelearn.com/"&gt;FutureLearn&lt;/a&gt; is a UK-based digital educational platform founded in 2012. It is a Massive Open Online Course learning platform and it has almost 250 UK + International partners offering courses in multiple subjects ranging from Business, Creative Arts, Healthcare, IT &amp;amp; Computer Science, Law, Literature, etc...&lt;/p&gt;

&lt;p&gt;It offers a flexible monthly subscription plan and a 7-day free trial as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-datacamp"&gt;
  &lt;/a&gt;
  8. Datacamp
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iYQQOJwt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dyd911kmh/image/upload/f_auto%2Cq_auto:best/v1603223608/DC_New_mugdv8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iYQQOJwt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dyd911kmh/image/upload/f_auto%2Cq_auto:best/v1603223608/DC_New_mugdv8.png" alt="datacamp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.datacamp.com/"&gt;Datacamp&lt;/a&gt; provides specialization courses related to &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Data Engineering&lt;/li&gt;
&lt;li&gt;Machine Learning&lt;/li&gt;
&lt;li&gt;Artificial Intelligence&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It provides Courses, Career and Skill Tracks on Data courses with R, Python, etc...If you are someone who is looking for Data Engineering related courses, this is the best place to start. It offers Personal and Business plans with different pricing levels.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-educative"&gt;
  &lt;/a&gt;
  9. Educative
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HmIGmkNr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://couponbarrow.com/wp-content/uploads/2020/06/educative.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HmIGmkNr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://couponbarrow.com/wp-content/uploads/2020/06/educative.jpg" alt="educative"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/"&gt;Educative&lt;/a&gt; provides technology courses where you can learn without the hassle of environment setup or videos. It is trusted by the learners working in tech giants like Microsoft, Netflix, Facebook, Google, etc... (as mentioned on the website).&lt;/p&gt;

&lt;p&gt;Learners can buy a monthly/annual subscription plan or can purchase the individual course.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-treehouse"&gt;
  &lt;/a&gt;
  10. Treehouse
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Yw3ECqO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://couponbarrow.com/wp-content/uploads/2017/06/teamtreehouse-discount-coupon.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Yw3ECqO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://couponbarrow.com/wp-content/uploads/2017/06/teamtreehouse-discount-coupon.jpg" alt="treehouse"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://teamtreehouse.com/"&gt;Treehouse&lt;/a&gt; or is an online technology school that offers beginner to advanced courses in &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web Design&lt;/li&gt;
&lt;li&gt;Web Development&lt;/li&gt;
&lt;li&gt;Mobile Development&lt;/li&gt;
&lt;li&gt;Game Development. 
Its courses are aimed at beginners looking to learn coding skills for a career in the tech industry.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It offers a 7-day free trial as well after which you need to subscribe for monthly plans.&lt;/p&gt;

&lt;p&gt;Hope you like the article.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  Thank you for reading
&lt;/h2&gt;

&lt;p&gt;Hope you find these resources useful. If you like what you read and want to see more about system design, microservices, and other technology-related stuff... You can follow me on &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Twitter - &lt;a href="https://twitter.com/vishnuchi?ref_src=twsrc%5Etfw"&gt;Follow @vishnuchi&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Subscribe to my weekly newsletter &lt;a href="https://www.getrevue.co/profile/vishnuch"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>codenewbie</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Tcp, Udp, Http </title>
      <author>PHAGUN JAIN</author>
      <pubDate>Fri, 25 Jun 2021 08:36:47 +0000</pubDate>
      <link>https://dev.to/phagunjain/tcp-udp-http-4595</link>
      <guid>https://dev.to/phagunjain/tcp-udp-http-4595</guid>
      <description>&lt;p&gt;Many times while learning about web applications and application architcture, it is common to get across some basic concepts related to computer networks, I got across terms "tcp/udp" "http/https" "ssl/tls" quite a lot and realised that i dont understand these terms correcltly, so as a result of re-learning those terms related to networking am writing this post this is more of a revision note for myself :}&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;before starting it will be great to mention about &lt;strong&gt;OSI model&lt;/strong&gt; &lt;br&gt;
OSI model is a set of standardized rules that specifies the communication functions of a computer networking system. This model divides the transfer process of a data  from one computer to another into 7 layers task, such that each layer serves to the next layer of completing the required task.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#layer-architecture"&gt;
  &lt;/a&gt;
  Layer Architecture
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Layer 1: Physical Layer&lt;/li&gt;
&lt;li&gt;Layer 2: Data Link Layer&lt;/li&gt;
&lt;li&gt;Layer 3: Network Layer&lt;/li&gt;
&lt;li&gt;Layer 4: Transport Layer&lt;/li&gt;
&lt;li&gt;Layer 5: Session Layer&lt;/li&gt;
&lt;li&gt;Layer 6: Presentation Layer&lt;/li&gt;
&lt;li&gt;Layer 7: Application Layer&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;not going in the the depth&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;now, before going to protocols one doubt i got was:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;why are there two protocols like http, and tcp/udp &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and these are mentioned quite often so i was confused, after some reading online i realized http and tcp are not alternatives, These protocols work in two different layers. Infact,  HTTP needs some transport layer protocol. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-http"&gt;
  &lt;/a&gt;
  what is http?
&lt;/h2&gt;

&lt;p&gt;HTTP is a Hypertext Transfer Protocol. It works in the layer 7 or application layer and it fetches resources such as HTML documents. It is used for exchanging data on the Web and is a client-server protocol which means requests are initiated by the recipient usually the Web browser.&lt;br&gt;
HTTP clients generally use Transmission Control Protocol (TCP) connection to communicate with servers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-tcp"&gt;
  &lt;/a&gt;
  what is tcp?
&lt;/h2&gt;

&lt;p&gt;TCP is Transmission Control Protocol, It works in layer 4 or transport layer it states a connection is established and maintained until the application data at each end have finished exchange. TCP breaks application data into packets. This packet delivers to the transport layer.&lt;/p&gt;

&lt;p&gt;now where tcp ensures that all the packets are received by retransmitting any defected of lost packets sometimes this is not required then udp comes in to picture it does not retransmit the dropped packets thus ensuring fast delivery hence when the requirement is of fast delivery rather than of ensuring everything is deliverd udp is preferred.&lt;/p&gt;

&lt;p&gt;that's it thanks for reading :)&lt;/p&gt;

</description>
      <category>protocols</category>
      <category>http</category>
      <category>tls</category>
      <category>ssl</category>
    </item>
    <item>
      <title>pdb | ipdb in docker-compose, enable interactive debugging</title>
      <author>zahaar</author>
      <pubDate>Fri, 25 Jun 2021 08:29:44 +0000</pubDate>
      <link>https://dev.to/zahaar/pdb-ipdb-in-docker-compose-enable-interactive-debugging-1goj</link>
      <guid>https://dev.to/zahaar/pdb-ipdb-in-docker-compose-enable-interactive-debugging-1goj</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;code&gt;pdb&lt;/code&gt;&lt;/strong&gt; is a powerful debugging tool that is included as a Python standard library. It can seriously speed up, our debug process, while resolving certain bugs&lt;/p&gt;

&lt;p&gt;for this &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#problematic"&gt;
  &lt;/a&gt;
  Problematic
&lt;/h2&gt;

&lt;p&gt;Trying to initiate the &lt;code&gt;pdb&lt;/code&gt; in your &lt;code&gt;docker-compose&lt;/code&gt; container will result in the following error.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;...
...
    &lt;span class="k"&gt;return &lt;/span&gt;self.view_functions[rule.endpoint]&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;**&lt;/span&gt;req.view_args&lt;span class="o"&gt;)&lt;/span&gt;
  File &lt;span class="s2"&gt;"/backend/app.py"&lt;/span&gt;, line 25, &lt;span class="k"&gt;in &lt;/span&gt;test_response
    &lt;span class="k"&gt;return &lt;/span&gt;response
  File &lt;span class="s2"&gt;"/backend/app.py"&lt;/span&gt;, line 25, &lt;span class="k"&gt;in &lt;/span&gt;test_response
    &lt;span class="k"&gt;return &lt;/span&gt;response
  File &lt;span class="s2"&gt;"/usr/local/lib/python3.9/bdb.py"&lt;/span&gt;, line 88, &lt;span class="k"&gt;in &lt;/span&gt;trace_dispatch
    &lt;span class="k"&gt;return &lt;/span&gt;self.dispatch_line&lt;span class="o"&gt;(&lt;/span&gt;frame&lt;span class="o"&gt;)&lt;/span&gt;
  File &lt;span class="s2"&gt;"/usr/local/lib/python3.9/bdb.py"&lt;/span&gt;, line 113, &lt;span class="k"&gt;in &lt;/span&gt;dispatch_line
    &lt;span class="k"&gt;if &lt;/span&gt;self.quitting: raise BdbQuit
bdb.BdbQuit

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;that happens only if you try to run &lt;code&gt;pdb&lt;/code&gt; in &lt;code&gt;docker-compose&lt;/code&gt; and not via &lt;code&gt;docker run ...&lt;/code&gt;, due to &lt;code&gt;up&lt;/code&gt; not being an interactive command by design.&lt;br&gt;&lt;br&gt;
more on this topic: &lt;a href="https://github.com/docker/compose/issues/4677"&gt;https://github.com/docker/compose/issues/4677&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;you can try in out yourself:&lt;/p&gt;

&lt;p&gt;step 1.  clone the repo setup repo with the minimal &lt;code&gt;Flask&lt;/code&gt; app in &lt;code&gt;docker-compose&lt;/code&gt;. &lt;br&gt;
&lt;code&gt;https://github.com/zahaar/docker-pdb-interactive-debugging/&lt;br&gt;
&lt;/code&gt;&lt;br&gt;
step 2. &lt;code&gt;cd docker-pdb-interactive-debugging&lt;/code&gt;&lt;br&gt;
step 3. checkout on &lt;code&gt;docker-error&lt;/code&gt; branch&lt;br&gt;
&lt;code&gt;git checkout docker-error&lt;/code&gt;&lt;br&gt;
step 4. run &lt;code&gt;docker compose up&lt;/code&gt;, or &lt;code&gt;docker-compose up&lt;/code&gt; if you are using old docker CLI version&lt;br&gt;
step 5. in a separate shell run &lt;code&gt;curl&lt;/code&gt; command.&lt;br&gt;&lt;br&gt;
&lt;code&gt;curl -XGET 'http://localhost:5000/api/v1.0/the_answer'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;you would see the expected &lt;code&gt;pdb.DdbQuit&lt;/code&gt; exception error:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
...
  File "/usr/local/lib/python3.9/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;pdb&lt;/code&gt; expects an open TTY, so let's add it to our &lt;code&gt;compose&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
...
    ports:
      - '5000:5000'
    stdin_open: true # für pdb
    tty: true # für pdb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let's try recreating the steps:&lt;/p&gt;

&lt;p&gt;Step 1. &lt;code&gt;git clone https://github.com/zahaar/docker-pdb-interactive-debugging/&lt;/code&gt;, but on a &lt;code&gt;main&lt;/code&gt; branch this time&lt;br&gt;
Step 2. &lt;code&gt;docker compose up&lt;/code&gt;&lt;br&gt;
Step 3. In a separate shell window attach local input to a running container, by running.&lt;br&gt;&lt;br&gt;
&lt;code&gt;docker attach docker-interractive-debugging_api_1 // container name&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note we have this capability only after opening an TTY for our container&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Step 4. In a separate shell window run.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl -XGET 'http://localhost:5000/api/v1.0/the_answer'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Step 5. now in the window where container output was &lt;code&gt;attached&lt;/code&gt; you would see, &lt;code&gt;pdb&lt;/code&gt; waiting for commands.&lt;br&gt;&lt;br&gt;
you can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;p true_response&lt;/code&gt; to print the value of the variable &lt;code&gt;true_response&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;c&lt;/code&gt; to resume normal flow&lt;/li&gt;
&lt;li&gt;to all other crazy things with &lt;code&gt;pdb&lt;/code&gt; !!!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's it. Easy.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Important Note&lt;/strong&gt;: to stop attached window without stopping the &lt;strong&gt;main&lt;/strong&gt; running container, you have to use,&lt;br&gt;&lt;br&gt;
escape sequence: &lt;code&gt;CTRL + p -&amp;gt; CTRL + q&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#tip"&gt;
  &lt;/a&gt;
  Tip:
&lt;/h2&gt;

&lt;p&gt;checkout &lt;code&gt;pdb&lt;/code&gt; commands cheatsheet &lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



</description>
      <category>pdb</category>
      <category>python</category>
      <category>docker</category>
    </item>
    <item>
      <title>12 Must Have Browser Extensions for Developers</title>
      <author>Bobby Iliev</author>
      <pubDate>Fri, 25 Jun 2021 08:21:59 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/12-must-have-browser-extensions-for-developers-5lf</link>
      <guid>https://dev.to/bobbyiliev/12-must-have-browser-extensions-for-developers-5lf</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;One of the cool things about using Chrome as your default browser is all the extensions you can use. Google Chrome extensions are programs created by different developers that change your browser's functionality. Whether you are a Web Developer or not, thousands of different extensions can help you and make your time on Chrome more easy and enjoyable. &lt;/p&gt;

&lt;p&gt;In this post, we are gonna take at you some of the most useful extensions. Some of these extensions are going to be of help to you even if you are not a Web Developer. So make sure to check the whole post out.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-daily-dev"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://daily.dev/"&gt;Daily Dev&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Daily Dev is one of the best sources for programming news. There are lots of helpful articles that can help anyone out. This extension is awesome because whenever you open a new tab, Daily Dev will open itself. And if you're wondering, no, it isn't going to slow down your computer or laptop. It runs smoothly, and it keeps you up to date with what's going on in the community.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-lastpass"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://www.lastpass.com/"&gt;LastPass&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Imagine having to remember 100 different usernames and passwords for different websites. That's where LastPass comes in. LastPass is a password manager in which you can store all of your passwords in one safe place. The only thing you have to remember is your &lt;strong&gt;master password&lt;/strong&gt;. This password lets you go into the &lt;strong&gt;vault&lt;/strong&gt; where all of your usernames, emails, and passwords are stored. LastPass is a lifesaver.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-grammarly"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://www.grammarly.com/"&gt;Grammarly&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This extension is probably the most helpful one. It detects grammar, spelling, punctuation mistakes. There is a small chance of it detecting a false mistake, but it hardly happens. The best thing is that it is free. There is a premium version with a monthly payment as well, which goes more in-depth with your word choice, tone, and style mistakes. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-website-blocker"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://chrome.google.com/webstore/detail/website-blocker-beta/hclgegipaehbigmbhdpfapmjadbaldib"&gt;Website Blocker&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Don't you hate it when you've planned to have a super productive day, and by the end of it, you've rewatched the entire first season of Game Of Thrones. Well, this thing happens to a lot of us. Maybe not as extreme as the example I just gave. But it's a common thing to get distracted with something. So this is where this extension comes in. The &lt;strong&gt;Website Blocker&lt;/strong&gt; extension does exactly what it sounds like. It blocks websites of your choice. You can select, for example, Netflix and block it for a certain amount of time. Let's say you've decided to learn 3 hours today, so you can quickly block all of the sites that you may get distracted with for that time and enjoy a peaceful time studying.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-colorzilla"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://www.colorzilla.com/"&gt;ColorZilla&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;ColorZilla is a beneficial extension that helps you find those amazing colors on a random website. For example, you've found an amazing shade of pink that you would love to add to your portfolio website. With ColorZilla, you can just choose that color, and it will copy it and show it in RGB or HEX. This is a super useful extension for Front End Developers that want to create some amazing and colorful webpages.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6-%D1%82odoist"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://todoist.com/home"&gt;Тodoist&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This extension helps you is plan your day. You can set your studying hours, your break time, or your Game Of Thrones time of the day. It is an essential thing to have your day organized. So &lt;strong&gt;todoist&lt;/strong&gt; is the perfect extension for this.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7-web-activity-time-tracker"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://chrome.google.com/webstore/detail/web-activity-time-tracker/hhfnghjdeddcfegfekjeihfmbjenlomm"&gt;Web Activity Time Tracker&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;It's a good thing to see how you spend your time. You can think you've been productive, but in reality, you're spending most of your time watching cat videos on youtube. This extension shows you how much time you've spent on a certain website. So it's good to see how you're spending your time in front of the screen and where you need to reduce some of that time.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#8-cssviewer"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://chrome.google.com/webstore/detail/cssviewer/ggfgijbpiheegefliciemofobhmofgce?hl=bg"&gt;CSSViewer&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This is a must-have extension for Front End Developer. It helps you see the CSS that is used on different websites. There is some amazing and unique stuff that would be great to add to your website. So with CSSViewer, you can get the code of the certain part of the website that you want and use it in your creations.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#9-lorem-ipsum-generator-default-text"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://chrome.google.com/webstore/detail/lorem-ipsum-generator-def/mcdcbjjoakogbcopinefncmkcamnfkdb?hl=bg"&gt;Lorem Ipsum Generator (Default Text)&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Everyone should know what Lorem Ipsum is. It's the dummy text that you use to see how some text would look on your website. With this extension, you can generate whole paragraphs with as many sentences as you want. It definitely helps you out a lot when u want to add lots of text to your website to see how it looks.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#10-wappalyzer"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://chrome.google.com/webstore/detail/wappalyzer/gppongmhjkpfnbhagpmjfkannfbllamg"&gt;Wappalyzer&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This is an amazing extension that shows you what other websites are built with. It shows you what CMS a certain website is using, and it also shows you what framework, e-commerce platform, Web Server, and many more things the website of your choice is working with.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#11-jsonview"&gt;
  &lt;/a&gt;
  11. &lt;a href="https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc?hl=bg"&gt;JSONView&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This extension helps you validate and view JSON documents. Another must-have extension for any developer.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#12-clear-cache"&gt;
  &lt;/a&gt;
  12. &lt;a href="https://chrome.google.com/webstore/detail/clear-cache/cppjkneekbjaeellbfkmgnhonkkjfpdn?hl=bg"&gt;Clear Cache&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Don't you hate it when you've just made some changes to your website, and then it takes some time to see them because your cache isn't cleared. Well, this little extension will save you from that. Just by pressing the icon, your cache clears straight away. And it's always good to have it cleared out often.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Extensions can be life-savers for many of us, and they can make working and creating things a lot more enjoyable.&lt;/p&gt;

&lt;p&gt;What are your top browser extensions that you use on daily basis?&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
