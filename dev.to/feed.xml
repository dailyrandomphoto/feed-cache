<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Solution: Minimum Moves to Equal Array Elements II</title>
      <author>seanpgallivan</author>
      <pubDate>Wed, 19 May 2021 10:12:19 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-minimum-moves-to-equal-array-elements-ii-oej</link>
      <guid>https://dev.to/seanpgallivan/solution-minimum-moves-to-equal-array-elements-ii-oej</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii/discuss/1217591"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-462-medium-minimum-moves-to-equal-array-elements-ii"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii/"&gt;Leetcode Problem #462 (&lt;em&gt;Medium&lt;/em&gt;): Minimum Moves to Equal Array Elements II&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given an integer array &lt;code&gt;nums&lt;/code&gt; of size &lt;code&gt;n&lt;/code&gt;, return &lt;em&gt;the minimum number of moves required to make all array elements equal&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In one move, you can increment or decrement an element of the array by &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nums = [1,2,3]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;Only two moves are needed (remember each move increments or decrements one element):&lt;br&gt;[1,2,3]  =&amp;gt;  [2,2,3]  =&amp;gt;  [2,2,2]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nums = [1,10,2,9]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;n == nums.length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 10^5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-10^9 &amp;lt;= nums[i] &amp;lt;= 10^9&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;This problem is deceptive in its simplicity. Ultimately, the value to which you want to set each element equal is the &lt;strong&gt;median&lt;/strong&gt; of the sorted &lt;strong&gt;nums&lt;/strong&gt; array. To come to this realization, we have to first think about the nature of the problem.&lt;/p&gt;

&lt;p&gt;Let's consider a possible scenario in which we've decided that our target value is &lt;strong&gt;x&lt;/strong&gt; which would take &lt;strong&gt;ans&lt;/strong&gt; number of moves to complete. What would happen to &lt;strong&gt;ans&lt;/strong&gt; if we increased &lt;strong&gt;x&lt;/strong&gt; by &lt;strong&gt;1&lt;/strong&gt;? If we did, each element that is below the new &lt;strong&gt;x&lt;/strong&gt; would have to spend another move to get up to &lt;strong&gt;x&lt;/strong&gt;, but every element that is above the new &lt;strong&gt;x&lt;/strong&gt; would have to spend one less move to get down to &lt;strong&gt;x&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This means that &lt;strong&gt;x&lt;/strong&gt; should naturally move up if there are more elements above &lt;strong&gt;x&lt;/strong&gt; than below. It also means the inverse, that &lt;strong&gt;x&lt;/strong&gt; should move down if there are more elements below &lt;strong&gt;x&lt;/strong&gt; than above. The natural outcome of this is that &lt;strong&gt;x&lt;/strong&gt; will settle at a spot where there are the same number of elements on either side, which is the median value of &lt;strong&gt;nums&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To find the median value, we'll have to first sort &lt;strong&gt;nums&lt;/strong&gt;. If &lt;strong&gt;nums&lt;/strong&gt; has an even number of elements, any value between the two middle elements, inclusive, will work for calculating the answer, so we don't have to worry about which of the two elements we use for our solution.&lt;/p&gt;

&lt;p&gt;After we have the median value, we can just iterate through &lt;strong&gt;nums&lt;/strong&gt; and find the sum of the differences of each number from the median value, which should be our answer.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N * log N)&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; is the length of &lt;strong&gt;nums&lt;/strong&gt;, for sorting &lt;strong&gt;nums&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(1)&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;minMoves2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;median&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;~~&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;median&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;minMoves2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;median&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;minMoves2&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;median&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[~~(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)];&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;abs&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;minMoves2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;median&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;~~&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>How to build an npm package using TypeScript, Jest, and XO</title>
      <author>Siddharth</author>
      <pubDate>Wed, 19 May 2021 09:56:19 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/how-to-build-an-npm-package-using-typescript-jest-and-xo-40nd</link>
      <guid>https://dev.to/siddharthshyniben/how-to-build-an-npm-package-using-typescript-jest-and-xo-40nd</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This is not an article which describes the steps in detail or describes why you need to use TypeScript, Jest, or XO; It is just meant to be a cheatsheet based on my experience which helps to get things done quickly. Also note that this does not include any steps on creating READMEs and related files.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Enough talk, let's start!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a folder
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;   &lt;span class="nb"&gt;mkdir &lt;/span&gt;project-name &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;project-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Initialise Git
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;   git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Write a &lt;code&gt;.gitignore&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   node_modules/

   # Build files
   lib/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Initialise npm
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;   npm init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Install TypeScript
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;   npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; typescript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create a &lt;code&gt;tsconfig.json&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;   &lt;span class="o"&gt;{&lt;/span&gt;
       &lt;span class="s2"&gt;"compilerOptions"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
           &lt;span class="s2"&gt;"target"&lt;/span&gt;: &lt;span class="s2"&gt;"es5"&lt;/span&gt;,
           &lt;span class="s2"&gt;"module"&lt;/span&gt;: &lt;span class="s2"&gt;"commonjs"&lt;/span&gt;,
           &lt;span class="s2"&gt;"declaration"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
           &lt;span class="s2"&gt;"outDir"&lt;/span&gt;: &lt;span class="s2"&gt;"./lib"&lt;/span&gt;,
           &lt;span class="s2"&gt;"strict"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
           &lt;span class="s2"&gt;"esModuleInterop"&lt;/span&gt;
       &lt;span class="o"&gt;}&lt;/span&gt;,
       &lt;span class="s2"&gt;"include"&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"src"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;,
       &lt;span class="s2"&gt;"exclude"&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"node_modules"&lt;/span&gt;, &lt;span class="s2"&gt;"**/__tests__/*"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
   &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Write your code in &lt;code&gt;src/index.ts&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Add your build script in &lt;code&gt;package.json&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
           &lt;/span&gt;&lt;span class="nl"&gt;"build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"tsc"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
           &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"echo 'error no test specified' &amp;amp;&amp;amp; exit 0"&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Build your code
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;   npm run build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Initialise XO
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  npm init xo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add your lint script in &lt;code&gt;package.json&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
           &lt;/span&gt;&lt;span class="nl"&gt;"build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"tsc"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
           &lt;/span&gt;&lt;span class="nl"&gt;"lint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"xo --fix"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
           &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"echo 'error no test specified' &amp;amp;&amp;amp; exit 0"&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Lint your code
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;   npm run lint
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add the &lt;code&gt;files&lt;/code&gt; property in your &lt;code&gt;package.json&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Whitelisting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;better&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;than&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;blacklisting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;everything&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"files"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
           &lt;/span&gt;&lt;span class="s2"&gt;"lib/**/*"&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Install Jest
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   npm install --save-dev jest ts-jest @types/jest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create a &lt;code&gt;jestconfig.json&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"transform"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"^.+\\.(t|j)sx?$"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ts-jest"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"testRegex"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"(/__tests__/.*|(&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;.|/)(test|spec))&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;.(jsx?|tsx?)$"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"moduleFileExtensions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"ts"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"tsx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"jsx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add your test script in &lt;code&gt;package.json&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
           &lt;/span&gt;&lt;span class="nl"&gt;"build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"tsc"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
           &lt;/span&gt;&lt;span class="nl"&gt;"lint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"xo --fix"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
           &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"jest --config jestconfig.json"&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Write tests in &lt;code&gt;src/__test__/&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run tests
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;   npm run &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add some more scripts
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
           &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Previous&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;ones...&lt;/span&gt;&lt;span class="w"&gt;
           &lt;/span&gt;&lt;span class="nl"&gt;"prepare"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"npm run build"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
           &lt;/span&gt;&lt;span class="nl"&gt;"prepublishOnly"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"npm run test &amp;amp;&amp;amp; npm run lint"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
           &lt;/span&gt;&lt;span class="nl"&gt;"preversion"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"npm run lint"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
           &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;You&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;could&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;also&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"version"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"preversion"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;scripts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;push&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;github&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;but&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;I&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;prefer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;doing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;manually&lt;/span&gt;&lt;span class="w"&gt; 
       &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Update your &lt;code&gt;package.json&lt;/code&gt; file with proper entries

&lt;ul&gt;
&lt;li&gt;Don't forget to set &lt;code&gt;main&lt;/code&gt; to &lt;code&gt;lib/index.js&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Update all other things as necessary.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Commit all changes&lt;/li&gt;
&lt;li&gt;Publish&lt;/li&gt;
&lt;li&gt;Repeat!&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>cheatsheet</category>
      <category>npm</category>
    </item>
    <item>
      <title>Angular Dev Tools </title>
      <author>Ishfaq Maknoo</author>
      <pubDate>Wed, 19 May 2021 09:52:12 +0000</pubDate>
      <link>https://dev.to/imaknoo/angular-dev-tools-2bbd</link>
      <guid>https://dev.to/imaknoo/angular-dev-tools-2bbd</guid>
      <description>&lt;p&gt;⚡ We now have Angular &lt;code&gt;Chrome Developer Tools&lt;/code&gt;, a new way to debug angular apps ⚡&lt;/p&gt;

&lt;p&gt;Easily navigate between component hierarchy, &lt;code&gt;properties&lt;/code&gt; used in each component and can deliberately update property value from &lt;code&gt;dev tools&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The Angular Chrome Developer tool will work on &lt;code&gt;Angular Version 9+&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Install now to:&lt;br&gt;
‣ Visualize the structure of your apps&lt;br&gt;
‣ Explore, inspect &amp;amp; edit components Left-pointing magnifying glass&lt;br&gt;
‣ Profile performance Bar chart&lt;/p&gt;

&lt;p&gt;Install here → [&lt;a href="http://goo.gle/install-angular-devtools"&gt;http://goo.gle/install-angular-devtools&lt;/a&gt;]&lt;br&gt;
Read Full Documentation → [&lt;a href="https://angular.io/guide/devtools"&gt;https://angular.io/guide/devtools&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--osk-hccn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a7repiltf8xanybj0ar1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--osk-hccn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a7repiltf8xanybj0ar1.gif" alt="Trulli"&gt;&lt;/a&gt;&lt;br&gt;Chrome Angular Developer Tool
  &lt;/p&gt;

</description>
      <category>angular</category>
      <category>dev</category>
      <category>devtools</category>
    </item>
    <item>
      <title>AWS Transfer Family – FTP for EFS and S3</title>
      <author>Pete Wilcock</author>
      <pubDate>Wed, 19 May 2021 09:36:25 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-transfer-family-ftp-for-efs-and-s3-32e5</link>
      <guid>https://dev.to/aws-builders/aws-transfer-family-ftp-for-efs-and-s3-32e5</guid>
      <description>&lt;p&gt;If you were curious what AWS Transfer Family is, I’ve already spoiled it in the title. But what is it really, why does it exist, and when would you use it?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-historical-gap"&gt;
  &lt;/a&gt;
  A Historical Gap
&lt;/h2&gt;

&lt;p&gt;AWS used to have this small problem – it offered some awesome and powerful storage solutions like EBS (which needs to be mounted to an EC2 instance) and S3 (which you could only interact with via the console, SDK, or CLI). When I started using AWS, one of the first things I can remember searching for was “Can I FTP files to S3?”, and that’s a no.&lt;/p&gt;

&lt;p&gt;Naturally the community responded and s3fs-fuse is a utility that allows you to mount S3 as a filesystem to your EC2 instance. With a development history going all the way back to 2008, it’s been impressively and consistently developed, adding in new features and bug fixes. &lt;/p&gt;

&lt;p&gt;What it can’t do however is get away from the fact that S3 is not a filesystem, and not all POSIX commands are supported. Those that are are a cunning kind of alias to S3 operations that emulate equivalent behaviour. There’s also the risk of ramping up significant costs – filesystem operations translate to S3 API requests which have a cost of $0.005 per 1000 PUT, POST, and LIST requests, and $0.0004 per 1000 GET, SELECT, and other requests. This might not sound like much, but if you inadvertently trigger or have running some background processes that are read/write intensive, you wouldn’t normally think about it. With s3fs, all of those requests can start to mount up. Maybe not a dealbreaker, but be aware. &lt;/p&gt;

&lt;p&gt;But with it mounted to an EC2 instance, you could install your favourite FTP server and upload ‘directly’ into S3.&lt;/p&gt;

&lt;p&gt;Now I need to point out I’m being glib with my casual use of the term ‘FTP’. Unsecured FTP on port 21 has been a big no-no for a very long time, so really when I say FTP I mean some secured method which is one of: SFTP (FTP extension of SSH) or FTPS (FTP with SSL certificate). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#efs-has-entered-the-chat"&gt;
  &lt;/a&gt;
  EFS has entered the chat
&lt;/h2&gt;

&lt;p&gt;Then along comes EFS in June 2016 – AWS’ version of the classic Network File System (NFS) for Linux only (look for Amazon FSx for a Windows solution). It’s more expensive than EBS (which is $0.08 per gb/month with the new gp3 volume) at a whopping $0.30 per gb/month. But where EBS charges you for storage provisioned (regardless of whether you fill it or not), EFS only charges you for what you use and could end up being far cheaper depending on how much headroom you’re putting into your EBS volumes – and of course EFS can be mounted to multiple different instances so overall you’ll get some good mileage out of it for the cost. &lt;/p&gt;

&lt;p&gt;Still the same issue though, you can’t FTP into it directly. It still needs to be mounted to an EC2 instance (or latterly, an ECS container or Lambda function), but it at least is a fully POSIX-compliant file system. At the time of writing EFS also doesn’t have a front-end file manager in the AWS Console. I’m sure it’ll be a feature that comes along eventually, but in the meantime I feel a bit blind not knowing what’s on my EFS unless I mount it somewhere to inspect it!&lt;/p&gt;

&lt;p&gt;So clearly, we needed more…&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-transfer-orphan"&gt;
  &lt;/a&gt;
  AWS Transfer… Orphan?
&lt;/h2&gt;

&lt;p&gt;AWS Transfer Family started out as AWS Transfer for SFTP in November 2018, and rebranded and expanded to include FTPS and plain FTP in April 2020. &lt;/p&gt;

&lt;p&gt;The offering is essentially a managed FTP service with S3 as the endpoint for the data. At the time of writing in January 2021, AWS Transfer Family for EFS is red hot off the press as the latest endpoint available, and finally we have a way to examine and transfer files into our EFS volumes without having to mount them somewhere first!&lt;/p&gt;

&lt;p&gt;But, as with all managed services this comes at a price. What is it?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#price-comparison"&gt;
  &lt;/a&gt;
  Price Comparison
&lt;/h2&gt;

&lt;p&gt;Firstly, let’s remind ourselves about S3 and EFS. Uploading into S3 from the internet is free. As mentioned EFS needs to be mounted onto something, but assuming that’s an EC2 instance then uploading data into EC2 from the internet is also free. &lt;/p&gt;

&lt;p&gt;At present the price for AWS Transfer Family for SFTP, FTPS, and FTP is the same for all protocols:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;Cost&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Time protocol is enabled on your endpoint&lt;/td&gt;
&lt;td&gt;$0.30 per hour (and charged by hour)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data uploads&lt;/td&gt;
&lt;td&gt;$0.04 per gigabyte (GB) transferred&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data downloads&lt;/td&gt;
&lt;td&gt;$0.04 per gigabyte (GB) transferred&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Ouch – just turning it on and not using it will cost you around $219 a month. That’s roughly the same as an r5.xlarge EC2 instance on demand, a pretty chunky beast with 4 vCPUs and 32 GiB of RAM and 10Gbit of Networking. BIG CAVEAT: Stopping an AWS Transfer Family endpoint does not affect billing. So unlike EC2, you will be charged for the service even if it is stopped – the only way to stop being charged is to delete it completely. &lt;/p&gt;

&lt;p&gt;Then for the data transfer – that actually compares quite favourably for downloads set against S3 and EC2, which starts at $0.09 per GB and only goes as low as $0.05 if you’re downloading more than 150TB a month. &lt;/p&gt;

&lt;p&gt;Let’s do a full cost comparison with the following assumption: You upload data into your FTP server, and download the same data again – a full up/down transfer cycle. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-transfer-family-data-transfer-cost-comparison"&gt;
  &lt;/a&gt;
  AWS Transfer Family Data Transfer Cost Comparison
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;GiB&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;S3/EC2 Up/Down&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Transfer Family Up/Down&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;$0.00&lt;/td&gt;
&lt;td&gt;$0.08&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;$8.91&lt;/td&gt;
&lt;td&gt;$8.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1024&lt;/td&gt;
&lt;td&gt;$92.07&lt;/td&gt;
&lt;td&gt;$81.92&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;TiB&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;$460.71&lt;/td&gt;
&lt;td&gt;$409.60&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;$921.51&lt;/td&gt;
&lt;td&gt;$1,228.80&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;$4,403.11&lt;/td&gt;
&lt;td&gt;$4,096.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;$7,987.11&lt;/td&gt;
&lt;td&gt;$8,192.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;150&lt;/td&gt;
&lt;td&gt;$11,571.11&lt;/td&gt;
&lt;td&gt;$12,288.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;$19,251.11&lt;/td&gt;
&lt;td&gt;$24,576.00&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Then I decided I wanted a more granular comparison, so I spent far too long making this graph:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0QUjxdbq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eyqid2s18147t9uxq9x9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0QUjxdbq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eyqid2s18147t9uxq9x9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-transfer-family-vs-s3ec2-transfer-costs"&gt;
  &lt;/a&gt;
  Amazon Transfer Family vs S3/EC2 Transfer Costs
&lt;/h2&gt;

&lt;p&gt;The point at which EC2/S3 data transfer becomes cheaper than AWS Transfer Family (ATF) is exactly 80TB. The lack of bulk data pricing on ATF starts to hurt it when the volume is high enough!&lt;/p&gt;

&lt;p&gt;But I stress this is purely data transfer. If we assume you’ve mounted S3 as a filesystem on your EC2 you’re still paying for those S3 API operations too. There are a few commercial offerings for an “SFTP to S3” product that would seem to do exactly this. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-would-you-use-it"&gt;
  &lt;/a&gt;
  When would you use it?
&lt;/h2&gt;

&lt;p&gt;Quite simply, when you need to use FTP and have no other choice: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Legacy systems&lt;/strong&gt; – and we know there’s still plenty of those in wide operation. They will have no notion of cloud and can only do exports and data transfer with something as simplistic as FTP. Giving them a familiar protocol to speak to will in some cases be the only way to integrate something ancient with the Cloud. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Client Preference&lt;/strong&gt; – you’ve got a client you want to exchange data with and setting them up with an IAM user or role and walking them through how to do a cross-account S3 upload just isn’t going to fly a lot of the time. Some clients will want the familiarity and good old FTP, particularly if they’re used to dealing with data transfer in this way. Many of them will have performed expensive and time-consuming risk and compliance analysis of SFTP or FTPS and won’t want to go through the process for another methodology if they don’t absolutely have to. Having said that, popular FTP clients such as Filezilla do support S3 protocol, but it’s still so unfamiliar to many that they won’t even consider it. &lt;/p&gt;

&lt;p&gt;Looking at the AWS Customer stories, this appears to be the two main cases where companies are delighted that AWS Transfer Family exists. Then you have my own case – I want to poke around my EFS drives without the hassle of spinning up my own instance to mount it! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-features-of-aws-transfer-family"&gt;
  &lt;/a&gt;
  Other Features of AWS Transfer Family
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Use your own identity provider. A big one – being able to connect up Activity Directory or similar to grant users access to FTP comes with all the benefits of a single source of truth for identity. &lt;/li&gt;
&lt;li&gt;Use your own domain name – a simple CNAME to the service endpoint will let you brand your FTP endpoint as desired. &lt;/li&gt;
&lt;li&gt;Fixed IP (including BYO IP) – allowing you to have external parties whitelist your FTP endpoint, in line with their own security policies. Naturally, you can whitelist incoming connections yourself via Security Groups. 
FTPS integrates with Amazon Certificate Manager – keep all your SSL management in one place. &lt;/li&gt;
&lt;li&gt;Cross-account support. You can allow access to the service across AWS accounts with cross-account IAM roles. &lt;/li&gt;
&lt;li&gt;CloudTrail and Cloudwatch support – monitor user activity with all of the possibilities of integration with GuardDuty. &lt;/li&gt;
&lt;li&gt;Rock-solid Compliance: AWS Transfer Family is PCI-DSS and GDPR compliant, and HIPAA eligible. The service is also SOC 1, 2, and 3 compliant. Are you going to get that with your self-hosted FTP on EC2? I doubt it!
##File Exchange Protocol (FXP)
Does AWS Transfer Family support FXP? Well this is an interesting one, because I couldn’t find it covered in the documentation anywhere. If you don’t know what this is, I’ll borrow from Wikipedia’s definition:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;File eXchange Protocol (FXP or FXSP)&lt;/strong&gt; is a method of data transfer which uses FTP to transfer data from one remote server to another (inter-server) without routing this data through the client’s connection.&lt;/p&gt;

&lt;p&gt;Or in other words, FTP to FTP transfers. This is really convenient if you have two remote systems and don’t want to have to pass the data through yourself as the slow proxy in the middle. &lt;/p&gt;

&lt;p&gt;So I tested this out for myself – using an FTP set up on an EC2 instance, I set up AWS Transfer Family SFTP endpoint and attempted an FXP transfer between the two. So does AWS Transfer Family support FXP? Yes! I was able to connect and FXP my files across using FXP no problem. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#helping-you-to-not-be-stupid"&gt;
  &lt;/a&gt;
  Helping you to not be stupid
&lt;/h2&gt;

&lt;p&gt;As we’ve seen often with S3, the fact you have the ability to control access permissions with a high degree of granularity doesn’t mean you’ll use them properly. Whilst AWS maintains the precepts of the Shared Responsibility Model, they’re also adding in more features to services to stop you being stupid. &lt;/p&gt;

&lt;p&gt;Consequently you can deploy AWS Transfer Family as the plain, old, horribly insecure vanilla FTP – but only within a VPC. You can’t make it internet-facing and public by default. You can’t connect it to your Activity Directory identity provider (too insecure), and if you’re absolutely determined to expose it on the public internet you need to put a Network Load Balancer (NLB) in front of it. &lt;/p&gt;

&lt;p&gt;Basically you’re not going to trip and do any of that by accident, but if you absolutely want to, you still can and the risks are shouted in your face at every step. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;AWS Transfer Family is in line with most other AWS managed services. Nice features, nice integrations with the rest of the platform and other software. But like most managed offerings it’s going to cost you a pretty reasonable premium over rolling your own cheaper albeit less-elegant solution. &lt;/p&gt;

&lt;p&gt;So you need to be sure your requirement is great enough to justify the running and transfer costs, particularly in consideration to the fact there’s no way to power the service down out of hours to save money as you would with EC2 – and that’s a grave disappointment. Hourly billing is also a tad regressive – we’re getting quite used to per-minute and per-second charging these days and this feels like an obvious improvement. &lt;/p&gt;

&lt;p&gt;Have you used ATF for anything? If so I’d be interested in your comments below!&lt;/p&gt;

</description>
      <category>aws</category>
      <category>ftp</category>
      <category>s3</category>
    </item>
    <item>
      <title>Chrome Extensions That Will Help You With SEO</title>
      <author>Animesh Dhanuk</author>
      <pubDate>Wed, 19 May 2021 09:32:01 +0000</pubDate>
      <link>https://dev.to/animeshdhanuk/chrome-extensions-that-will-help-you-with-seo-47fc</link>
      <guid>https://dev.to/animeshdhanuk/chrome-extensions-that-will-help-you-with-seo-47fc</guid>
      <description>&lt;p&gt;Every SEO among us have no doubt to using entire arms of tools to analyse webpages,generate backlicks and make high impression of site.There are some chrome extensions for SEO that is very usefull for them and make work very easier for them.&lt;br&gt;
Chrome extensions are rapid adviser for SEO that i would given below.There are one or two suggestions that more occurrence individual not considered either,so there some stoutness for everyone here.&lt;/p&gt;

&lt;p&gt;So why do SEO use Chrome extensions? But there are some extensions there in not available and some extensions are available when you just click that is present on your desktop.Sometimes we realized the value of chrome extension from having a click on analytics.So let's discuss about it...&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-majestic-seo"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://cmsinstallation.blogspot.com/2021/05/5-chrome-extensions-that-will-help-you.html"&gt;Majestic SEO&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;There are all tools are similar with.Majestic SEO is a tool that build into a chrome.It is just supertool to analys your webpage.It is generates the back link pf your webpage.You can see most popular anchor texts, number of root domains etc. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-mozcast-chrome-extension"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://cmsinstallation.blogspot.com/2021/05/5-chrome-extensions-that-will-help-you.html"&gt;MozCast Chrome Extension&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Google algorithm can be bit excitable,that all is acceptable.MozCast reports on the changable things of the algorithm,that can see in form of temperature for last 30 days or more.The more higher temperature the less changable things.&lt;/p&gt;

&lt;p&gt;The good thing about this is that you only need to glance at the top corner of your screen to get a cast of how the algorithm page is looking.If you get instantly traffic on your page you can look back for more changabe things.I think the traffic decrease is due to a change in Google’s algorithm?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-woorank"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://cmsinstallation.blogspot.com/2021/05/5-chrome-extensions-that-will-help-you.html"&gt;WooRank&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;WooRank is tool that i would suggest for SEO beginners.It provides a top line survey of site on just one click.The tools take a variety of characters,from technical stuff like META data, sitemap.xml and robots.txt implementation to optimisation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cmsinstallation.blogspot.com/2021/05/5-chrome-extensions-that-will-help-you.html"&gt;Get Some More&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>seo</category>
      <category>showdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Tokens in the C language</title>
      <author>221910301048</author>
      <pubDate>Wed, 19 May 2021 09:19:36 +0000</pubDate>
      <link>https://dev.to/221910301048/tokens-in-the-c-language-3ih9</link>
      <guid>https://dev.to/221910301048/tokens-in-the-c-language-3ih9</guid>
      <description>&lt;p&gt;The individual elements of a program are called Tokens. In a C program, a number of individual units or elements occur. These elements are called C Tokens. In the C language, the following 6 types of tokens are available:&lt;/p&gt;

&lt;p&gt;Identifiers&lt;br&gt;
Keywords&lt;br&gt;
Constants&lt;br&gt;
Operators&lt;br&gt;
Special Characters&lt;br&gt;
Strings&lt;br&gt;
Identifiers:&lt;br&gt;
Each program element in a C program is called an identifier. An identifier is a variable that holds a value and stores it in the memory.&lt;/p&gt;

&lt;p&gt;Rules for declaring identifiers:&lt;br&gt;
The identifier should consist of alphabets from a to z and A to Z.&lt;br&gt;
It may contain numerical values from 0 to 9.&lt;br&gt;
It may contain the underscore value.&lt;br&gt;
The starting character of an identifier must always be a letter. Example: Variables, functions, labels, etc.&lt;br&gt;
Keywords&lt;br&gt;
Keywords are words whose meaning has already been defined by the computer – they are pre-defined words in the C compiler. Each Keyword is meant to perform a specific function in a C program. Keywords are case sensitive and are written in lower case. The C language has 32 keywords, they are: &lt;/p&gt;

&lt;p&gt;Constants&lt;br&gt;
A constant is a fixed value that cannot be altered during the execution of a program. C Constants can be classified into two categories:&lt;/p&gt;

&lt;p&gt;Primary Constants&lt;br&gt;
Secondary Constants&lt;br&gt;
Primary constant&lt;br&gt;
A primary constant is, again, divided into these three types:&lt;/p&gt;

&lt;p&gt;Numeric&lt;br&gt;
Character&lt;br&gt;
Logical&lt;br&gt;
Numeric is subdivided into two types, Integer and Float.&lt;br&gt;
Character is subdivided into two types, Single Character and String&lt;br&gt;
Secondary&lt;br&gt;
The secondary constant ﻿is divided into the following types:&lt;/p&gt;

&lt;p&gt;Arrays&lt;br&gt;
Structures&lt;br&gt;
Union&lt;br&gt;
Pointer&lt;br&gt;
Enum etc.&lt;br&gt;
Operators:&lt;br&gt;
Operators are symbols that provide instructions for the performance of various mathematical and logical operations. Operators are tools that can alter data and variable values.&lt;/p&gt;

&lt;p&gt;Operators are classified into the following eight types:&lt;/p&gt;

&lt;p&gt;Arithmetic Operators&lt;br&gt;
Relational Operators&lt;br&gt;
Logical Operators&lt;br&gt;
Increment/Decrement Operators&lt;br&gt;
Assignment Operator&lt;br&gt;
Bitwise Operators&lt;br&gt;
Conditional Operators&lt;br&gt;
Special Operators&lt;/p&gt;

&lt;p&gt;Special characters&lt;br&gt;
All the characters other than a to z, A to Z, and 0 to 9 are special characters. Example: {,},[,],(,)&lt;/p&gt;

&lt;p&gt;A character data type consumes 8-bits of memory, which means that one can store anything in a character whose ASCII value lies between -127 and 127. Thus, it can hold any of the 256 different possible values.&lt;/p&gt;

&lt;p&gt;String&lt;br&gt;
A string is a group of characters that should be enclosed in double quotations.&lt;/p&gt;

&lt;p&gt;For example: char string[]=“gitam”;&lt;/p&gt;

&lt;p&gt;Variable&lt;br&gt;
A variable is a user-defined word that, depending on the data type, will have some storage area. The variable’s value will be changed during the program execution, and the data type and its value will be changed during the program execution. The declaration of a variable is:&lt;/p&gt;

&lt;p&gt;Rules for variables&lt;br&gt;
A variable is a combination of letters and digits.&lt;br&gt;
The length of the variable is no more than 31 characters; however, the length is normally more than 8 characters.&lt;br&gt;
A variable should not be a reserved word.&lt;br&gt;
"﻿Special symbols, except the ﻿underscore(_),are not allowed.&lt;br&gt;
The first character in a variable must be an alphabet.&lt;br&gt;
No commas or blank spaces are allowed within a variable.&lt;/p&gt;

</description>
      <category>tokens</category>
      <category>c</category>
    </item>
    <item>
      <title>Storybook in a Vue.js project: an Introduction Guide</title>
      <author>Cyrille</author>
      <pubDate>Wed, 19 May 2021 09:00:52 +0000</pubDate>
      <link>https://dev.to/scalingo/storybook-in-a-vue-js-project-an-introduction-guide-4i9n</link>
      <guid>https://dev.to/scalingo/storybook-in-a-vue-js-project-an-introduction-guide-4i9n</guid>
      <description>&lt;p&gt;Looking for a starting point about Storybook in a Vue.js project?&lt;/p&gt;

&lt;p&gt;Your are at the right place!&lt;/p&gt;

&lt;p&gt;At &lt;a href="https://scalingo.com/"&gt;Scalingo&lt;/a&gt; we have been using and testing Storybook for a year while we were revamping the &lt;a href="https://dashboard.scalingo.com/"&gt;dashboard&lt;/a&gt; used by our customers.&lt;/p&gt;

&lt;p&gt;We decided to write this &lt;strong&gt;guide for Storybook in a Vue.js project&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We will start by a quick reminder about Storybook before explaining different use cases. We will end up the article with tips and tricks of using Storybook in a Vue.js project.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;To give you a bit of context, Scalingo is a european PaaS offering cloud hosting and aiming to build the best PaaS for developers of the world. I am Cyrille Colon Software engineer and tech lead at Scalingo.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-storybook"&gt;
  &lt;/a&gt;
  What is Storybook?
&lt;/h2&gt;

&lt;p&gt;Let’s start by defining Storybook!&lt;/p&gt;

&lt;p&gt;This is taken from the &lt;a href="https://storybook.js.org/"&gt;Storybook homepage&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Storybook is an open source tool for developing UI components and pages in isolation. It simplifies building, documenting, and testing UIs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#an-example-of-storybook-usage"&gt;
  &lt;/a&gt;
  An example of Storybook usage
&lt;/h3&gt;

&lt;p&gt;To understand why, let’s take an example.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You want to build an app, and this app needs buttons.&lt;/li&gt;
&lt;li&gt;You want to use a component oriented framework (we use Vue.js, but it could be another one).&lt;/li&gt;
&lt;li&gt;You code it into a “Button.vue” file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now you will “storybook it”.&lt;/p&gt;

&lt;p&gt;That means that you create a storybook story around the component. For that you write the file below (a “story”, in storybook vocabulary).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import Button from "@/components/molecules/buttons/Button"; // The component I want "storybook"
export default {
  title: "Molecules/ButtonDemo", // The story path
  component: Button, // The element the story is about
};
const Template = () =&amp;gt; ({
  components: { Button }, // Components available in the story template, just below
  template: `
    &amp;lt;div class="flex space-x-3 p-2"&amp;gt;
      &amp;lt;Button kind="regular"&amp;gt;Regular&amp;lt;/Button&amp;gt;
      &amp;lt;Button kind="primary"&amp;gt;Primary&amp;lt;/Button&amp;gt;
      &amp;lt;Button kind="warning"&amp;gt;Warning&amp;lt;/Button&amp;gt;
      &amp;lt;Button kind="danger"&amp;gt;Danger&amp;lt;/Button&amp;gt;
      &amp;lt;Button kind="neutral"&amp;gt;Neutral&amp;lt;/Button&amp;gt;
      &amp;lt;Button kind="empty"&amp;gt;Empty&amp;lt;/Button&amp;gt;
    &amp;lt;/div&amp;gt;
  `, // Let's use 6 variants of my button
}); // My variable "Template" will need to be bind to value before to become a story.
export const Default = Template.bind({}); // "default" will be the story name, and so, last path element
Default.args = {}; // Story args are for latter
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;➡️ And this is what you will get on Storybook on your browser:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O38tcNWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.datocms-assets.com/36416/1620807038-storybook-usage.png%3Ffit%3Dcrop%26fm%3Djpg%26w%3D825" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O38tcNWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.datocms-assets.com/36416/1620807038-storybook-usage.png%3Ffit%3Dcrop%26fm%3Djpg%26w%3D825" alt="https://www.datocms-assets.com/36416/1620807038-storybook-usage.png?fit=crop&amp;amp;fm=jpg&amp;amp;w=825"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-you-use-storybook-for-vuejs"&gt;
  &lt;/a&gt;
  How can you use Storybook for Vue.js?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#storybook-as-developer-documentation"&gt;
  &lt;/a&gt;
  Storybook as developer documentation
&lt;/h3&gt;

&lt;p&gt;The first obvious Storybook use is for documentation. In &lt;a href="https://scalingo.com/"&gt;Scalingo&lt;/a&gt; we use it everyday for our internal documentation.&lt;/p&gt;

&lt;p&gt;It does an excellent job here: the search and the tree structure make it easy to find what you want or just to look exhaustively.&lt;/p&gt;

&lt;p&gt;Given its auto generated nature, it is always up to date, at &lt;strong&gt;no cost for anybody&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Storybook comes with whistle and bells about documentation: the &lt;a href="https://storybook.js.org/docs/react/writing-docs/introduction"&gt;docs tab&lt;/a&gt; and the &lt;a href="https://storybook.js.org/docs/react/essentials/controls"&gt;controls panels.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When they are marvelous at first glance, we did not find any practical usage for the controls panels. We ended up using the docs tab only to locate the story component/arguments visible in the canvas.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j7UZivLN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.datocms-assets.com/36416/1620807113-stories-on-storybook.png%3Ffit%3Dcrop%26fm%3Djpg%26w%3D825" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j7UZivLN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.datocms-assets.com/36416/1620807113-stories-on-storybook.png%3Ffit%3Dcrop%26fm%3Djpg%26w%3D825" alt="https://www.datocms-assets.com/36416/1620807113-stories-on-storybook.png?fit=crop&amp;amp;fm=jpg&amp;amp;w=825"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#storybook-as-states-simulators"&gt;
  &lt;/a&gt;
  Storybook as states simulators
&lt;/h3&gt;

&lt;p&gt;An other use for Storybook in Vue.js is using it as states simulators.&lt;/p&gt;

&lt;p&gt;Let’s imagine you have a table.&lt;/p&gt;

&lt;p&gt;The table can have several states by itself (initial, empty, few elements, paginated) and each row may have additional states (for example if the table contains “messages” they can be “sent”, “delayed”, “draft”, …). Some of these states are mutually exclusive.&lt;/p&gt;

&lt;p&gt;Storybook lets you see them all, at the cost of a single click (or less, if you put them together in a single story).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--clbaeZ0U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.datocms-assets.com/36416/1620807240-storybook-as-states-simulator.png%3Ffit%3Dcrop%26fm%3Djpg%26w%3D825" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--clbaeZ0U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.datocms-assets.com/36416/1620807240-storybook-as-states-simulator.png%3Ffit%3Dcrop%26fm%3Djpg%26w%3D825" alt="https://www.datocms-assets.com/36416/1620807240-storybook-as-states-simulator.png?fit=crop&amp;amp;fm=jpg&amp;amp;w=825"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#storybook-as-a-communication-tool"&gt;
  &lt;/a&gt;
  Storybook as a communication tool
&lt;/h3&gt;

&lt;p&gt;An other usage of Storybook can be using it as a communication tool. This will be particularly useful for Product Owners.&lt;/p&gt;

&lt;p&gt;A storybook can be exported under the form of a static website.&lt;/p&gt;

&lt;p&gt;From here, it can be fully used by different persons “out of the box”.&lt;/p&gt;

&lt;p&gt;No API needed or even yarn &amp;amp; co.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wN9STFsf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.datocms-assets.com/36416/1620807306-storybook-as-collaboration-project.png%3Ffit%3Dcrop%26fm%3Djpg%26w%3D825" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wN9STFsf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.datocms-assets.com/36416/1620807306-storybook-as-collaboration-project.png%3Ffit%3Dcrop%26fm%3Djpg%26w%3D825" alt="https://www.datocms-assets.com/36416/1620807306-storybook-as-collaboration-project.png?fit=crop&amp;amp;fm=jpg&amp;amp;w=825"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Product owners can easily navigate to an app feature and see all the states related. They can also copy paste links (storybook stories URLs) and/or annotate screenshots.&lt;/p&gt;

&lt;p&gt;This is very useful to bring together into an issue ticket and make it very descriptive with the Product Owner intent.&lt;/p&gt;

&lt;p&gt;Similarly, at Scalingo we asked an advice on design to somebody unfamiliar with the project. In a few minutes, the person was able to grasp our problem and offer solutions working in all app states.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#storybook-as-automated-visual-tests-source"&gt;
  &lt;/a&gt;
  Storybook as automated visual tests source
&lt;/h3&gt;

&lt;p&gt;Via some tools - we use &lt;a href="https://loki.js.org/"&gt;Loki&lt;/a&gt; - it is possible to add automation to a storybook. If you have done visual testing in the past, you may remember it can be quite painful.&lt;/p&gt;

&lt;p&gt;Visual testing is often very slow, but the worse problem is “flake”.&lt;/p&gt;

&lt;p&gt;Flaky tests are tests that sometimes pass, sometimes not, more or less randomly.&lt;/p&gt;

&lt;p&gt;Here storybook and Loki shine: the amount of flake we had is zero, even with CSS animations in some stories.&lt;/p&gt;

&lt;p&gt;Loki/Storybook is also quite fast (200 stories take 60 seconds) and the Loki diff mechanism makes it easy to spot what went wrong.&lt;/p&gt;

&lt;p&gt;For example in this case I made the circle more wide (the differences appear in pink in the difference image)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9R5Otjf9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.datocms-assets.com/36416/1620807435-storybook-example.png%3Ffit%3Dcrop%26fm%3Djpg%26w%3D825" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9R5Otjf9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.datocms-assets.com/36416/1620807435-storybook-example.png%3Ffit%3Dcrop%26fm%3Djpg%26w%3D825" alt="https://www.datocms-assets.com/36416/1620807435-storybook-example.png?fit=crop&amp;amp;fm=jpg&amp;amp;w=825"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OYmmIrxo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.datocms-assets.com/36416/1620807441-storybook-example-2.png%3Ffit%3Dcrop%26fm%3Djpg%26w%3D825" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OYmmIrxo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.datocms-assets.com/36416/1620807441-storybook-example-2.png%3Ffit%3Dcrop%26fm%3Djpg%26w%3D825" alt="https://www.datocms-assets.com/36416/1620807441-storybook-example-2.png?fit=crop&amp;amp;fm=jpg&amp;amp;w=825"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Maintenance side, given you can review easily the differences via images and accept a new reference state via a single command line, it is a bliss.&lt;/p&gt;

&lt;p&gt;Visual tests really allow us to be confident during release or dependencies upgrade.&lt;/p&gt;

&lt;p&gt;Ideally, you want your visual testing automated into your CI.&lt;/p&gt;

&lt;p&gt;For information Storybook creators have also created &lt;a href="https://www.chromatic.com/"&gt;Chromatic&lt;/a&gt; which is a nice tool. Not only it runs the CI tests, but also has some features like serving storybooks or PR collaborations.&lt;/p&gt;

&lt;p&gt;We ended up not using it only because of this price. In our case it would have costed more than 2500 euros per developer each year - for only Chrome coverage.&lt;/p&gt;

&lt;p&gt;If you want a more complete coverage (3 browsers, 4 responsiveness modes, 2 themes), the price quickly adds up.&lt;/p&gt;

&lt;p&gt;Loki has a &lt;a href="https://loki.js.org/serverless.html"&gt;CI integration&lt;/a&gt;, but miles away from Chromatic (no dashboard to explore the build results, manual configuration, …).&lt;/p&gt;

&lt;p&gt;For the moment we just run Loki by hand before release - or at particular times (like deps upgrade). Then, we push the images into a PR request and use Github comparison tools (side by side, swipe, onion skin) to look at the differences.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lfFZqCQl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.datocms-assets.com/36416/1620807500-loki-ci-integration.png%3Ffit%3Dcrop%26fm%3Djpg%26w%3D825" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lfFZqCQl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.datocms-assets.com/36416/1620807500-loki-ci-integration.png%3Ffit%3Dcrop%26fm%3Djpg%26w%3D825" alt="https://www.datocms-assets.com/36416/1620807500-loki-ci-integration.png?fit=crop&amp;amp;fm=jpg&amp;amp;w=825"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is working fine, while not - of course - being perfect.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#storybook-as-variants-viewers"&gt;
  &lt;/a&gt;
  Storybook as variants viewers
&lt;/h3&gt;

&lt;p&gt;Web apps targets are now larger than ever: very larges screens, mobiles, browsers, dark mode, …&lt;/p&gt;

&lt;p&gt;Storybook canvas can display components under different variants, via parameters.&lt;/p&gt;

&lt;p&gt;Out of the box, you will have the ability to change the canvas screen size, but you can code custom parameters. At Scalingo we added two to handle i18n and theming.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This is it for this introduction guide to Storybook! &lt;/p&gt;

&lt;p&gt;As you can read, Storybook has improved our process here at &lt;a href="https://scalingo.com/blog/guide-storybook-vue-js"&gt;Scalingo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next week I'll write an other article about our best Tips and Tricks to use Storybook in a vue project.&lt;/p&gt;

</description>
      <category>vue</category>
      <category>storybook</category>
    </item>
    <item>
      <title>ifconfig vs ipconfig vs iwconfig</title>
      <author>Naniyori</author>
      <pubDate>Wed, 19 May 2021 08:52:00 +0000</pubDate>
      <link>https://dev.to/deepu14d/ifconfig-vs-ipconfig-vs-iwconfig-3k9b</link>
      <guid>https://dev.to/deepu14d/ifconfig-vs-ipconfig-vs-iwconfig-3k9b</guid>
      <description>&lt;p&gt;This may seem useless to a lot of people, even I am thinking that way but still I got this confusion when I started learning a bit networking and started working in Linux terminal so maybe other also have this confusion and these are the basic commands especially for those who works with networking stuff. It’s really very basic. So, what is the difference between ifconfig, iwconfig and ipconfig?&lt;/p&gt;

&lt;p&gt;Ifconfig stands for interface configuration and it’s used to display the network configuration information, you come to know about your IP address for your Wi-Fi router, for your LAN cable, for any interface that’s connecting you from the internet and this command provides options for viewing as well as changing your network settings. Well, I am not going to go very deep in it and show you the various options it offers like “ifconfig –a” it shows you all the network interfaces while using just “ifconfig” only shows the current active network interfaces. So, I guess now you have a basic idea of what is ifconfig and what it shows you but there’s a lot you can do after knowing this info, maybe you would like to change your MAC address, configuring IP address or any other thing you would like to do.   &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h1EAK1Ol--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wccnmbpq6m7ixgt1az66.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h1EAK1Ol--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wccnmbpq6m7ixgt1az66.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ipconfig stands for internet protocol configuration and actually is not much different than ifconfig. While ifconfig works only in Unix based OS, ipconfig works in even in windows and some new versions of Linux too. Ipconfig is a better option than ifconfig, it’s sort of upgraded version of ifconfig. It’s new but it doesn’t mean that it’s superior to the previous one.  Things that you can do with ifconfig, can be done with ipconfig, they just have their own ways of doing things but the same thing can be done by both of these commands. However, there are some advantages of ipconfig over ifconfig for example unlike ifconfig, it also displays all currently connected network interfaces whether they are active or not. So, between ifconfig and ipconfig, ifconfig can meet all the basic requirement of our work but now or later, we may have to upgrade, as ipconfig have some more features and ifconfig have some drawbacks. &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_OLsTkiS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4o8u6ak92m06a6xnyqu4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_OLsTkiS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4o8u6ak92m06a6xnyqu4.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Iwconfig is also similar to ifconfig, but it is only dedicated to wireless networking interfaces means not wired interface like a ethernet cable, LAN cable. It only shows wireless interface. You can change the parameters of that network interface, parameters related to Wi-Fi adapter like transmit power, changing bit rate, changing SSID name and other things are also possible. &lt;/p&gt;

&lt;p&gt;To know more about any of these commands, you can give a try to their documentation online or you can just type “man ifconfig” and it’ll open the manual for this command or you can try using “iwconfig –help”.   &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wRhrEpaP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wv4oa9dwgsqjj6weqnv5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wRhrEpaP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wv4oa9dwgsqjj6weqnv5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I guess now you can understand what’s the basic difference between ifconfig, ipconfig and iwconfig and how are they different. Currently, the most basic and widely used command among these is ifconfig.&lt;/p&gt;

</description>
      <category>basics</category>
      <category>networking</category>
      <category>terminal</category>
      <category>linux</category>
    </item>
    <item>
      <title>📊 A couple of interesting Stack Overflow queries to play with [Query Stack Overflow] 📈</title>
      <author>InHuOfficial</author>
      <pubDate>Wed, 19 May 2021 08:34:42 +0000</pubDate>
      <link>https://dev.to/inhuofficial/a-couple-of-interesting-stack-overflow-queries-to-play-with-query-stack-overflow-4ckg</link>
      <guid>https://dev.to/inhuofficial/a-couple-of-interesting-stack-overflow-queries-to-play-with-query-stack-overflow-4ckg</guid>
      <description>&lt;p&gt;I recently reached a milestone on Stack Overflow. I have answered 300 questions (and most are answered correctly 😋) on the [accessibility] tag.&lt;/p&gt;

&lt;p&gt;It is part of a personal challenge I set myself nearly two years ago.&lt;/p&gt;

&lt;p&gt;Since September 2019 I have tried to give the best answers I can on the [accessibility] and [pagespeed-insights] tags on Stack Overflow, linking with my two passions in web development, load speed and inclusivity. &lt;/p&gt;

&lt;p&gt;I find answering questions to be the best way to learn (and reinforce any imposter syndrome or conversly, make sure I don't suffer from the &lt;a href="https://en.wikipedia.org/wiki/Dunning%E2%80%93Kruger_effect"&gt;Dunning Kruger effect!&lt;/a&gt; hehe.&lt;/p&gt;

&lt;p&gt;Anyway, I know I have been very active answering on those tags but &lt;strong&gt;the narcissist in me&lt;/strong&gt; wanted to know how I compared to everyone else.&lt;/p&gt;

&lt;p&gt;Luckily Stack Overflow has a great feature that few people seem to use / know about &lt;a href="https://data.stackexchange.com/"&gt;Query Stack Overflow (https://data.stackexchange.com/)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It allows you to analyse the Stack Overflow database and grab some interesting statistics / info.&lt;/p&gt;

&lt;p&gt;So here are a couple of queries I put together so I could analyse my progress:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#number-of-comments-questions-and-answers-ranked-by-number-of-answers"&gt;
  &lt;/a&gt;
  Number of comments, questions and answers ranked by number of answers
&lt;/h2&gt;

&lt;p&gt;This query took me &lt;strong&gt;ages&lt;/strong&gt; to put together, referencing several other queries other people had writeen to piece it together. Put it like this, it really highlighted my poor SQL skills! 🤣&lt;/p&gt;

&lt;p&gt;It allows you to grab all of the questions, answers and comments on a given tag, ranked by number of answers given initially.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-query"&gt;
  &lt;/a&gt;
  The query
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;DECLARE&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;tagName&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;tagname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rtrim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="n"&gt;TagName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;DECLARE&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="k"&gt;start&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="k"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rtrim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="k"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;DECLARE&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rtrim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="k"&gt;End&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="k"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;questsByTags&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;DISTINCT&lt;/span&gt;
                &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;
                &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OwnerUserId&lt;/span&gt;
    &lt;span class="k"&gt;FROM&lt;/span&gt;        &lt;span class="n"&gt;Posts&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;
    &lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt;  &lt;span class="n"&gt;PostTags&lt;/span&gt; &lt;span class="n"&gt;pt&lt;/span&gt;     &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PostId&lt;/span&gt;
    &lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt;  &lt;span class="n"&gt;Tags&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;          &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TagId&lt;/span&gt;
    &lt;span class="k"&gt;WHERE&lt;/span&gt;       &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PostTypeId&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="c1"&gt;-- questions&lt;/span&gt;
    &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreationDate&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="k"&gt;Start&lt;/span&gt;
    &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreationDate&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="k"&gt;End&lt;/span&gt;
    &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TagName&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;TagName&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="n"&gt;answersByTags&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;SELECT&lt;/span&gt;
                &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;
                &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OwnerUserId&lt;/span&gt;
    &lt;span class="k"&gt;FROM&lt;/span&gt;        &lt;span class="n"&gt;Posts&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
    &lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt;  &lt;span class="n"&gt;questsByTags&lt;/span&gt; &lt;span class="n"&gt;qbt&lt;/span&gt;  &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;qbt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParentId&lt;/span&gt;
&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="n"&gt;commntsByTags&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;SELECT&lt;/span&gt;
                &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;
                &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UserId&lt;/span&gt;  &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;OwnerUserId&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;FROM&lt;/span&gt;        &lt;span class="n"&gt;Comments&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;
    &lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="k"&gt;SELECT&lt;/span&gt;              &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;questsByTags&lt;/span&gt;
        &lt;span class="k"&gt;UNION&lt;/span&gt; &lt;span class="k"&gt;ALL&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt;    &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;answersByTags&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;allPosts&lt;/span&gt;
    &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;allPosts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PostId&lt;/span&gt;
&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="n"&gt;allUsers&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;SELECT&lt;/span&gt;          &lt;span class="n"&gt;OwnerUserId&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;questsByTags&lt;/span&gt;
    &lt;span class="k"&gt;UNION&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt;    &lt;span class="n"&gt;OwnerUserId&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;answersByTags&lt;/span&gt;
    &lt;span class="k"&gt;UNION&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt;    &lt;span class="n"&gt;OwnerUserId&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;commntsByTags&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt;      &lt;span class="n"&gt;au&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OwnerUserId&lt;/span&gt;      &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;User&lt;/span&gt; &lt;span class="n"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DisplayName&lt;/span&gt;
            &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;Count&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;qbt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;questsByTags&lt;/span&gt;  &lt;span class="n"&gt;qbt&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;qbt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OwnerUserId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;au&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OwnerUserId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Num&lt;/span&gt; &lt;span class="n"&gt;Qsts&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;Count&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;abt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;answersByTags&lt;/span&gt; &lt;span class="n"&gt;abt&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;abt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OwnerUserId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;au&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OwnerUserId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Num&lt;/span&gt; &lt;span class="n"&gt;Ans&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;Count&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cbt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;commntsByTags&lt;/span&gt; &lt;span class="n"&gt;cbt&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;cbt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OwnerUserId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;au&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OwnerUserId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Num&lt;/span&gt; &lt;span class="n"&gt;Cmmnts&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;        &lt;span class="n"&gt;allUsers&lt;/span&gt; &lt;span class="n"&gt;au&lt;/span&gt;
&lt;span class="k"&gt;LEFT&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt;   &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;
&lt;span class="k"&gt;ON&lt;/span&gt;          &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;au&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OwnerUserId&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt;       &lt;span class="n"&gt;au&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OwnerUserId&lt;/span&gt; &lt;span class="k"&gt;IS&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt;    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Num&lt;/span&gt; &lt;span class="n"&gt;Ans&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Num&lt;/span&gt; &lt;span class="n"&gt;Cmmnts&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Num&lt;/span&gt; &lt;span class="n"&gt;Qsts&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-permalink-so-you-can-try-it-yourself"&gt;
  &lt;/a&gt;
  The permalink so you can try it yourself
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://data.stackexchange.com/stackoverflow/query/1410231/number-of-questions-answers-and-comments-per-user-per-tag-set?TagName=accessibility&amp;amp;Start=2019-12-31&amp;amp;End=2020-12-31"&gt;https://data.stackexchange.com/stackoverflow/query/1410231/number-of-questions-answers-and-comments-per-user-per-tag-set?TagName=accessibility&amp;amp;Start=2019-12-31&amp;amp;End=2020-12-31&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inputs"&gt;
  &lt;/a&gt;
  Inputs
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Tag - The Stack Overflow tag you want to see rankings for&lt;/li&gt;
&lt;li&gt;Start Date - When to query from&lt;/li&gt;
&lt;li&gt;End Date - When to query to, can be set to a future date if you want it to be "until today".&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#outputs"&gt;
  &lt;/a&gt;
  Outputs
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;User Link - a link to their profile (when exporting to CSV outputs the userID&lt;/li&gt;
&lt;li&gt;User Display Name - the user name, purely so it can be exported to CSV&lt;/li&gt;
&lt;li&gt;Number of questions - how many questions that person asked with that tag&lt;/li&gt;
&lt;li&gt;Number of Answers - number of answers that person gave with that tag on the question &lt;/li&gt;
&lt;li&gt;Number of Comments - the total number of comments across questions and answers given by that user.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#results"&gt;
  &lt;/a&gt;
  Results
&lt;/h3&gt;

&lt;p&gt;For the tag [accessibility] running from 2019-12-31 to 2020-21-31 (first 20 rows)&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;User Link&lt;/th&gt;
&lt;th&gt;DisplayName&lt;/th&gt;
&lt;th&gt;Num Qsts&lt;/th&gt;
&lt;th&gt;Num Ans&lt;/th&gt;
&lt;th&gt;Num Cmmnts&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2702894&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Graham Ritchie&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;188&lt;/td&gt;
&lt;td&gt;512&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1971216&lt;/td&gt;
&lt;td&gt;QuentinC&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4540141&lt;/td&gt;
&lt;td&gt;Adam&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4274933&lt;/td&gt;
&lt;td&gt;Josh&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;469491&lt;/td&gt;
&lt;td&gt;brennanyoung&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3825084&lt;/td&gt;
&lt;td&gt;XLE_22&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1226227&lt;/td&gt;
&lt;td&gt;michaelpuckett&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3147711&lt;/td&gt;
&lt;td&gt;Alex Walczak&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4597840&lt;/td&gt;
&lt;td&gt;Phil Weaver&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10838693&lt;/td&gt;
&lt;td&gt;SAURABH&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4873295&lt;/td&gt;
&lt;td&gt;ShellZero&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14129711&lt;/td&gt;
&lt;td&gt;Unbywyd&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12252274&lt;/td&gt;
&lt;td&gt;Poli97&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5587356&lt;/td&gt;
&lt;td&gt;Super Jade&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6002174&lt;/td&gt;
&lt;td&gt;Tsundoku&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8318731&lt;/td&gt;
&lt;td&gt;Lionel Rowe&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7406840&lt;/td&gt;
&lt;td&gt;Stefany Newman&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4733161&lt;/td&gt;
&lt;td&gt;cloned&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5186515&lt;/td&gt;
&lt;td&gt;nonoandy&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;608042&lt;/td&gt;
&lt;td&gt;Andy&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;For the tag [pagespeed-insights] running from 2019-12-31 to 2020-21-31 (first 20 rows)&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;User Link&lt;/th&gt;
&lt;th&gt;DisplayName&lt;/th&gt;
&lt;th&gt;Num Qsts&lt;/th&gt;
&lt;th&gt;Num Ans&lt;/th&gt;
&lt;th&gt;Num Cmmnts&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2702894&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Graham Ritchie&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;58&lt;/td&gt;
&lt;td&gt;152&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14063860&lt;/td&gt;
&lt;td&gt;Sham&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1710628&lt;/td&gt;
&lt;td&gt;Ramesh Elaiyavalli&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3151817&lt;/td&gt;
&lt;td&gt;addyo&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5585371&lt;/td&gt;
&lt;td&gt;Ferran Buireu&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12242328&lt;/td&gt;
&lt;td&gt;GrÃ©goire&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8698671&lt;/td&gt;
&lt;td&gt;Ozik Jarwo&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11303070&lt;/td&gt;
&lt;td&gt;oreoorbitz&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6331353&lt;/td&gt;
&lt;td&gt;Sam&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10990737&lt;/td&gt;
&lt;td&gt;Ifaruki&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14273874&lt;/td&gt;
&lt;td&gt;Thomas&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2441103&lt;/td&gt;
&lt;td&gt;David Lorenzo LÃ³pez&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;218980&lt;/td&gt;
&lt;td&gt;szymond&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1742382&lt;/td&gt;
&lt;td&gt;stylesuxx&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6820056&lt;/td&gt;
&lt;td&gt;Abhishek Jain&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;681548&lt;/td&gt;
&lt;td&gt;keul&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4425964&lt;/td&gt;
&lt;td&gt;hiew1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;731631&lt;/td&gt;
&lt;td&gt;Erik&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1177814&lt;/td&gt;
&lt;td&gt;Dipen Shah&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1237494&lt;/td&gt;
&lt;td&gt;Samar Panda&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;As you can see the narcissist in me is happy with those results (I am Graham Ritchie, so now you know my real name 😋). &lt;/p&gt;

&lt;p&gt;Not only top of the board but by a decent margin, I consider that challenge complete!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#every-single-answer-given-on-a-particular-tag-by-a-user"&gt;
  &lt;/a&gt;
  Every single answer given on a particular tag by a user
&lt;/h2&gt;

&lt;p&gt;The other thing I wanted was a word count for a given tag.&lt;/p&gt;

&lt;p&gt;Now because I wanted to make this a useful general query there were a few other things I wanted.&lt;/p&gt;

&lt;p&gt;I wanted to know if an answer given was the accepted answer (to work out accepted answer rates). &lt;/p&gt;

&lt;p&gt;I also wanted to be able to work out the total number of points given from a particular tag between particular dates (luckily the accepted answer combined with the "score" column is sufficient for this).&lt;/p&gt;

&lt;p&gt;I wasn't clever enough to work out how to do a word count within the query (or if it is even possible, which I doubt) so I just wanted to grab all of my answers so I could process them elsewhere.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-query"&gt;
  &lt;/a&gt;
  The query
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;DECLARE&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;UserID&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;userid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rtrim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="n"&gt;UserID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;DECLARE&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;tagName&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;tagname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rtrim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="n"&gt;TagName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;DECLARE&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="k"&gt;start&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="k"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rtrim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="k"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;DECLARE&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rtrim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="k"&gt;End&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Title&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;QnTitle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Body&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;QnBody&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AcceptedAnswerId&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;AcceptedID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="k"&gt;CASE&lt;/span&gt;
  &lt;span class="k"&gt;WHEN&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AcceptedAnswerId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt; &lt;span class="s1"&gt;'1'&lt;/span&gt;
  &lt;span class="k"&gt;ELSE&lt;/span&gt; &lt;span class="s1"&gt;'0'&lt;/span&gt;
&lt;span class="k"&gt;END&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;isAccepted&lt;/span&gt;
&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; 
&lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;
&lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parentID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;
&lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt;  &lt;span class="n"&gt;PostTags&lt;/span&gt; &lt;span class="n"&gt;pt&lt;/span&gt;     
&lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PostId&lt;/span&gt;
&lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt;  &lt;span class="n"&gt;Tags&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;          
&lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TagId&lt;/span&gt;
&lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;owneruserid&lt;/span&gt;&lt;span class="o"&gt;=@&lt;/span&gt;&lt;span class="n"&gt;UserID&lt;/span&gt; 
&lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TagName&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;TagName&lt;/span&gt;
&lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreationDate&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="k"&gt;Start&lt;/span&gt;
&lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreationDate&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="k"&gt;End&lt;/span&gt;
&lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PostTypeId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-permalink-so-you-can-try-it-yourself"&gt;
  &lt;/a&gt;
  The permalink so you can try it yourself
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://data.stackexchange.com/stackoverflow/query/1410405/select-answers-for-given-tag-for-a-user-between-two-dates-includes-whether-accep?TagName=accessibility&amp;amp;Start=2019-12-31&amp;amp;End=2020-12-31&amp;amp;UserId=2702894"&gt;https://data.stackexchange.com/stackoverflow/query/1410405/select-answers-for-given-tag-for-a-user-between-two-dates-includes-whether-accep?TagName=accessibility&amp;amp;Start=2019-12-31&amp;amp;End=2020-12-31&amp;amp;UserId=2702894&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inputs"&gt;
  &lt;/a&gt;
  Inputs
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;UserID - the user ID you want to query (can be found by going to a persons profile on SO)&lt;/li&gt;
&lt;li&gt;Tag - The Stack Overflow tag you want to see all answers for&lt;/li&gt;
&lt;li&gt;Start Date - When to query from&lt;/li&gt;
&lt;li&gt;End Date - When to query to, can be set to a future date if you want it to be "until today".&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#outputs"&gt;
  &lt;/a&gt;
  Outputs
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Score - the score is the cumulative up / down votes &lt;/li&gt;
&lt;li&gt;Tags - all tags on the original question&lt;/li&gt;
&lt;li&gt;isAccepted - whether this answer was accepted by the OP (for some strange reason you may have to run the query twice for this to show up!)&lt;/li&gt;
&lt;li&gt;QnTitle - the original title&lt;/li&gt;
&lt;li&gt;QnBody - the original question&lt;/li&gt;
&lt;li&gt;Body - the body of the answer&lt;/li&gt;
&lt;li&gt;A few others as I was lazy and just grabbed the entire entry for the &lt;strong&gt;answer&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#results"&gt;
  &lt;/a&gt;
  Results
&lt;/h3&gt;

&lt;p&gt;I am not going to show the results here due to the number of columns. Instead &lt;a href="https://data.stackexchange.com/stackoverflow/query/1410405/select-answers-for-given-tag-for-a-user-between-two-dates-includes-whether-accep?TagName=accessibility&amp;amp;Start=2019-12-31&amp;amp;End=2020-12-31&amp;amp;UserId=2702894"&gt;run the query yourself&lt;/a&gt; for your own user ID.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The two queries above let you analyse your Stack Overflow contributions in some quite interesting ways.&lt;/p&gt;

&lt;p&gt;For example I found out I had written over 250,000 words in total last year on Stack Overflow! That is quite scary really (it is one of the reasons why I am starting to write on Dev.to instead so I get some benefit from writing so much!)!&lt;/p&gt;

&lt;p&gt;By running the query month by month you can build up an idea of your contributions to a tag over time (something I am still working on).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#living-in-a-niche-lets-you-rank-well"&gt;
  &lt;/a&gt;
  Living in a "niche" lets you rank well
&lt;/h3&gt;

&lt;p&gt;Obviously I hang around in the quiet tags so it is easy to be top of the board, but for you you might find you are close to the top of the board on some more active tags and decide to put some extra effort in to reach the top!&lt;/p&gt;

&lt;p&gt;Or, on the flip side, the queries above might be useful for trying to find people for advice.&lt;/p&gt;

&lt;p&gt;Obviously it isn't a guarantee of getting the best person but being high up the rankings does at least give you an idea of whether they are reasonably knowledgeable on a subject.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#do-you-have-any-fun-queries-to-share"&gt;
  &lt;/a&gt;
  Do you have any fun queries to share?
&lt;/h3&gt;

&lt;p&gt;I like analysing data, I am not very good at it though!&lt;/p&gt;

&lt;p&gt;So does anyone have any interesting queries on data.stackexchange.com they have created or stumbled across? If you have then let me know in the comments!&lt;/p&gt;

&lt;p&gt;Maybe you have a query that works out which tags are most popular? Or which user writes the most comments on the site? Whatever it is be sure to share it!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#final-question-are-you-near-the-top-for-any-tags"&gt;
  &lt;/a&gt;
  Final question - are you near the top for any tags?
&lt;/h3&gt;

&lt;p&gt;Is there a tag that you perform particularly well on? If so share a link to the query and your Stack Overflow ID / Display name so we can see where you shine! &lt;/p&gt;

&lt;p&gt;Don't be afraid of showing off, as you can see this post is half useful, half a way to brag a little bit! 🤣🤣&lt;/p&gt;

&lt;p&gt;For those of you who are awaiting my next mad web experiment, the next one is good fun...."I built a fully functional SPA website using a single DOM element, no CSS and a tonne of JS!"...it took me ages but is nearly finished...coming soon™&lt;/p&gt;

</description>
      <category>sql</category>
      <category>api</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Top 5 Python Coding Practise Playground</title>
      <author>Stokry</author>
      <pubDate>Wed, 19 May 2021 08:29:23 +0000</pubDate>
      <link>https://dev.to/stokry/top-5-python-coding-practise-playground-5gim</link>
      <guid>https://dev.to/stokry/top-5-python-coding-practise-playground-5gim</guid>
      <description>&lt;p&gt;Python is a powerful general-purpose programming language. It is used in web development, data science, creating software prototypes, and so on. Fortunately for beginners, Python has simple easy-to-use syntax. This makes Python an excellent language to learn to program for beginners. &lt;/p&gt;

&lt;p&gt;There are many resources from which you can learn and practice Python right now, below is my list of Python Coding Practise Playgrounds that you can start using right now. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://codingbat.com/python"&gt;Codingbat&lt;/a&gt;. CodingBat is a free site of live coding problems to build coding skill in Java and Python (&lt;a href="https://codingbat.com/prob/p151833"&gt;example problem&lt;/a&gt;). CodingBat is a project by  &lt;a href="http://www-cs-faculty.stanford.edu/~nick/"&gt;Nick Parlante&lt;/a&gt;, a computer science lecturer at Stanford. Going through many practice problem is a great way to solidify your understanding of how the code should work. CodingBat problems work great as homework, or for self-study practice, or in a lab, or as live lecture examples. The  &lt;a href="https://codingbat.com/"&gt;CodingBat&lt;/a&gt;  problems are designed to have low overhead: short problem statements (like an exam), nothing to install, immediate feedback in the browser, and there's lots of them to build up those skills. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.codechef.com/"&gt;CodeChef&lt;/a&gt;. CodeChef was created as a platform to help programmers make it big in the world of &lt;strong&gt;algorithms&lt;/strong&gt;, &lt;strong&gt;computer programming&lt;/strong&gt;, and &lt;strong&gt;programming contests&lt;/strong&gt;. Apart from providing a platform for &lt;strong&gt;programming competitions&lt;/strong&gt;, CodeChef also has various algorithm tutorials and forum discussions to help those who are new to the world of &lt;strong&gt;computer programming&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://coderbyte.com/"&gt;Coderbyte&lt;/a&gt;. Coderbyte is a web application built to help you practice programming and improve your coding skills. They offer a collection of code challenges and web development courses that can help you prepare for upcoming job interviews. The coding challenges range in difficulty and they can all be completed straight in our online editor.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://exercism.io/"&gt;Exercism&lt;/a&gt; Exercism aims to provide opportunity for people of &lt;strong&gt;all backgrounds&lt;/strong&gt; by helping them develop their programming skills through practice and mentorship. They provide thousands of exercises spread across over 50 language tracks, and offer both &lt;strong&gt;automated and human mentoring.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.codewars.com/"&gt;Codewars&lt;/a&gt; Codewars is a collective effort by its users. They are creators - authoring kata to teach various techniques, solving kata with solutions that enlighten others, and commenting with constructive feedback. The leaders among them moderate the content and community.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note&lt;/em&gt;&lt;/strong&gt; - This list is created on the basis of my personal experience. I hope it will help you to learn Python programming.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>python</category>
      <category>learning</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>Telegram bot. Добавим интерактивности</title>
      <author>Stanislav Karol</author>
      <pubDate>Wed, 19 May 2021 08:28:11 +0000</pubDate>
      <link>https://dev.to/slkarol/telegram-bot-amh</link>
      <guid>https://dev.to/slkarol/telegram-bot-amh</guid>
      <description>&lt;p&gt;В &lt;a href="https://dev.to/slkarol/nodejs-2-1f56"&gt;этой заметке&lt;/a&gt; я писал о том, как по команде бота выдаётся случайное фото, а если добавить параметр к команде, то будет целенаправленный выбор темы.&lt;br&gt;
У меня в том боте, который я неспешно сейчас пишу, есть нечто подобное: по команде выбирается случайный канал и из него достаются картинки. Если указали канал, то выбор идёт из указанного. До какого-то момента это меня устраивало, пока список каналов не стал подходить к 10. И тогда я задумал сделать такую возможность: дать пользователю выбрать канал по нажатию на кнопку.&lt;/p&gt;

&lt;p&gt;Вот примерно как это сделано у меня.&lt;br&gt;
Не важно, что вы используете в качестве библиотеки обращения к api, важно понимание этого самого api. Мы будем работать с методом &lt;a href="https://core.telegram.org/bots/api#sendmessage"&gt;sendMessage&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;chatId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Выберите канал:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;reply_markup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;resize_keyboard&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;inline_keyboard&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Случайно&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;random&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}],&lt;/span&gt;
          &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Спорт&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sport&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}],&lt;/span&gt;
          &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Кино&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cinema&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}],&lt;/span&gt;
          &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Музыка&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;music&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}],&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Результат:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qhxrv6PC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzgy98wjyg5ma7gsbkyd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qhxrv6PC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzgy98wjyg5ma7gsbkyd.png" alt="Результат"&gt;&lt;/a&gt;&lt;br&gt;
Здесь у нас каждый массив с объектом- это строка с кнопкой. Можно и по-другому сделать, например так:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;chatId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Выберите канал:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;reply_markup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;resize_keyboard&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;inline_keyboard&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Случайно&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;random&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}],&lt;/span&gt;
          &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Спорт&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sport&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Кино&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cinema&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Музыка&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;music&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cEqw_hjF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ng66ifeowgmvt5l0iap.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cEqw_hjF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ng66ifeowgmvt5l0iap.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Осталось добавить обработчик нажатия на кнопку. В библиотеке node-telegram-bot-api можно это сделать используя функцию &lt;strong&gt;on&lt;/strong&gt; - первый параметр задаёт событие бота, на которое реагировать, второй параметр- обработчик этого события.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// После инициализации бота, задать обработчик &lt;/span&gt;
   &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;callback_query&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;callbackQuery&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// обработчик нажатия на кнопки&lt;/span&gt;
  &lt;span class="nx"&gt;callbackQuery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callbackQuery&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;callbackQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// Спрятать клавиатуру (оптимально)&lt;/span&gt;
    &lt;span class="c1"&gt;// await this.removeHisKeyboard(callbackQuery);&lt;/span&gt;
    &lt;span class="c1"&gt;// См. ниже пояснения&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;answerCallbackQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callbackQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;callbackQuery&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//..&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="cm"&gt;/**
   * Удалить вывод клавиатуры
   */&lt;/span&gt;
  &lt;span class="nx"&gt;removeHisKeyboard&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callbackQuery&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;messageText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;callbackQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;messageId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;callbackQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message_id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;editMessageText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;messageText&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;message_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;messageId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;chat_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;callbackQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;reply_markup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;inline_keyboard&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;      
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Про callbackQuery написано в &lt;a href="https://core.telegram.org/bots/api#callbackquery"&gt;документации по api&lt;/a&gt; - там же объясняется, почему нужно вызывать &lt;em&gt;answerCallbackQuery&lt;/em&gt; . Функция &lt;em&gt;removeHisKeyboard&lt;/em&gt; здесь может и не нужна, но если Вы хотите скрыть клавиатуру, после того, как сделан выбор, то можно ей воспользоваться. Здесь бот редактирует своё сообщение с интерактивным выбором,- он просто очищает inline_keyboard.  &lt;/p&gt;

</description>
      <category>telegram</category>
      <category>node</category>
    </item>
    <item>
      <title>What are the Ways to Prevent an Organization from Phishing Attacks?</title>
      <author>BHHAAVIK Patel</author>
      <pubDate>Wed, 19 May 2021 08:12:21 +0000</pubDate>
      <link>https://dev.to/bhhaavikpatel/what-are-the-ways-to-prevent-an-organization-from-phishing-attacks-2a7c</link>
      <guid>https://dev.to/bhhaavikpatel/what-are-the-ways-to-prevent-an-organization-from-phishing-attacks-2a7c</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RvmPUAHN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lh96hsm949ahjl2dksl8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RvmPUAHN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lh96hsm949ahjl2dksl8.png" alt="Alt Text" title="Ways to Prevent an Organization from Phishing Attacks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Your company might be at risk of compromising valuable data to unknown sources online. The sad part is, you might not even know about it. There are plenty of websites claiming to give you the right &lt;a href="https://www.sattrix.com/phishing-attack-prevention.html"&gt;anti-phishing solutions&lt;/a&gt; for your company. But not all of them are reliable. We are here to provide you with the latest prevention measures to stop phishing attacks for your organization.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#phishing-what-exactly-is-it"&gt;
  &lt;/a&gt;
  Phishing: What exactly is it?
&lt;/h2&gt;

&lt;p&gt;Before we move into how you can fix the problem, let’s first understand what phishing is and why it’s challenging to combat? Phishing is an illicit act executed by a hacker to steal sensitive information through email or communication sources. For instance, users clicking on a link, accessing a malicious file, or website redirection to steal credentials are standard methods to generate phishing attacks.&lt;/p&gt;

&lt;p&gt;With the technology going into the future and interconnectivity becoming more accessible, cybersecurity risks are at an all-time high. What’s scary is that it can cost a company millions of dollars in a flash. Let alone the data breaches. Yes, phishing attacks can be deadly. Within time, you need to put the right phishing attack prevention measures into place to stop it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#phishing-has-evolved-over-time"&gt;
  &lt;/a&gt;
  Phishing Has Evolved Over Time
&lt;/h3&gt;

&lt;p&gt;Most phishing attacks are made via pretending to be genuine-looking emails. The subject lines and content may vary, but these emails display a solid emotion to make the user click or download something or the other.&lt;/p&gt;

&lt;p&gt;In 2021, phishing attacks target a whole lot of communication apps and productivity services. They most likely rely on social networking and cloud-based services to drop their virus into users’ systems. These attacks are most common in regularly used devices and platforms.&lt;/p&gt;

&lt;p&gt;Akamai report says, “Facebook, Slack, Microsoft Resources, Dropbox, and Google Docs are the first point of penetration into organizations for criminals online.” No service on the web is immune to phishing attacks. That’s a sad reality of our online space today.&lt;/p&gt;

&lt;p&gt;The chances are you might even have tried implementing anti-phishing systems to protect your company. Most often, it doesn’t work. Because the hackers are constantly updating their ways to attack business systems and steal data, the need of the hour is to give this one more try to learn the best practices available to stop such attacks.&lt;/p&gt;

&lt;p&gt;Here are some of the best-known methods to stop phishing attacks for your organization. Let’s get started.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-ways-to-protect-your-company-from-phishing-attacks"&gt;
  &lt;/a&gt;
  4 Ways to Protect Your Company From Phishing Attacks
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#1-email-filtering"&gt;
  &lt;/a&gt;
  1. Email Filtering
&lt;/h4&gt;

&lt;p&gt;A Secure Email Gateway should be your topmost priority to defend against online attacks.&lt;/p&gt;

&lt;p&gt;Email gateways act as the first line of defense to filter out malicious emails and threats and rule them out from user inboxes. A reliable email gateway will thwart away 99.99% of spam emails, malicious links, and files. What this means is it can stop users from receiving fraudulent emails in the first place.&lt;/p&gt;

&lt;p&gt;Email gateways help identify compromised accounts and also protect your business emails against such attempts. They can stop your funds from being shared on spam emails of the other companies you work with.&lt;/p&gt;

&lt;p&gt;Using an email gateway for your organization is extremely important, be it any size. Go for affordable, easy to use and highly secure email gateways to stop malicious attacks.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-phishing-protection-inside-your-email-inbox"&gt;
  &lt;/a&gt;
  2. Phishing Protection Inside Your Email Inbox
&lt;/h4&gt;

&lt;p&gt;After a phishing email is inside your email inbox or an account has already been affected, it can put your admin team at a grueling task for a while. What you need here is a Post-Delivery Protection platform to evade such high-risk threats.&lt;/p&gt;

&lt;p&gt;Post-Delivery Protection platforms use AI and machine learning-based algorithms to safeguard organizations from such threats. These algorithms identify the attributes of phishing emails and analyze their behavior with the help of antivirus engines to track such hostile emails. The system then displays the warning pop-ups on these emails, making users aware of the harm it can cause to business systems. It then removes such emails from the organizations’ network completely.&lt;/p&gt;

&lt;p&gt;Post-Delivery Protection systems serve as a great help to organizations that deal with high-value and sensitive data. It is one of the most reliable solutions for solid &lt;a href="https://sattrix.com/blog/what-is-phishing-why-phishing-assessment-is-much-needed-for-organization/"&gt;protection against all variants of phishing attacks&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Using them with a Secure Email Gateway adds multi-layer security for your enterprise. Their integration is easy and can prove to be a high-value solution.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-website-filtering"&gt;
  &lt;/a&gt;
  3. Website Filtering
&lt;/h4&gt;

&lt;p&gt;Web filtering is another excellent method to stop attackers from stealing user information and accessing company websites. It often works as a web proxy or filters out using DNS. What these filters do is sort web pages into different classes and use antivirus algorithms to scan and detect threats.&lt;/p&gt;

&lt;p&gt;Your organization can then block these harmful threats and put restoration policies in place. This not only stops users from accessing any phishing pages but also protects their accounts and financial details.&lt;/p&gt;

&lt;p&gt;NOTE: Complex web filtering solutions also use machine learning algorithms to detect and stop phishing attacks.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-simulated-phishing-attack-tests"&gt;
  &lt;/a&gt;
  4. Simulated Phishing Attack Tests
&lt;/h4&gt;

&lt;p&gt;Carrying out phishing attacks simulation can be a great way to make your employees aware of the threats. This helps admins to know the number of risks they might face from phishing and direct proper training as needed. &lt;/p&gt;

&lt;p&gt;You can find many vendors who can source many simulated email campaigns and send them out to your employees. These vendors also offer security awareness training programs to train your employees against such phishing emails.&lt;/p&gt;

&lt;p&gt;The #1 phishing simulation platform comes with phishing simulation templates that you can customize to make it more relevant for your business. You can customize almost all page sections - text, call-to-action, images, and a lot more. It can either make it more challenging or super easy to identify phishing emails. Admins can personalize the landing page to alert users if they have been victims of the simulated phishing attacks.&lt;/p&gt;

&lt;p&gt;This can help your employees who struggle to identify phishing threats. Making everyone familiar with your organization can be a pivotal factor in stopping such attacks.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h5&gt;

&lt;p&gt;Protecting your company against malicious attacks requires intense cybersecurity awareness training. Along with that, you need to keep your systems ready to detect and thwart any such attacks right away. Taking the help of AI-based systems can boost your overall fight to keep phishing attacks at bay. &lt;/p&gt;

</description>
      <category>cybersecurity</category>
      <category>phishingattacks</category>
      <category>security</category>
      <category>antiphishingsolutions</category>
    </item>
  </channel>
</rss>
