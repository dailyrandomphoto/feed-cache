<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>JSConfetti is now could be downloaded from CDN 🎉</title>
      <author>Vladimir Nikitin</author>
      <pubDate>Fri, 25 Jun 2021 15:29:52 +0000</pubDate>
      <link>https://dev.to/loonywizard/jsconfetti-is-now-could-be-downloaded-from-cdn-3i10</link>
      <guid>https://dev.to/loonywizard/jsconfetti-is-now-could-be-downloaded-from-cdn-3i10</guid>
      <description>&lt;p&gt;Hi everyone!&lt;/p&gt;

&lt;p&gt;Wanted to share, that my open-source library &lt;a href="https://github.com/loonywizard/js-confetti"&gt;JSConfetti&lt;/a&gt; is now could be downloaded from CDN:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/js-confetti@latest/dist/js-confetti.browser.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, &lt;code&gt;JSConfetti&lt;/code&gt; class could be accessed as global variable, and you can fire confetti by calling method &lt;code&gt;addConfetti()&lt;/code&gt; on JSConfetti class instance&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;jsConfetti&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;JSConfetti&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;jsConfetti&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addConfetti&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;JSConfetti works without any config, but could be configurable, check out &lt;a href="https://github.com/loonywizard/js-confetti"&gt;documentation on GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Links: &lt;a href="https://github.com/loonywizard/js-confetti"&gt;GitHub&lt;/a&gt; | &lt;a href="https://www.npmjs.com/package/js-confetti"&gt;NPM&lt;/a&gt; | &lt;a href="https://loonywizard.github.io/js-confetti/"&gt;Library Website&lt;/a&gt; | &lt;a href="https://codesandbox.io/s/confetti-vanilla-js-r5kqi"&gt;CodeSandbox Playground&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>frontend</category>
    </item>
    <item>
      <title>How to Deploy a Python Flask App on Heroku Using Docker</title>
      <author>Evan J</author>
      <pubDate>Fri, 25 Jun 2021 15:19:42 +0000</pubDate>
      <link>https://dev.to/ejach/how-to-deploy-a-python-flask-app-on-heroku-using-docker-mpc</link>
      <guid>https://dev.to/ejach/how-to-deploy-a-python-flask-app-on-heroku-using-docker-mpc</guid>
      <description>&lt;p&gt;Hello!&lt;br&gt;
Today I will demonstrate how to deploy a containerized Python Flask application to Heroku using Docker.&lt;br&gt;
This tutorial is separated into four parts:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#creating-the-flask-application-using-python"&gt;Creating the Flask application using Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#containerizing-the-application-using-docker"&gt;Containerizing the application using Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deploying-the-container-to-heroku"&gt;Deploying the container to Heroku&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/Flask/"&gt;Flask&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A &lt;a href="https://docs.docker.com/get-docker/"&gt;Docker&lt;/a&gt; installation&lt;/li&gt;
&lt;li&gt;A &lt;a href="https://signup.heroku.com/"&gt;Heroku&lt;/a&gt; Account / &lt;a href="https://devcenter.heroku.com/articles/heroku-cli"&gt;Heroku CLI&lt;/a&gt; installation&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#creating-the-flask-application-using-python"&gt;
  &lt;/a&gt;
  Creating the Flask application using Python
&lt;/h3&gt;

&lt;p&gt;We will be creating a "Hello World!" application to maintain simplicity.&lt;br&gt;
The file structure by the end of this tutorial will look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;├───FlaskApp
  └───app.py           # Our main application
  └───main.py          # Used by gunicorn to run the app
  └───requirements.txt # The packages we will be using
  └───Dockerfile       # Used to create the Docker container
  └───Procfile         # Used to deploy the container to Heroku
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To start out, create an empty directory using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo mkdir FlaskApp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And &lt;code&gt;cd&lt;/code&gt; into the directory using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cd FlaskApp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create two files called &lt;code&gt;app.py&lt;/code&gt; and &lt;code&gt;requirements.txt&lt;/code&gt;.&lt;br&gt;
In requirements.txt, insert the line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;flask==2.0.1
gunicorn==20.1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, to install the required packages, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then open up &lt;code&gt;app.py&lt;/code&gt; in your favorite code editor and add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#Import the flask module
from flask import Flask

app = Flask(__name__)

@app.route('/')
def hello_world():
    statement = 'Hello World!'
    return statement

if __name__ == '__main__':
    #Calls the run method, runs the app on port 5000
    app.run(host='0.0.0.0', port='5000')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, create a file called &lt;code&gt;main.py&lt;/code&gt; and add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from app import app

# Gets the app from app.py and runs it
if __name__ == "__main__":
    app.run()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then run the program using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ gunicorn --bind 0.0.0.0:5000 main:app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you should get an output that looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[2021-06-25 10:33:51 -0400] [1607] [INFO] Starting gunicorn 20.1.0
[2021-06-25 10:33:51 -0400] [1607] [INFO] Listening at: http://0.0.0.0:5000 (1607)
[2021-06-25 10:33:51 -0400] [1607] [INFO] Using worker: sync
[2021-06-25 10:33:51 -0400] [1609] [INFO] Booting worker with pid: 1609
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After accessing the URL that was provided upon executing at &lt;code&gt;http://yourip:5000&lt;/code&gt;, the page should look something like:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FwPz-9Us--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e064agz7vhti6c22pigi.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FwPz-9Us--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e064agz7vhti6c22pigi.PNG" alt="Example Output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that your Python Application is up and running, let's go over how to containerize it using Docker.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#containerizing-the-application-using-docker"&gt;
  &lt;/a&gt;
  Containerizing the application using Docker
&lt;/h3&gt;

&lt;p&gt;In your &lt;code&gt;FlaskApp&lt;/code&gt; directory, create a file with &lt;em&gt;no file extension&lt;/em&gt; called &lt;code&gt;Dockerfile&lt;/code&gt; and add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#Create a ubuntu base image with python 3 installed.
FROM python:3.8

#Set the working directory
WORKDIR /

#copy all the files
COPY . .

#Install the dependencies
RUN apt-get -y update
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y python3 python3-pip
RUN pip3 install -r requirements.txt

#Expose the required port
EXPOSE 5000

#Run the command
CMD gunicorn main:app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After this, build the Docker image by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker build -t flask-app .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then run it using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker run flask-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you should get the same output as if you were running it normally:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;2021-06-25T15:08:47.958205+00:00 app[web.1]: [2021-06-25 15:08:47 +0000] [5] [INFO] Starting gunicorn 20.1.0
2021-06-25T15:08:47.958983+00:00 app[web.1]: [2021-06-25 15:08:47 +0000] [5] [INFO] Listening at: http://0.0.0.0:5000 (5)
2021-06-25T15:08:47.958983+00:00 app[web.1]: [2021-06-25 15:08:47 +0000] [5] [INFO] Using worker: sync
2021-06-25T15:08:47.962897+00:00 app[web.1]: [2021-06-25 15:08:47 +0000] [7] [INFO] Booting worker with pid: 7
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you should get the expected output at the given IP address at &lt;code&gt;http://yourip:5000&lt;/code&gt;:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FwPz-9Us--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e064agz7vhti6c22pigi.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FwPz-9Us--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e064agz7vhti6c22pigi.PNG" alt="Example Output"&gt;&lt;/a&gt;&lt;br&gt;
Congratulations! You have successfully created a Flask application and containerized it using Docker!&lt;br&gt;
Now we will go over how to deploy this container to Heroku using their container registry.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#deploying-the-container-to-heroku"&gt;
  &lt;/a&gt;
  Deploying the container to Heroku
&lt;/h3&gt;

&lt;p&gt;Given that the Heroku CLI is installed as stated in the &lt;a href="#prerequisites"&gt;prerequisites&lt;/a&gt;, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you will be prompted to enter your Heroku credentials.&lt;br&gt;
Once logged in, create an application by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku create &amp;lt;your_app_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, login to the Heroku container registry by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku container:login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which should produce:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Login Succeeded
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your &lt;code&gt;FlaskApp&lt;/code&gt; directory, create a file with &lt;em&gt;no extension&lt;/em&gt; called &lt;code&gt;Procfile&lt;/code&gt; and add:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;web: gunicorn main:app 0.0.0.0:$PORT
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, in our &lt;code&gt;app.py&lt;/code&gt; file, we need to add/modify the following lines marked with arrows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Import OS to get the port environment variable from the Procfile
import os # &amp;lt;-----
# Import the flask module
from flask import Flask

# Create a Flask constructor. It takes name of the current module as the argument
app = Flask(__name__)

@app.route('/')
def hello_world():
    statement = 'Hello World!'
    return statement


# Create the main driver function
if __name__ == '__main__':
    port = int(os.environ.get("PORT", 5000)) # &amp;lt;-----
    app.run(host='0.0.0.0', port=port)       # &amp;lt;-----
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After editing the file, we must push the container to Heroku using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku container:push web --app &amp;lt;your_app_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After your app's container builds, release it to Heroku using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku container:release web --app &amp;lt;your_app_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which will produce the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Releasing images web to &amp;lt;your_app_name&amp;gt;... done
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once it is released, you can access the logs of your new container using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku logs --tail --app &amp;lt;your_app_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you should see something along the lines of:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;2021-06-25T15:08:45.662062+00:00 heroku[web.1]: Starting process with command `/bin/sh -c gunicorn\ main:app`
2021-06-25T15:08:47.958205+00:00 app[web.1]: [2021-06-25 15:08:47 +0000] [5] [INFO] Starting gunicorn 20.1.0
2021-06-25T15:08:47.958983+00:00 app[web.1]: [2021-06-25 15:08:47 +0000] [5] [INFO] Listening at: http://0.0.0.0:34683 (5)
2021-06-25T15:08:47.958983+00:00 app[web.1]: [2021-06-25 15:08:47 +0000] [5] [INFO] Using worker: sync
2021-06-25T15:08:47.962897+00:00 app[web.1]: [2021-06-25 15:08:47 +0000] [7] [INFO] Booting worker with pid: 7
2021-06-25T15:08:48.409823+00:00 heroku[web.1]: State changed from starting to up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you should now be able to access your application through your new app's URL with the expected output of:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cmiEBtn2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qf1kc2iwyo7daanohdej.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cmiEBtn2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qf1kc2iwyo7daanohdej.PNG" alt="Heroku Output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Congratulations! This tutorial has taught you how to create a Python Flask application, containerize it, and then deploy it to Heroku.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>heroku</category>
      <category>python</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>8 Amazing Instant Button Hover Effect </title>
      <author>Nikhil Bobade </author>
      <pubDate>Fri, 25 Jun 2021 15:07:26 +0000</pubDate>
      <link>https://dev.to/nikhil27b/8-amazing-instant-button-hover-effect-2kf9</link>
      <guid>https://dev.to/nikhil27b/8-amazing-instant-button-hover-effect-2kf9</guid>
      <description>&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;Today I have written post about the 8 Amazing Instant Button Hover Effect With using HTML &amp;amp; CSS. This is a very useful effect you can use that in your code. I hope you like this also comments about your thoughts.&lt;br&gt;
For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#checkout-recent-post-"&gt;
  &lt;/a&gt;
  Checkout recent post :
&lt;/h5&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/nikhil27b" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L13Hplw---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--DVAuMQ0j--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/481802/ff897af1-c333-4e04-8f08-d6d1356a1c14.jpeg" alt="nikhil27b"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/nikhil27b/amazing-button-animation-using-html-js-2ga1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Amazing Button Animation Using HTML &amp;amp; JS&lt;/h2&gt;
      &lt;h3&gt;Nikhil Bobade  ・ Jun 22 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/ZEePZrg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;


&lt;div class="instagram-position"&gt;
  &lt;iframe id="instagram-liquid-tag" src="https://www.instagram.com/p/CPn2eUwBTUp/embed/captioned"&gt;
  &lt;/iframe&gt;
  
&lt;/div&gt;


</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Where do You Belong in Tech</title>
      <author>Firangiz Ganbarli</author>
      <pubDate>Fri, 25 Jun 2021 14:58:14 +0000</pubDate>
      <link>https://dev.to/firangizg/where-do-you-belong-in-tech-29b7</link>
      <guid>https://dev.to/firangizg/where-do-you-belong-in-tech-29b7</guid>
      <description>&lt;p&gt;From what I have seen, majority of the blog posts on dev.to are written by web devs. That may be because of the increasing popularity of it, however, there are dozens of other career possibilities within the tech industry and I would like to introduce them in this blog post so that you too can explore different areas of the technology world. &lt;/p&gt;

&lt;p&gt;And this is not an exhausting list, there are many more careers that I have not included. Research further if interested.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#list-of-careers"&gt;
  &lt;/a&gt;
  List of Careers
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;      Cyber Security Engineer&lt;/li&gt;
&lt;li&gt;      Front-End Web Developer&lt;/li&gt;
&lt;li&gt;      Backend Web Developer&lt;/li&gt;
&lt;li&gt;      UI/UX Designer&lt;/li&gt;
&lt;li&gt;      DevOps&lt;/li&gt;
&lt;li&gt;      Mobile Engineer&lt;/li&gt;
&lt;li&gt;      QA Engineer&lt;/li&gt;
&lt;li&gt;      Product Manager&lt;/li&gt;
&lt;li&gt;      Data Scientist &lt;/li&gt;
&lt;li&gt;     Embedded Software Engineer&lt;/li&gt;
&lt;li&gt;  Systems Administrator&lt;/li&gt;
&lt;li&gt;  Database Administrator &lt;/li&gt;
&lt;li&gt;  Networking Engineer&lt;/li&gt;
&lt;li&gt;  Hardware Engineer&lt;/li&gt;
&lt;li&gt;  OS Developer&lt;/li&gt;
&lt;li&gt;  Video Game Developer&lt;/li&gt;
&lt;li&gt;  Technical Account Manager&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#how-to-know-which-one-is-for-you"&gt;
  &lt;/a&gt;
  How to Know Which One is For You
&lt;/h3&gt;

&lt;p&gt;You can never know for sure unless you have tried it all. But that takes time to experiment, so here is a little tip that helped me. &lt;/p&gt;

&lt;p&gt;Select top 3 from the list above. Now, choose one from them and try out a side project or learn it for a month. If you like it, continue. If you don't, move on to the second. &lt;/p&gt;

&lt;p&gt;If you are done with your top three, rinse and repeat. I still advise you to learn about other fields even if you liked your first selection though. &lt;/p&gt;

&lt;p&gt;Good luck fellas! &lt;/p&gt;

</description>
      <category>beginners</category>
      <category>career</category>
      <category>productivity</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to Trigger an AWS Lambda from SNS</title>
      <author>Alex Kates</author>
      <pubDate>Fri, 25 Jun 2021 14:49:21 +0000</pubDate>
      <link>https://dev.to/aws-builders/how-to-trigger-an-aws-lambda-from-sns-4c3a</link>
      <guid>https://dev.to/aws-builders/how-to-trigger-an-aws-lambda-from-sns-4c3a</guid>
      <description>&lt;p&gt;In this post we are going to use the AWS CDK to build an AWS Lambda Function that triggers from an AWS SNS message.&lt;/p&gt;

&lt;p&gt;All of the code &lt;a href="https://github.com/alexkates/how-to-trigger-lambda-from-sns"&gt;can be found in this repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;p&gt;We need to run a few commands to setup our CDK app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;how-to-trigger-lambda-from-sns
&lt;span class="nb"&gt;cd &lt;/span&gt;how-to-trigger-lambda-from-sns
npx cdk init app &lt;span class="nt"&gt;--language&lt;/span&gt; typescript

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should give you the following directory structure.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GjPCpld2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b3yf4dh4g8i09ww91719.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GjPCpld2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b3yf4dh4g8i09ww91719.png" alt="Directory structure after running the CDK init command"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also make sure you have your AWS CLI configured. For more information follow &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html"&gt;the AWS CLI quickstart guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#create-an-sns-topic"&gt;
  &lt;/a&gt;
  Create an SNS Topic
&lt;/h2&gt;

&lt;p&gt;Install the SNS CDK package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i @aws-cdk/aws-sns
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open &lt;code&gt;lib/how-to-trigger-lambda-from-sns-stack.ts&lt;/code&gt;, add a new SNS topic, and deploy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;sns&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-sns&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HowToTriggerLambdaFromSnsStack&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StackProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;topic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;sns&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Topic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OurSnsTopic&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Our SNS Topic&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nice! Let's deploy the stack.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm run cdk deploy&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-lambda"&gt;
  &lt;/a&gt;
  Create a Lambda
&lt;/h2&gt;

&lt;p&gt;Install the Lambda CDK package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i @aws-cdk/aws-lambda
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Deploying a Lambda function requires bootstrapping your CDK app which gives us an S3 bucket where our Lambda's source code will live. This is a one time operation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run cdk bootstrap
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create src/index.js and paste the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Records&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Record: %j&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open &lt;code&gt;lib/how-to-trigger-lambda-from-sns-stack.ts&lt;/code&gt;, add a new Lambda function, and deploy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;sns&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-sns&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-lambda&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HowToTriggerLambdaFromSnsStack&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StackProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;topic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;sns&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Topic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OurSnsTopic&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Our SNS Topic&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lambdaFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Function&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Code&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromAsset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;index.handler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;functionName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SnsMessageHandler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;runtime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Runtime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NODEJS_12_X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Deploy again ...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run cdk deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may need to confirm some IAM changes.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mybku6CA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4hmlx6dwx73y6l6uicxy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mybku6CA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4hmlx6dwx73y6l6uicxy.png" alt="IAM changes after deploying stack with Lambda function"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#create-the-event-source"&gt;
  &lt;/a&gt;
  Create the Event Source
&lt;/h2&gt;

&lt;p&gt;Install the Lambda Event Sources CDK package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i @aws-cdk/aws-lambda-event-sources
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open lib/how-to-trigger-lambda-from-s3-stack.ts, add a new S3EventSource to the Lambda Function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;sns&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-sns&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-lambda&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;lambdaEventSources&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-lambda-event-sources&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HowToTriggerLambdaFromSnsStack&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StackProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;topic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;sns&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Topic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OurSnsTopic&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Our SNS Topic&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lambdaFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Function&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Code&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromAsset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;index.handler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;functionName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SnsMessageHandler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;runtime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Runtime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NODEJS_12_X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eventSource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;lambdaEventSources&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SnsEventSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;topic&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;lambdaFunction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;eventSource&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One more deployment ...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run cdk deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One last time, you may need to approve IAM changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8igq6C8g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vc1t36m54ue4v8w4qwbk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8igq6C8g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vc1t36m54ue4v8w4qwbk.png" alt="IAM changes approval after deploying the SNS event source"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h2&gt;

&lt;p&gt;We are going to make use of the AWS CLI to test our stack.&lt;/p&gt;

&lt;p&gt;First, we need the ARN of our SNS topic, which you can get using the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;aws sns list-topics &lt;span class="nt"&gt;--query&lt;/span&gt; &lt;span class="s2"&gt;"Topics[?contains(TopicArn, 'OurSnsTopic')]"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, using the TopicArn from the previous command, use the AWS CLI to publish a new message to Our SNS Topic. Your topic ARN may vary, but for me this command looks like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;aws sns publish &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--topic-arn&lt;/span&gt; &lt;span class="s2"&gt;"arn:aws:sns:us-east-2:472331918655:HowToTriggerLambdaFromSnsStack-OurSnsTopic2ED19057-1GAA1XT2U6XXH"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--message&lt;/span&gt; &lt;span class="s2"&gt;"Hello from SNS"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Verify that the Lambda executed by looking in CloudWatch. Find the LogGroup named &lt;code&gt;/aws/lambda/SnsMessageHandler&lt;/code&gt; and open up the latest LogStream. You should see some log messages that look similar to this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yiCBnDkY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1qwuh60kekg2mcchnsp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yiCBnDkY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1qwuh60kekg2mcchnsp.png" alt="CloudWatch results after publish a new SNS message"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#clean-up"&gt;
  &lt;/a&gt;
  Clean Up
&lt;/h2&gt;

&lt;p&gt;Don't forget to delete your stack when you are finished!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run cdk destroy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks for reading! If you found this useful, please follow me here &lt;br&gt;
&lt;a href="https://dev.to/thealexkates"&gt;https://dev.to/thealexkates&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/thealexkates"&gt;https://twitter.com/thealexkates&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>tutorial</category>
      <category>eventdriven</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Software Development Life Cycle: Beginners Guide </title>
      <author>Rishabhraghwendra18</author>
      <pubDate>Fri, 25 Jun 2021 14:04:11 +0000</pubDate>
      <link>https://dev.to/rishabhraghwendra/software-development-life-cycle-beginners-guide-k8p</link>
      <guid>https://dev.to/rishabhraghwendra/software-development-life-cycle-beginners-guide-k8p</guid>
      <description>&lt;p&gt;You may have heard the term Software Development Life Cycle (SDLC) and are curious to know what it means and it’s benefits?&lt;br&gt;
My Blog will provide all that information in a simplified way for the beginners. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is SDLC?&lt;/strong&gt;&lt;br&gt;
SDLC stands for software development life cycle.It’s a systematic process for building software that ensures the quality &amp;amp; correctness of the software build .In simple terms , it’s a planning process before developing the software .&lt;/p&gt;

&lt;p&gt;You may have heard of the quote &lt;em&gt;“Think twice, code once.”&lt;/em&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dHuOwqKx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0y3p08uyzor7barhgsoe.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dHuOwqKx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0y3p08uyzor7barhgsoe.jpg" alt="Think twice code once"&gt;&lt;/a&gt;&lt;br&gt;
It’s true , we should follow this approach and such an approach can be achieved with the help of SDLC.&lt;/p&gt;

&lt;p&gt;We plan each and every step like requirements, coding conventions, design patterns, etc in SDLC . We do so to achieve goals in less time , save money and prevent chaos .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SDLC Phases&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5esn8dHn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/22wqjhzbpebokzic8jdy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5esn8dHn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/22wqjhzbpebokzic8jdy.jpg" alt="SDLC Phases"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Phase 1: Planning&lt;/strong&gt;&lt;br&gt;
This is the most important or crucial stage of the process . It defines the success or failure of the project . If a project is not thoroughly planned , we are likely to fail to build it.&lt;/p&gt;

&lt;p&gt;Here the senior members take input about the project from the customer , then domain experts analyse it and estimate the cost of the project as well as the risk factors .&lt;/p&gt;

&lt;p&gt;With the help of experts , marketing team and surveys they are able to minimize the risk factors and the cost to the team . &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phase 2: Defining&lt;/strong&gt;&lt;br&gt;
After the planning phase is complete , now it’s time to document it . This document is called &lt;strong&gt;SRS( Software Requirement Specification )&lt;/strong&gt; .It includes all the product requirements needed during the life cycle process . Later on the SRS is sent to the customer or the market analyst for approval .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phase 3: Designing&lt;/strong&gt;&lt;br&gt;
After the approval of the SRS document, a &lt;strong&gt;DDS( Design Document Specification )&lt;/strong&gt; is proposed at this stage. It contains all the architecture (follow &amp;amp; managing of data) and design patterns (paradigms to follow while coding) proposed considering all the requirements and risk factors involved . &lt;/p&gt;

&lt;p&gt;Later on, all the stakeholders review the DDS and select a good fit architecture &amp;amp; pattern for the project . &lt;/p&gt;

&lt;p&gt;DDS contains the data flow structure from different modules (if any) . The more DDS is detailed about every step, the easier the development phase.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phase 4:Building&lt;/strong&gt;&lt;br&gt;
This is the stage where real fun begins - coding. DDS is sent to developers . Developers follow the layed out patterns in the document.&lt;/p&gt;

&lt;p&gt;It includes tools a developer needs while developing like compiler , interpreter , debugger , etc . It also includes in which high level languages like C, JavaScript , Python,etc  he/she should code .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phase 5:Testing&lt;/strong&gt;&lt;br&gt;
We can say it’s a subset of coding . In the real world we follow TDD -  Test Driven Development , it means we test every piece of code that we have written . Same process here is also followed.&lt;/p&gt;

&lt;p&gt;Here each piece of function is tested rigorously . We perform tests on each and every function and part of the application . This helps us to identify bugs , unexpected errors at an early stage . &lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you have testing skills as a developer then you have an edge over other developers so it’s recommended to learn this skill too to get high chances of your resume getting shortlisted.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phase 6: Deployment &amp;amp; Maintenance&lt;/strong&gt;&lt;br&gt;
After testing (removing each and every bug), your application is ready to be deployed for the public.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: Before deploying there is a staging environment where Testers test applications under heavy load but we are not going into much details right now .&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Regular feedback is taken from the public - who are using their application to spot any bug or error that is not spotted in the testing phase . Afterwards the team analyzes the problem and solves the bug and redeploy it .This process of feedback &amp;amp; resolving bugs continues .&lt;/p&gt;

&lt;p&gt;Our newly deployed application is also monitored . It helps us to get insight out how much load we are getting on our application and what should be our next task to manage this load much more efficiently .&lt;/p&gt;

&lt;p&gt;This whole process of SDLC repeatedly  &lt;em&gt;goes-on-and-on&lt;/em&gt;  - forever till the application gets outdated -  adding new features , resolving new bugs , etc.&lt;/p&gt;

&lt;p&gt;Here we have only discussed what SDLC is , it’s benefits and phases . But it’s not the end . There are different models/methodologies we follow in SDLC for eg Agile, Iterative, Waterfall Model, etc . Each of these models have their pros and cons. We will discuss this in the next blog.&lt;/p&gt;

&lt;p&gt;Thanks for reading,&lt;br&gt;
Written with  ❤️ &amp;amp; passion 🔥 by &lt;em&gt;Rishabh Raghwendra&lt;/em&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>sdlc</category>
      <category>softwaredevelopment</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Why I love creating simple languages</title>
      <author>Phu Minh</author>
      <pubDate>Fri, 25 Jun 2021 14:03:01 +0000</pubDate>
      <link>https://dev.to/freakcdev297/why-i-love-creating-simple-languages-3l4m</link>
      <guid>https://dev.to/freakcdev297/why-i-love-creating-simple-languages-3l4m</guid>
      <description>&lt;p&gt;First of all, who am I? I'm just a random coder who like programming languages and love to create some (mostly *esolangs). In the past, I've built some small *esoteric languages which I will mention while we progress through the article.&lt;/p&gt;

&lt;p&gt;(*) Languages that are created for fun, or with mind-challenging rules, or to just be a joke.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-i-like-creating-them"&gt;
  &lt;/a&gt;
  Why I like creating them?
&lt;/h1&gt;

&lt;p&gt;I've always wondered how a programming language just magically works and brings my dreamt projects to reality. Now that I actually try to create one, I have gained a lot of knowledge about how they actually functions. Furthermore, it has come in handy in some of my work (in creating tools and extensions for coders specifically), where I can just copy my old parser or lexer and paste it into the new codebase (lol).&lt;/p&gt;

&lt;p&gt;Or it's just somewhat amazing to proudly say "I created my own programming language".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#esolangs"&gt;
  &lt;/a&gt;
  Esolangs
&lt;/h2&gt;

&lt;p&gt;When talking about esolangs, it's a whole different story. It's just fun coming up with weird and quirky ideas and just throw them into a language. It's also fun making extremely hard ones, sometimes challenges can be interesting :D&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-it-for-your-own-projects"&gt;
  &lt;/a&gt;
  Use it for your own projects
&lt;/h2&gt;

&lt;p&gt;For this section only, I'll target both "you" and "I" as it's kind of an opened thread.&lt;/p&gt;

&lt;p&gt;If you like your own language syntactically or for how it works, or just because it just serves you better in some special cases comparing to ones that are popular, then you can totally use it with little doubts.&lt;br&gt;
In my case, me and my teammates have created "Cassidy", which is basically just C# on the web. It brings safety and precision to our projects.&lt;/p&gt;

&lt;p&gt;Besides, if you just create a superset of another language, then it can stick into the whole codebase without damaging your project anyway, so it's probably usable. &lt;em&gt;Speaking from experiences&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#languages-i-have-created"&gt;
  &lt;/a&gt;
  Languages I have created
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/FreakC-Foundation/FreakC"&gt;FreakC (18+)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nguyenphuminh/Jellyscript"&gt;Jellyscript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nguyenphuminh/brainfuckjs"&gt;A brainf*ck implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nguyenphuminh/VNC"&gt;VNC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cassidy (not public)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's all, hope you would share your thoughts in the comment section :D&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>languages</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 25 Jun 2021 14:00:51 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-10c6</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-10c6</guid>
      <description>&lt;p&gt;Hey there!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Looking back on your week, what was something you're proud of?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All wins count — big or small 🎉&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Cooking something delicious... or whatever else might spark joy ❤️ &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Congrats on your wins this week!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/5wFUyB8MfaXthrK3OT/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/5wFUyB8MfaXthrK3OT/giphy.gif" alt="Kid in headphones doing a cartwheel"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>Comment fonctionne le Async / Await en javascript ?</title>
      <author> Eric Le Codeur</author>
      <pubDate>Fri, 25 Jun 2021 13:58:01 +0000</pubDate>
      <link>https://dev.to/ericlecodeur/comment-fonctionne-le-async-await-en-javascript-3kf9</link>
      <guid>https://dev.to/ericlecodeur/comment-fonctionne-le-async-await-en-javascript-3kf9</guid>
      <description>&lt;h2&gt;Synchrone vs Asynchrone&lt;/h2&gt;

&lt;p&gt;Le code &lt;b&gt;synchrone&lt;/b&gt; est exécuté ligne par ligne. Chaque ligne de code attend toujours la fin de la ligne précédente avant d'exécuter la suivante. Alors évidemment, le problème est qu'une opération longue durée bloquera l'exécution du code.&lt;/p&gt;

&lt;p&gt;Le code &lt;b&gt;asynchrone&lt;/b&gt; quant à lui n'est pas bloquant, alors il n'attend pas la fin d'une autre tâche.&lt;/p&gt;

&lt;p&gt;Un exemple d'asynchrone en javascript est la fonction fetch() Fetch) permet d'obtenir des données (généralement en format JSON) à un serveur web de manière dynamique (sans bloqué l'exécution du code et sans recharger la page)&lt;/p&gt;

&lt;p&gt;Une fonction asynchrone moderne comme fetch() renvoie une promesse. aka, un conteneur/espace réservé pour un résultat futur. Le futur résultat/valeur est la réponse de l'appel fetch.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Exemple d'une fonction fetch() renvoyant une promesse&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://example.com/api/cats&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Retourne une promesse&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Promise {&amp;lt;pending&amp;gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Une promesse est en attente jusqu'à ce qu'elle soit réglée (terminé). Il peut avoir deux statuts réglés : accompli (succès) ou rejeté (erreur).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Exemple d'une fonction fetch() renvoyant une promesse&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getCatsImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// La fonction fetch() renvoie une promesse&lt;/span&gt;
  &lt;span class="c1"&gt;// Lorsque la promesse est remplie, la fonction s'exécute&lt;/span&gt;
  &lt;span class="c1"&gt;// Le résultat est contenu dans le paramètre data&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://example.com/api/cats&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;loadCatImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Gestion des erreurs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getCatsImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// La fonction fetch() renvoie une promesse&lt;/span&gt;
  &lt;span class="c1"&gt;// Lorsque la promesse est remplie, la fonction s'exécute&lt;/span&gt;
  &lt;span class="c1"&gt;// Le résultat est contenu dans le paramètre data&lt;/span&gt;
  &lt;span class="c1"&gt;// Si y il a erreur la fonction catch() va s'éxécuter&lt;/span&gt;
  &lt;span class="c1"&gt;// La fonction finally() s'éxécute dans tous les cas&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://example.com/api/cats&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;loadCatImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Run after both&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Créer une promesse&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wait&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;wait over&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// wait over&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Async / Await&lt;/em&gt;&lt;br&gt;
La fonction async et le mot-clé await ont été introduits comme une extension des promesses. Ils ont été introduits pour rendre la programmation asynchrone basée sur des promesses plus lisible. Async/await simplifie simplement la syntaxe utilisée pour consommer une promesse.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Async exécute la fonction en mode asynchrone&lt;/span&gt;
&lt;span class="c1"&gt;// et retourne une promesse&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;delay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Await met en pause le bloc de fonction asynchrone du code&lt;/span&gt;
  &lt;span class="c1"&gt;// jusqu'à ce que la promesse retourne un résultat&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;wait over&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Catch error in async/await&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;delay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;wait over&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;// You can also throw error up to calling parent&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Le mot-clé await ne peut être utilisé que dans une fonction Async. Donc, pour utiliser await dans le module principal, vous devez créer un IIFE (fonction immédiatement invoquée)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getCats&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cats&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;end&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Même concept mais avec l'opérateur then()&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;getCats&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cats&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cats&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;end&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Exécuter des promesses en parallèle&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// const cats = await getCats()&lt;/span&gt;
  &lt;span class="c1"&gt;// const dogs = await getDogs()&lt;/span&gt;
  &lt;span class="c1"&gt;// utiliser Promise.all pour exécution en parallèle&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;getCats&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;getDogs&lt;/span&gt;&lt;span class="p"&gt;()])&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;// Promise.All returne un tableau&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;//cats&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;//dogs&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;end&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>french</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 25th June 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 25 Jun 2021 13:39:49 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-25th-june-2021-4lfk</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-25th-june-2021-4lfk</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-typestat"&gt;
  &lt;/a&gt;
  1. TypeStat
&lt;/h3&gt;

&lt;p&gt;Converts JavaScript to TypeScript and TypeScript to better TypeScript.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/JoshuaKGoldberg"&gt;
        JoshuaKGoldberg
      &lt;/a&gt; / &lt;a href="https://github.com/JoshuaKGoldberg/TypeStat"&gt;
        TypeStat
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Converts JavaScript to TypeScript and TypeScript to better TypeScript.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
TypeStat&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/c75d761946b6f116c0d2d187d94c121bb7a099b5bf730e5240b34f18e24a19d2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d70726574746965722d3134636332312e737667"&gt;&lt;img src="https://camo.githubusercontent.com/c75d761946b6f116c0d2d187d94c121bb7a099b5bf730e5240b34f18e24a19d2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d70726574746965722d3134636332312e737667" alt="Code Style: Prettier"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/853846df44bcf2e897655825c0fa0ed8ab6729830d3482884dd93cb7ac991a5a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747970657363726970742d7374726963742d696e666f726d6174696f6e616c2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/853846df44bcf2e897655825c0fa0ed8ab6729830d3482884dd93cb7ac991a5a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747970657363726970742d7374726963742d696e666f726d6174696f6e616c2e737667" alt="TypeScript: Strict"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/JoshuaKGoldberg/TypeStat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/71aa48a0132caf1a58aac06cc5070e388bec431f004e0188698a771fe3eba85f/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f6275696c642f6769746875622f4a6f736875614b476f6c64626572672f54797065537461742e737667" alt="Circle CI"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/TypeStat/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/73ea8764491961dea961749a112e5f48bd06a37f2095e1755943e998efedc9cb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6769747465722d696e666f726d6174696f6e616c2e737667" alt="Join the chat at https://gitter.im/TypeStat/community"&gt;&lt;/a&gt;
&lt;a href="http://badge.fury.io/js/typestat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d7cbdef4773981647330614efd3afc1910006dd1980305b186a7da5024f45b2c/68747470733a2f2f62616467652e667572792e696f2f6a732f74797065737461742e737667" alt="NPM version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Converts JavaScript to TypeScript&lt;/strong&gt; &lt;em&gt;and TypeScript to better TypeScript.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;TypeStat is a CLI utility that modifies TypeScript types in existing code
The built-in mutators will only ever add or remove types and will never change your runtime behavior
TypeStat can:&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;
✨ Convert JavaScript files to TypeScript in a single bound!&lt;/li&gt;
    &lt;li&gt;
✨ Add TypeScript types on files freshly converted from JavaScript to TypeScript!&lt;/li&gt;
    &lt;li&gt;
✨ Infer types to fix &lt;code&gt;--noImplicitAny&lt;/code&gt; and &lt;code&gt;--noImplicitThis&lt;/code&gt; violations!&lt;/li&gt;
    &lt;li&gt;
✨ Annotate missing &lt;code&gt;null&lt;/code&gt;s and &lt;code&gt;undefined&lt;/code&gt;s to get you started with &lt;code&gt;--strictNullChecks&lt;/code&gt;!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;⚡ To start, the &lt;code&gt;typestat&lt;/code&gt; command will launch an interactive guide to setting up a configuration file. ⚡&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npx typestat&lt;/pre&gt;

&lt;/div&gt;
&lt;blockquote&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;👋 Welcome to TypeStat&lt;span class="pl-k"&gt;!&lt;/span&gt; 👋
This will create a new typestat.json &lt;span class="pl-k"&gt;for&lt;/span&gt; you.
...&lt;/pre&gt;

&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;After, use &lt;strong&gt;&lt;code&gt;typestat --config typestat.json&lt;/code&gt;&lt;/strong&gt; to convert your files.&lt;/p&gt;
&lt;h3&gt;
Configuration&lt;/h3&gt;
&lt;p&gt;To get a deeper understanding of TypeStat, read the following docs pages in order:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/JoshuaKGoldberg/TypeStat/main/./docs/Usage.md"&gt;Usage.md&lt;/a&gt;&lt;/strong&gt; for an…&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/JoshuaKGoldberg/TypeStat"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#2-package-phobia"&gt;
  &lt;/a&gt;
  2. Package Phobia
&lt;/h3&gt;

&lt;p&gt;Find the cost of adding a new dependency to your project. Package Phobia reports the size of an npm package before you install it.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/styfle"&gt;
        styfle
      &lt;/a&gt; / &lt;a href="https://github.com/styfle/packagephobia"&gt;
        packagephobia
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ⚖️ Find the cost of adding a new dependency to your project
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0991393ef82069525894307741b8ad89080137c60d9a07c11bdd8c1346b4ba02/68747470733a2f2f7061636b61676570686f6269612e636f6d2f6c6f676f2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/0991393ef82069525894307741b8ad89080137c60d9a07c11bdd8c1346b4ba02/68747470733a2f2f7061636b61676570686f6269612e636f6d2f6c6f676f2e737667" width="40" height="40"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Package Phobia&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/styfle/packagephobia/actions?workflow=Tests"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dOBHt_84--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/styfle/packagephobia/workflows/Tests/badge.svg" alt="tests"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/220e0920e0cf995086391a2fbb86456139f589c66b917efd56507a693cfd1802/68747470733a2f2f62616467656e2e6e65742f757074696d652d726f626f742f7765656b2f6d3738333930383936382d653638616631653838666539643033333039393131623733"&gt;&lt;img src="https://camo.githubusercontent.com/220e0920e0cf995086391a2fbb86456139f589c66b917efd56507a693cfd1802/68747470733a2f2f62616467656e2e6e65742f757074696d652d726f626f742f7765656b2f6d3738333930383936382d653638616631653838666539643033333039393131623733" alt="uptime"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/styfle/packagephobia/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2893a19772817d9c0b41130ab39508d92d71a09ec0152d21801ce941e2796f8f/68747470733a2f2f62616467656e2e6e65742f6c67746d2f67726164652f6a6176617363726970742f672f737479666c652f7061636b61676570686f6269613f6c6162656c3d7175616c697479" alt="lgtm"&gt;&lt;/a&gt;
&lt;a href="https://github.com/prettier/prettier"&gt;&lt;img src="https://camo.githubusercontent.com/97699b17a26c275f5ca5c17ad861961b2efb93c04bdb7829f9c9bf210466ac28/68747470733a2f2f62616467656e2e6e65742f62616467652f7374796c652f70726574746965722f666636396234" alt="style: prettier"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://turnoff.us/geek/npm-install/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7bb0b231ecd235d78ca695019c2d3937f32ec39d93e304ffef20ae43b7ef8dca/68747470733a2f2f7475726e6f66662e75732f696d6167652f656e2f6e706d2d696e7374616c6c2e706e67" width="300" height="400"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
⚖️ Find the cost of adding a new dependency to your project&lt;/li&gt;
&lt;li&gt;
🕗 Save yourself time and disk space with this web app&lt;/li&gt;
&lt;li&gt;
📈 Detect javascript bloat over time with a chart&lt;/li&gt;
&lt;li&gt;
🛡️ Get a badge/shield for your README&lt;/li&gt;
&lt;li&gt;
📡 Fetch size from json API to integrate into any tool&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;...as seen on &lt;a href="https://medium.com/npm-inc/87f3bd77529#1883" rel="nofollow"&gt;npm weekly&lt;/a&gt; and &lt;a href="https://ponyfoo.com/weekly/111/how-css-works-integration-testing-angular-6-optimizing-react-and-the-future-of-javascript" rel="nofollow"&gt;ponyfoo weekly&lt;/a&gt; and &lt;a href="https://habr.com/company/zfort/blog/354060/" rel="nofollow"&gt;habr&lt;/a&gt; and &lt;a href="https://www.rwpod.com/posts/2018/04/23/podcast-06-16.html" rel="nofollow"&gt;rwpod&lt;/a&gt; and &lt;a href="https://michael-wolfenden.github.io/2018/04/20/april-20th-2018/" rel="nofollow"&gt;wolf report&lt;/a&gt; and &lt;a href="https://changelog.com/news/find-the-cost-of-adding-a-new-dependency-to-your-project-gbj6" rel="nofollow"&gt;the changelog&lt;/a&gt; and all over twitter&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
What is the purpose?&lt;/h2&gt;
&lt;p&gt;Package Phobia reports the size of an npm package &lt;em&gt;before&lt;/em&gt; you install it.&lt;/p&gt;
&lt;p&gt;This is useful for inspecting potential &lt;code&gt;dependencies&lt;/code&gt; or &lt;code&gt;devDependencies&lt;/code&gt; without using up precious disk space or waiting minutes for &lt;code&gt;npm install&lt;/code&gt;. Ain't nobody got time for dat.&lt;/p&gt;
&lt;p&gt;Results are saved so the first person might wait a bit to view package size, but everyone else gets to see the results instantly!&lt;/p&gt;
&lt;h2&gt;
&lt;a href="https://packagephobia.com" rel="nofollow"&gt;Demo&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;A good use case might be…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/styfle/packagephobia"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-denodb"&gt;
  &lt;/a&gt;
  3. DenoDB
&lt;/h3&gt;

&lt;p&gt;MySQL, SQLite, MariaDB, PostgreSQL and MongoDB ORM for Deno. Simple, typed API&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/eveningkid"&gt;
        eveningkid
      &lt;/a&gt; / &lt;a href="https://github.com/eveningkid/denodb"&gt;
        denodb
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      MySQL, SQLite, MariaDB, PostgreSQL and MongoDB ORM for Deno
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/eveningkid/denodb/master/./design/logo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eQWrvIbx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/eveningkid/denodb/master/./design/logo.png" height="150"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
DenoDB&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
🗣Supports PostgreSQL, MySQL, MariaDB, SQLite and MongoDB&lt;/li&gt;
&lt;li&gt;
🔥Simple, typed API&lt;/li&gt;
&lt;li&gt;
🦕Deno-ready&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eveningkid.github.io/denodb-docs" rel="nofollow"&gt;Read the documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-ts position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-smi"&gt;DataTypes&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-smi"&gt;Database&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-smi"&gt;Model&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-smi"&gt;PostgresConnector&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'https://deno.land/x/denodb/mod.ts'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;connection&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;PostgresConnector&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;host&lt;/span&gt;: &lt;span class="pl-s"&gt;'...'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;username&lt;/span&gt;: &lt;span class="pl-s"&gt;'user'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;password&lt;/span&gt;: &lt;span class="pl-s"&gt;'password'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;database&lt;/span&gt;: &lt;span class="pl-s"&gt;'airlines'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;db&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Database&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;connection&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-smi"&gt;Flight&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-smi"&gt;Model&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-c1"&gt;table&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;'flights'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
  &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-c1"&gt;timestamps&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

  &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-c1"&gt;fields&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;primaryKey&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;autoIncrement&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;departure&lt;/span&gt;: &lt;span class="pl-smi"&gt;DataTypes&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;STRING&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;destination&lt;/span&gt;: &lt;span class="pl-smi"&gt;DataTypes&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;STRING&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;flightDuration&lt;/span&gt;: &lt;span class="pl-smi"&gt;DataTypes&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;FLOAT&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

  &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-c1"&gt;defaults&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;flightDuration&lt;/span&gt;: &lt;span class="pl-c1"&gt;2.5&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;

&lt;span class="pl-s1"&gt;db&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;link&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-smi"&gt;Flight&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-s1"&gt;db&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;sync&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;drop&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;await&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/eveningkid/denodb"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-size-limit"&gt;
  &lt;/a&gt;
  4. Size Limit
&lt;/h3&gt;

&lt;p&gt;Calculate the real cost to run your JS app or lib to keep good performance. Show error in pull request if the cost exceeds the limit.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ai"&gt;
        ai
      &lt;/a&gt; / &lt;a href="https://github.com/ai/size-limit"&gt;
        size-limit
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Calculate the real cost to run your JS app or lib to keep good performance. Show error in pull request if the cost exceeds the limit.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Size Limit &lt;a href="http://cultofmartians.com/tasks/size-limit-config.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1096cbef605f5e835f4fb7d98461e27e595dec7647ff3acfa06c1fc0b174b8cc/687474703a2f2f63756c746f666d61727469616e732e636f6d2f6173736574732f6261646765732f62616467652e737667" alt="Cult Of Martians"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1a4603ab9faf244c245c8fe4d1bd348240ec9f40989d3fb59333ea1b9119d011/68747470733a2f2f61692e6769746875622e696f2f73697a652d6c696d69742f6c6f676f2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/1a4603ab9faf244c245c8fe4d1bd348240ec9f40989d3fb59333ea1b9119d011/68747470733a2f2f61692e6769746875622e696f2f73697a652d6c696d69742f6c6f676f2e737667" alt="Size Limit logo by Anton Lovchikov" width="120" height="178"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Size Limit is a performance budget tool for JavaScript. It checks every commit
on CI, calculates the real cost of your JS for end-users and throws an error
if the cost exceeds the limit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;ES modules&lt;/strong&gt; and &lt;strong&gt;tree-shaking&lt;/strong&gt; support.&lt;/li&gt;
&lt;li&gt;Add Size Limit to &lt;strong&gt;Travis CI&lt;/strong&gt;, &lt;strong&gt;Circle CI&lt;/strong&gt;, &lt;strong&gt;GitHub Actions&lt;/strong&gt;
or another CI system to know if a pull request adds a massive dependency.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Modular&lt;/strong&gt; to fit different use cases: big JS applications
that use their own bundler or small npm libraries with many files.&lt;/li&gt;
&lt;li&gt;Can calculate &lt;strong&gt;the time&lt;/strong&gt; it would take a browser
to download and &lt;strong&gt;execute&lt;/strong&gt; your JS. Time is a much more accurate
and understandable metric compared to the size in bytes.&lt;/li&gt;
&lt;li&gt;Calculations include &lt;strong&gt;all dependencies and polyfills&lt;/strong&gt;
used in your JS.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/ai/size-limit/main/./img/example.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---1dHNpvc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ai/size-limit/main/./img/example.png" alt="Size Limit CLI" width="738"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;With &lt;strong&gt;&lt;a href="https://github.com/andresz1/size-limit-action"&gt;GitHub action&lt;/a&gt;&lt;/strong&gt; Size Limit will post bundle size changes as a comment
in pull request discussion.&lt;/p&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/andresz1/size-limit-action/master/assets/pr.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--daWu0sWX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/andresz1/size-limit-action/master/assets/pr.png" alt="Size Limit comment in pull request about bundle size changes" width="686" height="289"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;With &lt;code&gt;--why&lt;/code&gt;, Size Limit…&lt;/p&gt;
&lt;/div&gt;


&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ai/size-limit"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#5-holmes"&gt;
  &lt;/a&gt;
  5. Holmes
&lt;/h3&gt;

&lt;p&gt;Fast and easy searching inside a page. Holmes filters a list of elements based on the value of a input in just ~2KB.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Haroenv"&gt;
        Haroenv
      &lt;/a&gt; / &lt;a href="https://github.com/Haroenv/holmes"&gt;
        holmes
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Fast and easy searching inside a page
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a href="https://www.npmjs.com/package/holmes.js" rel="nofollow"&gt;&lt;img alt="Holmes.js" src="https://camo.githubusercontent.com/20215d7f4ab898cbc4b1321182ba0a23a6f3318043dc12cc27635ae08fe8af60/68747470733a2f2f6861726f656e2e6d652f686f6c6d65732f696d616765732f6c6f676f2e706e67" height="50px"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Fast and easy searching inside a page.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/Haroenv/holmes" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2cbc660c5db3220c6a0bb847b448c391baefc3ddad8c0a60fb55689cf35f72ae/68747470733a2f2f7472617669732d63692e6f72672f4861726f656e762f686f6c6d65732e7376673f6272616e63683d67682d7061676573" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/Haroenv/holmes" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/094f63fa36113195a1caa5cce568a6276c3fb8a560e65ad535619d299b15ddc9/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4861726f656e762f686f6c6d65732f62616467652e737667" alt="Coverage Status"&gt;&lt;/a&gt;
&lt;a href="https://yarnpkg.com/en/package/holmes.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4a8f44f33ab50991123ff1ca1df788f75de8b8102e08159bfae7e555ba46823f/68747470733a2f2f62616467652e667572792e696f2f6a732f686f6c6d65732e6a732e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://badge.fury.io/bo/holmes.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e89459ed64dd53e4a24a4b2940f0a7751b0b6cd7def75d80619d5f374e1d7fb/68747470733a2f2f62616467652e667572792e696f2f626f2f686f6c6d65732e6a732e737667" alt="Bower version"&gt;&lt;/a&gt;
&lt;a href="https://cdnjs.com/libraries/holmes.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7e94edb6529abb71da9808c45ee3f43246ad8e71d0f221b1678a5645dfc7a802/68747470733a2f2f696d672e736869656c64732e696f2f63646e6a732f762f686f6c6d65732e6a732e7376673f636f6c6f72423d677265656e" alt="CDNJS version"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/Haroenv/holmes?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7497d435cb1a40de9648ebc1bb70a80520df5395b568ed0eae7392c0399248a/68747470733a2f2f6261646765732e6769747465722e696d2f4861726f656e762f686f6c6d65732e737667" alt="Join the chat at https://gitter.im/Haroenv/holmes"&gt;&lt;/a&gt;
&lt;a href="https://unpkg.com/holmes.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3cce3fd359d96eaef5df0989dad252d29d19421b0e398baa013177c3c92c00f3/687474703a2f2f696d672e626164676573697a652e696f2f68747470733a2f2f756e706b672e636f6d2f686f6c6d65732e6a732f6a732f686f6c6d65732e6a733f636f6d7072657373696f6e3d677a6970" alt="gzipped size"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Holmes filters a list of elements based on the value of a &lt;code&gt;input&lt;/code&gt; in just ~2KB.&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;You can install Holmes with either &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;bower&lt;/code&gt; under the package name &lt;code&gt;holmes.js&lt;/code&gt;. For &lt;code&gt;npm&lt;/code&gt; that looks like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ yarn add holmes.js &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or via npm&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;After which you can add it in your page with i.e. webpack, rollup, browserify or loading the module in a different script tag.&lt;/p&gt;
&lt;p&gt;You have to make sure that you have a &lt;code&gt;css&lt;/code&gt; rule for the class &lt;code&gt;.hidden&lt;/code&gt; that hides elements however you want. One option is to have this:&lt;/p&gt;
&lt;div class="highlight highlight-source-css position-relative js-code-highlight"&gt;
&lt;pre&gt;.&lt;span class="pl-c1"&gt;hidden&lt;/span&gt; {
  &lt;span class="pl-c1"&gt;display&lt;/span&gt;&lt;span class="pl-kos"&gt;:&lt;/span&gt; none
}&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;but this could be any &lt;code&gt;css&lt;/code&gt; you want.&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://haroen.me/holmes/" rel="nofollow"&gt;demo&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
When should I use it?&lt;/h3&gt;
&lt;p&gt;You should use Holmes when&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you have a limited amount of items&lt;/li&gt;
&lt;li&gt;you don't need typo-tolerance&lt;/li&gt;
&lt;li&gt;you only want to add a really small library&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Haroenv/holmes"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#6-reactheadroom"&gt;
  &lt;/a&gt;
  6. react-headroom
&lt;/h3&gt;

&lt;p&gt;Hide your header until you need it.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/KyleAMathews"&gt;
        KyleAMathews
      &lt;/a&gt; / &lt;a href="https://github.com/KyleAMathews/react-headroom"&gt;
        react-headroom
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Hide your header until you need it
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
react-headroom&lt;/h1&gt;
&lt;p&gt;Hide your header until you need it.&lt;/p&gt;
&lt;h2&gt;
Demo&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://kyleamathews.github.io/react-headroom" rel="nofollow"&gt;http://kyleamathews.github.io/react-headroom&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;npm install react-headroom&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;A simple example, &lt;a href="http://kyleamathews.github.io/react-headroom/" rel="nofollow"&gt;see the docs site&lt;/a&gt;
for more examples and documentation.&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;Headroom&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;You can put anything you'd like inside the Headroom Component&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;Headroom&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/KyleAMathews/react-headroom"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#7-react-interview-questions-amp-answers"&gt;
  &lt;/a&gt;
  7. React Interview Questions &amp;amp; Answers
&lt;/h3&gt;

&lt;p&gt;List of top 500 ReactJS Interview Questions &amp;amp; Answers. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sudheerj"&gt;
        sudheerj
      &lt;/a&gt; / &lt;a href="https://github.com/sudheerj/reactjs-interview-questions"&gt;
        reactjs-interview-questions
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      List of top 500 ReactJS Interview Questions &amp;amp; Answers....Coding exercise questions are coming soon!!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
React Interview Questions &amp;amp; Answers&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Click ⭐if you like the project. Pull Request are highly appreciated. Follow me &lt;a href="https://twitter.com/SudheerJonna" rel="nofollow"&gt;@SudheerJonna&lt;/a&gt; for technical updates.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div&gt;
        &lt;a href="https://www.fullstack.cafe/?utm_source=github&amp;amp;utm_medium=sud" rel="nofollow"&gt;
            3600 Tech Interview Questions. &lt;b&gt;Answered&lt;/b&gt;
            &lt;div&gt;
                &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L4xC4Pdx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/13550565/76382460-cc784d80-6393-11ea-8837-2b89265ac853.png" width="150" alt="FullStack.Cafe"&gt;
            &lt;/div&gt;
        &lt;/a&gt;
&lt;/div&gt;

&lt;div&gt;
Learn to code and get hired with &lt;a href="https://zerotomastery.io/?utm_source=github&amp;amp;utm_medium=sponsor&amp;amp;utm_campaign=reactjs-interview-questions" rel="nofollow"&gt;Zero To Mastery:&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;This &lt;a href="https://links.zerotomastery.io/react_sudheer" rel="nofollow"&gt;React course&lt;/a&gt; is good if you’re struggling to learn React beyond the basics&lt;/li&gt;
&lt;li&gt;This &lt;a href="http://links.zerotomastery.io/mci_sudheer" rel="nofollow"&gt;coding interview bootcamp&lt;/a&gt; is helpful if you’re serious about getting hired as a developer&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This repository is specific to ReactJS. Please check &lt;a href="https://github.com/sudheerj/javascript-interview-questions"&gt;Javascript Interview questions&lt;/a&gt; for core javascript questions.&lt;/p&gt;
&lt;h2&gt;
Downloading PDF/Epub formats&lt;/h2&gt;
&lt;p&gt;You can download the PDF and Epub version of this repository from the latest run on the &lt;a href="https://github.com/sudheerj/reactjs-interview-questions/actions"&gt;actions tab&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
Table of Contents&lt;/h3&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;No.&lt;/th&gt;
&lt;th&gt;Questions&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Core React&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react"&gt;What is React?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-major-features-of-react"&gt;What are the major features of React?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-jsx"&gt;What is JSX?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-element-and-component"&gt;What is the difference between Element and Component?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-components-in-react"&gt;How to create components in React?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#when-to-use-a-class-component-over-a-function-component"&gt;When to use&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sudheerj/reactjs-interview-questions"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#8-introjs"&gt;
  &lt;/a&gt;
  8. Intro.js
&lt;/h3&gt;

&lt;p&gt;Lightweight, user-friendly onboarding tour library&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/usablica"&gt;
        usablica
      &lt;/a&gt; / &lt;a href="https://github.com/usablica/intro.js"&gt;
        intro.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Lightweight, user-friendly onboarding tour library
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Intro.js&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/usablica/intro.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/251efe1914b903d8e342e8b7517e0246ee8dad9030d8c80d20a38df9f0b7fa3a/68747470733a2f2f7472617669732d63692e6f72672f757361626c6963612f696e74726f2e6a732e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://www.jsdelivr.com/package/npm/intro.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fb816aae9d954721ddfab638dabdd43435ab17b572877eb4e26bcd42c820052b/68747470733a2f2f646174612e6a7364656c6976722e636f6d2f76312f7061636b6167652f6e706d2f696e74726f2e6a732f6261646765" alt=""&gt;&lt;/a&gt;
&lt;a href="https://www.jsdelivr.com/package/npm/intro.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1a8043af76e3c074733f609a39711f9a0a4ff9f1f035e702186c0aff64302471/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f696e74726f2e6a73" alt="npm"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lightweight, user-friendly onboarding tour library&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/usablica/intro.js/gh-pages/img/introjs-demo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M9lUjgjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/usablica/intro.js/gh-pages/img/introjs-demo.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Where to get&lt;/h2&gt;
&lt;p&gt;You can obtain your local copy of Intro.js from:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; This github repository, using &lt;code&gt;git clone https://github.com/usablica/intro.js.git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2)&lt;/strong&gt; Using bower &lt;code&gt;bower install intro.js --save&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3)&lt;/strong&gt; Using npm &lt;code&gt;npm install intro.js --save&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4)&lt;/strong&gt; Download it from CDN (&lt;a href="http://www.jsdelivr.com/projects/intro.js" rel="nofollow"&gt;1&lt;/a&gt;, &lt;a href="https://cdnjs.com/libraries/intro.js" rel="nofollow"&gt;2&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;
How to use&lt;/h2&gt;
&lt;p&gt;Intro.js can be added to your site in three simple steps:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; Include &lt;code&gt;intro.js&lt;/code&gt; and &lt;code&gt;introjs.css&lt;/code&gt; (or the minified version for production) in your page. Use &lt;code&gt;introjs-rtl.min.css&lt;/code&gt; for Right-to-Left language support.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CDN hosted files are available at &lt;a href="http://www.jsdelivr.com/projects/intro.js" rel="nofollow"&gt;jsDelivr&lt;/a&gt; (click Show More) &amp;amp; &lt;a href="https://cdnjs.com/libraries/intro.js" rel="nofollow"&gt;cdnjs&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;2)&lt;/strong&gt; Add &lt;code&gt;data-intro&lt;/code&gt; and &lt;code&gt;data-step&lt;/code&gt; to your HTML elements. To add hints you should use &lt;code&gt;data-hint&lt;/code&gt; attribute.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;a&lt;/span&gt; &lt;span class="pl-c1"&gt;href&lt;/span&gt;='&lt;span class="pl-s"&gt;http://google.com/&lt;/span&gt;' &lt;span class="pl-c1"&gt;data-intro&lt;/span&gt;='&lt;span class="pl-s"&gt;Hello step one!&lt;/span&gt;'&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;a&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;See all attributes &lt;a href="https://introjs.com/docs/intro/attributes/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3)&lt;/strong&gt; Call this JavaScript function:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-en"&gt;introJs&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;start&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/usablica/intro.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-clipboardjs"&gt;
  &lt;/a&gt;
  9. clipboard.js
&lt;/h3&gt;

&lt;p&gt;Modern copy to clipboard. No Flash. Just 3kb gzipped.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/zenorocha"&gt;
        zenorocha
      &lt;/a&gt; / &lt;a href="https://github.com/zenorocha/clipboard.js"&gt;
        clipboard.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ✂️ Modern copy to clipboard. No Flash. Just 3kb gzipped 📋
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
clipboard.js&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/zenorocha/clipboard.js/workflows/build/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2biRUVio--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/zenorocha/clipboard.js/workflows/build/badge.svg" alt="Build Status"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1f5d5876eaf35711a403f40550d6ae77c268dd0bfef7234bec96c4bc16e831c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6b696c6c696e672d666c6173682d627269676874677265656e2e7376673f7374796c653d666c6174"&gt;&lt;img src="https://camo.githubusercontent.com/1f5d5876eaf35711a403f40550d6ae77c268dd0bfef7234bec96c4bc16e831c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6b696c6c696e672d666c6173682d627269676874677265656e2e7376673f7374796c653d666c6174" alt="Killing Flash"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Modern copy to clipboard. No Flash. Just 3kb gzipped.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://clipboardjs.com/" rel="nofollow"&gt;&lt;img width="728" src="https://res.cloudinary.com/practicaldev/image/fetch/s--qZsYvBkW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/398893/16165747/a0f6fc46-349a-11e6-8c9b-c5fd58d9099c.png" alt="Demo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Why&lt;/h2&gt;
&lt;p&gt;Copying text to the clipboard shouldn't be hard. It shouldn't require dozens of steps to configure or hundreds of KBs to load. But most of all, it shouldn't depend on Flash or any bloated framework.&lt;/p&gt;
&lt;p&gt;That's why clipboard.js exists.&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;p&gt;You can get it on npm.&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npm install clipboard --save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or if you're not into package management, just &lt;a href="https://github.com/zenorocha/clipboard.js/archive/master.zip"&gt;download a ZIP&lt;/a&gt; file.&lt;/p&gt;
&lt;h2&gt;
Setup&lt;/h2&gt;
&lt;p&gt;First, include the script located on the &lt;code&gt;dist&lt;/code&gt; folder or load it from &lt;a href="https://github.com/zenorocha/clipboard.js/wiki/CDN-Providers"&gt;a third-party CDN provider&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;dist/clipboard.min.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Now, you need to instantiate it by &lt;a href="https://github.com/zenorocha/clipboard.js/blob/master/demo/constructor-selector.html#L18"&gt;passing a DOM selector&lt;/a&gt;, &lt;a href="https://github.com/zenorocha/clipboard.js/blob/master/demo/constructor-node.html#L16-L17"&gt;HTML element&lt;/a&gt;, or &lt;a href="https://github.com/zenorocha/clipboard.js/blob/master/demo/constructor-nodelist.html#L18-L19"&gt;list of HTML elements&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;ClipboardJS&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'.btn'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Internally, we need to fetch all elements that matches with your selector and attach event listeners for each one. But guess…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/zenorocha/clipboard.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-nextsitemap"&gt;
  &lt;/a&gt;
  10. next-sitemap
&lt;/h3&gt;

&lt;p&gt;Sitemap generator for next.js. Generate sitemap(s) and robots.txt for all static/pre-rendered/dynamic/server-side pages.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/iamvishnusankar"&gt;
        iamvishnusankar
      &lt;/a&gt; / &lt;a href="https://github.com/iamvishnusankar/next-sitemap"&gt;
        next-sitemap
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Sitemap generator for next.js. Generate sitemap(s) and robots.txt for all static/pre-rendered/dynamic/server-side pages.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
next-sitemap&lt;/h1&gt;
&lt;p&gt;Sitemap generator for next.js. Generate sitemap(s) and robots.txt for all static/pre-rendered/dynamic/server-side pages.&lt;/p&gt;
&lt;h2&gt;
Table of contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Getting started
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamvishnusankar/next-sitemap/master/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamvishnusankar/next-sitemap/master/#create-config-file"&gt;Create config file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamvishnusankar/next-sitemap/master/#building-sitemaps"&gt;Building sitemaps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamvishnusankar/next-sitemap/master/#splitting-large-sitemap-into-multiple-files"&gt;Splitting large sitemap into multiple files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamvishnusankar/next-sitemap/master/#configuration-options"&gt;Configuration Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamvishnusankar/next-sitemap/master/#custom-transformation-function"&gt;Custom transformation function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamvishnusankar/next-sitemap/master/#full-configuration-example"&gt;Full configuration example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamvishnusankar/next-sitemap/master/#generating-dynamicserver-side-sitemaps"&gt;Generating dynamic/server-side sitemaps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Getting started&lt;/h2&gt;
&lt;h3&gt;
Installation&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add next-sitemap -D&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Create config file&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;next-sitemap&lt;/code&gt; requires a basic config file (&lt;code&gt;next-sitemap.js&lt;/code&gt;) under your project root&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;✅ &lt;code&gt;next-sitemap&lt;/code&gt; now loads environment variables from &lt;code&gt;.env&lt;/code&gt; files by default.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-smi"&gt;module&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;exports&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;siteUrl&lt;/span&gt;: &lt;span class="pl-s1"&gt;process&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;env&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;SITE_URL&lt;/span&gt; &lt;span class="pl-c1"&gt;||&lt;/span&gt; &lt;span class="pl-s"&gt;'https://example.com'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;generateRobotsTxt&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c"&gt;// (optional)&lt;/span&gt;
  &lt;span class="pl-c"&gt;// ...other options&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Building sitemaps&lt;/h3&gt;
&lt;p&gt;Add next-sitemap as your postbuild script&lt;/p&gt;
&lt;div class="highlight highlight-source-json position-relative js-code-highlight"&gt;
&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;build&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;next build&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;postbuild&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;next-sitemap&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Having &lt;code&gt;next-sitemap&lt;/code&gt; command &amp;amp; &lt;code&gt;next-sitemap.js&lt;/code&gt; file may result in file opening instead of building sitemaps in windows machines. &lt;a href="https://github.com/iamvishnusankar/next-sitemap/issues/61#issuecomment-725999452"&gt;Please read more about the issue&lt;/a&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/iamvishnusankar/next-sitemap"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  Top risers over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/maaslalani/slides"&gt;Slides&lt;/a&gt; +1,056 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;JavaScript Algorithms&lt;/a&gt; +908 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/algorithm-visualizer/algorithm-visualizer"&gt;Algorithm Visualizer&lt;/a&gt; +884 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +864 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tailwindlabs/tailwindcss"&gt;Tailwindcss&lt;/a&gt; +791 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/maaslalani/slides"&gt;Slides&lt;/a&gt; +41%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nanostores/nanostores"&gt;Nano Stores&lt;/a&gt; +34%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wellyshen/react-cool-virtual"&gt;React Virtual Cool&lt;/a&gt; +27%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/millionjs/million"&gt;Million&lt;/a&gt; +17%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/naver/egjs-flicking"&gt;Flicking&lt;/a&gt; +17%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  Top risers over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +11,825 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +7,051 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +5,253 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/slidevjs/slidev"&gt;Slidev&lt;/a&gt; +4,050 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;JavaScript Algorithms&lt;/a&gt; +3,029 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/withfig/autocomplete"&gt;Fig&lt;/a&gt; +74%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/epicmaxco/vuestic-ui"&gt;Vuestic UI&lt;/a&gt; +59%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/joe-bell/plaiceholder"&gt;Plaiceholder&lt;/a&gt; +50%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/naver/egjs-flicking"&gt;Flicking&lt;/a&gt; +41%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/slidevjs/slidev"&gt;Slidev&lt;/a&gt; +39%&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/iain_freestone"&gt;follow me&lt;/a&gt; on Twitter where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title> Game Dev Digest — Issue #100 - Easy game making tips</title>
      <author>Game Dev Digest - The Newsletter On Unity Game Dev</author>
      <pubDate>Fri, 25 Jun 2021 13:39:38 +0000</pubDate>
      <link>https://dev.to/gamedevdigest/game-dev-digest-issue-100-easy-game-making-tips-51j0</link>
      <guid>https://dev.to/gamedevdigest/game-dev-digest-issue-100-easy-game-making-tips-51j0</guid>
      <description>&lt;h3&gt;
  &lt;a href="#issue-100-easy-game-making-tips"&gt;
  &lt;/a&gt;
  Issue #100 - Easy game making tips
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://gamedevdigest.com/digests/issue-100-easy-game-making-tips.html"&gt;GameDevDigest.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WztLYGLX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/social-posts/issue-100.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WztLYGLX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/social-posts/issue-100.png" alt="Issue #100 - Easy game making tips"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We made it to 100 issues. Hope you enjoy this week's content!&lt;/p&gt;




&lt;p&gt;&lt;a href="https://blog.unity.com/technology/unity-20212-beta-is-available-for-feedback"&gt;&lt;strong&gt;Unity 2021.2 beta is available for feedback&lt;/strong&gt;&lt;/a&gt;  - Get a first look at what Unity is offering in this release cycle. These new features and improvements are available for you to try today.&lt;br&gt;
&lt;a href="https://blog.unity.com/technology/unity-20212-beta-is-available-for-feedback"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.unity.com/technology/build-and-port-for-chrome-os"&gt;&lt;strong&gt;Build and port for Chrome OS&lt;/strong&gt;&lt;/a&gt;  - Starting with 2021.2 beta, you’ll be able to build or port your Android title for Chrome OS in Unity’s Android Dev environment.&lt;br&gt;
&lt;a href="https://blog.unity.com/technology/build-and-port-for-chrome-os"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://thegamedev.guru/unity-gpu-performance/lod-level-of-detail/"&gt;&lt;strong&gt;Level of Detail (LOD) Tutorial for Unity 2021+&lt;/strong&gt;&lt;/a&gt;  - In this blog post, I will show you why, when and how you should use LOD in Unity. Remember: Level of Detail (LOD) is not only about the poly count!&lt;br&gt;
&lt;a href="https://thegamedev.guru/unity-gpu-performance/lod-level-of-detail/"&gt;&lt;em&gt;The Gamedev Guru&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.unity.com/technology/optimize-your-mobile-game-performance-tips-on-profiling-memory-and-code-architecture"&gt;&lt;strong&gt;Optimize your mobile game performance: Tips on profiling, memory, and code architecture from Unity’s top engineers&lt;/strong&gt;&lt;/a&gt;  - Our Accelerate Solutions team knows the source code inside out and supports a plethora of Unity customers so they can get the most out of the engine. In their work, they dive deep into creator projects to help identify points where performance could be optimized for greater speed, stability, and efficiency. We sat down with this team, made up of Unity’s most senior software engineers, and asked them to share some of their expertise on mobile game optimization.&lt;br&gt;
&lt;a href="https://blog.unity.com/technology/optimize-your-mobile-game-performance-tips-on-profiling-memory-and-code-architecture"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://80.lv/articles/gameloft-montr-al-s-gameplay-director-on-designing-games-in-unity/"&gt;&lt;strong&gt;Gameloft Montréal's Gameplay Director on Designing Games in Unity&lt;/strong&gt;&lt;/a&gt;  - Renaud Forestié explains how a team of only five people can design a mobile game in Unity in less than two weeks without sacrificing quality for the sake of increasing the speed of product development.&lt;br&gt;
&lt;a href="https://80.lv/articles/gameloft-montr-al-s-gameplay-director-on-designing-games-in-unity/"&gt;&lt;em&gt;80.lv&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://uxdesign.cc/the-ux-of-video-game-tutorials-7e7bc37e2ceb"&gt;&lt;strong&gt;The UX of video game tutorials&lt;/strong&gt;&lt;/a&gt;  - While allowing to skip tutorials is a minimum requirement in today’s world, skipping a tutorial due to frustration may lead to a bad experience for the rest of the game. So let’s define a good, frustration-free tutorial and look at a few key decisions that will define exactly how much your players will want to skip the tutorial and what you can do about it.&lt;br&gt;
&lt;a href="https://uxdesign.cc/the-ux-of-video-game-tutorials-7e7bc37e2ceb"&gt;&lt;em&gt;uxdesign.cc&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/posts/51125313"&gt;&lt;strong&gt;New Shiny Sparkly Shader&lt;/strong&gt;&lt;/a&gt;  - Hey all, I've made a similar version before but this one is a bit nicer, initially made for Harry Alisavakis' tech art challenge for a foil card effect. &lt;em&gt;[There is also a &lt;a href="https://www.patreon.com/posts/51480100"&gt;Shader Graph version&lt;/a&gt;]&lt;/em&gt;&lt;br&gt;
&lt;a href="https://www.patreon.com/posts/51125313"&gt;&lt;em&gt;Minions Art&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://joyrok.com/Technically-Speaking-Challenge-Stained-Glass"&gt;&lt;strong&gt;Tech Art Chronicles: Stained Glass&lt;/strong&gt;&lt;/a&gt;  - So now to making the stained glass... the annoying part was the stained glass shapes itself.&lt;br&gt;
&lt;a href="https://joyrok.com/Technically-Speaking-Challenge-Stained-Glass"&gt;&lt;em&gt;joyrok.com&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bronsonzgeb.com/index.php/2021/06/19/gpu-mesh-voxelizer-part-5/"&gt;&lt;strong&gt;GPU Mesh Voxelizer Part 5: Filling the inner voxels&lt;/strong&gt;&lt;/a&gt;  - In this article, we’ll fill the inside voxels of our voxelized mesh. Doing this will complete our GPU-based mesh voxelizer. To do this, we’ll implement the Möller-Trumbore algorithm for ray/triangle intersection.&lt;br&gt;
&lt;a href="https://bronsonzgeb.com/index.php/2021/06/19/gpu-mesh-voxelizer-part-5/"&gt;&lt;em&gt;Bronson Zgeb&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gamedevbeginner.com/raycasts-in-unity-made-easy/#raycast_update_vs_fixed_update"&gt;&lt;strong&gt;Raycasts in Unity, made easy&lt;/strong&gt;&lt;/a&gt;  - In this article, I’ll show you everything you need to know about using Raycast in Unity, step by step.&lt;br&gt;
&lt;a href="https://gamedevbeginner.com/raycasts-in-unity-made-easy/#raycast_update_vs_fixed_update"&gt;&lt;em&gt;Game Dev Beginner&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#videos"&gt;
  &lt;/a&gt;
  Videos
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=l1oq7TMTVK0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ArVwR9MR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/images/7fbc9732d4346a52a15d77e34a146d25.png" alt="I Made a Wii Sports-ish Game in Unity, but it uses a Webcam"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=l1oq7TMTVK0"&gt;&lt;strong&gt;I Made a Wii Sports-ish Game in Unity, but it uses a Webcam&lt;/strong&gt;&lt;/a&gt;  - I made a wii sports resort inspired game using OpenCV and Unity. It was a really fun project to make so I hope you enjoy it!&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=l1oq7TMTVK0"&gt;&lt;em&gt;Mults&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=YHC-6I_LSos"&gt;&lt;strong&gt;How to Use Unity's "NEW" Input System with C# Events&lt;/strong&gt;&lt;/a&gt;  - Unity's new input system is event-based plus it handles keyboard mouse and gamepads easily and quickly. The video looks at action maps, actions, bindings, action types, interactions, and processors. Which can be used to dial in the controls for a Unity project. The system can broadcast messages, use Unity events, or best of all use C# events which can clean up your code - specifically your update functions.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=YHC-6I_LSos"&gt;&lt;em&gt;One Wheel Studio&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=JYkFm1Sc3v8"&gt;&lt;strong&gt;Unity Visual Scripting – Getting Started | Bolt | Full Course | 2021 Tutorial&lt;/strong&gt;&lt;/a&gt;  - Get started with Unity Visual Scripting tutorial, allowing artists and non-coders to develop rich and complex gameplay without writing code! Complete Unity Visual Scripting documentation (previously Unity Bolt); this is a Unity beginner tutorial.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=JYkFm1Sc3v8"&gt;&lt;em&gt;NotSlot&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=A33HoKdOhTQ"&gt;&lt;strong&gt;How to use a Custom Font with Text Mesh Pro in Unity&lt;/strong&gt;&lt;/a&gt;  - Learn how to convert a standard TTF Font into a Text Mesh Pro Font Asset to be used for Text Mesh in Unity and apply effects.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=A33HoKdOhTQ"&gt;&lt;em&gt;SpeedTutor&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=WuNdmjca7eM"&gt;&lt;strong&gt;Drawing Boxes and Rectangles in URP Shader Graph with 2D SDFs! | Unity Game Dev Tutorial&lt;/strong&gt;&lt;/a&gt;  - Squares, boxes, and rounded rectangles are all common shapes you might want to draw in a shader. In this video, I show you how to do that using 2D signed distance fields, or SDFs. We'll derive the formula, recreate it in the shader graph, and then make some cool shaders to see it in action: including a mouse-controlled rectangle drawer, rainbow SDF visualizer, and procedural brick wall.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=WuNdmjca7eM"&gt;&lt;em&gt;Ned Makes Games&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=pRWbRlPU1yY"&gt;&lt;strong&gt;EASY Unity3D Animations! PERFECT for Game Jams!&lt;/strong&gt;&lt;/a&gt;  - Someone asked about my "Cut-out" sprite animation technique. There's probably better ways to do this, but this is a quick and easy way to animate some sprites in Unity! I use this all the time in my games!&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=pRWbRlPU1yY"&gt;&lt;em&gt;Ismael Rodriguez&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#assets"&gt;
  &lt;/a&gt;
  Assets
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://assetstore.unity.com/summer-sale?aid=1011l8NVc"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TzIPtNS_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/images/d2753fb9-d183-6c55-eaf2-dd803fa28bdd.jpeg" alt="Smash Hit Summer - Asset Store Sale"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://assetstore.unity.com/summer-sale?aid=1011l8NVc"&gt;&lt;strong&gt;Smash Hit Summer - Asset Store Sale&lt;/strong&gt;&lt;/a&gt;  - Over the next seven weeks, Unity is launching a series of weekly sales, each with a unique game development theme. Each week, approximately 150 assets will be on sale for 50% off and the assets included will all be great selections to use when making a game highlighted in the weekly theme.&lt;/p&gt;

&lt;p&gt;The top assets from one week will carry over into the next week and new assets will be added. The final two weeks of the sale will feature the top assets from the first five weeks, plus an additional set of our most popular assets.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/summer-sale?aid=1011l8NVc"&gt;Week 1: Low-Poly Game - June 22 - June 28&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Week 2: 2D Game - June 29 - July 5&lt;/li&gt;
&lt;li&gt;Week 3: 3D Game - July 6 - July 12&lt;/li&gt;
&lt;li&gt;Week 4: Fantasy Game - July 13 - July 19&lt;/li&gt;
&lt;li&gt;Week 5: Sci-Fi Game- July 20 - July 26&lt;/li&gt;
&lt;li&gt;Week 6: Dream Project - July 27 - August 9
&lt;a href="https://assetstore.unity.com/summer-sale?aid=1011l8NVc"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt; &lt;strong&gt;Affiliate&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://github.com/hadashiA/VContainer"&gt;&lt;strong&gt;VContainer&lt;/strong&gt;&lt;/a&gt;  - The extra fast, minimum code size, GC-free DI (Dependency Injection) library running on Unity Game Engine.&lt;br&gt;
&lt;a href="https://github.com/hadashiA/VContainer"&gt;&lt;em&gt;hadashiA&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://assetstore.unity.com/packages/tools/localization/lean-localization-28504?aid=1011l8NVc"&gt;&lt;strong&gt;Lean Localization (FREE)&lt;/strong&gt;&lt;/a&gt;  - Quickly add multi-language support to your games using Lean Localization. This lightweight asset allows you to localize text, sounds, load CSV, and much more!&lt;br&gt;
&lt;a href="https://assetstore.unity.com/packages/tools/localization/lean-localization-28504?aid=1011l8NVc"&gt;&lt;em&gt;Carlos Wilkes&lt;/em&gt;&lt;/a&gt; &lt;strong&gt;Affiliate&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Mukarillo/UnityDynamicScrollRect"&gt;&lt;strong&gt;UnityDynamicScrollRect&lt;/strong&gt;&lt;/a&gt;  - An optimized approach to lists with dozens of elements.&lt;br&gt;
&lt;a href="https://github.com/Mukarillo/UnityDynamicScrollRect"&gt;&lt;em&gt;Mukarillo&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/talecrafter/AnimationImporter"&gt;&lt;strong&gt;Pixelart Animation Importer for Unity&lt;/strong&gt;&lt;/a&gt;  - This tool is an Aseprite and PyxelEdit Animation Importer for Unity.&lt;br&gt;
&lt;a href="https://github.com/talecrafter/AnimationImporter"&gt;&lt;em&gt;talecrafter&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Cyanilux/ShaderGraphVariables"&gt;&lt;strong&gt;Shader Graph Variables&lt;/strong&gt;&lt;/a&gt;  - Adds 'Register Variable' and 'Get Variable' nodes to Shader Graph, allowing you to link sections of a graph without connection wires.&lt;br&gt;
&lt;a href="https://github.com/Cyanilux/ShaderGraphVariables"&gt;&lt;em&gt;Cyanilux&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#spotlight"&gt;
  &lt;/a&gt;
  Spotlight
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.mantisbite.com/oldsky"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--91wGq41J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/images/86533a9b7372e77ea648b6e601f7fab1.png" alt="Old Sky"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.mantisbite.com/oldsky"&gt;&lt;strong&gt;Old Sky&lt;/strong&gt;&lt;/a&gt;  - Old Sky is a suspenseful dark fantasy survival game where a lone wanderer has to endure the grim surroundings and master the art of black magic to combat the baneful creatures divulging from an ancient dimensional plane.&lt;br&gt;
&lt;a href="https://www.mantisbite.com/oldsky"&gt;&lt;em&gt;Mantisbite&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;You can subscribe to the free weekly newsletter on &lt;a href="https://gamedevdigest.com"&gt;GameDevDigest.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/p&gt;

</description>
      <category>gamedev</category>
      <category>unity</category>
      <category>csharp</category>
      <category>news</category>
    </item>
    <item>
      <title>Tools for Web Developers To Work Smarter and not Harder</title>
      <author>Victor Ikechukwu</author>
      <pubDate>Fri, 25 Jun 2021 13:30:23 +0000</pubDate>
      <link>https://dev.to/mr_victor/tools-for-web-developers-to-work-smarter-and-not-harder-3c0</link>
      <guid>https://dev.to/mr_victor/tools-for-web-developers-to-work-smarter-and-not-harder-3c0</guid>
      <description>&lt;blockquote&gt;
     "A man is only as good as his tools" &lt;br&gt;
        &lt;span&gt; -Emmert Wolf&lt;/span&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the software development industry. This would closely mean &lt;code&gt;A Developer is only as good as his tools&lt;/code&gt;. As the difference in the productivity levels of two developers with the same technical knowledge is sometimes based on their toolset.&lt;/p&gt;

&lt;p&gt;Hello There 👋, Beautiful Coder on the internet. Welcome back to my blog. In this blog, I write articles about tech, programming, and my life as a teenage developer. In this article, I'm going to round up some of the most interesting front-end developer tools of 2021. Which you will definitely find useful for your own development workflow.&lt;/p&gt;

&lt;p&gt;The key to being a productive developer is to work smarter and not harder. using tools that speed up most of the tasks that you do. Making you more productive and simplify your work.&lt;/p&gt;

&lt;p&gt;These development tools aren't really the most popular or hottest in 2021 👉👈, but they do come in handy for me, simplifying my work and making me more productive. As am sure they will too for you 😏. Already excited, let’s get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-developer"&gt;
  &lt;/a&gt;
  ⚙️ Web Developer
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QrsLOuJY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612731404/SSf1J7EqO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QrsLOuJY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612731404/SSf1J7EqO.png" alt="chrispederick.com_work_web-developer_ (1).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First up, &lt;a href=""&gt;Web Developer&lt;/a&gt;. This is definitely my favorite tool in the list, hence it comes first 😄. The &lt;a href="https://chrispederick.com/work/web-developer/"&gt;Web Developer&lt;/a&gt; is a browser extension that comes bundled with various &lt;strong&gt;web developer tools&lt;/strong&gt;.  Web Developer extension adds various web developer tools to a browser. Add it to your web browser and take development to the next level. The extension is available for Chrome, Firefox, and Opera.&lt;/p&gt;

&lt;p&gt;Once installed. you can open a panel like this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zseYAdHV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612685949/eBEbhkMYS.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zseYAdHV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612685949/eBEbhkMYS.webp" alt="menu-600.webp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That gives you access to lot of amazing commands like, Toggle CSS and JavaScript for a site on or off, view the semantic structure of a site, inspect how it looks on various screen sizes, disable images to see if the have alt text. The list is endless 😄. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quokkajs"&gt;
  &lt;/a&gt;
  QUOKKA.JS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HnMqRHAS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624613505289/wMtE2-GM-.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HnMqRHAS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624613505289/wMtE2-GM-.webp" alt="QUOKKA.JS"&gt;&lt;/a&gt;&lt;br&gt;
&lt;code&gt;RAPID JAVASCRIPT PROTOTYPING IN YOUR EDITOR&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://quokkajs.com/"&gt;Quokka&lt;/a&gt; is a developer productivity tool, That helps developers to rapidly prototype JavaScript or Typescript Code right in their code editor. Quokka makes &lt;strong&gt;prototyping&lt;/strong&gt;,&lt;strong&gt;learning&lt;/strong&gt; and &lt;strong&gt;testing&lt;/strong&gt; JavaScript and Typescript code &lt;strong&gt;blazingly fast&lt;/strong&gt;. With Quokka, there are no configurations required by default. All you need to do is simply start up a JavaScript/Typescript file and you are ready to go 👍. &lt;/p&gt;

&lt;p&gt;To get started using Quokka, you can install it as an extension in your code editor. Head over to their website and get the version for your code editor and directions on how to set it up. Quokka has two editions, The &lt;strong&gt;Community&lt;/strong&gt; edition which is free for everyone but has a few limitations, &lt;code&gt;bear this in mind 👀&lt;/code&gt;. And a commercial &lt;strong&gt;Pro&lt;/strong&gt; edition that provides some additional features but you have to pay for it.&lt;/p&gt;

&lt;p&gt;Here's a sneak peek of it in action.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yl7QXEPC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624611653071/IQrIHNHvN.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yl7QXEPC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624611653071/IQrIHNHvN.gif" alt="vsc-live.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-lighthouse"&gt;
  &lt;/a&gt;
  Google Lighthouse
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MfPHG5dc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612660170/pxznS8mUJ.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MfPHG5dc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612660170/pxznS8mUJ.webp" alt="Google Lighthouse"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Coding is a very demanding task. And as such, it is common to make mistakes, decrease the overall quality of your site. And that's where Google Lighthouse comes in.&lt;br&gt;
&lt;a href="https://developers.google.com/web/tools/lighthouse/"&gt;Google Lighthouse&lt;/a&gt; is an open-source, automated development tool for testing/improving the quality of your web pages. &lt;/p&gt;

&lt;p&gt;Google Lighthouse lets you audit(examine) your web applications based on several parameters, including performance, accessibility, mobile compatibility, Progressive Web App (PWA) implementations, SEO, and more. All you have to do is run it on a page or pass it a URL, sit back and get a very elaborate report with amazing feedback on how to improve the quality and performance of your site. All  in just a few clicks. &lt;/p&gt;

&lt;p&gt;You can get started with Google Lighthouse if you have the &lt;a href="https://www.google.com/chrome/browser/desktop/?"&gt;Google Chrome for Desktop&lt;/a&gt; Browser. Or If you are a fan of the Command-Line, then you can use the &lt;a href="https://www.npmjs.com/package/lighthouse?&amp;amp;url=151?&amp;amp;url=85"&gt;Lighthouse NPM package &lt;/a&gt; and its CLI.&lt;/p&gt;

&lt;p&gt;See this article on &lt;a href="https://flexiple.com/developers/using-google-lighthouse-to-audit-your-web-application/"&gt;using Google Lighthouse &lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#grammerly"&gt;
  &lt;/a&gt;
  Grammerly
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ivPE6q68--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612455290/b5wNLimow.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ivPE6q68--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612455290/b5wNLimow.webp" alt="grammarly"&gt;&lt;/a&gt;&lt;br&gt;
&lt;code&gt;Say Goodbye to Textfails&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;One for the Technical writers. &lt;a href="https://www.grammarly.com/"&gt;Grammerly&lt;/a&gt; is a writing assistant that puts your writing at its best. Grammerly scans what you write for common grammatical mistakes (like misused commas) and complex ones (like misplaced modifiers). Personally, as a technical writer. Grammerly has really helped me improve my writing skills and confidence in blogging, which has lead to better typo-free quality articles. As am sure it will for you 🙌.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#webflow"&gt;
  &lt;/a&gt;
  Webflow
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7UMh0-n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624611874913/s18KYlOot.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7UMh0-n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624611874913/s18KYlOot.webp" alt="webflow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.webflow.com/"&gt;Web flow&lt;/a&gt; provides a modern way for pretty much anyone (even non-technical people) to design and build for the web. It is a free low-code platform for rapidly building custom responsive web apps in a visual canvas with no code. It automatically generates Html, CSS, and JavaScript codes from your designs. That your team can quickly import and plugin into the site's codebase.&lt;/p&gt;

&lt;p&gt;With the help of Webflow, designing and building responsive web apps becomes as easy as drag and drop the UI components you need. There is no need to spend days or even months making UI/UX decisions, fighting with state management, setting up access control, or re-inventing the wheel. Saving everyone the stress of &lt;strong&gt;repetitively coding everything from scratch&lt;/strong&gt; 😍. This is especially helpful if you freelance. Designing and launching web pages would only take a matter of days.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tabnine"&gt;
  &lt;/a&gt;
  Tabnine
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KGxtTnVj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612177967/t4F_xCv-k.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KGxtTnVj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612177967/t4F_xCv-k.webp" alt="Tabnine"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Everyone's favorite AI code autocompletion tool 😄. Trusted by over 1 million developers in all programming languages. &lt;a href="https://www.tabnine.com/"&gt;Tabnine&lt;/a&gt; helps developers write code with some magics. It's based on a system of deep learning to help developers &lt;strong&gt;code faster, reduce mistakes, and discover best coding practices&lt;/strong&gt; using Machine Learning. It removes the burden of having to remember code syntax and lets you actually focus on writing &lt;strong&gt;good&lt;/strong&gt; code. And writing it faster, which is the whole point of writing this article, right? 😏. start using Tabnine today to 10X your workflow 😎, by installing it as an extension in your code editor.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailwind-css"&gt;
  &lt;/a&gt;
  Tailwind CSS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1FhLn5Qx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612126087/j9ZW6jaV3.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1FhLn5Qx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612126087/j9ZW6jaV3.webp" alt="Tailwind CSS "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tailwindcss.com"&gt;Tailwind CSS&lt;/a&gt; is a utility-first framework for rapidly building custom user interface (UI) components. This means that, unlike other CSS libraries, it doesn’t provide pre-styled components and classes that’ll have all your projects looking the same (insert Bootstrap). Instead, it provides low-level utility classes for styling virtually every single CSS property like padding (e.g. pt-10), flex (e.g. justify-between), color (e.g. blue-600), and so on. This way, you get to build &lt;strong&gt;unique custom interfaces&lt;/strong&gt;, &lt;strong&gt;make better design decisions&lt;/strong&gt; because it limits your choices via limited class variations. You’ll also never have to worry about naming CSS classes anymore. In fact, With Tailwind CSS. you may almost never need to &lt;strong&gt;write CSS again&lt;/strong&gt;. Awesome, right? 😃&lt;/p&gt;

&lt;p&gt;If you want to start using Tailwind CSS for your project, see this article on &lt;a href="https://blog.logrocket.com/tailwind-css-is-it-tomorrows-bootstrap-ebe560f9d00b/"&gt;getting started with Tailwind CSS&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dailydev"&gt;
  &lt;/a&gt;
  Daily.dev
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://daily.dev/"&gt;Daily.dev&lt;/a&gt; is a news aggregator, especially for software developers. to help them stay up to date with the latest news in tech. With daily.dev, you will stay updated with the best articles from the best tech publications on any topic. Get all the content you love in one place -- CSS-Tricks, Smashing Magazine, web.dev, hashnode, and +350 sources.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;And that's it guys, I hope you are excited to start using these tools, cause I am too 😁, There are a ton more tools out there, but these are my top picks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#do-you-know-more"&gt;
  &lt;/a&gt;
  Do you know more?
&lt;/h3&gt;

&lt;p&gt;Also, if there’s any other amazing tool you’ve been using that has improved your workflow somehow, The ones you are getting excited to try out yet. Drop them in the comments!. Your Feedbacks are greatly appreciated! 🙌. I too, would love to expand my stash 😄. Have an amazing day!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enjoyed reading this as much as i enjoyed writing it for you? 😍&lt;/strong&gt; . support me 😃&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/molipa"&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bJz-zci7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520Coffee%2520%25E2%2598%2595%2520%26emoji%3D%25F0%259F%258D%25A6%26slug%3Dmolipa%26button_colour%3D40DCA5%26font_colour%3Dffffff%26font_family%3DComic%26outline_colour%3D000000%26coffee_colour%3DFFDD00"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;there's nothing more I would like than we become friends on &lt;a href="https://twitter.com/VectorIkechukwu"&gt;Twitter&lt;/a&gt; 💖&lt;/p&gt;

&lt;p&gt;If you found this article helpful, please like and share it: really motivates me to publish more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks so much for reading! 💖 And keep on coding! 👨‍💻.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>frontenddevelopment</category>
      <category>productivity</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
