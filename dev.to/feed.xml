<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Day 24 of 100 Days of Code &amp; Scrum: React Framework for Production!</title>
      <author>Rammina</author>
      <pubDate>Mon, 01 Nov 2021 12:44:08 +0000</pubDate>
      <link>https://dev.to/rammina/day-24-of-100-days-of-code-scrum-react-framework-for-production-46g9</link>
      <guid>https://dev.to/rammina/day-24-of-100-days-of-code-scrum-react-framework-for-production-46g9</guid>
      <description>&lt;p&gt;Hello there, everyone!&lt;/p&gt;

&lt;p&gt;I'd be lying to all of you if I said that this Monday was a great start to my week! It was definitely on the rough side with personal/family issues getting in the way.&lt;/p&gt;

&lt;p&gt;However, I managed to commit to the requirements of the challenge! I finished the official Next.js tutorial and I am 3/4ths of the way through Scrum and XP from the Trenches.&lt;/p&gt;

&lt;p&gt;Anyway, let's move on to my daily report!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I planned for what I'll be doing this week. I decided I'll be focusing on Next.js and Scrum.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I learned and worked on today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nextjs"&gt;
  &lt;/a&gt;
  Next.js
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I learned about the two forms of rendering in Next.js:

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Static Generation&lt;/strong&gt; - the page HTML is generated during &lt;em&gt;build time&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Server-side Rendering&lt;/strong&gt; - the page HTML is generated during &lt;em&gt;each request&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;I read about &lt;code&gt;getStaticProps&lt;/code&gt;, &lt;code&gt;getStaticPaths&lt;/code&gt;, and &lt;code&gt;getServerSideProps&lt;/code&gt;.

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;getStaticProps&lt;/code&gt; - fetch data at build time (static generation).&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;getStaticPaths&lt;/code&gt; - specify dynamic routes to prerender pages based on data (static generation).&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;getServerSideProps&lt;/code&gt; - fetch data on each request (server-side rendering).&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;I learned how to do dynamic routing in Next.js.&lt;/li&gt;
&lt;li&gt;I read about how Next.js handles API support.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I continued to read &lt;a href="https://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2/"&gt;Scrum and XP from the Trenches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;It is best to estimate using man-days instead of hours.&lt;/li&gt;
&lt;li&gt;no team member has complete focus, the best realistic expectation is a focus factor of 70%.&lt;/li&gt;
&lt;li&gt;in most cases, it might be best to shorten the time to do manual testing, over taking a long time to establish automated tests.&lt;/li&gt;
&lt;li&gt;I learned a lot about Extreme Programming.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At least, I managed to get through today and still commit to my goals. I hope that I manage to make up for it on the rest of the days in this week.&lt;/p&gt;

&lt;p&gt;Have a great Monday, everyone!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QTUETMOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9dd6zelfb0pagv2n55m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QTUETMOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9dd6zelfb0pagv2n55m.png" alt="Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/basics/create-nextjs-app?utm_source=next-site&amp;amp;utm_medium=nav-cta&amp;amp;utm_campaign=next-website"&gt;Official Next.js tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2/"&gt;Scrum and XP from the Trenches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>3 Soft Skills To Succeed as a Developer</title>
      <author>Victor Loveday</author>
      <pubDate>Mon, 01 Nov 2021 12:40:36 +0000</pubDate>
      <link>https://dev.to/vicviral/3-soft-skills-to-succeed-as-a-developer-26f3</link>
      <guid>https://dev.to/vicviral/3-soft-skills-to-succeed-as-a-developer-26f3</guid>
      <description>&lt;p&gt;&lt;strong&gt;1. Creativity&lt;/strong&gt;&lt;br&gt;
When problems surface, a creative developer knows solutions likely already exist. And if it doesn’t, the developer isn’t afraid to come up with new solutions.&lt;/p&gt;

&lt;p&gt;As a software developer, solutions aren’t handed over to you to mindlessly code. Instead, you must explore possibilities, weighing different technologies and your team’s skills. After gaining some experience to understand what technologies exist, the creativity of combining these solutions together becomes easier.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;As a full-time software developer, you cannot fail — if a problem exists in your code, there is a solution, and you will find it. This will be the true test of your creativity.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Reliability&lt;/strong&gt;&lt;br&gt;
In a team, people rely on you to get your work done, especially when you promise to complete a task. If you’re reliable, no one will need to check up on your progress, as you’ve proven you can take on responsibilities.&lt;/p&gt;

&lt;p&gt;Leaders want software developers who don’t need any babysitting. They want direct reports from who agree to do something and then follow through on their commitment. Believe it or not, many people aren’t reliable, so being a reliable developer will make you the go-to person for new tasks and opportunities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Steller Communication&lt;/strong&gt;&lt;br&gt;
All softwares are built on a team composed of people with different ideologies, beliefs, biases, and experiences.&lt;/p&gt;

&lt;p&gt;The best software developers communicate complex technical concepts to non-technical folks or technical ones who are still learning. You will go far as a developer if you can communicate across roles and teach others.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>career</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>Connect to MongoDB Atlas from SvelteKit</title>
      <author>kvetoslavnovak</author>
      <pubDate>Mon, 01 Nov 2021 12:38:58 +0000</pubDate>
      <link>https://dev.to/kvetoslavnovak/connect-to-mongodb-atlas-from-sveltekit-25hg</link>
      <guid>https://dev.to/kvetoslavnovak/connect-to-mongodb-atlas-from-sveltekit-25hg</guid>
      <description>&lt;p&gt;MongoDB Atlas recently published new &lt;a href="https://docs.atlas.mongodb.com/best-practices-connecting-from-vercel/"&gt;best practices how to connect to MongoDB Atlas database&lt;/a&gt;. If you would like to know how to apply this recommendations in SvelteKit using MongoDB Atlas database read on.&lt;/p&gt;

&lt;p&gt;Start a new SvelteKit project in your console called for example SvelteKit_MongoDB_Atlas&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt; &lt;span class="nx"&gt;svelte&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;next&lt;/span&gt; &lt;span class="nx"&gt;SvelteKit_MongoDB_Atlas&lt;/span&gt;
&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;SvelteKit_MongoDB_Atlas&lt;/span&gt;
&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt;
&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt; &lt;span class="nx"&gt;dev&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To communicate with MongoDB database we will need Node driver &lt;a href="https://github.com/mongodb/node-mongodb-native"&gt;mongodb&lt;/a&gt;. So install it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;mongodb&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I assume you have set up your MongoDB Atlas database. Their Starter Cluster is free. They have a clear &lt;a href="https://docs.atlas.mongodb.com/getting-started/"&gt;tutorial&lt;/a&gt; how to do this. Or just follow the steps after your sign up, it is pretty straightforward.&lt;/p&gt;

&lt;p&gt;To connect to MongoDB Atlas you need to use a so called MONGODB_URI. MongoDB Atlas gave you this link when you set up your database there. It should look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;MONGODB_URI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongodb&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;srv&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@cluster0.ol6zu.mongodb.net/todos?retryWrites=true&amp;amp;w=majority&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you see it contains some sensitive data. So our project needs some features to keep it secret, keep it save. Best way is to use environmental variables. You usually store them in &lt;strong&gt;.env&lt;/strong&gt; file in the root directory of your project. SvelteKit is using &lt;a href="https://vitejs.dev/"&gt;Vite&lt;/a&gt; under the hood. Vite has its &lt;a href="https://vitejs.dev/guide/env-and-mode.html#env-files"&gt;own implementation of environmental variables&lt;/a&gt;. But it is somehow &lt;a href="https://dev.to/danawoodman/storing-environment-variables-in-sveltekit-2of3"&gt;tricky&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;So our project will need some other tool. Let install good old &lt;a href="https://github.com/motdotla/dotenv#readme"&gt;dotenv&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the root directory of your project create a new file &lt;strong&gt;.env&lt;/strong&gt; and insert your MONGODB_URI. Specify also database name (DB_NAME). Following recommendation from MongoDB Atlas specify that we use it in development (NODE_ENV) as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;MONGODB_URI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongodb&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;srv&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@cluster0.ol6zu.mongodb.net/todos?retryWrites=true&amp;amp;w=majority&lt;/span&gt;
&lt;span class="nx"&gt;DB_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;database_name&lt;/span&gt;
&lt;span class="nx"&gt;NODE_ENV&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;development&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally we have arrived to the implementation of MongoDB Atlas best practices. One problem this tries to solve is not open more connections to the database so it will not crash eventually.&lt;/p&gt;

&lt;p&gt;In your &lt;em&gt;lid&lt;/em&gt; directory (which is in a &lt;em&gt;scr&lt;/em&gt; directory) create a new file &lt;strong&gt;mongodb-client.js&lt;/strong&gt;. Copy inside the code advice by MongoDB Atlas best practices.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;dotenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;MongoClient&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongodb&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MONGODB_URI&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;useUnifiedTopology&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;clientPromise&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Please add your Mongo URI to .env.local&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;NODE_ENV&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// In development mode, use a global variable so that the value&lt;/span&gt;
    &lt;span class="c1"&gt;// is preserved across module reloads caused by HMR (Hot Module Replacement).&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_mongoClientPromise&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MongoClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_mongoClientPromise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;clientPromise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_mongoClientPromise&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// In production mode, it's best to not use a global variable.&lt;/span&gt;
    &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MongoClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;clientPromise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Export a module-scoped MongoClient promise. By doing this in a&lt;/span&gt;
&lt;span class="c1"&gt;// separate module, the client can be shared across functions.&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;clientPromise&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may have noticed that we made &lt;strong&gt;one very important modification&lt;/strong&gt; concerning how we are referencing environmental variables:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MONGODB_URI&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// this works&lt;/span&gt;
&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MONGODB_URI&lt;/span&gt; &lt;span class="c1"&gt;//this does not work!!!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your &lt;em&gt;routes&lt;/em&gt; folder create &lt;strong&gt;index.js&lt;/strong&gt; file. We are now ready to define an endpoint. To make it easy and keep this example rather simple we will  and insert one task "Walk a dog" to a collection "sveltekit-todos" in MongoDB Atlas using get method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;clientPromise&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../../lib/mongodb-client&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dbConnection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;clientPromise&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dbConnection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;collection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sveltekit-todos&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;todos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertOne&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Walk a dog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;todos&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you open the index page of the project the page should notify you that the  insertion was successful, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;todos&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;acknowledged&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;insertedId&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;617fd886f9f1f3f9a838c382&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope this was helpful. &lt;/p&gt;

</description>
      <category>sveltekit</category>
      <category>mongodb</category>
      <category>tutorial</category>
      <category>vercel</category>
    </item>
    <item>
      <title>Intigriti 1021 - XSS Challenge Writeup</title>
      <author>Breno Vitório</author>
      <pubDate>Mon, 01 Nov 2021 12:35:16 +0000</pubDate>
      <link>https://dev.to/therealbrenu/intigriti-1021-xss-challenge-writeup-253m</link>
      <guid>https://dev.to/therealbrenu/intigriti-1021-xss-challenge-writeup-253m</guid>
      <description>&lt;p&gt;Halloween came with an awesome XSS Challenge by Intigriti, and I'm here to present the solution I found for this. Hope you like it 🦇&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#detective-indepth-analysis"&gt;
  &lt;/a&gt;
  🕵️ In-Depth Analysis
&lt;/h2&gt;

&lt;p&gt;Reading the content of the page, at the first glance, it tells us that there is a query parameter called &lt;code&gt;html&lt;/code&gt;, which is capable of define partially what's displayed to the user. When we define, for example, a &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag to this parameter, we are going to get returned a page with this tag being reflected, which is already an HTML injection. From now on, we will be working to make it become an XSS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Htq6JHfK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8zhitw28rcsbpnrvn83d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Htq6JHfK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8zhitw28rcsbpnrvn83d.png" alt="Page with bats flying around and an HTML Injection" width="880" height="429"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#seenoevil-oops-csp"&gt;
  &lt;/a&gt;
  🙈 Oops, CSP
&lt;/h3&gt;

&lt;p&gt;If we simply try to inject something like &lt;code&gt;&amp;lt;script&amp;gt;alert(document.domain);&amp;lt;/script&amp;gt;&lt;/code&gt;, this script tag will be reflected, but the code itself will not be executed. Why? Well, if we look at the head of the page, we are going to find something interesting:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;meta http-equiv="Content-Security-Policy" content="default-src 'none'; script-src 'unsafe-eval' 'strict-dynamic' 'nonce-random'; style-src 'nonce-random'"&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;This meta tag tells us that the page has a CSP, which will not let any random script be executed. Also, it's possible to see, from the script-src policies, that 'strict-dynamic' was defined, which means that generally a script will only be trusted if it comes with a trusted one-use token (nonce).&lt;/p&gt;

&lt;p&gt;But there is an exception to the strict-dynamic rule. It allows JavaScript code to be executed if it's being created by using the function &lt;code&gt;document.createElement("script")&lt;/code&gt;, and by the way, if we look a little bit further at the page source, we are going to find this section of code:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TG5Q-CIf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tcfoo5osj8xqj8v8i35y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TG5Q-CIf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tcfoo5osj8xqj8v8i35y.png" alt="Script tag containing the create element function, and a new request parameter called xss" width="833" height="318"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#construction-managing-to-work-with-the-dom"&gt;
  &lt;/a&gt;
  🚧 Managing to work with the DOM
&lt;/h3&gt;

&lt;p&gt;When we don't pay enough attention to the code, we might think that it's just needed to insert something like &lt;code&gt;alert(document.domain)&lt;/code&gt; to the &lt;code&gt;xss&lt;/code&gt; parameter on the URL, but if you do so, you won't get any alert popping out, because what's truthfully being inserted to the script tag is: &lt;code&gt;)]}'alert(document.domain)&lt;/code&gt;. Something like that will never be executed, because it returns an error from JavaScript right on the first character.&lt;/p&gt;

&lt;p&gt;Paying a little bit more attention to the previous section of code, this specific piece is important:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h9z8_Nup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7kf1iqlk47kodtxsci1b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h9z8_Nup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7kf1iqlk47kodtxsci1b.png" alt="Section of code which defines how the script tag should be parsed" width="830" height="219"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, we know that we have to create a tag with an id "intigriti", and also that this tag needs to, somehow, unbreak the &lt;code&gt;)]}'&lt;/code&gt; that we have seen. The second part its actually pretty easy to think of, because it ends with a simple quotation mark, and if we open it before, every other character will be considered part of the string, so the solution for this would be something like &lt;code&gt;a='&lt;/code&gt;, but we have to apply this on the context of an HTML tag, resulting in &lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;diva='&amp;gt;&lt;/code&gt;. Remember that Intigriti Jr's INTERNAL HTML is what is parsed, and not the element itself, that's the reason for the external div.&lt;/p&gt;

&lt;p&gt;The other part is the one who takes more effort. If we simply try to add &lt;code&gt;&amp;lt;div id="intigriti"&amp;gt;&amp;lt;div&amp;gt;&amp;lt;diva='&amp;gt;&amp;lt;/diva='&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; to the &lt;code&gt;html&lt;/code&gt; parameter, as you can see on the picture below, we will have these tags inside of the DOM but inside &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tags, and waaaay too far from being the last element of the body, which is what is want:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---RDB832u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alc0m3o92p3vgw5t2kkn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---RDB832u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alc0m3o92p3vgw5t2kkn.png" alt="HTML content with our injected tags" width="393" height="290"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, in order to trigger an alert, we have to figure out a way of go outside this &lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;h1&amp;gt;&amp;lt;/h1&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; pair and a way of making the next divs fit inside our payload &lt;code&gt;&amp;lt;div id="intigriti"&amp;gt;&amp;lt;div&amp;gt;&amp;lt;diva='&amp;gt;&amp;lt;/diva='&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;. One possibility is to trick the browser by inserting unopened/unclosed tags, so it tries and fails to fix it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#checkeredflag-getting-there"&gt;
  &lt;/a&gt;
  🏁 Getting there
&lt;/h3&gt;

&lt;p&gt;For getting outside of the &lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;h1&amp;gt;&amp;lt;/h1&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; pair, all we have to do is insert &lt;code&gt;&amp;lt;/h1&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; before our friends &lt;code&gt;&amp;lt;div id="intigriti"&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;diva='&amp;gt;&lt;/code&gt;, resulting in:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E2xC9fT6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yc8fq9ql5v83y2mukgr8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E2xC9fT6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yc8fq9ql5v83y2mukgr8.png" alt="HTML content with our payload going outside of h1 and div" width="275" height="240"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we have to make everything that originally goes next &lt;code&gt;&amp;lt;/h1&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div id="intigriti"&amp;gt;&amp;lt;div&amp;gt;&amp;lt;diva='&amp;gt;&amp;lt;/diva='&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;, fit inside our structure so it becomes the last element of the body. Just by leaving the DIVs unclosed, like &lt;code&gt;&amp;lt;/h1&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div id="intigriti"&amp;gt;&amp;lt;div&amp;gt;&amp;lt;diva='&amp;gt;&lt;/code&gt;, we will have as result that all the divs that goes after our payload instantly fit inside &lt;code&gt;&amp;lt;div id="intigriti"&amp;gt;&lt;/code&gt;, which is great but not our final goal.&lt;/p&gt;

&lt;p&gt;Finally, by adding a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tag and leaving it unclosed at the end of our payload, everything will fit inside our &lt;code&gt;&amp;lt;diva='&amp;gt;&amp;lt;/diva='&amp;gt;&lt;/code&gt; tags, and also, if we look at the generated script tag, we will find something REALLY insteresting:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;script type="text/javascript"&amp;gt;a= '&amp;gt;)]}' null&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This means that all the weird characters were turned into a string called "a", and we just have to insert our alert onto the &lt;code&gt;xss&lt;/code&gt; parameter. This would result on the final payload:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://challenge-1021.intigriti.io/challenge/challenge.php?html=&amp;lt;/h1&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div id=intigriti&amp;gt;&amp;lt;div&amp;gt;&amp;lt;diva='&amp;gt;&amp;lt;div&amp;gt;&amp;amp;xss=;alert(document.domain)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And from this payload right down below, I was able to trick our fictional villain 1337Witch69 🤗&lt;/p&gt;

&lt;p&gt;&lt;a href="https://challenge-1021.intigriti.io/challenge/challenge.php?html=%3C/h1%3E%3C/div%3E%3Cdiv%20id=intigriti%3E%3Cdiv%3E%3Cdiva=%27%3E%3Cdiv%3E&amp;amp;xss=%3Bwindow.top.history.pushState%28%27%27%2C%27%27%2C%27%2Fhappy-ending%27%29%3Bdocument.body.style.backgroundColor%3D%60%234C59A8%60%3Bdocument.body.innerHTML%3D%60%3Ch1%20id%3D%22title%22%3EHappy%20Ending%3Cbr%2F%3E%3Cbr%2F%3E%F0%9F%A4%8D%3C%2Fh1%3E%60%3Bdocument.getElementById%28%22title%22%29.style.color%3D%60%23FFFFFF%60%3Bdocument.getElementById%28%22title%22%29.style.textShadow%20%3D%20%222px%202px%202px%20rgba%280%2C0%2C0%2C0.2%29%22%3B"&gt;Happy Ending&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-taking-your-time-hugs"&gt;
  &lt;/a&gt;
  Thank you for taking your time 🤗
&lt;/h3&gt;

</description>
      <category>security</category>
      <category>progamming</category>
      <category>javascript</category>
      <category>ctf</category>
    </item>
    <item>
      <title>Make Your Own Music Player Using Python 🎧</title>
      <author>Mr. Unity Buddy</author>
      <pubDate>Mon, 01 Nov 2021 12:33:22 +0000</pubDate>
      <link>https://dev.to/unitybuddy/make-your-own-music-player-using-python-4nb8</link>
      <guid>https://dev.to/unitybuddy/make-your-own-music-player-using-python-4nb8</guid>
      <description>&lt;p&gt;Hello, buddies! So, Today, we are going to make our own music player with Python with GUI. No more talks, get ready with your interpreter!&lt;/p&gt;

&lt;p&gt;Wait, why do &lt;strong&gt;I&lt;/strong&gt; want it? Well, my music player doesn't work and I want a new one 😑&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QgGOc1Is--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621244609273/TJd9P71Rt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QgGOc1Is--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621244609273/TJd9P71Rt.png" alt="image.png" width="880" height="254"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Knowledge about Python Basics&lt;/li&gt;
&lt;li&gt;Install Tkinter and PyGame. Then, we have to import modules.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pygame&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pygame&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;mixer&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#coding-time"&gt;
  &lt;/a&gt;
  Coding Time
&lt;/h2&gt;

&lt;p&gt;Your most loving part. Let's start!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;playsong&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;currentsong&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;playlist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ACTIVE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentsong&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;mixer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;music&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentsong&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;songstatus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Playing"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;mixer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;music&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;play&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;playsong()&lt;/code&gt; function is used to play the music. It loads the active song from the list and plays the required song. It gets executed when the user clicks on “play”.

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;currentsong&lt;/code&gt; function gets the active song/music in the PlayList and print it. In song status, it sets 'Playing'.
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;pausesong&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;songstatus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Paused"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;mixer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;music&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pause&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;stopsong&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;songstatus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Stopped"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;mixer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;music&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;resumesong&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;songstatus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Resuming"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;mixer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;music&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unpause&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;All these 3 functions are related to each other. 
-&lt;code&gt;pausesong()&lt;/code&gt; pause the song and set status to "Paused". 
-&lt;code&gt;stopsong()&lt;/code&gt; and &lt;code&gt;resumesong()&lt;/code&gt; do the same as their names.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Buddy Music player'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;mixer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;songstatus&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;StringVar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;songstatus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"choosing"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;In here, &lt;code&gt;root&lt;/code&gt; is the main GUI window. &lt;code&gt;root.title&lt;/code&gt; set a title to the window. (Change it as you want;)
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;playlist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Listbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;selectmode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;SINGLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"DodgerBlue2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"white"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'arial'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;playlist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columnspan&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;These are also related to GUI. It sets the colors, font etc. &lt;code&gt;fg&lt;/code&gt; means Foreground and &lt;code&gt;bg&lt;/code&gt; means background.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;playlist.grid()&lt;/code&gt;locates widgets in a two dimensional grid using row and column absolute coordinates.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s"&gt;'D:\MyPlayList'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;playlist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Listbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;selectmode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;SINGLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"DodgerBlue2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"white"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'arial'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;playlist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columnspan&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;songs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;songs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;playlist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;END&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;os.chdir&lt;/code&gt;method in Python used to change the current working directory to specified path. It takes only a single argument as new directory path.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;os.listdr()&lt;/code&gt; method in python is used to get the list of all files and directories in the specified directory. If we don't specify any directory, then list of files and directories in the current working directory will be returned.&lt;/li&gt;
&lt;li&gt;In for loop, it inserts all the files in our file directory to the &lt;code&gt;playlist&lt;/code&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;playbtn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"play"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;playsong&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;playbtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'arial'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;bg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"DodgerBlue2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"white"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;padx&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pady&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;playbtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;pausebtn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Pause"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pausesong&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pausebtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'arial'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;bg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"DodgerBlue2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"white"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;padx&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pady&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pausebtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;stopbtn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Stop"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;stopsong&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;stopbtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'arial'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;bg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"DodgerBlue2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"white"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;padx&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pady&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;stopbtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;Resumebtn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Resume"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;resumesong&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Resumebtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'arial'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;bg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"DodgerBlue2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"white"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;padx&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pady&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Resumebtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the last part. All of these lines are for GUI Buttons. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;command&lt;/code&gt; is for to command. The comman name is the functions name that we wrote first. Eg : &lt;code&gt;playsong&lt;/code&gt;. &lt;code&gt;resumesong&lt;/code&gt; We talked about all other GUI variables in above. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So finally, you have made your own music player with Python! Congrats buddy!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/SmallLion/Python-Projects/blob/main/Music_player.py"&gt;Get Full Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And the result will be,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rSbNwImk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621244386713/TYHU6_MYu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rSbNwImk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621244386713/TYHU6_MYu.png" alt="image.png" width="462" height="356"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since we want only the music player, don't care much about GUI.😉 &lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mr-unity-buddy.hashnode.dev/make-your-own-music-player-using-python"&gt;Originally&lt;/a&gt; published on Hashnode&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Deploying an Elixir Release using Docker on Fly.io</title>
      <author>Miguel Cobá</author>
      <pubDate>Mon, 01 Nov 2021 12:27:56 +0000</pubDate>
      <link>https://dev.to/miguelcoba/deploying-an-elixir-release-using-docker-on-flyio-11cc</link>
      <guid>https://dev.to/miguelcoba/deploying-an-elixir-release-using-docker-on-flyio-11cc</guid>
      <description>&lt;p&gt;I'm going to show you how to deploy our Elixir Release to Fly.io. We'll use our  &lt;a href="https://blog.miguelcoba.com/deploying-a-phoenix-16-app-with-docker-and-elixir-releases"&gt;Docker image&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prepare-elixir-release-for-deploying-to-flyio"&gt;
  &lt;/a&gt;
  Prepare Elixir Release for deploying to Fly.io
&lt;/h2&gt;

&lt;p&gt;Fly.io uses IPv6 in all their internal networks. So we need to configure our app to use IPv6 if we want to connect the app to the database.&lt;/p&gt;

&lt;p&gt;Run this command to generate, among others, the &lt;code&gt;rel/env.sh.eex&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;mix release.init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This file runs just before starting our application. It configures environment variables dynamically. Set the contents of the file to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="nv"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;grep &lt;/span&gt;fly-local-6pn /etc/hosts | &lt;span class="nb"&gt;cut&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; 1&lt;span class="si"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;RELEASE_DISTRIBUTION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;name
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;RELEASE_NODE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$FLY_APP_NAME&lt;/span&gt;@&lt;span class="nv"&gt;$ip&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;ELIXIR_ERL_OPTIONS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"-proto_dist inet6_tcp"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This file gets the IPv6 assigned by fly.io on startup and assigns it to a variable. Then it uses that variable, along with the &lt;code&gt;FLY_APP_NAME&lt;/code&gt; environment variable that fly.io automatically provides, to set another environment variable &lt;code&gt;RELEASE_NODE&lt;/code&gt;. This will be used as a unique name for the node that our app is running in. The last line configures the BEAM virtual machine to use IPv6.&lt;/p&gt;

&lt;p&gt;Let's modify the &lt;code&gt;config/runtime.exs&lt;/code&gt; file. &lt;/p&gt;

&lt;p&gt;Change the &lt;code&gt;Saturn.Repo&lt;/code&gt; config to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight elixir"&gt;&lt;code&gt;&lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="ss"&gt;:saturn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;Saturn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;Repo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;# ssl: true,&lt;/span&gt;
    &lt;span class="ss"&gt;socket_options:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:inet6&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="ss"&gt;url:&lt;/span&gt; &lt;span class="n"&gt;database_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;pool_size:&lt;/span&gt; &lt;span class="no"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"POOL_SIZE"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s2"&gt;"10"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change the &lt;code&gt;SaturnWeb.Endpoint&lt;/code&gt; to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight elixir"&gt;&lt;code&gt;  &lt;span class="n"&gt;app_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="no"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"FLY_APP_NAME"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;
      &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="s2"&gt;"FLY_APP_NAME not available"&lt;/span&gt;

  &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="ss"&gt;:saturn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;SaturnWeb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;Endpoint&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;url:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;host:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;app_name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.fly.dev"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;port:&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="ss"&gt;http:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="c1"&gt;# Enable IPv6 and bind on all interfaces.&lt;/span&gt;
      &lt;span class="c1"&gt;# Set it to  {0, 0, 0, 0, 0, 0, 0, 1} for local network only access.&lt;/span&gt;
      &lt;span class="c1"&gt;# See the documentation on https://hexdocs.pm/plug_cowboy/Plug.Cowboy.html&lt;/span&gt;
      &lt;span class="c1"&gt;# for details about using IPv6 vs IPv4 and loopback vs public addresses.&lt;/span&gt;
      &lt;span class="ss"&gt;ip:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="ss"&gt;port:&lt;/span&gt; &lt;span class="no"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"PORT"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s2"&gt;"4000"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="ss"&gt;secret_key_base:&lt;/span&gt; &lt;span class="n"&gt;secret_key_base&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add a &lt;code&gt;.dockerignore&lt;/code&gt; file to the root of the project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;assets/node_modules/
deps/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Modify the &lt;code&gt;Dockerfile&lt;/code&gt; and change the line that copies the &lt;code&gt;runtime.exs&lt;/code&gt; file to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="c"&gt;# copy runtime configuration file&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; rel rel&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; config/runtime.exs config/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I am creating a branch named &lt;code&gt;fly-io-deployment&lt;/code&gt; and committing all these changes to it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &lt;span class="nt"&gt;-b&lt;/span&gt; fly-io-deployment
git add &lt;span class="nb"&gt;.&lt;/span&gt;
git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"Deploying to fly.io"&lt;/span&gt;
git push &lt;span class="nt"&gt;-u&lt;/span&gt; origin fly-io-deployment
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-and-configure-your-flyio-account"&gt;
  &lt;/a&gt;
  Create and configure your Fly.io account
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#install-flyctl"&gt;
  &lt;/a&gt;
  Install flyctl
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;brew &lt;span class="nb"&gt;install &lt;/span&gt;superfly/tap/flyctl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#sign-up-to-flyio"&gt;
  &lt;/a&gt;
  Sign up to fly.io
&lt;/h3&gt;

&lt;p&gt;If you don't have a fly.io account, create one&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;flyctl auth signup
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#login-to-flyio"&gt;
  &lt;/a&gt;
  Login to fly.io
&lt;/h3&gt;

&lt;p&gt;If you already have a fly.io account, login&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;flyctl auth login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-a-flyio-app"&gt;
  &lt;/a&gt;
  Create a Fly.io app
&lt;/h2&gt;

&lt;p&gt;Before launching the app ensure you have added a credit card to your organization by visiting &lt;a href="https://fly.io/organizations/personal"&gt;https://fly.io/organizations/personal&lt;/a&gt; and adding one. Otherwise, the next command won't work.&lt;/p&gt;

&lt;p&gt;Once you're ready, run this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fly launch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will ask you some things to configure your app in fly.io. Leave the App name blank in order to get a random name for it. Pick a region close to where you live and make sure that you answer no to the question about deploying now.&lt;/p&gt;

&lt;p&gt;You should see something similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fly launch
Creating app &lt;span class="k"&gt;in&lt;/span&gt; /Users/mcoba/Code/saturn
Scanning &lt;span class="nb"&gt;source &lt;/span&gt;code
Detected a Dockerfile app
? App Name &lt;span class="o"&gt;(&lt;/span&gt;leave blank to use an auto-generated name&lt;span class="o"&gt;)&lt;/span&gt;:
Automatically selected personal organization: Miguel Cobá
? Select region: mad &lt;span class="o"&gt;(&lt;/span&gt;Madrid, Spain&lt;span class="o"&gt;)&lt;/span&gt;
Created app damp-paper-3277 &lt;span class="k"&gt;in &lt;/span&gt;organization personal
Wrote config file fly.toml
? Would you like to deploy now? No
Your app is ready. Deploy with &lt;span class="sb"&gt;`&lt;/span&gt;flyctl deploy&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open the &lt;code&gt;fly.toml&lt;/code&gt; file that flyctl created in the root of the project. Change the &lt;code&gt;kill_signal&lt;/code&gt; to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;&lt;span class="py"&gt;kill_signal&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"SIGTERM"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and add a &lt;code&gt;[deploy]&lt;/code&gt; section after &lt;code&gt;[env]&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;&lt;span class="nn"&gt;[env]&lt;/span&gt;

&lt;span class="nn"&gt;[deploy]&lt;/span&gt;
  &lt;span class="py"&gt;release_command&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"eval Saturn.Release.migrate"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;change the &lt;code&gt;internal_port&lt;/code&gt; to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;  &lt;span class="py"&gt;internal_port&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#set-secrets-on-flyio"&gt;
  &lt;/a&gt;
  Set secrets on Fly.io
&lt;/h2&gt;

&lt;p&gt;We need to create some secrets in Fly.io infrastructure to be used when the app starts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fly secrets &lt;span class="nb"&gt;set &lt;/span&gt;&lt;span class="nv"&gt;SECRET_KEY_BASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;mix phx.gen.secret&lt;span class="si"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-database"&gt;
  &lt;/a&gt;
  Create database
&lt;/h2&gt;

&lt;p&gt;Create a database for the app. Aswer the questions leaving the app name blank to get a random name and ensure you select the smallest VM size.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fly postgres create
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see something similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fly postgres create

? App Name:
Automatically selected personal organization: Miguel Cobá
? Select region: mad &lt;span class="o"&gt;(&lt;/span&gt;Madrid, Spain&lt;span class="o"&gt;)&lt;/span&gt;
? Select VM size: shared-cpu-1x - 256
? Volume size &lt;span class="o"&gt;(&lt;/span&gt;GB&lt;span class="o"&gt;)&lt;/span&gt;: 10
Creating postgres cluster  &lt;span class="k"&gt;in &lt;/span&gt;organization personal
Postgres cluster still-sun-6781 created
  Username:    postgres
  Password:   &amp;lt;some big password&amp;gt;
  Hostname:    still-sun-6781.internal
  Proxy Port:  5432
  PG Port: 5433
Save your credentials &lt;span class="k"&gt;in &lt;/span&gt;a secure place, you won&lt;span class="s1"&gt;'t be able to see them again!

Monitoring Deployment

2 desired, 2 placed, 0 healthy, 0 unhealthy [health checks: 6 total, 1 passing,
2 desired, 2 placed, 0 healthy, 0 unhealthy [health checks: 6 total, 1 passing,
2 desired, 2 placed, 0 healthy, 0 unhealthy [health checks: 6 total, 1 passing,
2 desired, 2 placed, 0 healthy, 0 unhealthy [health checks: 6 total, 2 passing,
2 desired, 2 placed, 0 healthy, 0 unhealthy [health checks: 6 total, 3 passing,
2 desired, 2 placed, 0 healthy, 0 unhealthy [health checks: 6 total, 4 passing,
2 desired, 2 placed, 0 healthy, 0 unhealthy [health checks: 6 total, 5 passing,
2 desired, 2 placed, 2 healthy, 0 unhealthy [health checks: 6 total, 6 passing]
--&amp;gt; v0 deployed successfully

Connect to postgres
Any app within the personal organization can connect to postgres using the above credentials and the hostname "still-sun-6781.internal."
For example: postgres://postgres:&amp;lt;the big password&amp;gt;@still-sun-6781.internal:5432

See the postgres docs for more information on next steps, managing postgres, connecting from outside fly:  https://fly.io/docs/reference/postgres/
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Take note of the generated database name, you'll need it in the next step. Mine is: &lt;code&gt;still-sun-6781&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What remains is to connect the Elixir Release app to the PostgreSQL app. Run this command but use  your own database name. This will create a new postgres user and password to connect from the Elixir Release to the PostgreSQL database:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fly postgres attach &lt;span class="nt"&gt;--postgres-app&lt;/span&gt; still-sun-6781
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll see something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fly postgres attach &lt;span class="nt"&gt;--postgres-app&lt;/span&gt; still-sun-6781

Postgres cluster still-sun-6781 is now attached to damp-paper-3277
The following secret was added to damp-paper-3277:
  &lt;span class="nv"&gt;DATABASE_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;postgres://&amp;lt;some new user&amp;gt;:&amp;lt;some new password&amp;gt;@still-sun-6781.internal:5432/damp_paper_3277?sslmode&lt;span class="o"&gt;=&lt;/span&gt;disable
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, this automatically created a secret with the &lt;code&gt;DATABASE_URL&lt;/code&gt; that we were missing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploy-to-flyio"&gt;
  &lt;/a&gt;
  Deploy to Fly.io
&lt;/h2&gt;

&lt;p&gt;Do the deployment:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fly deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will start the Docker image building, push it to fly.io's registry and then will deploy a container based on that image and will provide the secrets we configure it to start it. After lots of output logs you should see something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; Release &lt;span class="nb"&gt;command
&lt;/span&gt;Command: &lt;span class="nb"&gt;eval &lt;/span&gt;Saturn.Release.migrate
     Starting instance
     Configuring virtual machine
     Pulling container image
     Unpacking image
     Preparing kernel init
     Configuring firecracker
     Starting virtual machine
     Starting init &lt;span class="o"&gt;(&lt;/span&gt;commit: 50ffe20&lt;span class="o"&gt;)&lt;/span&gt;...
     Preparing to run: &lt;span class="sb"&gt;`&lt;/span&gt;bin/saturn &lt;span class="nb"&gt;eval &lt;/span&gt;Saturn.Release.migrate&lt;span class="sb"&gt;`&lt;/span&gt; as elixir
     2021/10/29 23:19:47 listening on &lt;span class="o"&gt;[&lt;/span&gt;fdaa:0:37f6:a7b:2656:f312:7c7b:2]:22 &lt;span class="o"&gt;(&lt;/span&gt;DNS: &lt;span class="o"&gt;[&lt;/span&gt;fdaa::3]:53&lt;span class="o"&gt;)&lt;/span&gt;
     Reaped child process with pid: 561 and signal: SIGUSR1, core dumped? &lt;span class="nb"&gt;false
     &lt;/span&gt;23:19:50.604 &lt;span class="o"&gt;[&lt;/span&gt;info] Migrations already up
     Main child exited normally with code: 0
     Reaped child process with pid: 563 and signal: SIGUSR1, core dumped? &lt;span class="nb"&gt;false
     &lt;/span&gt;Starting clean up.
Monitoring Deployment

1 desired, 1 placed, 1 healthy, 0 unhealthy &lt;span class="o"&gt;[&lt;/span&gt;health checks: 1 total, 1 passing]
&lt;span class="nt"&gt;--&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; v1 deployed successfully
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you see the deployment was executed correctly and it ran the migrations. Now let's visit the app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fly open
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A browser is opened and you should be presented with your app, running on Fly.io infrastructure:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9Y8QzjnY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mceqz5djwfvxkasb38sc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Y8QzjnY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mceqz5djwfvxkasb38sc.png" alt="App running on fly.io infrastructure" width="880" height="545"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#connect-to-the-running-node-with-iex"&gt;
  &lt;/a&gt;
  Connect to the running node with IEx
&lt;/h3&gt;

&lt;p&gt;We need to configure a secure ssh tunnel to the container running in fly.io.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fly ssh establish
fly ssh issue
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Answer with your email and select a place to save your private keys. If you already use ssh for other connections you can save it to the same $HOME/.ssh/ directory. I got this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fly ssh establish
Automatically selected personal organization: Miguel Cobá
Establishing SSH CA cert &lt;span class="k"&gt;for &lt;/span&gt;organization personal
New organization root certificate:
ssh-ed25519-cert-v01@openssh.com &amp;lt;some big value&amp;gt;

fly ssh issue
? Email address &lt;span class="k"&gt;for &lt;/span&gt;user to issue cert:  miguel.coba@gmail.com

&lt;span class="o"&gt;!!!!&lt;/span&gt; WARNING: We&lt;span class="s1"&gt;'re now prompting you to save an SSH private key and certificate       !!!!
!!!! (the private key in "id_whatever" and the certificate in "id_whatever-cert.pub"). !!!!
!!!! These SSH credentials are time-limited and handling them in files is clunky;      !!!!
!!!! consider running an SSH agent and running this command with --agent. Things       !!!!
!!!! should just sort of work like magic if you do.                                    !!!!
? Path to store private key:  ~/.ssh/id_fly_io
? Path to store private key:  /Users/mcoba/.ssh/.id_fly_io
Wrote 24-hour SSH credential to /Users/mcoba/.ssh/.id_fly_io, /Users/mcoba/.ssh/.id_fly_io-cert.pub
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can now connect to the container with &lt;code&gt;fly ssh console&lt;/code&gt; and connect to the erlang node with &lt;code&gt;app/bin/saturn remote&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fly ssh console
Connecting to damp-paper-3277.internal... &lt;span class="nb"&gt;complete&lt;/span&gt;
/ &lt;span class="c"&gt;# cd ~&lt;/span&gt;
/home/elixir &lt;span class="c"&gt;# ls&lt;/span&gt;
app
/home/elixir &lt;span class="c"&gt;# app/bin/saturn remote&lt;/span&gt;
Erlang/OTP 24 &lt;span class="o"&gt;[&lt;/span&gt;erts-12.1.2] &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;64-bit] &lt;span class="o"&gt;[&lt;/span&gt;smp:1:1] &lt;span class="o"&gt;[&lt;/span&gt;ds:1:1:10] &lt;span class="o"&gt;[&lt;/span&gt;async-threads:1] &lt;span class="o"&gt;[&lt;/span&gt;jit:no-native-stack]

Interactive Elixir &lt;span class="o"&gt;(&lt;/span&gt;1.12.3&lt;span class="o"&gt;)&lt;/span&gt; - press Ctrl+C to &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;h&lt;span class="o"&gt;()&lt;/span&gt; ENTER &lt;span class="k"&gt;for &lt;/span&gt;&lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  Source code
&lt;/h2&gt;

&lt;p&gt;The  &lt;a href="https://github.com/miguelcoba/saturn/tree/fly-io-deployment"&gt;source code&lt;/a&gt;  for the saturn project is open source under the MIT license. Use the &lt;code&gt;fly-io-deployment&lt;/code&gt; branch.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about"&gt;
  &lt;/a&gt;
  About
&lt;/h2&gt;

&lt;p&gt;I'm &lt;a href="https://miguelcoba.com"&gt;Miguel Cobá&lt;/a&gt;. Follow me on &lt;a href="https://twitter.com/MiguelCoba_"&gt;Twitter&lt;/a&gt;, subscribe to my &lt;a href="https://newsletter.miguelcoba.com"&gt;newsletter&lt;/a&gt;, or read all my &lt;a href="https://blog.miguelcoba.com"&gt;articles&lt;/a&gt; to learn more info about Elixir, Elm, Web Development, or writing eBooks.&lt;/p&gt;

</description>
      <category>elixir</category>
      <category>phoenixframework</category>
      <category>docker</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Resty: a tiny, radix-tree based library for building RESTful APIs</title>
      <author>Gabriel Vaquer</author>
      <pubDate>Mon, 01 Nov 2021 12:20:23 +0000</pubDate>
      <link>https://dev.to/brielov/resty-a-tiny-radix-tree-based-library-for-building-restful-apis-166a</link>
      <guid>https://dev.to/brielov/resty-a-tiny-radix-tree-based-library-for-building-restful-apis-166a</guid>
      <description>&lt;p&gt;A few days ago I posted about a library I made called &lt;a href="https://github.com/brielov/typed"&gt;typed&lt;/a&gt; and it never happened to me before that people would actually use something I made. The thing is that I made &lt;code&gt;typed&lt;/code&gt; to be a companion library to &lt;a href="https://github.com/brielov/resty"&gt;resty&lt;/a&gt; which is a thin wrapper around Node's http core module.&lt;/p&gt;

&lt;p&gt;Resty is what I think is the best way I'd like to write RESTful APIs in Node. It borrows some of its syntax from the fetch API and it is of course type-safe. Let me show you how I'd like to write my endpoints.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aB8nsQto--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ahuv305f11idcr5y5wr3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aB8nsQto--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ahuv305f11idcr5y5wr3.png" alt="Code demonstration" width="880" height="954"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Having an endpoint of about three lines of code is pretty nice to me, specially because there's type-safety involved. Take a closer look at &lt;code&gt;request.json&lt;/code&gt; and &lt;code&gt;request.query&lt;/code&gt;. They both require a &lt;code&gt;typed&lt;/code&gt; function to be passed in. If the validation fails, a &lt;code&gt;400 Bad Request&lt;/code&gt; error is returned with a detailed explanation of what went wrong.&lt;/p&gt;

&lt;p&gt;Also, &lt;code&gt;postMovie&lt;/code&gt; and &lt;code&gt;getMovies&lt;/code&gt; are typed because it is inferring the types from the &lt;code&gt;Response&lt;/code&gt; object, so it knows that getMovies returns a &lt;code&gt;Response&amp;lt;Movie[]&amp;gt;&lt;/code&gt; and postMovie returns a &lt;code&gt;Response&amp;lt;Movie&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The example above shows multiple endpoints being written in a single file. I personally don't don't use it like this (I prefer to write endpoints in separate files) but for demonstration purposes I'll leave it like this.&lt;/p&gt;

&lt;p&gt;So how do we glue the endpoints together? Well, we can use the &lt;code&gt;createHandler&lt;/code&gt; function to combine all our endpoints into a single request handler that can be use directly with &lt;code&gt;http.createServer&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createServer&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createHandler&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;resty&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;postMovie&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getMovies&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./endpoints&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;postMovie&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getMovies&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Listening on port 4000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Right now you're thinking "but this doesn't support middleware, how would I enable cors?" Well, &lt;code&gt;resty&lt;/code&gt; is just a good old request handler, so you could actually combine it with &lt;a href="https://github.com/senchalabs/connect"&gt;connect&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// app.ts&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;connect&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;connect&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;logger&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;morgan&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;cors&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cors&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createHandler&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;resty&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;postMovie&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getMovies&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./endpoints&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;postMovie&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getMovies&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dev&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cors&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The nice thing about doing things this way is that you can test your endpoints the same way you would test an express application with &lt;code&gt;supertest&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I know all cool kids are writing Serverless APIs these days, but I still enjoy writing APIs the old way for simple, personal projects. Anyways, I thought of sharing this library too and hope somebody will benefit from it. &lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/brielov"&gt;
        brielov
      &lt;/a&gt; / &lt;a href="https://github.com/brielov/resty"&gt;
        resty
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Syntactic sugar for RESTful APIs
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
resty&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Syntactic sugar for &lt;a href="http://restful.info" rel="nofollow"&gt;RESTful&lt;/a&gt; APIs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;resty&lt;/code&gt; adds a very thin layer on top of Node's core http module that provides a beautiful, simple, and easy to use API for building RESTful APIs. It is mostly syntactic sugar, but it also provides a few additional features.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A really fast, radix-tree based routing system that allows you to define routes in a declarative way.&lt;/li&gt;
&lt;li&gt;A simple and powerful way to validate request parameters and JSON payloads using &lt;a href="https://github.com/brielov/typed"&gt;typed&lt;/a&gt; (direct dependency).&lt;/li&gt;
&lt;li&gt;Built-in error handling that automatically generates error responses for you.&lt;/li&gt;
&lt;li&gt;Separation of concerns: write your http handlers in a modular way, and use the &lt;code&gt;createHandler&lt;/code&gt; function to glue them all together.&lt;/li&gt;
&lt;li&gt;Type-safe request and response objects.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that at the time of writing &lt;code&gt;resty&lt;/code&gt; has not been fully tested in the real world and is not recommended for production use (yet). You can play around with it on small, personal projects…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/brielov/resty"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>node</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Contributing to blockly!</title>
      <author>Gerardo Enrique Arriaga Rendon</author>
      <pubDate>Mon, 01 Nov 2021 12:18:38 +0000</pubDate>
      <link>https://dev.to/jerryhue/contributing-to-blockly-46h2</link>
      <guid>https://dev.to/jerryhue/contributing-to-blockly-46h2</guid>
      <description>&lt;p&gt;For the past month, we were assigned by our professor to search for open source projects in GitHub and contribute to them by submitting PRs that address some issues in the projects.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-project"&gt;
  &lt;/a&gt;
  The Project
&lt;/h1&gt;

&lt;p&gt;This time, I decided to work on &lt;a href="https://github.com/google/blockly"&gt;&lt;code&gt;blockly&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Blockly&lt;/code&gt; is a visual programming language, mainly used to generate code into other programming languages, like JavaScript, PHP, Lua, etc. If you have heard of Scratch, well, then you probably know how &lt;code&gt;blockly&lt;/code&gt; will look like and work. If you are not sure, you can always check the &lt;a href="https://developers.google.com/blockly/"&gt;demo&lt;/a&gt;!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-issue"&gt;
  &lt;/a&gt;
  The issue
&lt;/h1&gt;

&lt;p&gt;This time, I went with a code clean up issue: &lt;a href="https://github.com/google/blockly/issues/5273"&gt;&lt;code&gt;#5273: Cleanup handling of potential variables&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#setting-up-the-project"&gt;
  &lt;/a&gt;
  Setting up the project
&lt;/h1&gt;

&lt;p&gt;After being assigned the issue, I decided to set up the project and play with it a little.&lt;/p&gt;

&lt;p&gt;After cloning the repo, I read over the development documentation to know how should I startup my project, and it was a little tricky at first. After building it up, I thought I had to run the project by opening the HTML file that contained the playground (called &lt;code&gt;playground.html&lt;/code&gt; in the &lt;code&gt;tests&lt;/code&gt; folder of the project).&lt;/p&gt;

&lt;p&gt;I noticed that the page did not look right, so I checked over the console and I notice that none of the files can't be opened because of the CORS rule. Since every file in the local file system is considered to have a different origin, the browser cannot 'request' those, even if they actually exist.&lt;/p&gt;

&lt;p&gt;Thus, I had to start up a small http server just to get the files as if I was receiving them remotely. Indeed, opening the HTML this way helped me to actually get a working page and start playing with the application.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#writing-code"&gt;
  &lt;/a&gt;
  Writing code
&lt;/h1&gt;

&lt;p&gt;Most of the time, I start to write code because I know where to go. However, this time, I did not have a lot of context of what workspaces were, or what a flyout workspace is, or even what a potential variable map is! Thus, I ended up reading a lot of code to understand how everything is laid out and how everything connects with each other.&lt;/p&gt;

&lt;p&gt;While I cannot say that I know 100% the structure, or even that I understand it, I learned just enough to actually be able to work on the issue. Mind you, this actually took me several tries of painful debugging sessions to know how everything flowed.&lt;/p&gt;

&lt;p&gt;In basic terms, every time you add a new variable, we need to keep track of it. This is what the variable map is for. However, flyout workspaces (the ones where they show you a preview of the blocks you can use, like a toolbox) are special, since flyout workspaces keep track of variables that are not actually being used at the moment in the main workspace (the workspace where you place the blocks to connect them). Thus, a &lt;code&gt;potentialVariableMap&lt;/code&gt; was used, to keep track of these "potential" variables.&lt;/p&gt;

&lt;p&gt;However, the creator of the issue, &lt;a href="https://github.com/BeksOmega"&gt;&lt;code&gt;@BeksOmega&lt;/code&gt;&lt;/a&gt;, figured out that this &lt;code&gt;potentialVariableMap&lt;/code&gt; was not necessarily at all, since flyout workspaces could use the actual &lt;code&gt;variableMap&lt;/code&gt; they had available.&lt;/p&gt;

&lt;p&gt;Thus, we end up deleting the &lt;code&gt;potentialVariableMap&lt;/code&gt; from the codebase, and adjust the code a little so that a stack overflow does not occur.&lt;/p&gt;

&lt;p&gt;Funny story: I actually tried to work on this code without having a lot of knowledge over it. After I did the changes I thought were enough, I tested the application and noticed that when I press a specific category of blocks, my browser would freeze for a bit and then I would get a report of a stack overflow in the browser console. It took me 4 hours to actually understand the reason.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-pr"&gt;
  &lt;/a&gt;
  The PR
&lt;/h1&gt;

&lt;p&gt;After getting the code ready, I submitted my &lt;a href="https://github.com/google/blockly/pull/5656"&gt;PR&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>osd600</category>
    </item>
    <item>
      <title>A Guide to Hyperledger Development</title>
      <author>Hyperledger Development </author>
      <pubDate>Mon, 01 Nov 2021 12:18:16 +0000</pubDate>
      <link>https://dev.to/hyperledgerdevelopment/a-guide-to-hyperledger-development-53i8</link>
      <guid>https://dev.to/hyperledgerdevelopment/a-guide-to-hyperledger-development-53i8</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6RiY35qv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nesl3r9gsbu2wyavhxbz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6RiY35qv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nesl3r9gsbu2wyavhxbz.jpg" alt="Image description" width="670" height="376"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#section-1-what-is-hyperledger"&gt;
  &lt;/a&gt;
  Section 1: What is Hyperledger?
&lt;/h2&gt;

&lt;p&gt;Hyperledger is an open source community project launched in January 2015. It is being developed by various different companies, including The Linux Foundation, IBM, JPMorgan, Cisco, Intel, Accenture, Deutsche Börse, Cisco, R3 and others.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hyperledger-consists-of"&gt;
  &lt;/a&gt;
  Hyperledger consists of:
&lt;/h3&gt;

&lt;p&gt;• A network of decentralized, interconnected software projects. These include but are not limited to:&lt;/p&gt;

&lt;p&gt;• An open-source blockchain,&lt;/p&gt;

&lt;p&gt;• An open-source codebase for building distributed applications,&lt;/p&gt;

&lt;p&gt;• A suite of development tools, and&lt;/p&gt;

&lt;p&gt;• A cloud-hosted application delivery service, together referred to as the Open Container Project.&lt;/p&gt;

&lt;p&gt;• Intended use of Hyperledger&lt;/p&gt;

&lt;p&gt;In general, &lt;strong&gt;Hyperledger Development&lt;/strong&gt; is intended to be used to create applications that are able to work together to simplify interactions between different parties.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-hyperledger-blockchain-development-is-important"&gt;
  &lt;/a&gt;
  Why Hyperledger Blockchain Development is Important?
&lt;/h3&gt;

&lt;p&gt;• Trends, Challenges, and Drivers&lt;/p&gt;

&lt;p&gt;• Key Market Indicators&lt;/p&gt;

&lt;p&gt;• Hyperledger Project Outcomes&lt;/p&gt;

&lt;p&gt;• The Latest News&lt;/p&gt;

&lt;p&gt;• Hyperledger Fabric 3.0 released&lt;/p&gt;

&lt;p&gt;• Hyperledger Fabric 3.0&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Hyperledger Fabric 3.0&lt;/strong&gt; aims to make it easier for users to construct distributed ledgers across heterogeneous devices. Fabric is open source modular software framework for building distributed ledger networks and applications.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Hyperledger Sawtooth&lt;/strong&gt; is an open source scalable distributed ledger technology built on a blockchain platform and uses a unique design that allows every node in the network to publish transactions and verify the authenticity of each transaction.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We must understand that Hyperledger development ecosystem is made up of multiple companies with different areas of interest. We have compiled the most vital information in this guide to provide an overview of development topics in &lt;strong&gt;&lt;a href="https://bit.ly/3nOQctt"&gt;hyperledger blockchain development company&lt;/a&gt;&lt;/strong&gt; platform.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#hyperledger-dapp-decentralized-application-development"&gt;
  &lt;/a&gt;
  Hyperledger dApp (Decentralized Application) Development
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Hyperledger Blockchain Development Services&lt;/strong&gt; for Decentralized Applications Hyperledger is an environment that upholds blockchain conventions as well as conveyed record and keen agreements. Additionally upholds structures and devices for dynamic commitment and coordinated effort of engineers, organizations, and different partners. The main role of hyperledger is to bring the partners, designers, and innovation suppliers together to propel the reception of Blockchain arrangements and improvement. With the most recent advances and plentiful assets, we convey an ideal hyperledger blockchain application administrations to upgrade the deal cycle and security. Osiz is the transcendent hyperledger blockchain advancement organization having impressive involvement with conveying astonishing blockchain arrangements with condition of-workmanship hyperledger structures. We offer uncommon hyperledger blockchain answers for various enterprises to change the blockchain business world. Our proficient group assembles a dispersed record blockchain application utilizing the structures suits for your business points of view.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hyperledger-chaincode-development-smart-contracts"&gt;
  &lt;/a&gt;
  Hyperledger Chaincode Development (Smart Contracts)
&lt;/h2&gt;

&lt;p&gt;Blockchain savvy contract-fuelled secure instalment handling arrangements Store network the board answers for ventures with following and detectability Robotized receipt compromise, guarantee settlement, and more cycles Secure and proficient resource/proprietorship move following and the executives Business answers for obvious advanced characters, testaments, and then some&lt;br&gt;
Hyperledger comprises a shared work to make the required structures, principles, instruments, and libraries to assemble blockchains and related applications.&lt;br&gt;
Altogether, the coordinated effort incorporates banking, inventory network the board, web of things (IoT), assembling, and creation-based fields. Hyperledger Blockchain Development Frameworks goes about as a center point for various circulated record structures and libraries. With this, a business could utilize one of Hyperledger's systems, for instance, to work on the effectiveness, execution, and exchanges in their business processes. Hyperledger works by giving the required framework and norms for creating blockchain frameworks and applications. Designers use Hyperledger Greenhouse (the structures and instruments that makeup Hyperledger) to foster business blockchain projects. Organization members are completely known to one another and can take part in agreement-making processes.&lt;/p&gt;

&lt;p&gt;Direct what’s app: - &lt;a href="https://bit.ly/2op0VQr"&gt;https://bit.ly/2op0VQr&lt;/a&gt;&lt;br&gt;
Visit us: - &lt;a href="https://bit.ly/3nOQctt"&gt;https://bit.ly/3nOQctt&lt;/a&gt;&lt;br&gt;
Contact No. - +919870635001&lt;/p&gt;

</description>
      <category>hyperledgerdevelopment</category>
      <category>hyperledgercompany</category>
      <category>hyperledgerservices</category>
    </item>
    <item>
      <title>Best Chrome Extensions for Developers🔥</title>
      <author>Fahad</author>
      <pubDate>Mon, 01 Nov 2021 12:14:31 +0000</pubDate>
      <link>https://dev.to/fahad_islam/best-chrome-extensions-for-developers-373f</link>
      <guid>https://dev.to/fahad_islam/best-chrome-extensions-for-developers-373f</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hello-devs"&gt;
  &lt;/a&gt;
  Hello, Devs
&lt;/h1&gt;

&lt;p&gt;For developers, it is very important to be productive and save time. Today in this blog, I am going to show you top chrome extensions for more productivity. This extension will be very helpful for the developers and programmers. Here is the list:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wappalyzer"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/wappalyzer/gppongmhjkpfnbhagpmjfkannfbllamg?hl=en"&gt;Wappalyzer&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Wappalyzer is a &lt;strong&gt;technology profiler&lt;/strong&gt; that shows you what websites are built with. It is extremely helpful to know &lt;strong&gt;a website's tech stacks.&lt;/strong&gt; It can identify web technologies such as what frameworks, libraries, CMS, Payment methods, databases, web servers, etc are used.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pTzo5udW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/TE5cGjbTbj_mqLFn1_IljQ8NkX8lZZNDJApijpuoug4FMd8g5EsoWjW8ZUcHnlclzo1KknI21_KUmckFNHUE3JCO0w%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pTzo5udW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/TE5cGjbTbj_mqLFn1_IljQ8NkX8lZZNDJApijpuoug4FMd8g5EsoWjW8ZUcHnlclzo1KknI21_KUmckFNHUE3JCO0w%3Dw640-h400-e365-rj-sc0x00ffffff" alt="Wappalyzer" width="640" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#visbug"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/visbug/cdockenadnadldjbbgcallicgledbeoc?hl=en"&gt;VisBug&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;It is a great and awesome &lt;strong&gt;open-source browser page designing tool&lt;/strong&gt;. These tools are greatly useful and advanced for debugging, getting, editing, customizing CSS styles. This provides a toolbar on the side of the page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KPU22k-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635763600939/_wmEoQQyh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KPU22k-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635763600939/_wmEoQQyh.png" alt="Visbug" width="843" height="617"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#json-viewer"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh/related?hl=en"&gt;JSON Viewer&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;It is a useful extension for you if you frequently work with JSON data. It formats and colorizes JSON on your browser. It is the most popular and best tool for JSON viewing. It provides syntax highlighting, JSON console in the browser, collapsible nodes, and so many features.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2QCFxwtj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635764168696/XIZW063tV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2QCFxwtj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635764168696/XIZW063tV.png" alt="JSON Viewer" width="640" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#color-by-fardos"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/color-by-fardos-color-pic/iibpgpkhpfggipbacjfeijkloidhmiei?hl=en"&gt;Color by Fardos&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;A great tool for color picking. Pick colors from websites, save colors &amp;amp; gradients, get matching shades and tints and create beautiful gradients. It has the advantage that it can sync your saved colors and save them. I also like it for color picking.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kFhq8GLp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635764745082/bPsFg8_9w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kFhq8GLp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635764745082/bPsFg8_9w.png" alt="color" width="640" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xJeuO7Sz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635764770937/6zahMVjtQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xJeuO7Sz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635764770937/6zahMVjtQ.png" alt="color" width="640" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-font"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/what-font-find-font/djgfpbegnihdgbngpmhjnlchgglngcdn?hl=en"&gt;What Font&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;A great tool for picking font from a website. This extension supports Google API as a font finder, so you will have info about all popular Google Fonts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u9ZDF83C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635767013295/zRQ21e37H.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u9ZDF83C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635767013295/zRQ21e37H.png" alt="image.png" width="640" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#session-buddy"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/session-buddy/edacconmaakjimmfgnblocblbcdcpbko?hl=en"&gt;Session Buddy&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;If you work with a lot of tabs then use this extension. Manage Browser Tabs and Bookmarks with Ease&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z3XakiNa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635767324961/SrQz1qvlf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z3XakiNa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635767324961/SrQz1qvlf.png" alt="image.png" width="640" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#site-palate"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/site-palette/pekhihjiehdafocefoimckjpbkegknoh?hl=en"&gt;Site Palate&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Helps you to extract colors from any website. Generate color schemes from any website. Very useful for designers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xy5Zcfc7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635765111579/0eQTi7IIr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xy5Zcfc7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635765111579/0eQTi7IIr.png" alt="image.png" width="640" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#evernote"&gt;
  &lt;/a&gt;
  &lt;a href="https://dev.toLink"&gt;Evernote&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Evernote &lt;strong&gt;Web Clipper&lt;/strong&gt; is a browser extension that lets you save interesting things you find on the web directly to your Evernote account.&lt;br&gt;
Clip web pages, articles, or PDFs and save them in Evernote. Screen capture full pages or just the parts you want—without distracting ads and sidebars.&lt;br&gt;
Very useful for resources and note down pieces of information.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Bq9COj7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635765240044/mZYixgzge.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Bq9COj7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635765240044/mZYixgzge.png" alt="image.png" width="640" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#adblocker"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/adblock-%E2%80%94-best-ad-blocker/gighmmpiobklfepjocnamgkkbiglidom?hl=en"&gt;AdBlocker&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Best and very popular adblocker with 10million+ downloads.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--27WJqLbX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635765385933/NOXCgIbpQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--27WJqLbX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635765385933/NOXCgIbpQ.png" alt="image.png" width="640" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#sitecheker"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/website-seo-checker-free/nljcdkjpjnhlilgepggmmagnmebhadnk?hl=en"&gt;SiteCheker&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;A free Sitechecker SEO Chrome Extension helps you quickly identify technical on-page SEO issues. By fixing them, you will improve your ranking and get more traffic and sales. Provides tips to improve SEO.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o0TYHeI1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635765534801/hM0GRM1S4d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o0TYHeI1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635765534801/hM0GRM1S4d.png" alt="image.png" width="640" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#dark-reader"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/dark-reader/eimadpbcbfnmbkopoojfekhnkhdbieeh?hl=en"&gt;Dark Reader&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;If you like to read so many articles and a website doesn't support dark mode this will be helpful for you. It forces any website and apply dark mode.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pv4z8jmH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635767486297/8Ftax5AlI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pv4z8jmH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635767486297/8Ftax5AlI.png" alt="image.png" width="640" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#devto"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/dailydev-the-homepage-dev/jlmpjdjjbgclbocgajdjefcidcncaied?hl=en"&gt;Dev.to&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Get a feed of the hottest developer news personalized to you. From 400+ sources, it grabs best news and blogs. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C4Uxoq6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635766934653/rml3kC0nM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C4Uxoq6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635766934653/rml3kC0nM.png" alt="image.png" width="640" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#readampwrite"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/readwrite-for-google-chro/inoeonmfapjbbkmdafoankkfajkcphgd"&gt;Read&amp;amp;Write&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Boost reading and writing confidence across all types of content and devices, in class, at work, and at home! Best for reading and writing articles.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WIBuKz-C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635767723215/6d3SZ4K7u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WIBuKz-C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635767723215/6d3SZ4K7u.png" alt="image.png" width="640" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#enhanced-github"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/enhanced-github/anlikcnbgdeidpacdbdljnabclhahhmd?hl=en"&gt;Enhanced Github&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;It is helpful for downloading individual files from github.Display repo size, size of each file, download link and option to copy file contents&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mc6forUk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635765674800/U5rAeBECw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mc6forUk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635765674800/U5rAeBECw.png" alt="image.png" width="640" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#browser-stack"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/browserstack/nkihdmlheodkdfojglpcjjmioefjahjb?hl=en"&gt;Browser Stack&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;It is a tool for checking responsiveness and cross-browser compatibility. Launch a new test session in any browser using the Browser Stack Quick Launch Extension. Set up to 12 browsers for quick access and minimize the time spent in switching browsers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1Yiwxu6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635765832508/d2CtZs-BF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Yiwxu6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635765832508/d2CtZs-BF.png" alt="image.png" width="640" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#for-spelling-and-grammer"&gt;
  &lt;/a&gt;
  For spelling and Grammer
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#grammarly"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/grammarly-for-chrome/kbfnbcaeplbcioakkpcpgfkobkghlhen?hl=en"&gt;Grammarly&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;It will be extremely useful for you if you are weak in grammar and can't write English correctly. It helps you write grammar and spelling correctly.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BrhTBN9v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635766315828/Fbpm-SluV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BrhTBN9v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635766315828/Fbpm-SluV.png" alt="image.png" width="640" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#microsoft-editor-is-an-alternative-to-it"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/microsoft-editor-spelling/gpaiobkfhnonedkhhfjpmhdalgeoebfa?hl=en"&gt;Microsoft Editor&lt;/a&gt; is an alternative to it.
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#oh-there-are-so-many-extensions"&gt;
  &lt;/a&gt;
  Oh! There are so many extensions!
&lt;/h4&gt;

&lt;h1&gt;
  &lt;a href="#bonus-extension-manager"&gt;
  &lt;/a&gt;
  Bonus: &lt;a href="https://chrome.google.com/webstore/detail/extension-manager/gjldcdngmdknpinoemndlidpcabkggco?hl=en"&gt;Extension Manager&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xGtzhi6W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y3ev4yymslrphx4gaoj2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xGtzhi6W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y3ev4yymslrphx4gaoj2.png" alt="Image description" width="640" height="400"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;
Manage extensions, Quickly enable/disable, Support batching operation, Smart sorting. Fast, Simple, and Secure.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;It is so important to manage your extensions and save your PC from becoming a toaster😅&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's all about it. Thanks for reading.&lt;br&gt;
GitHub Profile: &lt;a href="https://github.com/RF-Fahad-Islam"&gt;https://github.com/RF-Fahad-Islam&lt;/a&gt;&lt;/p&gt;

</description>
      <category>developer</category>
      <category>extensions</category>
      <category>productivity</category>
      <category>newbie</category>
    </item>
    <item>
      <title>Install And Run The Vue JS 3 Project Using Vue CLI [2021]</title>
      <author>Raja Tamil</author>
      <pubDate>Mon, 01 Nov 2021 12:13:06 +0000</pubDate>
      <link>https://dev.to/hirajatamil/install-and-run-the-vue-js-3-project-using-vue-cli-2021-4koe</link>
      <guid>https://dev.to/hirajatamil/install-and-run-the-vue-js-3-project-using-vue-cli-2021-4koe</guid>
      <description>&lt;p&gt;In this tutorial, you’re going to learn how to get up and running with the Vue 3 project from scratch with step-by-step instructions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://softauthor.com/up-and-running-with-vuejs3-project/#install-nodejs-npm-package"&gt;Install Node.js &amp;amp; NPM Package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://softauthor.com/up-and-running-with-vuejs3-project/#install-vue-cli"&gt;Vue CLI 4.5 or Higher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://softauthor.com/up-and-running-with-vuejs3-project/#create-a-vuejs3-project"&gt;Create A Vue 3 Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://softauthor.com/up-and-running-with-vuejs3-project/#run-vuejs3-app"&gt;Run Vue 3 Web App&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#install-nodejs-amp-npm-package"&gt;
  &lt;/a&gt;
  Install node.js &amp;amp; npm package
&lt;/h3&gt;

&lt;p&gt;The first step is to install Node.js &amp;amp; NPM (Node Package Manager) to your computer.&lt;/p&gt;

&lt;p&gt;You can check to see if they’re already installed by going to the Terminal/Command prompt window in your computer and running a couple of commands.&lt;/p&gt;

&lt;p&gt;To check the installed version of node js:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;If you already have it installed, make sure it’s version 10 or above.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To check the npm, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If they’re not installed you’ll get the “command not found” message or something similar when running node and npm version check commands.&lt;/p&gt;

&lt;p&gt;In that case, you will need to install them.&lt;/p&gt;

&lt;p&gt;So, head over to the &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt; Website in your browser – you can see two versions and I would recommend using LTS which is the more stable version and it also says recommended for most users.&lt;/p&gt;

&lt;p&gt;Click the LTS button which then starts downloading the Node.js package file on the computer. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B0bEP4oS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/04/up-and-running-with-vue3-install-nodejs-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B0bEP4oS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/04/up-and-running-with-vue3-install-nodejs-2.png" alt="Alt text of image" width="880" height="608"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Double click the package file to install it which will bring up the installer window. You can pretty much install like you would other applications.&lt;/p&gt;

&lt;p&gt;As you can see from the introduction tab, I’m not only installing node.js but also npm – so we do not need to install them separately.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2YObHu8K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/04/up-and-running-with-vue3-install-npm-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2YObHu8K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/04/up-and-running-with-vue3-install-npm-1.png" alt="Alt text of image" width="880" height="629"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hit Continue, Continue,&lt;/p&gt;

&lt;p&gt;Then Agree and install, which will ask for the admin password. Once the password is entered, it’ll take a few seconds to complete the installation process.&lt;/p&gt;

&lt;p&gt;The next step is to install Vue CLI.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-vue-cli"&gt;
  &lt;/a&gt;
  Install Vue CLI
&lt;/h3&gt;

&lt;p&gt;So, what is Vue CLI?&lt;/p&gt;

&lt;p&gt;Vue CLI is an official vue npm package that allows you to create a vue project quickly on your computer.&lt;/p&gt;

&lt;p&gt;Let’s install it globally, so that you can create a vue project anywhere on the computer.&lt;/p&gt;

&lt;p&gt;Open up the Terminal window and run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;vue&lt;/span&gt;&lt;span class="sr"&gt;/cl&lt;/span&gt;&lt;span class="err"&gt;i
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will take a few seconds to complete the installation process.&lt;/p&gt;

&lt;p&gt;If it says that you do not have permission, just run the command again by adding sudo in front of it like so, which will ask you to enter your admin password and then you will be all set.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;sudo&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;vue&lt;/span&gt;&lt;span class="sr"&gt;/cl&lt;/span&gt;&lt;span class="err"&gt;i
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order to create a vue 3 project, we need a vue cli version of at least 4.5 or above.&lt;/p&gt;

&lt;p&gt;If you’ve already installed vue cli, you can check the version using the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;vue&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have a version lower than 4.5, you can simply upgrade it by running the command below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;upgrade&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is to create a vue 3 project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-vue-3-project"&gt;
  &lt;/a&gt;
  Create A Vue 3 Project
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://softauthor.com/up-and-running-with-vuejs3-project/#run-vuejs3-app"&gt;Continue Reading...&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>vue</category>
    </item>
    <item>
      <title>❓ Be on the move or act now</title>
      <author>Vic Shóstak</author>
      <pubDate>Mon, 01 Nov 2021 12:10:24 +0000</pubDate>
      <link>https://dev.to/koddr/be-on-the-move-or-act-now-1dbh</link>
      <guid>https://dev.to/koddr/be-on-the-move-or-act-now-1dbh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hey, DEV world! 👋&lt;/p&gt;

&lt;p&gt;Today's topic of discussion will be around a very intriguing subject: &lt;/p&gt;

&lt;p&gt;— &lt;strong&gt;To be in motion or to act?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This topic came to my mind when I was looking for a project for &lt;a href="https://github.com/topics/hacktoberfest"&gt;Hacktoberfest&lt;/a&gt; 2021, when I was going through numerous projects with this hashtag on GitHub for the whole evening. &lt;/p&gt;

&lt;p&gt;And then I closed my laptop with a feeling of satisfaction… but I still hadn't chosen a project or written a line of code!&lt;/p&gt;

&lt;p&gt;Let's get started! 👇&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  📝 Table of contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-the-difference-between-movement-and-action"&gt;What is the difference between movement and action?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#a-life-story-to-cover-this-principle"&gt;A life story to cover this principle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#talk-about-it"&gt;Talk about it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-difference-between-movement-and-action"&gt;
  &lt;/a&gt;
  What is the difference between movement and action?
&lt;/h2&gt;

&lt;p&gt;You probably think that “&lt;strong&gt;being on the move&lt;/strong&gt;” and “&lt;strong&gt;acting&lt;/strong&gt;” are the same thing. Not exactly! Have you ever caught yourself thinking that it seems like a lot has been done, but there are no results? &lt;/p&gt;

&lt;p&gt;— &lt;strong&gt;This is the “trap” because you've mistaken “motion” for “action”.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When we are in motion, we are strategizing, planning, or seeking knowledge. This can make it feel like we're moving forward, when in fact we're no closer to results at all. &lt;/p&gt;

&lt;p&gt;Actions, on the other hand, bring &lt;strong&gt;concrete&lt;/strong&gt; results. For example:&lt;/p&gt;

&lt;p&gt;❌ To come up with 15 ideas for an article is to be in motion.&lt;br&gt;
✅ To write a specific one article is already action.&lt;/p&gt;

&lt;p&gt;❌ Watching numerous tutorial videos about programming is to be in motion.&lt;br&gt;
✅ Developing a real application is already an action.&lt;/p&gt;

&lt;p&gt;❌ Learning information about proper nutrition is to be in motion. &lt;br&gt;
✅ Eating right is already an action.&lt;/p&gt;

&lt;p&gt;It's critical to realize this frontier to become aware of many things in your work and even life, and to be more productive where you are now.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-life-story-to-cover-this-principle"&gt;
  &lt;/a&gt;
  A life story to cover this principle
&lt;/h2&gt;

&lt;p&gt;I like one of the stories I read in &lt;a href="https://t.me/zhashkevychdev"&gt;this&lt;/a&gt; Telegram channel (in Russian, sorry), where this same topic brought up (&lt;em&gt;which is where I got my inspiration for this discussion&lt;/em&gt;).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It encapsulates perfectly the principle I've already announced earlier.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On the first day of film photography class, &lt;a href="https://www.uelsmann.net/"&gt;Jerry Uelsmann&lt;/a&gt;, a photographer and professor at the University of Florida, divided all the students into two groups. The goal of the first group was to work on quantity, the second on quality.&lt;/p&gt;

&lt;p&gt;At the end of the semester, students in the first group will receive grades based on the number of pictures taken: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One hundred pictures — 5 points;&lt;/li&gt;
&lt;li&gt;Ninety pictures — 4 points;&lt;/li&gt;
&lt;li&gt;…and so on;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u6NItz1I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7zsbjxpooh2cr5ht4dx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u6NItz1I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7zsbjxpooh2cr5ht4dx.jpg" alt="people in the second group looks like this" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Students in the second group will receive marks based on a subjective assessment of the quality of a single photo. By the end of the semester they only need to take one photo, but to get 5 points, it must be almost perfect.&lt;/p&gt;

&lt;p&gt;— &lt;strong&gt;Which group do you think took the best pictures?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As it turns out, the highest quality pictures taken by the participants in the first group. By practicing a lot, such as lighting, composition, and testing different angles to get the right number of shots, they honed their skills and increased their chances of taking a classy picture.&lt;/p&gt;

&lt;p&gt;The second group spent a lot of time thinking and searching for ideas for the perfect photo. They were constantly &lt;strong&gt;on the move&lt;/strong&gt;, but not in action.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#talk-about-it"&gt;
  &lt;/a&gt;
  Talk about it
&lt;/h2&gt;

&lt;p&gt;Being on the move is important! But if it doesn't lead to concrete action, it doesn't make any sense. Write what you think about this topic in the comments. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let's discuss it together now!&lt;/strong&gt; 💬&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#photos-and-videos-by"&gt;
  &lt;/a&gt;
  Photos and videos by
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Thought Catalog &lt;a href="https://unsplash.com/photos/FACFpJVoMJs"&gt;https://unsplash.com/photos/FACFpJVoMJs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Alif Ngoylung &lt;a href="https://unsplash.com/photos/jg-6ARMiaPM"&gt;https://unsplash.com/photos/jg-6ARMiaPM&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ps"&gt;
  &lt;/a&gt;
  P.S.
&lt;/h2&gt;

&lt;p&gt;If you want more articles like this on this blog, then post a comment below and subscribe to me. Thanks! 😘&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>discuss</category>
      <category>hacktoberfest</category>
    </item>
  </channel>
</rss>
