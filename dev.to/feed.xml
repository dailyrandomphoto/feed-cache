<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Azure SQL Awesome List</title>
      <author>Davide Mauri</author>
      <pubDate>Mon, 25 Oct 2021 21:33:29 +0000</pubDate>
      <link>https://dev.to/azure/azure-sql-awesome-list-4pd5</link>
      <guid>https://dev.to/azure/azure-sql-awesome-list-4pd5</guid>
      <description>&lt;p&gt;It's been a while now I've been collecting links to resources I found useful for a developer working with Azure SQL, and today I realized that the list I've created become quite big and nice over the last months.&lt;/p&gt;

&lt;p&gt;I so decided to turn it into an official Awesome List, which, by GitHub definition is &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;An awesome list is a list of awesome things curated by the community. There are awesome lists about everything from CLI applications to fantasy books. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here you go:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/yorek"&gt;
        yorek
      &lt;/a&gt; / &lt;a href="https://github.com/yorek/awesome-azure-sql"&gt;
        awesome-azure-sql
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      An awesome list of Azure SQL samples for Developers of any Language and Platform
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;as of now it contains a list of more than 50 curated links. I'll keep the list updated, and I really count on community's help here. If you have something you think it is worth and valuable to add to the list, please just submit a PR.&lt;/p&gt;

&lt;p&gt;The list is focused on Azure SQL and developers, and contains links to resources for every language, platform, tool and needs.&lt;/p&gt;

&lt;p&gt;Hope this is helpful to you as it has been to me!&lt;/p&gt;




&lt;p&gt;Photo by &lt;a href="https://www.pexels.com/@belart84?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels"&gt;Artem Beliaikin&lt;/a&gt; from &lt;a href="https://www.pexels.com/photo/come-in-we-re-awesome-sign-1051747/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels"&gt;Pexels&lt;/a&gt;&lt;/p&gt;

</description>
      <category>database</category>
      <category>cloud</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>How to Ace Data Science Interview by Working on Portfolio Projects</title>
      <author>Abid</author>
      <pubDate>Mon, 25 Oct 2021 20:52:47 +0000</pubDate>
      <link>https://dev.to/kingabzpro/how-to-ace-data-science-interview-by-working-on-portfolio-projects-4cd</link>
      <guid>https://dev.to/kingabzpro/how-to-ace-data-science-interview-by-working-on-portfolio-projects-4cd</guid>
      <description>&lt;p&gt;Recruiters of Data Science professionals around the world focus on portfolio projects rather than resumes and LinkedIn profiles. So, learning early how to contribute and share your work on GitHub, Deepnote, and Kaggle can help you perform your best during data science interviews.&lt;br&gt;
&lt;a href="https://www.kdnuggets.com/2021/10/ace-data-science-interview-portfolio-projects.html"&gt;How to Ace Data Science Interview by Working on Portfolio Projects&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>datascience</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Top 5 smart contract programming languages for blockchain</title>
      <author>Matt Angelosanto</author>
      <pubDate>Mon, 25 Oct 2021 20:52:21 +0000</pubDate>
      <link>https://dev.to/logrocket/top-5-smart-contract-programming-languages-for-blockchain-4li6</link>
      <guid>https://dev.to/logrocket/top-5-smart-contract-programming-languages-for-blockchain-4li6</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/ezesunday/"&gt;Eze Sunday&lt;/a&gt;&lt;/strong&gt; ✏️&lt;/p&gt;

&lt;p&gt;Everyone is talking about smart contracts, blockchain, decentralized finance, and cryptocurrencies. However, without developers, none of these would exist, so the demand for blockchain developers continues to surge.&lt;/p&gt;

&lt;p&gt;Many programming languages allow you to write smart contracts. In this article, we’ll explore the top smart contract programming languages to use.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-smart-contracts"&gt;
  &lt;/a&gt;
  What are smart contracts?
&lt;/h2&gt;

&lt;p&gt;A smart contract is a computer program that automatically executes actions according to the terms of the contract without intermediaries. For example, if you want to purchase a piece of land using a smart contract mechanism, your land ownership documents will be sent to you immediately after your payment is completed. You don’t need to trust a third-party site to transfer the ownership after making payments.&lt;/p&gt;

&lt;p&gt;Also, you can see smart contracts in action in decentralized exchanges (DEX), like &lt;a href="https://pancakeswap.finance/"&gt;PancakeSwap&lt;/a&gt;, which allows you to exchange your tokens for another token. If you have BNB, you can easily exchange it for Ethereum without having to talk to customer support.&lt;/p&gt;

&lt;p&gt;Smart contract programming languages allow you to write programs that implement smart contracts on the blockchain.&lt;/p&gt;

&lt;p&gt;So, what are the top smart contract languages, you asked? Let’s get into it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-solidity"&gt;
  &lt;/a&gt;
  1. Solidity
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/ethereum/solidity"&gt;Solidity&lt;/a&gt; is an object-oriented and statically-typed programming language that was designed to allow developers to create smart contracts.&lt;/p&gt;

&lt;p&gt;Solidity is designed based on existing programming languages like &lt;a href="https://en.m.wikipedia.org/wiki/C%2B%2B"&gt;C++&lt;/a&gt;, &lt;a href="https://en.m.wikipedia.org/wiki/Python_(programming_language)"&gt;Python&lt;/a&gt;, and JavaScript, so it uses similar language structures found in these languages, most likely to make it easy for developer adoption.&lt;/p&gt;

&lt;p&gt;Here is an example of a smart contract with Solidity:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight solidity"&gt;&lt;code&gt;&lt;span class="k"&gt;pragma&lt;/span&gt; &lt;span class="n"&gt;solidity&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;contract&lt;/span&gt; &lt;span class="n"&gt;MyContract&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"My value"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;view&lt;/span&gt; &lt;span class="k"&gt;returns&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="k"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="k"&gt;memory&lt;/span&gt; &lt;span class="n"&gt;_value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are a JavaScript or C++ developer, this will look familiar to you.&lt;/p&gt;

&lt;p&gt;Solidity, being the first smart contract programming language, has wide market adoption and is being used to build many decentralized applications. It was developed to write smart contracts on Ethereum, and, just like Java and &lt;a href="https://docs.oracle.com/en/java/javase/17/vm/java-virtual-machine-technology-overview.html"&gt;Java Virtual Machine (JVM)&lt;/a&gt;, Solidity runs on the &lt;a href="https://ethereum.org/en/developers/docs/evm/"&gt;Ethereum Virtual Machine (EVM)&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages-of-programming-smart-contracts-with-solidity"&gt;
  &lt;/a&gt;
  Advantages of programming smart contracts with Solidity
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Solidity has a large, accessible community. Because Solidity was the first smart contract programming language and was developed solely for smart contract programming on the Ethereum network, it has gained wide community support, making it easy for new developers to get help when there are stuck&lt;/li&gt;
&lt;li&gt;  Solidity is Turing-complete, so it’s not limited to running just a handful of algorithms — it can be used to compute all computable functions&lt;/li&gt;
&lt;li&gt;  Solidity offers concepts that are available in most modern programming languages. It has functions, string manipulation, classes, variables, arithmetic operations, etc. In addition, Solidity supports mapping data structures, which act as hash tables and consist of key types and key value pairs&lt;/li&gt;
&lt;li&gt;  Solidity doesn’t have a steep learning curve if you already know how to program with popular programming languages like Python, C++, and JavaScript, as most of its syntax was borrowed from these languages&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages-of-programming-smart-contracts-with-solidity"&gt;
  &lt;/a&gt;
  Disadvantages of programming smart contracts with solidity
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Solidity is a newer language, and even though the community has been helping with library development and its tools, there’s still so much to be done in the language that you’ll have to completely implement yourself&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Examples of blockchains using Solidity include &lt;a href="https://tendermint.com/"&gt;Tendermint&lt;/a&gt;, &lt;a href="https://docs.binance.org/smart-chain/wallet.html"&gt;Binance Smart Chain&lt;/a&gt;, &lt;a href="http://ethereumclassic.org/"&gt;Ethereum Classic&lt;/a&gt;, &lt;a href="http://tron.network/"&gt;Tron&lt;/a&gt;, &lt;a href="https://www.avax.network/"&gt;Avalanche&lt;/a&gt;, &lt;a href="http://www.counterparty.io/"&gt;CounterParty&lt;/a&gt;, and &lt;a href="https://hedera.com/"&gt;Hedera&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-rust"&gt;
  &lt;/a&gt;
  2. Rust
&lt;/h2&gt;

&lt;p&gt;According to &lt;a href="https://insights.stackoverflow.com/survey/2020#most-loved-dreaded-and-wanted"&gt;Stack Overflow surveys&lt;/a&gt;, &lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is one of the most beloved programming languages for five years in a row.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sCfdNvPR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/stack-overflow-survey.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sCfdNvPR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/stack-overflow-survey.png" alt="Stack Overflow Developer Survey"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rust is a low-level statically-typed programming language that is fast and memory-efficient — in an industry where scalability is not negotiable, Rust, as a language, finds a home. Rust is a relatively new programming language with enormous power while retaining simplicity, memory efficiency, reliability, and complexity combined.&lt;/p&gt;

&lt;p&gt;By default, Rust assumes best design and development practices and also gives you a chance to alter them if you choose to. Rust has no garbage collector, which means there would be no surprise incident (caused by the language) during the runtime.&lt;/p&gt;

&lt;p&gt;All of these factors make Rust a great choice for programming blockchain. It’s not surprising that one of the fastest blockchains, Solana, is built with Rust at its core.&lt;/p&gt;

&lt;p&gt;Rust's compiler has a color-coded output and an even more detailed error output to help with debugging.&lt;/p&gt;

&lt;p&gt;In many cases, Rust shows the cause of an error and where to find it by highlighting relevant code, accompanied by an explanation. Also, in some cases, it provides a fix for the error.&lt;/p&gt;

&lt;p&gt;Here is an example smart contract using Rust:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;borsh&lt;/span&gt;&lt;span class="p"&gt;::{&lt;/span&gt;&lt;span class="n"&gt;BorshDeserialize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BorshSerialize&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;near_sdk&lt;/span&gt;&lt;span class="p"&gt;::{&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;near_bindgen&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;near_sdk&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;collections&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;UnorderedMap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nd"&gt;#[global_allocator]&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;ALLOC&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nn"&gt;wee_alloc&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;WeeAlloc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;wee_alloc&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;WeeAlloc&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;INIT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;pub&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;StatusMessage&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;records&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UnorderedMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nd"&gt;#[near_bindgen]&lt;/span&gt;
&lt;span class="k"&gt;impl&lt;/span&gt; &lt;span class="n"&gt;StatusMessage&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;pub&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;set_status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;account_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;env&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;signer_account_id&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="py"&gt;.records&lt;/span&gt;&lt;span class="nf"&gt;.insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;account_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;pub&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;get_status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;account_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Option&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="py"&gt;.records&lt;/span&gt;&lt;span class="nf"&gt;.get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;account_id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Rust contains some object-oriented features; you can create structs and data. But unlike other object-oriented languages, it does not exhibit inheritance.&lt;/p&gt;

&lt;p&gt;Smart contracts blockchain using Rust include &lt;a href="https://coinsem.com/solana-all-you-need-to-know/?amp=1"&gt;Solana&lt;/a&gt;, &lt;a href="https://polkadot.network/"&gt;Polkadot&lt;/a&gt;, and &lt;a href="https://near.org/"&gt;Near Blockchain&lt;/a&gt;. You can find many blockchain projects built with Rust in &lt;a href="https://github.com/rust-in-blockchain/awesome-blockchain-rust"&gt;this GitHub repository&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages-of-programming-smart-contracts-with-rust"&gt;
  &lt;/a&gt;
  Advantages of programming smart contracts with Rust
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Because Rust is a low-level programming language and is designed for efficiency, you can build decentralized applications with high throughput&lt;/li&gt;
&lt;li&gt;  Rust immutability allows you to write predictable programs, which is what is needed for the type of applications built on the blockchain&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages-of-programming-smart-contracts-with-rust"&gt;
  &lt;/a&gt;
  Disadvantages of programming smart contracts with Rust
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Rust is a new programming language with some new concepts. It might take some time to get used to working with it, especially if you are new to programming&lt;/li&gt;
&lt;li&gt;  There are limited libraries for almost everything compared to other languages like Python and JavaScript&lt;/li&gt;
&lt;li&gt;  It’s verbose. With Rust, you’ll have to state every program construct explicitly, meaning you’ll write more code than you would in languages like JavaScript and Python&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-javascript"&gt;
  &lt;/a&gt;
  3. JavaScript
&lt;/h2&gt;

&lt;p&gt;JavaScript is a general-purpose programming language, and it’s found a place in the blockchain space. Because JavaScript is an entry-level language, most blockchains tend to create a JavaScript wrapper or library to allow developers to easily jump into the ecosystem and start building amazing products as soon as possible.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/hyperledger/fabric-chaincode-node"&gt;Hyperledger Fabric&lt;/a&gt; is a blockchain that allows you to build a smart contract with a few programming languages, including JavaScript (Node.js).&lt;/p&gt;

&lt;p&gt;Here is an &lt;a href="https://hyperledger.github.io/fabric-chaincode-node/main/api/"&gt;example of what a smart contract&lt;/a&gt; looks like in HyperLedger Fabric:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Contract&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fabric-contract-api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;util&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;util&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * A program to support updating values in a smart contract
 */&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;UpdateSmartContractValue&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Contract&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;UpdateSmartContractValue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;transactionA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;oldValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;putState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Buffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newValue&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;Buffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;transactionB&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;//  .....&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;UpdateSmartContractValue&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The community built &lt;a href="https://web3js.readthedocs.io/en/v1.5.2/"&gt;web3.js&lt;/a&gt;, a collection of libraries that allows you to interact with Ethereum smart contracts using HTTP, WebSocket, or IPC.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://coinsem.com/solana-all-you-need-to-know/"&gt;Solana Foundation&lt;/a&gt; also built JavaScript wrappers around Solana Rust programs that allow JavaScript developers to start building Dapps on the blockchain as soon as possible.&lt;/p&gt;

&lt;p&gt;Several tools have been built with JavaScript to help with blockchain development, but not for the core of the blockchain, due to its &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures"&gt;weak type checking&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages-of-programming-smart-contracts-with-javascript"&gt;
  &lt;/a&gt;
  Advantages of programming smart contracts with JavaScript
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  It’s a popular and mature programming language with plenty of community support&lt;/li&gt;
&lt;li&gt;  You’ll enjoy a faster development time compared to other languages, especially newer ones&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages-of-programming-smart-contracts-with-javascript"&gt;
  &lt;/a&gt;
  Disadvantages of programming smart contracts with JavaScript
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Dynamic typing: for mission-critical applications like smart contracts, type safety is an important feature. JavaScript implements dynamic type safety when most developers prefer to use a statically typed language for applications that are built on the blockchain&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-vyper"&gt;
  &lt;/a&gt;
  4. Vyper
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://vyper.readthedocs.io/en/v0.1.0-beta.12/testing-contracts.html"&gt;Vyper&lt;/a&gt; is a contract-oriented Python-like programming language that targets the &lt;a href="https://ethereum.org/en/developers/docs/evm/"&gt;Ethereum Virtual Machine (EVM)&lt;/a&gt;. It has contract-specific features, such as event notifiers for listeners, custom global variables, and global constants.&lt;/p&gt;

&lt;p&gt;Vyper was built to address the security issues present in Solidity. It was developed to complement Solidity, not replace it.&lt;/p&gt;

&lt;p&gt;Vyper deliberately has fewer features than Solidity to make contracts more secure and easier to audit, and, as a result, it does not support modifiers, inheritance, inline assembly, function and operator overloading, recursive calling, infinite-length loops, and binary fixed points.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages"&gt;
  &lt;/a&gt;
  Advantages
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Building secure smart contracts is possible and natural with Vyper, as they are less prone to attacks&lt;/li&gt;
&lt;li&gt;  Vyper code is human-readable. For Vyper, simplicity for the reader is more important than simplicity for the writer&lt;/li&gt;
&lt;li&gt;  A striking feature of Vyper is the ability to compute a precise upper limit for gas consumption related to a specific Vyper function call&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages"&gt;
  &lt;/a&gt;
  Disadvantages
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Vyper has limited support for pure functions, hence anything marked &lt;code&gt;constant&lt;/code&gt; is not allowed to change state&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have seen or worked with Python code, then you’ll almost be able to write &lt;a href="https://vyper.readthedocs.io/en/v0.1.0-beta.12/testing-contracts.html"&gt;Vyper code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here is an example from the &lt;a href="https://vyper.readthedocs.io/en/stable/"&gt;docs&lt;/a&gt;, just to give you a feel of it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class VyperContract:
    """
    An alternative Contract Factory which invokes all methods as `call()`,
    unless you add a keyword argument. The keyword argument assigns the prep method.
    This call
    &amp;gt; contract.withdraw(amount, transact={'from': eth.accounts[1], 'gas': 100000, ...})
    is equivalent to this call in the classic contract:
    &amp;gt; contract.functions.withdraw(amount).transact({'from': eth.accounts[1], 'gas': 100000, ...})
    """

    def __init__(self, classic_contract, method_class=VyperMethod):
        classic_contract._return_data_normalizers += CONCISE_NORMALIZERS
        self._classic_contract = classic_contract
        self.address = self._classic_contract.address
        protected_fn_names = [fn for fn in dir(self) if not fn.endswith('__')]
        for fn_name in self._classic_contract.functions:
            # Override namespace collisions
            if fn_name in protected_fn_names:
                _concise_method = mk_collision_prop(fn_name)
            else:
                _classic_method = getattr(
                    self._classic_contract.functions,
                    fn_name)
                _concise_method = method_class(
                    _classic_method,
                    self._classic_contract._return_data_normalizers
                )
            setattr(self, fn_name, _concise_method)

    @classmethod
    def factory(cls, *args, **kwargs):
        return compose(cls, Contract.factory(*args, **kwargs))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-yul"&gt;
  &lt;/a&gt;
  5. Yul
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://docs.soliditylang.org/en/v0.5.3/yul.html"&gt;Yul&lt;/a&gt; is an intermediate programming language that is compiled to bytecode for addressing the needs of different backends. The Solidity compiler has an experimental implementation that uses Yul as an intermediate language. Yul is used in stand-alone mode and for inline assembly inside Solidity.&lt;/p&gt;

&lt;p&gt;Yul bears planned support for EVM and &lt;a href="https://github.com/ewasm"&gt;ewasm&lt;/a&gt; (Ethereum flavored WebAssembly). It is designed to be a usable common denominator of both platforms.&lt;/p&gt;

&lt;p&gt;Yul is a great target for high-level optimization stages that can benefit both EVM and ewasm platforms equally.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages-to-using-yul"&gt;
  &lt;/a&gt;
  Advantages to using Yul
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Readability: programs written in Yul are readable even if the code is generated by a compiler from Solidity. Yul offers high-level constructs such as loops, function calls, and if and switch statements&lt;/li&gt;
&lt;li&gt;  Yul is simple to use, thanks to the translation of code from Yul code to bytecode&lt;/li&gt;
&lt;li&gt;  Yul uses a simple and flexible language to create contracts and is beginner-friendly&lt;/li&gt;
&lt;li&gt;  Yul is statically typed to avoid confusion on concepts like values and references. It has a default type that can always be omitted&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is an example of what Yul code looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;object "SmartContract" {
  code {
    // Smart contract constructor
    datacopy(0, dataoffset("Runtime"), datasize("Runtime"))
    return(0, datasize("Runtime"))
  }
  object "Runtime" {
    code {
       // Runtime code
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Most Ethereum-based projects most likely already use Yul.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages-of-using-yul"&gt;
  &lt;/a&gt;
  Disadvantages of using Yul
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Because Yul needs to be compiled to bytecode, it requires additional time to complete the entire compilation process, thus making it time-consuming during development&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Which programming language from the above list you should use is dependent on the blockchain you want to work on. For Ethereum blockchain, for example, Solidity is the top choice for most developers.&lt;/p&gt;

&lt;p&gt;Of course, we expect more conventional language support and more blockchain languages to come up, as it’s still an emerging space.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#logrocket-full-visibility-into-your-web-apps"&gt;
  &lt;/a&gt;
  &lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt;: Full visibility into your web apps
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8FGBNR-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2017/03/1d0cd-1s_rmyo6nbrasp-xtvbaxfg.png" alt="LogRocket Dashboard Free Trial Banner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt; is a frontend application monitoring solution that lets you replay problems as if they happened in your own browser. Instead of guessing why errors happen, or asking users for screenshots and log dumps, LogRocket lets you replay the session to quickly understand what went wrong. It works perfectly with any app, regardless of framework, and has plugins to log additional context from Redux, Vuex, and &lt;a class="mentioned-user" href="https://dev.to/ngrx"&gt;@ngrx&lt;/a&gt;
/store.&lt;/p&gt;

&lt;p&gt;In addition to logging Redux actions and state, LogRocket records console logs, JavaScript errors, stacktraces, network requests/responses with headers + bodies, browser metadata, and custom logs. It also instruments the DOM to record the HTML and CSS on the page, recreating pixel-perfect videos of even the most complex single-page apps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;Try it for free&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>discuss</category>
      <category>performance</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Java Notes #1</title>
      <author>DH Kim</author>
      <pubDate>Mon, 25 Oct 2021 20:51:51 +0000</pubDate>
      <link>https://dev.to/icncsx/java-271p</link>
      <guid>https://dev.to/icncsx/java-271p</guid>
      <description>&lt;p&gt;I learned Java almost 6 years ago when I was in university, and since then I have used it sparingly at work. Today I am starting a series where I chronicle my journey re-learning Java, taking extensive notes and summarizing them to share with you all.&lt;/p&gt;

&lt;p&gt;Here is my first note that will start the series:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#notes"&gt;
  &lt;/a&gt;
  Notes
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Java is platform independent, meaning that you can write a program once, and as long as your host machine has JVM, it will just run - barring rare edge cases.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Every class (in Java everything is inside a class) is compiled into a separate Java bytecode file that has the same name as the class but ends with the &lt;code&gt;.class&lt;/code&gt; extension instead of the &lt;code&gt;.java&lt;/code&gt; extension.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Every Java program is a set of class definitions. To run a Java program, it must have a &lt;code&gt;main method&lt;/code&gt;, which represents the entry point where the program starts when it is executed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To compile a Java source-code file, you can use the &lt;code&gt;javac&lt;/code&gt; command. And to run a Java class, you use the &lt;code&gt;java&lt;/code&gt; command. More typically though, you will use some kind of IDE which has shortcuts and buttons to do this for you.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There can only be one public top-level class per &lt;code&gt;.java&lt;/code&gt; file, and public top-level classes must have the same name as the source file.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>java</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to Build Strong Data Science Portfolio as a Beginner</title>
      <author>Abid</author>
      <pubDate>Mon, 25 Oct 2021 20:49:27 +0000</pubDate>
      <link>https://dev.to/kingabzpro/how-to-build-strong-data-science-portfolio-as-a-beginner-5aec</link>
      <guid>https://dev.to/kingabzpro/how-to-build-strong-data-science-portfolio-as-a-beginner-5aec</guid>
      <description>&lt;p&gt;After learning the basics of data science, you can start to work on real-world problems. But how do you showcase your work? In this article, we are going to learn a unique way to create a data science portfolio.&lt;br&gt;
&lt;a href="https://www.kdnuggets.com/2021/10/strong-data-science-portfolio-as-beginner.html#.YXcXINQEoG8.link"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---DUEx5HG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.kdnuggets.com/wp-content/uploads/strong-data-science-portfolio-as-beginner.jpg" alt="blog"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>career</category>
      <category>github</category>
    </item>
    <item>
      <title>O que é React JS e como começar a utilizar?</title>
      <author>Vinícius Neto</author>
      <pubDate>Mon, 25 Oct 2021 20:10:32 +0000</pubDate>
      <link>https://dev.to/viunow/o-que-e-react-js-e-como-comecar-a-utilizar-23hb</link>
      <guid>https://dev.to/viunow/o-que-e-react-js-e-como-comecar-a-utilizar-23hb</guid>
      <description>&lt;p&gt;Se você já acessou ou for acessar agora a página oficial do React, a descrição dele é: Uma biblioteca JavaScript para criar interfaces de usuário!&lt;/p&gt;

&lt;p&gt;O React foi desenvolvido pelo Facebook e lançado no ano de 2013,  atualmente ele é mantido pelo próprio Facebook, Instagram, demais empresas e pela comunidade de desenvolvedores individuais. O React é amplamente utilizado para construir as soluções de grandes empresas como Netflix, Airbnb, entre outras.&lt;/p&gt;

&lt;p&gt;O surgimento do React dentro do Facebook se deu pelo objetivo de otimizar a atualização das atividades simultâneas no feed da rede, seja o chat, status, posts, entre outros.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#como-funciona-o-react"&gt;
  &lt;/a&gt;
  Como funciona o React?
&lt;/h1&gt;

&lt;p&gt;O React, sendo uma biblioteca front-end, tem como objetivo facilitar a conexão das partes, ou elementos de uma página, seu funcionamento se dá pelo que é chamado de &lt;strong&gt;componentes&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mas o que são esses componentes?&lt;/strong&gt;&lt;br&gt;
Imaginemos uma página web muito simples, como um formulário com cinco inputs para o o usuário digitar e no final um botão para enviar os dados preenchidos.&lt;/p&gt;

&lt;p&gt;Note que nessa página, existem os cinco inputs para digitação e um botão, no HTML convencional o desenvolvedor criaria esses cinco inputs e o botão, totalizando 6 elementos na nossa página.&lt;/p&gt;

&lt;p&gt;Se por algum motivo, precisar ser adicionado mais cinco inputs e um novo botão, o desenvolvedor teria de criar esses elementos adicionais na página e assim totalizando 10 inputs e mais o botão, ficando com 12 elementos.&lt;/p&gt;

&lt;p&gt;Agora no React, essa mesma abordagem seria um pouco mais simples, como tratamos os elementos como componentes, já podemos presumir que um input pode ser um componente, assim como um botão, então podemos fazer a criação de somente um input e um botão como componentes e utilizar quantas vezes quisermos, se for preciso adicionar centenas de botões (por exemplo) só é necessário um componente botão e na nossa página fazer o uso desse componente no HTML.&lt;/p&gt;

&lt;p&gt;Aqui uma imagem para ilustrar essa ideia de componente:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TCKZksnV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hrkguh20x21ljmcgk17v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TCKZksnV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hrkguh20x21ljmcgk17v.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note que temos somente 4 componentes, mas no desenho ao lado, foi possível adicionar eles quantas vezes forem necessárias. E isso dá ao desenvolvimento uma organização muito maior do layout. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#como-utilizar-o-react"&gt;
  &lt;/a&gt;
  Como utilizar o React?
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;[Passo 1 - Node.js]&lt;/strong&gt;&lt;br&gt;
Presumo que você tenha algum conhecimento de React nesse momento. Primeiro de tudo, você deve instalar o Node.js, você pode baixar a versão para o seu sistema operacional através desse link: &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Após fazer o download e instalação do Node.js, você pode conferir se o mesmo foi instalado corretamente abrindo um terminal ou cmd e digitar o seguinte comando: &lt;code&gt;node --version&lt;/code&gt;. na linha abaixo deve aparecer qual a versão do node foi instalado, caso não apareça a versão, você deve ter instalado incorretamente e sugiro que repita este passo. Se você visualizou a versão, vamos para o próximo passo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[Passo 2 - Editor de texto]&lt;/strong&gt;&lt;br&gt;
Você pode utilizar o editor que preferir, eu particularmente utilizo o VSCode, caso não tenha e queira utilizar, você pode baixar através desse link: &lt;a href="https://code.visualstudio.com/download"&gt;vscode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Após a instalação, abra o seu vscode. Você deve criar uma pasta para a aplicação que vamos desenvolver, então faça onde você preferir. Depois de criar a pasta você deve abrir ela no vscode, note que após abrir, não há nada dentro, mas vamos criar no próximo passo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[Passo 3 - Criando um React App]&lt;/strong&gt;&lt;br&gt;
Com a pasta do projeto aberta no vscode, abra o terminal do vscode. Mas antes vou explicar a diferença entre os dois comandos que podemos utilizar para criar um projeto em React.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npx create-react-app meu-app&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Com este comando acima, dentro da pasta que você criou para o projeto, vai ser criada mais uma pasta chamada &lt;code&gt;meu-app&lt;/code&gt;, pois este último comando é para criar uma pasta com esse nome, então se você está na pasta 'projeto-react' e usa esse comando acima, dentro da sua pasta 'projeto-react' vai ser criada a pasta 'meu-app', ficando dessa maneira: desktop/react/projeto-react/meu-app&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npx create-react-app .&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Já com esse comando, note que ao invés de ter o nome da nossa pasta do projeto, tem um ponto '.', isso quer dizer que ao rodar o comando, todos os arquivos React serão inseridos dentro da pasta que você está, então ficaria a seguinte estrutura: desktop/react/projeto-react (e dentro dessa pasta ficará o seus arquivos do projeto).&lt;/p&gt;

&lt;p&gt;Você pode escolher qualquer um deles, eu particularmente crio uma pasta para o projeto, abro essa pasta no vscode e utilizo o segundo comando, &lt;code&gt;npx create-react-app .&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Agora depois dessas explicações, crie o seu projeto React.&lt;/p&gt;

&lt;p&gt;Quando terminar de baixar todos os arquivos, irá aparecer uma mensagem no terminal informando que o processo foi concluído.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[Passo 4 - Executando o seu projeto React]&lt;/strong&gt;&lt;br&gt;
Para executar o projeto, é bem fácil, no seu terminal, digite o comando &lt;code&gt;npm start&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Uma janela será aberta automaticamente no seu navegador com o projeto React sendo executado! Parabéns, você criou o seu primeiro projeto em React!&lt;/p&gt;

&lt;p&gt;Nos próximos artigos, iremos continuar a criação do nosso projeto iniciado aqui! &lt;/p&gt;

</description>
      <category>react</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The 4 October Frontend tips about a11y and UX</title>
      <author>Stas Melnikov</author>
      <pubDate>Mon, 25 Oct 2021 20:06:51 +0000</pubDate>
      <link>https://dev.to/melnik909/the-4-october-frontend-tips-about-a11y-and-ux-3763</link>
      <guid>https://dev.to/melnik909/the-4-october-frontend-tips-about-a11y-and-ux-3763</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-button-role-isnt-enough-for-an-accessible-interface"&gt;
  &lt;/a&gt;
  The button role isn't enough for an accessible interface
&lt;/h2&gt;

&lt;p&gt;There is a practice of overriding the button's default role. It's a bad practice already because authors of the ARIA in HTML standard prohibit overriding of default roles in section 2.1.&lt;/p&gt;

&lt;p&gt;But in addition, people think if they define role="button" this element becomes accessible. Yes, it's true for screen readers. But that's only one case!&lt;/p&gt;

&lt;p&gt;This "button" isn't accessible for a keyboard. Users can't focus on this element using the tab key. Also, this "button" isn't accessible for interaction using the enter or space keys.&lt;/p&gt;

&lt;p&gt;So if you want to define role="button" don't do that. Just use the button element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;don't do this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Go&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- or --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Go&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;you can use it instead&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Go&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-bigger-clickable-area-the-better-userfriendly-interactive-elements"&gt;
  &lt;/a&gt;
  The bigger clickable area the better user-friendly interactive elements
&lt;/h2&gt;

&lt;p&gt;When we design interactive elements we have to think about how users will interact with them, in particular, a clickable area. &lt;/p&gt;

&lt;p&gt;That is important because users use different kinds of interactions. I often see designers and developers make a clickable area that is equal sizes of the element. &lt;/p&gt;

&lt;p&gt;It's nice for users who use a mouse. But that's a big problem for other users. If users have  a motor disability click on such an element is a nearly impossible task,&lt;/p&gt;

&lt;p&gt;Sometimes I can't hit on such elements when I tap on them using a finger. Also outline around elements has not enough contrast, if I focused on them using a keyboard,&lt;/p&gt;

&lt;p&gt;But we can solve these problems easily. Just we should design more largest clickable area that will not conflict with other elements around.   &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7rDml1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/56937666/67caae32ca1a41859f94e25be24d8579/1.jpg%3Ftoken-time%3D1635292800%26token-hash%3DpVEa_BCCuXgCfixBPmjEiBrn72YcJP6BxUvZQ2j2Hg0%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7rDml1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/56937666/67caae32ca1a41859f94e25be24d8579/1.jpg%3Ftoken-time%3D1635292800%26token-hash%3DpVEa_BCCuXgCfixBPmjEiBrn72YcJP6BxUvZQ2j2Hg0%253D" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-arialabelledby-simplify-navigation-for-users-of-screen-readers"&gt;
  &lt;/a&gt;
  The aria-labelledby simplify navigation for users of screen readers
&lt;/h2&gt;

&lt;p&gt;Any web interface has a lot of sections that help users without vision disabilities orient at the page. We just see headings and understand that is a section and also its sense.&lt;/p&gt;

&lt;p&gt;But some users can't see. They use the special quick navigation mode known as "Regions list" in screen readers. In this mode screen readers display all regions on the page. So users can go to any by some taps.&lt;/p&gt;

&lt;p&gt;Unfortunately, there is a problem that is section elements aren't displayed in this mode until we associate section heading with a section using the aria-labelledby attribute.&lt;/p&gt;

&lt;p&gt;So we have to add the id to the heading and add this as a value to the aria-labelledby attribute that is defined for the section element.  As a result, this section will be added to the regions list and users will know about it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;don't do this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;About me&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum, dolor sit amet consectetur...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;you can use it instead&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;aria-labelledby=&lt;/span&gt;&lt;span class="s"&gt;"about-me"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"about-me"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;About me&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum, dolor sit amet consectetur...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#where-are-the-buttons-here"&gt;
  &lt;/a&gt;
  Where are the buttons here?
&lt;/h2&gt;

&lt;p&gt;Unfortunately, designers and developers don't know the importance of using the button element for any elements for which users can click. So why is that important?&lt;/p&gt;

&lt;p&gt;Yes, by default click applies on any elements. But not all users use a mouse for interaction with UI. For example, some users want to use tab, enter and space keys for interaction with UI. &lt;/p&gt;

&lt;p&gt;If we think about users of screen readers they can't interact with UI if button elements aren't on the page. &lt;/p&gt;

&lt;p&gt;So if you want to create an element by which users will click, please, make it is a button. &lt;/p&gt;

&lt;p&gt;For inspiration, I collected a few examples where the button element will be helpful. As a result, users will get a more user-friendly web interface.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cFP-1RfZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/57394376/e15dcab999b0459cb6341f370c73c32a/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DafeXIOr2WFoLscg-HWErfvhNb44hMyoBY5jDfhu0aFI%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cFP-1RfZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/57394376/e15dcab999b0459cb6341f370c73c32a/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DafeXIOr2WFoLscg-HWErfvhNb44hMyoBY5jDfhu0aFI%253D" alt="All dates inside a calendar are buttons"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G52erXTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/81e352bb434747368259abb64bb60192/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DwKox3i0AZcg9AidPHEBlfco88LVTX5B37b3rP9w_FvQ%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G52erXTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/81e352bb434747368259abb64bb60192/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DwKox3i0AZcg9AidPHEBlfco88LVTX5B37b3rP9w_FvQ%253D" alt="The button for clearing selected dates inside a calendar is a button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XE7VsoCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/975142f987d249fea31cf6bfaecf112f/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DJtTF9f4zus9ce3HiMel5vXGXukm-1OdiLCYN1yVjVP0%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XE7VsoCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/975142f987d249fea31cf6bfaecf112f/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DJtTF9f4zus9ce3HiMel5vXGXukm-1OdiLCYN1yVjVP0%253D" alt="The toggle on a previous month inside a calendar is a button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aznxhJmF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/ce0d494c321d4415b8cfad42d350e339/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DLsiNIl0tnfUBiDViu10y8TqvnSSSiQZPVts1rNy1XvY%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aznxhJmF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/ce0d494c321d4415b8cfad42d350e339/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DLsiNIl0tnfUBiDViu10y8TqvnSSSiQZPVts1rNy1XvY%253D" alt="The toggle on a next month inside a calendar is a button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SBRPEhZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/e6ac857309b94b6297d8f8ffa52c4438/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DNI9XILGhD9eLhUzvGCbezoZPP6TOG_f-mzZ-1qgGXKA%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SBRPEhZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/e6ac857309b94b6297d8f8ffa52c4438/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DNI9XILGhD9eLhUzvGCbezoZPP6TOG_f-mzZ-1qgGXKA%253D" alt="All points that mark apartaments on a map are buttons"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt;&lt;br&gt;
Folks, I love to share my tips with you. I do that with the help of donations from my sponsors since content creating is my full-time job.&lt;/p&gt;

&lt;p&gt;For this reason I ask you to join my sponsors if you like what I do &lt;br&gt;
&lt;a href="https://www.patreon.com/melnik909"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S0zkeHmS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3IjoxOTIwLCJ3ZSI6MX0%253D/patreon-media/p/campaign/2871133/09751df69a6d4a3990d4f6a2fb77340f/19.jpg%3Ftoken-time%3D1633305600%26token-hash%3DF2s9h-8VI8cZLJiiUalO1rewbCh6FPD_Qyepp1C7Aiw%253D" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/melnik909"&gt;Go to Patreon&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;❤ Thank you so much, my sponsors: Ben Rinehart, Sergio Kagiema, Jesse Willard, Tanya Ten, Spiridon Konofaos.&lt;/p&gt;

&lt;p&gt;👀 Also I tell stories from my career on Substack. Join &lt;a href="https://stasmelnikov.substack.com"&gt;my free newsletter&lt;/a&gt;, if you're interested in my background&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>css</category>
      <category>ux</category>
      <category>html</category>
    </item>
    <item>
      <title>Merge Sort and Quick Sort!</title>
      <author>Suchitra</author>
      <pubDate>Mon, 25 Oct 2021 19:51:09 +0000</pubDate>
      <link>https://dev.to/suchitra_13/merge-sort-and-quick-sort-icn</link>
      <guid>https://dev.to/suchitra_13/merge-sort-and-quick-sort-icn</guid>
      <description>&lt;p&gt;In this article I am going to explain two sorting algorithms, &lt;em&gt;Merge Sort&lt;/em&gt; and &lt;em&gt;Quick Sort&lt;/em&gt; with detailed analysis, application and space and time complexity.&lt;/p&gt;

&lt;p&gt;Before starting the topic, let's know about basic and other sorting algorithms.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/3o6Zt5jXXzAzdikVmE/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3o6Zt5jXXzAzdikVmE/giphy.gif" alt="Gif"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#some-sorting-algorithms-are"&gt;
  &lt;/a&gt;
  Some Sorting Algorithms are
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Bubble Sort&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Easy to implement and easy to understand. But not efficient sort, it takes O(N^2) time complexity and O(1) space. Means it is an in place sorting algorithm.(In each iteration, the biggest element goes into its correct position and in single iteration we have to do more number of swaps).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Selection Sort&lt;/strong&gt;&lt;br&gt;
Less number of swaps as compared to Bubble Sort. But still not efficient.&lt;br&gt;
It is an in place and unable sorting algorithm with O(N^2) time complexity.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Insertion Sort&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It also takes O(N^2) time complexity, but the interesting part of this sorting algorithm is that it takes just O(N) when the elements are partially sorted.&lt;br&gt;
In place and stable sorting, algorithm.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Heap Sort&lt;/strong&gt;&lt;br&gt;
It is an unstable sorting with O(NlogN) time and O(1) space complexity.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Count Sort&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is a stable sorting algorithm with time complexity O(N + K) where n is the number of elements in the array and k is the range of the elements. Counting sort is most efficient if the range of input values is not greater than the number of values to be sorted. Space O(N + K).&lt;br&gt;
arr = [3, 2, 4, 1, 2] here N = 5, k = 4 - 1 = 3&lt;br&gt;
range of input(N) &amp;lt; number of elements(K) &lt;br&gt;
If range is lager, then it will be not efficient to use.&lt;/p&gt;

&lt;p&gt;Now it's time to explain about Merge and Quick sort...&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#merge-sort"&gt;
  &lt;/a&gt;
  Merge Sort
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/D0WOL0ogZIoG4/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/D0WOL0ogZIoG4/giphy.gif" alt="Merge"&gt;&lt;/a&gt;&lt;br&gt;
It is based on Divide and Conquer technique with worst-case time complexity O(NlogN), it is one of most respective algorithms.&lt;/p&gt;

&lt;p&gt;Merge Sort first divides the array into equal halves and then merging them in a sorted manner.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Algorithm&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;Step&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;If&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="nc"&gt;Step&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Divide&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="n"&gt;recursively&lt;/span&gt; &lt;span class="n"&gt;into&lt;/span&gt; &lt;span class="n"&gt;two&lt;/span&gt; &lt;span class="n"&gt;halves&lt;/span&gt; &lt;span class="n"&gt;until&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;divided&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="nc"&gt;Step&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Merge&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;smaller&lt;/span&gt; &lt;span class="n"&gt;lists&lt;/span&gt; &lt;span class="n"&gt;into&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;lists&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sorted&lt;/span&gt; &lt;span class="nf"&gt;order&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;comparing&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;elements&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;two&lt;/span&gt; &lt;span class="n"&gt;halves&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;choose&lt;/span&gt; &lt;span class="n"&gt;smaller&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="n"&gt;between&lt;/span&gt; &lt;span class="n"&gt;them&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;into&lt;/span&gt; &lt;span class="n"&gt;another&lt;/span&gt; &lt;span class="nf"&gt;list&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extra&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.*&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="nf"&gt;merge_sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;pivot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;left_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;merge_sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;copyOfRange&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pivot&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;right_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;merge_sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;copyOfRange&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pivot&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;left_list&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right_list&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;left_list&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;right_list&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;left_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;right_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;left_cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right_cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ret_cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;left_cursor&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;left_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;right_cursor&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;right_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;left_list&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;left_cursor&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;right_list&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;right_cursor&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ret_cursor&lt;/span&gt;&lt;span class="o"&gt;++]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;left_list&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;left_cursor&lt;/span&gt;&lt;span class="o"&gt;++];&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ret_cursor&lt;/span&gt;&lt;span class="o"&gt;++]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;right_list&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;right_cursor&lt;/span&gt;&lt;span class="o"&gt;++];&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="c1"&gt;// append what is remain the above lists&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;left_cursor&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;left_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ret_cursor&lt;/span&gt;&lt;span class="o"&gt;++]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;left_list&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;left_cursor&lt;/span&gt;&lt;span class="o"&gt;++];&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;right_cursor&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;right_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ret_cursor&lt;/span&gt;&lt;span class="o"&gt;++]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;right_list&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;right_cursor&lt;/span&gt;&lt;span class="o"&gt;++];&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MergeSort&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Scanner&lt;/span&gt; &lt;span class="n"&gt;sc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Scanner&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;in&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;nextInt&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;nextInt&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="c1"&gt;// call merge sort function&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;merge_sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#pros-and-cons"&gt;
  &lt;/a&gt;
  Pros and Cons
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Large size list merged by this sort.&lt;/li&gt;
&lt;li&gt;Also used in linked list.&lt;/li&gt;
&lt;li&gt;External sorting&lt;/li&gt;
&lt;li&gt;Stable&lt;/li&gt;
&lt;li&gt;Time efficient O(NlogN)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It takes extra space 
Need space in the stack(Recursive) logN and extra space N.
O(N + logN)
= O(N)&lt;/li&gt;
&lt;li&gt;Not much efficient for small problem&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#quick-sort"&gt;
  &lt;/a&gt;
  Quick Sort
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/jS2Wv3E0xSiquMLPcA/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/jS2Wv3E0xSiquMLPcA/giphy.gif" alt="Quick"&gt;&lt;/a&gt;&lt;br&gt;
Quick sort uses the partition algorithm for finding pivot element and divide the array recursively into two halves.&lt;/p&gt;

&lt;p&gt;The idea behind this algorithm is that it is a similar kind of merge sort, but it does not take extra space. Here, the pivot element plays a major role.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;What is a pivot element?&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;choose pivot as 1st element&lt;/li&gt;
&lt;li&gt;choose pivot as 2nd element&lt;/li&gt;
&lt;li&gt;choose pivot as middle element (Best way)&lt;/li&gt;
&lt;li&gt;choose pivot as random element (Best way)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#logic"&gt;
  &lt;/a&gt;
  Logic:
&lt;/h3&gt;

&lt;p&gt;Suppose arr = [5, 3, 1, 2, 4]&lt;br&gt;
Step 1: Choose pivot element (took pivot as random so, pivot = 3)&lt;br&gt;
Step 2: In one pass we find pivot is in its proper position, means all the elements which are smaller than pivot are placed in left side and all the elements which are greater than pivot placed right side.(some logic are applied to do so)&lt;br&gt;
Now the array is : &lt;a href="https://dev.toIt's%20not%20recommended%20that%20left%20or%20right%20side%20will%20sorted%20it%20might%20be%20possible%20but%20not%20necessary"&gt;2, 1, 3, 5, 4&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useful-link"&gt;
  &lt;/a&gt;
  Useful link
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/SUCHITRAGIRI/DailyCodeWithJava/tree/main/Sorting"&gt;Sorting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#hope-it-helps-please-share-your-thoughts-in-the-comments"&gt;
  &lt;/a&gt;
  Hope it helps, please share your thoughts in the comments☺️
&lt;/h2&gt;

</description>
      <category>algorithms</category>
      <category>java</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>ThreatMapper - Open source runtime Threat Scanner</title>
      <author>Deepfence</author>
      <pubDate>Mon, 25 Oct 2021 19:20:47 +0000</pubDate>
      <link>https://dev.to/deepfence/threatmapper-open-source-runtime-exploitability-scanner-34ii</link>
      <guid>https://dev.to/deepfence/threatmapper-open-source-runtime-exploitability-scanner-34ii</guid>
      <description>&lt;p&gt;We’re excited to announce today that ThreatMapper is now 100% open source under the Apache 2.0 license! If you’re not familiar with ThreatMapper, it’s a rapidly evolving cloud native security observability platform that scans, maps, and ranks vulnerabilities from development through production across serverless, Kubernetes, container, and multi-cloud environments. &lt;/p&gt;

&lt;p&gt;Because modern applications and services rely heavily on shared, open source components, securing them is best done as a collaborative, community effort. By open sourcing ThreatMapper, we aim to help developers, DevOps, DevSecOps, and security teams identify and prioritize threats quickly and easily, and focus their efforts on the vulnerabilities that need to be fixed first.&lt;/p&gt;

&lt;p&gt;When we initially launched ThreatMapper, we first made it available as a freemium edition and worked closely with dozens of early adopters to evolve it into the robust cloud native security platform that it is today. By working alongside security professionals securing modern application environments, not only were we able to build out a rich set of features and capabilities that solve real-world challenges, but we were also able to see ThreatMapper make a tangible impact on security teams.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benefits of Using ThreatMapper&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here are just some of the benefits you get by using ThreatMapper to secure your applications and infrastructure:&lt;/p&gt;

&lt;p&gt;See the topology of your applications and infrastructure: ThreatMapper auto-discovers your production infrastructure – including cloud instances, Kubernetes nodes, serverless resources, and containers – and maps the topology of your applications in real time.&lt;/p&gt;

&lt;p&gt;Discover vulnerabilities, including fresh vulnerabilities in production that were not known at build or deploy time: ThreatMapper scans hosts, containers, and applications for known vulnerable dependencies, taking threat feeds from more than 50 different sources. ThreatMapper augments any “shift left” vulnerability scanning you may do in your development pipeline, and scans third-party components such as monitoring and load-balancing tools.&lt;br&gt;
Rank vulnerabilities by attack surface: ThreatMapper ranks the discovered vulnerabilities based on CVSS and other severity signals, as well as their exploit method and proximity to your external attack surface. With ThreatMapper, you know what vulnerabilities pose the greatest threats, and what you must fix first.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Roadmap&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ThreatMapper is a fully open source platform that makes it easy to scan for vulnerabilities and build a map of threats across multiple clouds and application types. ThreatStryker (our commercial offering) extends ThreatMapper with compliance scanning, runtime sensors, and a correlation and protection engine.&lt;/p&gt;

&lt;p&gt;Our intent is to migrate all security and observability capabilities, including compliance scanning and runtime sensors, into the open source ThreatMapper platform. ThreatMapper will make all threat and runtime data available through public APIs, for dashboards, SIEM and other external applications to consume.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Summary &amp;amp; What’s Next?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thank you to everyone who helped us on our journey so far to make ThreatMapper the robust open source security tool that we’re announcing today. We’re so grateful for the many design partners, customers, security professionals, advisors, and members of the Deepfence team (the Deepforce!) who helped us achieve this amazing milestone.&lt;/p&gt;

&lt;p&gt;While open sourcing ThreatMapper was always on our roadmap — today is only the beginning! We’ll continue to build and release new features on our mission to protect the cloud native continuum.&lt;/p&gt;

&lt;p&gt;Download, try, and contribute to open source &lt;a href="https://github.com/deepfence/ThreatMapper"&gt;ThreatMapper&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>security</category>
      <category>kubernetes</category>
      <category>devops</category>
      <category>aws</category>
    </item>
    <item>
      <title>DeepfakeHTTP v6.3.1</title>
      <author>Alexander</author>
      <pubDate>Mon, 25 Oct 2021 19:16:50 +0000</pubDate>
      <link>https://dev.to/xnbox1/deepfakehttp-v631-462h</link>
      <guid>https://dev.to/xnbox1/deepfakehttp-v631-462h</guid>
      <description>&lt;p&gt;A new version of &lt;a href="https://github.com/xnbox/DeepfakeHTTP"&gt;DeepfakeHTTP&lt;/a&gt; is out!&lt;br&gt;
I decided to add a new &lt;code&gt;--dir&lt;/code&gt; option, allowing to host static content as static servers do.&lt;br&gt;
However, unlike regular static servers, DeepfakeHTTP can also host executable stuff, such as shell scripts or JavaScript. In order to have JavaScript executed on the server side you need to specify &lt;code&gt;'use server'&lt;/code&gt; at the beginning of the code ( similar to the well-known &lt;code&gt;'use strict'&lt;/code&gt; ).&lt;/p&gt;

&lt;p&gt;Thank you to all the people who helped with advice, suggestions, and participation!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/xnbox"&gt;
        xnbox
      &lt;/a&gt; / &lt;a href="https://github.com/xnbox/DeepfakeHTTP"&gt;
        DeepfakeHTTP
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      DeepfakeHTTP is a web server that uses HTTP dumps as a source for responses.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>news</category>
      <category>showdev</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Pretend You're Using A Different Linux Distribution With One Docker Command</title>
      <author>Ben Lovy</author>
      <pubDate>Mon, 25 Oct 2021 19:14:29 +0000</pubDate>
      <link>https://dev.to/deciduously/pretend-youre-using-a-different-linux-distribution-with-one-docker-command-45k1</link>
      <guid>https://dev.to/deciduously/pretend-youre-using-a-different-linux-distribution-with-one-docker-command-45k1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-why"&gt;
  &lt;/a&gt;
  The Why
&lt;/h2&gt;

&lt;p&gt;Lots of developers use Linux, but "Linux" is a vast category.  There are a lot of similarities, but a lot of differences, too.  &lt;a href="https://ubuntu.com/"&gt;Ubuntu&lt;/a&gt; and &lt;a href="https://getfedora.org/"&gt;Fedora&lt;/a&gt; look and feel pretty similar until you try to install a package - whoops, &lt;code&gt;apt&lt;/code&gt; is a little different than &lt;code&gt;dnf&lt;/code&gt;. Specific system settings may be stored in different places, and particular commands may be included by default in one but not the other.  Then there's even more niche stuff like &lt;a href="https://archlinux.org/"&gt;Arch&lt;/a&gt;, which you install piece by piece from a very minimal package set, or &lt;a href="https://www.gentoo.org/"&gt;Gentoo&lt;/a&gt;, which is similar to Arch with the additional caveat that the user compiles all the software locally for their specific hardware.  Users of these distros may end up with pretty different-looking operating systems that all fall under the broad Linux umbrella.&lt;/p&gt;

&lt;p&gt;All of the above adhere to a structure called the &lt;a href="https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard"&gt;Filesystem Hierarchy Standard&lt;/a&gt; FHS for short.  This specifies the standard top-level hierarchy common to these different flavors, like &lt;code&gt;/etc&lt;/code&gt; for configuration, &lt;code&gt;/boot&lt;/code&gt; for bootloader files, &lt;code&gt;/proc&lt;/code&gt; for process management, and &lt;code&gt;/home&lt;/code&gt; for user-specific home directories.  See the Wikipedia link for a more complete list.  If you're a Linux user, this structure will feel familiar to you.&lt;/p&gt;

&lt;p&gt;However, even the FHS is not universal.  My personal development machine is running a super weird Linux flavor called &lt;a href="https://nixos.org/"&gt;NixOS&lt;/a&gt;.  This fully declarative system stores every single component of functionality in a unique directory called &lt;code&gt;/nix/store&lt;/code&gt; and maintains a web of symlinks.  Software compiled for standard Linux distributions won't run on NixOS or vice versa without specifically patching the resulting executable binaries.  To complicate things further, I'm pinning to the unstable channel instead of a tagged release, meaning the package set is liable to change at any time.  While there are a lot of benefits, it means my local machine is fundamentally incompatible with the Linux computers I want the software I produce to run on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-point"&gt;
  &lt;/a&gt;
  The Point
&lt;/h2&gt;

&lt;p&gt;I'm primarily writing code in &lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt;, which has powerful facilities for cross-compiling non-native targets built-in, and Nix can help me fill in the rest.  This is great!  From my local computer, I can produce working binaries for many different types of computers.&lt;/p&gt;

&lt;p&gt;For example, we want to support &lt;a href="https://releases.ubuntu.com/18.04/"&gt;Ubuntu 18.04&lt;/a&gt;, one &lt;a href="https://ubuntu.com/blog/what-is-an-ubuntu-lts-release"&gt;Long-Term Support&lt;/a&gt; release behind the current LTS, 20.04.  This is several years old by this point, and as a result, only has, for example, &lt;a href="https://www.gnu.org/software/libc/"&gt;&lt;code&gt;glibc&lt;/code&gt;&lt;/a&gt; version 2.27, instead of the current 2.34.  This is crucial for compatibility, because almost every program depends on your OS providing this library and being able to use whichever version it finds.&lt;/p&gt;

&lt;p&gt;However, how would I know that my result on my bleeding-edge NixOS box works as intended?  &lt;a href="https://www.docker.com/resources/what-container"&gt;Containers&lt;/a&gt; to the rescue!  We can ask &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; to build an Ubuntu 18.04 container and drop us into a shell with the &lt;em&gt;current&lt;/em&gt; filesystem available.  It's kind of like the &lt;code&gt;su&lt;/code&gt; command, except instead of switching the active user, you're changing your whole OS on the fly.&lt;/p&gt;

&lt;p&gt;Here's the line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker run --rm -it -v $PWD:/working-dir docker.io/ubuntu:18.04
root@6bb49a338644:/# cat /etc/lsb-release 
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=18.04
DISTRIB_CODENAME=bionic
DISTRIB_DESCRIPTION="Ubuntu 18.04.6 LTS"
root@487693de818e:/# cd working-dir/
root@487693de818e:/working-dir# ls
Cargo.lock  Cargo.toml  README.md  custom-target.json  dist  flake.lock  flake.nix  hello  hello_build  main.rs  scripts  target  x86_64-unknown-linux-gnu2.24.json  x86_64-unknown-linux-musldynamic.json  zig
root@7ae91a94a888:/working-dir# exit
$
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Perfect!  The &lt;code&gt;/working-dir&lt;/code&gt; directory inside your new Ubuntu 18.04 container now has the contents of whichever directory you were in when you ran this command.  That's the &lt;code&gt;-v $PWD:/working-dir&lt;/code&gt; part.  The &lt;code&gt;$PWD&lt;/code&gt; variable returns the current working directory, and after the colon, you provide a location in the new container to mount this directory.&lt;/p&gt;

&lt;p&gt;As far as any software inside is concerned, it's running in a standard Ubuntu installation.  This lets me quickly verify that my program's cross-compiled, binary-patched version runs as expected on this target environment.  When you're done, just type &lt;code&gt;exit&lt;/code&gt; to return to your native shell.  The &lt;code&gt;-it&lt;/code&gt; flag made the container interactive, and the &lt;code&gt;--rm&lt;/code&gt; flag will clean up the Docker container when it quits.&lt;/p&gt;

&lt;p&gt;You can check out the &lt;a href="https://hub.docker.com/search?category=os&amp;amp;source=verified&amp;amp;type=image"&gt;Docker Hub&lt;/a&gt; or &lt;a href="https://quay.io/"&gt;quay.io&lt;/a&gt; for other available docker containers to spin up.&lt;/p&gt;

&lt;p&gt;This tip works with any tool that supports the Docker API, in addition to Docker itself.  I'm running it via &lt;a href="https://podman.io/"&gt;Podman&lt;/a&gt;, and it works the same way.&lt;/p&gt;

&lt;p&gt;Now you can use whatever crazy environment you want and still responsibly ensure whatever you're compiling will work as intended for your users.&lt;/p&gt;

&lt;p&gt;Cover image photo by &lt;a href="https://unsplash.com/@braydona?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Braydon Anderson&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/disguise?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>productivity</category>
      <category>docker</category>
    </item>
    <item>
      <title>Next.js with Elasticsearch</title>
      <author>Defne Eroğlu</author>
      <pubDate>Mon, 25 Oct 2021 18:57:07 +0000</pubDate>
      <link>https://dev.to/definite2/nextjs-with-elasticsearch-9c</link>
      <guid>https://dev.to/definite2/nextjs-with-elasticsearch-9c</guid>
      <description>&lt;p&gt;I would like to start this post, by saying 'I wish &lt;a href="https://www.elastic.co/cloud/"&gt;Elasticsearch Cloud&lt;/a&gt; was free with no time limit, even just with limited features'...&lt;br&gt;
Why am I saying that; because so I could add full text search capability to filter blogs on my blog site that I developed with Next.js... &lt;br&gt;
&lt;a href="https://en.wikipedia.org/wiki/Full-text_search"&gt;Full Text Search&lt;/a&gt; queries make the content of the documents searchable.&lt;br&gt;
This ability can be used to make searchable the content of blogs in your website, and if you provide &lt;em&gt;search blogs&lt;/em&gt; or &lt;em&gt;filter blogs&lt;/em&gt; kind of feature in your application, when your user enters words or phrases that appear anywhere in the content of blogs, even if the entered search word is in code blocks, the related blogs can be obtained and shown as search results to your users. &lt;br&gt;
In order to do that, we need to index our blogs, &lt;code&gt;.md&lt;/code&gt; or &lt;code&gt;.mdx&lt;/code&gt; files, to Elasticsearch, and then, by using Elasticsearch's Rest Api, we provide full text search capability in our application.&lt;br&gt;
I wrote an article on this subject explaining how you can provide &lt;strong&gt;full text search capability in your Next.js blog application&lt;/strong&gt;, you can read from &lt;a href="https://devmuscle.com/blog/nextjs-with-elasticsearch"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>elasticsearch</category>
      <category>nextjs</category>
    </item>
  </channel>
</rss>
