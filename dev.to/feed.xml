<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Facebook's Virtual Reality Future: The Metaverse</title>
      <author>Rohit</author>
      <pubDate>Fri, 29 Oct 2021 12:03:53 +0000</pubDate>
      <link>https://dev.to/rohitcodes/facebooks-virtual-reality-future-the-metaverse-l6h</link>
      <guid>https://dev.to/rohitcodes/facebooks-virtual-reality-future-the-metaverse-l6h</guid>
      <description>&lt;p&gt;Today Mark zuckerberg introduced metaverse at facebookConnect2021&lt;/p&gt;

&lt;p&gt;Section 1: What is metaverse?&lt;/p&gt;

&lt;p&gt;In the concept of Metaverse, virtual reality and augmented reality converge and merge, creating an immersive world that's fun and explorable.&lt;/p&gt;

&lt;p&gt;But first, what is Metaverse?&lt;/p&gt;

&lt;p&gt;Metaverse is an online space that emulates a real world. People use it to make virtual avatars, interact with each other, and find entertainment. People create Metaverse by opening portals and expanding existing virtual spaces using the technology of the future, and its social network, facebook.com.&lt;/p&gt;

&lt;p&gt;Note that this article is part of The Facebook 10, a series of articles looking at key players in Facebook’s 10 year road map. This is the first of two articles on Facebook’s Virtual Reality future. You can find the second here.&lt;/p&gt;

&lt;p&gt;Here’s a hint: you don’t need a VR headset to participate.&lt;/p&gt;

&lt;p&gt;What does the future hold for facebook's virtual reality?&lt;/p&gt;

&lt;p&gt;Mark Zuckerberg had just three words to describe the state of virtual reality today in his closing remarks at Connect2021:&lt;/p&gt;

&lt;p&gt;Space exploration:&lt;/p&gt;

&lt;p&gt;Ariel asks:&lt;/p&gt;

&lt;p&gt;Space exploration&lt;/p&gt;

&lt;p&gt;Mark has put a lot of emphasis on VR as being the future of virtual reality. The community was excited to get a glimpse of how much progress was being made, and it has been so excited that we have been asked to discuss it in detail on the final day of the Connect conference.&lt;/p&gt;

&lt;p&gt;It may seem contradictory for our community to ask us to talk about the future of something that isn't here, but hear me out.&lt;/p&gt;

&lt;p&gt;Mark Zuckerberg is betting the social network on virtual reality (VR). It's Facebook's best bet for the future of social interaction. VR will forever change the way we interact.&lt;/p&gt;

&lt;p&gt;How does technology shape our world?&lt;/p&gt;

&lt;p&gt;Will we get to live in virtual worlds like we lived in the gaming world? How do we feel about that?&lt;/p&gt;

&lt;p&gt;Come and listen to panellists talk about what virtual worlds really are and what it means to be part of such a world.&lt;/p&gt;

&lt;p&gt;Since virtual reality is the hot technology at the moment, everyone is talking about it. One of the most prominent examples is Facebook's Facebook's Oculus team recently opening up the Oculus store, allowing users to create a VR experience.&lt;/p&gt;

&lt;p&gt;Why should you listen to this video?&lt;/p&gt;

&lt;p&gt;If you're serious about developing for virtual worlds like Minecraft, this video is for you. Panellists will talk about the evolving nature of virtual worlds, hardware and app development.&lt;/p&gt;

&lt;p&gt;The future of interconnectivity&lt;/p&gt;

&lt;p&gt;In 2014 Mark Zuckerberg put together a manifesto outlining the future of connectivity which was a game changer.&lt;/p&gt;

&lt;p&gt;Last year he announced Facebook's aim to connect everyone on the planet and introduced an initiative called "Connectivity for the rest of the world".&lt;/p&gt;

&lt;p&gt;In its effort to achieve this goal Facebook will be using the above infrastructure which includes the use of solar panels and wind turbines. This will be a tough challenge as the post-oil world in the 1950's is already well and truly over. In fact in some places the distance between people is closer than ever and we don't even need technology.&lt;/p&gt;

&lt;p&gt;About 800 million people have no internet connection at all, while millions more are restricted to mobile connections which are typically slow and expensive.&lt;/p&gt;

&lt;p&gt;Conclusion&lt;/p&gt;

&lt;p&gt;Facebook believes that user experience is a gateway to communication, media consumption and learning. What could we learn from their vision for future Facebook? We learn that they believe that virtual reality will replace television, game consoles and Facebook as we know it. I do not think the future of Facebook will be in a different way than the future of television was in our grandparents time. What we have to do as designers is to keep the user experience unchanged and work on the interactions to improve user experience and keep them engaged for longer.&lt;/p&gt;

</description>
      <category>ai</category>
      <category>machinelearning</category>
      <category>facebookmetaverse</category>
      <category>programming</category>
    </item>
    <item>
      <title>Day 21 of 100 Days of Code &amp; Scrum: Grinding for XP, Scrum, and Next.js (Free E-Book)</title>
      <author>Rammina</author>
      <pubDate>Fri, 29 Oct 2021 12:01:18 +0000</pubDate>
      <link>https://dev.to/rammina/day-21-of-100-days-of-code-scrum-grinding-for-xp-scrum-and-nextjs-free-e-book-3fpo</link>
      <guid>https://dev.to/rammina/day-21-of-100-days-of-code-scrum-grinding-for-xp-scrum-and-nextjs-free-e-book-3fpo</guid>
      <description>&lt;p&gt;Happy Friday, everyone!&lt;/p&gt;

&lt;p&gt;Today was a grind, but I learned a lot. Firstly, I read &lt;a href="https://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2/"&gt;Scrum and XP from the Trenches&lt;/a&gt; for an hour or so. After that, I worked out because sitting down and staring at the screen for too long can be draining. I spent the rest of the day learning and reviewing Next.js.&lt;/p&gt;

&lt;p&gt;An interesting fact I didn't know before was that Next.js implements lazy loading for images, so images are loaded only as you scroll down to them. This is very efficient for websites!&lt;/p&gt;

&lt;p&gt;Anyway, moving on to my daily report!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I found a really fun resource for Scrum, which was a Scrum Comic. Also, I learned about misconceptions revolving around the Product Owner role and how large businesses fail to implement scrum properly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I learned and worked on today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6iATxvUw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oikj9cfyl97ieq7wk9xv.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6iATxvUw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oikj9cfyl97ieq7wk9xv.jpeg" alt="Product Backlog" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I read &lt;a href="https://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2/"&gt;Scrum and XP from the Trenches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I learned a lot about Product Backlog management.&lt;/li&gt;
&lt;li&gt;Product Backlog Items (and User Stories) ideally should have:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;ID&lt;/code&gt; - unique identifier to keep track of an item in case it is renamed&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Name&lt;/code&gt; - a short descriptive name.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Importance&lt;/code&gt; - a Product Owner's importance rating.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Initial Estimate&lt;/code&gt; - the Development Team's initial estimate about how much work is needed to implement this story. T-shirt sizes are great ways to estimate.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;How to Demo&lt;/code&gt; - high-level description of how it will be demonstrated in the Sprint Demo.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Notes&lt;/code&gt; - brief info or clarification&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;learned about the differences between external and internal quality&lt;/li&gt;
&lt;li&gt;while it is tempting to immediately create a visible output that the clients would appreciate (external quality), internal quality is more important and is nonnegotiable (cannot be compromised).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#nextjs"&gt;
  &lt;/a&gt;
  Next.js
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I followed the &lt;a href="https://nextjs.org/learn/basics/create-nextjs-app?utm_source=next-site&amp;amp;utm_medium=nav-cta&amp;amp;utm_campaign=next-website"&gt;official Next.js tutorial&lt;/a&gt; to review Next.js.&lt;/li&gt;
&lt;li&gt;learned about lazy loading for images in Next.js&lt;/li&gt;
&lt;li&gt;reviewed the difference in Routing between vanilla React and Next.js.&lt;/li&gt;
&lt;li&gt;reviewed &lt;code&gt;css-modules&lt;/code&gt; and its syntax&lt;/li&gt;
&lt;li&gt;reviewed about &lt;code&gt;&amp;lt;Head&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;Layout&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;phew&lt;/em&gt; That's a lot of learning!&lt;/p&gt;

&lt;p&gt;Have a great Friday, everyone!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2CLp2LPL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5pgwtu5tynvb7upwhyar.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2CLp2LPL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5pgwtu5tynvb7upwhyar.png" alt="Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.visual-paradigm.com/scrum/3c-and-invest-guide/"&gt;Effective User Stories&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2/"&gt;Scrum and XP from the Trenches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/basics/create-nextjs-app?utm_source=next-site&amp;amp;utm_medium=nav-cta&amp;amp;utm_campaign=next-website"&gt;Official Next.js tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#free-ebook"&gt;
  &lt;/a&gt;
  Free E-Book
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://flaviocopes.com/page/nextjs-handbook/"&gt;The Next.js Handbook&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://seattlescrum.com/downloads/Why-Scrum-Isnt-Making-Your-Company-Very-Agile-v2.pdf"&gt;Cover Photo&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>KISS</title>
      <author>nicolasteofilo</author>
      <pubDate>Fri, 29 Oct 2021 11:34:55 +0000</pubDate>
      <link>https://dev.to/nicolasteofilo/kiss-519e</link>
      <guid>https://dev.to/nicolasteofilo/kiss-519e</guid>
      <description>&lt;p&gt;Este é um conceito que pode te salvar de muito sofrimento!😀&lt;/p&gt;


&lt;p&gt;&lt;br&gt;
KISS -  &lt;strong&gt;Keep It Simple, Stupid!&lt;/strong&gt;&lt;br&gt;
Traduzindo para o português você pode pensar que este principio fala: "Mantenha simples, estupido" e não, ele não está te chamando de estúpido kkk 😂.&lt;br&gt;
O entendimento que você teve ter sobre este conceitos é: "Mantenha simples e estúpido"&lt;br&gt;
&lt;/p&gt;





&lt;h4&gt;
  &lt;a href="#agora-vamos-descobrir-a-ponto-principal-que-%C3%A9-aplicar-no-diaadia"&gt;
  &lt;/a&gt;
  Agora vamos descobrir a ponto principal, que é aplicar no dia-a-dia!
&lt;/h4&gt;


&lt;p&gt;Um dos ponto principais é saber como aplicar no dia-a-dia, porque não adianta nada você só saber o conceito e não aplicar nada! Então vamos aplicar, basicamente esse conceito te diz que você deve manter o seu código simples...&lt;br&gt;
&lt;strong&gt;Primeiramente&lt;/strong&gt;, ele não está falando para você deixar o seu código o menor possível.&lt;br&gt;
Mas o que é para você fazer então?&lt;br&gt;
O conceito te propõe que você deixei o seu código o mais legível possível, o mais simples possível e entendível para qualquer DEV que tiver que ler e dar manutenção naquele seu código, independente se o outro desenvolvedor for júnior, pleno, ou sênior!&lt;br&gt;
&lt;/p&gt;





&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;


&lt;p&gt;É muito comum pelos Dev's javascript criar uma função qualquer e passar parâmetros, agora vamos ver o jeito errado(de acordo com o conceito KISS) e o jeito certo de se criar essa mesma função!&lt;/p&gt;

&lt;br&gt;
Então vamos supor que nós estamos precisando criar uma função que recebe como parâmetro uma lista de úsuarios! E a partir disso, vai fazer um &lt;code&gt;.map&lt;/code&gt; e vai retornar o nome e idade de cada úsuario! Uma coisa bem simples para quem meche com javascript em geral!


&lt;h5&gt;
  &lt;a href="#errado"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Errado!&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;infos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;infos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
     &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;
    &lt;span class="p"&gt;}))&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Primeiramente, eu nomeei a função como &lt;code&gt;getInfo&lt;/code&gt;, se eu for nesse código daqui a vários meses, eu vou saber o que a função faz somente pelo nome, acredito que não!&lt;br&gt;
O parametro que eu passe &lt;code&gt;info&lt;/code&gt;, será que daqui a um tempo sem ver esse código eu vou saber que é uma lista de usuários que eu tenho que passar ali, acredito que também não!&lt;br&gt;
E ali no meu &lt;code&gt;.map&lt;/code&gt; eu declarei &lt;code&gt;u&lt;/code&gt;, o que que é esse &lt;strong&gt;u&lt;/strong&gt;, nunca que eu vou saber kkk 😂😂!&lt;/p&gt;




&lt;h5&gt;
  &lt;a href="#certo"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Certo!&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getUserNameAndAge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
     &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;
    &lt;span class="p"&gt;}))&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Agora sim, está bem mais fácil de saber o que cada coisa faz, começando pelo nome da função que já me diz claramente o que ela faz, pegar o nome e a idade do usuário!No parâmetro posso ver claramente que eu vou passar &lt;code&gt;users&lt;/code&gt;, que como está no plural, remete a vários usuários!&lt;br&gt;
E no &lt;code&gt;.map&lt;/code&gt; eu deixo explicito que eu estou retornando um usuário e que desse usuário eu retorno o nome e a idade!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#conclus%C3%A3o"&gt;
  &lt;/a&gt;
  Conclusão
&lt;/h3&gt;

&lt;p&gt;Você pode ver que eu dei um exemplo bem simples, mas que pode ocorrer muito no dia-a-dia de um desenvolvedor e isso se aplica a qualquer linguagem ou ferramente que você use, eu espero que você tenha compreendido o sentido do conceito &lt;strong&gt;KISS&lt;/strong&gt;, até mais 😀&lt;/p&gt;




&lt;p&gt;Estou deixando alguns link onde compartilho mais conteúdo além do blog aqui !&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://instagram.com/onicolasteofilo"&gt;Instagram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/nicolasteofilo/"&gt;Linkedin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Python API Client Using Magic Methods</title>
      <author>Andrew McIntosh</author>
      <pubDate>Fri, 29 Oct 2021 11:30:09 +0000</pubDate>
      <link>https://dev.to/amcintosh/python-api-client-using-magic-methods-5d5</link>
      <guid>https://dev.to/amcintosh/python-api-client-using-magic-methods-5d5</guid>
      <description>&lt;p&gt;Python "magic methods" allow for some very fun and powerful code.&lt;/p&gt;

&lt;p&gt;Magic methods refers to all those special methods in Python classes that start and end with &lt;code&gt;__&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;The documentation for &lt;a href="https://docs.python.org/3/reference/datamodel.html#special-method-names"&gt;Special method names&lt;/a&gt; says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A class can implement certain operations that are invoked by special syntax (such as arithmetic operations or subscripting and slicing) by defining methods with special names.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For instance the &lt;code&gt;__init__&lt;/code&gt; method is called when a new instance of a class is instantiated. &lt;code&gt;__str__&lt;/code&gt; is a method that returns a string representation of the class. As stated in the docs, these are not methods that generally get invoked directly on the class. For example, you don't call &lt;code&gt;my_object.__str__()&lt;/code&gt; but &lt;code&gt;__str__&lt;/code&gt; would be called by &lt;code&gt;print(my_object)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In this post, I'm going to demonstrate using the &lt;code&gt;__getattr__&lt;/code&gt; and &lt;code&gt;__call__&lt;/code&gt; magic methods to build a dynamic API client.&lt;/p&gt;

&lt;p&gt;Let's say you're building a client for an API with endpoints like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GET &lt;a href="https://some-api.net/user"&gt;https://some-api.net/user&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;GET &lt;a href="https://some-api.net/user/permissions"&gt;https://some-api.net/user/permissions&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;POST &lt;a href="https://some-api.net/article"&gt;https://some-api.net/article&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;GET &lt;a href="https://some-api.net/article/"&gt;https://some-api.net/article/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are a lot of ways to build a client for this. One might look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;APIClient&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;BASE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://some-api.net"&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;make_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BASE_URL&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
            &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;response_body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;response_body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Unexpected Response '%s' from '%s'"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response_body&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"GET"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"user"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_user_permissions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"GET"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"user/permissions"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_article&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"POST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"article"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_article&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"GET"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"article/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We would then use the client:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;APIClient&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_user&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;permissions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_user_permissions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;new_article&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_article&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;"some"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="n"&gt;existing_article&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_article&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is fine. &lt;/p&gt;

&lt;p&gt;But what if the API is changing often? Or if there are dozens of endpoints and you don't know which you need to call? If later on you discover you need to call &lt;code&gt;GET https://some-api.net/user/roles&lt;/code&gt; or &lt;code&gt;GET https://some-api.net/some_other_thing?some_param=foo&lt;/code&gt;, you'll need to go back to you client and add matching methods.&lt;/p&gt;

&lt;p&gt;It would be nice to have things a bit more dynamic, and one way to do that is with magic methods. Specifically, I'll be using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;__getattr__&lt;/code&gt; which is "Called when the default attribute access fails with an AttributeError" (see &lt;a href="https://docs.python.org/3/reference/datamodel.html#object.__getattr__"&gt;the docs&lt;/a&gt;). This means that if you call &lt;code&gt;my_object.some_missing_attr&lt;/code&gt;, then &lt;code&gt;__getattr__&lt;/code&gt; will get invoked with &lt;code&gt;"some_missing_attr"&lt;/code&gt; as the &lt;code&gt;name&lt;/code&gt; parameter.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;__call__&lt;/code&gt; which is "Called when the instance is "called" as a function" (see &lt;a href="https://docs.python.org/3/reference/datamodel.html#object.__call__"&gt;the docs&lt;/a&gt;), eg. &lt;code&gt;my_object()&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Using these, we can build something like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;

&lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getLogger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;APIClient&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;BASE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://some-api.net"&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;base_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;base_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;base_url&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;BASE_URL&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__getattr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;APIClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_endpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_endpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;endpoint&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;endpoint&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;base_url&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;base_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__call__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"method"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"GET"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;object_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_endpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;object_id&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;response_body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;response_body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Unexpected Response '%s' from '%s'"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response_body&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This allows us to call the API like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;APIClient&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;permissions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;permissions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;new_article&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;article&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"POST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"some"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="n"&gt;existing_article&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;article&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;How does this work? &lt;/p&gt;

&lt;p&gt;Well in the case of &lt;code&gt;client.user.permissions()&lt;/code&gt;, &lt;code&gt;.user&lt;/code&gt; is an attribute and since the client doesn't have that attribute, it calls &lt;code&gt;__getattr__&lt;/code&gt; with &lt;code&gt;name="user"&lt;/code&gt;, which then returns an &lt;code&gt;APIClient&lt;/code&gt; instance with the name appended to the endpoint URL. The same happens when &lt;code&gt;.permissions&lt;/code&gt; is invoked on the &lt;code&gt;APIClient&lt;/code&gt; instance that was returned by &lt;code&gt;.user&lt;/code&gt;, in turn giving us another &lt;code&gt;APIClient&lt;/code&gt; instance, now with a path of &lt;code&gt;https://some-api.net/user/permissions&lt;/code&gt;. Finally this &lt;code&gt;APIClient&lt;/code&gt; instance is called by &lt;code&gt;()&lt;/code&gt;, which invokes the &lt;code&gt;__call__&lt;/code&gt; method. This method makes the actually HTTP call to the constructed URL based in any parameteres passed in, but defaults to a &lt;code&gt;GET&lt;/code&gt; request.&lt;/p&gt;

&lt;p&gt;In the case of the article calls, &lt;code&gt;client.article(id=123)&lt;/code&gt; works much the same way, but the &lt;code&gt;APIClient&lt;/code&gt; is called with an id parameter. This id gets appended to the url by the same internal &lt;code&gt;_endpoint()&lt;/code&gt; method that &lt;code&gt;__getattr__&lt;/code&gt; uses, which results in a GET call to &lt;code&gt;https://some-api.net/article/&amp;lt;id&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For &lt;code&gt;client.article(method="POST", data={"some": "data"})&lt;/code&gt;, we override the method and add a data payload to the POST.&lt;/p&gt;

&lt;p&gt;As you can see, the client itself can handle a large variety of API calls without any significant changes, allowing the utilizing application a lot of flexibility. &lt;/p&gt;

&lt;p&gt;In the example of the newly required calls, &lt;code&gt;GET https://some-api.net/user/roles&lt;/code&gt; and &lt;code&gt;GET https://some-api.net/some_other_thing?some_param=foo&lt;/code&gt;, no changes to the client are needed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;roles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;thing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;some_other_things&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;some_param&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>python</category>
      <category>programming</category>
      <category>api</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>7 Factors Why Native App Development Can Offer Greater Flexibility to Businesses
</title>
      <author>Hanna Zoey</author>
      <pubDate>Fri, 29 Oct 2021 11:24:58 +0000</pubDate>
      <link>https://dev.to/hannazoey/7-factors-why-native-app-development-can-offer-greater-flexibility-to-businesses-1emc</link>
      <guid>https://dev.to/hannazoey/7-factors-why-native-app-development-can-offer-greater-flexibility-to-businesses-1emc</guid>
      <description>&lt;p&gt;Mobile devices have changed the way people use to connect to the internet. And handheld devices have also been very helpful to the end-users. Mobile devices have now outnumbered humans as most of us have multiple devices. Young entrepreneurs must figure out how they are going to make full use of a mobile app so that they can have the edge over their competitors.&lt;/p&gt;

&lt;p&gt;True mobile app companies can make sure that they are right on the money for better performance, cost-effectiveness, and more reach to their current and potential customers. That is why the taut use of a mobile app is critical to the success of any mobile app. Businesses need to take care of app development models, and the type of that can be a good factor in their success.&lt;/p&gt;

&lt;p&gt;Mobile apps are of various types, and the three most common ones are native apps, hybrid apps and web apps. Let me define all these types briefly to understand exactly why they are important in their own aspects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Native App&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A native app can be defined as something which is developed to work on a platform or device. That is why a native app gives freedom to the developers to get access to the software and hardware to use it for a great user experience. Native apps will be discussed in detail below, so take a look directly from point 1 if you want to skip information about other types of apps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Web App&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A web app runs on a web server, unlike computer-based software programs that run locally on the operating system of the device. Web apps are accessed by the user through a web browser, and an active Internet connection is a requirement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hybrid App&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A hybrid app is a combination of a native and web app. They are essentially web apps that have been put in a native app shell. They allow app developers to write code for an app and use it for multiple platforms. &lt;/p&gt;

&lt;p&gt;Native apps offer Much support to the developers as well as the company looking for an app. In this blog, I will offer my readers seven factors for which native apps work perfectly, especially for small businesses and startups.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Performance&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Apps are written in a language that fully supports the ecosystem, thus allowing native apps to run fluently. In addition, these apps also have access to exclusive APIs and components, which make them compatible with different screen sizes. This is one reason why with access to hardware and software features, native apps can be fully optimized to deliver an exceptional user experience. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Security&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hybrid apps rely heavily on the security offered by system browsers, but native apps are different. They are fully protected by different layers of the security provided by the operating system. With so many layers of protection, It is less likely that your app can be trespassed. Even though native app development takes longer to create and has a longer release cycle, the final output is perfect execution and security. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Scalability&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Native apps take less time in the configuration because they are compatible with one platform. &lt;a href="https://www.branex.ca/blog/hire-dedicated-mobile-app-developers-team-for-android-and-ios/"&gt;App developers&lt;/a&gt; can add any feature they want with no restrictions. This effectively means that native apps are more scalable. If you initially create a native app but then want to extend some of the capabilities, then you can do so. Adding some cross-platform code is the answer, which is why scalability is at the heart of native app development.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Access to Hardware Features&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the biggest problems with a mobile app is that it can fail to take advantage of the device hardware fully. That is where you need a native app because, with the hybrid or web app, you may face this problem. Native apps give you access to specialized hardware features of any mobile/handheld device. Optimizing your mobile App with dedicated APIs can be a piece of cake. Native apps offer good support in this concern and stand head and shoulders above a web or hybrid pp. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Stability&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;It doesn't matter whether you are going for a native app for Android or iOS. The stability and reliability of the platform are very important. As native apps are fully supported by their respective platforms, it makes these apps much more stable when it comes to the development and maintenance part. It is hard to believe that Apple or Google will suddenly drop the support for native apps. That is why with a native app, your App's future is secure. &lt;/p&gt;

&lt;p&gt;There is one more advantage here, and it is all about developers easily implementing system features such as application shortcuts and biometric APIs without any problem. Furthermore, the developers can get early access to these features and can implement them as soon as they are made available for them. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Better User Experience&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Any native app designed for a platform, like iOS or Android, follows a unified pattern that is known to the users. This makes it easy for anyone to navigate through the interface, and every one of us has to follow the standards and guidelines in this concern. The platform offers great support to businesses when designing and developing a native app as it adheres to all the guidelines. &lt;/p&gt;

&lt;p&gt;Integrating platform-specific features can also be enhanced, just like Google Maps and Siri, with a native app. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Access to Developers&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Businesses looking for native apps can be in for a great experience, but they must look for experienced &lt;a href="https://www.branex.ca/mobile-app-development/"&gt;app development companies&lt;/a&gt; before moving on. You may find developers quite easily, but only the ones with years of experience in this regard can be trusted. That's how you can get to your goal without much difficulty and offer exceptional apps to your customers for a flawless experience. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Over to you&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you think that you can add something valuable to this blog or want to ask a question, you are more than welcome. For any feedback too, please use the comments section below.&lt;/p&gt;

</description>
      <category>native</category>
      <category>app</category>
      <category>development</category>
    </item>
    <item>
      <title>How AI Can Help Drive Design Decisions For Startups to create better products</title>
      <author>Lex Trukhin</author>
      <pubDate>Fri, 29 Oct 2021 10:53:53 +0000</pubDate>
      <link>https://dev.to/lextrukhin/how-ai-can-help-drive-design-decisions-for-startups-to-create-better-products-48a6</link>
      <guid>https://dev.to/lextrukhin/how-ai-can-help-drive-design-decisions-for-startups-to-create-better-products-48a6</guid>
      <description>&lt;p&gt;AI, or artificial intelligence, is an often overused buzzword that in itself highlights how far technology has come, especially as it relates to design in startups. While artificial intelligence has traditionally been used in personalizing products and services based on large repositories of collected data, it has become used by some of the most innovative startups to help assist and drive the entire design decision-making process. &lt;/p&gt;

&lt;p&gt;According to &lt;a href="https://www.statista.com/statistics/607716/worldwide-artificial-intelligence-market-revenues/"&gt;Statista&lt;/a&gt;, the value of the AI market is set to grow by $126 billion by 2025. Therefore, there is significant room for development in the industry as it relates to product design and creativity for companies. The question lies in how can AI promote control over creative concepts and design in companies, especially startups, in a way that such contributions are meaningful and result in more efficiency for product teams? From a design context, AI will allow startups to realize empathy as a component when designing products and then use those insights, oftentimes gained from valuable data, to drive the development of extremely personalized products. Moreover, one of the central ways AI is practical for startups is to enhance design decisions. Design decision-making used to be a slow process that required many resources from companies, and even worse for startups, presenting bottlenecks in product development. AI now allows startups to make more efficient and speedy design decisions, which ultimately result in better products and most importantly, satisfied users. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enhancing-design-decisions"&gt;
  &lt;/a&gt;
  Enhancing design decisions
&lt;/h2&gt;

&lt;p&gt;Design decision-making was previously time-consuming and relied on the traditional &lt;a href="https://en.wikipedia.org/wiki/Design_thinking"&gt;design thinking&lt;/a&gt; principles from ideation to prototyping. The process was very routine, and included many repetitive steps, not to mention the back and forth as a result of sometimes inefficient user testing. AI enhances the design decision-making process by reassigning the role of the designer to one that has more capabilities and control over design outcomes, largely due to insights and the use of tools that eliminate repetitive tasks and time-consuming research. With such insights and efficiency, designers can create experiences that precisely match the users that products are intended for.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-ai-assists-in-the-design-of-better-products"&gt;
  &lt;/a&gt;
  How AI assists in the design of better products
&lt;/h2&gt;

&lt;p&gt;User researchers often gather data from controlled environments, and while often extremely useful, for companies that want to tailor their research and find out how to personalize products and services for the many different users of their products, it could be very resource-intensive. AI gathers data such as location, product selection, reviews, and more to create distinctive profiles that are later used to provide design teams with what features to incorporate in future product designs. The gathered data that AI repositories have accumulated over time enables designers to keep products human-centric, in other words, user-friendly by acknowledging the problem-solving model and leveraging the benefits of &lt;a href="https://en.wikipedia.org/wiki/Machine_learning"&gt;machine learning&lt;/a&gt; and extreme personalization. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ai-for-humancentered-design"&gt;
  &lt;/a&gt;
  AI for human-centered design
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Human-centered_design"&gt;Human-centered design&lt;/a&gt; is rooted in user experience and draws on insights gained from empathy. While there’s still much to be learned in terms of AI’s ability to assist empathetic design that puts users first, designers could iteratively improve products based on a user's interaction with certain components of design. For example, if a certain shape, size, or color of a product’s UI elements improves user experience based on geographical location, then AI could help designers design other products for those locations given previously gathered information. This iterative process of improving a product is imperative to satisfying end-user outcomes and is based on the problem-solving loop, a process that’s common among innovative startups. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#design-problem-solving"&gt;
  &lt;/a&gt;
  Design problem solving
&lt;/h2&gt;

&lt;p&gt;Problem-solving in design is a complex of activities that involve different techniques during the solution creation process. While creativity has a lot to do with imagination, problem-solving is an integral component. If startups could adhere to principles of the problem-solving process, and develop human-centric products, while using insights from gathered datasets to improve products, then their user-friendly designs would put them ahead of the industry. &lt;/p&gt;

&lt;p&gt;The problem-solving process: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;em&gt;Define the problem.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Create the solution.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Test and learn.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Refine the solution based on testing results.&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By following the problem-solving process, designers can leverage AI to make high-level design decisions and then create products based on the insights. These unique benefits are exemplified by machine learning and its capabilities of personalization. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-and-personalization"&gt;
  &lt;/a&gt;
  Learning and personalization
&lt;/h2&gt;

&lt;p&gt;A system's ability to learn and teach itself is based on preset parameters set by humans, an aspect of AI that designers could take advantage of. By designing products based on the many different datasets gained from user interactions, products could be customized even in real-time. For instance, Amazon makes product suggestions based on user’s browsing and search history, so the system can adapt to user preferences continuously. This process iteratively improves the product and provides a precise level of personalization that’s unprecedented.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h2&gt;

&lt;p&gt;Artificial intelligence is a valuable tool that could help drive creativity for startups. The capabilities that AI presents allow startups to easily use data gathered from insights to create user-centered products emphatically. The problem-solving process allows startups to leverage the principles of gathering user data to enable AI’s iterative improvement capabilities. With problem-solving models, high-level design decisions would result in a fast and efficient design process, leaving more repetitive design aspects to technology. The information gathered from users over time could also help design teams cater to users based on a set of parameters. With an interactive approach to making design decisions based on insights from AI, startups could realize its immense potential to create better products. &lt;/p&gt;

</description>
      <category>ai</category>
      <category>startup</category>
      <category>design</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Responsive Design With CSS Media Queries</title>
      <author>Seth Addo</author>
      <pubDate>Fri, 29 Oct 2021 10:41:02 +0000</pubDate>
      <link>https://dev.to/seths10/responsive-design-with-css-media-queries-5fka</link>
      <guid>https://dev.to/seths10/responsive-design-with-css-media-queries-5fka</guid>
      <description>&lt;p&gt;It is very important to be able to design a website whose contents looks good on all screen sizes&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-exactly-is-responsive-design"&gt;
  &lt;/a&gt;
  What Exactly Is Responsive Design?
&lt;/h3&gt;

&lt;p&gt;Responsive Design is the process of making your web content fit all screen sizes (ranging from &lt;strong&gt;mobile phones&lt;/strong&gt; to large screens like &lt;strong&gt;desktop screen&lt;/strong&gt; and much bigger screen). Every element or component on the site should be able to automatically adapt to the specific devices that opens the website.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;An important thing to look at when we talk about responsive web design is media queries.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#what-then-is-media-queries"&gt;
  &lt;/a&gt;
  What Then Is Media Queries?
&lt;/h3&gt;

&lt;p&gt;In &lt;strong&gt;CSS&lt;/strong&gt;, a media query is used to apply a set of styles based on the browser's characteristics including &lt;strong&gt;width&lt;/strong&gt;, &lt;strong&gt;height&lt;/strong&gt;, or &lt;strong&gt;screen resolution&lt;/strong&gt;. This allows the programmer to provide certain features on each devices, Thus you may see a search bar on larger screens but only a search button on a smaller screen.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#media-query-syntax"&gt;
  &lt;/a&gt;
  Media Query Syntax
&lt;/h3&gt;

&lt;p&gt;This is the basic syntax for a media query in CSS&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;media-type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;media-feature&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="c"&gt;/*styles go here*/&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's try to understand the syntax above, The &lt;code&gt;@media&lt;/code&gt; is a type of &lt;code&gt;At-rule&lt;/code&gt; in &lt;strong&gt;CSS&lt;/strong&gt;. These rules will dictate what the &lt;strong&gt;CSS&lt;/strong&gt; will look based on certain conditions.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;media-type&lt;/strong&gt; refers to the category of media for the device. The different media types include &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;print&lt;/code&gt;, &lt;code&gt;screen&lt;/code&gt; and &lt;code&gt;speech&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;all&lt;/code&gt; - works for all devices&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;print&lt;/code&gt; - works for devices where the media is in print preview mode&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;screen&lt;/code&gt; - works for devices with screens&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;speech&lt;/code&gt; - works for devices like screen readers where the content is read out loud to the user.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;According to &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries"&gt;documentation&lt;/a&gt;, Except when using the &lt;code&gt;not&lt;/code&gt; or &lt;code&gt;only&lt;/code&gt; logical operators, the &lt;strong&gt;media-type&lt;/strong&gt; is optional and the &lt;code&gt;all&lt;/code&gt; type is implied.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can choose to omit the &lt;strong&gt;media-type&lt;/strong&gt; and use the following syntax instead,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;media-feature&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="c"&gt;/*styles go here*/&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to create more complex media queries, then you can use logical operators like &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;not&lt;/code&gt; or &lt;code&gt;,&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#devices-and-their-width"&gt;
  &lt;/a&gt;
  Devices and Their Width
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Mobile Devices : 320px - 480px&lt;/li&gt;
&lt;li&gt;Ipads, Tablets : 481px - 768px&lt;/li&gt;
&lt;li&gt;Small Screens, Laptop : 769px - 1024px&lt;/li&gt;
&lt;li&gt;Desktops, Large Screens : 1025px - 1200px&lt;/li&gt;
&lt;li&gt;Extra Large Screens,TV's : 1201px and more&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples
&lt;/h4&gt;

&lt;p&gt;If we want to change the background color of a website to &lt;strong&gt;blue&lt;/strong&gt; for only &lt;code&gt;mobile devices&lt;/code&gt; and &lt;code&gt;tablets&lt;/code&gt;, we will use the code below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;768px&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;If you want your website to look good and also to be able to run on more devices, then responsive design is a necessity for you.&lt;br&gt;
Thank you for taking your time to read this article.&lt;/p&gt;

&lt;p&gt;Please follow Me On:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.twiiter.com/set_addo"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.github.com/seths10"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dev.to/seths10"&gt;Dev&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;by clicking on the link for more tech inspired tweets, articles and more...&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Starting my API journey...</title>
      <author>raisr</author>
      <pubDate>Fri, 29 Oct 2021 10:25:56 +0000</pubDate>
      <link>https://dev.to/raisr/starting-my-api-journey-32an</link>
      <guid>https://dev.to/raisr/starting-my-api-journey-32an</guid>
      <description>&lt;p&gt;During my career i mostly worked in small to medium companies. In most of them i had to create some kind of web based apis for a lot of different use cases. Being it as a backend for SPAs, public facing apis for customers and so on. Creating a simple rest api using the asp.net stack is quite simple. But very soon you have to tackle a lot more complicated / sophisticated problems like Authentication, load balancing, routing, configuration management, scheduled tasks and so on. &lt;/p&gt;

&lt;p&gt;There are a lot of free and or open source tools, libraries and frameworks that help you to solve those problems. But then the real challenge starts. The available solutions a often very powerful, written in different languages and require some effort to get started with. So you have to integrate them, manage the deployment / hosting on different OSes and keep all of this up to date. That is extremely challenging for a small to medium company. You just don't have all the skills on your team or the time and budget.&lt;/p&gt;

&lt;p&gt;So, what can i do? I want to create yet another framework :) &lt;/p&gt;

&lt;p&gt;No, i don't want to reinvent the wheel. My goal is to create some kind of framework that incorporates existing tools where possible and hides the magic behind but gives you the power to extend if required. In the end you should have everything at hand to create apis that provide your business value without havening to much to care about the rest of the infrastructure.&lt;/p&gt;

&lt;p&gt;So what does that mean. Lets say you want to have a logging solution. Then you could just do something like this pseudo code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;   &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseLoggingServer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Enable logging server on this machine&lt;/span&gt;
   &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseLogging&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"logging server uri"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//Send logs to the logging server&lt;/span&gt;
   &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseLoggingUI&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Provide some ui to show the logs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Under the hood it could use for example serilog. This code would configure serilog with settings that should be sufficient in most cases. But if not you could change the serilog configuration directly.&lt;/p&gt;

&lt;p&gt;These are some of the key aspects that i want the framework to follow:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Modular&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cherrypick what you want. Just need an api gateway or logging? Pick this from the framework.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scalable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It should be possible to run everything within a single web application or scale out stuff that is hitting the limits. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No rules for your code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The framework should handle the infrastructure stuff. It should not force you how to write your code in any way. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OS agnostic&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The whole framework has to run on windows, linux, mac os.&lt;/p&gt;

&lt;p&gt;Here my journey starts...&lt;/p&gt;




&lt;p&gt;&lt;sup&gt;Photo by &lt;a href="https://unsplash.com/@clemensvanlay"&gt;Clemens van Lay&lt;/a&gt; on &lt;a href="https://unsplash.com/"&gt;Unsplash&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>webapi</category>
      <category>microservices</category>
      <category>csharp</category>
    </item>
    <item>
      <title>Crap, we might have installed a malicious dependency...</title>
      <author>Daniel Parmenvik</author>
      <pubDate>Fri, 29 Oct 2021 10:24:01 +0000</pubDate>
      <link>https://dev.to/danielp/crap-we-might-have-installed-a-malicious-dependency-1p91</link>
      <guid>https://dev.to/danielp/crap-we-might-have-installed-a-malicious-dependency-1p91</guid>
      <description>&lt;p&gt;That was the reality for a lot of companies after the ua-parser-js supply chain attack. On October 22 three malicious versions of the popular package &lt;strong&gt;&lt;em&gt;ua-parser-js&lt;/em&gt;&lt;/strong&gt; were released. A package which has almost 8M weekly downloads. If your company has used compromised versions of this package directly or indirectly, consider your system as &lt;strong&gt;fully compromised&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;So you might think how the heck is this even possible? After all, &lt;em&gt;“it’s just JavaScript”&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;The maintainer account for ua-parser-js was taken over, meaning attackers had control and deployed malware versions. These versions in turn were downloaded by many users around the world. Silently the malicious versions installed a trojan and a crypto mining application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The impact is critical&lt;/strong&gt; with the file system made public, screenshots taken as well as downloading and execution of unknown binaries. &lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#the-result"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The result&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;A lot of companies are still vigorously trying to figure out if they were exposed.  Often by spending resources and money on manually making sure no one inside their organization used the affected malicious versions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I fully understand the need for companies to be sure they’re not affected - but this problem also indicates that companies lack proper control over external dependencies. An investment into proper protection is something that would save money in the long run.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  &lt;strong&gt;TL;DR&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Malicious and packages with vulnerabilities. You need to protect you team, environments and organization without depending on specific individuals when it comes to dependency security. &lt;a href="https://bytesafe.dev/posts/cybersecurity-adding-security-to-products-processes/"&gt;Here's a free downloadable checklist (PDF) &lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-could-this-happen"&gt;
  &lt;/a&gt;
  How could this happen?
&lt;/h2&gt;

&lt;p&gt;The component ua-parser-js is used to detect browser user data and is used indirectly by many others. For example the popular web ui framework angular.js has a dependency to test framework karma which in turn has a dependency to ua-parser-js. This is commonplace in JavaScript where applications on average depend on up to 700 other components - and most of these are indirect.&lt;/p&gt;

&lt;p&gt;As you know, to be able to use a JavaScript app, you need to install its dependencies first. Something which is very easy, but where things can go really wrong. If the packages you’re installing, or any of the indirect dependencies, contain vulnerabilities, then you &lt;strong&gt;might be out of luck&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It’s crucial to secure your whole software supply chain&lt;/strong&gt;, including software build environments (CI/CD), test, development and similar.&lt;/p&gt;

&lt;p&gt;The problem lies in that a lot of environments are not restricted in what packages can be downloaded and installed. And with as little as 10% of all maintainers using two-factor authentication, the companies need to take dependency security as a serious threat and act accordingly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-whats-the-solution"&gt;
  &lt;/a&gt;
  So, what's the solution?
&lt;/h2&gt;

&lt;p&gt;Quite a few people have contacted us asking how this could have been prevented and how to stay secure. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. You need automated tooling where you are able to secure your existing workflows.&lt;/strong&gt; This way developers and systems are secured by default. Unfortunately, many companies fail in this regard which is a major gamble. It works until it no longer does.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Companies need to enforce dependency policies and make sure they have the right tools to be able to control what packages are allowed in the organization.&lt;/strong&gt; Make sure neither automated systems nor developers install the latest versions of packages without first taking a conscious decision. Avoiding outdated and vulnerable components is of course not an option either!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Companies need tooling to keep track of what components are used and where.&lt;/strong&gt; Manually reviewing every piece of software or line of code is neither efficient nor possible in many cases when an incident occurs. Be proactive and secure your supply chain before it’s an emergency.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#download-a-checklist-on-dependency-security"&gt;
  &lt;/a&gt;
  Download a checklist on dependency security
&lt;/h3&gt;

&lt;p&gt;We are in the final sprint of the &lt;strong&gt;Cybersecurity Awareness Month&lt;/strong&gt; - so why not spread some awareness 😊.  Here's a one page cheat sheet on what measures you can take to protect your organization, &lt;a href="https://bytesafe.dev/posts/cybersecurity-adding-security-to-products-processes/"&gt;link to blog post with a free downloadable PDF&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>cybersecurity</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>npm</category>
    </item>
    <item>
      <title>What's new in .NET 6 and C# 10. Everything you wanted to know.</title>
      <author>Oleksii Nikiforov</author>
      <pubDate>Fri, 29 Oct 2021 10:23:47 +0000</pubDate>
      <link>https://dev.to/nikiforovall/whats-new-in-net-6-and-c-10-everything-you-wanted-to-know-n2p</link>
      <guid>https://dev.to/nikiforovall/whats-new-in-net-6-and-c-10-everything-you-wanted-to-know-n2p</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;This blog post is a compilation of the latest and greatest additions from the .NET 6 release. Also, I've created a coding story that will help you to learn new improvements.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Please check the coding story&lt;/strong&gt; 👇:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://codingstories.io/stories/6139f4a2f2cd3d0031cd8ef1/617b06b5d2ec28001acfe618"&gt;https://codingstories.io/stories/6139f4a2f2cd3d0031cd8ef1/617b06b5d2ec28001acfe618&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t7y9JvAQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mw9427qud58nva5vgo5k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t7y9JvAQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mw9427qud58nva5vgo5k.png" alt="Image description" width="880" height="261"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/NikiforovAll/whats-new-in-dotnet6"&gt;https://github.com/NikiforovAll/whats-new-in-dotnet6&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also, see my blog post. It explains how to run .NET 6 inside devcontainer: &lt;a href="https://nikiforovall.github.io/productivity/devcontainers/2021/10/14/devcontainer-for-dotnet6.html"&gt;https://nikiforovall.github.io/productivity/devcontainers/2021/10/14/devcontainer-for-dotnet6.html&lt;/a&gt;&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="#part-1-c-10"&gt;Part 1. C# 10&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#global-usings"&gt;Global usings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reference"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#file-scoped-namespaces"&gt;File-scoped namespaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reference-1"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-structs"&gt;Record structs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reference-2"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#part-2-net-api"&gt;Part 2. .NET API&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#minimal-api"&gt;Minimal API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reference-3"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#linq-improvements"&gt;LINQ Improvements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reference-4"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#parallelforeachasync"&gt;Parallel.ForEachAsync&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reference-5"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#periodictimer"&gt;PeriodicTimer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#priority-queue"&gt;Priority Queue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reference-6"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dateonly-and-timeonly"&gt;DateOnly and TimeOnly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#systemtextjson"&gt;System.Text.Json&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#summary"&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;⚠👀 Please note that the content below consists of excerpts from the actual coding story. Please check the coding story if you haven't already.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#part-1-c-10"&gt;
  &lt;/a&gt;
  Part 1. C# 10
&lt;/h1&gt;

&lt;p&gt;Full list of changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-10"&gt;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-net-6-release-candidate-2/"&gt;https://devblogs.microsoft.com/dotnet/announcing-net-6-release-candidate-2/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, see:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Every feature added in C# 10 with examples by NickChapsas &lt;a href="https://www.youtube.com/watch?v=Vft4QDUpyWY&amp;amp;ab_channel=NickChapsas"&gt;https://www.youtube.com/watch?v=Vft4QDUpyWY&amp;amp;ab_channel=NickChapsas&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/new-dotnet-6-apis-driven-by-the-developer-community/"&gt;https://devblogs.microsoft.com/dotnet/new-dotnet-6-apis-driven-by-the-developer-community/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.infoworld.com/article/3608611/whats-new-in-microsoft-net-6.html"&gt;https://www.infoworld.com/article/3608611/whats-new-in-microsoft-net-6.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#global-usings"&gt;
  &lt;/a&gt;
  Global usings
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;global&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;global&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Collections&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Generic&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;global&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;global&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Linq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;global&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Net&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Http&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;global&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Threading&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;global&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Threading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tasks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;static&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;static&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;Sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dotnet run 
5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/using-directive#global-modifier"&gt;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/using-directive#global-modifier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/core/compatibility/sdk/6.0/implicit-namespaces#new-behavior"&gt;https://docs.microsoft.com/en-us/dotnet/core/compatibility/sdk/6.0/implicit-namespaces#new-behavior&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hanselman.com/blog/implicit-usings-in-net-6"&gt;https://www.hanselman.com/blog/implicit-usings-in-net-6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dotnetcoretutorials.com/2021/08/31/implicit-using-statements-in-net-6/"&gt;https://dotnetcoretutorials.com/2021/08/31/implicit-using-statements-in-net-6/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#filescoped-namespaces"&gt;
  &lt;/a&gt;
  File-scoped namespaces
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// IProductRepository.cs&lt;/span&gt;
&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;MyNamespace&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;IProductRepository&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetProductAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ProductWarranty&lt;/span&gt; &lt;span class="n"&gt;Warranty&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Program.cs&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;MyNamespace&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ProductRepository&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetProductAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;Parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]));&lt;/span&gt;
&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dotnet run 12
Product &lt;span class="o"&gt;{&lt;/span&gt; Id &lt;span class="o"&gt;=&lt;/span&gt; 1, Name &lt;span class="o"&gt;=&lt;/span&gt; Name, Warranty &lt;span class="o"&gt;=&lt;/span&gt; OneYear &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/namespace"&gt;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/namespace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ardalis.com/dotnet-format-and-file-scoped-namespaces/"&gt;https://ardalis.com/dotnet-format-and-file-scoped-namespaces/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-10.0/file-scoped-namespaces"&gt;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-10.0/file-scoped-namespaces&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#record-structs"&gt;
  &lt;/a&gt;
  Record structs
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// public record class Point&lt;/span&gt;
&lt;span class="c1"&gt;// {&lt;/span&gt;
&lt;span class="c1"&gt;//     public double X {  get; init; }&lt;/span&gt;
&lt;span class="c1"&gt;//     public double Y {  get; init; }&lt;/span&gt;
&lt;span class="c1"&gt;//     public double Z {  get; init; }&lt;/span&gt;
&lt;span class="c1"&gt;// }&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Point2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// public record struct Point2&lt;/span&gt;
&lt;span class="c1"&gt;// {&lt;/span&gt;
&lt;span class="c1"&gt;//     public double X {  get; init; }&lt;/span&gt;
&lt;span class="c1"&gt;//     public double Y {  get; init; }&lt;/span&gt;
&lt;span class="c1"&gt;//     public double Z {  get; init; }&lt;/span&gt;
&lt;span class="c1"&gt;// }&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Point3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// public record struct Point3&lt;/span&gt;
&lt;span class="c1"&gt;// {&lt;/span&gt;
&lt;span class="c1"&gt;//     public double X { get; set; }&lt;/span&gt;
&lt;span class="c1"&gt;//     public double Y { get; set; }&lt;/span&gt;
&lt;span class="c1"&gt;//     public double Z { get; set; }&lt;/span&gt;
&lt;span class="c1"&gt;// }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/record"&gt;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/record&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#part-2-net-api"&gt;
  &lt;/a&gt;
  Part 2. .NET API
&lt;/h1&gt;

&lt;p&gt;➕ &lt;code&gt;System.Numerics.BitOperations&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#minimal-api"&gt;
  &lt;/a&gt;
  Minimal API
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;
&lt;span class="c1"&gt;// Main Components&lt;/span&gt;
&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;

&lt;span class="c1"&gt;// WebApplication&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;Microsoft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AspNetCore&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebApplicationBuilder&lt;/span&gt; &lt;span class="nf"&gt;CreateBuilder&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// WebApplicationBuilder&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Microsoft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AspNetCore&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebApplication&lt;/span&gt; &lt;span class="nf"&gt;Build&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// WebApplication&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Run&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;builder&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WebApplication&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;CreateBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;services&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;services&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddEndpointsApiExplorer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddSwaggerGen&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Build&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseSwagger&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseSwaggerUI&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapGet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ka/{pow}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;IsPow2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dotnet run
Building...
info: Microsoft.Hosting.Lifetime[14]
      Now listening on: https://localhost:7225
info: Microsoft.Hosting.Lifetime[14]
      Now listening on: http://localhost:5069
info: Microsoft.Hosting.Lifetime[0]
      Application started. Press Ctrl+C to shut down.
info: Microsoft.Hosting.Lifetime[0]
      Hosting environment: Development
info: Microsoft.Hosting.Lifetime[0]
      Content root path: D:&lt;span class="se"&gt;\h&lt;/span&gt;ome&lt;span class="se"&gt;\d&lt;/span&gt;ev&lt;span class="se"&gt;\c&lt;/span&gt;odingstories&lt;span class="se"&gt;\w&lt;/span&gt;hats-new-in-dotnet6&lt;span class="se"&gt;\M&lt;/span&gt;inimalAPI
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Minimal APIs at a glance by davidfowl &lt;a href="https://gist.github.com/davidfowl/ff1addd02d239d2d26f4648a06158727"&gt;https://gist.github.com/davidfowl/ff1addd02d239d2d26f4648a06158727&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Migration to ASP.NET Core in .NET 6 by davidfowl &lt;a href="https://gist.github.com/davidfowl/0e0372c3c1d895c3ce195ba983b1e03d"&gt;https://gist.github.com/davidfowl/0e0372c3c1d895c3ce195ba983b1e03d&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://minimal-apis.github.io/"&gt;https://minimal-apis.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://andrewlock.net/series/exploring-dotnet-6/"&gt;https://andrewlock.net/series/exploring-dotnet-6/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.builder.webapplicationbuilder?view=aspnetcore-6.0"&gt;https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.builder.webapplicationbuilder?view=aspnetcore-6.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.builder.webapplication?view=aspnetcore-6.0"&gt;https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.builder.webapplication?view=aspnetcore-6.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/martincostello/dotnet-minimal-api-integration-testing"&gt;https://github.com/martincostello/dotnet-minimal-api-integration-testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nikiforovall.github.io/dotnet/aspnetcore/2021/09/10/opinionated-minimal-api.html"&gt;https://nikiforovall.github.io/dotnet/aspnetcore/2021/09/10/opinionated-minimal-api.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#linq-improvements"&gt;
  &lt;/a&gt;
  LINQ Improvements
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Bogus&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;faker&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;OrderFaker&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;orders&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;faker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Generate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;
&lt;span class="nf"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Chunking"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;chunk&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;orders&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Chunk&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Quantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;$"chunk[&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;].Quantity=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Chunking
chunk[25].Quantity&lt;span class="o"&gt;=&lt;/span&gt;154
chunk[25].Quantity&lt;span class="o"&gt;=&lt;/span&gt;138
chunk[25].Quantity&lt;span class="o"&gt;=&lt;/span&gt;119
chunk[25].Quantity&lt;span class="o"&gt;=&lt;/span&gt;138
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;
&lt;span class="nf"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Index Support for ElementAt"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;order1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;orders&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ElementAt&lt;/span&gt;&lt;span class="p"&gt;(^&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;order1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Index Support &lt;span class="k"&gt;for &lt;/span&gt;ElementAt
Order &lt;span class="o"&gt;{&lt;/span&gt; OrderId &lt;span class="o"&gt;=&lt;/span&gt; 15, Address &lt;span class="o"&gt;=&lt;/span&gt; 604 Leffler Glens, Romaport, Cape Verde, Quantity &lt;span class="o"&gt;=&lt;/span&gt; 2, Index &lt;span class="o"&gt;=&lt;/span&gt; 96 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;
&lt;span class="nf"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Range Support for Take"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;orders2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;orders&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Take&lt;/span&gt;&lt;span class="p"&gt;(^&lt;/span&gt;&lt;span class="m"&gt;5.&lt;/span&gt;&lt;span class="p"&gt;.);&lt;/span&gt;

&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewLine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;orders2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Range Support &lt;span class="k"&gt;for &lt;/span&gt;Take
Order &lt;span class="o"&gt;{&lt;/span&gt; OrderId &lt;span class="o"&gt;=&lt;/span&gt; 15, Address &lt;span class="o"&gt;=&lt;/span&gt; 604 Leffler Glens, Romaport, Cape Verde, Quantity &lt;span class="o"&gt;=&lt;/span&gt; 2, Index &lt;span class="o"&gt;=&lt;/span&gt; 96 &lt;span class="o"&gt;}&lt;/span&gt;
Order &lt;span class="o"&gt;{&lt;/span&gt; OrderId &lt;span class="o"&gt;=&lt;/span&gt; 8, Address &lt;span class="o"&gt;=&lt;/span&gt; 35694 Cummings Ville, Turnerville, Republic of Korea, Quantity &lt;span class="o"&gt;=&lt;/span&gt; 5, Index &lt;span class="o"&gt;=&lt;/span&gt; 97 &lt;span class="o"&gt;}&lt;/span&gt;
Order &lt;span class="o"&gt;{&lt;/span&gt; OrderId &lt;span class="o"&gt;=&lt;/span&gt; 13, Address &lt;span class="o"&gt;=&lt;/span&gt; 8711 Vita Burgs, East Jamaalberg, Zambia, Quantity &lt;span class="o"&gt;=&lt;/span&gt; 4, Index &lt;span class="o"&gt;=&lt;/span&gt; 98 &lt;span class="o"&gt;}&lt;/span&gt;
Order &lt;span class="o"&gt;{&lt;/span&gt; OrderId &lt;span class="o"&gt;=&lt;/span&gt; 83, Address &lt;span class="o"&gt;=&lt;/span&gt; 11506 Skiles Curve, Lake Abbeychester, Suriname, Quantity &lt;span class="o"&gt;=&lt;/span&gt; 8, Index &lt;span class="o"&gt;=&lt;/span&gt; 99 &lt;span class="o"&gt;}&lt;/span&gt;
Order &lt;span class="o"&gt;{&lt;/span&gt; OrderId &lt;span class="o"&gt;=&lt;/span&gt; 89, Address &lt;span class="o"&gt;=&lt;/span&gt; 9444 Schamberger Burgs, Wisokyland, Costa Rica, Quantity &lt;span class="o"&gt;=&lt;/span&gt; 2, Index &lt;span class="o"&gt;=&lt;/span&gt; 100 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;
&lt;span class="nf"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Three way zipping"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;

&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;a1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"3"&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;a2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;"One"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Two"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Three"&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kt"&gt;float&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;a3&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="m"&gt;1f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3f&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;i2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;i3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;-&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;-&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Three-way zipping
1-One-1
2-Two-2
3-Three-3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;
&lt;span class="nf"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Default Parameters for Common Methods"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;order2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;orders&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FirstOrDefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Odesa"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;defaultValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;orders&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ElementAt&lt;/span&gt;&lt;span class="p"&gt;(^&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;order2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Default Parameters &lt;span class="k"&gt;for &lt;/span&gt;Common Methods
Order &lt;span class="o"&gt;{&lt;/span&gt; OrderId &lt;span class="o"&gt;=&lt;/span&gt; 14, Address &lt;span class="o"&gt;=&lt;/span&gt; 49026 Huels Groves, Armandville, Bhutan, Quantity &lt;span class="o"&gt;=&lt;/span&gt; 3, Index &lt;span class="o"&gt;=&lt;/span&gt; 91 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;
&lt;span class="nf"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Avoiding Enumeration with TryGetNonEnumeratedCount"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;orders&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;TryGetNonEnumeratedCount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;$"The count is &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Avoiding Enumeration with TryGetNonEnumeratedCount
The count is 100
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;
&lt;span class="nf"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"MaxBy and MinBy"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;

&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;orders&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MaxBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Quantity&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;MaxBy and MinBy
Order &lt;span class="o"&gt;{&lt;/span&gt; OrderId &lt;span class="o"&gt;=&lt;/span&gt; 16, Address &lt;span class="o"&gt;=&lt;/span&gt; 30901 Madilyn Meadow, Lake Marlenfort, Malawi, Quantity &lt;span class="o"&gt;=&lt;/span&gt; 10, Index &lt;span class="o"&gt;=&lt;/span&gt; 2 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;7 awesome improvements for LINQ in .NET 6 by NickChapsas &lt;a href="https://www.youtube.com/watch?v=sIXKpyhxHR8&amp;amp;t=1s&amp;amp;ab_channel=NickChapsas"&gt;https://www.youtube.com/watch?v=sIXKpyhxHR8&amp;amp;t=1s&amp;amp;ab_channel=NickChapsas&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#parallelforeachasync"&gt;
  &lt;/a&gt;
  Parallel.ForEachAsync
&lt;/h2&gt;

&lt;p&gt;➕ &lt;code&gt;Task.WaitAsync&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;➕ &lt;code&gt;Random.Shared&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="n"&gt;ForEachAsync&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;TSource&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;
    &lt;span class="n"&gt;IAsyncEnumerable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;TSource&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;Func&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;TSource&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CancellationToken&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ValueTask&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="n"&gt;ForEachAsync&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;TSource&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;
    &lt;span class="n"&gt;IEnumerable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;TSource&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;Func&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;TSource&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CancellationToken&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ValueTask&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;Parallel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ForEachAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;Generate&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Handle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WaitAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TimeSpan&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FromMilliseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;200&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ContinueWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Report&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;IAsyncEnumerable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Generate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;delay&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Shared&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;$"Issued &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;ValueTask&lt;/span&gt; &lt;span class="nf"&gt;Handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CancellationToken&lt;/span&gt; &lt;span class="n"&gt;ct&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ct&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;$"Handled &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Report&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;$"Finished at: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;, task.Status &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Status&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dotnet run
Issued 56
Issued 23
Issued 81
Handled 23
Handled 56
Issued 75
Finished at: 10:59:08 PM, task.Status Faulted
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.hanselman.com/blog/parallelforeachasync-in-net-6"&gt;https://www.hanselman.com/blog/parallelforeachasync-in-net-6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#periodictimer"&gt;
  &lt;/a&gt;
  PeriodicTimer
&lt;/h2&gt;

&lt;p&gt;➕ &lt;code&gt;ArgumentNullException.ThrowIfNull&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;var&lt;/span&gt; &lt;span class="n"&gt;timer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;PeriodicTimer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TimeSpan&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FromSeconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WaitForNextTickAsync&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;LogEntry&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Shared&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;128&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nf"&gt;IsPow2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;
        &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nf"&gt;ProcessLogEntry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;ProcessLogEntry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LogEntry&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ArgumentNullException&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ThrowIfNull&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;nameof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LogEntry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dotnet run
LogEntry &lt;span class="o"&gt;{&lt;/span&gt; Value &lt;span class="o"&gt;=&lt;/span&gt; 104 &lt;span class="o"&gt;}&lt;/span&gt;
LogEntry &lt;span class="o"&gt;{&lt;/span&gt; Value &lt;span class="o"&gt;=&lt;/span&gt; 115 &lt;span class="o"&gt;}&lt;/span&gt;
LogEntry &lt;span class="o"&gt;{&lt;/span&gt; Value &lt;span class="o"&gt;=&lt;/span&gt; 21 &lt;span class="o"&gt;}&lt;/span&gt;
LogEntry &lt;span class="o"&gt;{&lt;/span&gt; Value &lt;span class="o"&gt;=&lt;/span&gt; 110 &lt;span class="o"&gt;}&lt;/span&gt;
LogEntry &lt;span class="o"&gt;{&lt;/span&gt; Value &lt;span class="o"&gt;=&lt;/span&gt; 106 &lt;span class="o"&gt;}&lt;/span&gt;
LogEntry &lt;span class="o"&gt;{&lt;/span&gt; Value &lt;span class="o"&gt;=&lt;/span&gt; 63 &lt;span class="o"&gt;}&lt;/span&gt;
LogEntry &lt;span class="o"&gt;{&lt;/span&gt; Value &lt;span class="o"&gt;=&lt;/span&gt; 81 &lt;span class="o"&gt;}&lt;/span&gt;
Unhandled exception. System.ArgumentNullException: Value cannot be null. &lt;span class="o"&gt;(&lt;/span&gt;Parameter &lt;span class="s1"&gt;'entry'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
   at System.ArgumentNullException.Throw&lt;span class="o"&gt;(&lt;/span&gt;String paramName&lt;span class="o"&gt;)&lt;/span&gt;
   at System.ArgumentNullException.ThrowIfNull&lt;span class="o"&gt;(&lt;/span&gt;Object argument, String paramName&lt;span class="o"&gt;)&lt;/span&gt;
   at Program.&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;Main&lt;/span&gt;&lt;span class="sh"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;$&amp;gt;&lt;/span&gt;&lt;span class="sh"&gt;g__ProcessLogEntry|0_0(LogEntry entry) in PeriodicTimer&lt;/span&gt;&lt;span class="se"&gt;\P&lt;/span&gt;&lt;span class="sh"&gt;rogram.cs:line 18
   at Program.&amp;lt;Main&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;String[] args&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="sh"&gt; in PeriodicTimer&lt;/span&gt;&lt;span class="se"&gt;\P&lt;/span&gt;&lt;span class="sh"&gt;rogram.cs:line 12
   at Program.&amp;lt;Main&amp;gt;(String[] args)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#priority-queue"&gt;
  &lt;/a&gt;
  Priority Queue
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;PriorityQueue&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Job&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;ReverseComparer&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;.&lt;/span&gt;&lt;span class="n"&gt;Default&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Shared&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;$"Job&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;var&lt;/span&gt; &lt;span class="n"&gt;timer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;PeriodicTimer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TimeSpan&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FromMilliseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WaitForNextTickAsync&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;TryDequeue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;job&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;job&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Job&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Priority&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;sealed&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ReverseComparer&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IComparer&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;ReverseComparer&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Comparer&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;.&lt;/span&gt;&lt;span class="n"&gt;Default&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;ReverseComparer&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IComparer&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;comparer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ReverseComparer&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;comparer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;IComparer&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;comparer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Default&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nf"&gt;ReverseComparer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IComparer&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;comparer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;comparer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;comparer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;Compare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;comparer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Compare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProduceNumericEnumeratorExtensions&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;IEnumerator&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetEnumerator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;++)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dotnet run 
Job &lt;span class="o"&gt;{&lt;/span&gt; Name &lt;span class="o"&gt;=&lt;/span&gt; Job1, Priority &lt;span class="o"&gt;=&lt;/span&gt; 75 &lt;span class="o"&gt;}&lt;/span&gt;
Job &lt;span class="o"&gt;{&lt;/span&gt; Name &lt;span class="o"&gt;=&lt;/span&gt; Job5, Priority &lt;span class="o"&gt;=&lt;/span&gt; 66 &lt;span class="o"&gt;}&lt;/span&gt;
Job &lt;span class="o"&gt;{&lt;/span&gt; Name &lt;span class="o"&gt;=&lt;/span&gt; Job2, Priority &lt;span class="o"&gt;=&lt;/span&gt; 61 &lt;span class="o"&gt;}&lt;/span&gt;
Job &lt;span class="o"&gt;{&lt;/span&gt; Name &lt;span class="o"&gt;=&lt;/span&gt; Job0, Priority &lt;span class="o"&gt;=&lt;/span&gt; 58 &lt;span class="o"&gt;}&lt;/span&gt;
Job &lt;span class="o"&gt;{&lt;/span&gt; Name &lt;span class="o"&gt;=&lt;/span&gt; Job4, Priority &lt;span class="o"&gt;=&lt;/span&gt; 53 &lt;span class="o"&gt;}&lt;/span&gt;
Job &lt;span class="o"&gt;{&lt;/span&gt; Name &lt;span class="o"&gt;=&lt;/span&gt; Job9, Priority &lt;span class="o"&gt;=&lt;/span&gt; 34 &lt;span class="o"&gt;}&lt;/span&gt;
Job &lt;span class="o"&gt;{&lt;/span&gt; Name &lt;span class="o"&gt;=&lt;/span&gt; Job7, Priority &lt;span class="o"&gt;=&lt;/span&gt; 34 &lt;span class="o"&gt;}&lt;/span&gt;
Job &lt;span class="o"&gt;{&lt;/span&gt; Name &lt;span class="o"&gt;=&lt;/span&gt; Job3, Priority &lt;span class="o"&gt;=&lt;/span&gt; 29 &lt;span class="o"&gt;}&lt;/span&gt;
Job &lt;span class="o"&gt;{&lt;/span&gt; Name &lt;span class="o"&gt;=&lt;/span&gt; Job8, Priority &lt;span class="o"&gt;=&lt;/span&gt; 17 &lt;span class="o"&gt;}&lt;/span&gt;
Job &lt;span class="o"&gt;{&lt;/span&gt; Name &lt;span class="o"&gt;=&lt;/span&gt; Job6, Priority &lt;span class="o"&gt;=&lt;/span&gt; 8 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.priorityqueue-2?view=net-6.0"&gt;https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.priorityqueue-2?view=net-6.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dotnetcoretutorials.com/2021/03/17/priorityqueue-in-net/"&gt;https://dotnetcoretutorials.com/2021/03/17/priorityqueue-in-net/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#dateonly-and-timeonly"&gt;
  &lt;/a&gt;
  DateOnly and TimeOnly
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;DateOnly&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DateOnly&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MinValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nf"&gt;Log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;nameof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;//Outputs 01/01/0001 (With no Time)&lt;/span&gt;

&lt;span class="n"&gt;TimeOnly&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TimeOnly&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MinValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nf"&gt;Log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;nameof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;//Outputs 12:00 AM&lt;/span&gt;

&lt;span class="n"&gt;TimeOnly&lt;/span&gt; &lt;span class="n"&gt;startTime&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TimeOnly&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"11:00 PM"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;hoursWorked&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;endTime&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;startTime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddHours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hoursWorked&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nf"&gt;Log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;endTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;nameof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;endTime&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;//Outputs 1:00 AM&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;isBetween&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TimeOnly&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"12:00 AM"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;IsBetween&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;startTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;endTime&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 

&lt;span class="nf"&gt;Log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isBetween&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;nameof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isBetween&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;//Outputs true.&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="n"&gt;Log&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="k"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dotnet run 
&lt;span class="nb"&gt;date &lt;/span&gt;1/1/0001
&lt;span class="nb"&gt;time &lt;/span&gt;12:00 AM
endTime 1:00 AM
isBetween True
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#systemtextjson"&gt;
  &lt;/a&gt;
  System.Text.Json
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;
&lt;span class="nf"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Serialization Notification"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;

&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;invalidOrderJson&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"{}"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;success&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;IgnoreErrors&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;JsonSerializer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Deserialize&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Order2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;invalidOrderJson&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;$"Exception thrown: &lt;/span&gt;&lt;span class="p"&gt;{!&lt;/span&gt;&lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// IJsonOnDeserialized, IJsonOnDeserializing, IJsonOnSerialized, IJsonOnSerializing&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Order2&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Order&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IJsonOnDeserialized&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;OnDeserialized&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Validate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Validate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderId&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ArgumentException&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Order&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;OrderId&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Quantity&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="nf"&gt;IgnoreErrors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt; &lt;span class="n"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;operation&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Invoke&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dotnet run 
Serialization Notification
Exception thrown: True
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;
&lt;span class="nf"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Property Ordering"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;

&lt;span class="n"&gt;Order3&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;OrderId&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Address"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;Quantity&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;Comments&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;"Cool"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Awesome"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;serializedOrder&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JsonSerializer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Serialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializedOrder&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Order3&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;JsonPropertyOrder&lt;/span&gt;&lt;span class="p"&gt;(-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;OrderId&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;JsonPropertyOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;JsonPropertyOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Quantity&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;JsonPropertyOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;99&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Comments&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dotnet run 
Property Ordering
&lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;"OrderId"&lt;/span&gt;: 1,
  &lt;span class="s2"&gt;"Address"&lt;/span&gt;: &lt;span class="s2"&gt;"Address"&lt;/span&gt;,
  &lt;span class="s2"&gt;"Quantity"&lt;/span&gt;: 1,
  &lt;span class="s2"&gt;"Comments"&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;"Cool"&lt;/span&gt;,
    &lt;span class="s2"&gt;"Awesome"&lt;/span&gt;
  &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;
&lt;span class="nf"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"IAsyncEnumerable support &amp;amp;&amp;amp; Working with Streams"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;Data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;RangeAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// SerializeAsync&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;var&lt;/span&gt; &lt;span class="n"&gt;stream&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;MemoryStream&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;JsonSerializer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SerializeAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;RangeAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// DeserializeAsyncEnumerable&lt;/span&gt;
&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;JsonSerializer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DeserializeAsyncEnumerable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;IAsyncEnumerable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;RangeAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;++)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dotnet run 
1
2
3
4
5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;
&lt;span class="nf"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Working with JSON DOM"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ================================================================&lt;/span&gt;

&lt;span class="c1"&gt;// Parse&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JsonNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializedOrder&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;$"OrderId: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"OrderId"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;$"Order.Comments[0]: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Comments"&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Create DOM Object via API&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;jObjectOrder&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JsonObject&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"OrderId"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Discounts"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;JsonArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JsonObject&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"DiscountId"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Value"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;05&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JsonObject&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"DiscountId"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Value"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jObjectOrder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToJsonString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;OrderId: 1
Order.Comments[0]: Cool
&lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;"OrderId"&lt;/span&gt;: 1,
  &lt;span class="s2"&gt;"Discounts"&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"DiscountId"&lt;/span&gt;: 1,
      &lt;span class="s2"&gt;"Value"&lt;/span&gt;: 0.05
    &lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"DiscountId"&lt;/span&gt;: 2,
      &lt;span class="s2"&gt;"Value"&lt;/span&gt;: 0.1
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h1&gt;

&lt;p&gt;Thank you very much. I hope you find this blog post useful 👍.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to make money as a programmer in a simple way🤑</title>
      <author>Patrick</author>
      <pubDate>Fri, 29 Oct 2021 10:06:21 +0000</pubDate>
      <link>https://dev.to/patik123/how-to-make-money-as-a-programmer-in-a-simple-way-3pm</link>
      <guid>https://dev.to/patik123/how-to-make-money-as-a-programmer-in-a-simple-way-3pm</guid>
      <description>&lt;p&gt;As a programmer, you probably want extra income. But you don’t know how to get to it. You can find the answer in this article, in which I present five ways to earn extra money.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#write-a-blog"&gt;
  &lt;/a&gt;
  Write a blog
&lt;/h2&gt;

&lt;p&gt;Writing a blog can be a great way to make money.&lt;/p&gt;

&lt;p&gt;We don’t need much to start writing a blog, as there are a huge number of platforms to start a blog right away. Some of these are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hashnode.com/@patik123/joinme"&gt;Hashnode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to"&gt;DevTo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com"&gt;Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Personally, my favourite is Hashnode, as it gives me the ability to make a completely personal blog.&lt;/p&gt;

&lt;p&gt;I recommend platforms like &lt;a href="https://www.buymeacoffee.com"&gt;BuyMeACoffe&lt;/a&gt; and &lt;a href="https://www.patreon.com"&gt;Patreon&lt;/a&gt; to accept the donation.&lt;/p&gt;

&lt;p&gt;Many companies are looking for quality writers to write on their blogs. &lt;/p&gt;

&lt;p&gt;You can see which companies are looking for technical writers on these two pages, &lt;a href="https://whopaystechnicalwriters.com/?"&gt;Who Pays Technical Writers?&lt;/a&gt; And &lt;a href="http://whopayswriters.com/#/results"&gt;Who Pays Writers?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6GMMNAzz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/08d5ns2w3othpo6q0nzx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6GMMNAzz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/08d5ns2w3othpo6q0nzx.png" alt="Writing a blog" width="880" height="586"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#freelancing"&gt;
  &lt;/a&gt;
  Freelancing
&lt;/h2&gt;

&lt;p&gt;Freelancing can be a very profitable source of income. Some have freelanced as a permanent job and some as a part-time job. &lt;/p&gt;

&lt;p&gt;The works range are from programming, SEO optimization to translating and transcribing texts. There is a job for almost everyone.&lt;/p&gt;

&lt;p&gt;Some platforms for offering freelance work are &lt;a href="https://www.fiverr.com"&gt;Fiverr&lt;/a&gt;, &lt;a href="https://www.upwork.com"&gt;Upwork&lt;/a&gt; and &lt;a href="https://www.freelancer.com"&gt;Freelancer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FNrunnGo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v5zqostniptxhj0i8af5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FNrunnGo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v5zqostniptxhj0i8af5.png" alt="Fiverr website" width="880" height="438"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#write-an-ebook"&gt;
  &lt;/a&gt;
  Write an e-book
&lt;/h2&gt;

&lt;p&gt;All knowledge is in books. If you have some knowledge about programming, some framework, operating system, or you just want to explain something that will be understandable to everyone then you can write an e-book. Once the book is written, you can sell it.&lt;/p&gt;

&lt;p&gt;I recommend &lt;a href="https://gumroad.com"&gt;Gumroad&lt;/a&gt; for selling digital and physical goods. &lt;/p&gt;

&lt;p&gt;The platform helps practically the entire process of selling, delivering ... the product.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2-3MrYe3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zivw1ct70juo9ldr08ia.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2-3MrYe3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zivw1ct70juo9ldr08ia.png" alt="iBook" width="774" height="581"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#be-a-code-mentor"&gt;
  &lt;/a&gt;
  Be a code mentor
&lt;/h2&gt;

&lt;p&gt;If you have experience in the company and like to teach other young programmers, you can become a mentor. &lt;/p&gt;

&lt;p&gt;Mentoring is an ideal way to share your knowledge for extra income.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mentorcruise.com/"&gt;MentorCruise - Connecting Mentors &amp;amp; Mentees in Tech&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TYn8hm_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vzj8mrdkbrj1rxnotgfy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TYn8hm_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vzj8mrdkbrj1rxnotgfy.png" alt="Mentors &amp;amp; Mentees" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-your-own-softwaretemplate-and-sell-it"&gt;
  &lt;/a&gt;
  Create your own software/template and sell it
&lt;/h2&gt;

&lt;p&gt;If you know how to program in one programming language, and you are prepared to invest some of your time in creating software that could help people, you can create it and so earn extra money.&lt;/p&gt;

&lt;p&gt;You can create a website, a mobile application, a desktop application, your social network ...&lt;/p&gt;

&lt;p&gt;However, if you have a feel for the graphic of the page, you can create your website template and sell it on platforms like &lt;a href="https://author.envato.com/"&gt;ThemeForest&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t-yCxQZy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j009q9lsij7jeawsppdz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t-yCxQZy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j009q9lsij7jeawsppdz.png" alt="Coding" width="387" height="581"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As you can see, there are a huge number of ways to make money. Take your time and think about what you want to do.&lt;/p&gt;

&lt;p&gt;Only the sky is the limit of human creativity.&lt;/p&gt;




&lt;p&gt;If you like the post, share it, but you can also start following me on my &lt;a href="https://twitter.com/Patik123_"&gt;Twitter account&lt;/a&gt;, where I regularly post tips about web development.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>ideas</category>
      <category>blogging</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Best Coding app for beginners [Free Certificate]</title>
      <author>Jonny</author>
      <pubDate>Fri, 29 Oct 2021 10:05:14 +0000</pubDate>
      <link>https://dev.to/jnc/best-coding-app-for-beginners-free-certificate-5a1m</link>
      <guid>https://dev.to/jnc/best-coding-app-for-beginners-free-certificate-5a1m</guid>
      <description>&lt;p&gt;Programming skills open doors to dozens of lucrative tech careers. And there’s never been a better or easier time to learn. Just like learning any other language, coding requires regular practice to master. But it’s not always easy for people to find time to practice in front of a computer. That’s why coding apps are so helpful. In this article, we’ll cover the best coding apps on iOS and Android for those who want to learn to code. &lt;/p&gt;
&lt;br&gt;Read More : &lt;b&gt;&lt;a href="https://www.codelivly.com/best-coding-apps-for-beginners/"&gt;Best Coding App For Beginners&lt;/a&gt;&lt;/b&gt;

</description>
    </item>
  </channel>
</rss>
