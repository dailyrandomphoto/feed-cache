<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Why TurboRepo Will Be The First Big Trend of 2022</title>
      <author>swyx</author>
      <pubDate>Mon, 27 Dec 2021 16:08:03 +0000</pubDate>
      <link>https://dev.to/swyx/why-turborepo-will-be-the-first-big-trend-of-2022-4gfj</link>
      <guid>https://dev.to/swyx/why-turborepo-will-be-the-first-big-trend-of-2022-4gfj</guid>
      <description>&lt;p&gt;TurboRepo was &lt;a href="https://vercel.com/blog/vercel-acquires-turborepo"&gt;acquired by Vercel&lt;/a&gt; recently and I caught up on Jared Palmer's excellent intro demo to see what the fuss is all about:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/YX5yoApjI3M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Here are quick notes for those too busy to view the whole thing, followed by personal reflections at the end.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-monorepos"&gt;
  &lt;/a&gt;
  Why Monorepos
&lt;/h2&gt;

&lt;p&gt;You can refer to other sources for &lt;a href="https://www.toptal.com/front-end/guide-to-monorepos"&gt;definitions of Monorepos&lt;/a&gt;, but we'll spend some time on covering why they are a worthwhile goal:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can easily make &lt;strong&gt;cross cutting code changes&lt;/strong&gt; across multiple applications (eg &lt;code&gt;/frontend&lt;/code&gt; and &lt;code&gt;/backend&lt;/code&gt;) in one atomic commit&lt;/li&gt;
&lt;li&gt;You can easily &lt;strong&gt;search&lt;/strong&gt; across all projects&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Single source of truth&lt;/strong&gt; for many environment concerns you will want to standardize across your company, for example:

&lt;ul&gt;
&lt;li&gt;dependency management (important deps in one &lt;code&gt;package.json&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;code reuse of shared packages (e.g. &lt;code&gt;/design-system&lt;/code&gt; or &lt;code&gt;/common-utils&lt;/code&gt; or &lt;code&gt;/schema&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;configs (ESlint, TSconfig, etc)&lt;/li&gt;
&lt;li&gt;tests (from unit to e2e)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;For library authors, it is also easier to publish packages with dependencies on each other.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Major JS ecosystem tools like React, Jest, pnpm, Next.js, and Yarn itself have moved to Monorepos, as have small startups and large companies like FB and &lt;a href="https://cacm.acm.org/magazines/2016/7/204032-why-google-stores-billions-of-lines-of-code-in-a-single-repository/fulltext"&gt;Google&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#origin-of-turborepo"&gt;
  &lt;/a&gt;
  Origin of TurboRepo
&lt;/h2&gt;

&lt;p&gt;The origin story of TurboRepo started with this &lt;a href="https://github.com/jaredpalmer/tsdx/issues/122"&gt;looongstanding open issue&lt;/a&gt; on TSDX from Nate Moore:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AatiKf6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op5kdp9dw4ns6yeugdk2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AatiKf6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op5kdp9dw4ns6yeugdk2.png" alt="Image description" width="880" height="843"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As an early volunteer on TSDX I studiously avoided  this issue because I never worked at a company with a large monorepo, and thought that it should be solved by dedicated tools like &lt;code&gt;yarn workspace&lt;/code&gt;, which at the time was just gaining traction itself.&lt;/p&gt;

&lt;p&gt;To solve this, Jared tried to extract Lerna into a monorepo tool, and when researching how big monorepo shops like Facebook and Google did task running, discovered that a lot of their advanced techniques had not made it into the larger JS ecosystem.&lt;/p&gt;

&lt;p&gt;So, TurboRepo was started with 3 objectives: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;make a monorepo tool that utilizes as many of these advanced techniques as possible &lt;strong&gt;with zero config&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;make it easy to &lt;strong&gt;incrementally adopt&lt;/strong&gt; (eg when moving from Lerna)&lt;/li&gt;
&lt;li&gt;make sure that it &lt;strong&gt;scales&lt;/strong&gt; (eg API design and architectural choices are flexible enough)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The fuller story of TurboRepo is told by Jared in this thread:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M5jemcJD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Eq64QrMXMAQUsTG.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s---mH6khoS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1473479314834345990/rNrZqEdU_normal.jpg" alt="Jared Palmer profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Jared Palmer
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/jaredpalmer"&gt;@jaredpalmer&lt;/a&gt;
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Started hacking on a monorepo new build system called @TurboRepo over the holidays. The mvp can speed up Lerna by ~3-30x so far through remote caching + task scheduling. Going to be building it in public over the next few weeks. DM me if you're interested in trying it out 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      22:11 PM - 04 Jan 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1346217789942591488" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1346217789942591488" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1346217789942591488" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#what-turborepo-does"&gt;
  &lt;/a&gt;
  What TurboRepo does
&lt;/h2&gt;

&lt;p&gt;The basic principle of TurboRepo is to &lt;strong&gt;never recompute work that has been done before&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;To do this, it generates a dependency graph from your build pipeline from a &lt;code&gt;turbo&lt;/code&gt; config in package.json, executes each task in turn, and fingerprints the input/caches the output of each task. &lt;/p&gt;

&lt;p&gt;When it is run a second time, if it finds work that matches a fingerprint, it restores from cache, and &lt;strong&gt;replays the logs&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-turborepo"&gt;
  &lt;/a&gt;
  How to use TurboRepo
&lt;/h2&gt;

&lt;p&gt;The main CLI surface area is surprisingly small:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;npx create-turbo@latest turbo-demo&lt;/code&gt; scaffolds a monorepo with apps (&lt;code&gt;docs&lt;/code&gt;, &lt;code&gt;web&lt;/code&gt;) and packages (design system and shared configs (eslint, tsconfig))&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;turbo run build&lt;/code&gt; builds all apps at once, but importantly, when you run this command again the second build completes in 100ms because everything is cached. There are a &lt;a href="https://turborepo.org/docs/reference/command-line-reference"&gt;long list of flags you can add&lt;/a&gt; to modify what &lt;code&gt;turbo run&lt;/code&gt; does and outputs.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;turbo prune --scope=&amp;lt;target&amp;gt;&lt;/code&gt; generates a sparse/partial monorepo with a pruned lockfile for a target package.&lt;/li&gt;
&lt;li&gt;Remote Caching commands: &lt;code&gt;turbo login&lt;/code&gt; and &lt;code&gt;turbo link&lt;/code&gt; (explained later)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-raw-turbo-endraw-config-key"&gt;
  &lt;/a&gt;
  The &lt;code&gt;turbo&lt;/code&gt; config key
&lt;/h2&gt;

&lt;p&gt;TurboRepo uses a special key in &lt;code&gt;package.json&lt;/code&gt; called &lt;code&gt;turbo&lt;/code&gt; (&lt;a href="https://turborepo.org/docs/reference/configuration"&gt;docs here&lt;/a&gt;), and it is here that topological relationships between build tasks (and where to fingerprint for cache artifacts) are defined:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"turbo"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"baseBranch"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"origin/main"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"pipeline"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"dependsOn"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"^build"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"outputs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;".next/**"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"dependsOn"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"^build"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"outputs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"lint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"outputs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"dev"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"cache"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This helps Turbo create a Directed Acyclic Graph of your build that it can then walk in reverse for building and checking against its cache. You can even use &lt;a href="https://turborepo.org/docs/reference/command-line-reference#--graph"&gt;the &lt;code&gt;--graph&lt;/code&gt; flag&lt;/a&gt; to visualize your build graph with Graphviz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5VSjpn31--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yj4pqsvaws83v8owgxtw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5VSjpn31--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yj4pqsvaws83v8owgxtw.png" alt="Image description" width="880" height="471"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Having &lt;a href="https://twitter.com/swyx/status/1032665787436343297"&gt;tried out visualization tools before&lt;/a&gt;, imo this is a fun demo but not practically all that useful 🤷‍♂️) &lt;/p&gt;

&lt;p&gt;The other important thing to know is that you can run all these tasks together and Turbo will parallelize as much as possible:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;turbo run build &lt;span class="nb"&gt;test &lt;/span&gt;lint
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To understand what is running in parallel and debug build pipelines, you can even make Turbo output a profile with the &lt;code&gt;--profile&lt;/code&gt; flag to inspect the traces in Chrome DevTools!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H21PeijM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qhydl0cqmbisayfunrks.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H21PeijM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qhydl0cqmbisayfunrks.png" alt="Image description" width="880" height="466"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#remote-caching"&gt;
  &lt;/a&gt;
  Remote Caching
&lt;/h2&gt;

&lt;p&gt;Remote caching is a beta feature, but is set to be far and away the showstopper in making TurboRepo scale. Normally, caches are generated and checked locally, so if you are reviewing code that a coworker has written, you'll have to build it locally too. &lt;/p&gt;

&lt;p&gt;Sounds inefficient? We can fix that.&lt;/p&gt;

&lt;p&gt;Remote Caching shares that cache globally (this is secure to that extent that hashes are secure), turning TurboRepo from a "single player" experience to a "co-op multiplayer" mode. The analogy that resonates a lot with users is that this is basically "Dropbox for your &lt;code&gt;dist&lt;/code&gt; directory".&lt;/p&gt;

&lt;p&gt;This is where Vercel's backing comes in - they are offering &lt;strong&gt;free remote caching&lt;/strong&gt; on TurboRepo builds - you'll still need to make a Vercel account, and they may charge for this later - but this works whether or not your app is built or hosted on Vercel. Brilliant move for everyone concerned! All TurboRepo users get free speedups, Vercel gets a bunch of signups (with network effect) and a possible future revenue source.&lt;/p&gt;

&lt;p&gt;Usage is pretty simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx turbo login &lt;span class="c"&gt;# login to Vercel&lt;/span&gt;
npx turbo &lt;span class="nb"&gt;link&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it! Could not be easier, and offers free speedups.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-future"&gt;
  &lt;/a&gt;
  The Future
&lt;/h2&gt;

&lt;p&gt;Jared ended the livestream by making a few comments on the TurboRepo roadmap&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Telemetry&lt;/li&gt;
&lt;li&gt;Sharding Parallel Tasks in other processes (currently, TurboRepo runs parallel tasks in the same singlethreaded process like Node does - to actually make use of full concurrency it should distribute that work to other processes.  Temporal, &lt;a href="https://www.swyx.io/why-temporal/"&gt;the project I work on&lt;/a&gt;, could be an interesting tool for that in future&lt;/li&gt;
&lt;li&gt;Presets (referred to as "Turbo Season 2")&lt;/li&gt;
&lt;li&gt;Smaller features

&lt;ul&gt;
&lt;li&gt;Public/private security model like npm&lt;/li&gt;
&lt;li&gt;More intelligent watch mode&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;There will probably be &lt;a href="https://vercel.com/contact/turborepo"&gt;Enterprise features&lt;/a&gt; too.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can vote on feature ideas on the TurboRepo &lt;a href="https://github.com/vercel/turborepo/discussions"&gt;GitHub Community&lt;/a&gt; as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#personal-takeaways"&gt;
  &lt;/a&gt;
  Personal Takeaways
&lt;/h2&gt;

&lt;p&gt;TurboRepo is a big deal for the JS community not just because it addresses build speeds (which are always a crowd pleaser), but also that it is a well defined abstraction that brings a lot of value out of the box, with a declarative build pipeline, great debugging/profiling options, and great docs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lZgpaie2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o3cfc9ybz5t6lq7w6htf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lZgpaie2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o3cfc9ybz5t6lq7w6htf.png" alt="Image description" width="329" height="106"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With 74% of its code in Go, TurboRepo is a great example of the &lt;a href="https://www.swyx.io/js-third-age/#the-third-age"&gt;Systems Core, Scripting Shell&lt;/a&gt; thesis, proving out the idea that the age of "JS tools in JS" is over because the need for speed on hot paths outweighs contributor learning curve concerns.&lt;/p&gt;

&lt;p&gt;Many people in the JS community (like my old self) have heard about the benefits of monorepos, but have been held back by the lack of good tooling tackling this problem head on. While there is a &lt;a href="https://turborepo.org/docs/guides/complimentary-tools"&gt;long list of monorepo tooling&lt;/a&gt; tackling various parts of the problem, I see TurboRepo as leading the charge for the new wave of monorepo tooling that will rise to prominence in the Third Age of JavaScript, thanks to strong backing and great developer marketing from Jared and Team Vercel.&lt;/p&gt;

</description>
      <category>devtools</category>
      <category>summaries</category>
      <category>javascript</category>
    </item>
    <item>
      <title> The most important sites for employment and remote work</title>
      <author>Mahmoud EL-kariouny</author>
      <pubDate>Mon, 27 Dec 2021 16:00:27 +0000</pubDate>
      <link>https://dev.to/mahmoudessam/the-most-important-sites-for-employment-and-remote-work-4b0p</link>
      <guid>https://dev.to/mahmoudessam/the-most-important-sites-for-employment-and-remote-work-4b0p</guid>
      <description>&lt;p&gt;1- &lt;a href="https://supportfinity.com/skilled-people/building-profile/Y0DrL"&gt;Supportfinity&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2- &lt;a href="https://developers.turing.com/signup"&gt;Turing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3- &lt;a href="https://arc.dev/"&gt;Arc.dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4- &lt;a href="https://weworkremotely.com/"&gt;Weworkremotely&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5- &lt;a href="https://stackoverflow.com/jobs"&gt;Stack overflow jobs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;6- &lt;a href="https://angel.co/"&gt;Angel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;7- &lt;a href="https://remoteok.io/"&gt;Remoteok&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;8- &lt;a href="https://remotive.io/"&gt;Remotive&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;10- &lt;a href="https://dribbble.com/"&gt;Dribbble&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;11- &lt;a href="https://www.glassdoor.com/index.htm"&gt;glassdoor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;12- &lt;a href="https://vanhack.com/jobs?gclid=Cj0KCQiA5aWOBhDMARIsAIXLlkfQGAoBadpMs6LMGWkNjFj-c-eB1iA4bAn8tosFUlpgHO6pofqSaoUaAnn5EALw_wcB"&gt;vanhack&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All the best for you.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
      <category>news</category>
    </item>
    <item>
      <title>Learn Javascript __part1
</title>
      <author>Zahab Kakar</author>
      <pubDate>Mon, 27 Dec 2021 15:54:50 +0000</pubDate>
      <link>https://dev.to/zahab/learn-javascript-part1-2e8d</link>
      <guid>https://dev.to/zahab/learn-javascript-part1-2e8d</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;The JavaScript Part 1 is the First article of Learn JavaScript Series which includes the explanation, example of all the basics of JavaScript. So, if you are a developer, who has no idea about JavaScript or you are a beginner JavaScript developer, You can start from this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-javascript"&gt;
  &lt;/a&gt;
  What is JavaScript?
&lt;/h2&gt;

&lt;p&gt;JavaScript is the most popular programming language and is used on both the client-side and server-side that allowing you to make web pages interactive. JS creates and controls dynamic website content, this means that anything changes and moves on your screen without reloading a web page are done by javascript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-do-you-need-to-learn-javascript"&gt;
  &lt;/a&gt;
  Why do you need to learn javascript?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Highest community size&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JavaScript has the highest community size and almost 97% of the websites are using JavaScript.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy to learn&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JavaScript is very easy and does not require any environment setup.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; If you learn javascript, you can develop&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1.   Websites
2.   Mobile apps
3.   Desktops apps
4.   Machine learning models
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#javascript-basics"&gt;
  &lt;/a&gt;
  JavaScript basics
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Hello World&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The first step is to learn how to execute your code, as I said before Js doesn't require any environment setup, You can just use your browser Developer Tools. Click right and select inspect, then go to the console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bXmwETwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/006dtjexl89wdnsbl9kr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bXmwETwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/006dtjexl89wdnsbl9kr.png" alt="Image description" width="880" height="408"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here console.log just printed the Hello world at the console of the browser.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Variables&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Variables in JavaScript are just a container that stores the value. The variable declaration has the following syntax: " variableKeyword variableName = value; "&lt;/p&gt;

&lt;p&gt;There are three keywords in JS that can be used as a variable keyword (var, let, const). variableName is the name that you give to the variable and the value which will be assigned to the variable means this variable holds this value inside itself and whenever the variable is called, it provides the value.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;course&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Zahab&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;course&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you paste the above code on the console and click enter the output will be "JavaScript Zahab 123".&lt;/p&gt;

&lt;p&gt;It just provided the value of each variable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6e98o6lU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6po1dgdxsvyjsqq9yznf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6e98o6lU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6po1dgdxsvyjsqq9yznf.png" alt="Image description" width="880" height="458"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see that (var, let, const) are all doing the same thing, they are all just providing the value of the variable but what is the difference between them? Here I will briefly mention their difference, however, if it is still not clear, you can read &lt;a href="https://zahab.tech/const-let-var-which-one-should-you-use"&gt;this&lt;/a&gt; article.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;var:&lt;/strong&gt; The variable defined by the var keyword will be accessible in your entire program and you can reassign it&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let:&lt;/strong&gt; When you declare a variable with the let keyword, the variable is only accessible inside that block in which it is declared.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;const:&lt;/strong&gt; The variable which is defined by the const keyword cannot be reassigned. In the above example, you can not reassign the value of the number from 123 to any other value.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#comment"&gt;
  &lt;/a&gt;
  comment
&lt;/h3&gt;

&lt;p&gt;Comments are used to write notes or ignore the code without deleting them. This means the code or anything which are commented in your program will not be executed. There are two ways that you can comment in JavaScript ( Single line using "//") and (multiple lines using "/* your comment */" )&lt;/p&gt;

&lt;p&gt;Have a look at the below example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// variables example&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;course&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Zahab&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;course&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// console.log(name);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---2vsnzWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j615nwgqun5s586aes9v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---2vsnzWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j615nwgqun5s586aes9v.png" alt="Image description" width="880" height="602"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first line is just a text and it's just for more clarification. It is just a single-line comment.&lt;/p&gt;

&lt;p&gt;I have also commented the (console.log(name)) so that the compiler will not execute that line of code.  The output is multiple lines so we can use multi-line comments, you can see that the comments have a grey color and the "name" variable is not executed because it was just a comment.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#datatypes"&gt;
  &lt;/a&gt;
  DataTypes
&lt;/h3&gt;

&lt;p&gt;Datatypes are the types of data that you provide for the variables. Do you remember this syntax " variableKeyword variableName = value; ", here the value that you assign for a variable can be any type like a number(123), a string(Zahab), or a boolean(true/false). Following are the types of data in JavaScript:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  String&lt;/li&gt;
&lt;li&gt;  Number&lt;/li&gt;
&lt;li&gt;  Boolean&lt;/li&gt;
&lt;li&gt;  Object&lt;/li&gt;
&lt;li&gt;  Undefined&lt;/li&gt;
&lt;li&gt;  Null&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is an introduction to the JavaScript datatypes and I will explain each of them and its methods in another article.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;String:&lt;/strong&gt; A string is a collection of characters, it can be a name or sentence. If the value of a variable is a string then it should be written inside the single or double-quotes.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Boolean: *&lt;/em&gt; It is a datatype when the value of a variable is either true or false.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Object:&lt;/strong&gt; In JavaScript, an object is an unordered collection of key-value pairs. Each key-value pair is called a property.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Number:&lt;/strong&gt; when a number is the value of the variable then the variable has a number datatype. The number can be with, or without decimals. We will discuss the numbers method in another article.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Undefined:&lt;/strong&gt; When a variable has no value or there is no value for the variable then its datatype is undefined.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Null:&lt;/strong&gt; A null means absence of a value. It is declared when the variable does not have any value for now but it will have later on.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zahab&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;enterValue&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;noValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;enterValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="nx"&gt;noValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BKkXO9v4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1t7wi9y8wn043q3220lz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BKkXO9v4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1t7wi9y8wn043q3220lz.png" alt="Image description" width="880" height="531"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#operators"&gt;
  &lt;/a&gt;
  Operators
&lt;/h3&gt;

&lt;p&gt;Operators are used to perform specific mathematical and logical computations on operands. Following are the JS operators:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript-arithmetic-operator"&gt;
  &lt;/a&gt;
  JavaScript Arithmetic operator
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ykxPQR8j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cpix3s60k0nthamcjsfn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ykxPQR8j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cpix3s60k0nthamcjsfn.png" alt="Image description" width="880" height="722"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;addition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;     
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;subtraction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;  
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;multiplication&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt; 
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;division&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;     
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;modulus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;      
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;increment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;    
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;decrement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;    


&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;addition&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;subtraction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;multiplication&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;division&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;modulus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="nx"&gt;decrement&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#javascript-comparison-operators"&gt;
  &lt;/a&gt;
  JavaScript Comparison Operators
&lt;/h3&gt;

&lt;p&gt;Here the output might confuse you, so I explain it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---evegHye--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h5aipr5xl9cdvizbaigr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---evegHye--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h5aipr5xl9cdvizbaigr.png" alt="Image description" width="880" height="819"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These operators are comparing the operands, the first output is false or the result of the equal operator is false because 3 is not equal to 2. The equalType is also false because it checks both the value and type, the value is not equal because 3 is not equal to 2 and checking the types of the two operands means checking their data types, both are numbers so type is true but because the value is false the result will be false.&lt;/p&gt;

&lt;p&gt;The third one is true because 3 is not equal to 2, the "!" indicates the "not". The greater variable is true because 3 is greater than 2. The less variable is false because 3 is not less than 2. The last two are true and false respectively because their first condition is true.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript-logical-operator"&gt;
  &lt;/a&gt;
  JavaScript Logical operator
&lt;/h3&gt;

&lt;p&gt;There are three logical operators in JS (AND, OR, NOT). The AND operator returns true if both the conditions are true. In the below example 8 is less than 10 and greater than 1, here both of the conditions are true, hence the result is true.&lt;/p&gt;

&lt;p&gt;The OR operator is true if both or any one of the conditions are true.&lt;/p&gt;

&lt;p&gt;The not operator returns True when the result is False and returns False when the result is True.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rYUZD8_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcf0oyb1sde6oenhbij4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rYUZD8_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcf0oyb1sde6oenhbij4.png" alt="Image description" width="880" height="458"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript-bitwise-operators"&gt;
  &lt;/a&gt;
  JavaScript Bitwise Operators
&lt;/h3&gt;

&lt;p&gt;JavaScript Bitwise Operators perform operations on the bit level. Followings are the types of bitwise operators in JS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qRrrPfwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/na6vev2ktg3pyvf30mro.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qRrrPfwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/na6vev2ktg3pyvf30mro.png" alt="Image description" width="880" height="409"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I am going to explain these topics in detail in the next article, so if you are confused with maybe objects or operators, it's fine. We will have a complete discussion about them in the operators' article.&lt;/p&gt;

&lt;p&gt;That is it for this article. I hope you found this article useful, if you need any help please let me know in the comment section.&lt;/p&gt;

&lt;p&gt;If you have any questions or need help, feel free to contact me on &lt;a href="https://twitter.com/zahab_k/"&gt;Twitter&lt;/a&gt; &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Complete Authentication using firebase</title>
      <author>Mukul Rajpoot</author>
      <pubDate>Mon, 27 Dec 2021 15:31:27 +0000</pubDate>
      <link>https://dev.to/mukulrajpoot262610/complete-authentication-using-firebase-3l8d</link>
      <guid>https://dev.to/mukulrajpoot262610/complete-authentication-using-firebase-3l8d</guid>
      <description>&lt;p&gt;Hello guys 👋,&lt;/p&gt;

&lt;p&gt;I made a complete authentication module using firebase. Frontend is built using next.js and database I'm using is mongoDB. &lt;/p&gt;

&lt;p&gt;It also have user email-verification and password-reset functionality. I made this app to learn about how to export firebase user data to another database like mongodb.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-screenshot"&gt;
  &lt;/a&gt;
  Some Screenshot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ywqUMukH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tvgwemqbgl9gviqsjfa1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ywqUMukH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tvgwemqbgl9gviqsjfa1.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sMjcvZ3m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2uid3dfa9ofe29teop6b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sMjcvZ3m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2uid3dfa9ofe29teop6b.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J_HA8uDr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4m9wd5q7dt9rvm5i024.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J_HA8uDr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4m9wd5q7dt9rvm5i024.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-setup"&gt;
  &lt;/a&gt;
  How to setup
&lt;/h2&gt;

&lt;p&gt;Step 1: Clone project from &lt;a href="https://github.com/mukulrajpoot262610/dev-case-app"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step 2: Run &lt;code&gt;npm install&lt;/code&gt; to install dependencies&lt;/p&gt;

&lt;p&gt;Step 3: Create a firebase project and mongoDB cluster.&lt;/p&gt;

&lt;p&gt;Step 4: Generate a &lt;code&gt;.env&lt;/code&gt; file and add your firebase and mongodb uri in that file.&lt;/p&gt;

&lt;p&gt;Step 5: Setup your service account on firebase and generate a new private key and add them in your env file.&lt;/p&gt;

&lt;p&gt;Step 6: You are good to go. 😎&lt;/p&gt;

&lt;p&gt;Deployed Link: &lt;a href="https://dev-case-app.vercel.app/"&gt;Live Link&lt;/a&gt;&lt;br&gt;
Github Link: &lt;a href="https://github.com/mukulrajpoot262610/dev-case-app"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

</description>
      <category>firebase</category>
      <category>nextjs</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Securely Access Your AWS Resources From Github Actions</title>
      <author>Benoît Bouré</author>
      <pubDate>Mon, 27 Dec 2021 15:15:33 +0000</pubDate>
      <link>https://dev.to/aws-builders/securely-access-your-aws-resources-from-github-actions-3lgk</link>
      <guid>https://dev.to/aws-builders/securely-access-your-aws-resources-from-github-actions-3lgk</guid>
      <description>&lt;p&gt;Security is a very important topic for all cloud engineers. Making sure that your infrastructure and data are kept out of reach of malicious people is one of the most serious things to get right. In AWS, we are used to dealing with IAM roles and permissions that make our resources accessible to users or to other resources. However, sometimes you need to grant access from outside your organization.&lt;/p&gt;

&lt;p&gt;One example is when you want to deploy your infrastructure from a CI/CD pipeline, like Github Actions. How do you allow your workflow to gain access to your AWS account?&lt;/p&gt;

&lt;p&gt;One approach is to create a dedicated IAM user, store its credentials in the &lt;a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets"&gt;Github secrets store&lt;/a&gt;, and allow the workflow to use them. Easy, enough! Secrets are encrypted by Github, so it is secure, right? &lt;/p&gt;

&lt;p&gt;Not really... The problem is that those credentials are meant to be long-lived. It means that if anyone is able to get hold of them for whatever reason (eg: a leak in a workflow logs, someone gaining access to a GitHub action runner, etc), they will be able to access all your resources (at least those that the credentials are allowed to control). Sure, you could rotate them from time to time, but you'd have to do that manually. This is probably not something you want to spend time doing, and let's face it, you probably won't!&lt;/p&gt;

&lt;p&gt;Luckily, there is a better solution. If you are using Github Actions, you can allow Github to grab temporary, short-lived, credentials that it can use during the execution of the workflow. After that, the credentials will expire and no one will ever be able to use them again.&lt;/p&gt;

&lt;p&gt;In this post, I will guide you through the steps to set this up. Don't worry, it's actually easier than you think!&lt;/p&gt;

&lt;p&gt;Here is a schema representing what we are going to accomplish&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7DFZp4sd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0lczntnt01oz53iwo6qw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7DFZp4sd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0lczntnt01oz53iwo6qw.png" alt="GitHub Actions OIDC Integration with AWS" width="880" height="427"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-your-aws-account"&gt;
  &lt;/a&gt;
  Setting up your AWS account
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 TL;DR; I created a CloudFormation quick-create link that you can use to automate the following steps. See at the bottom of this article. If you want to know how it works, and what CloudFormation is going to do, keep reading this section.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#create-an-openid-connect-identity-provider"&gt;
  &lt;/a&gt;
  Create an OpenID Connect Identity provider
&lt;/h3&gt;

&lt;p&gt;The first step is to create an OpenID Connect (OIDC) identity provider in your AWS Account. This will allow Github to identify itself.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Got to the &lt;a href="https://console.aws.amazon.com/iamv2/home?#/identity_providers"&gt;IAM console -&amp;gt; Identity providers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;Add new provider&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Select &lt;em&gt;OpenID Connect&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Provider Url: &lt;code&gt;https://token.actions.githubusercontent.com&lt;/code&gt; (Don't forget to click &lt;code&gt;Get Thumbprint&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Audience: &lt;code&gt;sts.amazonaws.com&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Add tags if you want to and click &lt;em&gt;Add Provider&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ukwGiC25--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6c71ery9wid0918mbuw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ukwGiC25--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6c71ery9wid0918mbuw.png" alt="OIDC provider creation" width="880" height="724"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 You will need to do this step only once per AWS account.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#create-a-role"&gt;
  &lt;/a&gt;
  Create a role
&lt;/h3&gt;

&lt;p&gt;You now need to create a role that Github will be able to assume in order to access the resources it needs to control. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go back to IAM and select &lt;a href="https://console.aws.amazon.com/iamv2/home?#/roles"&gt;Roles&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Create a new Role&lt;/li&gt;
&lt;li&gt;Chose &lt;em&gt;Web Identity&lt;/em&gt;, select the Identity provider you created in the previous step, and its audience.&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;Next:Permissions&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GCnyZ0iZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h7wf4ezzdv4g2kfojo04.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GCnyZ0iZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h7wf4ezzdv4g2kfojo04.png" alt="Create an IAM role" width="880" height="178"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;You now need to give the role the appropriate permissions (Policies). These are the ones that Github needs in order to do whatever it has to do. This will vary based on your use case, so I will leave that up to you. Keep in mind that you should stick to the &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege"&gt;principle of least privileges&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When that is done, give your role a name and click &lt;em&gt;Create Role&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;There is now an additional step to do. You need to edit the trust policy of the role to reduce its scope to your repository only. Make sure you don't skip this part, it is &lt;strong&gt;very important&lt;/strong&gt;. Without that, &lt;strong&gt;any repository on GitHub will be able to assume your role and access your resources&lt;/strong&gt;. (Unfortunately, there does not seem to be a way to do that at creation time).&lt;/p&gt;

&lt;p&gt;Go back to IAM Roles and select the created Role. Choose &lt;em&gt;Trust Relationships&lt;/em&gt; and &lt;em&gt;Edit Trust Relationship&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Under &lt;code&gt;Condition&lt;/code&gt;, add the following segment:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"StringLike"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"token.actions.githubusercontent.com:sub"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"repo:[your-org]/[your-repo]:*"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace the organization and repo names to match yours, and click &lt;code&gt;Update Trust Policy&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;✍️ Note: You can take this even further and reduce the scope, by using &lt;a href="https://git-scm.com/book/en/v2/Git-Internals-Git-References"&gt;git references&lt;/a&gt;, to a branch or tag only, for example.&lt;br&gt;
eg: &lt;code&gt;repo:[your-org]/[your-repo]:ref:refs/heads/master&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The final result will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"Version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2012-10-17"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"Statement"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"Effect"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Allow"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"Principal"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"Federated"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"arn:aws:iam::1234567890:oidc-provider/token.actions.githubusercontent.com"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"Action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sts:AssumeRoleWithWebIdentity"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"Condition"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"StringEquals"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"token.actions.githubusercontent.com:aud"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sts.amazonaws.com"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"StringLike"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"token.actions.githubusercontent.com:sub"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"repo:[your-org]/[your-repo]:*"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This concludes the required configurations on your AWS account. Take note of the role ARN, you'll need it later.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 You can create different roles per account and use a different one for each use case. For example, one per application, per usage (configurations, deployment, integration tests), etc. You can play with that to reduce the scope of each session even more.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#configure-github-action-workflow"&gt;
  &lt;/a&gt;
  Configure Github action workflow
&lt;/h2&gt;

&lt;p&gt;Your Github workflow requires additional permissions in order to be able to use OIDC. Add the following at the top of your workflow's YML file. You can also add it at the job level to reduce the scope if needed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;permissions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;id-token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;write&lt;/span&gt; &lt;span class="c1"&gt;# required to use OIDC authentication&lt;/span&gt;
  &lt;span class="na"&gt;contents&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;read&lt;/span&gt; &lt;span class="c1"&gt;# required to checkout the code from the repo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can now use the &lt;a href="https://github.com/aws-actions/configure-aws-credentials"&gt;configure-aws-credentials&lt;/a&gt; Github action in the job that needs to assume the role. Add this step to generate credentials before doing any call to AWS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;configure aws credentials&lt;/span&gt;
  &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;aws-actions/configure-aws-credentials@v1&lt;/span&gt;
  &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;role-to-assume&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;arn:aws:iam::1234567890:role/your-role-arn&lt;/span&gt;
    &lt;span class="na"&gt;role-duration-seconds&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;900&lt;/span&gt; &lt;span class="c1"&gt;# the ttl of the session, in seconds.&lt;/span&gt;
    &lt;span class="na"&gt;aws-region&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;us-east-1&lt;/span&gt; &lt;span class="c1"&gt;# use your region here.&lt;/span&gt;
&lt;span class="c1"&gt;# You can now execute commands that use the credentials👇&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Serverless deploy&lt;/span&gt;
  &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;sls deploy --stage dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;configure AWS credentials&lt;/code&gt; step will use the OIDC integration to assume the given role, generate &lt;strong&gt;short-lived&lt;/strong&gt; credentials, and make them available to the current job.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 If you want to take security even further, you can also keep your role's ARN used in &lt;code&gt;role-to-assume&lt;/code&gt; in a Github secret.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#automate"&gt;
  &lt;/a&gt;
  Automate
&lt;/h2&gt;

&lt;p&gt;The guys at &lt;code&gt;configure-aws-credentials&lt;/code&gt; shared a &lt;a href="https://github.com/aws-actions/configure-aws-credentials#sample-iam-role-cloudformation-template"&gt;CloudFormation template&lt;/a&gt; that you can use to automate the AWS configuration steps.&lt;/p&gt;

&lt;p&gt;I took it one step further; I &lt;a href="http://githubactions-oidc-cfn.s3.amazonaws.com/template.yml"&gt;hosted that template&lt;/a&gt; and created a deployment link for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://us-east-1.console.aws.amazon.com/cloudformation/home?region=eu-west-1#/stacks/quickcreate?templateURL=http://githubactions-oidc-cfn.s3.amazonaws.com/template.yml&amp;amp;stackName=GithubActionsOIDC"&gt;Click here&lt;/a&gt; to deploy it into your account.&lt;/p&gt;

&lt;p&gt;Fill in the parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;GitHubOrg&lt;/code&gt;: your organization name, or your Github username&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;RepositoryName&lt;/code&gt;: the repository that needs access to your AWS account&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;OIDCProviderArn&lt;/code&gt;: your existing OIDC provider's ARN, if you have one already. If you don't, leave it empty and one will be created for you. (Remember that you only need one per account).&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;✍️ Note: The created role will not have any Policy attached to it. You will still need to attach the ones that your workflow needs to it after that.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As you can see, securing your account doesn't have to be hard. The part that might require a little more effort is to define the right Policies if you want to follow the principle of least privileges (which you should!).&lt;/p&gt;

&lt;p&gt;For more content like this, follow me on Twitter &lt;a href="https://twitter.com/Benoit_Boure"&gt;@Benoit_Boure&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>security</category>
      <category>github</category>
      <category>cicd</category>
    </item>
    <item>
      <title>All Resources To Help You Start Your Open-Source Journey: Open Source Gallery</title>
      <author>Astrodevil</author>
      <pubDate>Mon, 27 Dec 2021 15:07:31 +0000</pubDate>
      <link>https://dev.to/astrodevil/all-resources-to-help-you-start-your-open-source-journey-open-source-gallery-5f5g</link>
      <guid>https://dev.to/astrodevil/all-resources-to-help-you-start-your-open-source-journey-open-source-gallery-5f5g</guid>
      <description>&lt;p&gt;Do you want to start your open source journey? Don't know where to start? Difficulty in finding suitable projects according to your tech stack? Then this article is for you. In this article, I am going to discuss a resource gallery that I curated to help beginners get into the open-source world. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#open-source-gallery"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/Astrodevil/Open-Source-Gallery"&gt;Open Source Gallery&lt;/a&gt;
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#about"&gt;
  &lt;/a&gt;
  About❓
&lt;/h3&gt;

&lt;p&gt;Are you a beginner? Wants to start open-source? Don't know how, where, why to start?&lt;/p&gt;

&lt;p&gt;You are welcome! You are in right place.😊&lt;/p&gt;

&lt;p&gt;Open-Source-Gallery provides you with all the resources needed to become a good open-sourcer.&lt;/p&gt;

&lt;p&gt;The motive🎯 of this project is to help new learners like you to get familiar with the world of open-source.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#contents"&gt;
  &lt;/a&gt;
  Contents🔥
&lt;/h3&gt;

&lt;p&gt;Every Learner has different preferences, some find docs are easy to understand and learn from there, some prefer video. I have taken care of all that while curating these resources. &lt;/p&gt;

&lt;p&gt;Even after being willing to start, newbies find it difficult to find projects and communities I have taken care of that. &lt;/p&gt;

&lt;p&gt;Open Source Gallery includes: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Videos📹&lt;/li&gt;
&lt;li&gt;Articles📝&lt;/li&gt;
&lt;li&gt;Projects🦾&lt;/li&gt;
&lt;li&gt;Programs and Internships Opportunities☕&lt;/li&gt;
&lt;li&gt;Communities🔥&lt;/li&gt;
&lt;li&gt;Key Peoples🧑‍💻&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-else"&gt;
  &lt;/a&gt;
  What Else⚡
&lt;/h3&gt;

&lt;p&gt;I have also included some &lt;a href="https://github.com/Astrodevil/Open-Source-Gallery#more-resource-gallery"&gt;other resources&lt;/a&gt; and resources gallery apart from open source. Hope it will help you in your learning.&lt;/p&gt;

&lt;p&gt;This resource gallery was 1st curated on Notion but now it is hosted on GitHub. If you find this helpful, don't forget to give it a &lt;a href="https://github.com/Astrodevil/Open-Source-Gallery"&gt;⭐&lt;/a&gt; on GitHub.&lt;/p&gt;

&lt;p&gt;Happy learning.👍&lt;/p&gt;

&lt;p&gt;So, What are you waiting for? &lt;a href="https://astrodevil.github.io/Open-Source-Gallery/"&gt;Start here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final Words✅
&lt;/h3&gt;

&lt;p&gt;Open Source Gallery is made with a view to helping everyone, It will be constantly updated with new and valuable resources. So you all are welcome to add more resources to the &lt;a href="https://github.com/Astrodevil/Open-Source-Gallery"&gt;repository&lt;/a&gt; and share it with everyone out there who is going to start open-source in 2022.&lt;/p&gt;

&lt;p&gt;Don't forget to give it a &lt;a href="https://github.com/Astrodevil/Open-Source-Gallery"&gt;⭐&lt;/a&gt; on GitHub.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#if-you-my-content-connect-me-on-twitter-or-supports-me-by-buying-me-a-coffee"&gt;
  &lt;/a&gt;
  If You ❤️ My Content! Connect Me on  &lt;a href="https://mobile.twitter.com/Astrodevil_"&gt;Twitter&lt;/a&gt; or Supports Me By Buying Me A Coffee☕👇🏼
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/Astrodevil"&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rZDB_RRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-orange.png" alt="Buy Me A Coffee" width="545" height="153"&gt; &lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>tutorial</category>
      <category>github</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to setup a Cloudflare tunnel on Linux</title>
      <author>RealChaika</author>
      <pubDate>Mon, 27 Dec 2021 15:07:12 +0000</pubDate>
      <link>https://dev.to/realchaika/how-to-setup-a-cloudflare-tunnel-on-linux-40d9</link>
      <guid>https://dev.to/realchaika/how-to-setup-a-cloudflare-tunnel-on-linux-40d9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-are-cloudflare-tunnels"&gt;
  &lt;/a&gt;
  What are Cloudflare Tunnels
&lt;/h2&gt;

&lt;p&gt;Cloudflare Tunnels can be used to expose internal services using outbound only connections. Think Ngrok tunnels. Cloudflare Tunnels can be used to proxy normal http/https connections, ssh/vnc, as well as more advanced things like arbitrary TCP, with some more restrictions.&lt;/p&gt;

&lt;p&gt;The advantage of using Cloudflare Tunnels is not having to open any ports on your web server, no need for anything like IP Restrictions, Origin Cert checking, etc. Cloudflare Tunnels also use http/2 to connect to Cloudflare's Edge (soon http3/quic), whereas normally Cloudflare will only connect to an origin over http/1.1.&lt;/p&gt;

&lt;p&gt;This guide will focus on setting up a tunnel for a normal web server over http. It's important to remember that since the tunnel is acting as a proxy for traffic, the web server (or whatever you are exposing via the tunnel) will see all incoming traffic as localhost. You will need to grab the real user's IP from a header (normal cdn things) but also not rely on restricting any resources to localhost.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#pricing-limits-of-cloudflare-tunnels"&gt;
  &lt;/a&gt;
  Pricing / Limits of Cloudflare Tunnels
&lt;/h2&gt;

&lt;p&gt;Cloudflare Tunnels are completely free. Cloudflare Tunnels used to be named Cloudflare Argo Tunnels, and required a Cloudflare Argo Subscription. &lt;a href="https://www.cloudflare.com/products/argo-smart-routing/"&gt;Cloudflare Argo&lt;/a&gt; is a service Cloudflare offers where they will use "smarter routing" to route requests to your origin avoiding network congestion, charging per gigabyte transferred.&lt;/p&gt;

&lt;p&gt;Now Cloudflare has completely separated the products, while you can still buy an Argo Subscription to try to speed up traffic to your origin. Tunnels are free for any traffic amount with only a few limits: &lt;a href="https://www.cloudflare.com/products/argo-smart-routing/"&gt;1000 Tunnels per account, and 100 Active Connections from each tunnel to Cloudflare's edge&lt;/a&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Cloudflare Account (free)&lt;/li&gt;
&lt;li&gt;Domain added to Cloudflare (using CF nameservers, etc)&lt;/li&gt;
&lt;li&gt;Linux server with a web server already configured on it&lt;/li&gt;
&lt;li&gt;No ports need to be port forwarded or allowed through your firewall&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#how-to-setup-a-cloudflare-tunnel"&gt;
  &lt;/a&gt;
  How to setup a Cloudflare Tunnel
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#installing-cloudflared"&gt;
  &lt;/a&gt;
  Installing Cloudflared
&lt;/h4&gt;

&lt;p&gt;Cloudflare Tunnels use Cloudflared, a tunneling daemon to proxy the traffic from Cloudflare, and also to provide a CLI interface to make and manage tunnels.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#deb-install-ubuntu-linux-mint-debian-etc"&gt;
  &lt;/a&gt;
  .deb install (Ubuntu, Linux Mint, Debian, etc)
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb &amp;amp;&amp;amp; sudo dpkg -i cloudflared-linux-amd64.deb
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#%E2%80%8B-rpm-install-centos-fedora-rhel-opensusu-etc"&gt;
  &lt;/a&gt;
  ​ .rpm install (Centos, Fedora, Rhel, OpenSusu, etc)
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-x86_64.rpm &amp;amp;&amp;amp; sudo rpm -i cloudflared-linux-x86_64.rpm 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#login-to-cloudflared"&gt;
  &lt;/a&gt;
  Login to Cloudflared
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;cloudflared tunnel login
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command should give you the link to sign into Cloudflare, and select a zone (website) to create tunnels on.&lt;/p&gt;

&lt;p&gt;When done, it will download an account certificate (cert.pem file in the default cloudflared directory). This cert will be used to authorize future API Requests to create and manage tunnels. Once your tunnel is up and running, it will use its own credentials file, and you can safely delete this unless you want to keep managing/creating/deleting tunnels from this machine.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#create-a-tunnel"&gt;
  &lt;/a&gt;
  Create a tunnel
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;cloudflared tunnel create &amp;lt;name&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will create a named tunnel based on the name entered. It will generate a new tunnel, this includes generating a UUID for the tunnel, a tunnel credentials file in the default cloudflared directory, and a subdomain of .cfargotunnel.com that you can use to route requests to. &lt;/p&gt;

&lt;p&gt;In this example, I'll be naming my tunnel "frontpage".&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#create-your-tunnel-configuration-file"&gt;
  &lt;/a&gt;
  Create your tunnel configuration file
&lt;/h4&gt;

&lt;p&gt;Throughout the past two steps, after logging in and creating the account cert, and making a tunnel, generating the tunnel cert, cloudflared has listed the path to your .cloudflared directory, which is most likely based off your home directory.&lt;br&gt;
Something like "~/.cloudflared" or "/home/{username}/.cloudflared"&lt;/p&gt;

&lt;p&gt;Navigate to that folder now. You should see cert.pem (your account cert) and a .json file named off the UUID of your tunnel.&lt;/p&gt;

&lt;p&gt;Create a new file in the same directory, config.yml, and open it using your preferred text editor.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;http://localhost:80&lt;/span&gt;
&lt;span class="na"&gt;tunnel&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;Tunnel-UUID&amp;gt;&lt;/span&gt;
&lt;span class="na"&gt;credentials-file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/home/{username}/.cloudflared/&amp;lt;Tunnel-UUID&amp;gt;.json&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The URL line corresponds to the internal service you wish to expose. It's not necessary to use https://, the connection between Cloudflare Tunnel and Cloudflare's datacenter is already encrypted. This is just the tunnel connecting locally to the web server.&lt;/p&gt;

&lt;p&gt;The Tunnel UUID is a 36 character value that corresponds with your named tunnel. It was displayed when you made the tunnel. You can also find it by going to your .cloudflared directory and looking for the newly created json credentials file for the tunnel you made. It should be named {Tunnel-UUID}.json.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#route-traffic-to-your-tunnel"&gt;
  &lt;/a&gt;
  Route traffic to your tunnel
&lt;/h4&gt;

&lt;p&gt;You just create a CNAME Record to route traffic to your tunnel. You can do so easily using the cloudflared cli&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;cloudflared tunnel route dns &amp;lt;Tunnel UUID or Name&amp;gt; &amp;lt;Hostname&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For example, my tunnel is named &lt;code&gt;frontpage&lt;/code&gt; and I wanted it to be accessible via &lt;code&gt;example.chaika.dev&lt;/code&gt;. So I did&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;cloudflared tunnel route dns frontpage example.chaika.dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#run-your-tunnel"&gt;
  &lt;/a&gt;
  Run your tunnel
&lt;/h4&gt;

&lt;p&gt;Finally, you can test out your tunnel.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;cloudflared tunnel run &amp;lt;UUID or Name&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also specify a specific configuration file to run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;cloudflared tunnel --config path/config.yaml run
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once your tunnel is live, try accessing it via the hostname you routed it to. It may take a few seconds for the tunnel to be fully live/accessible. If something is wrong, the tunnel running in the CLI should tell you more information about errors.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#run-your-tunnel-as-a-service"&gt;
  &lt;/a&gt;
  Run your tunnel as a service
&lt;/h4&gt;

&lt;p&gt;Running your tunnel manually will work, but isn't the best. It won't automatically start if your machine reboots, have to ensure its open/running, etc.&lt;/p&gt;

&lt;p&gt;Luckily, cloudflared supports installing itself as a service very easily.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;sudo cloudflared service install
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may need to manually specify config location. In my case, I did have to specify it.&lt;/p&gt;

&lt;p&gt;For example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;sudo cloudflared --config /home/{username}/.cloudflared/config.yml  service install 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note that you specify the config argument before the 'service install' command parameters.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The configuration will be copied over to &lt;code&gt;/etc/cloudflared&lt;/code&gt;&lt;br&gt;
I would recommend copying over the tunnel credentials file ({Tunnel-UUID}.json) over to there as well.&lt;/p&gt;

&lt;p&gt;Then, just launch the service and set it to start on boot&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;sudo systemctl enable cloudflared
sudo systemctl start cloudflared
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ensure your tunnel started/is running fine:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;sudo systemctl status cloudflared
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Test out your tunnel by visting the hostname you routed it to.&lt;/p&gt;

&lt;p&gt;With any luck, it all worked, and your Cloudflare Tunnel is now all set up, running as a service, automatically starting on reboots, and working well!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-the-tunnel-works"&gt;
  &lt;/a&gt;
  How the tunnel works
&lt;/h2&gt;

&lt;p&gt;You may have noticed, when your tunnel starts up, it makes multiple connections. Cloudflare says it connections to multiple machines in case one crashes/reboots, it can use the other connections.&lt;/p&gt;

&lt;p&gt;Each individual connection to Cloudflare is not limited to one user request at a time. Cloudflare says each connection can handled hundreds or thousands of requests at one time.&lt;/p&gt;

&lt;p&gt;Each Tunnel supports up to 100 connections, you can launch more cloudflared replicas/instances for reliability. Cloudflare does not recommend doing this for load-balancing, and makes no guarantee about which connection is chosen. They recommend using their own load-balancing product along with tunnels for this. &lt;/p&gt;

&lt;p&gt;You can use the &lt;a href="https://dash.teams.cloudflare.com/"&gt;Cloudflare Teams Dash&lt;/a&gt; under "Access", "Tunnels" to see a good view of each tunnel you have, what routes it has, uptime/connections it has, and all other relevant information.&lt;/p&gt;

&lt;p&gt;Cloudflare for Teams/Cloudflare Access has a generous free plan you can use as well, for up to 50 people, using Google (or a ton of other sso options) for auth. You can very easily make an Application policy to protect your tunnel and limit it to only specific emails or other options.&lt;/p&gt;

&lt;p&gt;{Tunnel-UUID}.cfargotunnel.com is a virtual/non-existent domain, that is only used internally when you make CName's pointing to your tunnel and other references. Other Cloudflare Customers cannot point their domains at your tunnel and bypass your Cloudflare Access or other restrictions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-notes"&gt;
  &lt;/a&gt;
  Closing notes
&lt;/h2&gt;

&lt;p&gt;Hopefully, this helped you understand and create Cloudflare Tunnels. I made this tutorial in part for myself, Cloudflare's Tunnel Documentation does exist, and covers mostly everything, but glosses over a lot of details, and can be really confusing to beginners.&lt;/p&gt;

&lt;p&gt;Thanks for reading. If you have any questions, let me know. I've used Cloudflare Tunnels for quite some time, although mostly in smaller websites/forums.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>devops</category>
    </item>
    <item>
      <title>Striver's SDE Sheet Journey - #7 Rotate Image</title>
      <author>sachin26</author>
      <pubDate>Mon, 27 Dec 2021 14:55:23 +0000</pubDate>
      <link>https://dev.to/sachin26/strivers-sde-sheet-journey-7-rotate-image-5400</link>
      <guid>https://dev.to/sachin26/strivers-sde-sheet-journey-7-rotate-image-5400</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;u&gt;Problem Statement&lt;/u&gt; :-&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[7,4,1],[8,5,2],[9,6,3]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pn4zWaeI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4lofcldj8bhbjtvwp74h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pn4zWaeI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4lofcldj8bhbjtvwp74h.png" alt="Rotate Image" width="200" height="200"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;after rotating by 90 degree,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3kVZjtKf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8c3estzslg0tt7hobte.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3kVZjtKf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8c3estzslg0tt7hobte.png" alt="Rotate Image" width="200" height="200"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution-1"&gt;
  &lt;/a&gt;
  &lt;u&gt;Solution 1&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;from the above images, you can see, after the rotation, the first row of the matrix has turned into the last column of the matrix and the second row of the matrix has turned into the second last column, and so on.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;so what we are going to do is, initialize one more matrix &lt;code&gt;rotated&lt;/code&gt; and copy the first row from the original matrix to the last column of the new matrix &lt;code&gt;rotated&lt;/code&gt;, and so on.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-1&lt;/strong&gt; initialize a n*n size of matrix &lt;code&gt;rotate&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-2&lt;/strong&gt; run a loop from &lt;code&gt;i=0&lt;/code&gt; to &lt;code&gt;n&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; run another loop from &lt;code&gt;j=0&lt;/code&gt; to &lt;code&gt;n&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; copy &lt;code&gt;matrix&lt;/code&gt; values to the last column of &lt;code&gt;rotate&lt;/code&gt; matrix.&lt;br&gt;
  &lt;code&gt;rotated[j][n-i-1] = matrix[i][j]&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;step-3&lt;/strong&gt; end.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Java&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;rotate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;  
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rotated&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

                &lt;span class="n"&gt;rotated&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;


        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rotated&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]));&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Time Complexity&lt;/em&gt;&lt;/strong&gt; : &lt;strong&gt;O(n*n)&lt;/strong&gt;,bcoz we are running two loops.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;space Complexity&lt;/em&gt;&lt;/strong&gt; : &lt;strong&gt;O(n*n)&lt;/strong&gt;,initialising a new n*n matrix.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution-2"&gt;
  &lt;/a&gt;
  &lt;u&gt;Solution 2&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;if you observed the first row of the output, is nothing, just the reverse of the first column.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;for the expected output, first, we have to transpose the matrix and then reverse each row of the matrix.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;lets understand it in a visual way.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jnaqm0xg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qof0g0zm429gjuholgqd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jnaqm0xg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qof0g0zm429gjuholgqd.png" alt="rotate " width="200" height="200"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;step-1&lt;/strong&gt; transpose the matrix. (changing rows to columns &amp;amp; columns to rows)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AzyxJi8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ppkoqaypio2lscnak7qb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AzyxJi8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ppkoqaypio2lscnak7qb.png" alt="rotate image" width="200" height="200"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-2&lt;/strong&gt; reverse each row of the matrix.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PM77lwIC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6p4qvslpalaugy0u0qm8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PM77lwIC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6p4qvslpalaugy0u0qm8.png" alt="rotate image" width="200" height="200"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Java&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;rotate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;// transpose the matrix&lt;/span&gt;
       &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;

            &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;

               &lt;span class="n"&gt;swap&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;


        &lt;span class="c1"&gt;// reverse rows&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;

           &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;swap&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;


&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Time Complexity&lt;/em&gt;&lt;/strong&gt; : transposing the matrix + reversing each row of the matrix,then &lt;strong&gt;O(n*n) + O(n*n)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;space Complexity&lt;/em&gt;&lt;/strong&gt; : in this case we are not using any extra space,then &lt;strong&gt;O(1)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;T&lt;/strong&gt;hank you for reading this article I hope I explained it clearly.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>dsa</category>
      <category>java</category>
    </item>
    <item>
      <title>Automatically Install NPM Dependencies on Git Pull</title>
      <author>Chris</author>
      <pubDate>Mon, 27 Dec 2021 14:47:50 +0000</pubDate>
      <link>https://dev.to/zirkelc/automatically-install-npm-dependencies-on-git-pull-bg0</link>
      <guid>https://dev.to/zirkelc/automatically-install-npm-dependencies-on-git-pull-bg0</guid>
      <description>&lt;p&gt;Together with my team I've been working on one project repository with multiple packages - a &lt;strong&gt;monorepo&lt;/strong&gt;. Of course, we're using Git and branches, so there is almost no friction between us. Except when it comes to dependencies - in our case npm dependencies - but I guess it also holds true for other environments. When I pull the latest changes on my current branch or I switch between different branches, I have to be aware if the &lt;code&gt;package-lock.json&lt;/code&gt; (lock file) has been changed. If so, I have to run &lt;code&gt;npm install&lt;/code&gt; to make sure my dependencies are up to date with the latest changes. Otherwise, I might run into hard-to-find bugs where the current development works on some machine but not on the other due to outdated dependencies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hooks-to-the-rescue"&gt;
  &lt;/a&gt;
  Hooks To The Rescue
&lt;/h2&gt;

&lt;p&gt;We're already using a &lt;strong&gt;pre-commit&lt;/strong&gt; hook to automatically run linting and formatting on &lt;code&gt;git commit&lt;/code&gt;. That's quite easy with &lt;a href="https://git-scm.com/docs/githooks"&gt;Git Hooks&lt;/a&gt; and a tool like &lt;a href="https://typicode.github.io/husky/#/"&gt;Husky&lt;/a&gt;. Fortunately, Git also supports a &lt;strong&gt;post-merge&lt;/strong&gt; hook that runs after a &lt;code&gt;git pull&lt;/code&gt; is done on a local repository. This is exactly the point in time where we need to update our dependencies to see if they have changed. For detailed steps on how to get started with hooks, I recommend following this &lt;a href="https://typicode.github.io/husky/#/?id=manual"&gt;guide&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#detect-changes"&gt;
  &lt;/a&gt;
  Detect Changes
&lt;/h2&gt;

&lt;p&gt;When we &lt;code&gt;git pull&lt;/code&gt; the latest changes, we need a list of all changed files. If this list contains a &lt;code&gt;package-lock.json&lt;/code&gt;, we need to run &lt;code&gt;npm install&lt;/code&gt; to update our dependencies. If we working on a monorepo with multiple packages as in my case, we need to run it for each changed package. The following &lt;code&gt;git diff&lt;/code&gt; prints the list of changed files:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git diff &lt;span class="nt"&gt;--name-only&lt;/span&gt; HEAD@&lt;span class="o"&gt;{&lt;/span&gt;1&lt;span class="o"&gt;}&lt;/span&gt; HEAD
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;With a simple regular expression, we can filter all paths containing a &lt;code&gt;package-lock.json&lt;/code&gt; file. I did put the regex into the &lt;code&gt;PACKAGE_LOCK_REGEX&lt;/code&gt; variable, because this part must be changed depending on the actual project structure. It contains a matching group (i.e. the first pair of parentheses) that starts with &lt;code&gt;packages/&lt;/code&gt;, because in our monorepo all packages live under this directory (except for development dependencies which live at project root directory). The result of regex filter is saved as array into the &lt;code&gt;PACKAGES&lt;/code&gt; variable.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;IFS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;
&lt;span class="nv"&gt;PACKAGE_LOCK_REGEX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"(^packages&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;.*&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;package-lock&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="s2"&gt;json)|(^package-lock&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="s2"&gt;json)"&lt;/span&gt;
&lt;span class="nv"&gt;PACKAGES&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;git diff &lt;span class="nt"&gt;--name-only&lt;/span&gt; HEAD@&lt;span class="o"&gt;{&lt;/span&gt;1&lt;span class="o"&gt;}&lt;/span&gt; HEAD | &lt;span class="nb"&gt;grep&lt;/span&gt; &lt;span class="nt"&gt;-E&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$PACKAGE_LOCK_REGEX&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#run-install"&gt;
  &lt;/a&gt;
  Run Install
&lt;/h2&gt;

&lt;p&gt;Finally, we need to run &lt;code&gt;npm install&lt;/code&gt; for each changed package. As Git runs on the project root directory and the changed files are actually paths to lock files, we must change the directory before running install. With &lt;code&gt;$(dirname package)&lt;/code&gt; we can easily extract the directories from the path.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PACKAGES&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
  for &lt;/span&gt;package &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$PACKAGES&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do
    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"📦 &lt;/span&gt;&lt;span class="nv"&gt;$package&lt;/span&gt;&lt;span class="s2"&gt; was changed. Running npm install to update your dependencies..."&lt;/span&gt;
    &lt;span class="nv"&gt;DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;dirname &lt;/span&gt;package&lt;span class="si"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$DIR&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm &lt;span class="nb"&gt;install
  &lt;/span&gt;&lt;span class="k"&gt;done
fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#post-merge-hook"&gt;
  &lt;/a&gt;
  Post Merge Hook
&lt;/h2&gt;

&lt;p&gt;All the above snippets can be combined into the following shell script, that is going to be executed by Husky as &lt;strong&gt;post-merge&lt;/strong&gt; hook. &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;

&lt;p&gt;The file must be saved as &lt;code&gt;post-merge&lt;/code&gt; (no .sh extension) inside the &lt;code&gt;.husky&lt;/code&gt; folder. I'm running on macOS with &lt;strong&gt;zsh&lt;/strong&gt; as default shell (see shebang &lt;code&gt;#!/bin/zsh&lt;/code&gt;) and it's working. However, I didn't test it with &lt;strong&gt;bash&lt;/strong&gt;, so there might be some changes necessary if you run a different shell. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#test-it"&gt;
  &lt;/a&gt;
  Test It
&lt;/h2&gt;

&lt;p&gt;In order to verify if the hook is working, we can reset the current local branch to a previous state (e.g. rewind 20 commits) and then pull the changes back.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--hard&lt;/span&gt; HEAD~20 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git pull
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the &lt;code&gt;package-lock.json&lt;/code&gt; has been changed in one of the commits, the hook will print a nice little message for each lock file and it will automatically run &lt;code&gt;npm install&lt;/code&gt; for us. If you use Git-integration of Editors like VSCode, you need to check the output of the Git log in order see what's going on.&lt;/p&gt;

</description>
      <category>npm</category>
      <category>node</category>
      <category>git</category>
      <category>github</category>
    </item>
    <item>
      <title>Bootstrap 5 - Open-source Flask Templates</title>
      <author>Sm0ke</author>
      <pubDate>Mon, 27 Dec 2021 14:28:32 +0000</pubDate>
      <link>https://dev.to/sm0ke/bootstrap-5-open-source-flask-templates-2l</link>
      <guid>https://dev.to/sm0ke/bootstrap-5-open-source-flask-templates-2l</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;This article presents a curated list with open-source &lt;a href="https://appseed.us/apps/flask-apps"&gt;Flask Templates&lt;/a&gt; crafted on top of modern &lt;strong&gt;Bootstrap 5&lt;/strong&gt; UI Kits and released under the MIT license on Github. Source code for all products can be downloaded without a registration lock and used for hobby &amp;amp; commercial or simply for eLearning activities.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/product/flask-soft-ui-design-system"&gt;Soft UI Design Flask&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/apps/flask-apps/flask-material-kit"&gt;Flask Material Kit&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/apps/flask-apps/flask-pixel-bootstrap-uikit"&gt;Flask Pixel Lite&lt;/a&gt; - product page&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;All products are generated with a an identical features set, database and deployment support via Docker. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Up-to-date dependencies&lt;/code&gt;: Flask 2.0.1&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;SCSS compilation&lt;/code&gt; via &lt;strong&gt;Gulp&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Bootstrap&lt;/strong&gt; 5 design&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;SQLite&lt;/code&gt;, Flask-SQLAlchemy ORM&lt;/li&gt;
&lt;li&gt;Session-Based authentication flow (login, register)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Deployment&lt;/code&gt;: &lt;strong&gt;Docker&lt;/strong&gt;, Gunicorn / Nginx, Heroku&lt;/li&gt;
&lt;li&gt;Support via Github (issues tracker) and &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Probably the most easier way to compile and use the products is via Docker. Once we have the code downloaded locally, the build is super easy.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;👉 &lt;strong&gt;Download the sources&lt;/strong&gt; - &lt;a href="https://appseed.us/product/flask-soft-ui-design-system"&gt;Soft UI Design&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/flask-soft-ui-design.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;flask-soft-ui-design
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;👉 &lt;strong&gt;Start in Docker&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up &lt;span class="nt"&gt;--build&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once all the above commands are executed, we should be able to access the app in the browser, create users and interact with the UI. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MSBoeDV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ukz5d3k72e2hdtm8330a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MSBoeDV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ukz5d3k72e2hdtm8330a.png" alt="Soft UI Design Flask - HERO section." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#soft-ui-design-flask"&gt;
  &lt;/a&gt;
  Soft UI Design Flask
&lt;/h2&gt;

&lt;p&gt;Soft UI Design System is a Premium Bootstrap 5 UI Kit designed by Creative-Tim designed for those who like bold elements and beautiful websites. Soft UI Design System Flask is a simple Flask starter with a modular codebase, database, authentication, and deployment scripts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://flask-soft-ui-free.appseed-srv1.com/"&gt;Soft UI Design Flask&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/product/flask-soft-ui-design-system"&gt;Soft UI Design Flask&lt;/a&gt; - Product page&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZOFLMJVP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgh3l5kpiyn9av232hsg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZOFLMJVP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgh3l5kpiyn9av232hsg.png" alt="Soft UI Design Flask - About US page." width="880" height="477"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#material-kit-flask"&gt;
  &lt;/a&gt;
  Material Kit Flask
&lt;/h2&gt;

&lt;p&gt;Material Kit 2 is built with over 60 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://flask-material-kit.appseed-srv1.com/"&gt;Flask Material Kit&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/apps/flask-apps/flask-material-kit"&gt;Flask Material Kit&lt;/a&gt; - product page&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PQvBXp7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w6c6oon7gvk0qtrg9p0c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PQvBXp7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w6c6oon7gvk0qtrg9p0c.png" alt="Material Kit Flask - HERO section." width="880" height="434"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#pixel-flask-template"&gt;
  &lt;/a&gt;
  Pixel Flask Template
&lt;/h2&gt;

&lt;p&gt;Pixel is a free, fully responsive, and modern Bootstrap 5 UI Kit that will help you build creative and professional websites. Use our components and sections, switch some Sass variables to build and arrange pages to best suit your needs. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://flask-pixel-lite.appseed-srv1.com/"&gt;Flask Pixel Lite&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/apps/flask-apps/flask-pixel-bootstrap-uikit"&gt;Flask Pixel Lite&lt;/a&gt; - Product page&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xKOGAXWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jxd7hwd4isao79dumvd5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xKOGAXWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jxd7hwd4isao79dumvd5.png" alt="Pixel Flask Template - Freelancer page" width="880" height="453"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! For more resources feel free to access: &lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://flask.palletsprojects.com/en/2.0.x/"&gt;Flask&lt;/a&gt; - official website&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/"&gt;AppSeed&lt;/a&gt; - for support and more &lt;a href="https://appseed.us/apps/flask-apps"&gt;Flask starters&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>flask</category>
      <category>bootstrap5</category>
      <category>opensource</category>
    </item>
    <item>
      <title>How to use design patterns in JavaScript?</title>
      <author>HM Nomaan</author>
      <pubDate>Mon, 27 Dec 2021 14:25:33 +0000</pubDate>
      <link>https://dev.to/hmnomaan/how-to-use-design-patterns-in-javascript-3kgj</link>
      <guid>https://dev.to/hmnomaan/how-to-use-design-patterns-in-javascript-3kgj</guid>
      <description>&lt;p&gt;JavaScript is a lightweight, interpreted, object-oriented programming language with first-class functions most commonly known as a scripting language for web pages&lt;/p&gt;

&lt;p&gt;What Are Design Patterns?&lt;br&gt;
As I said before, design patterns are reusable solutions to commonly occurring problems in software design. Let’s take a look at some of the categories of design patterns.&lt;br&gt;
Proto-patterns&lt;br&gt;
How does one create a pattern? Let’s say you recognized a commonly occurring problem, and you have your own unique solution to this problem, which isn’t globally recognized and documented. You use this solution every time you encounter this problem, and you think that it’s reusable and that the developer community could benefit from it.&lt;br&gt;
Does it immediately become a pattern? Luckily, no. Oftentimes, one may have good code writing practices and simply mistake something that looks like a pattern for one when, in fact, it is not a pattern.&lt;br&gt;
How can you know when what you think you recognize is actually a design pattern?&lt;br&gt;
By getting other developers’ opinions about it, by knowing about the process of creating a pattern itself, and by making yourself well acquainted with existing patterns. There is a phase a pattern has to go through before it becomes a full-fledged pattern, and this is called a proto-pattern.&lt;br&gt;
A proto-pattern is a pattern-to-be if it passes a certain period of testing by various developers and scenarios where the pattern proves to be useful and gives correct results. There is quite a large amount of work and documentation—most of which is outside the scope of this article—to be done in order to make a fully-fledged pattern recognized by the community.&lt;br&gt;
Anti-patterns&lt;br&gt;
As a design pattern represents good practice, an anti-pattern represents bad practice.&lt;br&gt;
An example of an anti-pattern would be modifying the Object class prototype. Almost all objects in JavaScript inherit from Object (remember that JavaScript uses prototype-based inheritance) so imagine a scenario where you altered this prototype. Changes to the Object prototype would be seen in all of the objects that inherit from this prototype—which would be most JavaScript objects. This is a disaster waiting to happen.&lt;br&gt;
Another example, similar to one mentioned above, is modifying objects that you don’t own. An example of this would be overriding a function from an object used in many scenarios throughout the application. If you are working with a large team, imagine the confusion this would cause; you’d quickly run into naming collisions, incompatible implementations, and maintenance nightmares.&lt;br&gt;
Similar to how it is useful to know about all of the good practices and solutions, it is also very important to know about the bad ones too. This way, you can recognize them and avoid making the mistake up front.&lt;br&gt;
Design Pattern Categorization&lt;br&gt;
Design patterns can be categorized in multiple ways, but the most popular one is the following:&lt;br&gt;
Creational design patterns&lt;br&gt;
Structural design patterns&lt;br&gt;
Behavioral design patterns&lt;br&gt;
Concurrency design patterns&lt;br&gt;
Architectural design patterns&lt;br&gt;
Creational Design Patterns&lt;br&gt;
These patterns deal with object creation mechanisms which optimize object creation compared to a basic approach. The basic form of object creation could result in design problems or in added complexity to the design. Creational design patterns solve this problem by somehow controlling object creation. Some of the popular design patterns in this category are:&lt;br&gt;
Factory method&lt;br&gt;
Abstract factory&lt;br&gt;
Builder&lt;br&gt;
Prototype&lt;br&gt;
Singleton&lt;br&gt;
Structural Design Patterns&lt;br&gt;
These patterns deal with object relationships. They ensure that if one part of a system changes, the entire system doesn’t need to change along with it. The most popular patterns in this category are:&lt;br&gt;
Adapter&lt;br&gt;
Bridge&lt;br&gt;
Composite&lt;br&gt;
Decorator&lt;br&gt;
Facade&lt;br&gt;
Flyweight&lt;br&gt;
Proxy&lt;br&gt;
Behavioral Design Patterns&lt;br&gt;
These types of patterns recognize, implement, and improve communication between disparate objects in a system. They help ensure that disparate parts of a system have synchronized information. Popular examples of these patterns are:&lt;br&gt;
Chain of responsibility&lt;br&gt;
Command&lt;br&gt;
Iterator&lt;br&gt;
Mediator&lt;br&gt;
Memento&lt;br&gt;
Observer&lt;br&gt;
State&lt;br&gt;
Strategy&lt;br&gt;
Visitor&lt;br&gt;
Concurrency Design Patterns&lt;br&gt;
These types of design patterns deal with multi-threaded programming paradigms. Some of the popular ones are:&lt;br&gt;
Active object&lt;br&gt;
Nuclear reaction&lt;br&gt;
Scheduler&lt;br&gt;
Architectural Design Patterns&lt;br&gt;
Design patterns which are used for architectural purposes. Some of the most famous ones are:&lt;br&gt;
MVC (Model-View-Controller)&lt;br&gt;
MVP (Model-View-Presenter)&lt;br&gt;
MVVM (Model-View-ViewModel)&lt;br&gt;
In the following section, we are going to take a closer look at some of the aforementioned design patterns with examples provided for better understanding.&lt;/p&gt;

</description>
      <category>designpattern</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>The Ultimate Angular Resources🛠 For Developers👨‍💻</title>
      <author>ThemeSelection</author>
      <pubDate>Mon, 27 Dec 2021 14:17:28 +0000</pubDate>
      <link>https://dev.to/theme_selection/the-ultimate-angular-resources-for-developers-2glm</link>
      <guid>https://dev.to/theme_selection/the-ultimate-angular-resources-for-developers-2glm</guid>
      <description>&lt;p&gt;As we all know, Angular is one of the leading JavaScript frameworks. It is highly recommended by developers across the globe. Here we are going to list down some of the amazing resources for Angular. Although, before we start the list let's have an overview of it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-angular"&gt;
  &lt;/a&gt;
  What Is Angular?
&lt;/h2&gt;

&lt;p&gt;Well, &lt;strong&gt;&lt;a href="https://angular.io/"&gt;Angular&lt;/a&gt;&lt;/strong&gt;  is a TypeScript-based open-source front-end web application platform led by the Angular Team at Google and by a community of individuals and corporations to address all of the parts of the developer's workflow while building complex web applications. Angular is a complete rewrite from the same team that built AngularJS.&lt;/p&gt;

&lt;p&gt;It is a framework for building client applications in HTML and either JavaScript or a language like TypeScript that compiles to JavaScript. Angular also combines declarative templates, dependency injection, end to end tooling, and integrated best practices to solve development challenges. Besides, Angular empowers developers to build applications that live on the web, mobile, or the desktop.&lt;/p&gt;

&lt;p&gt;Companies like  &lt;a href="https://www.google.com/"&gt;Google&lt;/a&gt;,  &lt;a href="https://dev.to/theme_selection/the-best-angular-tutorials-for-beginners-2022-1cd9"&gt;Forbes&lt;/a&gt;,  &lt;a href="https://www.paypal.com/"&gt;PayPal&lt;/a&gt;,  &lt;a href="https://www.db.com/"&gt;Deutsche Bank&lt;/a&gt;,  &lt;a href="https://www.upwork.com/"&gt;UpWork&lt;/a&gt;,  &lt;a href="https://www.theguardian.com/"&gt;The Guardian&lt;/a&gt;  uses Angular.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-angular"&gt;
  &lt;/a&gt;
  Advantages Of Angular:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  Effective Cross-Platform Development&lt;/li&gt;
&lt;li&gt;  High Quality of the Application&lt;/li&gt;
&lt;li&gt;  Improved Speed and Performance&lt;/li&gt;
&lt;li&gt;  Faster Development Process&lt;/li&gt;
&lt;li&gt;  Readable and Testable Code&lt;/li&gt;
&lt;li&gt;  More Lightweight Web Applications&lt;/li&gt;
&lt;li&gt;  Efficient Problem-Solving Patterns&lt;/li&gt;
&lt;li&gt;  Excellent Material Design Library&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  Two-way Data binding&lt;/li&gt;
&lt;li&gt;  Modular development structure&lt;/li&gt;
&lt;li&gt;  Ease in Maintaining&lt;/li&gt;
&lt;li&gt;  Dependency Injection&lt;/li&gt;
&lt;li&gt;  TypeScript-based (superset of JavaScript)&lt;/li&gt;
&lt;li&gt;  High performance for Single Page Hefty Apps&lt;/li&gt;
&lt;li&gt;  Offers great flexibility&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, let's check the Ultimate Angular Resources that will help you kickstart your journey as an Angular developers.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#ultimate-angular-resources"&gt;
  &lt;/a&gt;
  Ultimate Angular Resources:
&lt;/h1&gt;

&lt;p&gt;Follwoing are some of the very useful Angular resources that can be helpful for beginners and experienced developers as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#official-resources"&gt;
  &lt;/a&gt;
  Official Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://angular.io/"&gt;Site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.angular.io/"&gt;Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angular.io/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angular.io/guide/cheatsheet"&gt;Cheatsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angular.io/guide/quickstart"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/angular/angular"&gt;GitHub Repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#communities"&gt;
  &lt;/a&gt;
  Communities:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/angular"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/angular/angular"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/angular?tab=Votes"&gt;Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#ui-libraries"&gt;
  &lt;/a&gt;
  UI Libraries:
&lt;/h2&gt;

&lt;p&gt;Well, Angular component libraries will save your time and will help to develop an intriguing and spectacular product. Besides, these libraries also provide many useful components and tools as well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#material-angular-angular-ui-library-based-on-material-design"&gt;
  &lt;/a&gt;
  &lt;a href="https://material.angular.io/"&gt;Material Angular&lt;/a&gt;: Angular UI Library Based On Material Design
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eTrWxPX6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7pe91h8wfrfngjo9mia5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eTrWxPX6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7pe91h8wfrfngjo9mia5.png" alt="Material Angular" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Angular Material&lt;/strong&gt;  is the most commonly used angular UI framework with Angular projects. It is an official component library developed by Google. Besides, the Angular team builds and maintains both common UI components and tools to help you build your custom components.&lt;/p&gt;

&lt;p&gt;This angular UI framework also has a complete solution for all your UI needs. Furthermore, the CSS library in Angular Material consists of typography and other ready-to-use elements.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#ng-bootstrap-ui-library-for-angular-based-on-the-bootstrap-framework"&gt;
  &lt;/a&gt;
  &lt;a href="https://ng-bootstrap.github.io/#/home"&gt;NG Bootstrap&lt;/a&gt;: UI Library For Angular Based On The Bootstrap Framework
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kL0FETKs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ptfuvrqlh2npdezlrypt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kL0FETKs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ptfuvrqlh2npdezlrypt.png" alt="NG bootstrap" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;NG-bootstrap&lt;/strong&gt;  is another bootstrap-based Angular UI framework that offers Bootstrap 4 components for Angular. One advantage of NG bootstrap is there are no dependencies required of 3rd party JavaScript. Besides, most of its features are the same as those of ngx-bootstrap, but with different project teams. In addition, it also contains third-party JS dependencies and high testing coverage. Moreover, it is so convenient to access all the widgets.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#nebular-set-of-essential-theme-ui-kit-auth-security-modules-for-complex-angular-applications"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/akveo/nebular"&gt;Nebular&lt;/a&gt; - set of essential (Theme, UI Kit, AUTH, Security) modules for complex Angular applications
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kid0Btcd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ttjtf5lzi89q4ikj3z87.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kid0Btcd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ttjtf5lzi89q4ikj3z87.png" alt="Nebular" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nebular&lt;/strong&gt;  is a customizable Angular 10 UI Library. It has a beautiful design and the ability to adapt it to your brand easily. Besides, It comes with 4 stunning visual themes, a powerful theming engine with runtime theme switching. Also, it has the support of custom CSS properties mode. Furthermore, it is based on Eva Design System specifications.&lt;/p&gt;

&lt;p&gt;Besides, this angular UI library also offers 4 stunning visual themes, support of custom CSS properties mode, and powering theming engine with runtime theme switching.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#ng-zorro-an-enterpriseclass-ui-components-based-on-ant-design-and-angular"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/NG-ZORRO/ng-zorro-antd"&gt;NG ZORRO&lt;/a&gt; - An enterprise-class UI components based on Ant Design and Angular.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LVaq6kxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9wvjx936hxxspewcocgj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LVaq6kxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9wvjx936hxxspewcocgj.png" alt="NG Zorro" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;NG-ZORRO&lt;/strong&gt;  – an Ant UI-based library designed to provide added advantages to Angular developers. Besides, this library is developed in Chinese, written in TypeScript, and comes with define types. Furthermore, its popularity on GitHub stands with more than 6.6k Stars. In addition, it also supports OnPush mode, high performance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other Useful UI Libraries:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/vladotesanovic/ngSemantic"&gt;ngSemantic&lt;/a&gt; - UI components based on Semantic UI&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/swimlane/ngx-ui"&gt;ngx-ui&lt;/a&gt; - Style and Component Library for Angular2 and beyond!&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.primefaces.org/primeng/"&gt;prime-ng&lt;/a&gt;- Collection of rich UI components for Angular 2&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://wijmo.com/products/wijmo-5/"&gt;Wijmo 5&lt;/a&gt; - Set of UI components for Angular2&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;For more details check the &lt;a href="https://themeselection.com/angular-ui-component-libraries/"&gt;Angular Component UI libraries&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;
  &lt;a href="#admin-templates"&gt;
  &lt;/a&gt;
  Admin Templates:
&lt;/h1&gt;

&lt;p&gt;Admin templates are one of the most used product in web development world. They are very useful and saves a lots of time. Admin templates offers components and features required for developing web apps. Thus, it is always a good choice to take help of it.&lt;/p&gt;

&lt;p&gt;Following are some of the best open source and premium admin templates.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#open-source"&gt;
  &lt;/a&gt;
  Open source
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#ngx-admin"&gt;
  &lt;/a&gt;
  &lt;a href="https://themeselection.com/go/download-ngx-admin/"&gt;Ngx Admin&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lKcLvRd3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7s9osj4jubehye3156n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lKcLvRd3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7s9osj4jubehye3156n.png" alt="ngx admin angular" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ngx Admin&lt;/strong&gt; is a bright and straightforward admin template with a neat web design to create every experience a pleasurable one. Besides, Ngx Admin is a free admin dashboard template based on Angular 9+ and Eva Design System. &lt;/p&gt;

&lt;p&gt;It is 100% responsive and comes with Flexibly configurable themes with a hot-reload (2 themes included) Light and dark version. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#purple-angular"&gt;
  &lt;/a&gt;
  &lt;a href="https://themeselection.com/go/download-purple-angular/"&gt;Purple Angular&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ob-Aorau--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjgfhmn716hnr1ba028d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ob-Aorau--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjgfhmn716hnr1ba028d.png" alt="Purple angular" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Purple Angular&lt;/strong&gt; free template contains a beautiful and carefully drafted admin dashboard that is packed with plenty of essential components. Besides, this is also a simple yet decent admin template in the collection of Open Source Angular admin templates.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#guru-able-angular-8-lite"&gt;
  &lt;/a&gt;
  &lt;a href="https://themeselection.com/go/download-guru-able-angular/"&gt;Guru Able Angular 8 Lite&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t4ecxpst--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5uuuqugj7cmn46z62cl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t4ecxpst--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5uuuqugj7cmn46z62cl.png" alt="Guru Able Angular" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Guru Able Angular 8 Lite&lt;/strong&gt; is an open source Angular Admin dashboard that is a completely free solution for your dashboard creation. &lt;/p&gt;

&lt;p&gt;This angular admin template comes with Dark Version with optimized Google font integration, high speed, mature and sophisticated, extremely well-organized code makes guru Able Lite a completely flexible solution for any type of back-end project. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#notus-angular"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/creativetimofficial/notus-angular"&gt;Notus Angular&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NfncatEc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohmpm0uly8g8kj359g2k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NfncatEc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohmpm0uly8g8kj359g2k.png" alt="Notus Angular" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Notus Angular&lt;/strong&gt; is Free and Open Source. It features multiple HTML and Angular elements and it comes with dynamic components for Angular. It is based on Tailwind Starter Kit, and it is built with both presentation pages, and pages for an admin dashboard. &lt;/p&gt;

&lt;p&gt;Also, it is built with over frontend 120 components, giving you the freedom of choosing and combining. All components can take variations in colors, that you can easily modify using Tailwindcss classes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For more admin templates check the collection of &lt;a href="https://themeselection.com/open-source-angular-admin-templates/"&gt;Open Source Angular Admin Templates&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#premium"&gt;
  &lt;/a&gt;
  Premium
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#vuexy-angular-admin-dashboard-template-the-best"&gt;
  &lt;/a&gt;
  &lt;a href="https://1.envato.market/vusax_admin"&gt;Vuexy - Angular Admin Dashboard Template&lt;/a&gt; (The best⚡)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://1.envato.market/vusax_admin"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X2dFVlPj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hvfiwnnxyx33s3acen7u.jpg" alt="Vuexy VueJS Admin Template" width="880" height="563"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Vuexy – Angular Admin Dashboard Template&lt;/strong&gt; is the most developer-friendly &amp;amp; highly customizable Admin Dashboard Template. It is based on Angular CLI + NgBootstrap. If you’re a developer looking for an admin dashboard that is developer-friendly, rich with features, and highly customizable look no further than Vuexy. &lt;/p&gt;

&lt;p&gt;Besides, it has followed the highest industry standards to bring you the very best admin template that is not only fast and easy to use but highly scalable. Offering ultimate convenience and flexibility, you’ll be able to build whatever application you want with very little hassle.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#modern-admin-angular-13-bootstrap-4-admin-template"&gt;
  &lt;/a&gt;
  &lt;a href="https://1.envato.market/modern_admin_angular"&gt;Modern Admin – Angular 13+ Bootstrap 4 Admin Template&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://1.envato.market/modern_admin_angular"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sQ9uYeHL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1jxvd5tmre0aowsu9ro.png" alt="Modern admin angular" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Modern Admin&lt;/strong&gt; is the most complete &amp;amp; feature packed Angular 13 Bootstrap 4 Admin Template with material components. A combination of clean design and modular code structure which makes it most developer friendly &amp;amp; highly customizable Angular 13 Admin Dashboard Template.&lt;/p&gt;

&lt;p&gt;This is a powerful admin dashboard template built on Angular CLI*&lt;em&gt;.&lt;/em&gt;* Besides, it is developer-friendly and rich in features. We’ve followed the leading industry standards to bring you the very best admin template that is not only fast and easy to use but highly scalable. Offering ultimate convenience and flexibility, you’ll be able to build modern applications with very little hassle.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#apex-angular-13-amp-bootstrap-admin-template"&gt;
  &lt;/a&gt;
  &lt;a href="https://1.envato.market/apex_admin"&gt;Apex - Angular 13+ &amp;amp; Bootstrap Admin Template&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://1.envato.market/apex_admin"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0_woUu8n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2t4czjyjm8fan7jtqklq.png" alt="Apex Angular" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apex Angular Admin Template&lt;/strong&gt; stable with unlimited possibilities. Besides, The Angular CLI makes it easy to maintain this application that already works, right out of the box.&lt;/p&gt;

&lt;p&gt;Furthermore, it includes 7 solid &amp;amp; 7 gradient menu color options and 3 different sizes with organized folder structure, clean &amp;amp; commented code, 50+ charts, 100+ pages, &lt;a href="https://pixinvent.com/apex-angular-4-bootstrap-admin-template/#components"&gt;500+ components&lt;/a&gt;, &lt;a href="https://pixinvent.com/apex-angular-4-bootstrap-admin-template/#cards"&gt;100+ advance cards&lt;/a&gt; (widgets) and many more. Also, the code is super easy to understand and it comes with a starter kit that will help developers to get started quickly. In addition, the template is fully responsive and clean on every device and on every modern browser.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For more premium admin templates check the collection of &lt;a href="https://themeselection.com/angular-admin-template/"&gt;Angular Admin Template Free Download&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#tutorials"&gt;
  &lt;/a&gt;
  Tutorials:
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#angular-tutorial-for-beginners-web-framework-with-typescript-course"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/watch?v=AAu8bjj6-UI"&gt;Angular Tutorial for Beginners - Web Framework with Typescript Course&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/AAu8bjj6-UI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Learn the basics of Angular in this full course for beginners.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Contents:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Components, Lifecycle hooks, Text interpolation&lt;/li&gt;
&lt;li&gt;Components Communication, Component Styles&lt;/li&gt;
&lt;li&gt;Ng-Content &lt;/li&gt;
&lt;li&gt;Template Statements&lt;/li&gt;
&lt;li&gt;Pipes &lt;/li&gt;
&lt;li&gt;Property Binding&lt;/li&gt;
&lt;li&gt;Attribute, Class &amp;amp; Style and many more&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#angular-12-tutorial-for-beginners"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/watch?v=oMj95u2zK4Y&amp;amp;list=PL8p2I9GklV47eNpoo4Fr6fkags72a8F0v"&gt;Angular 12 tutorial for beginners&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/oMj95u2zK4Y"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this angular 12 version video we learn what is angular and we learn basic things about angular courses.&lt;/p&gt;

&lt;p&gt;Course Covers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set up and install&lt;/li&gt;
&lt;li&gt;Files and folder structure&lt;/li&gt;
&lt;li&gt;Interpolation&lt;/li&gt;
&lt;li&gt;Angular CLI and Important commands&lt;/li&gt;
&lt;li&gt;Component with Inline Style and Template and many more.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#angular-crash-course"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/watch?v=3dHNOWTI7H8"&gt;Angular Crash Course&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3dHNOWTI7H8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Learn the fundamentals of Angular in this project-based crash course. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Topics covered:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intro &amp;amp; Slides &lt;/li&gt;
&lt;li&gt;Angular CLI &amp;amp; Setup&lt;/li&gt;
&lt;li&gt;Files &amp;amp; Folders &lt;/li&gt;
&lt;li&gt;Component structure&lt;/li&gt;
&lt;li&gt;Properties &amp;amp; Interpolation&lt;/li&gt;
&lt;li&gt;Global Styles &lt;/li&gt;
&lt;li&gt;Header Component and many more.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#angular-12-tutorial"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/watch?v=88rSZG2mUYs"&gt;Angular 12 Tutorial&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/88rSZG2mUYs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;This Edureka Angular Full Course video will help you understand and learn the fundamentals of Angular. This Angular Tutorial is ideal for both beginners as well as professionals who want to master various concepts of Angular. Topics covered in this video are: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Building Blocks of Web Development&lt;/li&gt;
&lt;li&gt;Introduction to Angular&lt;/li&gt;
&lt;li&gt;Angular Architecture &lt;/li&gt;
&lt;li&gt;Angular Installation &amp;amp; Setup Angular CLI  Files and Folders &lt;/li&gt;
&lt;li&gt;Angular Components&lt;/li&gt;
&lt;li&gt;Angular Templates&lt;/li&gt;
&lt;li&gt;Angular Modules and many more.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;For more tutorials check the collection of &lt;a href="https://dev.to/theme_selection/the-best-angular-tutorials-for-beginners-2022-1cd9"&gt;Angular Tutorials For Beginners&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#books"&gt;
  &lt;/a&gt;
  Books:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#angular-projects-second-edition"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.packtpub.com/product/angular-projects-second-edition/9781800205260"&gt;Angular Projects - Second Edition&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mWfj18tl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jc2hpkmnpbza2b9hztde.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mWfj18tl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jc2hpkmnpbza2b9hztde.png" alt="Angular Projects - Second Edition" width="642" height="882"&gt;&lt;/a&gt;&lt;br&gt;
This updated second edition of Angular Projects will teach you how to build efficient and optimized web applications using Angular. You will learn and explore the fundamental features of the framework by creating ten different real-world web apps. &lt;/p&gt;

&lt;p&gt;Each app will elaborate how to integrate Angular with a different library and tool. As you goes ahead, you will understand how to execute popular technologies such as Angular Router, Electron, Scully, Electron, Nx monorepo tools, Angular service worker, NgRx, and more while building an issue tracking system, and many other exciting projects. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#angular-router"&gt;
  &lt;/a&gt;
  &lt;a href="https://leanpub.com/router"&gt;Angular Router&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This book is a complete description of the Angular router written by its designer. It goes far beyond a how-to-get-started guide and talks about the library in depth. The mental model, design constraints, and the subtleties of the API-everything is covered. Reading this book will give you deep insights into why the router works the way it does and will make you an Angular router expert.&lt;/p&gt;

&lt;p&gt;The book explores the library in depth, including the mental model, design constraints, subtleties of the API.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#angularbuch-german"&gt;
  &lt;/a&gt;
  &lt;a href="https://angular-buch.com/"&gt;Angular-Buch (German)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This book introduces you to the building blocks of Angular, many best practices, and the tools you need to use. Get started with a practical introduction.&lt;/p&gt;

&lt;p&gt;The Book Deals With:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Reactive programming with RxJS&lt;/li&gt;
&lt;li&gt;  State management with Redux and NgRx&lt;/li&gt;
&lt;li&gt;  Testing with Jasmine, Karma and Protractor&lt;/li&gt;
&lt;li&gt;  Routing, guards and modular system&lt;/li&gt;
&lt;li&gt;  HTTP and interceptors&lt;/li&gt;
&lt;li&gt;  Form processing&lt;/li&gt;
&lt;li&gt;  Dependency Injection und Services and many more&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#angular-projects-build-modern-web-apps-by-exploring-angular-12"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.amazon.com/Angular-Projects-exploring-cutting-edge-technologies/dp/1800205260/"&gt;Angular Projects: Build Modern Web Apps by Exploring Angular 12&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BNLtQPUz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7xb6wcjqdjojdcqtfyy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BNLtQPUz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7xb6wcjqdjojdcqtfyy.png" alt="Angular projects" width="642" height="882"&gt;&lt;/a&gt;&lt;br&gt;
As you go through the book, you will learn how to implement popular technologies such as Angular Router, Scully, Electron, Angular service worker, Nx monorepo tools, NgRx, and more while building an issue tracking system, a PWA weather application, a mobile photo geotagging application, a component UI library, and many other exciting projects.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-you-will-learn"&gt;
  &lt;/a&gt;
  What you will learn
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  Set up Angular applications using Angular CLI and Nx Console&lt;/li&gt;
&lt;li&gt;  Create a personal blog with Jamstack and SPA techniques&lt;/li&gt;
&lt;li&gt;  Build desktop applications with Angular and Electron&lt;/li&gt;
&lt;li&gt;  Enhance user experience (UX) in offline mode with PWA techniques&lt;/li&gt;
&lt;li&gt;  Make web pages SEO-friendly with server-side rendering&lt;/li&gt;
&lt;li&gt;  Create a monorepo application using Nx tools and NgRx for state management&lt;/li&gt;
&lt;li&gt;  Focus on mobile application development using Ionic&lt;/li&gt;
&lt;li&gt;  Develop custom schematics by extending Angular CLI &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#the-ngbook-a-complete-book-on-angular"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.amazon.com/ng-book-Complete-Angular-Nathan-Murray/dp/1985170280/"&gt;The Ng-book — A Complete Book on Angular&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9TnQeLqZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fnowtvu6tojof6x6umer.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9TnQeLqZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fnowtvu6tojof6x6umer.jpg" alt="Ng book" width="880" height="1139"&gt;&lt;/a&gt;&lt;br&gt;
ng-book is designed to teach you step-by-step how to create serious Angular apps: from empty-folder to deployment. Each chapter covers a topic and we provide  full code examples  for every project in the book. The book also describes how to write and test mobile apps with NativeScript. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The book covers:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Dependency Injection&lt;/li&gt;
&lt;li&gt;  Data Architecture in Angular 2&lt;/li&gt;
&lt;li&gt;  Data Architecture with Observables and RxJS&lt;/li&gt;
&lt;li&gt;  Data Architecture with Redux&lt;/li&gt;
&lt;li&gt;  Redux and TypeScript&lt;/li&gt;
&lt;li&gt;  Data Architecture with Redux&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Other Useful Books To Learn Angular&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.packtpub.com/web-development/architecting-angular-applications-redux"&gt;Architecting Angular Applications with NGRX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; &lt;a href="https://books.ninja-squad.com/angular"&gt;Becoming a Ninja with Angular&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leanpub.com/developing-with-angular"&gt;Developing with Angular&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gumroad.com/l/essential_angular"&gt;Essential Angular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#ides"&gt;
  &lt;/a&gt;
  IDE's
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Integrated Development Environment&lt;/strong&gt;  (IDE), on the other hand, is a program that simplifies the effort required by developers by optimizing the entire development process and help you in writing flawless code. It helps in integrating the software into the system and analyze the working.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#angular-ide"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.npmjs.com/package/angular-ide"&gt;Angular IDE&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Angular IDE is highly used for faster and effective development. It is a stand-alone plugin that can be used with the Eclipse plugin. It is built specifically for Angular, but initially, it was used for tsconfig.json management.&lt;/p&gt;

&lt;p&gt;The benefits of Angular IDE are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  It offers real-time validation of code, displays errors as you type.&lt;/li&gt;
&lt;li&gt;  It features auto-completion of code in the project&lt;/li&gt;
&lt;li&gt;  It highly uses coloring and highlights the syntax-aware source&lt;/li&gt;
&lt;li&gt;  It features block and full-formatting with advanced settings&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#aptana-studio"&gt;
  &lt;/a&gt;
  &lt;a href="http://www.aptana.com/"&gt;Aptana Studio&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It is an open-source IDE for Angular. You can add the AngularJS Eclipse extension. It is suitable for many other frameworks as well as libraries. It is based on Eclipse and is highly used for JavaScript development. It comes both as a stand-alone version and an Eclipse Plug-in. It also has a fully-integrated Ruby &amp;amp; Rails debugger to use its features to be the most professional-grade product.&lt;/p&gt;

&lt;p&gt;Benefits of Aptana Studio are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  It supports other Testing tools&lt;/li&gt;
&lt;li&gt;  It has the Deployment wizard&lt;/li&gt;
&lt;li&gt;  It can be quickly and thoroughly customized&lt;/li&gt;
&lt;li&gt;  In-built terminal&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#alm-ide"&gt;
  &lt;/a&gt;
  &lt;a href="http://alm.tools/"&gt;ALM IDE&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;ALM IDE is a cloud-based ide available for TypeScript. It enables you to code quickly in TypeScript projects. You can easily install it with just a single npm command. It is easy to use, and it removes all the barriers to use TypeScript. You can even develop TypeScript projects on Raspberry π.&lt;/p&gt;

&lt;p&gt;The benefits of using ALM are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  It makes it easy to use TypeScript&lt;/li&gt;
&lt;li&gt;  Lightweight&lt;/li&gt;
&lt;li&gt;  Made for TypeScript&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Other Useful IDE for Angular:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.genuitec.com/products/angular-ide"&gt;Angular IDE by Webclipse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jetbrains.com/idea/"&gt;IntelliJ IDEA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jetbrains.com/webstorm/"&gt;WebStorm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#documentation-tools"&gt;
  &lt;/a&gt;
  Documentation tools:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/storybooks/storybook"&gt;Storybook&lt;/a&gt; : The UI development environment you'll love to use&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/compodoc/compodoc"&gt;Compodoc&lt;/a&gt; : The missing documentation tool for your Angular 2 application, integrate well with npm scripts&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/politie/ngmodule-viz"&gt;NgModule-Viz&lt;/a&gt; : Visualize the dependencies between the NgModules in your Angular 2+ application.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Jamaks/ng-app-counter"&gt;ng-app-counter&lt;/a&gt; : Count the number of Modules, Lazy Modules, Pipes, Providers, Directives, Components used in an Angular application.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#developer-tools"&gt;
  &lt;/a&gt;
  Developer tools:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://chrome.google.com/webstore/detail/angular-state-inspector/nelkodgfpddgpdbcjinaaalphkfffbem"&gt;Angular State Inspector&lt;/a&gt; - Helps you debug Angular component state. Supports Angular 1/2+/Ivy.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://augury.rangle.io/"&gt;Augury&lt;/a&gt; - Browser extension for debugging and profiling Angular applications.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://codesandbox.io/s/angular-angular"&gt;CodeSandbox&lt;/a&gt; - An online IDE and prototyping tool for rapid Angular development.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://bugfender.com/platforms/angular-logging/"&gt;Bugfender&lt;/a&gt; - A cloud service to collect logs and Angular errors in Real-Time.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;Here we have mentioned some of the very useful Angular resources. While you are working with the Angular project you'll surely need some tools, UI component libraries, admin templates, video tutorials, etc. So, to help you save your time we have gathered some amazing resources here so that you don't have to search here and there. &lt;/p&gt;

&lt;p&gt;We are open to suggestions so do tell us which other resources can be included in the list. Also, don't forget to share and bookmark this collection.&lt;/p&gt;

&lt;p&gt;We hope you find this collection useful.🙂&lt;/p&gt;

</description>
      <category>angular</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
