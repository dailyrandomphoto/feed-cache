<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Introducing Cube Store: High concurrency and sub-second latency for any database</title>
      <author>Igor Lukanin</author>
      <pubDate>Thu, 29 Apr 2021 17:49:14 +0000</pubDate>
      <link>https://dev.to/cubejs/introducing-cube-store-high-concurrency-and-sub-second-latency-for-any-database-3n6n</link>
      <guid>https://dev.to/cubejs/introducing-cube-store-high-concurrency-and-sub-second-latency-for-any-database-3n6n</guid>
      <description>&lt;p&gt;&lt;strong&gt;TL;DR: &lt;a href="https://cube.dev?ref=introducing-cubestore"&gt;Cube.js&lt;/a&gt; is a popular open-source tool to build analytical APIs. With the release of Cube Store, a performant distributed data store written in Rust, Cube.js is ready to provide high concurrency and sub-second latency for any SQL-compliant database, data warehouse, or query engine (e.g., PostgreSQL, BigQuery, or AWS Athena).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can use open-source &lt;a href="https://github.com/cube-js/cube.js"&gt;Cube.js&lt;/a&gt; and &lt;a href="https://github.com/cube-js/cube.js/tree/master/rust"&gt;Cube Store&lt;/a&gt; to build an analytical API that will respond to highly concurrent requests from your application with sub-second latency regardless of data volume or workload. Even if you have a billion-scale dataset and thousands of concurrent users, Cube.js and Cube Store will get you covered.&lt;/p&gt;

&lt;p&gt;Cube Store, the custom pre-aggregation storage layer for Cube.js, is now generally available and strongly recommended for use in production. Let's explore the motivation and design decisions behind Cube Store and learn more about the benefits of using Cube Store for new and existing Cube.js users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-cube-store"&gt;
  &lt;/a&gt;
  Why Cube Store?
&lt;/h2&gt;

&lt;p&gt;Cube.js is an open-source analytical API platform that allows developers to build an analytical API and a semantic layer based on data schema over any SQL-compliant data store. In the simplest scenario, Cube.js uses in-memory cache and query queue to provide better performance than the data store is able to deliver. However, it's usually the least scalable and cost-effective solution, so it's not recommended for production.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zTLZhZJa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/e8dbf9eb-5ce2-4b3f-ac44-2954ef4f6824.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zTLZhZJa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/e8dbf9eb-5ce2-4b3f-ac44-2954ef4f6824.png" alt="cube store-04-3-03.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In a real-world scenario, Cube.js speeds up analytical queries using pre-aggregations.&lt;/strong&gt; These are the condensed representations of source data that are pre-computed, partitioned, stored, and refreshed in a way that allows for super-fast execution of select queries.&lt;/p&gt;

&lt;p&gt;Historically, pre-aggregations were stored &lt;em&gt;internally&lt;/em&gt;, alongside the source data in a database (e.g., PostgreSQL or MySQL), or &lt;em&gt;externally&lt;/em&gt;, in a custom-provisioned instance of PostgreSQL or MySQL, as the only feasible option for read-only or cost-ineffective data sources (e.g., AWS Athena or BigQuery). Usually, they will be renewed asyncronously by a dedicated refresh worker instance. It's an acceptable solution, however, the pre-aggregation database becomes a bottleneck and limits the scalability of the analytical API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LiaCmJxM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/ac22387e-7c1c-4c70-9a35-430f789a7cfb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LiaCmJxM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/ac22387e-7c1c-4c70-9a35-430f789a7cfb.png" alt="cube store-04-2-03.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pre-aggregations in traditional databases often won't allow for high concurrency and low latency of the analytical API.&lt;/strong&gt; They also were the source of frustration due to poor performance in important use cases (e.g., with high cardinality of pre-aggregated data, with partitioned data, with joins across several databases), unsupported features (e.g., approximate distinct counts via HyperLogLog algorithm), or implementation details (e.g., support for long table names or support for various SQL types).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cube Store is designed to resolve these issues and provide a performant pre-aggregation storage layer for Cube.js.&lt;/strong&gt; It's a drop-in replacement for any currently used pre-aggregation storage and the go-to solution for new Cube.js apps. Being a distributed data store itself, Cube Store can be scaled horizontally with ease and predictability. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ij5USTZm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/4f6d753e-77d2-4d46-964f-8d2512ff9a18.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ij5USTZm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/4f6d753e-77d2-4d46-964f-8d2512ff9a18.png" alt="cube store-04-1-03.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;From now on, Cube Store is the recommended pre-aggregation storage layer for production use.&lt;/strong&gt; It doesn't have the limitations of other databases used to store pre-aggregations. On top of that, Cube Store provides guaranteed high concurrency and sub-second latency, performance optimizations for analytical queries, and additional features such as data federation via cross-database joins. You'll get these advantages of Cube Store regardless of your data source and the data volume.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--irJ71cNg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/67ac0250-4bda-4028-ae56-ec23324bcebf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--irJ71cNg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/67ac0250-4bda-4028-ae56-ec23324bcebf.png" alt="cube store-01-03.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-cube-store-works"&gt;
  &lt;/a&gt;
  How Cube Store works
&lt;/h2&gt;

&lt;p&gt;Cube Store uses a well-known and proven distributed query engine architecture. In every Cube Store cluster:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a single &lt;em&gt;router&lt;/em&gt; node handles incoming connections, manages database metadata, builds query plans, and orchestrates their execution&lt;/li&gt;
&lt;li&gt;multiple &lt;em&gt;worker&lt;/em&gt; nodes ingest warmed up data and execute queries in parallel&lt;/li&gt;
&lt;li&gt;a local or cloud-based blob storage keeps pre-aggregated data in columnar format&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1JyGjaSi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/db0e1aeb-3101-4280-b4a4-902e21bcd9a0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1JyGjaSi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/db0e1aeb-3101-4280-b4a4-902e21bcd9a0.png" alt="cube store-03-03.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cube Store was designed with performance in mind.&lt;/strong&gt; It's written entirely in Rust to leverage low-level optimizations, effectively making Rust the top-1 language by lines of code in Cube.js codebase. Cube Store allows for almost unlimited horizontal scalability by increasing the number of worker nodes. It stores pre-aggregated data in Parquet format which was deliberately chosen for its efficiency and performance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cube Store is based on well-known open-source building blocks.&lt;/strong&gt; Together with &lt;a href="https://en.wikipedia.org/wiki/Apache_Parquet"&gt;Parquet&lt;/a&gt;, Cube Store uses &lt;a href="https://github.com/apache/arrow"&gt;Apache Arrow&lt;/a&gt; for its efficient in-memory data structures and &lt;a href="https://github.com/apache/arrow/tree/master/rust/datafusion"&gt;DataFusion&lt;/a&gt; as a query execution framework.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cube Store has been used in &lt;a href="https://cube.dev/cloud/?ref=introducing-cubestore"&gt;Cube Cloud&lt;/a&gt; for more than 6 months.&lt;/strong&gt; A few select early access users have been exposed to Cube Store in Cube Cloud and experienced substantial performance improvements thanks to Cube Store.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-cube-store"&gt;
  &lt;/a&gt;
  How to use Cube Store
&lt;/h2&gt;

&lt;p&gt;Cube Store is ready to be used while developing new Cube.js applications and also as a drop-in replacement for the pre-aggregation storage layer in existing Cube.js apps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Development.&lt;/strong&gt; When Cube.js is run in &lt;a href="https://cube.dev/docs/configuration/overview?ref=introducing-cubestore#development-mode"&gt;development mode&lt;/a&gt;, a single-node in-process instance of Cube Store is enabled. It requires zero configuration and allows to instantly use the pre-aggregations. All you need is to mark them as &lt;em&gt;external&lt;/em&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;cube&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Cube`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`select * from table`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

  &lt;span class="na"&gt;preAggregations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;main&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`rollup`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;external&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

      &lt;span class="c1"&gt;// ...&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Cube.js will build pre-aggregations and store them in Cube Store. You can review the console output of Cube.js to see if queries are served using pre-aggregations. You can also see matched rollups on the Cache tab in Cube.js Developer Playground available at &lt;a href="http://localhost:4000"&gt;localhost:4000&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Production.&lt;/strong&gt; A Cube Store cluster should be run in production and consist of a single router instance and several worker instances. There's an official &lt;code&gt;cubejs/cubestore&lt;/code&gt; &lt;a href="https://hub.docker.com/r/cubejs/cubestore"&gt;Docker image&lt;/a&gt; as well as a &lt;a href="https://cube.dev/docs/caching/using-pre-aggregations?ref=introducing-cubestore#running-in-production"&gt;Docker Compose template&lt;/a&gt; you can use as a starting point.&lt;/p&gt;

&lt;p&gt;Just like Cube.js, Cube Store can be configured via &lt;a href="https://cube.dev/docs/reference/environment-variables?ref=introducing-cubestore#cube-store"&gt;environment variables&lt;/a&gt;, e.g., Cube Store nodes assume the worker role when &lt;code&gt;CUBESTORE_WORKER_PORT&lt;/code&gt; is set and ingest pre-aggregated data from the blob storage specified with &lt;code&gt;CUBESTORE_GCS_BUCKET&lt;/code&gt; or &lt;code&gt;CUBESTORE_S3_BUCKET&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benchmarks.&lt;/strong&gt; Depending on the currently used pre-aggregation storage and the data volume, after switching to Cube Store, you can expect your API performance to stay at least at the same level or increase substantially. You can review and use a &lt;a href="https://github.com/cube-js/cube.js/tree/master/examples/cubestore-benchmark"&gt;benchmark template&lt;/a&gt; leveraging &lt;a href="https://k6.io"&gt;k6&lt;/a&gt;, an open-source load testing tool, to do your own measurements prior to switching to Cube Store.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ef6yWPeQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/13a9bde1-5ddb-4b09-a7b1-d683acaaa42e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ef6yWPeQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/13a9bde1-5ddb-4b09-a7b1-d683acaaa42e.png" alt="cube store-02-03.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next steps
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Here at the Cube.js team, we wholeheartedly encourage you to use Cube Store in development and consider migrating your production deployments to Cube Store as well.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Get started with &lt;a href="https://cube.dev?ref=introducing-cubestore"&gt;Cube.js&lt;/a&gt; today. Review the &lt;a href="https://forum.cube.dev/t/v0-27-release-notes/128"&gt;release notes&lt;/a&gt; and &lt;a href="https://cube.dev/docs/caching/using-pre-aggregations?ref=introducing-cubestore#pre-aggregations-storage"&gt;documentation&lt;/a&gt;, share your experience in the &lt;em&gt;#cube-store&lt;/em&gt; channel in &lt;a href="https://slack.cube.dev?ref=introducing-cubestore"&gt;Slack&lt;/a&gt; or post to &lt;a href="https://forum.cube.dev"&gt;Discourse&lt;/a&gt;, and don't hesitate to file Cube Store-related issues on &lt;a href="https://github.com/cube-js/cube.js/issues"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also, feel free to sign up for the waiting list of &lt;a href="https://cube.dev/cloud/?ref=introducing-cubestore"&gt;Cube Cloud&lt;/a&gt; which provides a fully managed Cube Store cluster for all deployments. Cube Cloud is currently in early access but will be generally available later this year.&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>database</category>
      <category>webdev</category>
      <category>rust</category>
    </item>
    <item>
      <title>Avoiding flash of unwanted animation on first render in React</title>
      <author>Thomas Ledoux</author>
      <pubDate>Thu, 29 Apr 2021 17:46:53 +0000</pubDate>
      <link>https://dev.to/thomasledoux1/avoiding-flash-of-unwanted-animation-on-first-render-in-react-1o0c</link>
      <guid>https://dev.to/thomasledoux1/avoiding-flash-of-unwanted-animation-on-first-render-in-react-1o0c</guid>
      <description>&lt;p&gt;While developing my personal website, I noticed that my mobile menu appeared for a split second and then moved out of the screen.&lt;br&gt;
My mobile menu is placed on the right side of the screen by using the following CSS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.navigation&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To make the menu come into the screen smoothly, I used the following CSS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.navigation&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transition-property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition-timing-function&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cubic-bezier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;transition-duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150ms&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By adding this transition in my initial CSS, the menu will be transformed to the right side of the screen but with a duration of 150ms, so this will be clearly visible when the page loads.&lt;br&gt;
To avoid this behaviour, I had to find a way to only apply the transition once the React app is already mounted.&lt;br&gt;
For this use case, I found a custom &lt;code&gt;useIsMounted&lt;/code&gt; hook useful.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useIsMounted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isMounted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;isMounted&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;isMounted&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;isMounted&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;useIsMounted&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then in my component, I can easily import this hook and use it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Navigation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isMounted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useIsMounted&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`navigation &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;isMounted&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mounted&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;My CSS then becomes this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.navigation.mounted&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transition-property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition-timing-function&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cubic-bezier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;transition-duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150ms&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's it! No more unwanted animations on page load. &lt;br&gt;
This will also help to increase your Cumulative Layout Shift (&lt;a href="https://web.dev/cls"&gt;https://web.dev/cls&lt;/a&gt;) if you were encountering the same thing as I was, because your layout will not shift anymore, so it's a win-win!&lt;br&gt;
You can see the end result here: &lt;a href="https://thomasledoux.be"&gt;https://thomasledoux.be&lt;/a&gt; (I use Tailwind on my site, so the example code is not exactly the same).&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>css</category>
      <category>animations</category>
    </item>
    <item>
      <title>10 Entry-Level Tech Jobs for Junior Developers</title>
      <author>Ryan Thelin</author>
      <pubDate>Thu, 29 Apr 2021 17:30:23 +0000</pubDate>
      <link>https://dev.to/educative/10-entry-level-tech-jobs-for-junior-developers-3277</link>
      <guid>https://dev.to/educative/10-entry-level-tech-jobs-for-junior-developers-3277</guid>
      <description>&lt;p&gt;So you've finished your computer science bachelor's degree or Bootcamp education and are ready to jump into the software development job market, but it seems like every developer job needs 3-5 years of experience. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;How does that work?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Don't worry. Junior Software Developer roles are here to help. &lt;/p&gt;

&lt;p&gt;These jobs are designed for fresh developers like you to get practical development experience on the job. They're essentially entry-level paid apprenticeships that can get you those crucial years of experience that'll jumpstart your career. There is the standard Junior Software Developer role, but there are also many adjacent jobs that you might not think of.&lt;/p&gt;

&lt;p&gt;Today, we'll go over some of the unexpected jobs to finalize your transition from graduate to full-time software developer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here’s what we’ll cover today:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what"&gt;What is a Junior Developer?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#test"&gt;1. Test Developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#QA"&gt;2. QA Tester&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#support"&gt;3. Technical Support Engineer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#editor"&gt;4. Web Editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#content-manager"&gt;5. Web Content Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tech-writer"&gt;6. Technical Writer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web"&gt;7. Junior Web Designer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mobile"&gt;8. Junior Mobile Developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data"&gt;9. Junior Data Analyst&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#solutions"&gt;10. Junior Solutions Architect&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#how"&gt;How to apply for jobs&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;h4&gt;&lt;b&gt; Have a plan for every stage of your career&lt;/b&gt;&lt;/h4&gt;
 

&lt;p&gt;Educative's comprehensive Career Handbook will help you make the right decision for your career from start to finish.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a href="https://www.educative.io/courses/coding-career-handbook"&gt;The Coding Career Handbook&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-junior-developer"&gt;
  &lt;/a&gt;
  What is a Junior Developer?
&lt;/h2&gt;

&lt;p&gt;A &lt;a href="https://www.educative.io/blog/junior-developer-survival-guide"&gt;junior developer&lt;/a&gt; role is an entry-level programmer position that allows you to get familiar with your company's codebase and build your software engineer skills at the workplace. You'll start off doing smaller tasks like troubleshooting, applying bug fixes, and updating existing code, but you will quickly build up to developing minor features. &lt;/p&gt;

&lt;p&gt;Employers expect Junior developers to be avid learners, not experts off the start. They want you to do your best, ask questions and make mistakes. You'll usually work with a mid-level or senior developer in a cooperative or pair programming environment. Your mentor will help answer your questions and will give you feedback about how to improve.&lt;/p&gt;

&lt;p&gt;Most Junior Developers come in with knowledge of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Popular languages like &lt;a href="https://www.educative.io/blog/php-tutorial-from-scratch"&gt;PHP&lt;/a&gt;, Python, or Java&lt;/li&gt;
&lt;li&gt;Standard front-end developer tools like &lt;a href="https://www.educative.io/blog/what-is-nodejs"&gt;Node.js&lt;/a&gt; or &lt;a href="https://www.educative.io/blog/ruby-on-rails"&gt;Ruby on Rails&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Back-end tools like SQL databases and &lt;a href="https://www.educative.io/blog/mysql-tutorial"&gt;MySQL&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Industry concepts like Agile development or DevOps&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Picking a Junior dev role in your target field or technology is a great way to start building your career. Junior Developer is a springboard to other roles because it lets you build technical skills, experience with the company, and proves your ability to work in a professional environment. &lt;/p&gt;

&lt;p&gt;While Junior Developer jobs are most common in large &lt;a href="https://www.educative.io/blog/why-a-faang-company-may-not-be-right-for-you"&gt;FAANG companies&lt;/a&gt;, you can find them in surprising places and fields.&lt;/p&gt;

&lt;p&gt;Let's take a look at some Junior-level jobs you might not think to apply for.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hSJ0daEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pos78z7eah67ww51lz2s.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hSJ0daEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pos78z7eah67ww51lz2s.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-test-developer"&gt;
  &lt;/a&gt;
  1. Test Developer
&lt;/h2&gt;

&lt;p&gt;Test Developers focus on creating tests to evaluate current or upcoming features for bugs and performance. In some jobs, you may also be in charge of developing a solution to small-scale bugs that you find. Your day-to-day work will be recognizing test conditions, building automation tests, and preparing reports on the product's performance.&lt;/p&gt;

&lt;p&gt;Test Developer is a great role for someone who enjoys working with the nitty-gritty elements of a system. You'll need a good understanding of troubleshooting techniques, test script creation, and some experience with debugging/testing tools like &lt;a href="https://www.educative.io/blog/performance-testing-tutorial-gatling-jenkins"&gt;Jenkins&lt;/a&gt; or &lt;a href="https://www.educative.io/blog/7-coding-tools-to-maximize-effectiveness#reflect"&gt;Reflect&lt;/a&gt;. The Test Developer role is a great way to get experience applicable in both feature development and support roles.&lt;/p&gt;

&lt;p&gt;This role is very similar to a Quality Assurance (QA) Tester but requires more hands-on developer knowledge of the internal code rather than just the user-facing portion. Test Developers make a &lt;strong&gt;median annual salary of $70,000&lt;/strong&gt; in the U.S.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Experience writing automation tests and test scripts&lt;/li&gt;
&lt;li&gt;Familiarity with testing tools like Jenkins, Reflect, and Git&lt;/li&gt;
&lt;li&gt;Attention to detail&lt;/li&gt;
&lt;li&gt;Familiarity with popular programming languages like Java or PHP&lt;/li&gt;
&lt;li&gt;Comfortable diagnosing and solving bugs by yourself&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-qa-tester"&gt;
  &lt;/a&gt;
  2. QA Tester
&lt;/h2&gt;

&lt;p&gt;Similar to Test Developers, Quality Assurance (QA) Testers measure product progress by generating, running, and analyzing product feature tests. The QA Tester differs in that they test the product as the final step in the development process to ensure all features meet the original design expectations.&lt;/p&gt;

&lt;p&gt;In Agile Development structures, QA Testers develop tests before any work begins and are a pivotal part of the process at every step. While Test Developers may sometimes come up with solutions themselves, QA Testers are focused on extensively testing the product before it reaches users.&lt;/p&gt;

&lt;p&gt;QA Tester will be a good fit for you if you have attention to detail but would rather focus all your attention on testing and documenting results. All companies that ship a product need a QA Tester, so it’s a great foot-in-the-door job to get you started. &lt;/p&gt;

&lt;p&gt;QA Tester is a widespread role available across all industries and makes a &lt;strong&gt;median annual salary of $47,000&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Experience writing automation tests and test scripts&lt;/li&gt;
&lt;li&gt;Familiarity with testing tools like Jenkins, Reflect, and Git&lt;/li&gt;
&lt;li&gt;Attention to detail&lt;/li&gt;
&lt;li&gt;Analytic skills to measure product performance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EAoSmBqr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7y40gmqgb3v3sjxqm74.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EAoSmBqr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7y40gmqgb3v3sjxqm74.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-technical-support-engineer"&gt;
  &lt;/a&gt;
  3. Technical Support Engineer
&lt;/h2&gt;

&lt;p&gt;Technical Support or Technical Support Engineers diagnose and resolve technical problems experienced by either fellow employees or end-users. &lt;/p&gt;

&lt;p&gt;Internally focused Technical Support roles are often in non-technical environments like schools or hospitals. You usually work on-site to solve problems with company devices. &lt;/p&gt;

&lt;p&gt;User-facing Technical Support is often a desk or remote position that involves discussing technical issues with customers and solving or explaining a solution to the customers.&lt;/p&gt;

&lt;p&gt;These roles are great for people that want to work with people and enjoy variability in their daily tasks. You'll gain experience with technologies across all segments of the company and master problem-solving techniques that's usable throughout your career. As more non-technical companies begin to adopt modern computer infrastructures, this role will become increasingly sought after.&lt;/p&gt;

&lt;p&gt;Technical Support Engineers make a &lt;strong&gt;median annual salary of $71,000&lt;/strong&gt; in the U.S.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Effective and concise explanation of technical concepts&lt;/li&gt;
&lt;li&gt;Basic scripting skills, mostly in Java and JavaScript&lt;/li&gt;
&lt;li&gt;Experience with Mac, PC, and Linux operating systems&lt;/li&gt;
&lt;li&gt;Computer networking knowledge in servers and database management&lt;/li&gt;
&lt;li&gt;Experience with the company's main technologies or devices&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-web-editor"&gt;
  &lt;/a&gt;
  4. Web Editor
&lt;/h2&gt;

&lt;p&gt;Web Editors edit and format any content for their company's site or mobile application. This role combines skills in web development and copywriting to ensure content is delivered to users in its best possible state. You may also be responsible for creating daily or weekly content of your own such as blog posts or new product pages.&lt;/p&gt;

&lt;p&gt;A Web Editor is ideal for people who have expertise or interest in both writing and technology. &lt;/p&gt;

&lt;p&gt;You'll need a baseline level of technical knowledge in programming and web development to fully understand the content you're editing. It's also helpful to have experience with search engine optimization (SEO) tools but usually not required off the start. Web Editor sets you up well to transition to either technical development or brand-related marketing later in your career.&lt;/p&gt;

&lt;p&gt;Web Editors are often hired at tech companies or startups and make a &lt;strong&gt;median annual salary of $52,000&lt;/strong&gt; in the U.S.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Beginner experience in computer science topics&lt;/li&gt;
&lt;li&gt;Some experience in popular programming languages &lt;/li&gt;
&lt;li&gt;Expert writing and editing skills&lt;/li&gt;
&lt;li&gt;Some experience with SEO tools/concepts&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;
  &lt;a href="#keep-the-learning-going" class="anchor"&gt;
  &lt;/a&gt;
  Keep the learning going.
&lt;/h4&gt;

&lt;p&gt;Answer all of your Junior Developer questions in one place. Educative's text-based Career Handbook ensures you're never in the dark, no matter what stage of your career you're at. This handbook will answer your questions, offer insightful tips, and carry you through to the next stage.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a href="https://www.educative.io/courses/coding-career-handbook"&gt;The Coding Career Handbook&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S5qJzEKK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xo5e2cqo11qr7mczupgb.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S5qJzEKK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xo5e2cqo11qr7mczupgb.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-web-content-manager"&gt;
  &lt;/a&gt;
  5. Web Content Manager
&lt;/h2&gt;

&lt;p&gt;Similar to Web Editors, Web Content Managers have a hand in all digital content released by the company. The difference is that Web Content Managers are more administrative and rarely write content. Instead, they serve as the endpoint for content generated across multiple teams, acting as a final check for style, formatting, and SEO before publishing. You'll also check the performance of each piece and come up with solutions to increase customer engagement with content.&lt;/p&gt;

&lt;p&gt;Web Content Manager is ideal for people that have an interest in analytics and public relations careers. It's also one of the few entry-level positions that include the "Manager" title, which can make a big difference to future recruiters. &lt;/p&gt;

&lt;p&gt;Organizational skill is important for this job since you keep the content pipeline moving on time.  You'll also need experience with organizational tools like Excel, content management tools like WordPress, and strong editing skills.&lt;/p&gt;

&lt;p&gt;Web Content Managers are most common in large eCommerce companies that regularly generate lots of digital content and make a &lt;strong&gt;median annual salary of $82,000&lt;/strong&gt; in the U.S.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Excel, WordPress, and Office proficiency&lt;/li&gt;
&lt;li&gt;Strong editing and proofreading skills&lt;/li&gt;
&lt;li&gt;Excellent organizational reasoning and planning skills&lt;/li&gt;
&lt;li&gt;Ability to recognize and replicate the style&lt;/li&gt;
&lt;li&gt;Familiarity with SEO is a plus&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-technical-writer"&gt;
  &lt;/a&gt;
  6. Technical Writer
&lt;/h2&gt;

&lt;p&gt;Technical Writers write clear and concise documentation for newly developed product features. &lt;/p&gt;

&lt;p&gt;You'll be responsible for learning the key components of each product to write user instructions, FAQs, and internal 1-pagers. While not writing code directly, Technical Writers need extensive knowledge of coding and development to help them accurately describe a product. Essentially, technical writers translate the developer-side product logic into a user-friendly form.&lt;/p&gt;

&lt;p&gt;Technical Writer is a good role for those that have some education in technical concepts but would prefer to work in writing rather than code. This role is one of the highest-paying entry-level jobs for developers and can be a viable career path from start to finish. You'll need strategic communications skills and ample examples of your concise writing. Most developers get this experience from writing documentation for &lt;a href="https://www.educative.io/blog/what-is-open-source-software-guide"&gt;open-source&lt;/a&gt; projects on Github or other online platforms.&lt;/p&gt;

&lt;p&gt;Technical Writer roles are available at all sizes of the tech company and make a &lt;strong&gt;median annual salary of $61,000&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Extensive skills in concise written communication and editing&lt;/li&gt;
&lt;li&gt;Strong background in computer science&lt;/li&gt;
&lt;li&gt;Skills in product functionality research and exploration&lt;/li&gt;
&lt;li&gt;Analytical mindset able to deconstruct products into their most important parts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gP06Cl99--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qpfyenm08dp7tn1c2mdw.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gP06Cl99--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qpfyenm08dp7tn1c2mdw.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-junior-web-designer"&gt;
  &lt;/a&gt;
  7. Junior Web Designer
&lt;/h2&gt;

&lt;p&gt;Junior Web Designers work as apprentices to more experienced web designers, designing asset templates and handling formatting tasks. You'll be responsible for creating minor elements of a site, testing different UI styles, creating mock-ups for design presentations, and overall helping to reduce strain on senior web designers. &lt;/p&gt;

&lt;p&gt;Once you've worked there for a while, you can expect to become more independent and will have the opportunity to design your own pages from scratch.&lt;/p&gt;

&lt;p&gt;Junior Web Designer is a great job for more artistically inclined applicants that want to focus on the UI/UX side of web development. Junior Web Designer is a more design-focused version of Junior Web Developer. You'll be able to experience a wide variety of tasks helping across the design team and develop your own professional portfolio. &lt;/p&gt;

&lt;p&gt;Most Junior Web Designers work at mid to large-scale eCommerce companies and make a &lt;strong&gt;median annual salary of $48,000&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTML, CSS, and JavaScript skills&lt;/li&gt;
&lt;li&gt;Experience with Photoshop or similar illustration software to make mock-ups&lt;/li&gt;
&lt;li&gt;Strong design and style&lt;/li&gt;
&lt;li&gt;Front-end framework experience is a plus&lt;/li&gt;
&lt;li&gt;Experience with reactive design is a plus&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-junior-mobile-developer"&gt;
  &lt;/a&gt;
  8. Junior Mobile Developer
&lt;/h2&gt;

&lt;p&gt;Junior Mobile Developers are full-stack developers that assist a small team to develop all aspects of a company's mobile application on iOS, Android, and beyond. Your responsibilities are to learn the codebase, attend design meetings, write basic app features, fix bugs as they arise, and help the development manager in design tasks. &lt;/p&gt;

&lt;p&gt;Once you earn some experience, you'll be assigned to create more complex app features or contribute to design decision-making.&lt;/p&gt;

&lt;p&gt;Junior Mobile Developer is right for you if you're interested in working on every part of a product and have split-interest between front-end and back-end development. Most companies these days have a mobile app. This job prepares you to work at any number of companies designing and finetuning their applications. Experience with front-end skills like UI design and back-end tools like API integration are both essential. &lt;/p&gt;

&lt;p&gt;You'll need experience with Swift if you work with iOS and &lt;a href="https://www.educative.io/blog/how-to-develop-an-android-app"&gt;Kotlin&lt;/a&gt; if you work with Android. Since this is such a broad job, you'll need a portfolio of some previous work to demonstrate your skills and style.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Experience with UI design and front-end tools&lt;/li&gt;
&lt;li&gt;Experience with back-end skills like database and API integration&lt;/li&gt;
&lt;li&gt;Familiarity with Swift, Kotlin, or other mobile application development tools&lt;/li&gt;
&lt;li&gt;Experience implementing common mobile application behavior like &lt;a href="https://www.educative.io/blog/5-minute-guide-to-push-notifications-in-pwa"&gt;Push Notifications&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Versatility and adaptability&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bWq_YAip--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oc1epbbkc5eb1ofbargm.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bWq_YAip--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oc1epbbkc5eb1ofbargm.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-junior-data-analyst"&gt;
  &lt;/a&gt;
  9. Junior Data Analyst
&lt;/h2&gt;

&lt;p&gt;While data scientists work on creating machine learning models and presenting data-driven findings, Junior Data Analysts work closely with raw data. You'll be responsible for collecting data from multiple sources, cleaning initial data, recognizing broad trends, and creating visualizations. &lt;/p&gt;

&lt;p&gt;You'll often work with a senior data scientist who will handle complex tasks and will communicate the findings to appropriate stakeholders. In smaller or less technical environments, you'll be responsible for communicating findings.&lt;/p&gt;

&lt;p&gt;Junior Data Analyst is good for highly detail-oriented workers that aspire to become data scientists. Your time as a Junior Data Analyst will allow you to work closely with existing data scientists and familiarize yourself with how data is used in modern business. You'll need to have knowledge of Python, some experience with visualization tools like &lt;a href="https://www.educative.io/blog/d3js-tutorial"&gt;D3&lt;/a&gt; or Matplotlib, and data research skills.&lt;/p&gt;

&lt;p&gt;Most Junior Data Analyst jobs will be in tech or finance companies and make a &lt;strong&gt;median annual salary of $64,000&lt;/strong&gt; in the U.S.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python and JavaScript&lt;/li&gt;
&lt;li&gt;Experience with one or more data cleaning techniques&lt;/li&gt;
&lt;li&gt;Strong research skills and attention to detail&lt;/li&gt;
&lt;li&gt;Experience with recognizing data trends&lt;/li&gt;
&lt;li&gt;Ability to communicate findings in an approachable manner&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-junior-solutions-architect"&gt;
  &lt;/a&gt;
  10. Junior Solutions Architect
&lt;/h2&gt;

&lt;p&gt;Junior Solutions Architects help senior Solutions Architects in their duties as an intermediary between a development team and executives. You'll help translate abstract goals into incremental, actionable steps and frequently monitor progress. You and the Solutions Architect essentially act as translators from business goals to the technical team developing the solution.&lt;/p&gt;

&lt;p&gt;Junior Solutions Architect is a great role for those that have split expertise in planning and foundational technical skills. This position sets you up for similar leadership roles like &lt;a href="https://www.educative.io/blog/product-management-lifecycle"&gt;Product Manager&lt;/a&gt; or &lt;a href="https://www.educative.io/blog/tpm-roadmap"&gt;Technical Product Manager&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Companies are always looking for candidates who have a computer science degree or equivalent education to ensure they're highly connected to the developer team. You have to intimately understand your developer team and the broad problems facing the company. &lt;/p&gt;

&lt;p&gt;Most Junior Solutions Architects work in large tech companies and make a &lt;strong&gt;median annual salary of $108,000&lt;/strong&gt; in the U.S.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Foundational computer science knowledge in popular programming languages and tools&lt;/li&gt;
&lt;li&gt;Problem diagnosis and solution building skills&lt;/li&gt;
&lt;li&gt;Intune with the developer culture and needs&lt;/li&gt;
&lt;li&gt;Leadership, interpersonal, and business communication skills&lt;/li&gt;
&lt;li&gt;Experience with progress tracking software like JIRA&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-apply-for-jobs"&gt;
  &lt;/a&gt;
  How to apply for jobs
&lt;/h2&gt;

&lt;p&gt;Now that you know some more entry-level Junior Developer jobs you can apply for, it's time to &lt;a href="https://www.educative.io/blog/land-tech-job-advice"&gt;plan your application process&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First, create an application plan. It's important to create incremental goals rather than just "get hired" to avoid burnout and keep yourself on track. Set deadlines for each goal that is tight but not unreasonable. It's also important to set a target number of applications you want to do per week to keep you on track.&lt;/p&gt;

&lt;p&gt;Here are some additional steps you'll want to include in your plan:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Compile a list of all the positions/companies you want to apply for. Try to organize jobs by company or job type.&lt;/li&gt;
&lt;li&gt;Update your resume, Linkedin, and Cover Letter 

&lt;ul&gt;
&lt;li&gt;Include official titles and measurable results&lt;/li&gt;
&lt;li&gt;Remove any vertical columns to avoid errors with the company's resume scrapers&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Tailor your resume to match the company or job type of the particular job using the categories you made. Include keywords from the job description and company values.&lt;/li&gt;
&lt;li&gt;Spend 30min to 1hr per day expanding your Linkedin network&lt;/li&gt;
&lt;li&gt;Reach out to people you know working at the company you're interested in. Whether entry-level or a senior developer, they can tell you about the company and give feedback on your resume.&lt;/li&gt;
&lt;li&gt;Keep practicing your skills and expanding your portfolio with freelance or open-source projects.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Having a clear plan is key to advancing your career at any stage. To ensure you always have the info you need at any step of your career, Educative has created &lt;a href="https://www.educative.io/courses/coding-career-handbook"&gt;&lt;strong&gt;The Coding Career Handbook&lt;/strong&gt;&lt;/a&gt;. This career roadmap includes tips for junior, mid-level, and senior developers as well as in-depth sections on major stress points like pay negotiations, upskilling, and avoiding burnout. Having this invaluable resource at your disposal will ensure you make optimal choices for your career at every stage.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Happy learning!&lt;/em&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#continue-reading-about-tech-careers"&gt;
  &lt;/a&gt;
  Continue reading about tech careers
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/land-tech-job-advice"&gt;Land a job in tech: career advice for recent college graduates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/junior-developer-survival-guide"&gt;The Junior Developer Survival Guide: three pillars for success&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/not-landing-dream-tech-job"&gt;6 reasons you're not landing your dream dev job&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>career</category>
      <category>beginners</category>
      <category>learning</category>
      <category>development</category>
    </item>
    <item>
      <title>Learn Deliberate Practice: The 10,000 Hour Rule</title>
      <author>Ankur Tyagi</author>
      <pubDate>Thu, 29 Apr 2021 17:25:12 +0000</pubDate>
      <link>https://dev.to/tyaga001/learn-deliberate-practice-the-10-000-hour-rule-7n1</link>
      <guid>https://dev.to/tyaga001/learn-deliberate-practice-the-10-000-hour-rule-7n1</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Learn Deliberate Practice: The 10,000 Hour Rule&lt;br&gt;&lt;br&gt;And how this will help you to grow as a developer. &lt;br&gt;&lt;br&gt;A Thread... &lt;a href="https://t.co/ISHoOMyYEZ"&gt;pic.twitter.com/ISHoOMyYEZ&lt;/a&gt;&lt;/p&gt;— Ankur💻🎧💪 (@TheAnkurTyagi) &lt;a href="https://twitter.com/TheAnkurTyagi/status/1387768508541542407?ref_src=twsrc%5Etfw"&gt;April 29, 2021&lt;/a&gt;
&lt;/blockquote&gt;  
&lt;h2&gt;
  &lt;a href="#to-learn-any-new-skill-or-gain-expertise-you-need-to-practice-practice-and-practice"&gt;
  &lt;/a&gt;
  To learn any new skill or gain expertise you need to &lt;strong&gt;practice&lt;/strong&gt;, &lt;strong&gt;practice&lt;/strong&gt;, and &lt;strong&gt;practice&lt;/strong&gt;.
&lt;/h2&gt;

&lt;p&gt;There isn’t much debate about that.&lt;/p&gt;

&lt;p&gt;But here’s what you might not know: &lt;/p&gt;

&lt;p&gt;scientific research shows that the quality of your practice is just as important as the quantity.&lt;/p&gt;

&lt;p&gt;And, more interestingly, these scientists also believe that expert-level performance is primarily the result of expert-level practice NOT due to innate talent.&lt;/p&gt;

&lt;p&gt;This concept is known as deliberate practice, and it’s an incredibly powerful tool to grow as a developer.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;How often do you say “wow, that person is talented?” &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When thinking about your favorite DEVELOPER, YOUTUBER, or other expert-level role models?&lt;/p&gt;

&lt;p&gt;But you know:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Experts are experts at maintaining high levels of practice and improving performance.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Deliberate practice&lt;/strong&gt; is a highly structured activity engaged with the specific goal of improving performance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deliberate practice&lt;/strong&gt; is different from work, play, and simple repetition of a task. &lt;/p&gt;

&lt;p&gt;It requires effort, it has no monetary reward, and it is not inherently enjoyable.&lt;/p&gt;

&lt;p&gt;If you want to gain skills rapidly or approach expert-level status at something, you must understand the importance of deliberate practice and learn how to incorporate it into your daily life.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Simple practice isn’t enough to rapidly gain skills.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-deliberate-practice-means-for-you-as-a-developer"&gt;
  &lt;/a&gt;
  What Deliberate Practice Means for You as a Developer:
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;We all know that natural ability is no excuse.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you’re 5’2″, maybe you shouldn’t set your sites on becoming an NBA center. &lt;/p&gt;

&lt;p&gt;Some physical limits are obvious. &lt;/p&gt;

&lt;p&gt;Most other “limits” are cop-outs or relics of old misunderstandings about talent.&lt;/p&gt;

&lt;p&gt;What’s cool is that even limits of brainpower can be overcome with deliberate practice.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“How you practice matters most.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;How long you persevere determines your limits.&lt;/p&gt;

&lt;p&gt;Your practice has to be deliberate and intense, but it also has to be carefully scheduled and limited in ways to avoid burnout and long-term fatigue (both mental and physical).&lt;/p&gt;

&lt;p&gt;Motivation becomes the real constraint on expertise.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Practice isn’t always fun.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's it for today &amp;amp; Thanks for reading. &lt;/p&gt;

&lt;p&gt;This thread comes out from my latest eBook, Prime guide for the next-gen developer. &lt;/p&gt;

&lt;p&gt;If you are serious to grow as a developer. &lt;/p&gt;

&lt;p&gt;Grab the book now:&lt;/p&gt;

&lt;p&gt;$15 for the next 10 people.  &lt;a href="https://gumroad.com/l/nextgendev"&gt;The Prime Guide&lt;/a&gt;  &lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>productivity</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>4 ways to check if arrays are equal</title>
      <author>Mehul Lakhanpal</author>
      <pubDate>Thu, 29 Apr 2021 17:24:18 +0000</pubDate>
      <link>https://dev.to/318097/4-ways-to-check-if-arrays-are-equal-4dil</link>
      <guid>https://dev.to/318097/4-ways-to-check-if-arrays-are-equal-4dil</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;oldTags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;facebook&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;twitter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;instagram&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dev.to&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newTags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dev.to&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;twitter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;facebook&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;instagram&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// Method 1: Using .sort() &amp;amp; .join()&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;oldTags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newTags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;isEqual?&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Method 2: Using .includes()&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr1Status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;oldTags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;arr1Status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr1Status&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;newTags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr2Status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;newTags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;arr2Status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr2Status&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;oldTags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;isEqual?&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arr1Status&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;arr2Status&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Method 3: Using .reduce()&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr1State&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;oldTags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;newTags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr2State&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newTags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;oldTags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;isEqual?&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arr1State&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;arr2State&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Method 4: Using .isEqual() from Lodash&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;isEqual?&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;oldTags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;newTags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;Thanks for reading 💙&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Follow &lt;strong&gt;@codedrops.tech&lt;/strong&gt; for more.&lt;br&gt;&lt;br&gt;
&lt;a href="https://www.instagram.com/codedrops.tech/"&gt;Instagram&lt;/a&gt; ● &lt;a href="https://twitter.com/codedrops_tech"&gt;Twitter&lt;/a&gt; ● &lt;a href="https://www.facebook.com/codedrops.tech/"&gt;Facebook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Micro-Learning ● Web Development ● Javascript ● MERN stack ● Javascript&lt;br&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://www.codedrops.tech/"&gt;codedrops.tech&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Projects&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/note-box/mbbajjgefpenmkkhcnmmnoodlbcbfnmp"&gt;Note Box&lt;/a&gt; - A chrome extension to add notes/todos based on URL&lt;br&gt;&lt;br&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=mehullakhanpal.file-ops"&gt;File Ops&lt;/a&gt; - A VS Code extension to easily tag/alias files &amp;amp; quick switch between files&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Basecamp Backlash, Remote Work Increasing Harassment, Linux Kernel Submission Ban, &amp; more on DevNews!</title>
      <author>Josh Puetz</author>
      <pubDate>Thu, 29 Apr 2021 17:06:00 +0000</pubDate>
      <link>https://dev.to/devteam/basecamp-backlash-remote-work-increasing-harassment-linux-kernel-submission-ban-more-on-devnews-25k9</link>
      <guid>https://dev.to/devteam/basecamp-backlash-remote-work-increasing-harassment-linux-kernel-submission-ban-more-on-devnews-25k9</guid>
      <description>&lt;p&gt;This week on the show, &lt;a class="mentioned-user" href="https://dev.to/saronyitbarek"&gt;@saronyitbarek&lt;/a&gt;
 and I chatted about a dispiriting story that has major implications for the tech world...&lt;/p&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devnews/s4-e3-basecamp-backlash-remote-work-harassment-linux-kernel-submission-ban-and-crypto-miners-killing-free-ci"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S4:E3 - Basecamp Backlash, Remote Work Harassment, Linux Kernel Submission Ban, and Crypto Miners Killing Free CI&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devnews"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevNews  

      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s4-e3-basecamp-backlash-remote-work-harassment-linux-kernel-submission-ban-and-crypto-miners-killing-free-ci" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s4-e3-basecamp-backlash-remote-work-harassment-linux-kernel-submission-ban-and-crypto-miners-killing-free-ci" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s4-e3-basecamp-backlash-remote-work-harassment-linux-kernel-submission-ban-and-crypto-miners-killing-free-ci" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s4-e3-basecamp-backlash-remote-work-harassment-linux-kernel-submission-ban-and-crypto-miners-killing-free-ci" alt="DevNews" src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJPvwj98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XOSCOlKI--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s4-e3-basecamp-backlash-remote-work-harassment-linux-kernel-submission-ban-and-crypto-miners-killing-free-ci"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devnews/s4-e3-basecamp-backlash-remote-work-harassment-linux-kernel-submission-ban-and-crypto-miners-killing-free-ci"&gt;
      &lt;img id="episode-profile-image" alt="S4:E3 - Basecamp Backlash, Remote Work Harassment, Linux Kernel Submission Ban, and Crypto Miners Killing Free CI" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--84VpOv6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3GWkSFQs--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;×&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;p&gt;I’m talking about the problematic blog post put out by Basecamp CEO and Co-Founder Jason Fried earlier this week. Whether you’ve read it or not, I think you’ll find the conversation about it between Saron and I interesting. If the post put a major damper on your week, I’m right there with you 😔&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-this-episode-we-also-covered-the-following-stories"&gt;
  &lt;/a&gt;
  &lt;strong&gt;In this episode, we also covered the following stories...&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A report put out by the non-profit, Project Include, about how remote work is leading to more gender and racial harassment at tech companies. &lt;a href="//twitter.com/mckensiemack"&gt;McKensie Mack&lt;/a&gt; (founder &amp;amp; CEO of MMG and a co-author of the report) joined us on the show to discuss this.&lt;/li&gt;
&lt;li&gt;The University of Minnesota security researchers who submitted security vulnerabilities to the Linux kernel to show flaws in the approval process, leading to a call for a ban on anything submitted by umn.edu emails. &lt;a href="//twitter.com/hxmonsegur"&gt;Hector Monsegur&lt;/a&gt; (Security Researcher and Former Blackhat Hacker) joined us for this topic. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enjoy the episode!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devnews"&gt;follow DevNews&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; — or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Quick Listening Links&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s4-e3-basecamp-backlash-remote-work-harassment-linux/id1525581923?i=1000519215565"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/0MrbODcALokZLZmeht4MDX"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cDovL2ZlZWRzLmNvZGVuZXdiaWUub3JnL2Rldm5ld3NfcG9kY2FzdC54bWw/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZuZXdzLzI3?sa=X&amp;amp;ved=0CAQQkfYCahcKEwi4karX96PwAhUAAAAAHQAAAAAQCA"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stitcher.com/show/devnews/episode/s4-e3-basecamp-backlash-remote-work-harassment-linux-kernel-submission-ban-and-crypto-miners-killing-free-ci-83555918"&gt;Stitcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devnews/s4e3-basecamp-backlash-Sb_Q1YPa0Wm/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevNews-p1352512/?topicId=162681062"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devpods.dev/podcasts/devnews/episodes/159"&gt;Transcript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Acknowledgements&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Our season four sponsors, &lt;a href="https://scoutapm.com/devnews"&gt;Scout APM&lt;/a&gt; and &lt;a href="https://rudderstack.com/"&gt;Rudderstack&lt;/a&gt; ❤️ &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/H54R9ULqkR5bG/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/H54R9ULqkR5bG/giphy.gif" alt="news"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>news</category>
      <category>podcast</category>
    </item>
    <item>
      <title>JavaScript Made Easy: Part 4</title>
      <author>David Tetreau</author>
      <pubDate>Thu, 29 Apr 2021 16:53:43 +0000</pubDate>
      <link>https://dev.to/dtetreau/javascript-made-easy-part-4-4da9</link>
      <guid>https://dev.to/dtetreau/javascript-made-easy-part-4-4da9</guid>
      <description>&lt;p&gt;For this post, we will go over various topics such as comments, assignment operators, and arithmetic operators. As always, open up a repl and code along with this post. You learn more by doing it yourself, and you will build muscle memory. Log all of these operations to the console in your repl and use comments to reinforce what you are doing. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comments"&gt;
  &lt;/a&gt;
  Comments
&lt;/h2&gt;

&lt;p&gt;Comments are fairly easy to understand. There are two types of comments in JavaScript. The first is a single-line comment. The second is a multi-line comment. Here are some examples:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// This is a single-line comment.

/* 
This is a multi-line comment.
Everything inside of this comment
will not be run. You can also 
use comments for not only notes, 
but you can comment out a block of
code that you want to leave out but
not delete
*/

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#assignment-operators"&gt;
  &lt;/a&gt;
  Assignment Operators
&lt;/h2&gt;

&lt;p&gt;There are several different types of operators in JavaScript:&lt;br&gt;
Assignment operators assign a value to a variable. You learned about this in previous lessons.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const currentLesson = 4; //assignment operator
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#arithmetic-operators"&gt;
  &lt;/a&gt;
  Arithmetic Operators
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Addition&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The addition operator is used for adding numbers, adding booleans, adding variables, and for combining strings together.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;2 + 2;
// expected result: 4

2 + true;
// expected result: 3

'I am a ' + 'Developer';
/* 
expected result: "I am a Developer"
Notice that there had to be a space 
added at the end of the first string
*/

2001 + ' is my graduation year';
// expected result: "2001 is my graduation year"

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Multiplication&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The multiplication operator multiplies numbers or numbers stored in variables. Here is an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//multiplying numbers
5 * 3; //equals 15 
//multiplying variables
const number1 = 5;
const number2 = 3; 
const number3 = number1 * number2; // equals 15

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Other operators that can be used to do arithmetic the same way are:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;5 - 5; //subtraction
3 ** 4; /*
       exponentiation
       expected output is 81
       same as 3 to the 4th power
       */
1 / 2; //division
12 % 5; /*modulus
       returns the remainder 
       after division
       */
++; // increment (increases a number by 1)
--; // decrement (decreases a number by 1)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope you have enjoyed this post! Please check out the entire "JavaScript Made Easy" series by David Tetreau. There will be a new post daily.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Understanding CSS Media Queries
</title>
      <author>ng-conf</author>
      <pubDate>Thu, 29 Apr 2021 16:20:25 +0000</pubDate>
      <link>https://dev.to/ngconf/understanding-css-media-queries-23ao</link>
      <guid>https://dev.to/ngconf/understanding-css-media-queries-23ao</guid>
      <description>&lt;p&gt;Jared Youtsey | ng-conf | Jul 2020&lt;/p&gt;

&lt;p&gt;This is not intended to be a deep dive into media queries, but a primer to help understand some common way we use media queries as web-developers.&lt;/p&gt;

&lt;p&gt;A media query is a bit of CSS that defines rules about when to apply a set of CSS definitions. It always starts with&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@media&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;As web-devs we’re most concerned with the screen as our rendered output, so, almost always, we follow the &lt;code&gt;@media&lt;/code&gt; with&lt;/p&gt;

&lt;p&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;screen&lt;/code&gt; means that it applies to screen-based device like a phone, tablet, or computer screen. There are other options, but they are less-frequently used.&lt;/p&gt;

&lt;p&gt;We would then usually append a query to the statement, so, we’ll end up with something like:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@media screen and ...&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Queries, like all css, are applied in the order they are defined.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;This is very important to understand, as we usually want to be doing &lt;strong&gt;“Mobile-First”&lt;/strong&gt; development.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-mobilefirst"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is Mobile-First?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Mobile-First means that we define the layout rules in CSS for the smallest form-factor first (a phone in portrait mode). Then, we define queries to target devices as they get incrementally larger. We usually will have some SASS variables that map roughly to common device sizes.&lt;/p&gt;

&lt;p&gt;Why don’t we have variables for specific devices? The rules would become impossible to write and maintain. Device resolution changes drastically from one phone to another.&lt;/p&gt;

&lt;p&gt;Two very common queries we are likely to use are &lt;code&gt;min-width&lt;/code&gt; and &lt;code&gt;max-width&lt;/code&gt;.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#meaning-of-minwidth-and-maxwidth"&gt;
  &lt;/a&gt;
  Meaning of min-width and max-width
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m_3RPQhc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2Aip7Wg3k3_krObyC2TfepKQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m_3RPQhc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2Aip7Wg3k3_krObyC2TfepKQ.png" alt='Screenshot of an information table. There are three columns and two rows plus the header row. The columns are labeled "Rule", "Meaning", and "Notes". The first row reads "min-width" under Rule, "greater than or equal to &amp;gt;=" under Meaning, and "Do not use with $*-max-width variables!" under Notes. The second row reads "max-width" under Rule, "less than or equal to &amp;lt;=" under Meaning, and "Do not use with $*-min-width variables!" under Notes.'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#sass-variables-and-queries-to-target-ranges-of-devices"&gt;
  &lt;/a&gt;
  SASS variables and queries to target ranges of devices.
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zD1tBIqm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AtreFSUHy_MXYMnPWf6m-cg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zD1tBIqm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AtreFSUHy_MXYMnPWf6m-cg.png" alt='Screenshot of an information table with 7 columns and 8 rows plus the header row. The columns are "Variable", "em", "px", "Query description: If you write the query below you will afftect the checked devices.", "Phone" which is spilt into two columns, "Tablet" which is slit into two columns, and "Desktop".'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Media queries can be combined with &lt;code&gt;and&lt;/code&gt;. For example, the following query will target only landscape phones (give or take a randomly sized phone/tablet).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@media screen and (min-width: $sm-min-width) and (max-width: $sm-max-width)&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Demo&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://gist.github.com/jkyoutsey/72451901bf9ae76c1c254d1555893543"&gt;Here&lt;/a&gt; is a simple example where we will adapt the presentation of some buttons based on the size of the device they are rendered on.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;html&amp;gt;
  &amp;lt;!--
                                                                           Phone        Tablet       Desktop
    Variable        em        px          Query                            Port  Land   Port  Land
    ------------------------------------------------------------------------------------------------------------------
    By default you should not write any media query at all. So, the first   X     X   |  X     X   |    X
    CSS definitions in your CSS file will apply to all devices unless you             |            |
    have additional media queries defined afterward.                                  |            |
    ------------------------------------------------------------------------------------------------------------------
    $sm-min-width  35.5em    568px       min-width: 35.5em                        X   |  X     X   |    X
    ------------------------------------------------------------------------------------------------------------------
    $sm-max-width  47.999em  767.984px   max-width: 47.999em                X     X   |            |
    ------------------------------------------------------------------------------------------------------------------
    $md-min-width  48em      768px       min-width: 48em                              |  X     X   |    X
    ------------------------------------------------------------------------------------------------------------------
    $md-max-width  63.999em  1023.984px  max-width: 63.999em                X     X   |  X         |
    ------------------------------------------------------------------------------------------------------------------
    $lg-min-width  64em      1024px      min-width: 64em                              |        X   |    X
    ------------------------------------------------------------------------------------------------------------------
    $lg-max-width  79.999em  1279.984px  max-width: 79.999em                X     X   |  X     X   |
    ------------------------------------------------------------------------------------------------------------------
    $xl-min-width  80em      1280px      min-width: 80em                              |        X   |    X
    ------------------------------------------------------------------------------------------------------------------
    * CSS vars cannot be used in media queries. SASS variables do since they get compiled to concrete values.
    * There is some overlap at Phone/Tablet/Desktop boundaries due to the variances in device resolutions.
    * When using CSS do not use min/max-width, rather use min/max-device-width to account for varying scale factors.
    * Most SASS pre-processors will make min/max-width work correctly for the scale factor on the device (not sure how?!).
    Rule        Meaning                       Notes
    min-width   greater than or equal to &amp;gt;=   Do not use with $*-max-width variables!
    max-width   less than or equal to &amp;lt;=      Do not use with $*-min-width variables!
    * Save this HTML/CSS as media-queries.html and open it in Chrome.
    * Open Chrome Developer Tools
    * Click the Responsive button
    * Choose iPhone 6/7/8
      * Notice that the buttons are stacked, fab buttons and it is labeled as Phone Portrait.
    * Toggle to landscape rotation
      * Notice that the buttons are flexed to either end of the screen and it’s labeled Phone Landscape.
    * Choose iPad
      * Notice that the buttons are flexed to either end of the screen and now use text labels and it’s labeled Tablet Portrait.
    * Toggle to landscape rotation
      * Notice that the buttons are flexed to either end of the screen and use both fab icons and text labels and it’s labeled Tablet Landscape/Desktop.
    What’s really going on under the covers?
    * Lines 76-126 define the default styling, which we have dictated will be mobile-first.
      So these are the default styles for a phone in portrait mode.
    * Lines 131-145 define styling for anything at least as large as a phone in landscape mode.
      The only styles defined in this block are those that override what is defined in the
      mobile-first, portrait phone section. So, we would expect at all form factors above
      portrait phone that the buttons would be in a row, rather than a column.
    * Lines 150-163 define styling for anything at least as large as a tablet in portrait mode.
      Again, we only override styles that need to change. We hide the icon and now show text
      on the button. We also go to a rounded corner button rather than a fab button. There is
      no picture for this one because subsequent queries inherit from this one and then set
      additional styling. There is no view where this query applies and other that build on it do not.
    * Lines 170-184 define styling for ONLY a tablet in portrait mode.
      This block inherits from previous queries, i.e. showing text instead of the icon. But it
      overrides the borders and radius of the button to be much more round and pronounced.
      Subsequent queries will not inherit from this one because this one has both a min and max query.
    * Lines 190-204 define styling for anything tablet in landscape or larger.
      It inherits from all previous queries except block 170-184, which is scoped with a min + max query.
      It will show both the icon and the text.
      * What kind of borders will the buttons have?
      * What kind of layout will the buttons have?
   --&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;style&amp;gt;
      /*
       * MOBILE FIRST!
       * Which technically is the same as this media query:
       * @media screen and (min-width: 0em)
       * Which means "greater than or equal to 0em wide", or, "everything".
       */
      body {
        padding: 16px;
      }
      .button-container {
        display: flex;
        flex-direction: column;
        align-items: center;
      }
      .add-button,
      .delete-button {
        border-radius: 50%;
        width: 64px;
        height: 64px;
        font-size: 48px;
        color: white;
        margin-bottom: 16px;
      }
      .add-button {
        border: solid 1px darkgreen;
        background-color: forestgreen;
      }
      .delete-button {
        border: solid 1px maroon;
        background-color: red;
      }
      span.text {
        display: none;
        margin: 0 16px;
      }
      span.fab {
        display: inline-block;
        position: relative;
        top: -5px;
      }
      .phone-portrait,
      .phone-landscape,
      .tablet-portrait,
      .tablet-landscape {
        display: flex;
        justify-content: center;
        font-weight: bold;
        font-size: 24px;
      }
      .phone-portrait {
        font-size: 48px;
      }
      .phone-landscape,
      .tablet-portrait,
      .tablet-landscape {
        display: none;
      }

      /*
       * Phone Landscape or larger
       */
      @media screen and (min-device-width: 35.5em) {
        /* These settings add to or override those that come before */
        .button-container {
          flex-direction: row;
          justify-content: space-between;
        }
        .phone-landscape {
          display: flex;
        }
        .phone-portrait,
        .tablet-portrait,
        .tablet-landscape {
          display: none;
        }
      }

      /*
       * Tablet Portrait or larger
       */
      @media screen and (min-device-width: 48em) {
        .add-button,
        .delete-button {
          border-radius: 6px;
          width: unset;
          height: unset;
        }
        span.fab {
          display: none;
        }
        span.text {
          display: inline-block;
        }
      }

      /*
       * Tablet Portrait ONLY
       * Inherits from previous queries.
       * Subsequent queries will not inherit these values.
       */
      @media screen and (min-device-width: 48em) and (max-device-width: 63.999em) {
        .add-button,
        .delete-button {
          border-radius: 32px;
          border-width: 4px;
        }
        .tablet-portrait {
          display: flex;
        }
        .phone-portrait,
        .phone-landscape,
        .tablet-landscape {
          display: none;
        }
      }

      /*
       * Tablet Landscape or larger
       * Display both text and icon.
       */
      @media screen and (min-device-width: 64em) {
        span.fab {
          display: inline-block;
          margin-left: 16px;
          top: -3px;
        }
        .tablet-landscape {
          display: flex;
        }
        .phone-portrait,
        .phone-landscape,
        .tablet-portrait {
          display: none;
        }
      }
    &amp;lt;/style&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;div class="button-container"&amp;gt;
      &amp;lt;button class="add-button"&amp;gt;
        &amp;lt;span class="fab"&amp;gt;+&amp;lt;/span&amp;gt;
        &amp;lt;span class="text"&amp;gt;Add&amp;lt;/span&amp;gt;
      &amp;lt;/button&amp;gt;
      &amp;lt;button class="delete-button"&amp;gt;
        &amp;lt;span class="fab"&amp;gt;x&amp;lt;/span&amp;gt;
        &amp;lt;span class="text"&amp;gt;Delete&amp;lt;/span&amp;gt;
      &amp;lt;/button&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class="phone-portrait"&amp;gt;Phone Portrait&amp;lt;/div&amp;gt;
    &amp;lt;div class="phone-landscape"&amp;gt;Phone Landscape&amp;lt;/div&amp;gt;
    &amp;lt;div class="tablet-portrait"&amp;gt;Tablet Portrait&amp;lt;/div&amp;gt;
    &amp;lt;div class="tablet-landscape"&amp;gt;Tablet Landscape/Desktop&amp;lt;/div&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#cssmediaquerieshtml-hosted-by-github"&gt;
  &lt;/a&gt;
  &lt;a href="https://gist.github.com/jkyoutsey/72451901bf9ae76c1c254d1555893543#file-css-media-queries-html"&gt;css-media-queries.html&lt;/a&gt; hosted by GitHub
&lt;/h6&gt;

&lt;p&gt;For the purposes of this example, we are using &lt;code&gt;min/max-device-width&lt;/code&gt; instead of &lt;code&gt;min/max-width&lt;/code&gt; since the example is in plain HTML/CSS.&lt;/p&gt;

&lt;p&gt;If you are using Angular you can use &lt;code&gt;min/max-width&lt;/code&gt;. I’m not sure what the SASS compilation process is doing or setting to make that work. Just know that where you see &lt;code&gt;min/max-device-width&lt;/code&gt; in the sample HTML you can use &lt;code&gt;min/max-width&lt;/code&gt; in Angular with compiled SASS. This may or may not be true with plain CSS in Angular, or other SASS compilers?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Save this HTML/CSS as media-queries.html and open it in Chrome.&lt;/li&gt;
&lt;li&gt;Open Chrome Developer Tools&lt;/li&gt;
&lt;li&gt;Click the Responsive button&lt;/li&gt;
&lt;li&gt;Choose iPhone 6/7/8&lt;/li&gt;
&lt;li&gt;Notice that the buttons are stacked fab buttons and it is labeled as Phone Portrait.&lt;/li&gt;
&lt;li&gt;Toggle to landscape rotation&lt;/li&gt;
&lt;li&gt;Notice that the buttons are flexed to either end of the screen and it’s labeled Phone Landscape.&lt;/li&gt;
&lt;li&gt;Chose iPad&lt;/li&gt;
&lt;li&gt;Notice that the buttons are flexed to either end of the screen and now use text labels and it is labeled Tablet Portrait.&lt;/li&gt;
&lt;li&gt;Toggle to landscape rotation&lt;/li&gt;
&lt;li&gt;Notice that the buttons are flexed to either end of the screen and use both fab icons and text labels and it is labeled Tablet Landscape/Desktop.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#whats-really-going-on-under-the-covers"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What’s really going on under the covers?&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Lines 76–126 define the default styling, which we have dictated will be mobile-first. So these are the default styles for a phone in portrait mode.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#lines-76126-phone-portrait"&gt;
  &lt;/a&gt;
  Lines 76–126 Phone Portrait
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--umWfq0DW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2Au3bEcyu1f6_rvcyyx_nKqA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--umWfq0DW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2Au3bEcyu1f6_rvcyyx_nKqA.png" alt='Screenshot. The majority of the image is black. At the top it reads "iPhone 6/7/8, 375 x 667, 150%, Online". There are some dropdown menus and in the top right corner is a screen rotation icon. On the black background is a white screen. There is a green circle with a "+" icon stacked on top of a red circle with an "x" icon. They re both stacked over bold black text reading "Phone Portrait".'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lines 131–145 define styling for anything at least as large as a phone in landscape mode. The only styles defined in this block are those that &lt;em&gt;override&lt;/em&gt; what is defined in the mobile-first, portrait phone section. So, we would expect at all form factors above portrait phone that the buttons would be in a row, rather than a column.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#lines-131145-phone-landscape"&gt;
  &lt;/a&gt;
  Lines 131–145 Phone Landscape
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--76XFK9G---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AEcU1zjzyiRRhCJZacxOMGA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--76XFK9G---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AEcU1zjzyiRRhCJZacxOMGA.png" alt='Screenshot similar to the one above. A white box on black background. The white space looks wider and reads "Phone Landscape" in black text. There is a green circle with a "+" icon in the left corner, a rec circle with a "x" symbol is in the right.'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lines 150–163 define styling for anything at least as large as a tablet in portrait mode. Again, we only override styles that need to change. We hide the icon and now show text on the button. We also go to a rounded corner button rather than a fab button. There is no picture for this one because subsequent queries inherit from this one and then set additional styling. There is no view where this query applies and other that build on it do not.&lt;/p&gt;

&lt;p&gt;Lines 170–184 define styling for ONLY a tablet in portrait mode. This block inherits from previous queries, i.e. showing text instead of the icon. But it overrides the borders and radius of the button to be much more round and pronounced. Subsequent queries will not inherit from this one because this one has both a min and max query.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#lines-150184-tablet-portrait"&gt;
  &lt;/a&gt;
  Lines 150–184 Tablet Portrait
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aaDewLOV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2A8d5bI7SZ3cU2W28tc3YYjw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aaDewLOV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2A8d5bI7SZ3cU2W28tc3YYjw.png" alt="Image for post"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lines 190–204 define styling for anything tablet in landscape or larger. It inherits from all previous queries except block 170–184, which is scoped with a min + max query. It will show both the icon and the text.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#test-yourself"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Test yourself!&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;What kind of borders will the buttons have?&lt;/li&gt;
&lt;li&gt;What kind of layout will the buttons have?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see media queries provide us with great power to adapt our presentation incrementally for effective mobile-first presentation. Of course media queries can be used to adapt presentation for other uses, such as print or even screen readers.&lt;/p&gt;

&lt;p&gt;Image by &lt;a href="https://pixabay.com/users/photoshot-1758529/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=1160552"&gt;Photoshot&lt;/a&gt; from &lt;a href="https://pixabay.com/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=1160552"&gt;Pixabay&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ngconf-join-us-for-reliable-web-summit-"&gt;
  &lt;/a&gt;
  *&lt;em&gt;ng-conf: Join us for Reliable Web Summit *&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;Come learn from community members and leaders the best ways to build reliable web applications, write quality code, choose scalable architectures, and create effective automated tests. Powered by ng-conf, join us for the Reliable Web Summit this August 26th &amp;amp; 27th, 2021.&lt;br&gt;
&lt;a href="https://reliablewebsummit.com/"&gt;https://reliablewebsummit.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>css</category>
      <category>mediaqueries</category>
    </item>
    <item>
      <title>Dead simple State Management with Stoxy</title>
      <author>Matsuuu</author>
      <pubDate>Thu, 29 Apr 2021 16:18:55 +0000</pubDate>
      <link>https://dev.to/matsuuu/dead-simple-state-management-with-stoxy-41pg</link>
      <guid>https://dev.to/matsuuu/dead-simple-state-management-with-stoxy-41pg</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what"&gt;
  &lt;/a&gt;
  What
&lt;/h2&gt;

&lt;p&gt;Stoxy is a new, modern, reactive state management system for web applications.&lt;/p&gt;

&lt;p&gt;It's a small, dependencyless, extensible set of functions to create stateful features for you web app, and even persist them through sessions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how"&gt;
  &lt;/a&gt;
  How
&lt;/h2&gt;

&lt;p&gt;Stoxy requires no setup. After the install with&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; @stoxy/core
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You don't need to hassle with reducers, nor any initial state objects, you can immediately start writing stateful applications.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;write&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@stoxy/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Stoxy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;shoppingCart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Flaming hot cheetos&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;shoppingHistory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;latestProducts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;555&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Doritos&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;958&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Pringles&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;userData&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Persisting objects through sessions can be done on a per-key basis with a single command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;persistKey&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@stoxy/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;persistKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;userData&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Reading data through the promise based API is made simple too:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;shoppingcart&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shoppingCartItems&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;shoppingCartItems&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are multiple user-tailored functions at your disposal for more specific actions too. Read more about them &lt;a href="https://stoxy.dev/docs/"&gt;at the docs.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where"&gt;
  &lt;/a&gt;
  Where
&lt;/h2&gt;

&lt;p&gt;Stoxy can be run anywhere, with any framework. Even with no framework at all.&lt;/p&gt;

&lt;p&gt;Currently Stoxy ships with element mixins for Web Components and hooks for React/Preact.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read more about Stoxy at the site: &lt;a href="https://stoxy.dev/"&gt;Stoxy.dev&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Stoxy just reached 50 stars in Github. &lt;a href="https://github.com/stoxy-js/stoxy/stargazers"&gt;Join the stargazers at GitHub!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>typescript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Supercharging file-based content with GraphQL</title>
      <author>Jeff See</author>
      <pubDate>Thu, 29 Apr 2021 15:58:10 +0000</pubDate>
      <link>https://dev.to/tinacms/supercharging-file-based-content-with-graphql-544i</link>
      <guid>https://dev.to/tinacms/supercharging-file-based-content-with-graphql-544i</guid>
      <description>&lt;p&gt;Today we want to introduce you to the Tina GraphQL gateway that brings reliability to Git-based content management. It's an essential piece to provide a robust structured content, while your content remains fully portable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overcoming-the-limitations-of-the-filesystem"&gt;
  &lt;/a&gt;
  Overcoming the limitations of the filesystem
&lt;/h2&gt;

&lt;p&gt;Using the filesystem for website content has been a mainstay of the web development ecosystem for years. The ability to ship your entire website in one fell swoop and roll anything back with thanks to Git has made this a popular and efficient way to get things done with confidence.&lt;/p&gt;

&lt;p&gt;On the other hand, the open nature of using files for content can lead to headaches. Content Management Systems (CMS) have always provided confidence in another way — knowing that your content's shape won't change out from underneath you. The scary (and powerful) thing about using the filesystem is that there's no layer to ensure that you're getting the content that you expect. It's a trade-off that has many valid use-cases, but just as many foot guns.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-take-an-example"&gt;
  &lt;/a&gt;
  Let's take an example
&lt;/h2&gt;

&lt;p&gt;We're going to use the &lt;a href="https://github.com/vercel/next.js/tree/canary/examples/blog-starter"&gt;Next.js blog starter&lt;/a&gt; to demonstrate some of the problems with file-based content and how we hope to solve them. If you'd like to follow along you can &lt;a href="https://github.com/tinacms/next-blog-starter-graphql"&gt;fork this repository&lt;/a&gt; and start with the branch called &lt;a href="https://github.com/tinacms/next-blog-starter-graphql/tree/start"&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt;. To skip ahead to the final solution check out the &lt;a href="https://github.com/tinacms/next-blog-starter-graphql/tree/add-tina-gql"&gt;&lt;code&gt;add-tina-gql&lt;/code&gt;&lt;/a&gt; branch.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#our-content-structure"&gt;
  &lt;/a&gt;
  Our content structure
&lt;/h3&gt;

&lt;p&gt;This app sources its content from Markdown files in a folder called &lt;code&gt;_posts&lt;/code&gt;:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- _posts
  - dynamic-routing.md
  - hello-world.md
  - preview.md
- pages
  - index.js # lists the blog posts
  - posts
    - [slug].js # dynamically shows the appropriate blog post
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;On the home page we get each post from the &lt;code&gt;_posts&lt;/code&gt; directory and sort them by date before showing them with our &lt;code&gt;getAllPosts&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getAllPosts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;slugs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getPostSlugs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;slugs&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;getPostBySlug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="c1"&gt;// sort posts by date in descending order&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;post1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;post2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;post1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;post2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m4zPboeB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/deuzrsg3m/image/upload/v1619558511/tina-blog-post/next-demo-home_kcnyv5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m4zPboeB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/deuzrsg3m/image/upload/v1619558511/tina-blog-post/next-demo-home_kcnyv5.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Demo: ➡️ &lt;a href="https://github.com/tinacms/next-blog-starter-graphql/tree/start"&gt;Start following along&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#filebased-content-is-simple"&gt;
  &lt;/a&gt;
  File-based content is simple
&lt;/h4&gt;

&lt;p&gt;What we have so far is great, since our changes are stored in Git we know that if we made a mistake we will be able to easily roll it back to a previous version. But as the complexity of our content increases things become less straightforward.&lt;/p&gt;

&lt;p&gt;To demonstrate that, let's first look at how our content is structured. The "Dynamic Routing and Static Generation" blog post looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Dynamic&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Routing&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;and&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Static&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Generation'&lt;/span&gt;
&lt;span class="na"&gt;excerpt&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Lorem&lt;/span&gt;&lt;span class="nv"&gt;  &lt;/span&gt;&lt;span class="s"&gt;...'&lt;/span&gt;
&lt;span class="na"&gt;coverImage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/assets/blog/dynamic-routing/cover.jpg'&lt;/span&gt;
&lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;2020-03-16T05:35:07.322Z'&lt;/span&gt;
&lt;span class="na"&gt;author&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;JJ Kasper&lt;/span&gt;
  &lt;span class="na"&gt;picture&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/assets/blog/authors/jj.jpeg'&lt;/span&gt;
&lt;span class="na"&gt;ogImage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/assets/blog/dynamic-routing/cover.jpg'&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;

Lorem ipsum dolor sit amet ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's expand on this structure by adding the ability to filter which blog posts show up on the home page. To do that we add a new &lt;code&gt;boolean&lt;/code&gt; value to each post called &lt;code&gt;featured&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="p"&gt;--------&lt;/span&gt;
title: 'Dynamic Routing and Static Generation'
excerpt: 'Lorem  ...'
coverImage: '/assets/blog/dynamic-routing/cover.jpg'
date: '2020-03-16T05:35:07.322Z'
author:
  name: JJ Kasper
  picture: '/assets/blog/authors/jj.jpeg'
ogImage:
  url: '/assets/blog/dynamic-routing/cover.jpg'
&lt;span class="gh"&gt;featured: true
--------
&lt;/span&gt;
Lorem ipsum dolor sit amet ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can update our &lt;code&gt;getAllPosts&lt;/code&gt; function accordingly:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="p"&gt;export function getAllPosts(fields = []) {
&lt;/span&gt;  const slugs = getPostSlugs();
  const posts = slugs
    .map((slug) =&amp;gt; getPostBySlug(slug, fields))
    // sort posts by date in descending order
   .sort((post1, post2) =&amp;gt; (post1.date &amp;gt; post2.date ? -1 : 1))
&lt;span class="gi"&gt;+  .filter((post) =&amp;gt; post.featured);
&lt;/span&gt;  return posts
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's add a new post to test this out, this one &lt;em&gt;won't&lt;/em&gt; be featured:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="p"&gt;--------&lt;/span&gt;
title: 'Why Tina is Great'
excerpt: 'Lorem  ...'
coverImage: '/assets/blog/dynamic-routing/cover.jpg'
date: '2021-04-25T05:35:07.322Z'
author:
  name: JJ Kasper
  picture: '/assets/blog/authors/jj.jpeg'
ogImage:
  url: '/assets/blog/dynamic-routing/cover.jpg'
&lt;span class="gh"&gt;featured: 'false'
--------
&lt;/span&gt;
Lorem ipsum dolor sit amet ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Woops, look who's showing up on our home page:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gbJoe35a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/deuzrsg3m/image/upload/v1619560025/tina-blog-post/llama-woops_cchyel.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gbJoe35a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/deuzrsg3m/image/upload/v1619560025/tina-blog-post/llama-woops_cchyel.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Can you spot the issue? We accidentally set &lt;code&gt;featured&lt;/code&gt; to &lt;code&gt;"false"&lt;/code&gt; instead of &lt;code&gt;false&lt;/code&gt;! We made it a &lt;code&gt;string&lt;/code&gt;, not a &lt;code&gt;boolean&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Demo: 👀 &lt;a href="https://github.com/tinacms/next-blog-starter-graphql/compare/start..featured-tag-mistake"&gt;Spot our mistakes&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If we had been using a CMS this probably wouldn't have happened. Most of them require that the shape of your content is well-defined. While these kinds of issues are painful, there's a lot more that CMSs do for us that we don't get from the filesystem — you may have noticed something else about the shape of our content that doesn't feel quite right…&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#relationships-its-complicated"&gt;
  &lt;/a&gt;
  Relationships: it's complicated
&lt;/h3&gt;

&lt;p&gt;Let's look at the data from our new blog post again:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;---
title: "Why Tina is Great"
excerpt: "Lorem  ..."
coverImage: "/assets/blog/dynamic-routing/cover.jpg"
date: "2021-04-25T05:35:07.322Z"
author:
  name: JJ Kasper
  picture: "/assets/blog/authors/jj.jpeg"
ogImage:
  url: "/assets/blog/dynamic-routing/cover.jpg"
featured: "false"
---

Lorem ipsum dolor sit amet…
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;author&lt;/code&gt; content is the same over in the "Dynamic Routing and Static Generation" post. If JJ wanted to change his &lt;code&gt;picture&lt;/code&gt; he will need to update it on every post he's written. Sounds like something a CMS would solve with a content &lt;em&gt;relationship&lt;/em&gt;, JJ should ideally be an author who &lt;em&gt;has many&lt;/em&gt; posts. To solve this with our file-based content we could split the author data into its own file and place a reference to that author's filename in the &lt;code&gt;post&lt;/code&gt; structure:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;author: _authors/jj.md
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;But now we have to update our data-fetching logic so that whenever it comes across the &lt;code&gt;author&lt;/code&gt; field in a post it knows to make an additional request for &lt;em&gt;that&lt;/em&gt; data. This is pretty cumbersome, and again — as complexity grows this type of logic quickly becomes untenable. With a CMS SDK or GraphQL API we'd be able to do this sort of thing easily, and we'd have confidence that a document can't be deleted if it's being referenced from another document.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Demo: &lt;a href="https://github.com/tinacms/next-blog-starter-graphql/compare/featured-tag-mistake..split-author-data"&gt;Check out the diff&lt;/a&gt; to see how we're awkwardly making use of a separate &lt;code&gt;author&lt;/code&gt; file.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#content-management-systems-reliable-yes-portable-no"&gt;
  &lt;/a&gt;
  Content Management Systems: Reliable? Yes. Portable? No.
&lt;/h3&gt;

&lt;p&gt;Headless CMSs are a great way to maintain full control over your frontend code while offloading issues like those mentioned above to a more robust content layer. But when you hand your content over to a CMS you lose the power of Git that comes built-in with file-based content.&lt;/p&gt;

&lt;p&gt;With a CMS, when you make a change to the shape of your content you also need to &lt;em&gt;coordinate&lt;/em&gt; that new shape with your code, and you need to make sure that all of your existing content has been updated accordingly.&lt;/p&gt;

&lt;p&gt;Most CMSs have come up with various ways to help with this: separate sandbox environments, preview APIs, and migration SDK scripts — all of which carry their own set of headaches. None of this is necessary with file-based content, &lt;em&gt;everything moves and changes together&lt;/em&gt;. So what if we could bring the robust features of a headless CMS to your local filesystem? What might that look like?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#meet-tina-content-api"&gt;
  &lt;/a&gt;
  Meet Tina Content API
&lt;/h2&gt;

&lt;p&gt;Today we're introducing a tool that marries the power of a headless CMS with the convenience and portability of file-based content. &lt;strong&gt;The Tina Content API is a GraphQL service that sources content from your local filesystem&lt;/strong&gt;. It will soon be available via &lt;a href="https://tina.io/cloud/"&gt;Tina Cloud&lt;/a&gt;, which connects to your GitHub repository to offer an identical, cloud-based, headless API.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tina Cloud is currently open to a limited set of Next.js projects, &lt;a href="https://tina.io/early-access/"&gt;sign up&lt;/a&gt; for early access to get into the private beta.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To get a sense for how this works, let's make some tweaks to the blog demo.&lt;/p&gt;

&lt;p&gt;First let's install Tina CLI:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add tina-graphql-gateway-cli
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's add a schema so the API knows exactly what kind of shape to build for your content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir&lt;/span&gt; .tina &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;touch&lt;/span&gt; .tina/schema.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// `.tina/schema.ts`&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineSchema&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tina-graphql-gateway-cli&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;defineSchema&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;collections&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Posts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;posts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="cm"&gt;/*
       * Indicates where to save this kind of content (eg. the "_posts" folder)
       */&lt;/span&gt;
      &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;_posts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;templates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Simple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;simple_post&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Excerpt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;excerpt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cover Image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;coverImage&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Date&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;date&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="c1"&gt;// We indicate the author is a "reference"&lt;/span&gt;
              &lt;span class="c1"&gt;// to another document&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;reference&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;author&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Author&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;author&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;group&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ogImage&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Open Graph Image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;URL&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;url&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
              &lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;toggle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Featured&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;featured&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;authors&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Authors&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;_authors&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;templates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Author&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;author&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;

            &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;picture&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Picture&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we're referencing the &lt;code&gt;authors&lt;/code&gt; section from the &lt;code&gt;post.author&lt;/code&gt; field&lt;/p&gt;

&lt;p&gt;Next we replace the &lt;code&gt;dev&lt;/code&gt; command to start the GraphQL server in tandem with our Next.js app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dev"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"yarn tina-gql server:start -c &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;next dev&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Demo: &lt;a href="https://github.com/tinacms/next-blog-starter-graphql/compare/featured-tag-mistake...add-tina-gql"&gt;Here's&lt;/a&gt; the changes we've made so far. Check out the &lt;a href="https://github.com/tinacms/next-blog-starter-graphql/tree/add-tina-gql"&gt;&lt;code&gt;add-tina-graphql&lt;/code&gt;&lt;/a&gt; branch to pick up from this point.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Run the &lt;code&gt;dev&lt;/code&gt; command, you can see that we now have a local GraphQL server listening on port 4001 along with some information about auto-generated configuration files:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Started Filesystem GraphQL server on port: 4001
Generating Tina config
Tina config &lt;span class="o"&gt;======&amp;gt;&lt;/span&gt; /.tina/__generated__/config
Typescript types &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; /.tina/__generated__/types.ts
GraphQL types &lt;span class="o"&gt;====&amp;gt;&lt;/span&gt; /.tina/__generated__/schema.gql
ready - started server on 0.0.0.0:3000, url: http://localhost:3000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's test it out:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡Tip: if you have a GraphQL client like &lt;a href="https://altair.sirmuel.design/"&gt;Altair&lt;/a&gt; you can explore the API by pointing it to &lt;a href="http://localhost:4001/graphql"&gt;http://localhost:4001/graphql&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="c"&gt;# Point your request to http://localhost:4001/graphql&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;getPostsList&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SimplePost_Doc_Data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here is the result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"errors"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"message"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Unexpected value of type string for boolean value"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"getPostsList"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This error is coming from our old friend &lt;code&gt;featured: "false"&lt;/code&gt;. This is exactly the kind of assurance you'd get from a CMS, but without any of the overhead. After fixing the issue, we get what we expected:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"getPostsList"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Dynamic Routing and Static Generation"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;truncated&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can use GraphQL to replace all of our bespoke filesystem data-fetching logic and rest assured that the data we get back will be exactly what we expect it to be.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;BlogPostQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$relativePath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;!)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;getPostsDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;relativePath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$relativePath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SimplePost_Doc_Data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;excerpt&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;coverImage&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Author_Doc_Data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="n"&gt;picture&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;ogImage&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;featured&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;_body&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Demo: &lt;a href="https://github.com/tinacms/next-blog-starter-graphql/compare/split-author-data..add-tina-gql"&gt;View the changes&lt;/a&gt; we made to add Tina GraphQL&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#to-be-continued"&gt;
  &lt;/a&gt;
  To be continued
&lt;/h2&gt;

&lt;p&gt;Being able to work locally with GraphQL is a first step to help us bring the capabilities of a full-fledged CMS to the filesystem. Tina Cloud will offer the same great experience through a hosted headless API. In the coming weeks we'll continue sharing more about how this API works with TinaCMS to bring visual content management to your website with minimal overhead.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Take a look at the &lt;a href="https://github.com/tinacms/next-blog-starter-graphql/tree/add-tina-gql"&gt;demo&lt;/a&gt; we just went through, see if you can expand on it and share your progress with us!&lt;/p&gt;
&lt;/blockquote&gt;

</description>
    </item>
    <item>
      <title>A Letter to My Fellows and Not Only</title>
      <author>Miroslav Nikolov</author>
      <pubDate>Thu, 29 Apr 2021 15:54:54 +0000</pubDate>
      <link>https://dev.to/moubi/a-letter-to-my-fellows-and-not-only-56m</link>
      <guid>https://dev.to/moubi/a-letter-to-my-fellows-and-not-only-56m</guid>
      <description>&lt;p&gt;Hi.&lt;/p&gt;

&lt;p&gt;Maybe you are following me here on Dev.to or just went over this post. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It is my farewell to the platform&lt;/strong&gt;. I decided to no longer re-publish but instead focus solely on my &lt;a href="https://webup.org/blog"&gt;programming blog&lt;/a&gt; and newsletter.&lt;/p&gt;

&lt;p&gt;If you are interested in my future articles and would like to opt-in for new content then head over to &lt;a href="https://webup.org/blog/subscribe"&gt;CodeDistress&lt;/a&gt; and Sign up.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;I write stories about real programming and human challenges in software development. Long essays or code how-tos. Answers I wish Google would one day have.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;A few posts of mine previously shared on Dev.to:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/moubi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jZQ3q0FP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--hOfQDVDS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/349629/bbe584ff-b363-48be-9e42-3536bfecf50a.jpeg" alt="moubi image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/moubi/thoughts-on-device-based-code-split-in-react-4n09" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to Do a Device Based Code Split in React&lt;/h2&gt;
      &lt;h3&gt;Miroslav Nikolov ・ Nov  6 '20 ・ 11 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#mobile&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/moubi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jZQ3q0FP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--hOfQDVDS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/349629/bbe584ff-b363-48be-9e42-3536bfecf50a.jpeg" alt="moubi image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/moubi/how-can-developers-save-a-failing-project-558j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How Can Developers Save a Failing Project&lt;/h2&gt;
      &lt;h3&gt;Miroslav Nikolov ・ Jan 18 ・ 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/moubi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jZQ3q0FP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--hOfQDVDS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/349629/bbe584ff-b363-48be-9e42-3536bfecf50a.jpeg" alt="moubi image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/moubi/handle-a-component-with-unknown-content-variants-b38" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;React Patterns: A Component with Many Content Variants&lt;/h2&gt;
      &lt;h3&gt;Miroslav Nikolov ・ Feb  9 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codequality&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>farewell</category>
    </item>
    <item>
      <title>JS Interview #36: Can you add a new property to the JS array?</title>
      <author>Coderslang: Become a Software Engineer</author>
      <pubDate>Thu, 29 Apr 2021 15:25:22 +0000</pubDate>
      <link>https://dev.to/coderslang/js-interview-36-can-you-add-a-new-property-to-the-js-array-137b</link>
      <guid>https://dev.to/coderslang/js-interview-36-can-you-add-a-new-property-to-the-js-array-137b</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vFie7Z_L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/js-test-36.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vFie7Z_L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/js-test-36.png" alt="js-test-36"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Does the new array property affect its length? Is such an assignment valid at all?&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;JavaScript arrays are used to store values in an orderly fashion. Normally, to add a new element, you should use the built-in &lt;code&gt;push()&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;But, in JS, all arrays are objects in the first place. Which means you can add new fields to them.&lt;/p&gt;

&lt;p&gt;The assignment &lt;code&gt;arr.greeting = 'Hello, world!'&lt;/code&gt;  won’t raise any errors and is perfectly fine from the language standpoint.&lt;/p&gt;

&lt;p&gt;Once it’s executed, the array will have an extra property &lt;code&gt;greeting&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The length of an array won’t change as &lt;code&gt;Hello, world!&lt;/code&gt; isn’t considered one of the elements of the array.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;ANSWER&lt;/strong&gt;: the length of an array won’t change and will remain equal to &lt;code&gt;4&lt;/code&gt;. The second &lt;code&gt;console.log&lt;/code&gt; prints out &lt;code&gt;Hello, world!&lt;/code&gt; to the screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://js.coderslang.com/sign-in"&gt;Learn Full-Stack JavaScript&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>codewnewbie</category>
    </item>
  </channel>
</rss>
