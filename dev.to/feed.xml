<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Build Rock, Paper and Scissors game in ReactJS</title>
      <author>CodeBucks</author>
      <pubDate>Mon, 25 Jan 2021 16:58:23 +0000</pubDate>
      <link>https://dev.to/codebucks/build-rock-paper-and-scissors-game-in-reactjs-2cil</link>
      <guid>https://dev.to/codebucks/build-rock-paper-and-scissors-game-in-reactjs-2cil</guid>
      <description>&lt;p&gt;Hi there,&lt;/p&gt;

&lt;p&gt;I was thinking to make something good which covers some react concepts as well as good styling(UI). &lt;/p&gt;

&lt;p&gt;I found one challenge of creating Rock, Paper and scissors on &lt;a href="https://www.frontendmentor.io/"&gt;Frontend Mentor&lt;/a&gt;. You can see it &lt;a href="https://www.frontendmentor.io/challenges/rock-paper-scissors-game-pTgwgvgH"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Let's solve this challenge.&lt;/p&gt;

&lt;p&gt;From this tutorial you will learn,&lt;br&gt;
-- A new fast way to create react app&lt;br&gt;
-- React Hooks&lt;br&gt;
-- Modal (Best Practice)&lt;br&gt;
-- Creating Countdown&lt;br&gt;
-- Sass styling&lt;br&gt;
-- Advanced Conditional Rendering&lt;br&gt;
-- React-router functionalities&lt;/p&gt;

&lt;p&gt;Now for the styling part it will be good if you watch the video format of this tutorial.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/tCSaSDgz2Hw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-start-creating-our-app" class="anchor"&gt;
  &lt;/a&gt;
  Let's start creating our app
&lt;/h3&gt;

&lt;p&gt;In this tutorial I'm using &lt;a href="https://parceljs.org/"&gt;parcel&lt;/a&gt; to create react app instead of create-react-app.&lt;/p&gt;

&lt;p&gt;Go to this page &lt;a href="https://createapp.dev/parcel"&gt;createdev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this page select &lt;strong&gt;react&lt;/strong&gt; in Main library.&lt;br&gt;
Select &lt;strong&gt;Sass&lt;/strong&gt; in Styling.&lt;br&gt;
and for linting choose whichever you are using.&lt;br&gt;
then just write project name and download the project.&lt;/p&gt;

&lt;p&gt;When you unzip this you will find whole folder structure.&lt;br&gt;
so, after unzip do &lt;code&gt;npm install&lt;/code&gt; so it will install all the libraries listed in the package.json file.&lt;/p&gt;

&lt;p&gt;Also, we will need two more libraries so install,&lt;br&gt;
&lt;code&gt;npm install react-router-dom node-sass&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Start your app by,&lt;br&gt;
&lt;code&gt;npm start&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Parcel will build much faster then ordinary create-react-app.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Our project setup is done.&lt;/p&gt;

&lt;p&gt;Create two folders in src.&lt;br&gt;
one folder which is &lt;em&gt;components&lt;/em&gt; and another &lt;em&gt;scss&lt;/em&gt; to store scss files.&lt;/p&gt;

&lt;p&gt;Our Component Folder will contain:-&lt;br&gt;
|-- Header.js (The header part where we display score)&lt;br&gt;
|-- Play.js (Provides 3 choices)&lt;br&gt;
|-- Game.js (Display the Result)&lt;br&gt;
|-- Footer.js (Footer contains Rules button)&lt;br&gt;
|-- Modal.js (Display Rules)&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#lets-start-with-the-appjs" class="anchor"&gt;
  &lt;/a&gt;
  Let's start with the App.js
&lt;/h2&gt;

&lt;p&gt;First of all import all the components here except modal.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Line 9:&lt;/strong&gt; This state &lt;strong&gt;myChoice&lt;/strong&gt; is to store our choice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 10:&lt;/strong&gt; This state &lt;strong&gt;score&lt;/strong&gt; is to store score.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 15:&lt;/strong&gt; Call header component here and pass score as props so that we can display score in the header part.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 16 to 23:&lt;/strong&gt; Here we have used Switch and Route from react-router-dom. Now using this,&lt;br&gt;
when path is at "/" then we will render play component else&lt;br&gt;
when path is at "/game" we will render game component.&lt;br&gt;
&lt;em&gt;Eventually when you set your choice we will change path from "/" to "/game"&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Make sure to wrap your app component with BrowserRouter in index.js file.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Line 18:&lt;/strong&gt; Play component will need setMyChoice method so pass it as props.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 32:&lt;/strong&gt; Game component will need myChoice, score and setScore to decide the result.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 25:&lt;/strong&gt; We have placed footer component.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#header-component" class="anchor"&gt;
  &lt;/a&gt;
  Header Component
&lt;/h2&gt;

&lt;p&gt;Deconstruct score from the props and just display score inside the h1 tag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";

const Header = ({ score }) =&amp;gt; {
  return (
    &amp;lt;div className="header"&amp;gt;
      &amp;lt;h1&amp;gt;Score: {score}&amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;
  );
};

export default Header;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#play-component" class="anchor"&gt;
  &lt;/a&gt;
  Play Component.
&lt;/h2&gt;

&lt;p&gt;In this component we will provide three choices to choose from.&lt;br&gt;
So create 3 Links.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Make sure you have imported Link from "react-router-dom" as in Line no 2.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line no 11 to 17:&lt;/strong&gt; &lt;br&gt;
We have created Link and set it's path to="/game".&lt;br&gt;
Now inside this link we have created one div, this div has special attribute which is &lt;em&gt;data-id&lt;/em&gt; this attribute contains value like paper, rock or scissors. &lt;br&gt;
Now onClick there is new method which is setChoice which sets the choice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 5:&lt;/strong&gt; This setChoice methods takes e as parameter and extracts value from data-id attribute and setMyChoice state.&lt;/p&gt;

&lt;p&gt;So, when we set this choice the path will change from "/" to "/game", and our choice will be passed down to the &lt;em&gt;game&lt;/em&gt; component.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#game-component" class="anchor"&gt;
  &lt;/a&gt;
  Game Component
&lt;/h2&gt;

&lt;p&gt;Let's create the game component.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Line 4:&lt;/strong&gt; make sure to deconstruct all 3 ({ score, myChoice, setScore }) props.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 6:&lt;/strong&gt; This house state will store the choice of house (or computer).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 7:&lt;/strong&gt; playerWin state is to decide results which can be "win" "lose" or "draw".&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 11 to 14:&lt;/strong&gt; Now this newHousePick() method will select choices randomly from choices array. using Math.random()*3. and it will use setHouse() to set house state.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 15:&lt;/strong&gt; we will use useEffect to call this newHousePik() method so that whenever game components loads it will select house choice from the beginning.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 19:&lt;/strong&gt; This Result() function decides who wins.&lt;br&gt;
Now for the conditions we all know how to play this game so you can read conditions easily.&lt;br&gt;
if player wins then playerWin = "win" and score = score + 1.&lt;br&gt;
if player loses then playerWin = "lose" and score = score - 1.&lt;br&gt;
if player and house both chose same choice then playerWin = "draw"&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 43:&lt;/strong&gt; This useEffect calls Result() function. We will call this useEffect only when house has been chosen so put house at the input of useEffect.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 49:&lt;/strong&gt; This display myChoice state. (our choice)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 50:&lt;/strong&gt; Displays house choice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 53, 54, 55:&lt;/strong&gt;&lt;br&gt;
These lines display result message using conditional rendering.&lt;br&gt;
if player win then it will display &lt;em&gt;you win&lt;/em&gt;.&lt;br&gt;
if player lose then it will display &lt;em&gt;you lose&lt;/em&gt;.&lt;br&gt;
if game is draw then it will display &lt;em&gt;Draw&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 57:&lt;/strong&gt; This is Link which contains Play again button.&lt;br&gt;
this button takes us back to path "/". and onClick it will reset the house state.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#thats-it-whole-logic-part-of-our-app-is-completed-now-you-can-start-styling-it" class="anchor"&gt;
  &lt;/a&gt;
  That's it whole logic part of our app is completed now you can start styling it.
&lt;/h4&gt;

&lt;p&gt;If you want to create whole app same as provided in the frontend mentor challenge then do watch the video.&lt;br&gt;
In the video you will learn new way to create Modal in react and also you'll learn to create and render countDown.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I don't want to write whole styling part because it will only make this article more big, So it's better to watch video for it or you can directly see the code in github.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can find Full-Code repository from &lt;a href="https://github.com/codebucks27/ReactJs-rock-paper-scissors-game"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading-and-supporting" class="anchor"&gt;
  &lt;/a&gt;
  Thanks For Reading and Supporting.😄
&lt;/h3&gt;

&lt;p&gt;Feel free to visit my youtube channel: &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#codebucks" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/channel/UCeYt6blRBKuNrEg_-282fSA"&gt;@CodeBucks&lt;/a&gt;
&lt;/h4&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Tutorial - Create generative social images using SVG!</title>
      <author>George Francis</author>
      <pubDate>Mon, 25 Jan 2021 16:39:39 +0000</pubDate>
      <link>https://dev.to/georgedoescode/tutorial-create-generative-social-images-using-svg-2c47</link>
      <guid>https://dev.to/georgedoescode/tutorial-create-generative-social-images-using-svg-2c47</guid>
      <description>&lt;p&gt;So... it's 2021. The web is an endless sea of beautiful, weird, terrifying stuff. How do you make sure your site cuts through the noise? &lt;/p&gt;

&lt;p&gt;Well, alongside some great content, I think an awesome &lt;strong&gt;generative&lt;/strong&gt; social image &lt;em&gt;(just like the one used for this tutorial!)&lt;/em&gt; could be a good step along the way ✨&lt;/p&gt;

&lt;p&gt;Let’s make some!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#the-end-result" class="anchor"&gt;
  &lt;/a&gt;
  The end result
&lt;/h1&gt;

&lt;p&gt;First things first, let’s skip to the end. Here is the final result of this tutorial: &lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/georgedoescode/embed/PoGLmmX?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;It's a scalable, editable, self-generating social image! If you click on the buttons in the CodePen above or change the text content, you should see the image magically re-design itself 🔮&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#but-whats-it-actually-for" class="anchor"&gt;
  &lt;/a&gt;
  But... what's it actually for?
&lt;/h1&gt;

&lt;p&gt;A &lt;em&gt;"social image"&lt;/em&gt; as I call them, or &lt;em&gt;"meta image"&lt;/em&gt;, is the little preview that shows up in Slack / Twitter / Facebook whenever you paste a link.&lt;/p&gt;

&lt;p&gt;Here are some social image examples found in the wild...&lt;/p&gt;

&lt;p&gt;An awesome textured design from &lt;a href="https://twitter.com/5t3ph"&gt;Stephanie Eckles&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UsZBh2Eo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/snzbkyx9h95ynlxwr0ig.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UsZBh2Eo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/snzbkyx9h95ynlxwr0ig.png" alt="A custom, textured social image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The much-loved social image from &lt;a href="https://dev.to/"&gt;DEV&lt;/a&gt; + &lt;a href="https://twitter.com/bendhalpern"&gt;Ben Halpern&lt;/a&gt;: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R8ViCfVA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ae44nmwc93g73x7539b6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R8ViCfVA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ae44nmwc93g73x7539b6.png" alt="DEV community social image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some very cool 3D vibes from &lt;a href="https://twitter.com/JoshWComeau"&gt;Josh Comeau&lt;/a&gt;: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CRsV-bSM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/l7y5oaws07oinhpuuyma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CRsV-bSM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/l7y5oaws07oinhpuuyma.png" alt="A custom 3d style social image on Twitter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Although all of my examples are from Twitter, it's important to remember &lt;em&gt;(and a huge benefit to creating your social images with SVG)&lt;/em&gt; that different sites &lt;strong&gt;can&lt;/strong&gt; require different dimensions. &lt;/p&gt;

&lt;p&gt;Luckily, through the power of &lt;code&gt;SVG&lt;/code&gt; + &lt;code&gt;viewBox&lt;/code&gt;, the images we are going to create in this tutorial can be simply resized to any dimensions/aspect ratio. Nice!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#blast-off" class="anchor"&gt;
  &lt;/a&gt;
  Blast off 🚀
&lt;/h1&gt;

&lt;p&gt;OK, I think that's enough preamble. We are ready to start building. Overalls on, folks!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html-markup" class="anchor"&gt;
  &lt;/a&gt;
  HTML Markup
&lt;/h2&gt;

&lt;p&gt;First things first let's add some HTML for our page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social-image-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- Save a space for our SVG! --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"controls"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"controls__randomize"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"controls__label"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Randomize:&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"controls__btn controls__btn--alignment"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Alignment&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"controls__btn controls__btn--colors"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Colors&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"controls__btn controls__btn--shapes"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Shapes&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"controls__btn controls__btn--save"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Save&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In this code snippet, we are adding the HTML markup we need for our UI and popping everything inside a nice little wrapper &lt;code&gt;div&lt;/code&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#svg-markup" class="anchor"&gt;
  &lt;/a&gt;
  SVG Markup
&lt;/h2&gt;

&lt;p&gt;Once we have added the HTML for the user interface it's for the main markup event. I mentioned earlier that our social images are going to be created using the &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; element, so let's add one to our &lt;code&gt;social-image-wrapper&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social-image-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt;
    &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 1200 630"&lt;/span&gt;
    &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social-image"&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;foreignObject&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"1200"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"630"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social-image__html"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social-image__text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt;
            &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/xhtml"&lt;/span&gt;
            &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social-image__title"&lt;/span&gt;
            &lt;span class="na"&gt;contenteditable&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            All of this text is editable... click on it and start typing!
          &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt;
            &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/xhtml"&lt;/span&gt;
            &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social-image__meta"&lt;/span&gt;
            &lt;span class="na"&gt;contenteditable&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            As you type, the background will adapt itself to the text, making
            sure the shapes never overlap.
          &lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/foreignObject&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;There is quite a bit to unpack here but don't worry! We can work through it together 🤝&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#viewbox" class="anchor"&gt;
  &lt;/a&gt;
  viewBox
&lt;/h3&gt;

&lt;p&gt;First off, we are creating our &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; element and defining a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox"&gt;viewBox&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt;
  &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 1200 630"&lt;/span&gt;
  &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt;
  &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social-image"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  ...
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;viewBox&lt;/code&gt; attribute defines the coordinate space in which all of the contents of our &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; will be drawn. In our case, this is &lt;code&gt;1200x630px&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Through the power of &lt;code&gt;viewBox&lt;/code&gt;, we can position/scale everything relative to a fixed coordinate space, whilst the &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; itself will be able to scale to any size. Powerful stuff ⚡&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#foreignobject" class="anchor"&gt;
  &lt;/a&gt;
  foreignObject
&lt;/h3&gt;

&lt;p&gt;Next, we add a &lt;code&gt;foreignObject&lt;/code&gt; tag filled with some HTML to our &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; element:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;foreignObject&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"1200"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"630"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  ...
&lt;span class="nt"&gt;&amp;lt;/foreignObject&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This is where things start getting interesting! &lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject"&gt;foreignObject&lt;/a&gt; can be used to add content from another XML namespace (in our case, HTML) to an &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; element. &lt;/p&gt;

&lt;p&gt;Once added, this &lt;code&gt;HTML&lt;/code&gt; will automatically scale to the &lt;code&gt;viewBox&lt;/code&gt; just like regular &lt;code&gt;SVG&lt;/code&gt; content. This is incredibly powerful, as it allows us to style the contents of our social image using CSS whilst retaining the fluidity and rendering power of SVG. &lt;/p&gt;

&lt;p&gt;More on that shortly. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note: any &lt;code&gt;HTML&lt;/code&gt; elements added within &lt;code&gt;foreignObject&lt;/code&gt; must posses an &lt;code&gt;xmlns="http://www.w3.org/1999/xhtml"&lt;/code&gt; attribute.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-contenteditable-attribute" class="anchor"&gt;
  &lt;/a&gt;
  The contenteditable attribute
&lt;/h3&gt;

&lt;p&gt;The last thing to check out here is the &lt;code&gt;contenteditable&lt;/code&gt; attribute added to our &lt;code&gt;h1&lt;/code&gt; and &lt;code&gt;h2&lt;/code&gt; tags:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt;
  &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/xhtml"&lt;/span&gt;
  &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social-image__title"&lt;/span&gt;
  &lt;span class="na"&gt;contenteditable&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  All of this text is editable... click on it and start typing!
&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable"&gt;contenteditable&lt;/a&gt; simply allows the user to edit the text within &lt;code&gt;HTML&lt;/code&gt; tags. This is perfect for us, as it means users will easily be able to add their own content and instantly preview the result.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#style-time" class="anchor"&gt;
  &lt;/a&gt;
  Style time 💅
&lt;/h2&gt;

&lt;p&gt;OK, so, we now have all the markup we need to create beautiful social images. Things are probably looking a little bit sad though. We should really fix that. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#page-styles" class="anchor"&gt;
  &lt;/a&gt;
  Page styles
&lt;/h3&gt;

&lt;p&gt;First up, let's add some styles for our UI:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--black&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;place-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;-apple-system&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BlinkMacSystemFont&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Segoe UI"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Roboto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Helvetica&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Apple Color Emoji"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Segoe UI Emoji"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Segoe UI Symbol"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--black&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;-webkit-font-smoothing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;antialiased&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;-moz-osx-font-smoothing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grayscale&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.wrapper&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.controls&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.controls__label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.controls__randomize&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.controls__btn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--black&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inherit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--black&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.controls__btn&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--black&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.controls__btn--save&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--black&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.controls__btn--save&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--black&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.controls__saving-disabled&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.875rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;italic&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;800px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.75rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.controls__btn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.875rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.75rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.controls__label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.875rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nc"&gt;.controls__btn--save&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;480px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.controls__btn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;I won't go too deep on this CSS, as it's not the main feature here. If you do have any questions about these styles, though, do feel free to drop me a message.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#social-image-styles" class="anchor"&gt;
  &lt;/a&gt;
  Social image styles
&lt;/h3&gt;

&lt;p&gt;Next, let's add an internal &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tag to our &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; element. This will contain all the styles for the social image itself:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt;
  &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 1200 630"&lt;/span&gt;
  &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt;
  &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social-image"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.social-image&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="py"&gt;--align-text-x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="py"&gt;--align-text-y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

      &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f5f7fa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;-apple-system&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BlinkMacSystemFont&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Segoe UI"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Roboto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;Helvetica&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Apple Color Emoji"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Segoe UI Emoji"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;"Segoe UI Symbol"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.social-image__html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--align-text-x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--align-text-y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;72px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.social-image__text&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;700px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.social-image__title&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;56px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;68px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;800&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;24px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;letter-spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-0.0125em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.social-image__meta&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;24px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;36px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;letter-spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-0.0125em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
  ...
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We are adding this CSS to an internal &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tag as I had some issues with &lt;code&gt;html2canvas&lt;/code&gt; not rendering as expected with the styles living outside of the &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;. It's also nice to keep things contained.&lt;/p&gt;

&lt;p&gt;Again, I won't go into too much detail with the CSS here, but the key effects of this stylesheet are: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Set up some &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/--*"&gt;CSS Custom Properties&lt;/a&gt; to handle the positioning of our text within the social image, in combination with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/flex"&gt;flexbox&lt;/a&gt;. We can modify these custom properties later using JavaScript. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add some typographic style to the text content. We are using &lt;em&gt;system fonts&lt;/em&gt; here. It is possible to use custom fonts, but doing so adds a little complexity as the fonts need to be embedded within the &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;. Maybe next time!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#our-progress-so-far" class="anchor"&gt;
  &lt;/a&gt;
  Our progress so far
&lt;/h3&gt;

&lt;p&gt;Now that both of these stylesheets have been added in their respective positions, you should hopefully be seeing something like this in your browser: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j_g3xcrG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/fpfnldjdn4qcaxo3xh3o.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j_g3xcrG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/fpfnldjdn4qcaxo3xh3o.gif" alt="A simple social image design being resized"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pretty cool eh! As you resize your browser, check out how our HTML magically scales along with our &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; element ✨&lt;/p&gt;

&lt;p&gt;At this point, we are all set up and ready to make things beautiful. Let's head over to JS-town and make that happen 🎨&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#next-stop-javascript-central" class="anchor"&gt;
  &lt;/a&gt;
  Next stop, JavaScript central 🚂
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#package-installation" class="anchor"&gt;
  &lt;/a&gt;
  Package installation
&lt;/h3&gt;

&lt;p&gt;Let's get the boring stuff out of the way first and install the packages we need for this project. The packages we will be using are: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/svgjs"&gt;svg.js&lt;/a&gt; - Used to simplify SVG scripting (creating and updating SVG elements such as &lt;code&gt;&amp;lt;circle&amp;gt;&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/html2canvas"&gt;html2canvas&lt;/a&gt; - Used to take a screenshot of our &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; social image so that it can be downloaded&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/file-saver"&gt;file-saver&lt;/a&gt; - Used to handle the saving of our social image once it has been captured by &lt;code&gt;html2canvas&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/resize-observer-polyfill"&gt;resize-observer-polyfill&lt;/a&gt; - Adds a polyfill for &lt;code&gt;ResizeObserver&lt;/code&gt; to browsers that do not support it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are following along on CodePen, you can simply add these imports to your JS file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;SVG&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://cdn.skypack.dev/@svgdotjs/svg.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;html2canvas&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://cdn.skypack.dev/html2canvas@1.0.0-rc.7&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ResizeObserver&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://cdn.skypack.dev/resize-observer-polyfill@1.5.1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;FileSaver&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://cdn.skypack.dev/file-saver@2.0.5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If you are working in your own environment, you can install the packages you need with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i svgjs html2canvas resize-observer-polyfill file-saver 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The packages can then be imported like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;SVG&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;svg.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;html2canvas&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;html2canvas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ResizeObserver&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;resize-observer-polyfill&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;FileSaver&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;file-saver&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note: If you are working in your own environment, you will need a bundler such as Webpack or Parcel to handle these imports.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dom-element-references" class="anchor"&gt;
  &lt;/a&gt;
  DOM Element references
&lt;/h3&gt;

&lt;p&gt;Now that we have all the packages we need for this project, we should add some variables that reference our various DOM elements &lt;strong&gt;(buttons, the social image svg, etc)&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;To do so we can add:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;socialImageSVG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.social-image&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;socialImageTitle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.social-image__title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;socialImageMeta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.social-image__meta&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;saveBtn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.controls__btn--save&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;alignmentBtn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.controls__btn--alignment&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;colorBtn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.controls__btn--colors&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shapesBtn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.controls__btn--shapes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#colors" class="anchor"&gt;
  &lt;/a&gt;
  Colors
&lt;/h3&gt;

&lt;p&gt;Next up on the list is defining some color variables. These will store a bunch of HSL colors that we will define a little later and eventually use to color our social image:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;baseColor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;baseColorWhite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;baseColorBlack&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;complimentaryColor1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;complimentaryColor2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;shapeColors&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Nice. All our colors are empty right now, but that's fine.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#alignment-options" class="anchor"&gt;
  &lt;/a&gt;
  Alignment options
&lt;/h3&gt;

&lt;p&gt;In addition to random colors, our social image will also allow random alignment of its text. To facilitate this a little further down the track, let's store the &lt;code&gt;flex&lt;/code&gt; properties we want to use to control alignment in an array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;alignmentOpts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;flex-start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;flex-end&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Lovely. We will use these values shortly. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#set-up-an-svgjs-instance" class="anchor"&gt;
  &lt;/a&gt;
  Set up an svg.js instance
&lt;/h3&gt;

&lt;p&gt;We are going to use &lt;a href="https://svgjs.com/docs/3.0/"&gt;svg.js&lt;/a&gt; here to allow for quick, easy SVG scripting. Without svg.js, creating and updating SVG elements can get &lt;strong&gt;very&lt;/strong&gt; wordy.&lt;/p&gt;

&lt;p&gt;We can create a new svg.js instance like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shapes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;SVG&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;socialImageSVG&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;What this line is saying is - Create me a new SVG &lt;code&gt;&amp;lt;group&amp;gt;&lt;/code&gt; element, inside our root &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; that I can easily draw into with methods such as &lt;code&gt;shapes.rect(...)&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-the-raw-random-endraw-utility-function" class="anchor"&gt;
  &lt;/a&gt;
  Adding the &lt;code&gt;random()&lt;/code&gt; utility function
&lt;/h3&gt;

&lt;p&gt;Before we go any further, lets quickly add a small utility function &lt;code&gt;random&lt;/code&gt;, which generates a random number within a range:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This is a super handy utility. Definitely save it for later if you fancy trying your hand at some more generative stuff! I use it all the time. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#choose-some-random-colors" class="anchor"&gt;
  &lt;/a&gt;
  Choose some random colors
&lt;/h3&gt;

&lt;p&gt;Often in my tutorials, I hold the colors until right at the end, but I think for this one we should define them early. They are such an integral part of the end result and having them set will make following the code in the upcoming steps a  bit easier. &lt;/p&gt;

&lt;p&gt;To generate some random colors, we can add the following &lt;code&gt;setColors&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;setColors&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;baseHue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;saturation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;baseColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`hsl(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;baseHue&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;saturation&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%, 60%)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;baseColorWhite&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`hsl(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;baseHue&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;saturation&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%, 97%)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;baseColorBlack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`hsl(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;baseHue&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, 95%, 3%)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;complimentaryColor1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`hsl(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;baseHue&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;saturation&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%, 60%)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;complimentaryColor2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`hsl(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;baseHue&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;saturation&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%, 60%)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;shapeColors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;complimentaryColor1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;complimentaryColor2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;baseColor&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="nx"&gt;socialImageSVG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;baseColorWhite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;socialImageSVG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;baseColorBlack&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here's what this function is doing: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pick a random hue, somewhere between 0 and 360&lt;/li&gt;
&lt;li&gt;Pick a random saturation, somewhere between 60 and 90&lt;/li&gt;
&lt;li&gt;Define a base color, a very dark color, and a very light color all based on the same hue. This is a great way to create simple color palettes and keep things consistent &lt;/li&gt;
&lt;li&gt;Choose two complementary colors, each with a hue 90 degrees away from the previous, with the same saturation and lightness. This is another great, simple way of finding colors that work together&lt;/li&gt;
&lt;li&gt;Store the complimentary and base colors in our &lt;code&gt;shapeColors&lt;/code&gt; array. We will use these later to fill in our shapes &lt;/li&gt;
&lt;li&gt;Set the background of our social image to the very light color, and it's text color to the very dark color&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now if we call &lt;code&gt;setColors()&lt;/code&gt;, we should see the background and text colors of our social image change. It will be very subtle. Hopefully, something like this: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JQY275x7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/pz3wn8cp7lc1diqwfysg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JQY275x7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/pz3wn8cp7lc1diqwfysg.png" alt="A colorful social image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looking good. Onwards!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-random-shape-positions" class="anchor"&gt;
  &lt;/a&gt;
  Creating random shape positions
&lt;/h3&gt;

&lt;p&gt;Next on our list is to generate some random, non-overlapping rectangles to position our shapes within. We want these rectangles to not only avoid overlapping each other but also avoid overlapping our text.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#a-small-problem" class="anchor"&gt;
  &lt;/a&gt;
  A small problem
&lt;/h4&gt;

&lt;p&gt;To avoid overlapping our text when creating random rectangles, we need to know each text element's dimensions &lt;strong&gt;relative&lt;/strong&gt; to our &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;'s &lt;code&gt;viewBox&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Often for this purpose we would use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/SVGGraphicsElement/getBBox"&gt;getBBox&lt;/a&gt; however &lt;code&gt;getBBox&lt;/code&gt; is only available for SVG elements, and our text is HTML. &lt;/p&gt;

&lt;p&gt;This isn't so bad, we can create our own &lt;code&gt;relativeBounds&lt;/code&gt; function that will solve this for us in no time!&lt;/p&gt;

&lt;p&gt;Here it is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;relativeBounds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getBoundingClientRect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;startPoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createSVGPoint&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;startPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;startPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;endPoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createSVGPoint&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;endPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;endPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;startPointTransformed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;startPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matrixTransform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getScreenCTM&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;inverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;endPointTransformed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;endPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matrixTransform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getScreenCTM&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;inverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;startPointTransformed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;startPointTransformed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;endPointTransformed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;startPointTransformed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;endPointTransformed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;startPointTransformed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Cool! I won't go too deep on this function as I appreciate it is rather dry, but it essentially gives us &lt;code&gt;getBBox&lt;/code&gt; functionality for HTML elements within an SVG.&lt;/p&gt;

&lt;p&gt;Now that we have our &lt;code&gt;relativeBounds&lt;/code&gt; function, we can generate our shape positions. &lt;/p&gt;

&lt;p&gt;Lets add a &lt;code&gt;generateRandomRects&lt;/code&gt; and a &lt;code&gt;detectRectCollision&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;generateRandomRects&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;existing&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;existing&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tries&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;maxShapes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;tries&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;maxShapes&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;existing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;630&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;rects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;detectRectCollision&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;rects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;rects&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;detectRectCollision&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rect1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rect2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;padding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;rect1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;rect2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;rect2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;padding&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
    &lt;span class="nx"&gt;rect1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;rect1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;padding&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;rect2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
    &lt;span class="nx"&gt;rect1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;rect2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;rect2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;padding&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
    &lt;span class="nx"&gt;rect1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;rect1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;padding&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;rect2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;To break this down: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Store some existing rectangles in an array (in our case, the surrounding rectangles, or bounds, of our text elements) &lt;/li&gt;
&lt;li&gt;For a certain amount of tries: create a randomly sized rectangle. If this new rectangle does not overlap with any of the other rectangles, store it.&lt;/li&gt;
&lt;li&gt;Once all of the tries are used up, or the maximum number of shapes reached, return the random rectangles that we managed to generate&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You may notice a funny looking &lt;code&gt;padding&lt;/code&gt; option in our rectangle collision code. This defines the minimum distance between rectangles. I found it helped make things look a little neater. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#a-note-on-imperfection" class="anchor"&gt;
  &lt;/a&gt;
  A note on imperfection
&lt;/h4&gt;

&lt;p&gt;This is far from a perfect function. It is rather slow as a result of using brute force to place our rectangles, and there is no guarantee &lt;code&gt;maxShapes&lt;/code&gt; will be reached with our number of tries. &lt;/p&gt;

&lt;p&gt;Does that mean it's bad, though? No way. &lt;/p&gt;

&lt;p&gt;We are worried more about visual results than algorithmic efficiency right now, and these values seem to produce pretty &lt;em&gt;aesthetic&lt;/em&gt; looking results. &lt;strong&gt;The real challenge of generative design lies the tweaking of values like this.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You should experiment with changing these parameters. Try changing the maximum number of shapes, maybe tweak the size of our the or increase the maximum number of tries. Check out the results. Repeat. There are no right answers here! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#drawing-our-shapes" class="anchor"&gt;
  &lt;/a&gt;
  Drawing our shapes
&lt;/h3&gt;

&lt;p&gt;Alright, so we have some code ready to generate the non-overlapping rectangles. Let's bring them to life! &lt;/p&gt;

&lt;p&gt;First, let's add a new &lt;code&gt;generate&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;shapes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;htmlRects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;relativeBounds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;socialImageSVG&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;socialImageTitle&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;relativeBounds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;socialImageSVG&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;socialImageMeta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;generateRandomRects&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;htmlRects&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rect&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;rects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;drawRandomShape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This is actually quite a small block of code. &lt;code&gt;generateRandomRects&lt;/code&gt; is doing most of the heavy lifting here. We are saying: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Clear out any shapes that already exist (this will be useful later when dynamically re-generating the image)&lt;/li&gt;
&lt;li&gt;Store the bounds of our two text elements, relative to the &lt;code&gt;viewBox&lt;/code&gt;, in an array&lt;/li&gt;
&lt;li&gt;Generate a bunch of random, non-overlapping rectangles&lt;/li&gt;
&lt;li&gt;For every random rectangle (apart from the first two text rectangles) draw a random shape &lt;strong&gt;within&lt;/strong&gt; it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, we don't actually have a &lt;code&gt;drawRandomShape&lt;/code&gt; function right now. Let's add one. As a simple start, try this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;drawRandomShape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;shapes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Once you have added &lt;code&gt;drawRandomShape&lt;/code&gt;, you can safely call &lt;code&gt;generate&lt;/code&gt; without your browser getting mad at you:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If you check out the browser now, you should see something like this: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EZZY8vx8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vnock9439moo7n3l8jdt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EZZY8vx8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vnock9439moo7n3l8jdt.png" alt="Social image with random rectangles"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pretty nice! These are the random rectangles we generated earlier, presented in a very simple way. &lt;/p&gt;

&lt;p&gt;We can expand, though. Let's update&lt;code&gt;drawRandomShape&lt;/code&gt; and add a small &lt;code&gt;randomColor&lt;/code&gt; utility function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;randomColor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ~~ === shorthand for Math.floor()&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;shapeColors&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;~~&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;shapeColors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;drawRandomShape&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shapeChoices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rect&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ellipse&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;triangle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shapeChoices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;~~&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;shapeChoices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ellipse&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;shapes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ellipse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;triangle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;shapes&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`0 &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; 0, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;shapes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;randomColor&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;shape&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;transparent&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;shape&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.825&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here's a breakdown of what's happening here: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pick a random shape type &lt;/li&gt;
&lt;li&gt;Use svg.js to render a different SVG element based on our shape choice &lt;/li&gt;
&lt;li&gt;Pick a random color from the choices we defined earlier &lt;/li&gt;
&lt;li&gt;25% of the time, apply this color to the shape outline. The other 75% fill the shape with this color&lt;/li&gt;
&lt;li&gt;Add a class of &lt;code&gt;shape&lt;/code&gt; to the element so that we can quickly reference it later &lt;/li&gt;
&lt;li&gt;Rotate the shape by some random value and reduce its opacity by a random amount&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Phew! Things are getting pretty intense. Let's have a break and marvel at our wonderful generative creation!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OSTOdiFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/1zr0g9l0tbnj8bip317e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OSTOdiFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/1zr0g9l0tbnj8bip317e.png" alt="Social image with shapes and colors added"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Woah! 🤩 Looking good folks. We are pretty much there. As you refresh your browser you should see something different each time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#interactivity" class="anchor"&gt;
  &lt;/a&gt;
  Interactivity
&lt;/h3&gt;

&lt;p&gt;The last step in this tutorial is to make things interactive. This is mostly going to involve attaching event listeners to stuff and running functionality that we have already defined. &lt;/p&gt;

&lt;p&gt;To keep things brief, I have commented this code inline. If you do require any more detail or have any questions on this stuff just let me know! &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#hooking-up-the-buttons" class="anchor"&gt;
  &lt;/a&gt;
  Hooking up the buttons
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// regenerate our shapes and shape positions&lt;/span&gt;
&lt;span class="nx"&gt;shapesBtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// set new random color values and update the existing shapes with these colors&lt;/span&gt;
&lt;span class="nx"&gt;colorBtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setColors&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="c1"&gt;// find all the shapes in our svg and update their fill / stroke&lt;/span&gt;
  &lt;span class="nx"&gt;socialImageSVG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.shape&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stroke&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stroke&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;randomColor&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fill&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;randomColor&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// choose random new alignment options and update the CSS custom properties, regenerate the shapes&lt;/span&gt;
&lt;span class="nx"&gt;alignmentBtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;socialImageSVG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;--align-text-x&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;alignmentOpts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;~~&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;alignmentOpts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)]);&lt;/span&gt;
  &lt;span class="nx"&gt;socialImageSVG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;--align-text-y&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;alignmentOpts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;~~&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;alignmentOpts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)]);&lt;/span&gt;
  &lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// save our social image as a .png file&lt;/span&gt;
&lt;span class="nx"&gt;saveBtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bounds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;socialImageSVG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getBoundingClientRect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="c1"&gt;// on save, update the dimensions of our social image so that it exports as expected&lt;/span&gt;
  &lt;span class="nx"&gt;socialImageSVG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1200px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;socialImageSVG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;630px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;socialImageSVG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;width&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;socialImageSVG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;height&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;630&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;// this fixes an odd visual "cut off" bug when exporting&lt;/span&gt;
  &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;html2canvas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.social-image-wrapper&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;630&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="c1"&gt;// export our image at 2x resolution so it is nice and crisp on retina devices&lt;/span&gt;
  &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBlob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;blob&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// restore the social image styles&lt;/span&gt;
      &lt;span class="nx"&gt;socialImageSVG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;socialImageSVG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;socialImageSVG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;width&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;socialImageSVG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;height&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="nx"&gt;FileSaver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;saveAs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;blob&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;generative-social-image.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#handling-new-text-input" class="anchor"&gt;
  &lt;/a&gt;
  Handling new text input
&lt;/h4&gt;

&lt;p&gt;Ok, so all our buttons are hooked up and that's great. There is one last feature to add though. As the user types, we want to update our shape positions. To do this we can use &lt;code&gt;ResizeObserver&lt;/code&gt; to run a function each time the width/height dimensions of our text elements change. &lt;/p&gt;

&lt;p&gt;Check it out:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resizeObserver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ResizeObserver&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;resizeObserver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;socialImageTitle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;resizeObserver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;socialImageMeta&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now as you type you should see your social image update just like the CodePen example. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#we-made-it" class="anchor"&gt;
  &lt;/a&gt;
  We made it!
&lt;/h2&gt;

&lt;p&gt;Blimey, that was quite something! The good news is, we are all done. I hope you learned something about generative design here and maybe even picked up some handy little SVG tips. &lt;/p&gt;

&lt;p&gt;I think there are lots of places you could take this and would love to hear from you if you create something cool based on this tutorial 😎&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you did enjoy this post, do follow me on Twitter &lt;a href="https://twitter.com/georgedoescode"&gt;@georgedoescode&lt;/a&gt; for a steady stream of creative coding fun.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thank you very much for reading! I'll catch you next time ❤️&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>design</category>
    </item>
    <item>
      <title>CSS Animated Button with Offset Border</title>
      <author>Abbey Perini</author>
      <pubDate>Mon, 25 Jan 2021 16:38:23 +0000</pubDate>
      <link>https://dev.to/abbeyperini/css-animated-button-with-offset-border-1ibi</link>
      <guid>https://dev.to/abbeyperini/css-animated-button-with-offset-border-1ibi</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9GmOF9YV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jfwdly6qr2qcrjcepphs.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9GmOF9YV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jfwdly6qr2qcrjcepphs.gif" alt="Animated add button being clicked"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I’m a believer in finding joy in the little things, and during my last project, that little thing was this button. I have been reading a lot about web design, and wanted my primary buttons to stand out in a big way. I had seen an image of a square button with an offset border while researching a design for an even earlier project, but never got the time to implement it. So for weeks, I’ve been trying to find the time to build this baby, and it was worth the wait.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#to-div-or-not-to-div" class="anchor"&gt;
  &lt;/a&gt;
  To div or not to div
&lt;/h1&gt;

&lt;p&gt;I researched a few ways to make the offset border without wrapping it in a container, but ultimately, I wanted an animation that looked like the button was moving into the offset border. If you are looking for an offset border and are ok with it moving with the button itself, you can use position: absolute; and z-index: -1; on the button with the ::before pseudo-selector to create an offset border. (Keep in mind transitions and animations using ::before are not supported in IE or Safari.) Similarly, you can also use an offset box shadow to create a double box effect that will move with the button.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-div-solution" class="anchor"&gt;
  &lt;/a&gt;
  The div solution
&lt;/h1&gt;

&lt;p&gt;First create a div container — using position: relative; and left:, we’ll position the whole button where we want it on the page. Changing the left: property will change its position horizontally, and you can use top: or bottom: to move it vertically. Adjusting the margin will also help.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.primary-button-container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;90px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#EBCBAD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Next, the actual button:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.primary-button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;58px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;82px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#EBCBAD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#EBCBAD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#123440&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-37px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;-25px&lt;/span&gt; &lt;span class="m"&gt;-37px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;And, finally, the animation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.primary-button&lt;/span&gt;&lt;span class="nd"&gt;:active&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;9px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;9px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If you’d like to prevent the blue focus outline, you can use this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;    
   &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;However, you should add something else (like a new &lt;code&gt;background-color:&lt;/code&gt;) in its place.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;You can check out this button (and a sweet HTML radio button/label icon selector) in detail on my Github and in action at &lt;a href="http://bujo-to-go.surge.sh/#/index"&gt;BujoToGo&lt;/a&gt; (an app I wrote in a week). Tag me on Twitter (or Github or somewhere…) if you end up using this button! I would be thrilled to see it out in the world spreading more joy.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published on Medium on December 16, 2020&lt;/em&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>17 Javascript optimization tips</title>
      <author>Blessing Hirwa</author>
      <pubDate>Mon, 25 Jan 2021 16:32:43 +0000</pubDate>
      <link>https://dev.to/blessingartcreator/17-javascript-optimization-tips-3gil</link>
      <guid>https://dev.to/blessingartcreator/17-javascript-optimization-tips-3gil</guid>
      <description>&lt;p&gt;You might be using &lt;code&gt;Javascript&lt;/code&gt; development for a long time but sometimes you might not be updated with newest beautiful features that it offers which can solve your issues without writing extra codes. These techniques can help you write clean and optimized JavaScript Code. Moreover, these topics can help you to prepare yourself for JavaScript interviews in 2021.&lt;/p&gt;

&lt;p&gt;After one of my articles about &lt;a href="https://dev.to/blessingartcreator/8-useful-javascript-tricks-you-didn-t-know-in-4-minutes-3npb"&gt;8 neat javascript skills you didn't know in 4 minutes&lt;/a&gt;, here I am coming with a new series to cover shorthand techniques that help you to write more clean and optimized JavaScript Code.My motive is to introduce all the JavaScript best practices such as shorthand and features which we must know as a frontend developer to make our life easier in 2021.This is a Cheat list for JavaScript Coding you &lt;strong&gt;must&lt;/strong&gt; know in &lt;code&gt;2021&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. If with multiple conditions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We can store multiple values in the array and we can use the array &lt;code&gt;includes&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//longhand&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abc&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;def&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ghi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jkl&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//logic&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//shorthand&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abc&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;def&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ghi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jkl&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c1"&gt;//logic&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. If true … else Shorthand&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is a greater shortcut for when we have &lt;code&gt;if-else&lt;/code&gt; conditions that do not contain bigger logics inside. We can simply use the &lt;code&gt;ternary operators&lt;/code&gt; to achieve this shorthand.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Longhand&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Shorthand&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//or we can simply use&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;After nesting the condition we remain with something which looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;test2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;greater 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;less 50&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;between 50 and 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;test2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// "greater than 100"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. Null, Undefined, Empty Checks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When we do create new variables sometimes we want to check if the variable we are referencing for its value is not &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;. JavaScript does have a really good shorthand to achieve these functions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Longhand&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;second&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Shorthand&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;second&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4. Null Value checks and Assigning Default Value&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;second&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;null check&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;test2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// output will be ""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;5. Undefined Value checks and Assigning Default Value&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;second&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;undefined check&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;test2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// output will be ""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;6.foreach Loop Shorthand&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is a useful short hand for iteration&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Longhand&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;testData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Shorthand&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;testData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;or&lt;/span&gt;  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;testData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Array for each variable&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;testData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;] = &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;testData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// prints: test[0] = 11, test[1] = 24, test[2] = 32&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;7. Comparison returns&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Using the comparison in the &lt;code&gt;return&lt;/code&gt; statement will avoid our 5 lines of code and reduced them to 1 line.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Longhand&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;checkReturn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;callMe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;checkReturn&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//output test&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callMe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Shorthand&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;checkReturn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;callMe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;8. Short function calling&lt;/strong&gt;&lt;br&gt;
We can achieve these types of functions using &lt;code&gt;ternary operator&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Longhand&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;test1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;test2&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;test3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;test3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;test1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;test2&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Shorthand&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;test3&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;test1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;test2&lt;/span&gt;&lt;span class="p"&gt;)();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;9. Switch shorthand&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We can save the conditions in the &lt;code&gt;key-value&lt;/code&gt; objects and can be used based on the conditions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Longhand&lt;/span&gt;
&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;test1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;test2&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// And so on...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Shorthand&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;test1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;test2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;anything&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;anything&lt;/span&gt;&lt;span class="p"&gt;]();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;11.Implicit Return Shorthand&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With the use of &lt;code&gt;arrow functions&lt;/code&gt;, we can return the value directly without having to write a &lt;code&gt;return&lt;/code&gt; statement.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Longhand&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="c1"&gt;//longhand&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;diameter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PI&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;diameter&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//shorthand&lt;/span&gt;
&lt;span class="nx"&gt;getArea&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;diameter&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PI&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;diameter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;12.Lookup Conditions Shorthand&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If we have code to check the type and based on the type need to call different methods we either have the option to use multiple &lt;code&gt;else ifs&lt;/code&gt; or go for the &lt;code&gt;switch&lt;/code&gt;, but what if we have better shorthand than that?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Longhand&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;test1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;test2&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;test3&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test4&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;test4&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Invalid value &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Shorthand&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;types&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;test1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;test1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;test2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;test2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;test3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;test3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;test4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;test4&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;types&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Invalid value &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;13.Object.entries()&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This feature helps to convert the object to an &lt;code&gt;array of objects&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;test1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abc&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;test2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cde&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;test3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;efg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cm"&gt;/** Output:
[ [ 'test1', 'abc' ],
  [ 'test2', 'cde' ],
  [ 'test3', 'efg' ]
]
**/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;14. Object.values()&lt;/strong&gt;&lt;br&gt;
This is also a new feature introduced in &lt;code&gt;ES8&lt;/code&gt; that performs a similar function to &lt;code&gt;Object.entries()&lt;/code&gt;, but without the key part:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;test1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abc&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;test2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cde&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cm"&gt;/** Output:
[ 'abc', 'cde']
**/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;15. Repeat a string multiple times&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To repeat the same characters again and again we can use the &lt;code&gt;for loop&lt;/code&gt; and add them in the same &lt;code&gt;loop&lt;/code&gt; but what if we have a shorthand for this?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//longhand &lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// test test test test test &lt;/span&gt;
&lt;span class="c1"&gt;//shorthand &lt;/span&gt;
&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;16. Power Shorthand&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Shorthand for a Math exponent power function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//longhand&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 8&lt;/span&gt;
&lt;span class="c1"&gt;//shorthand&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="c1"&gt;// 8&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;17. Numeric Separators&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can now easily separate numbers with just an &lt;code&gt;_&lt;/code&gt; . This will make life of developers working with large numbers more easier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//old syntax&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;98234567&lt;/span&gt;

&lt;span class="c1"&gt;//new syntax&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="nx"&gt;_234_567&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;If you would like to get update yourself with the latest features of JavaScript newest version&lt;code&gt;(ES2021/ES12)&lt;/code&gt; check below:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. replaceAll():&lt;/strong&gt; returns a new string with all matches of a pattern replaced by the new replacement word.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.Promise.any():&lt;/strong&gt; It takes an iterable of Promise objects and as one promise fulfills, return a single promise with the value.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. weakref:&lt;/strong&gt; This object holds a weak reference to another object without preventing that object from getting garbage-collected.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. FinalizationRegistry:&lt;/strong&gt; Lets you request a callback when an object is garbage collected.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Private visibility:&lt;/strong&gt; modifier for methods and accessors: &lt;code&gt;Private methods&lt;/code&gt; can be declared with &lt;code&gt;#&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Logical Operators:&lt;/strong&gt; &amp;amp;&amp;amp; and || operators.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Intl.ListFormat:&lt;/strong&gt; This object enables language-sensitive list formatting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Intl.DateTimeFormat:&lt;/strong&gt; This object enables language-sensitive date and time formatting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;br&gt;
What's more, there we have it. 17 ways to optimize your code with modern JavaScript techniques.&lt;/p&gt;

&lt;p&gt;👋&lt;strong&gt;Let's be friends!&lt;/strong&gt; Follow me on &lt;a href="https://twitter.com/graphicblessing"&gt;Twitter&lt;/a&gt; and &lt;a href="https://instagram.com/blessingartcreator"&gt;instagram&lt;/a&gt; for more related content. Don't forget to follow me also here on &lt;a href="https://dev.to/blessingartcreator"&gt;Dev&lt;/a&gt; as well to get updated for new content. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stay safe 🏠&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Shipping Jamstack like a hero - beware, it's cool</title>
      <author>Geoffroy Empain</author>
      <pubDate>Mon, 25 Jan 2021 16:23:20 +0000</pubDate>
      <link>https://dev.to/gempain/shipping-jamstack-like-a-hero-beware-it-s-cool-2a3f</link>
      <guid>https://dev.to/gempain/shipping-jamstack-like-a-hero-beware-it-s-cool-2a3f</guid>
      <description>&lt;p&gt;So you love React, Angular, Vue, Gatsby and other Jamstack frameworks ? Hooray, I do too 🎉 &lt;/p&gt;

&lt;p&gt;But.... we've all had these issues:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How do I deploy ? With Netlify, Docker, or a good old HTTP server ? 🤔&lt;/li&gt;
&lt;li&gt;When I need to change my API URL... I have to rebuild and re-deploy 😞&lt;/li&gt;
&lt;li&gt;When I need to preview a small change... re-deploying takes forever 😞&lt;/li&gt;
&lt;li&gt;Managing SSL certificates is a pain. It should be automatic when I ship a new site 😡&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The solution: &lt;a href="https://github.com/getmeli/meli"&gt;Meli&lt;/a&gt;, a self-hosted platform built on top of the well-known &lt;a href="https://github.com/caddyserver/caddy"&gt;Caddy Server&lt;/a&gt;. Out of the box, you get automatic HTTPs, zero-downtime, and heavy-duty performance.&lt;/p&gt;

&lt;p&gt;I've installed Meli on my VPS, so I'll skip this part which takes about 2 minutes with Docker Compose, but checkout &lt;a href="https://docs.meli.sh/get-started/installation"&gt;the docs&lt;/a&gt; for instructions. From here, I'll assume you've installed Meli at &lt;code&gt;https://meli.company.com&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yl48NyKk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tzj5ts3lrp2vmfsbyy1y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yl48NyKk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tzj5ts3lrp2vmfsbyy1y.png" alt="Meli login scren"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploying-a-site-to-meli" class="anchor"&gt;
  &lt;/a&gt;
  Deploying a site to Meli
&lt;/h2&gt;

&lt;p&gt;Let's start with a very simple site, &lt;code&gt;dist/index.html&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Meli example Vue.js app&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
Hello !
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Once logged in to your Meli instance:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;create a site named &lt;code&gt;hello&lt;/code&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D2e1vSZQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ssge8x05d8snqqjre0vd.gif" alt="Create a site in Meli"&gt; &lt;/li&gt;
&lt;li&gt;get your site ID
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--brFMNEkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vayv9ksga18ffn93u6uj.gif" alt="Get your site ID in Meli"&gt;
&lt;/li&gt;
&lt;li&gt;get your upload token
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aI1-Ibcg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/b296yrvsely46lj0q65b.gif" alt="Get your site upload token in Meli"&gt; &lt;/li&gt;
&lt;li&gt;upload your site
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx @getmeli/cli upload &lt;span class="se"&gt;\&lt;/span&gt;
   ./dist &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--url&lt;/span&gt; http://localhost:80 &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--site&lt;/span&gt; &lt;span class="s2"&gt;"8f30f74f-4b63-4dc3-b8dc-788ca43740a8"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--token&lt;/span&gt; &amp;lt;site-token&amp;gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--branch&lt;/span&gt; &lt;span class="s2"&gt;"latest"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Your site is now available at &lt;code&gt;https://hello.meli.company.com&lt;/code&gt; 🚀&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ncVrp7hu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ze7zn5ugh9uej7sihj70.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ncVrp7hu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ze7zn5ugh9uej7sihj70.png" alt="Example site in meli"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#serve-your-site-at-httpshellocom" class="anchor"&gt;
  &lt;/a&gt;
  Serve your site at &lt;a href="https://hello.com"&gt;https://hello.com&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Okay, I'll agree, &lt;a href="https://hello.meli.company.com"&gt;https://hello.meli.company.com&lt;/a&gt; isn't really sexy. We want our awesome site to be served at &lt;code&gt;https://hello.com&lt;/code&gt;. To do this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In your Meli site, configure a custom domain with &lt;code&gt;hello.com&lt;/code&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IYIELHka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/901nr9xxaw7zr74h8z2o.gif" alt="Configure custom domain"&gt; &lt;/li&gt;
&lt;li&gt;In the DNS zone of &lt;code&gt;hello.com&lt;/code&gt;, add an &lt;code&gt;A&lt;/code&gt; record that points the IP of &lt;code&gt;meli.company.com&lt;/code&gt;. For subdomains like &lt;code&gt;sub.hello.com&lt;/code&gt;, you can use a &lt;code&gt;CNAME&lt;/code&gt; record that points to &lt;code&gt;hello.meli.domain.com&lt;/code&gt; &lt;strong&gt;only&lt;/strong&gt; when it is the &lt;strong&gt;single&lt;/strong&gt; record (all types combined) configured for that subdomain.&lt;/li&gt;
&lt;li&gt;Browse &lt;a href="https://hello.com"&gt;https://hello.com&lt;/a&gt;, and off you go !&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#deploying-to-meli-from-your-ci" class="anchor"&gt;
  &lt;/a&gt;
  Deploying to Meli from your CI
&lt;/h2&gt;

&lt;p&gt;You can also automatically deploy when you push to your Git repository. For example, with Github Actions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;push&lt;/span&gt; &lt;span class="pi"&gt;]&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-node@v1&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;node-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;12'&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;publish"&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;npx @getmeli/cli@next upload \&lt;/span&gt;
            &lt;span class="s"&gt;./dist \&lt;/span&gt;
            &lt;span class="s"&gt;--url "https://meli.domain.com" \&lt;/span&gt;
            &lt;span class="s"&gt;--site "&amp;lt;your-site-id&amp;gt;" \&lt;/span&gt;
            &lt;span class="s"&gt;--token "$MELI_TOKEN"&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;MELI_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.MELI_TOKEN }}&lt;/span&gt;
          &lt;span class="c1"&gt;# using default GITHUB_TOKEN set by Github Actions&lt;/span&gt;
          &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Note that &lt;code&gt;--branch&lt;/code&gt; is not used here, it is auto-detected by the Meli CLI.&lt;/p&gt;

&lt;p&gt;With this setup, you'll get pull request previews in Github:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uG3ccLyn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2ncbu5osjdcw2ktegk3s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uG3ccLyn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2ncbu5osjdcw2ktegk3s.png" alt="Screen Shot 2021-01-25 at 15.40.50"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#runtime-environment-variables-in-your-static-site" class="anchor"&gt;
  &lt;/a&gt;
  Runtime environment variables in your static site
&lt;/h2&gt;

&lt;p&gt;Meli allows you to override any path in your site with dynamically generated content, per branch.&lt;/p&gt;

&lt;p&gt;Let's see how this works with a basic Vue app. We'll replace our &lt;code&gt;dist/index.html&lt;/code&gt; and upload it to our &lt;code&gt;hello&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Meli example Vue.js app&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"loading"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Loading...&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"error"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ error }}&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"env"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;{{ env.name }}&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;&lt;/span&gt;{{JSON.stringify(env, null, 2)}}&lt;span class="nt"&gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;el&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;created&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/env.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Notice that we're fetching &lt;code&gt;/env.json&lt;/code&gt;. We'll configure this file in Meli using the UI. For now, let's upload our site to our &lt;code&gt;latest&lt;/code&gt; branch.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx @getmeli/cli upload &lt;span class="se"&gt;\&lt;/span&gt;
   ./dist &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--url&lt;/span&gt; http://localhost:80 &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--site&lt;/span&gt; &lt;span class="s2"&gt;"8f30f74f-4b63-4dc3-b8dc-788ca43740a8"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--token&lt;/span&gt; &amp;lt;site-token&amp;gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--branch&lt;/span&gt; &lt;span class="s2"&gt;"latest"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This branch will be available at &lt;code&gt;https://hello.meli.domain.com&lt;/code&gt;. Now let's upload it to a new branch named &lt;code&gt;demo&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx @getmeli/cli upload &lt;span class="se"&gt;\&lt;/span&gt;
   ./dist &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--url&lt;/span&gt; http://localhost:80 &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--site&lt;/span&gt; &lt;span class="s2"&gt;"8f30f74f-4b63-4dc3-b8dc-788ca43740a8"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--token&lt;/span&gt; &amp;lt;site-token&amp;gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--branch&lt;/span&gt; &lt;span class="s2"&gt;"demo"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This branch will be served at &lt;code&gt;https://demo.hello.meli.domain.com&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, let's configure &lt;code&gt;/env.json&lt;/code&gt; in Meli:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;under branch &lt;code&gt;latest&lt;/code&gt;, add a file redirect for path &lt;code&gt;/env.json&lt;/code&gt; and with content &lt;code&gt;{"name": "prod"}&lt;/code&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LK05YVcN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/irp3c844lcswxgzngnvz.gif" alt="Add file redirect to latest branch"&gt; &lt;/li&gt;
&lt;li&gt;in under branch &lt;code&gt;demo&lt;/code&gt;, add a file redirect for path &lt;code&gt;/env.json&lt;/code&gt; and with content &lt;code&gt;{"name": "demo"}&lt;/code&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--njqnX0Mz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gu4f79lu5jl5tlop8mln.gif" alt="Create env redirect for demo branch"&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, when you go to &lt;code&gt;https://hello.meli.domain.com&lt;/code&gt;, you see this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OV9kdRgk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/p2kctdr10xjyupfo9d34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OV9kdRgk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/p2kctdr10xjyupfo9d34.png" alt="Environment preview of main branch in Meli demo site"&gt;&lt;/a&gt;&lt;br&gt;
and &lt;code&gt;https://demo.hello.meli.domain.com&lt;/code&gt; shows:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mQibmqeN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/l03jwhcanwrb77cobrdr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mQibmqeN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/l03jwhcanwrb77cobrdr.png" alt="Screen Shot 2021-01-25 at 14.45.24"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up" class="anchor"&gt;
  &lt;/a&gt;
  Wrap up
&lt;/h2&gt;

&lt;p&gt;Meli is a really cool project which allows you to self-host your static sites and frontend apps. It features a lot of cool things, and more are to come.&lt;/p&gt;

&lt;p&gt;Further reading:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.meli.sh/"&gt;Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/getmeli/meli"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/getmeli"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>angular</category>
      <category>vue</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Testing Rails 6 Zeitwerk Autoloading</title>
      <author>Marc Qualie</author>
      <pubDate>Mon, 25 Jan 2021 14:17:50 +0000</pubDate>
      <link>https://dev.to/marcqualie/testing-rails-6-zeitwerk-autoloading-23if</link>
      <guid>https://dev.to/marcqualie/testing-rails-6-zeitwerk-autoloading-23if</guid>
      <description>&lt;p&gt;Rails 6 introduced a new autoloader called Zeitwerk. While it has many many improvements, one of the main changes is how strict it is with filenames and the constants they define. Unless you have full coverage on your application (few apps actually reach 100%) it can be quite easy to end up with an app that won't boot in your staging/production environment.&lt;/p&gt;

&lt;p&gt;This is a welcome change from me, I believe it leads to much more stable and predictable codebases when the filenames and constants match 1:1. This can become an issue for anyone used to working with the rails classic autoloader since that allowed developers to get away with mostly anything inside their files.&lt;/p&gt;

&lt;p&gt;Adding the following spec to any new rails 6+ project will protect from such problems, as the autoloading will be triggered in the CI environment instead; before merge and deploy. This is also perfect if you're upgrading any older Rails 5 apps and you're nervous about switching to the new autoloader.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# spec/zeitwerk_spec.rb&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'rails_helper'&lt;/span&gt;

&lt;span class="n"&gt;describe&lt;/span&gt; &lt;span class="s1"&gt;'Zeitwerk'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'eager loads all files'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="no"&gt;Zeitwerk&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Loader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;eager_load_all&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_not&lt;/span&gt; &lt;span class="n"&gt;raise_error&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Original reference post for code snippet &lt;a href="https://mvaragnat.medium.com/rails-6-and-rspec-how-to-test-zeitwerk-mode-81782b6d3388"&gt;Rails 6 and Rspec : How to test Zeitwerk mode&lt;/a&gt; by Matthieu Varagnat&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can take this a step further on CI and have a dedicated job that runs specifically to check the autoloading. This can be dne before the tests (to avoid wasted minutes), or in parallel to highlight an autoloading issues in your PR status checks.&lt;/p&gt;

&lt;p&gt;The following line can run in any shell to perform the same job as the rspec snippet above:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;rails r &lt;span class="s1"&gt;'Zeitwerk::Loader.eager_load_all'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here is an example of my CircleCI flow for a recently upgraded rails project. Notice how Zeitwerk failure prevented a ton of other jobs triggering, which would have used quite a lot of resources and failed much later.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ayBhr4NP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media.graphcms.com/SObuqzISCSF58TfizHGx" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ayBhr4NP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media.graphcms.com/SObuqzISCSF58TfizHGx" alt="Screen-Shot-2021-01-20-14-02-56.26.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GBoWzojQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media.graphcms.com/vrfoog6yQTacEtKB7y0x" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GBoWzojQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media.graphcms.com/vrfoog6yQTacEtKB7y0x" alt="Screen-Shot-2021-01-20-14-05-09.95.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This, of course, does not replace the need for an extensive test suite, but it can save you in the early days of prototype development where a typo or unused class can slip into the codebase when working at a fast pace.&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>ci</category>
      <category>circleci</category>
    </item>
    <item>
      <title>How the Web Works</title>
      <author>Lanre Fagbeyiro</author>
      <pubDate>Mon, 25 Jan 2021 13:11:19 +0000</pubDate>
      <link>https://dev.to/lanrewaju/how-the-web-works-41pn</link>
      <guid>https://dev.to/lanrewaju/how-the-web-works-41pn</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ILjeMe8J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1610578125443/PG_IEHzLD.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ILjeMe8J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1610578125443/PG_IEHzLD.jpeg" alt="pexels-photo-206901.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Photo by  &lt;a href="https://www.pexels.com/@pixabay"&gt;Pixabay&lt;/a&gt;  on  &lt;a href="https://www.pexels.com/photo/abstract-arachnid-art-black-and-white-206901/"&gt;Pexels&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-web-is-not-the-internet" class="anchor"&gt;
  &lt;/a&gt;
  The Web is not the Internet
&lt;/h2&gt;

&lt;p&gt;Most people have gotten accustomed to using the terms “internet” and “web” interchangeably. Although the net and web are married to each other, they are fundamentally different. In simple terms, the internet is the connection between countless, separate servers, computers, and devices, as I explain in detail  &lt;a href="https://dev.to/lanrewaju/how-the-internet-works-3jno"&gt;here.&lt;/a&gt;  While the World Wide Web or Web is just a common digital space for information exchange, facilitated by global computer networks or the Internet, you connect to the Internet to access the web. The Web is the medium where we edit, discover, and share information — through links — according to a standard language: HTML. Now we understand that the internet connects participants while the web connects information.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#history-of-the-web" class="anchor"&gt;
  &lt;/a&gt;
  History of the Web
&lt;/h2&gt;

&lt;p&gt;Before the web or internet existed, there were computers but they were big and lonely and could not really talk to one another. In order to connect disparate global machines, you would need a network of networks, this need led to the rise of the internet.&lt;/p&gt;

&lt;p&gt;On October 29, 1969,  &lt;a href="https://en.wikipedia.org/wiki/Leonard_Kleinrock"&gt;Leonard Kleinrock&lt;/a&gt;  and a team at UCLA needed a way to share documents through the internet so; they decided to send the word “LOGIN” to a different model of a computer at Standford. They sent the “L” and it arrived, they sent the “O,” and it arrived and then the system crashed but still the first message sent over the internet was a big deal and it was literally “LO.”&lt;/p&gt;

&lt;p&gt;Two decades later, CERN was working on a variety of projects with different people and technologies, the way information was organized on the internet was illogical, and based on hierarchies. It was lame and  &lt;a href="https://en.wikipedia.org/wiki/Tim_Berners-Lee"&gt;Tim Berners-Lee&lt;/a&gt;  was not happy with it.&lt;/p&gt;

&lt;p&gt;In March of 1989, Tim Berners-Lee wrote a powerful paper simply titled “Information Management: A Proposal”. He argued that notes with links like references between them are far more useful than a fixed hierarchical system. Instead of trees, Berners-Lee was proposing a web. Webbed systems that connect documents in non-linear ways already existed, they were called hypertext but Tim Berners-Lee officiated the marriage of hypertext webs and the internet to produce a web that was worldwide.&lt;/p&gt;

&lt;p&gt;The first website was  &lt;a href="http://info.cern.ch/"&gt;info.cern.ch.&lt;/a&gt;  Today it provides a simulator that allows us to view the web as it appeared as a baby.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-the-web-works" class="anchor"&gt;
  &lt;/a&gt;
  How the Web Works
&lt;/h2&gt;

&lt;p&gt;When talking about how the web works, we have to mention HTTP. The HTTP protocol is the most used internet protocol in the world and it stands for Hypertext Transfer Protocol. This is a protocol and a standardized set of rules for how a form of communication should work.&lt;/p&gt;

&lt;p&gt;HTTP is a set of conventions that dictate how a client like a web browser on your MAC or PC talks to a web server and it is a protocol in the sense that it’s not a programming language per se, more like a set of predetermined talking points or greetings. HTTPS is HTTP with encryption, which stands for Hypertext Transfer Protocol Secure, so the messages exchanged between the client and the server are encrypted.&lt;/p&gt;

&lt;p&gt;HTTP is an application layer protocol that allows web-based applications to communicate and exchange data. You can think of HTTP as the messenger of the web, it is a TCP/IP based protocol and is used to deliver contents like images, videos, audios, documents, etc.&lt;/p&gt;

&lt;p&gt;Documents are transferred on the web via HTTP and are identified by URLs — Uniform Resource Locators.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#requestresponse-cycle" class="anchor"&gt;
  &lt;/a&gt;
  Request-Response Cycle
&lt;/h3&gt;

&lt;p&gt;A request-response cycle refers to the complete flow of information from when you send a request by say, making a google search until when you receive a response in the form of your search results. The process consists of two basic actors; the client and the server. While you might consider yourself the client, and you aren’t completely wrong, to the web your web browser application is the true client. It makes the request and the server, in this case, one of Google’s servers, literally serves by responding to this request and giving you the information you requested.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html" class="anchor"&gt;
  &lt;/a&gt;
  HTML
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zhyv3s-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611579743612/8xMkjJNk5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zhyv3s-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611579743612/8xMkjJNk5.gif" alt="structure.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The HTML file that stands for Hypertext Markup Language is responsible for the structure and content of your website. So if a website were a house, then the HTML would be the builders who come in to build the walls, demarcate the kitchen, toilet, basically establish the structure of your house. When we write HTML code, we also build up the structure of our website. We could use HTML to add an image or button or text box, whatever it is that you need in your website.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css" class="anchor"&gt;
  &lt;/a&gt;
  CSS
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VAWm3y8b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611579815524/q0yVUdhpt.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VAWm3y8b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611579815524/q0yVUdhpt.gif" alt="styling.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The second type of file is the CSS file, which stands for Cascading Style Sheets. These files are responsible for the presentation of the content. They are for styling and for laying out the elements on your website. If you were building a house, then these would be the painters and decorators. They add stylistic flourishes to your place and generally making it look the way you want it to. This is what CSS code does as well. When you incorporate CSS, it allows you to specify how you want your website to look. Say, for instance, we create a button using HTML, but it looks boring and we want to make it red. CSS allows us to specify the colour, grading, and other visual elements of that button. As well, we can specify fonts, font styles, and so on.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript" class="anchor"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tnx9Hixq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611579926438/HocMESUAA.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tnx9Hixq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611579926438/HocMESUAA.gif" alt="ezgif.com-gif-maker.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The final component is the JavaScript file and this is the code that allows your website to actually do things or have behavior, it allows interactive effects, DOM manipulation, and much more. As you were building your house, you would have an electrician come in to connect the wires so that the lightbulbs actually switch on. A plumber to do the plumbing so that you can open the bathroom tap. JavaScript does exactly these, it allows your website to function and be interactive. Take, for example, that red button we added earlier on with HTML and CSS code only when we have the JavaScript code it can actually do something interesting like send off an email.&lt;/p&gt;

&lt;p&gt;Going back to the Google website as an example, once we receive these files from the Google server, our browser loads up the HTML files, we’ll get to see the structure of the website. Namely, an image that has their logo, two buttons, and a text box where we can enter our search.&lt;/p&gt;

&lt;p&gt;Now when we receive the CSS files, these will modify the appearance of all of the components. We don’t have any more images, but they now look the way that google wanted them to.&lt;/p&gt;

&lt;p&gt;Finally, when we incorporate the JavaScript files then our website actually starts having some functionality and is able to do things rather than just display images and text.&lt;/p&gt;

&lt;p&gt;In a nutshell, we need three files which are HTML, CSS, and JavaScript to create web pages and use HTTP, TCP/IP protocols to send information.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>design</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Why SEO Is Important: Case Study</title>
      <author>Vlad Myhulia</author>
      <pubDate>Mon, 25 Jan 2021 13:06:15 +0000</pubDate>
      <link>https://dev.to/vlad_myhulia_3f78b80cc708/why-seo-is-important-case-study-4o2k</link>
      <guid>https://dev.to/vlad_myhulia_3f78b80cc708/why-seo-is-important-case-study-4o2k</guid>
      <description>&lt;p&gt;One day, every micro, small, or medium business meets a question: “how to make the website show up better in search results”? It may take days, weeks, months, or even years since the foundation of the company. Unikorns is not an exception. We met this question after the first 2 months of the foundation.&lt;/p&gt;

&lt;p&gt;We spend months learning how to get better and make our website more SEO friendly. Are we experts now? Hell no! But we got precious knowledge on how to build a beautiful, fast, and SEO-friendly website for our clients as well as avoid common mistakes some web studios do. Sit your belt tight and prepare for the journey. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt;  This article is not for experts but for people who have heard of the word “SEO” and know what it is. But don’t actually know much about its benefits and role in Web Design Agencies/Studios.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-guys-are-lame-at-seo" class="anchor"&gt;
  &lt;/a&gt;
  “You guys are lame at SEO!”
&lt;/h2&gt;

&lt;p&gt;Let me stop you there and explain something. There is a confusion that sounds something like: “If I will get a website anywhere, no matter expensive or not, I will skyrocket in SERP.” Eh, nope. You won’t. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IYa617i1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://unikorns-website-production.s3.eu-central-1.amazonaws.com/Nope_Danny_De_Vito_f9c25e098b.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IYa617i1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://unikorns-website-production.s3.eu-central-1.amazonaws.com/Nope_Danny_De_Vito_f9c25e098b.gif" alt="Graphic gif that represents Danny DeVito says Nope"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web-studio-field-of-work" class="anchor"&gt;
  &lt;/a&gt;
  Web studio field of work
&lt;/h3&gt;

&lt;p&gt;Basically, a web studio makes web design and web development. It’s not required for a web studio to have SEO experts that boost your website. But here is a tricky moment - your website can only organically rank well thanks to SEO (organically, &lt;a href="//www.unikorns.work/magazine/dark-patterns-of-google-search-result"&gt;not thanks to Google Ads&lt;/a&gt;). It's not about design or development but Search Engine Optimization. &lt;/p&gt;

&lt;p&gt;Sometimes an unpleasant situation happens when a client gets a desirable website but doesn’t show up in SERP after a while. Then comes million of google queries, reading, and inspecting what’s going on. And at some point client find out the truth - his website has Search Engine Unoptimization (big brain jokes, I know). &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#website-wars-research-from-moz" class="anchor"&gt;
  &lt;/a&gt;
  Website Wars research from Moz
&lt;/h3&gt;

&lt;p&gt;There was a &lt;a href="https://moz.com/ugc/website-design-wars-seo-agencies-vs-web-design-agencies-worldwide-trends"&gt;comparison&lt;/a&gt; in 2013 between the SEO Agencies and Web Design Agencies in Search Engine Optimization.&lt;/p&gt;

&lt;p&gt;It came out that Web Design Agencies often got a fancy design, but common SEO characteristics are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Defective SEO web architecture and no on-site SEO;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Poor generic words ranking and lack of keywords orientation;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Poor website optimization.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;SEO Agencies appeared to be well-optimized from the SEO perspective, but common Design characteristics are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Content clutter;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No entertainment, only informativeness;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No style, no animation, no custom fonts, old fashioned, and template-based; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Used old technologies.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you think that it was in old-fashioned 2013, I have sad news… Just go to &lt;a href="https://dribbble.com/shots/popular"&gt;Dribbble&lt;/a&gt; or &lt;a href="https://clutch.co/"&gt;Clutch&lt;/a&gt; and find some &lt;strong&gt;unpopular&lt;/strong&gt;  design studios/agencies and check their SEO in SERP or Chrome Inspector. Why unpopular? Because &lt;strong&gt;most&lt;/strong&gt;  of the clients can’t afford studios/agencies' that have highly paid and skilled employees, marketers, and SEO consultancies. &lt;/p&gt;

&lt;p&gt;You can do the same with SEO Agencies, just go to Google and try to find some. You’ll be surprised by their UX/UI design and “modernness”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--75Vu_cas--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://unikorns-website-production.s3.eu-central-1.amazonaws.com/Why_SEO_Is_Important_Comparison_ade98f3418.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--75Vu_cas--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://unikorns-website-production.s3.eu-central-1.amazonaws.com/Why_SEO_Is_Important_Comparison_ade98f3418.jpeg" alt="Graphic image that represents Why SEO Is Important Comparison "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nobrainers" class="anchor"&gt;
  &lt;/a&gt;
  No-brainers
&lt;/h3&gt;

&lt;p&gt;However, there are some no-brainer SEO rules required in design and development. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#for-instance-design" class="anchor"&gt;
  &lt;/a&gt;
  For instance, design
&lt;/h4&gt;

&lt;p&gt;You want your website to be “dressed” to kill, right? For that, you need a bombastic design, but with the basic SEO principles that are thought over during the design phase:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;What does “bombastic design” mean? A few things: animations, interaction features, visual accessibility, interface clarity. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What does “basic SEO principles in design” mean? A few things: headings hierarchy, content logic, navigation, internal linking logic between pages. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Why SEO is here? Because you want your website to be very accessible for the crawl/spider bots. Well-made wireframes (website page blueprints) are the initial step to that accessibility.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you’re curious what your web page consists of from the UX perspective, I totally recommend you to check the 7th week on &lt;a href="https://52weeksofux.com/tagged/week_7"&gt;52weeksofux&lt;/a&gt;. Fundamental website frameworks (structural, visual, social, and contextual) are really well described there.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#now-lets-move-to-the-dev-nobrainers" class="anchor"&gt;
  &lt;/a&gt;
  Now, let’s move to the dev no-brainers
&lt;/h4&gt;

&lt;p&gt;You want your website to be well-optimized and visible in SERP, right? For that, you need to develop a website with some standards:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Using HTTPS protocol; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Limit the use of the client-side javascript; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Optimize page speed; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Careful use of robots.txt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get an XML sitemap. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Where is SEO? All 5 points are SEO-friendly standards. In addition to the smooth and fast website, it will be more friendly to the crawl bots that will inspect it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want to know more about SEO, I recommend you to check the &lt;a href="https://moz.com/learn/seo/what-is-seo"&gt;SEO article&lt;/a&gt; at Moz. They’ve made an understandable and short explanation of what it is.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#to-sum-up" class="anchor"&gt;
  &lt;/a&gt;
  To sum up
&lt;/h3&gt;

&lt;p&gt;Web design studio/agency ≠ good Search Engine Optimization for your website. It doesn't mean SEO would be weak, though. SEO is just another kind of service that is not mandatory in web studios.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#our-experience-with-seo" class="anchor"&gt;
  &lt;/a&gt;
  Our experience with SEO
&lt;/h2&gt;

&lt;p&gt;The enigma has appeared when we asked ourselves: “why the hell we don’t show up in search results?!”. We have blog posts, a kick-ass website, posts on social media, some followers - what’s wrong? We made some google and discovered two things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;SEO is much more important than we thought. We have to make something with our lame one; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We have to patiently wait for results (it could take weeks/months); &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here come the changes…&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#title" class="anchor"&gt;
  &lt;/a&gt;
  Title
&lt;/h3&gt;

&lt;p&gt;We started from the most eye-catching one - title. First of all, we speak about the HTML element:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QuwuYifj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://unikorns-website-production.s3.eu-central-1.amazonaws.com/Title_HTML_Showcase_be2416a71c.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QuwuYifj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://unikorns-website-production.s3.eu-central-1.amazonaws.com/Title_HTML_Showcase_be2416a71c.jpeg" alt="Screenshot that represents title HTML Showcase"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We discovered a great thing that Google likes some limits if it comes to SEO:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;We tried to wrap our titles in a 60 characters limit on each page. If a title is too long, it may cut off the information at the end, so we need to make the right information order first; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We discovered that it’s a great practice to have different titles on each page that provide a unique value; It also affects how users see our pages in SERP. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We should avoid keyword stuffing. It can make Google algorithms penalize for over-optimization. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Above you see how it was before we tried to optimize it. Here is what we got after the optimization:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3JvmG4SI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://unikorns-website-production.s3.eu-central-1.amazonaws.com/Unikorns_Website_Titles_4978e8c7dc.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3JvmG4SI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://unikorns-website-production.s3.eu-central-1.amazonaws.com/Unikorns_Website_Titles_4978e8c7dc.jpeg" alt="Screenshot that represents Unikorns website HTML Titles"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here you can read a more detailed guide to &lt;a href="https://moz.com/learn/seo/title-tag#:~:text=Optimal%20title%20length,your%20titles%20to%20display%20properly."&gt;title optimization&lt;/a&gt; at Moz.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#meta-descriptions" class="anchor"&gt;
  &lt;/a&gt;
  Meta descriptions
&lt;/h3&gt;

&lt;p&gt;Once again, it’s about the HTML element:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_YRT7ye8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://unikorns-website-production.s3.eu-central-1.amazonaws.com/Meta_Description_Of_Unikorns_Homepage_abac4f8ae1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_YRT7ye8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://unikorns-website-production.s3.eu-central-1.amazonaws.com/Meta_Description_Of_Unikorns_Homepage_abac4f8ae1.jpeg" alt="Screenshot that represents meta description of Unikorns homepage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We discovered a problem, we didn’t make different meta descriptions for our pages. That means each page had the same one and quite a long one - 240 characters. Google likes meta descriptions that are up to about 160 characters.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;We decided to limit it to 120 characters. Why? It was our personal preference 'cause mobile browsers often cut off meta descriptions that are longer than 120 characters. From statistics comes that 60-70% of users use mobile devices for surfing. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We’ve made a unique meta description on each page. It gave our pages more unique values for crawl bots and users who read them via SERP. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, our pages look more accessible (but from some perspective, it has less valuable information in it):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vxB8R3i_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://unikorns-website-production.s3.eu-central-1.amazonaws.com/screen_shot_2021_01_04_at_18_44_02_2b00282cc7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vxB8R3i_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://unikorns-website-production.s3.eu-central-1.amazonaws.com/screen_shot_2021_01_04_at_18_44_02_2b00282cc7.jpeg" alt="screenshot that represents meta description of Unikorns showcase page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here you can read a more detailed guide to &lt;a href="https://moz.com/learn/seo/meta-description"&gt;meta description optimization&lt;/a&gt; at Moz.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#alt-tags" class="anchor"&gt;
  &lt;/a&gt;
  Alt tags
&lt;/h3&gt;

&lt;p&gt;We've added alt tags to every image on our website. People know that it’s essential. But why? If crawl bots can read all information on your website, they can fit this information into people’s queries in Google. That can increase the possibility to appear in Google Images results as well. &lt;/p&gt;

&lt;p&gt;More important is accessibility. People with vision problems could use text to speech readers without limitations and content loss. &lt;/p&gt;

&lt;p&gt;Here you can read a more detailed guide to &lt;a href="https://moz.com/learn/seo/alt-text"&gt;alt tags&lt;/a&gt; at Moz.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#canonicalization" class="anchor"&gt;
  &lt;/a&gt;
  Canonicalization
&lt;/h3&gt;

&lt;p&gt;My favorite one:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tTTL-8k3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://unikorns-website-production.s3.eu-central-1.amazonaws.com/How_To_Get_Content_For_A_Website_Canonicalization_35c3df462f.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tTTL-8k3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://unikorns-website-production.s3.eu-central-1.amazonaws.com/How_To_Get_Content_For_A_Website_Canonicalization_35c3df462f.jpeg" alt="Screenshot that represents HTML canonical link How to Get Content for a Website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The same day we started our Magazine, we began &lt;a href="https://medium.com/unikorns"&gt;Medium&lt;/a&gt; blogging. Oh, that was a mistake…&lt;/p&gt;

&lt;p&gt;The canonical tag tells the search engine where the master page location is.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;link rel=”canonical” href=”URL”&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;What does it mean? You want to make your website the original source of information or ask duplicated website URLs to point on a master page. Why? Because if you don’t, Google will make it for you. And the result won't be satisfying in the most cases :) &lt;/p&gt;

&lt;p&gt;That what’s happened to us. Because of the low page authority and unknowledge of canonical tags, Medium and Google decided to make Medium the original source of information for our articles. Googling our articles was showing Medium in SERP first.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;We canonicalized all our pages first. Now it tells search engines that our website is the original source of information. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We changed canonicalization on Medium in settings that pointed to our website articles. Now we pay close attention to canonical tags on other platforms either.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here you can read a more detailed guide to &lt;a href="https://moz.com/learn/seo/canonicalization"&gt;canonicalization&lt;/a&gt; at Moz.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keywords" class="anchor"&gt;
  &lt;/a&gt;
  Keywords
&lt;/h3&gt;

&lt;p&gt;At the very beginning, we had a 2-page MVP version of our website with no JAMstack words in it. Well, we didn’t think of it then. After some googling, we discovered that valuable texts are one of the steps to better SEO. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;We released the 1.1 version of the website and expanded it to 5 pages to create space for extra valuable information (excluding articles' pages). Also, we made internal links between the Services and Magazine pages;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We filled pages with relevant and valuable texts regarding our company. Keyword stuffing is in oblivion, so we decided to rely on LSI (Latent Semantic Indexing). &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here you can read a more detailed guide to &lt;a href="https://www.bluecorona.com/blog/improve-seo-latent-semantic-indexing/"&gt;LSI&lt;/a&gt; at Blue Corona.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#results" class="anchor"&gt;
  &lt;/a&gt;
  Results
&lt;/h3&gt;

&lt;p&gt;We noticed after a month that we jumped higher in search results thanks to these improvements. These topics above are not expert SEO knowledge, it’s just basic rules some people might don’t know. What does it mean for us as a Web Studio? We can’t help clients to make content for their website, but we can guide them in the right direction toward better SEO. &lt;/p&gt;

&lt;p&gt;Some basics take little time from our side to set up (canonicalization and proper titles and meta descriptions visibility), some take much effort from the client side to be made (texts and images). But cooperating during the project can bring great results: a good &lt;strong&gt;basic&lt;/strong&gt; SEO out of the box. Not excellent optimization, but essential. The one that won’t hurt the website in SERP.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next" class="anchor"&gt;
  &lt;/a&gt;
  What’s next?
&lt;/h2&gt;

&lt;p&gt;It’s our personal aim for the website. We have three things we want to work on that related to SEO. We want to make our website content highly understandable for search engines and to increase domain authority. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://schema.org/"&gt;Schema.org.&lt;/a&gt; We want to make structured data on our website. It will make the information on our website easier to interpret by bots. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://blog.hubspot.com/customers/ignite-organic-growth-topic-cluster-strategy-hubspot"&gt;Topic cluster strategy.&lt;/a&gt; It will help us to improve our site authority and bring more value to our SEO strategy in a long run.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.bluecorona.com/blog/what-does-a-good-backlink-look-like-seo/"&gt;Quality backlinks.&lt;/a&gt; The backlink network gives a huge boost to domain relevance and authority. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#the-fin" class="anchor"&gt;
  &lt;/a&gt;
  The fin
&lt;/h2&gt;

&lt;p&gt;We know that understanding a bit more than average is great, and we won’t let our clients go with the lame SEO right out of the box. Does it mean we provide SEO services now? No. Does it mean we will educate our clients more? Yes. We are not afraid to share our knowledge and failures because we are just humans. The key here is to make the knowledge derived from failures become our strengths.&lt;/p&gt;

&lt;p&gt;If you have any questions and concerns, we are always happy to answer, help, consult and just talk about JAMstack and headless approach as such. Feel free to write us at &lt;a href="mailto:hello@unikorns.work"&gt;hello@unikorns.work&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>html</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Is JavaScript Hard to Learn?</title>
      <author>Ayobami Ogundiran</author>
      <pubDate>Mon, 25 Jan 2021 13:04:40 +0000</pubDate>
      <link>https://dev.to/codingnninja/is-javascript-hard-to-learn-3f94</link>
      <guid>https://dev.to/codingnninja/is-javascript-hard-to-learn-3f94</guid>
      <description>&lt;p&gt;Weeeeew! That is a tricky question.&lt;/p&gt;

&lt;p&gt;Anyway, I will try my best to provide useful answers to the question.&lt;/p&gt;

&lt;p&gt;A straight forward answer to the question is, "it depends" but that is not a complete answer. &lt;/p&gt;

&lt;p&gt;Generally speaking, JavaScript is easier to learn compared to some languages such as Java or C++.&lt;/p&gt;

&lt;p&gt;Oh, wait! Is JavaScript different from Java?&lt;/p&gt;

&lt;p&gt;They're different programming languages.&lt;/p&gt;

&lt;p&gt;It can be relatively easy or hard to learn JavaScript depending on you, your study materials and their creators.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lets-talk-about-you" class="anchor"&gt;
  &lt;/a&gt;
  Let's Talk about You.
&lt;/h1&gt;

&lt;p&gt;You may struggle to learn JavaScript if you are in a hurry to learn everything about JavaScript and "cash out heavily".&lt;/p&gt;

&lt;p&gt;With such mindset, you won't pay attention to necessary fundamentals that will help in making projects.&lt;/p&gt;

&lt;p&gt;After helping a lot of students struggling to learn JavaScript, I have realized a lot of them rush to finish it and get confused whenever they want to build projects.&lt;/p&gt;

&lt;p&gt;Therefore, many JavaScript learners are forced to quit.&lt;/p&gt;

&lt;p&gt;Slow down! Slow and steady is fast.&lt;/p&gt;

&lt;p&gt;Check out &lt;a href="https://dev.to/codingnninja/unlearning-javascript-let-is-not-block-scoped-276l"&gt;How to be consistent with learning to code&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem-with-learning-resources" class="anchor"&gt;
  &lt;/a&gt;
  🛑 The Problem with Learning Resources
&lt;/h2&gt;

&lt;p&gt;Honestly, no learning resource is complete no matter how excellent it is because it is not designed for everyone.&lt;/p&gt;

&lt;p&gt;Aside that, most tutors are great at showcasing or building things and they are always focusing on explaining the projects at hand the best way but they don't always consider their thinking processes that help in making such projects.&lt;/p&gt;

&lt;p&gt;Instead, they focus on explaining concepts and build projects with them and advising learners to keep building projects until they understand what they are doing.&lt;/p&gt;

&lt;p&gt;That is fine.&lt;/p&gt;

&lt;p&gt;I learnt programming the same way. &lt;/p&gt;

&lt;p&gt;To be honest, that is what is called learning programming the hard way.&lt;/p&gt;

&lt;p&gt;That is why I have been advocating learning project making fundamentals.&lt;/p&gt;

&lt;p&gt;Learning project making fundamentals doesn't just help in understanding projects or building projects, it also helps you become a better developer because it provides a solid foundation to start with.&lt;/p&gt;

&lt;p&gt;For instance, a novice with understanding of project building fundamentals below will do better than a novice without it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-making-tip-1" class="anchor"&gt;
  &lt;/a&gt;
  🛑 Project Making  Tip #1
&lt;/h2&gt;

&lt;p&gt;Nobody knows how to build a certain project until it is built.&lt;/p&gt;

&lt;p&gt;✅ Don't feel bad because you feel you don't know how to build something.&lt;/p&gt;

&lt;p&gt;✅ Instead, find out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-making-tip-2" class="anchor"&gt;
  &lt;/a&gt;
  🛑 Project Making Tip #2
&lt;/h2&gt;

&lt;p&gt;You need to understand projects.&lt;/p&gt;

&lt;p&gt;To know what to build, you have to  ask yourself&lt;/p&gt;

&lt;p&gt;✅ What are the sections of this project?&lt;/p&gt;

&lt;p&gt;▫️Header&lt;br&gt;
▫️SideBar&lt;br&gt;
▫️Main&lt;br&gt;
▫️Footer&lt;/p&gt;

&lt;p&gt;Etc.&lt;/p&gt;

&lt;p&gt;✅ What should be present in the head?&lt;/p&gt;

&lt;p&gt;▫️Logo&lt;br&gt;
▫️Searchbox (with autosuggest)&lt;br&gt;
▫️Login/signup buttons&lt;br&gt;
▫️Make sure you know all the features needed in the header.&lt;/p&gt;

&lt;p&gt;✅ What will be present in the sidebar?&lt;/p&gt;

&lt;p&gt;List everything&lt;br&gt;
▫️&lt;br&gt;
▫️&lt;br&gt;
▫️&lt;br&gt;
✅ What will be present in main?&lt;/p&gt;

&lt;p&gt;List everything&lt;br&gt;
▫️&lt;br&gt;
▫️&lt;br&gt;
▫️&lt;br&gt;
✅ What about the footer?&lt;br&gt;
 List all.&lt;/p&gt;

&lt;p&gt;If you work for a company, you probably won't have to worry about this because it would be done by the designers in the company.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-making-tip-3" class="anchor"&gt;
  &lt;/a&gt;
  🛑 Project Making Tip #3
&lt;/h2&gt;

&lt;p&gt;Building Features...&lt;/p&gt;

&lt;p&gt;For example, we want to implement the search ( with autosuggestion ).&lt;/p&gt;

&lt;p&gt;The question is what made up a searchbox?&lt;/p&gt;

&lt;p&gt;◽An input tag&lt;br&gt;
◽An event &lt;br&gt;
◽Data collection and grouping&lt;br&gt;
◽API calls&lt;br&gt;
◽A view (tag)&lt;/p&gt;

&lt;p&gt;You can think through everything.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-making-tip-4" class="anchor"&gt;
  &lt;/a&gt;
  🛑 Project Making Tip #4
&lt;/h2&gt;

&lt;p&gt;Research the feature...&lt;/p&gt;

&lt;p&gt;E.g. &lt;br&gt;
✅ Google:&lt;br&gt;
How to build search with autosuggest with JavaScript?&lt;/p&gt;

&lt;p&gt;Above and a lot of other fundamental principles of making projects will help you a lot.&lt;/p&gt;

&lt;p&gt;I didn't find resources like such on the internet so I make it my job to provide them.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#one-more-thing" class="anchor"&gt;
  &lt;/a&gt;
  One More Thing
&lt;/h1&gt;

&lt;p&gt;Are you struggling to understand and build projects with JavaScript? &lt;/p&gt;

&lt;p&gt;Don't worry!&lt;/p&gt;

&lt;p&gt;I will teach you JavaScript and Project Making Fundamentals with simple illustrations and examples that make everything so easy. &lt;/p&gt;

&lt;p&gt;You can now handle any difficult projects without fear.&lt;/p&gt;

&lt;p&gt;Don't believe me, get a preview from the link below to see for yourself:&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="https://bit.ly/3o3TMyg"&gt;https://bit.ly/3o3TMyg&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>project</category>
      <category>programming</category>
    </item>
    <item>
      <title>Linux Terminal: The Ultimate Cheat Sheet</title>
      <author>Mauro Garcia</author>
      <pubDate>Mon, 25 Jan 2021 12:11:38 +0000</pubDate>
      <link>https://dev.to/maurogarcia_19/linux-terminal-the-ultimate-cheat-sheet-2g5b</link>
      <guid>https://dev.to/maurogarcia_19/linux-terminal-the-ultimate-cheat-sheet-2g5b</guid>
      <description>&lt;p&gt;If you're a Linux user, the Terminal is probably the most powerful tool you would ever have. But the thing about the Terminal is that you need to learn how to use it if you want to benefit from it.&lt;/p&gt;

&lt;p&gt;For the last few months, I've been playing with the Terminal a lot, and I came up with a long list of useful commands that I use regularly. Please let me know if I missed something important so I can add it to future posts.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tldr" class="anchor"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Basic commands&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Zoom in ➜ &lt;code&gt;[CTRL] + [+]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Zoom out ➜ &lt;code&gt;[CTRL] + [-]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Print working directory ➜ &lt;code&gt;pwd&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Clear the terminal ➜ &lt;code&gt;[CTRL] + [l]&lt;/code&gt; or &lt;code&gt;clear&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Assign an alias ➜ &lt;code&gt;alias [alias-name]="[command-to-run]"&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Source a file ➜ &lt;code&gt;source [name-of-the-file-to-read-and-execute]&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Change directory command (cd)&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Move to a specific directory ➜ &lt;code&gt;cd [name-of-your-directory]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Move to the parent directory ➜ &lt;code&gt;cd ..&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Move to the home directory ➜ &lt;code&gt;cd&lt;/code&gt; or &lt;code&gt;cd ~&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Move to the last directory yo were in ➜ &lt;code&gt;cd -&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;List command (ls)&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;List all visible files and directories ➜ &lt;code&gt;ls&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;List all files and directories (include hidden files) ➜ &lt;code&gt;ls -a&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Long Listed Format ➜ &lt;code&gt;ls -l&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Human Readable Format ➜ &lt;code&gt;ls -lh&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Combining arguments: Human Readable Format + Hidden files ➜ &lt;code&gt;ls -lah&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Learn more about the ls command ➜ &lt;code&gt;man ls&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Search&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Locate the binary for a program ➜ &lt;code&gt;which [name-of-the-program]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Locate the binary, source and user manual for a program ➜ &lt;code&gt;whereis [name-of-the-program]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Locate files and directories by name ➜ &lt;code&gt;find [path-to-search] -iname [name-of-the-file-you-want-to-search]&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Learn more about the find command ➜ &lt;code&gt;man find&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Get a brief description for a command ➜ &lt;code&gt;whatis [command-name]&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;History&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Get previous commands (one by one) ➜ Use the &lt;code&gt;Up Arrow key&lt;/code&gt; ⬆️ to navigate your history&lt;/li&gt;
&lt;li&gt;Get previous commands (full list) ➜ &lt;code&gt;history&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Repeat commands from history (bang command) ➜ &lt;code&gt;history&lt;/code&gt; ➜ &lt;code&gt;![number-of-the-command-to-repeat]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;Repeat last command (bang-bang command) ➜ &lt;code&gt;!!&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Working with files and directories&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Create a new file (without open it) ➜ &lt;code&gt;touch [name-of-your-file]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Create a new file using a text editor ➜ &lt;code&gt;vim [name-of-your-file]&lt;/code&gt; or &lt;code&gt;nano [name-of-your-file]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Copy a file ➜ &lt;code&gt;cp [source-path-of-your-file] [destination-path-for-your-file]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Create a new directory ➜ &lt;code&gt;mkdir [new-directory-name]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Remove an empty directory ➜ &lt;code&gt;rmdir [name-of-the-directory-you-want-to-remove]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Remove command (rm)&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Remove a file ➜ &lt;code&gt;rm [name-of-your-file]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Remove a directory recursively (use with caution) ➜ &lt;code&gt;rm -rf [name-of-your-directory]&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Concatenate command (cat)&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;View a single file ➜ &lt;code&gt;cat [name-of-your-file]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;View a single file including the line numbers ➜ &lt;code&gt;cat -n [name-of-your-file]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Copy the content of one file to another file ➜ &lt;code&gt;cat [filename-whose-contents-is-to-be-copied] &amp;gt; [destination-filename]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Learn more about the cat command ➜ &lt;code&gt;man cat&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Move command (mv)&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Move a file ➜ &lt;code&gt;mv [source-path-of-your-file] [destination-path-for-your-file]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Rename a file ➜ &lt;code&gt;mv [name-of-your-file] [new name-of-your-file]&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#basic-commands" class="anchor"&gt;
  &lt;/a&gt;
  Basic commands
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#zoom-in" class="anchor"&gt;
  &lt;/a&gt;
  Zoom in
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;[CTRL] + [+]&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#zoom-out" class="anchor"&gt;
  &lt;/a&gt;
  Zoom out
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;[CTRL] + [-]&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pwd-print-working-directory-command" class="anchor"&gt;
  &lt;/a&gt;
  pwd: Print Working Directory command
&lt;/h2&gt;

&lt;p&gt;It prints the working directory path, starting from the root directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;mauro_codes@DESKTOP-HIQ7662:~&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes

mauro_codes@DESKTOP-HIQ7662:~/projects&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes/projects
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#clear-command" class="anchor"&gt;
  &lt;/a&gt;
  Clear command
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;clear&lt;/code&gt; or &lt;code&gt;[CTRL] + [l]&lt;/code&gt; to clear the entire terminal screen and get a clean terminal to keep working.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alias-command" class="anchor"&gt;
  &lt;/a&gt;
  Alias command
&lt;/h2&gt;

&lt;p&gt;If you usually run a long command regularly and want to save time, you can assign a shorter alias for that command. Type &lt;code&gt;alias [alias-name]="[command-to-run]"&lt;/code&gt; to assign a new alias:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Running the ls command&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;projects

&lt;span class="c"&gt;## Assign an alias, so we don't need to add the arguments every time we need to list something&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;alias ls&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ls -lah"&lt;/span&gt;

&lt;span class="c"&gt;## Running ls again (we get the result of `ls -lah`)&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;total 16K
drwxr-xr-x 1 mauro_codes mauro_codes  512 Jan 22 17:41 &lt;span class="nb"&gt;.&lt;/span&gt;
drwxr-xr-x 1 root        root         512 Jan 22 10:38 ..
&lt;span class="nt"&gt;-rw-------&lt;/span&gt; 1 mauro_codes mauro_codes 3.0K Jan 22 23:58 .bash_history
&lt;span class="nt"&gt;-rw-r--r--&lt;/span&gt; 1 mauro_codes mauro_codes  220 Jan 22 10:38 .bash_logout
&lt;span class="nt"&gt;-rw-r--r--&lt;/span&gt; 1 mauro_codes mauro_codes 3.7K Jan 22 17:32 .bashrc
&lt;span class="nt"&gt;-rw-r--r--&lt;/span&gt; 1 mauro_codes mauro_codes  807 Jan 22 10:38 .profile
drwxr-xr-x 1 mauro_codes mauro_codes  512 Jan 22 12:55 projects
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note that this alias won't be persisted for future uses. If you want to persist your aliases, add them at the end of your .bashrc file located in your home directory.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#source-a-file" class="anchor"&gt;
  &lt;/a&gt;
  Source a file
&lt;/h2&gt;

&lt;p&gt;You can use the &lt;code&gt;source&lt;/code&gt; command to read and execute the content of a file line by line. Type &lt;code&gt;source [name-of-the-file-to-read-and-execute]&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Print the content of the script.txt file (contains two commands)&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cat &lt;/span&gt;script.txt
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"hello world"&lt;/span&gt; &lt;span class="c"&gt;## Print a hello message&lt;/span&gt;
cal                &lt;span class="c"&gt;## Print a calendar&lt;/span&gt;

&lt;span class="c"&gt;## Source the script.txt to run each command inside&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source &lt;/span&gt;script.txt
hello world

    January 2021
Su Mo Tu We Th Fr Sa
                1  2
 3  4  5  6  7  8  9
10 11 12 13 14 15 16
17 18 19 20 21 22 23
24 25 26 27 28 29 30
31
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#change-directory-command-cd" class="anchor"&gt;
  &lt;/a&gt;
  Change Directory command (cd)
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#move-to-a-specific-directory" class="anchor"&gt;
  &lt;/a&gt;
  Move to a specific directory
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;cd [name-of-your-directory]&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Check current directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes

&lt;span class="c"&gt;## Change directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;projects/

&lt;span class="c"&gt;## Check new working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes/projects
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#move-to-the-parent-directory" class="anchor"&gt;
  &lt;/a&gt;
  Move to the parent directory
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;cd ..&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Check current directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes/projects

&lt;span class="c"&gt;## Move to the parent directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ..

&lt;span class="c"&gt;## Check new working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#move-to-the-home-directory" class="anchor"&gt;
  &lt;/a&gt;
  Move to the home directory
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;cd ~&lt;/code&gt; or just &lt;code&gt;cd&lt;/code&gt; as an alternative&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Check current directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/awesome-app&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes/projects/awesome-app

&lt;span class="c"&gt;## Move to the home directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/awesome-app&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~

&lt;span class="c"&gt;## Check new working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#move-to-the-last-directory-you-were-in" class="anchor"&gt;
  &lt;/a&gt;
  Move to the last directory you were in
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;cd -&lt;/code&gt; to navigate to the previous directory you were in&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Check the current directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes/projects/landing-page

&lt;span class="c"&gt;## Move to another directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /home/mauro_codes/

&lt;span class="c"&gt;## Check the new directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes

&lt;span class="c"&gt;## Go back to the previus directory you were in&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; -
/home/mauro_codes/projects/landing-page
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#list-command-ls" class="anchor"&gt;
  &lt;/a&gt;
  List command (ls)
&lt;/h1&gt;

&lt;p&gt;Lists the content of the directory you're currently in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#list-all-visible-files-and-directories" class="anchor"&gt;
  &lt;/a&gt;
  List all visible files and directories
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;ls&lt;/code&gt; without any additional argument to get all the files and directories (this command will exclude hidden files like the &lt;a href="https://wiki.archlinux.org/index.php/Dotfiles"&gt;dotfiles&lt;/a&gt;).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Check the working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes/projects

&lt;span class="c"&gt;## List the content for the working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;awesome-app  landing-page  nextjs-tailwindcss-blog-starter  personal-blog
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#list-all-files-and-directories" class="anchor"&gt;
  &lt;/a&gt;
  List all files and directories
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;ls -a&lt;/code&gt; to get all the files and directories (including the hidden files)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Check the working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes/projects

&lt;span class="c"&gt;## List the content for the working directory (including hidden files)&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls&lt;/span&gt; &lt;span class="nt"&gt;-a&lt;/span&gt;
&lt;span class="nb"&gt;.&lt;/span&gt;  ..  .config  .configu  awesome-app  landing-page  nextjs-tailwindcss-blog-starter  personal-blog
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#long-listed-format" class="anchor"&gt;
  &lt;/a&gt;
  Long Listed Format
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;ls -l&lt;/code&gt; to get all the visible files and directories including additional metadata like permissions, owner, size and modified date and time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Check the working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/nextjs-tailwindcss-blog-starter&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes/projects/nextjs-tailwindcss-blog-starter

&lt;span class="c"&gt;## List the content for the working directory (using the long listed format)&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/nextjs-tailwindcss-blog-starter&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls&lt;/span&gt; &lt;span class="nt"&gt;-l&lt;/span&gt;
total 140
&lt;span class="nt"&gt;-rw-r--r--&lt;/span&gt; 1 mauro_codes mauro_codes   4487 Jan 22 12:55 README.md
drwxr-xr-x 1 mauro_codes mauro_codes    512 Jan 22 12:55 components
&lt;span class="nt"&gt;-rw-r--r--&lt;/span&gt; 1 mauro_codes mauro_codes   1068 Jan 22 12:55 config.ts
drwxr-xr-x 1 mauro_codes mauro_codes    512 Jan 22 12:55 helpers
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#human-readable-format" class="anchor"&gt;
  &lt;/a&gt;
  Human Readable Format
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;ls -lh&lt;/code&gt; to get all the visible files and directories in long-listed format, but with a Human Readable Format (User-friendly file size).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Check the working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/nextjs-tailwindcss-blog-starter&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes/projects/nextjs-tailwindcss-blog-starter

&lt;span class="c"&gt;## List the content for the working directory (using the long listed format + human readable format)&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/nextjs-tailwindcss-blog-starter&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls&lt;/span&gt; &lt;span class="nt"&gt;-lh&lt;/span&gt;
total 140K
&lt;span class="nt"&gt;-rw-r--r--&lt;/span&gt; 1 mauro_codes mauro_codes 4.4K Jan 22 12:55 README.md
drwxr-xr-x 1 mauro_codes mauro_codes  512 Jan 22 12:55 components
&lt;span class="nt"&gt;-rw-r--r--&lt;/span&gt; 1 mauro_codes mauro_codes 1.1K Jan 22 12:55 config.ts
drwxr-xr-x 1 mauro_codes mauro_codes  512 Jan 22 12:55 helpers
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#combining-arguments" class="anchor"&gt;
  &lt;/a&gt;
  Combining arguments
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;ls -lah&lt;/code&gt; to get all the files and directories (including hidden files) in Human Readable Format.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Check the working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/nextjs-tailwindcss-blog-starter&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes/projects/nextjs-tailwindcss-blog-starter

&lt;span class="c"&gt;## List the content for the working directory (include hidden files + human readable format)&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/nextjs-tailwindcss-blog-starter&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls&lt;/span&gt; &lt;span class="nt"&gt;-lah&lt;/span&gt;
total 140K
drwxr-xr-x 1 mauro_codes mauro_codes  512 Jan 22 13:08 &lt;span class="nb"&gt;.&lt;/span&gt;
drwxr-xr-x 1 mauro_codes mauro_codes  512 Jan 22 12:55 ..
drwxr-xr-x 1 mauro_codes mauro_codes  512 Jan 22 12:55 .git
&lt;span class="nt"&gt;-rw-r--r--&lt;/span&gt; 1 mauro_codes mauro_codes  362 Jan 22 12:55 .gitignore
&lt;span class="nt"&gt;-rw-r--r--&lt;/span&gt; 1 mauro_codes mauro_codes 4.4K Jan 22 12:55 README.md
drwxr-xr-x 1 mauro_codes mauro_codes  512 Jan 22 12:55 components
&lt;span class="nt"&gt;-rw-r--r--&lt;/span&gt; 1 mauro_codes mauro_codes 1.1K Jan 22 12:55 config.ts
drwxr-xr-x 1 mauro_codes mauro_codes  512 Jan 22 12:55 helpers
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#learn-more-about-the-raw-ls-endraw-command" class="anchor"&gt;
  &lt;/a&gt;
  Learn more about the &lt;code&gt;ls&lt;/code&gt; command
&lt;/h2&gt;

&lt;p&gt;There are dozens of arguments that you can use with the &lt;code&gt;ls&lt;/code&gt; command. If you want to dig dipper,&lt;br&gt;
type &lt;code&gt;man ls&lt;/code&gt; in your terminal to display the user manual for the &lt;code&gt;ls&lt;/code&gt; command.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#search" class="anchor"&gt;
  &lt;/a&gt;
  Search
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#locate-the-binary-for-a-program" class="anchor"&gt;
  &lt;/a&gt;
  Locate the binary for a program
&lt;/h2&gt;

&lt;p&gt;If you want to locate where the binary (executable) for a specific command or program is located. You can use the &lt;code&gt;which&lt;/code&gt; command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Locate binary for the ls command&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;which &lt;span class="nb"&gt;ls&lt;/span&gt;
/usr/bin/ls
&lt;span class="c"&gt;## Locate binary for git&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;which git
/usr/bin/git
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#locate-the-binary-source-and-user-manual-for-a-program" class="anchor"&gt;
  &lt;/a&gt;
  Locate the binary, source, and user manual for a program
&lt;/h2&gt;

&lt;p&gt;You can use the &lt;code&gt;whereis&lt;/code&gt; command to locate the binary, source, and user manual for a program. You can use the &lt;code&gt;-b&lt;/code&gt;, &lt;code&gt;-m&lt;/code&gt;, and &lt;code&gt;-s&lt;/code&gt; arguments to limit the results to binaries, manual and source, respectively&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Locate binary, manual, and source for git&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;whereis git
git: /usr/bin/git /mnt/c/Program Files/Git/cmd/git.exe /usr/share/man/man1/git.1.gz
&lt;span class="c"&gt;## Locate only binary and manual for Git, and only the manual for ls command&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;whereis &lt;span class="nt"&gt;-bm&lt;/span&gt; git &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="nb"&gt;ls
&lt;/span&gt;git: /usr/bin/git /mnt/c/Program Files/Git/cmd/git.exe /usr/share/man/man1/git.1.gz
&lt;span class="nb"&gt;ls&lt;/span&gt;: /usr/share/man/man1/ls.1.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#locate-files-and-directories-by-name" class="anchor"&gt;
  &lt;/a&gt;
  Locate files and directories by name
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;find [path-to-search] -iname [name-of-the-file-you-want-to-search]&lt;/code&gt; to find any file or directory that contain the given name in their title. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The path to search is optional. If it is not specified, the &lt;code&gt;find&lt;/code&gt; command will run on your current working directory (and its descendants)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;-iname&lt;/code&gt; argument means that our search will be case insensitive.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;- If you want to learn more about this &lt;span class="nb"&gt;command&lt;/span&gt;, &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;man find&lt;span class="sb"&gt;`&lt;/span&gt; to display the user manual.
&lt;span class="c"&gt;## Check current working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes/projects

&lt;span class="c"&gt;## Find files that contain "posts" on my current working directory and its descendants&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects&lt;span class="nv"&gt;$ &lt;/span&gt;find &lt;span class="nt"&gt;-iname&lt;/span&gt; posts
./nextjs-tailwindcss-blog-starter/pages/posts
./nextjs-tailwindcss-blog-starter/posts
&lt;span class="c"&gt;## Find files that contain "posts" on a specific directory and its descendants&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects&lt;span class="nv"&gt;$ &lt;/span&gt;find ./nextjs-tailwindcss-blog-starter/pages/ &lt;span class="nt"&gt;-iname&lt;/span&gt; posts
./nextjs-tailwindcss-blog-starter/pages/posts
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#get-a-brief-description-for-a-command" class="anchor"&gt;
  &lt;/a&gt;
  Get a brief description for a command
&lt;/h2&gt;

&lt;p&gt;If you don't know what a certain command does, Type &lt;code&gt;whatis [command-name]&lt;/code&gt; like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Asking about the cat command&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects&lt;span class="nv"&gt;$ &lt;/span&gt;whatis &lt;span class="nb"&gt;cat
cat&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt;              - concatenate files and print on the standard output
&lt;span class="c"&gt;## Asking about the find command&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects&lt;span class="nv"&gt;$ &lt;/span&gt;whatis find
find &lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt;             - search &lt;span class="k"&gt;for &lt;/span&gt;files &lt;span class="k"&gt;in &lt;/span&gt;a directory hierarchy
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#history" class="anchor"&gt;
  &lt;/a&gt;
  History
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#get-previous-commands-one-by-one" class="anchor"&gt;
  &lt;/a&gt;
  Get previous commands (one by one)
&lt;/h2&gt;

&lt;p&gt;You can access your recent command by pressing the &lt;code&gt;Up Arrow key&lt;/code&gt; ⬆️. This is very useful if you want to repeat your last command. Let's say we move to a specific directory, and then we check our working directory like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Move to a specific directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;projects/awesome-app/

&lt;span class="c"&gt;## Check the working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/awesome-app&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes/projects/awesome-app
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;⬆️ We'll get the &lt;code&gt;pwd&lt;/code&gt; command&lt;/p&gt;

&lt;p&gt;⬆️⬆️ We'll get the &lt;code&gt;cd projects/awesome-app&lt;/code&gt; command&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#repeat-previous-commands-full-list" class="anchor"&gt;
  &lt;/a&gt;
  Repeat previous commands (full list)
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;history&lt;/code&gt; to get a numerated list containing the previous commands you run. Then, type &lt;code&gt;![number-of-the-command-to-repeat]&lt;/code&gt; to repeat that command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Get the history list&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;history
    &lt;/span&gt;1  &lt;span class="nb"&gt;ls
    &lt;/span&gt;2  clear
    3  &lt;span class="nb"&gt;pwd
    &lt;/span&gt;4  &lt;span class="nb"&gt;mkdir &lt;/span&gt;projects
    5  &lt;span class="nb"&gt;cd &lt;/span&gt;projects

&lt;span class="c"&gt;## Run command number 1 (ls)&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;1
projects
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#repeat-the-last-command" class="anchor"&gt;
  &lt;/a&gt;
  Repeat the last command
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;!!&lt;/code&gt; (bang-bang command) to repeat the last command. This is especially useful when you forgot to add &lt;code&gt;sudo&lt;/code&gt; on your last command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Running update without sudo (Permission denied)&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~&lt;span class="nv"&gt;$ &lt;/span&gt;apt update
Reading package lists... Done
E: Could not open lock file /var/lib/apt/lists/lock - open &lt;span class="o"&gt;(&lt;/span&gt;13: Permission denied&lt;span class="o"&gt;)&lt;/span&gt;
E: Unable to lock directory /var/lib/apt/lists/
W: Problem unlinking the file /var/cache/apt/pkgcache.bin - RemoveCaches &lt;span class="o"&gt;(&lt;/span&gt;13: Permission denied&lt;span class="o"&gt;)&lt;/span&gt;
W: Problem unlinking the file /var/cache/apt/srcpkgcache.bin - RemoveCaches &lt;span class="o"&gt;(&lt;/span&gt;13: Permission denied&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;## Using the bang-bang command to append the last command after sudo&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo&lt;/span&gt; &lt;span class="o"&gt;!!&lt;/span&gt;
&lt;span class="nb"&gt;sudo &lt;/span&gt;apt update
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;sudo&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; password &lt;span class="k"&gt;for &lt;/span&gt;mauro_codes:
Get:1 http://security.ubuntu.com/ubuntu focal-security InRelease &lt;span class="o"&gt;[&lt;/span&gt;109 kB]
Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
Get:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease &lt;span class="o"&gt;[&lt;/span&gt;114 kB]
...
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#working-with-files-and-directories" class="anchor"&gt;
  &lt;/a&gt;
  Working with files and directories
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#create-a-new-file-without-open-it" class="anchor"&gt;
  &lt;/a&gt;
  Create a new file (without open it)
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;touch [name-of-your-file]&lt;/code&gt; to create a new file without open it on a text editor. This is useful if you just want to create an empty file but don't need to change it right now.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Check the working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes/projects/landing-page

&lt;span class="c"&gt;## List the content for the working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;README.md

&lt;span class="c"&gt;## Create an empty js file&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;touch &lt;/span&gt;main.js

&lt;span class="c"&gt;## List the content for the working directory (including your new file) &lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;README.md  main.js
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-a-new-file-using-a-text-editor" class="anchor"&gt;
  &lt;/a&gt;
  Create a new file using a text editor
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;nano [name-of-your-file]&lt;/code&gt; to create a new file and open it using the text editor &lt;a href="https://www.nano-editor.org/"&gt;nano&lt;/a&gt;. If you want to learn more about nano, you can Type &lt;code&gt;man nano&lt;/code&gt; on your terminal to display the nano user manual.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Check the working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes/projects/landing-page

&lt;span class="c"&gt;## List the content for the working directory &lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;README.md  main.js

mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;nano index.html
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;After running the last command, you'll be able to edit the file using nano:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TqGbrKcm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/3MxGlF2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TqGbrKcm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/3MxGlF2.png" alt="Nano text editor"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#copy-a-file" class="anchor"&gt;
  &lt;/a&gt;
  Copy a file
&lt;/h2&gt;

&lt;p&gt;You can use the &lt;code&gt;cp&lt;/code&gt; (Copy) command to copy files and directories&lt;br&gt;
Type &lt;code&gt;cp [source-path-of-your-file] [destination-path-for-your-file]&lt;/code&gt; to copy a file into a new destination.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## List the content for the working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;README.md  index.html  main.js  temp

&lt;span class="c"&gt;## Copy the README.md file into the temp directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cp &lt;/span&gt;README.md temp/README.md

&lt;span class="c"&gt;## List the content for the working directory and check that your file is still there.&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;README.md  index.html  main.js  temp

&lt;span class="c"&gt;## List the temp directory's content and check if your file was copied.&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls &lt;/span&gt;temp/
README.md  index-copy.html
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-a-new-directory" class="anchor"&gt;
  &lt;/a&gt;
  Create a new directory
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;mkdir [new-directory-name]&lt;/code&gt; to create a new directory in your current working directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## List the content for the working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;README.md  index-empty-copy.html  index.html  main.js

&lt;span class="c"&gt;## Create a new directory called "scripts"&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;scripts

&lt;span class="c"&gt;## List the content to check if our new directory was created&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;README.md  index-empty-copy.html  index.html  main.js  scripts
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#remove-an-empty-directory" class="anchor"&gt;
  &lt;/a&gt;
  Remove an empty directory
&lt;/h2&gt;

&lt;p&gt;Type &lt;code&gt;rmdir [name-of-the-directory-you-want-to-remove]&lt;/code&gt; to remove an empty directory. Please note that this command will only work with empty directories.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## List the content for the working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;README.md  index.html  main.js  temp

&lt;span class="c"&gt;## Remove the "temp" empty directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;rmdir &lt;/span&gt;temp

&lt;span class="c"&gt;## List the content and check that the directory was removed&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;README.md  index.html  main.js
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#remove-command-rm" class="anchor"&gt;
  &lt;/a&gt;
  Remove command (rm)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#remove-a-file" class="anchor"&gt;
  &lt;/a&gt;
  Remove a file
&lt;/h3&gt;

&lt;p&gt;Type &lt;code&gt;rm [name-of-your-file]&lt;/code&gt; to remove a file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## List the content for the working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page/temp&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;README.md  index-copy.html

&lt;span class="c"&gt;## Remove the index-copy.html file&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page/temp&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;rm &lt;/span&gt;index-copy.html

&lt;span class="c"&gt;## List the content for the working directory and check that the file was removed&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page/temp&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;README.md
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#remove-a-directory-recursively" class="anchor"&gt;
  &lt;/a&gt;
  Remove a directory recursively
&lt;/h3&gt;

&lt;p&gt;Type &lt;code&gt;rm -rfi [name-of-your-directory]&lt;/code&gt; to recursively remove a directory with all its files and sub-directories.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Please be careful!&lt;/strong&gt; This is one of the most dangerous commands you can run. If you run &lt;code&gt;rm -rfi /&lt;/code&gt;, you'll erase your entire root partition. Be sure to specify the path for the directory you want to delete. In this example, In this example, I include the &lt;code&gt;-i&lt;/code&gt; argument to ask for confirmation.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## List the content of the temp folder (It has one file)&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls &lt;/span&gt;temp/
total 0
drwxr-xr-x 1 mauro_codes mauro_codes 512 Jan 24 19:45 &lt;span class="nb"&gt;.&lt;/span&gt;
drwxr-xr-x 1 mauro_codes mauro_codes 512 Jan 24 19:44 ..
&lt;span class="nt"&gt;-rw-r--r--&lt;/span&gt; 1 mauro_codes mauro_codes   8 Jan 24 19:45 file.txt

&lt;span class="c"&gt;## Recursively remove the temp folder&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-rf&lt;/span&gt; temp/

&lt;span class="c"&gt;## Check that the temp folder was removed&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls &lt;/span&gt;temp/
&lt;span class="nb"&gt;ls&lt;/span&gt;: cannot access &lt;span class="s1"&gt;'temp/'&lt;/span&gt;: No such file or directory
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#concatenate-command-cat" class="anchor"&gt;
  &lt;/a&gt;
  Concatenate command (cat)
&lt;/h2&gt;

&lt;p&gt;You can use the &lt;code&gt;cat&lt;/code&gt; (concatenate) command to read data from a file and print their content as output&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#view-a-single-file" class="anchor"&gt;
  &lt;/a&gt;
  View a single file
&lt;/h3&gt;

&lt;p&gt;Type &lt;code&gt;cat [name-of-your-file]&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Check the working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes/projects/landing-page

&lt;span class="c"&gt;## Print the content of the index.html file&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cat &lt;/span&gt;index.html
&amp;lt;&lt;span class="o"&gt;!&lt;/span&gt;DOCTYPE html&amp;gt;
&amp;lt;html &lt;span class="nv"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"en"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &amp;lt;&lt;span class="nb"&gt;head&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &amp;lt;meta &lt;span class="nv"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"utf-8"&lt;/span&gt; /&amp;gt;
    &amp;lt;meta http-equiv&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"x-ua-compatible"&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ie=edge"&lt;/span&gt; /&amp;gt;
    &amp;lt;meta &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"viewport"&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"width=device-width, initial-scale=1"&lt;/span&gt; /&amp;gt;

    &amp;lt;title&amp;gt;My Website&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;

  &amp;lt;body&amp;gt;
    &amp;lt;script &lt;span class="nv"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"js/main.js"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#view-a-single-file-including-the-line-numbers" class="anchor"&gt;
  &lt;/a&gt;
  View a single file including the line numbers
&lt;/h3&gt;

&lt;p&gt;Type &lt;code&gt;cat -n [name-of-your-file]&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Check the working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/mauro_codes/projects/landing-page

&lt;span class="c"&gt;## Print the content of the index.html file&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cat&lt;/span&gt; &lt;span class="nt"&gt;-n&lt;/span&gt; index.html
     1  &amp;lt;&lt;span class="o"&gt;!&lt;/span&gt;DOCTYPE html&amp;gt;
     2  &amp;lt;html &lt;span class="nv"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"en"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
     3    &amp;lt;&lt;span class="nb"&gt;head&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
     4      &amp;lt;meta &lt;span class="nv"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"utf-8"&lt;/span&gt; /&amp;gt;
     5      &amp;lt;meta http-equiv&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"x-ua-compatible"&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ie=edge"&lt;/span&gt; /&amp;gt;
     6      &amp;lt;meta &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"viewport"&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"width=device-width, initial-scale=1"&lt;/span&gt; /&amp;gt;
     7
     8      &amp;lt;title&amp;gt;My Website&amp;lt;/title&amp;gt;
     9    &amp;lt;/head&amp;gt;
    10
    11    &amp;lt;body&amp;gt;
    12      &amp;lt;script &lt;span class="nv"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"js/main.js"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&amp;lt;/script&amp;gt;
    13    &amp;lt;/body&amp;gt;
    14  &amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#copy-the-content-of-one-file-to-another-file" class="anchor"&gt;
  &lt;/a&gt;
  Copy the content of one file to another file
&lt;/h3&gt;

&lt;p&gt;Type &lt;code&gt;cat [filename-whose-contents-is-to-be-copied] &amp;gt; [destination-filename]&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Create an empty file called index-empty-copy.html&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;touch &lt;/span&gt;index-empty-copy.html

&lt;span class="c"&gt;## Copy the content of index.html to index-empty-copy.html&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cat &lt;/span&gt;index.html &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; index-empty-copy.html

&lt;span class="c"&gt;## Print the content of the index-empty-copy.html file&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cat &lt;/span&gt;index-empty-copy.html
&amp;lt;&lt;span class="o"&gt;!&lt;/span&gt;DOCTYPE html&amp;gt;
&amp;lt;html &lt;span class="nv"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"en"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &amp;lt;&lt;span class="nb"&gt;head&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &amp;lt;meta &lt;span class="nv"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"utf-8"&lt;/span&gt; /&amp;gt;
    &amp;lt;meta http-equiv&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"x-ua-compatible"&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ie=edge"&lt;/span&gt; /&amp;gt;
    &amp;lt;meta &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"viewport"&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"width=device-width, initial-scale=1"&lt;/span&gt; /&amp;gt;

    &amp;lt;title&amp;gt;My Website&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;

  &amp;lt;body&amp;gt;
    &amp;lt;script &lt;span class="nv"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"js/main.js"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#learn-more-about-the-raw-cat-endraw-command" class="anchor"&gt;
  &lt;/a&gt;
  Learn more about the &lt;code&gt;cat&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;Type &lt;code&gt;man cat&lt;/code&gt; to display the user manual for the &lt;code&gt;cat&lt;/code&gt; command&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#move-command-mv" class="anchor"&gt;
  &lt;/a&gt;
  Move command (mv)
&lt;/h2&gt;

&lt;p&gt;You can use the &lt;code&gt;mv&lt;/code&gt; (move) command for moving and renaming files&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#move-a-file" class="anchor"&gt;
  &lt;/a&gt;
  Move a file
&lt;/h3&gt;

&lt;p&gt;Type &lt;code&gt;mv [source-path-of-your-file] [destination-path-for-your-file]&lt;/code&gt; to move a file into a new directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## List the content for the working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;README.md  index-empty-copy.html  index.html  main.js  temp

&lt;span class="c"&gt;## Move the index-empty-copy.html file to the temp directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;mv &lt;/span&gt;index-empty-copy.html temp/index-empty-copy.html

&lt;span class="c"&gt;## List the content again and check that the file is no longer in the current working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;README.md  index.html  main.js  temp

&lt;span class="c"&gt;## List the temp folder and check that the file is now there.&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls &lt;/span&gt;temp/
index-empty-copy.html
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#rename-a-file" class="anchor"&gt;
  &lt;/a&gt;
  Rename a file
&lt;/h3&gt;

&lt;p&gt;Type &lt;code&gt;mv [name-of-your-file] [new name-of-your-file]&lt;/code&gt; to rename a file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
&lt;span class="c"&gt;## List the content for the working directory&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page/temp&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;index-empty-copy.html

&lt;span class="c"&gt;## Rename the index-empty-copy.html file&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page/temp&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;mv &lt;/span&gt;index-empty-copy.html index-copy.html

&lt;span class="c"&gt;## List the content for the working directory (check if your file's name was updated)&lt;/span&gt;
mauro_codes@DESKTOP-HIQ7662:~/projects/landing-page/temp&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;index-copy.html
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#final-words" class="anchor"&gt;
  &lt;/a&gt;
  Final words
&lt;/h1&gt;

&lt;p&gt;I missed tons of powerful commands on this post, but I decided to keep them for a future post. This is already huge.😄 &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-would-love-to-hear-your-feedback-about-this-format-is-it-clear-is-it-useful-let-me-know-if-you-want-me-to-cover-any-particular-command-on-my-next-post" class="anchor"&gt;
  &lt;/a&gt;
  I would love to hear your feedback about this format. Is it clear? Is it useful? Let me know if you want me to cover any particular command on my next post.
&lt;/h3&gt;

</description>
      <category>linux</category>
      <category>terminal</category>
      <category>beginners</category>
    </item>
    <item>
      <title>DocRaptor vs. WeasyPrint: A PDF Export Showdown</title>
      <author>Tyler Hawkins</author>
      <pubDate>Mon, 25 Jan 2021 12:03:02 +0000</pubDate>
      <link>https://dev.to/thawkin3/docraptor-vs-weasyprint-a-pdf-export-showdown-34f</link>
      <guid>https://dev.to/thawkin3/docraptor-vs-weasyprint-a-pdf-export-showdown-34f</guid>
      <description>&lt;p&gt;I recently published an &lt;a href="https://levelup.gitconnected.com/how-to-convert-html-tables-into-beautiful-pdfs-eac2ce4c77de"&gt;article comparing HTML-to-PDF export libraries&lt;/a&gt;. In it, I explored options like the native &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/print"&gt;browser print&lt;/a&gt; functionality, open-source libraries &lt;a href="https://github.com/MrRio/jsPDF"&gt;jsPDF&lt;/a&gt; and &lt;a href="http://pdfmake.org/"&gt;pdfmake&lt;/a&gt;, and the paid service &lt;a href="https://docraptor.com/"&gt;DocRaptor&lt;/a&gt;. Here's a quick recap of my findings:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you want the simplest solution and don’t need a professional-looking document, the native browser print functionality should be just fine. If you need more control over the PDF output, then you’ll want to use a library.&lt;/p&gt;

&lt;p&gt;jsPDF shines when it comes to single-page content generated based on HTML shown in the UI. pdfmake works best when generating PDF content from data rather than from HTML. DocRaptor is the most powerful of them all with its simple API and its beautiful PDF output. But again, unlike the others, it is a paid service. However, if your business depends on elegant, professional document generation, DocRaptor is well worth the cost.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the comment section for my article on Dev.to, &lt;a href="https://dev.to/thawkin3/how-to-convert-html-tables-into-beautiful-pdfs-1k08/comments"&gt;one person suggested&lt;/a&gt; I take a look at &lt;a href="https://www.pagedjs.org/"&gt;Paged.js&lt;/a&gt; and &lt;a href="https://weasyprint.org/"&gt;WeasyPrint&lt;/a&gt; as additional alternatives to consider. (This person is Andreas Zettl by the way, and he has an awesome demo site full of &lt;a href="https://printcss.live/"&gt;Print CSS examples&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;So today we'll explore the relative strengths and weaknesses of DocRaptor and WeasyPrint.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#weasyprint-overview" class="anchor"&gt;
  &lt;/a&gt;
  WeasyPrint Overview
&lt;/h2&gt;

&lt;p&gt;Let's start with WeasyPrint, an open-source library developed by &lt;a href="https://kozea.fr/"&gt;Kozea&lt;/a&gt; and supported by &lt;a href="https://www.courtbouillon.org/"&gt;Court Bouillon&lt;/a&gt;. For starters, &lt;strong&gt;it's free&lt;/strong&gt;, which is a plus. It's licensed under the &lt;a href="https://github.com/Kozea/WeasyPrint/blob/master/LICENSE"&gt;BSD 3-Clause License&lt;/a&gt;, a relatively permissive and straightforward license. WeasyPrint allows you to generate content as either a PDF or a PNG, which should adequately cover most use cases. It's built for Python 3.6+, which is great if you're a Python developer. If Python is not your forte or not part of your company's tech stack, then this may be a non-starter for you.&lt;/p&gt;

&lt;p&gt;One of the biggest caveats to be aware of is that &lt;a href="https://github.com/Kozea/WeasyPrint/issues/454"&gt;WeasyPrint does not support JavaScript-generated content&lt;/a&gt;! So when using this library, you'll need to be exporting content that is generated server-side. If you are relying on dynamically generated content or charts and tables powered by JavaScript, this library is not for you.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#installing-weasyprint" class="anchor"&gt;
  &lt;/a&gt;
  Installing WeasyPrint
&lt;/h2&gt;

&lt;p&gt;Getting up and running with WeasyPrint is fairly easy. They provide &lt;a href="https://weasyprint.readthedocs.io/en/latest/install.html"&gt;installation instructions&lt;/a&gt; on their website, but I use &lt;code&gt;pyenv&lt;/code&gt; to &lt;a href="https://opensource.com/article/19/5/python-3-default-mac"&gt;install and manage Python&lt;/a&gt; rather than Homebrew, so my installation steps looked more like this:&lt;/p&gt;

&lt;p&gt;Installing &lt;code&gt;pyenv&lt;/code&gt; and Python:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# install pyenv using Homebrew&lt;/span&gt;
brew install pyenv

&lt;span class="c"&gt;# install Python 3.7.3 using pyenv&lt;/span&gt;
pyenv install 3.7.3

&lt;span class="c"&gt;# specify that I'd like to use version 3.7.3 when I use Python&lt;/span&gt;
pyenv global 3.7.3

&lt;span class="c"&gt;# quick sanity check&lt;/span&gt;
pyenv version

&lt;span class="c"&gt;# add `pyenv init` to my shell to enable shims and autocompletion&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="s1"&gt;'if command -v pyenv 1&amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then\n  eval "$(pyenv init -)"\nfi'&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Installing WeasyPrint and running it against the WeasyPrint website:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;WeasyPrint

weasyprint https://weasyprint.org/ weasyprint.pdf
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;As you can see, the simplest way to use WeasyPrint from your terminal is to run the &lt;code&gt;weasyprint&lt;/code&gt; command with two arguments: the URL input and the filename output. This creates a file called &lt;code&gt;weasyprint.pdf&lt;/code&gt; in the directory from which you run the command. Here's a screenshot of the PDF output when viewed in the Preview app on a Mac:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i1BErpXm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/yvfjqcuajrw24qxepweo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i1BErpXm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/yvfjqcuajrw24qxepweo.png" alt="Sample PDF output from WeasyPrint"&gt;&lt;/a&gt;&lt;/p&gt;
Sample PDF output from WeasyPrint



&lt;p&gt;Looks great! WeasyPrint also has a full &lt;a href="https://weasyprint.org/samples/"&gt;page of examples&lt;/a&gt; you can check out which showcases &lt;a href="https://weasyprint.org/samples/report/report.pdf"&gt;reports&lt;/a&gt;, &lt;a href="https://weasyprint.org/samples/invoice/invoice.pdf"&gt;invoices&lt;/a&gt;, and even &lt;a href="https://weasyprint.org/samples/ticket/ticket.pdf"&gt;event tickets&lt;/a&gt; complete with a barcode.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#docraptor-overview" class="anchor"&gt;
  &lt;/a&gt;
  DocRaptor Overview
&lt;/h2&gt;

&lt;p&gt;Now let's consider DocRaptor. &lt;a href="https://docraptor.com/"&gt;DocRaptor&lt;/a&gt; is closed-source and is available through a paid license subscription (although you can generate test documents for free). It uses the PrinceXML HTML-to-PDF engine and is the only API powered by this technology.&lt;/p&gt;

&lt;p&gt;Unlike WeasyPrint's Python-only usage, DocRaptor has SDKs for PHP, Python, Node, Ruby, Java, .NET, and JavaScript/jQuery. It can also be used directly via an HTTP request, so you can generate a PDF right from your terminal using cURL. This is great news if you're someone like me who doesn't have Python in their arsenal.&lt;/p&gt;

&lt;p&gt;DocRaptor can export content as a PDF, XLS, or XLSX document. This can come in handy if your content is meant to be a table compatible with Excel. For the time being though, we'll just look at PDFs since that's something both WeasyPrint and DocRaptor support.&lt;/p&gt;

&lt;p&gt;One relative strength of DocRaptor compared to WeasyPrint is that it &lt;em&gt;can&lt;/em&gt; wait for JavaScript on the page to be executed, so it's perfect for use with dynamically generated content and charting libraries.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#getting-started-with-docraptor" class="anchor"&gt;
  &lt;/a&gt;
  Getting Started with DocRaptor
&lt;/h2&gt;

&lt;p&gt;DocRaptor has &lt;a href="https://docraptor.com/documentation/jquery"&gt;guides for each of their SDKs&lt;/a&gt; that are well worth reading when first trying out their service. Since we ran the WeasyPrint example from the command line, let's also &lt;a href="https://docraptor.com/documentation"&gt;run DocRaptor in our terminal&lt;/a&gt; by using cURL to make an HTTP request. DocRaptor is API-based, so there's no need to download or install anything.&lt;/p&gt;

&lt;p&gt;Here's their example you can try:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl http://YOUR_API_KEY_HERE@docraptor.com/docs &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--fail&lt;/span&gt; &lt;span class="nt"&gt;--silent&lt;/span&gt; &lt;span class="nt"&gt;--show-error&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--header&lt;/span&gt; &lt;span class="s2"&gt;"Content-Type:application/json"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--data&lt;/span&gt; &lt;span class="s1"&gt;'{"test": true,
           "document_url": "http://docraptor.com/examples/invoice.html",
           "type": "pdf" }'&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; docraptor.pdf
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;And here's the output after running that code snippet in your terminal:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Khme5ZpH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hecltzcc7xfarminmsiy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Khme5ZpH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hecltzcc7xfarminmsiy.png" alt="Sample PDF output from DocRaptor"&gt;&lt;/a&gt;&lt;/p&gt;
Sample PDF output from DocRaptor



&lt;p&gt;Voila: a nice and simple invoice. DocRaptor's example here isn't as complex as WeasyPrint's was, so let's try generating a PDF from one of DocRaptor's more advanced examples.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl http://YOUR_API_KEY_HERE@docraptor.com/docs &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--fail&lt;/span&gt; &lt;span class="nt"&gt;--silent&lt;/span&gt; &lt;span class="nt"&gt;--show-error&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--header&lt;/span&gt; &lt;span class="s2"&gt;"Content-Type:application/json"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--data&lt;/span&gt; &lt;span class="s1"&gt;'{"test": true,
           "document_url": "https://docraptor.com/samples/cookbook.html",
           "type": "pdf" }'&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; docraptor_cookbook.pdf
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here's the output for this cookbook recipe PDF:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dm6fmay9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/j20ps32u6n34ss6lejh1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dm6fmay9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/j20ps32u6n34ss6lejh1.png" alt="Sample PDF output from DocRaptor using their Cookbook Recipe example"&gt;&lt;/a&gt;&lt;/p&gt;
Sample PDF output from DocRaptor using their Cookbook Recipe example



&lt;p&gt;Pretty neat! Just like WeasyPrint, DocRaptor can handle complex designs and full-bleed layouts that extend to the very edge of the page. One important callout here is that DocRaptor supports footnotes, as seen in this example. WeasyPrint, on the other hand, has not yet fully implemented the &lt;a href="https://www.w3.org/TR/css-page-3/"&gt;CSS paged media specifications&lt;/a&gt;, so it can't handle footnote generation.&lt;/p&gt;

&lt;p&gt;You can view more DocRaptor &lt;a href="https://docraptor.com/samples"&gt;examples on their site&lt;/a&gt; including a &lt;a href="https://docraptor.com/samples/statement.pdf"&gt;financial statement&lt;/a&gt;, a &lt;a href="https://docraptor.com/samples/brochure.pdf"&gt;brochure&lt;/a&gt;, an &lt;a href="https://docraptor.com/samples/invoice.pdf"&gt;invoice&lt;/a&gt;, and an &lt;a href="https://docraptor.com/samples/ebook.pdf"&gt;e-book&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#javascript-execution" class="anchor"&gt;
  &lt;/a&gt;
  JavaScript Execution
&lt;/h2&gt;

&lt;p&gt;So far we've seen the powers and similarities of both DocRaptor and WeasyPrint. But one core difference we touched on above is that WeasyPrint does not wait for JavaScript to execute before generating the PDF. This is crucial for applications built with a framework like React. By default, React apps contain only a root container &lt;code&gt;div&lt;/code&gt; in the HTML, and then JavaScript runs to inject the React components onto the page.&lt;/p&gt;

&lt;p&gt;So if you try to generate a PDF from the command line for an app built with React, you won't get the actual app content! Instead, you'll likely see the content of the &lt;code&gt;noscript&lt;/code&gt; tag, which typically contains a message stating something like "You need to enable JavaScript to run this app."&lt;/p&gt;

&lt;p&gt;This is also the case for applications that rely on charting libraries like &lt;a href="https://developers.google.com/chart"&gt;Google Charts&lt;/a&gt;, &lt;a href="https://www.highcharts.com/"&gt;HighCharts&lt;/a&gt;, or &lt;a href="https://www.chartjs.org/"&gt;Chart.js&lt;/a&gt;. Without the JavaScript running, no chart is created.&lt;/p&gt;

&lt;p&gt;As an example, &lt;a href="http://tylerhawkins.info/docraptor-js-demo/"&gt;consider this simple web page&lt;/a&gt; I've put together. It contains a page header, a paragraph included in the HTML source code, and a paragraph inserted into the DOM by JavaScript. You can find the &lt;a href="https://github.com/thawkin3/docraptor-js-demo"&gt;code on GitHub&lt;/a&gt;. Here's what the page looks like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BWXGjn9N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/az5421zkewrtl5ql66tv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BWXGjn9N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/az5421zkewrtl5ql66tv.png" alt="DocRaptor JS demo web page"&gt;&lt;/a&gt;&lt;/p&gt;
DocRaptor JS demo web page



&lt;p&gt;Now, let's use WeasyPrint to generate a PDF from the web page by running the following command in the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;weasyprint http://tylerhawkins.info/docraptor-js-demo/ weasyprint_js_demo.pdf
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here's the output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cy9jbPz3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/5kd2os3p0cpwggts5h1m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cy9jbPz3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/5kd2os3p0cpwggts5h1m.png" alt="JS demo PDF output from WeasyPrint"&gt;&lt;/a&gt;&lt;/p&gt;
JS demo PDF output from WeasyPrint



&lt;p&gt;Oh no! Where's the second paragraph? It's not there, because the JavaScript was never executed.&lt;/p&gt;

&lt;p&gt;Now let's try again, but this time with DocRaptor. In order to have JavaScript run on the page, we must provide DocRaptor with the &lt;code&gt;"javascript": true&lt;/code&gt; argument in our options object. Here's the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl http://YOUR_API_KEY_HERE@docraptor.com/docs &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--fail&lt;/span&gt; &lt;span class="nt"&gt;--silent&lt;/span&gt; &lt;span class="nt"&gt;--show-error&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--header&lt;/span&gt; &lt;span class="s2"&gt;"Content-Type:application/json"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--data&lt;/span&gt; &lt;span class="s1"&gt;'{"test": true,
           "javascript": true,
           "document_url": "http://tylerhawkins.info/docraptor-js-demo/",
           "type": "pdf" }'&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; docraptor_js_demo.pdf
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;And the output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mQR8FzNb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/sml1n9q1p483oq5pks7x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mQR8FzNb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/sml1n9q1p483oq5pks7x.png" alt="JS demo PDF output from DocRaptor"&gt;&lt;/a&gt;&lt;/p&gt;
JS demo PDF output from DocRaptor



&lt;p&gt;Tada! The JavaScript has been successfully executed, leading to the insertion of the second paragraph.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So, which should you use, WeasyPrint or DocRaptor? It depends on your use case. &lt;/p&gt;

&lt;p&gt;If your app contains static content that doesn't rely on JavaScript, if Python is part of your tech stack, or if you need PNG image output, then WeasyPrint is an excellent choice. It's open source, free, and flexible enough to handle visually complex output.&lt;/p&gt;

&lt;p&gt;If you need to use a programming language other than Python, or you rely on the execution of JavaScript to render the content you need exported, DocRaptor is the right choice.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#table-of-comparisons" class="anchor"&gt;
  &lt;/a&gt;
  Table of Comparisons
&lt;/h2&gt;

&lt;p&gt;As an added bonus, here's a comparison table for a quick summary of these two libraries:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XWGPUuwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/mgms7ei6rr7fe83h37oh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XWGPUuwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/mgms7ei6rr7fe83h37oh.png" alt="DocRaptor vs. WeasyPrint comparison table"&gt;&lt;/a&gt;&lt;/p&gt;
DocRaptor vs. WeasyPrint comparison table



&lt;p&gt;Happy coding!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>python</category>
      <category>bash</category>
      <category>docraptor</category>
    </item>
    <item>
      <title>Here is why you should not be too quick at judging people by their GitHub activity stats</title>
      <author>Bobby Iliev</author>
      <pubDate>Mon, 25 Jan 2021 11:54:12 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/here-is-why-you-should-not-be-too-quick-at-judging-people-by-their-github-activity-stats-255l</link>
      <guid>https://dev.to/bobbyiliev/here-is-why-you-should-not-be-too-quick-at-judging-people-by-their-github-activity-stats-255l</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction" class="anchor"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;I am a supporter of the opensource movement and I truly admire people like &lt;a href="https://twitter.com/eddiejaoude"&gt;Eddie Jaoude&lt;/a&gt;, &lt;a href="https://twitter.com/MattIPv4"&gt;Matt Cowley&lt;/a&gt; and all other open-source maintainers who work hard every day so that we could have awesome software! 🙏&lt;/p&gt;

&lt;p&gt;I strongly encourage everyone to be active in the open-source world and make meaningful contributions. If you are new to the open-source world, make sure to follow &lt;a href="https://twitter.com/hacktoberfest"&gt;Hacktoberfest&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;With this post, I aim to raise awareness and show you why you should not be too quick at judging people by their GitHub activity stats as they can be easily manipulated.&lt;/p&gt;

&lt;p&gt;Here I am going to share a short bash script, which took me 5 minutes to write, that will turn your contributions graph from this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dOB6tekv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/SFQ3RJz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dOB6tekv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/SFQ3RJz.png" alt="GitHub Activity Before"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Into this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r2tCSOy4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/xJ6MjFH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r2tCSOy4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/xJ6MjFH.png" alt="GitHub Activity After"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In 20-30 seconds.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Use this for demo purposes only!&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites" class="anchor"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h1&gt;

&lt;p&gt;Before you get started, it is best to create a new empty private repository that you could experiment with and turn on private contributions which will show as anonymized in your private activity on your profile:        &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rIM_9lOi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/h5LYWtb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rIM_9lOi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/h5LYWtb.png" alt="Show private contributions on GitHub"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another thing that you would need is a bash terminal. Usually, when I test scripts that I've found on the internet, I like to run them on a virtual machine rather than directly on my laptop. For that, I use DigitalOcean as I can get a fully functional server in 40-50 seconds and then delete it once I'm done testing.&lt;/p&gt;

&lt;p&gt;If you wish, you can use my affiliate code to get &lt;a href="https://m.do.co/c/2a9bba940f39"&gt;free $100 DigitalOcean credit&lt;/a&gt; to spin up your servers and test the script on there.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#running-the-script" class="anchor"&gt;
  &lt;/a&gt;
  Running the script
&lt;/h1&gt;

&lt;p&gt;You can find the script here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/github-activity-bash-script"&gt;GitHub Activity Demo Script&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To execute the script, first, clone your demo repository with the &lt;code&gt;git clone&lt;/code&gt; command, then use the &lt;code&gt;cd&lt;/code&gt; command to go to the repository folder and then just run the following command inside a demo repository:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wget https://raw.githubusercontent.com/bobbyiliev/github-activity-bash-script/main/activity.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The above will download the &lt;code&gt;activity.sh&lt;/code&gt; script and then in order to run the script execute the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bash activity.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This will generate between 2 and 7 dummy commits for each day for the past 365 days and alter the commit date accordingly.&lt;/p&gt;

&lt;p&gt;To check the commit log run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git log
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Finally, as we've made some commits in the 'past', force-push your changes to your GitHub demo repository:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push origin -f your_branch_name
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Then go to your GitHub profile and check your activity stats.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: sometimes it takes GitHub a few minutes to render the new stats, so you might have to wait a few minutes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I would encourage you to delete that demo repository and get rid of those fake commit stats.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;This script aims to prove why you should be too quick at judging people by their GitHub activity stats as they can be easily manipulated.&lt;/p&gt;

&lt;p&gt;For more information on the topic, make sure to check out this interesting discussion here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/isaacs/github/issues/627"&gt;Contribution graph can be harmful to contributors&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In case that you are interested in learning more about Bash Scripting, make sure to check out this open-source eBook:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-bash-scripting"&gt;Introduction to Bash Scripting&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am also working on my first video series on how to get started with Bash Scripting, you can check it out here:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ur9lAPcbMhs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Hope that you find this useful!&lt;/p&gt;

</description>
      <category>github</category>
      <category>bash</category>
      <category>codenewbie</category>
      <category>discuss</category>
    </item>
  </channel>
</rss>
