<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>VoIP vs Non - Advantages and disadvantages</title>
      <author>R Coder</author>
      <pubDate>Mon, 10 Jan 2022 21:52:22 +0000</pubDate>
      <link>https://dev.to/rcoderdotcom/voip-vs-non-advantages-and-disadvantages-4ilp</link>
      <guid>https://dev.to/rcoderdotcom/voip-vs-non-advantages-and-disadvantages-4ilp</guid>
      <description>&lt;p&gt;You've probably heard of the term Voice over Internet Protocol (VoIP) systems, and how they differ from traditional landlines.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vMBtVNcR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m49st8rxr1rgm1dl0h4f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vMBtVNcR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m49st8rxr1rgm1dl0h4f.png" alt="voip" width="880" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But if you're unsure, &lt;strong&gt;VoIP systems basically refer to technologies that allow voice and video communication via internet connection.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;But here is where it gets complicated, it turns out that there are VoIP and Non VoIP phone numbers, I will try to explain this as best as possible as it is a bit confusing at the beginning.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;VoIP and Non VoIP belong to one category:&lt;/strong&gt; &lt;a href="https://www.majorphones.com/virtual-numbers-what-are-they/"&gt;Virtual Numbers&lt;/a&gt;, and they both have the same technology have in common.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But first of all. What are virtual phone numbers?&lt;/strong&gt; They are those that allow people to communicate through the internet, and using this valuable tool you can communicate with any number in the world and still be as cheap as calling from a conventional phone number (this is one of the main advantages of virtual phone numbers). Another advantage is that they are not tied to any physical location (sometimes they are), this means that they protect your privacy very well, however Non VoIP numbers have a greater advantage over VoIP.&lt;/p&gt;

&lt;p&gt;Now, Non VoIP phone numbers belong to the group of VoIP numbers but are not limited to any geographical location, and are not tied to any equipment, which means, calls can be made through computers, phones, tablets and everything you can think of.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But how do they work?&lt;/strong&gt; In the same way as &lt;a href="https://www.nextiva.com/blog/voip-number.html#:~:text=A%20VoIP%20number%2C%20also%20known,number%20accessible%20to%20the%20public."&gt;VoIP phone numbers&lt;/a&gt;, however if you receive a call or text message, any device that is linked to that phone number will ring and the recipient can use any of the devices to answer the message/call. This is a big plus.&lt;/p&gt;

&lt;p&gt;One of the clearest benefits is that we can affiliate our entire technical support team to multiple devices and they can all receive the information and respond to it in a much more efficient manner.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;However, VoIP numbers have a disadvantage here: 1 VoIP number = 1 purpose.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How are they configured?&lt;/strong&gt;&lt;br&gt;
Well, actually the configuration is very similar to VoIP numbers (Using SIP). In the case of companies like &lt;a href="https://www.twilio.com/"&gt;Twillio&lt;/a&gt;, you simply buy the phone number and use the language of your choice to connect their API to your development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What Is SIP?&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://en.wikipedia.org/wiki/Session_Initiation_Protocol"&gt;The Session Initiation Protocol (SIP)&lt;/a&gt; is one underlying technology that makes VoIP possible. This is a text-based protocol similar to HTML. It's the most commonly used standard for setting up and controlling phone calls in most VoIP systems. You'll run across references to SIP in almost anything you do with these kinds of phone systems, especially when you're selecting any handset hardware you want to use.&lt;/p&gt;

&lt;p&gt;What makes SIP so popular is not only that it's deep and flexible, but also because it was purpose-built to engage in multimedia (meaning not just audio but also video and even text) communications over TCP/IP networks. For VoIP and Non-VoIP calls, SIP can set up calls using a number of IP-related protocols, including the Stream Control Transmission Protocol (SCTP), the Transmission Control Protocol (TCP), and the User Datagram Protocol (UDP), among others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But it's not all pretty. There is a big problem with Non VoIP numbers.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The main one is that many people take advantage of this type of technology to perform Spam and this is really a problem because spam filters can identify and erroneously block incoming calls from companies that use non fixed VoIP phone numbers.&lt;/p&gt;

&lt;p&gt;Another problem to consider is the following: Since Non-VoIP numbers are not tied to a physical location then in case of an emergency of any kind, these agencies will not be able to track your location.&lt;/p&gt;

&lt;p&gt;However, depending on the project you are developing this can be a strong point, since if you use a proxy or &lt;a href="https://brightdata.com/blog/guest-post/residential-proxies-web-scraping#:~:text=24%2DOct%2D2019,also%20concealing%20your%20IP%20address."&gt;residential vpn&lt;/a&gt; then you will have almost absolute anonymity. Of course it also depends on other factors such as DNS, or the &lt;a href="https://en.wikipedia.org/wiki/WebRTC"&gt;WEBRTC protocol.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Ta9qtgJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/55ogffmyufs466gwg2n7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Ta9qtgJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/55ogffmyufs466gwg2n7.png" alt="webrtc" width="322" height="157"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another point against is that most of the Non-VoIP phone number providers do not have API to automate their services, compared to companies like Twillio, &lt;a href="https://www.vonage.com/"&gt;Vonage&lt;/a&gt;, &lt;a href="https://www.nextiva.com/"&gt;Nextiva&lt;/a&gt; among others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But the Achilles heel of VoIP and &lt;a href="https://www.majorphones.com/"&gt;Non VoIP&lt;/a&gt; technologies in developing countries is the Internet.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lUDijCCV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0g898xo39rcgwcmjdgjy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lUDijCCV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0g898xo39rcgwcmjdgjy.jpg" alt="internet" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Most VoIP solutions will require stable and consistent internet connectivity at all your office locations. At the very least, your business phone system must have access to a business-class internet link, so discuss these needs with your company's internet service provider (ISP). This should be a dedicated link through a dedicated router if you expect your phone calls to sound as if they were coming from a business and not someone's home Skype connection. At a minimum, it's important to have a router that can create virtual LANs (VLANs) and also has the ability to encrypt your voice traffic. These days, you need end-to-end VoIP security for any call.&lt;/p&gt;

&lt;p&gt;For larger systems, and for systems where security is critical for things like being compliant to vertical regulatory needs, your current internet connection might not be adequate. The internet doesn't do quality of service &lt;a href="https://en.wikipedia.org/wiki/Quality_of_service"&gt;(QoS)&lt;/a&gt;, and bandwidth can be unpredictable. Network congestion can ruin a conference call, and activities such as DNS hijacking can put your business and data at risk.&lt;/p&gt;

&lt;p&gt;Well, in general you have an idea of the advantages and disadvantages of Non VoIP vs VoIP numbers&lt;/p&gt;

&lt;p&gt;See you in a future Post! Possibly about R Studio vs Matlab!&lt;/p&gt;

</description>
      <category>voip</category>
      <category>sip</category>
      <category>nonvoip</category>
      <category>virtualnumber</category>
    </item>
    <item>
      <title>Next.js GraphQL Apollo Server Starter Project
</title>
      <author>Salah Eddine Lalami</author>
      <pubDate>Mon, 10 Jan 2022 21:42:08 +0000</pubDate>
      <link>https://dev.to/lalami/nextjs-graphql-apollo-server-starter-project-3b8j</link>
      <guid>https://dev.to/lalami/nextjs-graphql-apollo-server-starter-project-3b8j</guid>
      <description>&lt;h2&gt;
  &lt;a href="#nextjs-graphql-apollo-server-starter"&gt;
  &lt;/a&gt;
  Next.js Graphql apollo server starter
&lt;/h2&gt;

&lt;p&gt;Next.js Graphql apollo server starter , with merge schema , combine resolvers generate type in fast and simple way&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#github-repo"&gt;
  &lt;/a&gt;
  Github Repo
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/idurar/next-js-graphql-apollo-server-starter"&gt;https://github.com/idurar/next-js-graphql-apollo-server-starter&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install"&gt;
  &lt;/a&gt;
  Install
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn Install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#generate-schema-and-type"&gt;
  &lt;/a&gt;
  Generate schema and Type
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn generate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h3&gt;

&lt;p&gt;First, run the development server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; with your browser to see the result.&lt;/p&gt;

&lt;p&gt;can be accessed on &lt;a href="http://localhost:3000/api/graphql"&gt;http://localhost:3000/api/graphql&lt;/a&gt;. This endpoint can be edited in &lt;code&gt;pages/api/graphql.ts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Image cover : thanks to &lt;a href="https://unsplash.com/@tateisimikito"&gt;https://unsplash.com/@tateisimikito&lt;/a&gt;&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>graphql</category>
      <category>typescript</category>
      <category>node</category>
    </item>
    <item>
      <title>Animated Education Website with HTML CSS JS</title>
      <author>Sadee</author>
      <pubDate>Mon, 10 Jan 2022 21:32:12 +0000</pubDate>
      <link>https://dev.to/codewithsadee/animated-education-website-with-html-css-js-3d8h</link>
      <guid>https://dev.to/codewithsadee/animated-education-website-with-html-css-js-3d8h</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/1ygRRP-y9pw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;How to make animated education website using html css javascript&lt;/p&gt;

&lt;p&gt;In this video, I will show you how to create (mobile-first responsive) animated education website.&lt;/p&gt;




&lt;p&gt;HI 👋&lt;br&gt;
I'm Sadee (webdev)&lt;br&gt;
In this channel I make videos about Complete Responsive website.&lt;br&gt;
You can checkout my channel 👇&lt;/p&gt;

&lt;p&gt;📺 My Channel : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
🔔 Subscribe : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g?sub_confirmation=1"&gt;subscribe now&lt;/a&gt;&lt;br&gt;
🕐 New Videos Every Week&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#essential-links"&gt;
  &lt;/a&gt;
  🔗 Essential links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://drive.google.com/file/d/1wMROFZ-ljUVzXdcWPqSC-DFJIr00XPLb/view?usp=sharing"&gt;All Images&lt;/a&gt;&lt;br&gt;
&lt;a href="https://drive.google.com/file/d/1VDUOCQh1cM9_ZyDKZXKakqH9I9sOs84o/view?usp=sharing"&gt;Text&lt;/a&gt;&lt;br&gt;
&lt;a href="https://fonts.google.com/specimen/Roboto"&gt;Font - Roboto&lt;/a&gt;&lt;br&gt;
&lt;a href="https://fonts.google.com/specimen/Jost?query=jost"&gt;Font - Jost&lt;/a&gt;&lt;br&gt;
&lt;a href="https://ionic.io/ionicons"&gt;Ionicon&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.patreon.com/posts/source-code-60993085?utm_medium=clipboard_copy&amp;amp;utm_source=copy_to_clipboard&amp;amp;utm_campaign=postshare"&gt;Source Code&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#timestamps"&gt;
  &lt;/a&gt;
  ⏱️ Timestamps
&lt;/h2&gt;

&lt;p&gt;0:00 - Demo&lt;br&gt;
3:18 - File structure&lt;br&gt;
3:50 - Html initial&lt;br&gt;
4:28 - Css variables &amp;amp; reset&lt;br&gt;
7:21 - Header section&lt;br&gt;
18:31 - Home section&lt;br&gt;
30:34 - Category section&lt;br&gt;
38:14 - About section&lt;br&gt;
44:11 - Course section&lt;br&gt;
58:17 - Event section&lt;br&gt;
1:07:22 - Features section&lt;br&gt;
1:13:32 - Instructor section&lt;br&gt;
1:21:08 - Testimonials section&lt;br&gt;
1:26:25 - Blog section&lt;br&gt;
1:33:29 - Contuct section&lt;br&gt;
1:36:13 - Footer seciotn&lt;br&gt;
1:45:59 - Css Animation&lt;br&gt;
1:52:49 - Javascript&lt;br&gt;
1:53:55 - Media queries &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#like-follow-amp-subscribe-me"&gt;
  &lt;/a&gt;
  💜 Like - Follow &amp;amp; Subscribe Me
&lt;/h2&gt;

&lt;p&gt;Twitter : &lt;a href="https://twitter.com/codewithsadee"&gt;https://twitter.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Github : &lt;a href="https://github.com/codewithsadee"&gt;https://github.com/codewithsadee&lt;/a&gt;&lt;br&gt;
YouTube : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
Buy Me A Coffee : &lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;https://www.buymeacoffee.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Patreon : &lt;a href="https://www.patreon.com/codewithsadee"&gt;https://www.patreon.com/codewithsadee&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qhS87mRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kn6vwn4mulhsx6o69is.png" alt="Buy Me A Coffee" width="225" height="51"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>tutorial</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Melhorando seus testes com Jest</title>
      <author>João Victor</author>
      <pubDate>Mon, 10 Jan 2022 21:26:01 +0000</pubDate>
      <link>https://dev.to/joaovictor6/acelerando-seus-testes-em-jest-com-spyon-37ci</link>
      <guid>https://dev.to/joaovictor6/acelerando-seus-testes-em-jest-com-spyon-37ci</guid>
      <description>&lt;p&gt;Nesse artigo explicarei sobre como tornar nossos testes mais performaticos e sólidos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introdu%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  Introdução
&lt;/h2&gt;

&lt;p&gt;Olá, me chamo João e me encontrei com um grande problema. Estava desenvolvendo um projeto no qual consumia uma API, para ser mais exato, está API era disponibilizada pela &lt;a href="https://rapidapi.com"&gt;rapidApi&lt;/a&gt;. Como sou um mero mortal(e estudante), estava utilizando do plano gratuito. Contudo, esse disponibiliza apenas 500 requests por mês. Sério, consegui estourar esse limite em um dia kkkkk.Seria impossivel desenvolver o app com tantas poucas requisições.&lt;br&gt;
Graças a esse "aperto", pensei em desenvolvelo utilizando de TDD(Test Driven Development), que é basicamente desenvolver guiados por teste. Nesse artigo irei mostrar o porquê. Espero que goste e que acima de tudo, te ajude!😁&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preparando-o-ambiente"&gt;
  &lt;/a&gt;
  Preparando o ambiente
&lt;/h2&gt;

&lt;p&gt;Para recriar o ambiente no qual estava, criarei uma API super simples com &lt;a href="https://expressjs.com/"&gt;Express&lt;/a&gt;, utilizarei do &lt;a href="https://www.npmjs.com/package/axios"&gt;Axios&lt;/a&gt; para fazer as requisições e claro, faremos os testes com o &lt;a href="https://jestjs.io/"&gt;Jest&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#expres-um-pouco-de-arroz-e-feij%C3%A3o"&gt;
  &lt;/a&gt;
  Expres, um pouco de arroz e feijão
&lt;/h3&gt;

&lt;p&gt;A api ficou bem simples. Basicamente criei uma rota que recebe um query e retorna um JSON. Além disso fiz uma função sleep para simular uma latência.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_-_mTe-D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4pstyauyotol3r5xl7cr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_-_mTe-D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4pstyauyotol3r5xl7cr.png" alt="API code" width="880" height="463"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configurando-app-para-consumir-nossa-api"&gt;
  &lt;/a&gt;
  Configurando app para consumir nossa API
&lt;/h3&gt;

&lt;p&gt;Aqui criaremos o projeto, nele utilizaremos além dos jest para testes, usaremos também o babel para termos uma sintaxe um pouco mais agradável.(Deixarei o repositório no final do artigo, não se preocupe!)&lt;br&gt;
A estrutura do projeto ficou assim:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0doWAXQh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eyevu014qlnph7rfpnfo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0doWAXQh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eyevu014qlnph7rfpnfo.png" alt="Project structure" width="262" height="285"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pasta __teste__:&lt;/p&gt;

&lt;p&gt;Evidentemente, será nela onde ficara nossos testes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pasta utils:&lt;/p&gt;

&lt;p&gt;Nela ficara nossa instância no Axios, segue o código:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eXXaJIeI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hfesdvgurejvg4dqu1y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eXXaJIeI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hfesdvgurejvg4dqu1y.png" alt="Axios instance code" width="764" height="558"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#jest-e-tdd"&gt;
  &lt;/a&gt;
  Jest, e TDD
&lt;/h2&gt;

&lt;p&gt;Agora iremos produzir nosso teste para a função. Em TDD primeiro fazemos os testes e só depois a função.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#esqueleto-da-fun%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  Esqueleto da função
&lt;/h3&gt;

&lt;p&gt;Basicamente, iremos apenas declarar a função para podermos importa-la nos testes.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KTf0cV7x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5irdab34jbqm6t8164dt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KTf0cV7x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5irdab34jbqm6t8164dt.png" alt="Function base" width="880" height="453"&gt;&lt;/a&gt;&lt;br&gt;
Agora sim partiremos para os testes. Temos de pensar no que a função vai fazer. Nesse caso, ela deve receber um nome, e retornar um objeto tipo: &lt;code&gt;{ message: 'Olá, teste' }&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aumR9rgC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/42jzcczk9gzyjhsi52np.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aumR9rgC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/42jzcczk9gzyjhsi52np.png" alt="Basic test code" width="880" height="475"&gt;&lt;/a&gt;&lt;br&gt;
Esse é basicamente nosso teste. A primeiro momento ele irá falhar(ainda bem). A partir de agora temos que fazê-lo passar.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para isso, implementei nossa função, ela ficou da seguinte forma:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eFRKzFZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tfpp3bjiafxv63d3wydl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eFRKzFZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tfpp3bjiafxv63d3wydl.png" alt="Function" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
O teste ainda não vai passar, já que como essa é uma função async e recebemos apenas uma promise.&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VEDUkg2f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f9eu4e6f3f2uzx4dptll.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VEDUkg2f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f9eu4e6f3f2uzx4dptll.png" alt="output test" width="247" height="134"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aprovando-o-teste"&gt;
  &lt;/a&gt;
  Aprovando o teste
&lt;/h3&gt;

&lt;p&gt;Agora, vamos tratar o retorno da função &lt;em&gt;sendHelloWorld&lt;/em&gt; lá nos nossos testes. Isso significa que temos apenas que botar um &lt;em&gt;async&lt;/em&gt; na função e utilizar um &lt;em&gt;await&lt;/em&gt; no retorno da função. Ficou assim:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DXNOS1be--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kt813nzti6aankaxqdx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DXNOS1be--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kt813nzti6aankaxqdx.png" alt="FUnctional test" width="880" height="426"&gt;&lt;/a&gt;&lt;br&gt;
 Pronto, nossa função passou! Porém, existe um pequeno problema. Com o tempo, nossos testes podem acabar crescendo em quantidade, além disso. Estamos dependendo de uma API externa para executarmos o código. Isso tornam eles menos confiáveis, além de que podem ser extremamente voláteis. imagina se a latência fique alta? Não seria mais inteligente interceptarmos a &lt;em&gt;request&lt;/em&gt; que fizemos ao servidor e retornar um valor pré determinado? um &lt;strong&gt;Mock&lt;/strong&gt;? Bom, eu acredito que sim.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#n%C3%A3o-dependa-de-apis-nos-testes"&gt;
  &lt;/a&gt;
  Não dependa de API's nos testes.
&lt;/h3&gt;

&lt;p&gt;Estamos na parte final do nosso artigo. porém, a mais importante. Imagine um cenário no qual temos 10 testes onde cada um deles faz uma request para algum serviço externo ou API. Nossos testes estariam diretamente ligados a algo no qual não temos o minimo controle. Eles poderiam demorar 3s ou até mesmo 20s, tudo dependeria da latência. Para evitarmos tal problema, o Jest tem uma forma bem simples. Podemos reescrever certas funções, olha que interessante!(me pareceu magia quando descobri kkkk).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reescrevendo-m%C3%A9todos"&gt;
  &lt;/a&gt;
  Reescrevendo métodos
&lt;/h3&gt;

&lt;p&gt;Bom, agora que ja entendemos oque fazer, temos que realmente fazer. Olha o quão simples é reescrever uma função no jest:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j4MMSlLm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y3k851f7253l17qhjml6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j4MMSlLm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y3k851f7253l17qhjml6.png" alt="Final test code" width="880" height="501"&gt;&lt;/a&gt;&lt;br&gt;
 Pronto, agora temos um teste totalmente isolado, isso é incrivel!!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclus%C3%B5es"&gt;
  &lt;/a&gt;
  Conclusões
&lt;/h2&gt;

&lt;p&gt;Espero que tenha aprendido um pouco mais sobre TDD e entendido o quanto foi util pra mim essa alternativa. Além disso, irei passar aqui alguns links que me ajudaram a escrever o artigo e descobrir essa solução:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jestjs.io/docs/jest-object#jestfnimplementation"&gt;Jest.fn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=bLdEypr2e-8"&gt;TDD (Test Driven Development) // Dicionário do Programador&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#reposit%C3%B3rio-com-o-exemplo"&gt;
  &lt;/a&gt;
  Repositório com o exemplo
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JoaoVictor6/jest-example"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>tdd</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>21 Tax write offs for freelance web developers in Canada</title>
      <author>Sotariye</author>
      <pubDate>Mon, 10 Jan 2022 20:43:57 +0000</pubDate>
      <link>https://dev.to/sotariye/21-tax-write-offs-for-freelance-web-developers-in-canada-4p17</link>
      <guid>https://dev.to/sotariye/21-tax-write-offs-for-freelance-web-developers-in-canada-4p17</guid>
      <description>&lt;p&gt;You’ve put in hours of your time, done all the hard work — you’ve learned to code! Now you’re ready to reap the rewards and set off on your own as a freelance developer.&lt;/p&gt;

&lt;p&gt;There are major benefits to working freelance. You get to choose your working hours, clients, and your rate of pay. You can work all morning (or all night for that matter) or maybe only part-time. The world is your oyster. &lt;/p&gt;

&lt;p&gt;However, working freelance can make your tax situation a little complicated, to say the least. That’s why I created this list of tax-deductible expenses that you need to track if you want to keep more of the money you make. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gear and Equipment&lt;/strong&gt;&lt;br&gt;
You don’t need to splurge on super-expensive equipment, but the costs can still add up. Good thing your computer, keyboard, mouse, monitors and any other equipment you purchase are all tax-deductible expenses.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Website Expense&lt;/strong&gt;&lt;br&gt;
How you brand yourself as a freelance developer can help you stand out from the crowd and an online portfolio website is a good place to start. Plus, you can write-off your website hosting and domain registration fees. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Software&lt;/strong&gt;&lt;br&gt;
From mock-up tools to project management software, there are a number of tools out there that can help you run your business more efficiently. If you decide to upgrade to the paid versions, you can write-off those monthly subscription fees. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Professional Services&lt;/strong&gt;&lt;br&gt;
Need to bring on a junior developer to support your client’s work? Any fees you pay to other professionals for advice or services related to your business can be written off. &lt;br&gt;
Payment Processing Fee&lt;br&gt;
Getting paid is great, but those pesky processing fees? Not so much. Fortunately, they’re also tax-deductible. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Professional Development&lt;/strong&gt;&lt;br&gt;
Whether you want to learn a new programming language or framework or develop a new skill, it’s important to invest in your professional development. Coding workshops, programming seminars, online courses and certifications, books and magazines that contribute to your education and development are all tax-deductible expenses.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Marketing&lt;/strong&gt;&lt;br&gt;
From business cards to SEO website upgrades, even the best developers need to invest some funds into marketing their services. You can write off these costs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Networking Event&lt;/strong&gt;&lt;br&gt;
Networking can get a bad rap but it’s still one of the best ways to connect with other professionals and meet with potential clients. If there’s a tech conference or meetup you’ve been dying to attend, remember that these expenses are tax-deductible!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#work-from-home"&gt;
  &lt;/a&gt;
  Work from home?
&lt;/h2&gt;

&lt;p&gt;As long as you have a good computer and solid internet connection, you can work from anywhere as a freelance developer—including your own home.&lt;/p&gt;

&lt;p&gt;If you do decide to work from home, there are quite a few deductions that you can take advantage of. Contrary to popular belief, you don’t need to have a full home office to claim these write-offs. Even if you only have space for a dedicated desk, you can claim business-use-of-home deductions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Utilities&lt;/strong&gt;&lt;br&gt;
Heating bills. Hydro bills. Water bills. We all gotta pay them, but if you work from home, you can write off a portion of your utility costs. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Internet&lt;/strong&gt;&lt;br&gt;
It’d be pretty tough to work as a freelance developer without the internet. That’s why you can write off a portion of these fees as well. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rent or Mortgage&lt;/strong&gt;&lt;br&gt;
While you can’t deduct all of your rent or mortgage payment, you can write-off a percentage of these expenses depending on how much of your home is used for your business.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Property Taxes&lt;/strong&gt;&lt;br&gt;
Owning a home in Canada can be very expensive and very rewarding at the same time. Fortunately, if you work from home, you can claim a portion of your property tax bill as a write-off.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Insurance&lt;/strong&gt;&lt;br&gt;
Do you pay for rental or homeowner insurance? You can write off a portion of these costs as home office write-offs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Maintenance&lt;/strong&gt;&lt;br&gt;
Cleaning expenses, home repairs, snow removal... these are all tax-deductible expenses if you work from home. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phone&lt;/strong&gt;&lt;br&gt;
Do you use your phone for work? You can write off a portion of this monthly bill as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Home Office Expense&lt;/strong&gt;&lt;br&gt;
Most web developers sit at their desks for long periods of time, so creating an ergonomic workspace is pretty key. Office fixtures like a desk, office chair, and second desktop monitor are all tax-deductible purchases.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#meeting-with-clients"&gt;
  &lt;/a&gt;
  Meeting with clients?
&lt;/h2&gt;

&lt;p&gt;Imagine this scenario: a potential client is impressed with your website and has enjoyed chatting with you over the phone, and now they want to meet in person. You’re one step closer to winning their business. &lt;/p&gt;

&lt;p&gt;First impressions really count. While you’ll want to make sure you do your research beforehand, you also need to think about where you’ll be meeting them. Depending on your relationship with this client, you may not want to meet this person at your house or a neighbourhood coffee shop. &lt;/p&gt;

&lt;p&gt;Fortunately, there are a number of options you could explore. For instance, you could meet them at a local coworking space, book a meeting room for the day, or take them out for a meal at a nice restaurant. Whichever option you go with, remember that these expenses are also tax-deductible. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Office Rental&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Co-working space memberships, day passes and room booking fees are all expenses that can be written off. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Food and Drink&lt;/strong&gt;&lt;br&gt;
If you discuss work with a coworker, client, or even a friend at a restaurant, it's a write-off!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#travel-for-work"&gt;
  &lt;/a&gt;
  Travel for work?
&lt;/h2&gt;

&lt;p&gt;Think you don’t need to travel for work as a freelance developer? Think again. While developers can do the majority of their work from home or an office space, there will likely be times where you’ll need to meet with a client in person or attend a conference. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Transportation&lt;/strong&gt;&lt;br&gt;
If you drive to meet with a client or coworker, or to attend a conference or out-of-town meet-up—you can claim car-related write-offs. These include expenses like gas, car maintenance, insurance and registration, parking, tolls, and the annual depreciation of your car.&lt;/p&gt;

&lt;p&gt;If you’re travelling out of the city or out of the country, airfare, train tickets and rental car fees can also be written off. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Accommodations&lt;/strong&gt;&lt;br&gt;
When you travel for work, lodging expenses such as hotel rooms or Airbnb bookings are write-offs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Food and Drink&lt;/strong&gt; &lt;br&gt;
When you're travelling for work, all meals are tax-deductible. Even takeout.&lt;/p&gt;




&lt;p&gt;If you enjoyed reading this article, I write about all things business finance in Canada and you can find more more resources here. &lt;br&gt;
&lt;a href="https://www.betterwithbenji.com/"&gt;https://www.betterwithbenji.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>beginners</category>
      <category>writing</category>
      <category>productivity</category>
    </item>
    <item>
      <title>WeakMap and WeakSet: Understanding JavaScript weak references</title>
      <author>Matt Angelosanto</author>
      <pubDate>Mon, 10 Jan 2022 20:39:50 +0000</pubDate>
      <link>https://dev.to/logrocket/weakmap-and-weakset-understanding-javascript-weak-references-1lo1</link>
      <guid>https://dev.to/logrocket/weakmap-and-weakset-understanding-javascript-weak-references-1lo1</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/conermurphy/"&gt;Coner Murphy&lt;/a&gt;&lt;/strong&gt; ✏️&lt;/p&gt;

&lt;p&gt;Weak references are not often used in JavaScript due to how the language is designed. However, in certain circumstances, they can prove vital, such as when developers must store additional data and need to automatically manage the memory usage.&lt;/p&gt;

&lt;p&gt;In this post, we’ll learn about these weak references in JavaScript and how we can use them by utilizing two objects within the language: &lt;code&gt;WeakMap&lt;/code&gt; and &lt;code&gt;WeakSet&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understanding-strong-references"&gt;
  &lt;/a&gt;
  Understanding strong references
&lt;/h2&gt;

&lt;p&gt;Let’s start by taking a look at what a normal, or strong, reference is in JavaScript. In its simplest definition, a strong reference is a reference that keeps an object in memory. Let’s take a look at this in practice to understand what we are talking about:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;badger&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;dog&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;dog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [{ name: "badger" }]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By creating a variable as an object, we can place the object into an array and remove the reference to the original object from the variable we created by setting its value to &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Although we can’t access the object via the &lt;code&gt;dog&lt;/code&gt; variable anymore because there is a strong reference between the &lt;code&gt;pets&lt;/code&gt; array and the object, the object is kept in memory and can be accessed via &lt;code&gt;pets[0]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In other words, the strong reference prevents removing the object from memory via garbage collection.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understanding-weak-references"&gt;
  &lt;/a&gt;
  Understanding weak references
&lt;/h2&gt;

&lt;p&gt;Simply put a weak reference is a reference to an object that doesn’t prevent garbage collection if it is the only reference to the object in the memory.&lt;/p&gt;

&lt;p&gt;A normal reference (considered strong), would prevent the garbage collection of an object even if it is the only object referencing it; this isn’t the case for a weak reference.&lt;/p&gt;

&lt;p&gt;Let’s take this theory and put it into practice with the previous example of a strong reference and putting it into the context of a weak reference. Ignore the use of &lt;code&gt;WeakMap&lt;/code&gt; right now; we will explain this in more depth later in the article. For now, let’s see weak reference behavior:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;pets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;WeakMap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;badger&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dog&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;okay&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// WeakMap{ {...} -&amp;gt; "Okay" } &amp;lt;= dog set to the WeakMap&lt;/span&gt;

&lt;span class="nx"&gt;dog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Overwrite the reference to the object&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// WeakMap(0) &amp;lt;= dog has been garbage collected.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By utilizing &lt;code&gt;WeakMap&lt;/code&gt; and the weak references that come with it, we can see the differences between the two types of references in action. While the strong (normal) reference to the original &lt;code&gt;dog&lt;/code&gt; object still exists, the &lt;code&gt;dog&lt;/code&gt; object persists in the &lt;code&gt;WeakMap&lt;/code&gt;, and we can access it with no issues.&lt;/p&gt;

&lt;p&gt;But, when we overwrite the reference to the original &lt;code&gt;dog&lt;/code&gt; object by reassigning the variable to &lt;code&gt;null&lt;/code&gt;, the only reference to the original object in memory is the weak reference coming from the &lt;code&gt;WeakMap&lt;/code&gt; we created.&lt;/p&gt;

&lt;p&gt;Because it’s a weak reference, it won’t prevent garbage collection from occurring. This means when &lt;a href="https://blog.logrocket.com/tag/vanilla-javascript/"&gt;the JavaScript engine&lt;/a&gt; runs a garbage collection process again, the &lt;code&gt;dog&lt;/code&gt; object will be removed from memory and from the &lt;code&gt;WeakMap&lt;/code&gt; we assigned it to.&lt;/p&gt;

&lt;p&gt;The key difference to note is that a strong reference prevents an object from garbage collection while a weak one will not.&lt;/p&gt;

&lt;p&gt;By default, JavaScript uses strong references for all of its references and the only way to use weak references is to use either a &lt;code&gt;WeakMap&lt;/code&gt; or a &lt;code&gt;WeakSet&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-garbage-collection"&gt;
  &lt;/a&gt;
  What is garbage collection?
&lt;/h2&gt;

&lt;p&gt;While garbage collection is a detailed and complicated subject, it is important to understand when discussing references.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.logrocket.com/javascript-garbage-collection-browser-vs-server/"&gt;Garage collection is an automated process controlled by the JavaScript engine&lt;/a&gt;. When a value is reachable, it is guaranteed to be stored in memory and not garbage collected, and there are two ways a value is considered reachable.&lt;/p&gt;

&lt;p&gt;This first is that they are part of the base set of reachable values like global variables, the current executing function and its local variables/parameters, and more internal values.&lt;/p&gt;

&lt;p&gt;The other is reaching any value from the root by reference or a chain of references. For instance, imagine we create an object in a global variable; this is reachable by the global space, thus considered reachable.&lt;/p&gt;

&lt;p&gt;Now, if we create another object and reference it off the global object we created, it is also reachable because it’s referenced via the global object.&lt;/p&gt;

&lt;p&gt;However, if we remove the global object by setting it to &lt;code&gt;null&lt;/code&gt;, suddenly the one we could reach by reference isn’t reachable, so it would be garbage collected.&lt;/p&gt;

&lt;p&gt;This is specifically referencing strong references because they are the default in JavaScript. But, the same does apply to weak references, the only exception being if the only reference to an object is weak, it does not prevent garbage collection, and the object is removed.&lt;/p&gt;

&lt;p&gt;That is a high-level overview of how garbage collection works; essentially, if something isn’t reachable, it is removed from memory so the memory can be used in other locations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-sets-endraw-vs-raw-weaksets-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;Sets&lt;/code&gt; vs. &lt;code&gt;WeakSets&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set"&gt;Per MDN&lt;/a&gt;, “&lt;code&gt;Set&lt;/code&gt; objects are collections of values. You can iterate through the elements of a set in insertion order. A value in the &lt;code&gt;Set&lt;/code&gt; may only occur once; it is unique in the &lt;code&gt;Set&lt;/code&gt;'s collection.”&lt;/p&gt;

&lt;p&gt;Simply put, a &lt;code&gt;Set&lt;/code&gt; is like an array that can only contain unique values but we can still iterate through it like an array using methods like for loops and &lt;code&gt;.forEach&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Similar to a &lt;code&gt;Set&lt;/code&gt;, &lt;code&gt;WeakSet&lt;/code&gt; is a collection of objects that are unique from each other but differs because &lt;code&gt;WeakSet&lt;/code&gt; can only store objects and cannot contain arbitrary values of any type like strings or numbers.&lt;/p&gt;

&lt;p&gt;Ultimately, as the name suggests, &lt;code&gt;WeakSets&lt;/code&gt; are indeed weak, meaning they use weak references.&lt;/p&gt;

&lt;p&gt;It is also worth noting an interesting side effect of using weak references is that &lt;code&gt;WeakSet&lt;/code&gt; is not enumerable. This means there is no way to loop over the items contained within it because there is no list of current objects stored in the collection; they are weakly referenced and may be removed at any point.&lt;/p&gt;

&lt;p&gt;Here is an example of &lt;code&gt;WeakSet&lt;/code&gt; in use and the methods we can call on it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;WeakSet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fluffy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;badger&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dog&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dog&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;// true&lt;/span&gt;

&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// removes cat from the set&lt;/span&gt;
&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;// false, cat has been removed&lt;/span&gt;
&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dog&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;// true, dog is retained&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#-raw-maps-endraw-vs-raw-weakmap-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;Maps&lt;/code&gt; vs. &lt;code&gt;WeakMap&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"&gt;According to MDN&lt;/a&gt;, “The &lt;code&gt;Map&lt;/code&gt; object holds key-value pairs and remembers the original insertion order of the keys. Any value (both objects and primitive values) may be used as either a key or a value.”&lt;/p&gt;

&lt;p&gt;This means a &lt;code&gt;Map&lt;/code&gt; is like an object where we can store key-value pairs and access the values contained within the &lt;code&gt;Map&lt;/code&gt; through the key. Unlike &lt;a href="https://blog.logrocket.com/storing-retrieving-javascript-objects-localstorage/"&gt;a standard object in JavaScript&lt;/a&gt;, however, we must use the &lt;code&gt;.get()&lt;/code&gt; method to access the values.&lt;/p&gt;

&lt;p&gt;In comparison to a &lt;code&gt;Map&lt;/code&gt;, a &lt;code&gt;WeakMap&lt;/code&gt; is very much the same but the references it holds are weak references, meaning it won’t prevent garbage collection from removing values it references if they are not strongly referenced elsewhere.&lt;/p&gt;

&lt;p&gt;Also, &lt;code&gt;WeakMap&lt;/code&gt; has the same side effect of not being enumerable due to the weak references.&lt;/p&gt;

&lt;p&gt;Finally, we must use objects as the keys, but the values can be any arbitrary value like a string or number. Here is an example of &lt;code&gt;WeakMaps&lt;/code&gt; used and the methods we can use on it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wm1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;WeakMap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wm2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;WeakMap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;wm1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wm1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wm2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// You can set the value to be anything including an object or function&lt;/span&gt;
&lt;span class="nx"&gt;wm2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Or, undefined&lt;/span&gt;
&lt;span class="nx"&gt;wm1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;wm2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;wm1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Or, even a WeakMap itself&lt;/span&gt;

&lt;span class="nx"&gt;wm1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 100&lt;/span&gt;

&lt;span class="nx"&gt;wm1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;wm1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wm1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Before closing out, let’s consider a potential use case for weak references and the two objects we covered in this article.&lt;/p&gt;

&lt;p&gt;If you need to store additional data temporarily and don’t want to worry about cleaning up the memory or how the objects are removed, then using weak references is an absolute lifesaver.&lt;/p&gt;

&lt;p&gt;But, it’s not likely that you will regularly need to use &lt;code&gt;WeakMaps&lt;/code&gt;, &lt;code&gt;WeakSets&lt;/code&gt;, or even weak references regularly in JavaScript.&lt;/p&gt;

&lt;p&gt;They are handy to know for the occasional situation and great to have base knowledge about, but in the majority of situations, use normal (strong) references.&lt;/p&gt;

&lt;p&gt;I hope you found this article on weak references in JavaScript helpful, if you did, &lt;a href="https://twitter.com/MrConerMurphy"&gt;please consider following me over on Twitter&lt;/a&gt;, where I post helpful and actionable tips and content on the JavaScript ecosystem.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#logrocket-debug-javascript-errors-more-easily-by-understanding-the-context"&gt;
  &lt;/a&gt;
  &lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt;: Debug JavaScript errors more easily by understanding the context
&lt;/h2&gt;

&lt;p&gt;Debugging code is always a tedious task. But the more you understand your errors the easier it is to fix them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt; allows you to understand these errors in new and unique ways. Our frontend monitoring solution tracks user engagement with your JavaScript frontends to give you the ability to find out exactly what the user did that led to an error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fD6-0SwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2020/06/reproduce-javascript-errors.gif" alt="LogRocket Dashboard Free Trial Banner" width="800" height="407"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LogRocket records console logs, page load times, stacktraces, slow network requests/responses with headers + bodies, browser metadata, and custom logs. Understanding the impact of your JavaScript code will never be easier!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;Try it for free&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Chat App</title>
      <author>ErenKarakaya</author>
      <pubDate>Mon, 10 Jan 2022 20:38:55 +0000</pubDate>
      <link>https://dev.to/erenkarakaya01/chat-app-18b9</link>
      <guid>https://dev.to/erenkarakaya01/chat-app-18b9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#instructions"&gt;
  &lt;/a&gt;
  Instructions
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;npm i&lt;/code&gt;&lt;br&gt;
&lt;code&gt;npm run dev&lt;/code&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h2&gt;

&lt;p&gt;Hi, I'm Eren and I study at Eskisehir Technical University as a Computer Science 2. grade student. I made a realtime chat app called SprinkaiChat with MERN Stack. I made this site to improve my coding skills. I used MongoDB technologies and MongoDB Atlas. To use my app just create an acount, log in, join a room and chat with other people!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#choose-your-own-adventure"&gt;
  &lt;/a&gt;
  &lt;em&gt;Choose Your Own Adventure&lt;/em&gt;
&lt;/h3&gt;




&lt;h2&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#github"&gt;
  &lt;/a&gt;
  Github
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/ErenKarakaya01/RealtimeChatApp-MERN"&gt;https://github.com/ErenKarakaya01/RealtimeChatApp-MERN&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#website"&gt;
  &lt;/a&gt;
  Website
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://sprinkaichat.herokuapp.com"&gt;https://sprinkaichat.herokuapp.com&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WY_bKK0A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmzjqldg8ocxbh3wpeii.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WY_bKK0A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmzjqldg8ocxbh3wpeii.png" alt="Image description" width="880" height="421"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2E_7YlEp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d391dkaitb8pqo6rmq7t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2E_7YlEp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d391dkaitb8pqo6rmq7t.png" alt="Image description" width="880" height="426"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>atlashackathon</category>
    </item>
    <item>
      <title>DevSecOps and Shift Left Security: A Guide</title>
      <author>Geoff Stevens</author>
      <pubDate>Mon, 10 Jan 2022 20:35:46 +0000</pubDate>
      <link>https://dev.to/softwaredotcom/devsecops-and-shift-left-security-a-guide-3dfh</link>
      <guid>https://dev.to/softwaredotcom/devsecops-and-shift-left-security-a-guide-3dfh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-devsecops-methodology"&gt;
  &lt;/a&gt;
  What is DevSecOps methodology?
&lt;/h2&gt;

&lt;p&gt;DevSecOps—short for development, security, and operations—adds security-first thinking into every phase of the software development pipeline, helping engineering teams deliver secure software with speed and at scale. &lt;/p&gt;

&lt;p&gt;Previously, development teams performed security testing after the development cycle, meaning they handed work over to separate QA and security teams for final inspection. As software development teams adopted DevOps practices, particularly continuous integration and deployment, security reviews created costly bottlenecks by backloading important work at the final stages of the delivery pipelines. Teams only uncovered issues after features had been built, meaning they were costlier and more difficult to debug and fix. &lt;/p&gt;

&lt;p&gt;DevSecOps integrates security into every stage of the development pipeline, providing teams with tools and resources at each phase to create safe and secure code. As a result, DevSecOps helps teams address security issues earlier and faster without slowing their organization's software delivery. &lt;/p&gt;

&lt;p&gt;By adopting principles of DevSecOps, teams can benefit from: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Faster and more efficient software delivery&lt;/li&gt;
&lt;li&gt;  More secure codebase and proactive security&lt;/li&gt;
&lt;li&gt;  Continuous feedback and faster security vulnerability patching&lt;/li&gt;
&lt;li&gt;  Highly automated, standardized, and predictable security practices &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-does-shiftleft-security-fit-into-devsecops"&gt;
  &lt;/a&gt;
  How does shift-left security fit into DevSecOps?
&lt;/h2&gt;

&lt;p&gt;Before DevSecOps, engineering teams structured their development cycles to be highly sequential, which meant completing all testing and security reviews after the planning, implementation, and integration phases. &lt;/p&gt;

&lt;p&gt;Once changes reach the end of the development cycle, they are often more complex to debug, forcing teams to disentangle several factors all at once, such as performance, integration, and more. As a result, uncovering significant issues late in the cycle requires large amounts of rework for development teams. After receiving a long list of complex defects from testers, developers need to design and apply multiple fixes all at once and across thousands of lines of code. &lt;/p&gt;

&lt;p&gt;Security testing late in the development life cycle creates especially painful bottlenecks throughout the delivery pipeline: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Insufficient resource planning&lt;/strong&gt;. By failing to include testers early in the planning phases, teams may not properly allocate resources later in the development cycle. &lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Less time and more debt&lt;/strong&gt;. Cramming testing at the end of the cycle increases the likelihood of teams skipping testing altogether, increasing technical debt, and deferring problems to later versions. &lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Wasted development time&lt;/strong&gt;. Engineers may continue to work on defective features or changes before receiving any feedback, leading to wasted energy and effort. &lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Complex debugging&lt;/strong&gt;. Systems become more complex later in the development cycle, making testing more challenging and burdensome. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Shifting left means performing testing earlier in the development cycle. In other words, testing is moved to the left on the project timeline. &lt;/p&gt;

&lt;p&gt;Importantly, the goal is not to shift security to the left &lt;em&gt;as a discrete phase&lt;/em&gt;; instead, teams should integrate security into every phase of development—design, implementation, verification, and so on. Many of these improvements can be introduced by automating security tests, particularly as a part of the continuous integration and deployment pipeline. &lt;/p&gt;

&lt;p&gt;According to W. Edwards Deming, an American engineer famous for his key principles on transforming business effectiveness, engineering teams should design more secure products from the moment they start building:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Cease dependence on inspection to achieve quality. Eliminate the need for inspection on a mass basis by building quality into the product in the first place.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#why-shift-left"&gt;
  &lt;/a&gt;
  Why shift left?
&lt;/h3&gt;

&lt;p&gt;The benefits of earlier intervention include faster development speed and improved security throughout the organization's DevOps capabilities. Ultimately, the goal of shift-left security and DevSecOps should be to avoid critical bugs and security defects during the deployment phase, while preserving the fast flow of work.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#greater-transparency"&gt;
  &lt;/a&gt;
  Greater transparency
&lt;/h4&gt;

&lt;p&gt;Implementing security measures throughout the value stream improves visibility into security coverage, including the number of defects discovered and any potential security blind spots. &lt;/p&gt;

&lt;p&gt;The consistent monitoring of threats in the delivery pipeline also introduces a high degree of traceability and auditability, which helps teams iterate and improve their security controls after incidents. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#more-secure-codebase"&gt;
  &lt;/a&gt;
  More secure codebase
&lt;/h4&gt;

&lt;p&gt;Shift-left security increases test coverage by encouraging more security testing during the development phase. Additionally, shift-left security enables distributed security, where more team members involved in the development process are responsible for building secure software. &lt;/p&gt;

&lt;p&gt;Shift-left security also inspires better software design, instead of a culture of patching and hotfixes, by making teams more aware of security requirements. Teams can code with security in mind from the outset of a project, avoiding ad-hoc and clumsy fixes in the later stages of development. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#lower-production-costs"&gt;
  &lt;/a&gt;
  Lower production costs
&lt;/h4&gt;

&lt;p&gt;Shift-left security reduces the cost of development by resolving issues before introducing additional dependencies. According to &lt;a href="https://www.researchgate.net/figure/IBM-System-Science-Institute-Relative-Cost-of-Fixing-Defects_fig1_255965523"&gt;IBM researchers&lt;/a&gt;, fixing defects is 15 times more expensive to fix during the testing phase than during the design phase. Worse, that number jumps to 100 times more expensive when defects are fixed during the maintenance phase. &lt;/p&gt;

&lt;p&gt;Fixing security issues earlier requires less effort and rework than if teams wait until after implementation. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#organizational-learning"&gt;
  &lt;/a&gt;
  Organizational learning
&lt;/h4&gt;

&lt;p&gt;Shift-left security introduces key security practices to development teams and equips them with tools that provide fast feedback on their work. These insights help spread knowledge about security best practices throughout the organization, creating a more security-conscious culture. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#improved-response-time"&gt;
  &lt;/a&gt;
  Improved response time
&lt;/h4&gt;

&lt;p&gt;Better collaboration between development and security means issues can be discovered faster and fixed sooner. When coupled with continuous integration, shift-left security helps teams patch newly identified security vulnerabilities in faster release cycles, decreasing the time threat actors can take advantage of them.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#standardization-and-automation"&gt;
  &lt;/a&gt;
  Standardization and automation
&lt;/h4&gt;

&lt;p&gt;DevSecOps encourages teams to adopt highly repeatable and predictable security workflows. They can apply security controls consistently across environments, including containers, databases, serverless functions, and more. Such standardization prevents security issues from accidentally slipping through security controls due to human error. &lt;/p&gt;

&lt;p&gt;Shift-left security also introduces a high degree of automation into the software development life cycle, shortening feedback loops and eliminating handoffs. Teams can continuously decrease the workload of manual testers by iteratively and incrementally offloading routine testing to automated tooling.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#decreased-time-to-market"&gt;
  &lt;/a&gt;
  Decreased time to market
&lt;/h4&gt;

&lt;p&gt;Overall, shift-left security can increase &lt;a href="https://www.software.com/devops-guides/delivery-velocity-score"&gt;delivery speed&lt;/a&gt;. Optimized security workflows and automation mean less wait time for developers and fewer bottlenecks when shipping new features.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-shift-left-in-devsecops"&gt;
  &lt;/a&gt;
  How to shift left in DevSecOps
&lt;/h2&gt;

&lt;p&gt;Adopting shift-left security is not a linear, binary outcome with a strict timeline; instead, it is a continuous process of security improvements over the long-term. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#define-a-strategy"&gt;
  &lt;/a&gt;
  Define a strategy
&lt;/h3&gt;

&lt;p&gt;Before changing any security workflows, engineering and security teams must first agree on standards and expectations for their shift-left initiatives. It's important they decide what shift-left security looks like at their organization, creating a roadmap of iterative, long-term improvements. &lt;/p&gt;

&lt;p&gt;They can also perform a risk-based analysis to decide where to start implementing testing and tooling, balancing potential risk to the organization's security and resources required to implement new workflows. Incident history and can provide a list of high-priority and high-impact areas for improvement. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#understand-the-flow-of-work-in-your-organization"&gt;
  &lt;/a&gt;
  Understand the flow of work in your organization
&lt;/h3&gt;

&lt;p&gt;Next, teams need to understand the flow of work through the software delivery pipeline. The goal is to provide context to security teams about the tools and environments used by developers. They can then create a unified test strategy outlining the tests, tools, and data required for each new security requirement. &lt;/p&gt;

&lt;p&gt;They can also identify opportunities to improve existing workflows so they are more compatible with shift-left security. For example, teams can adopt &lt;a href="https://www.software.com/devops-guides/trunk-based-development-guide"&gt;trunk-based development&lt;/a&gt; to streamline automated security tests. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implement-security-guardrails"&gt;
  &lt;/a&gt;
  Implement security guardrails
&lt;/h3&gt;

&lt;p&gt;When adding security guardrails, the goal is to make security a seamless part of daily work. Teams can introduce these changes into the development pipeline by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  De-emphasizing acceptance and system level testing, while refocusing on unit testing and integration testing.&lt;/li&gt;
&lt;li&gt;  Reducing toolchain complexity with pre-approved tools.&lt;/li&gt;
&lt;li&gt;  Introducing &lt;a href="https://www.software.com/devops-guides/test-automation-guide"&gt;testing automation&lt;/a&gt;, including security workflows directly into continuous integration pipelines.&lt;/li&gt;
&lt;li&gt;  Hardening continuous integration systems with checklists to ensure teams follow best practices.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#continuously-train-and-improve"&gt;
  &lt;/a&gt;
  Continuously train and improve
&lt;/h3&gt;

&lt;p&gt;Shift-left security requires continuous improvement to respond to the ever-changing needs of development and security teams. As part of the ongoing shift left, security teams can be more involved in the early phases of design, reviewing implementation details to advise on potential testing requirements, architecture considerations, and security considerations. &lt;/p&gt;

&lt;p&gt;Development teams can also be kept up to date on the OWASP Top 10, testing best practices, and other security trends. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shift-left-security-best-practices"&gt;
  &lt;/a&gt;
  Shift left security best practices
&lt;/h2&gt;

&lt;p&gt;Shift-left security needs to be implemented with careful consideration for its impact on the development process. Like all DevOps capabilities, it works best when combined with visibility, monitoring, and continuous improvement. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#optimize-test-environments"&gt;
  &lt;/a&gt;
  Optimize test environments
&lt;/h3&gt;

&lt;p&gt;Security testing should also follow the &lt;a href="https://www.software.com/devops-guides/test-automation-guide"&gt;test pyramid&lt;/a&gt; to provide the most valuable feedback to developers at the right time. It's important to implement smaller, faster tests earlier, such as static code analysis, unit tests, and smoke tests. By starting with these smaller tests, developers avoid the need to create full builds to reveal certain security issues. &lt;/p&gt;

&lt;p&gt;Teams should run more comprehensive test suites—such as API, integration, and cross-browser testing—later in the development pipeline. These test suites should be designed to fail fast, stopping builds early if they uncover catastrophic issues. &lt;/p&gt;

&lt;p&gt;Teams should also consider using short-lived testing environments. Long-running environments can quickly become obsolete or require significant upkeep, while temporary environments avoid maintenance costs and outdated data. For example, containers for smoking tests can be created and destroyed quickly according to predefined configurations. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#monitor-pipeline-performance"&gt;
  &lt;/a&gt;
  Monitor pipeline performance
&lt;/h3&gt;

&lt;p&gt;Shift-left security should be highly automated, with tools and tests added directly to the build process. Teams will need to maintain security tests and plan for their upkeep each development cycle. &lt;/p&gt;

&lt;p&gt;As a result, an important part of shift-left security is consistently monitoring pipeline performance. Teams should highlight slow pipelines and jobs, as well as their success rates. The goal is to fine tune their configuration to eliminate false positives, increase speed, or flag outdated tests. They can also identify recurring security weaknesses that require additional tooling earlier in the development cycle. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security-teams-involved-in-design"&gt;
  &lt;/a&gt;
  Security teams involved in design
&lt;/h3&gt;

&lt;p&gt;Requesting feedback from security teams during the design phase helps teams flag potential issues and highlight areas of focus during implementation. Security teams can help teams prevent complex security issues before developers have a chance to build them into the codebase.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#increase-preapproved-tools"&gt;
  &lt;/a&gt;
  Increase pre-approved tools
&lt;/h3&gt;

&lt;p&gt;Standardization and pre-approval for dependencies, packages, toolchains, libraries encourages their use and avoids rework. Overall, it decreases the surface area for security issues by eliminating vulnerable toolchains before they're added into the codebase. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#develop-a-culture-of-visibility"&gt;
  &lt;/a&gt;
  Develop a culture of visibility
&lt;/h3&gt;

&lt;p&gt;Above all, teams should improve visibility into their organization's shift-left security practices. They should make it easy for all team members to understand their organization's security posture, including its strengths and areas for improvements. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#measuring-shift-left-security"&gt;
  &lt;/a&gt;
  Measuring shift left security
&lt;/h2&gt;

&lt;p&gt;To measure the effectiveness of shift-left security, teams should improve visibility into: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Security review time&lt;/strong&gt;. The goal should be to decrease the time required for security reviews so they do not slow the development process. &lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Percentage of security requirements integrated into automated testing&lt;/strong&gt;. Teams should increase the coverage of security requirements performed as part of test automation, which provide faster feedback to developers. &lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Percentage of development tools in use that have been pre-approved&lt;/strong&gt;. Teams should increase their approval coverage until most or all tools used by development teams have been pre-approved by security teams. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#shift-left-security-tools"&gt;
  &lt;/a&gt;
  Shift left security tools
&lt;/h2&gt;

&lt;p&gt;Organizations can implement several different types of tools to help developers shift security to the left. The four main security testing methods include: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Static Application System Testing (SAST) involves scanning source code for vulnerabilities. It's typically fast and cheap because it does not require code to compile or run. &lt;/li&gt;
&lt;li&gt;  Dynamic Application Security Testing (DAST) involves black-boxing testing, exposing an application to common attacks. &lt;/li&gt;
&lt;li&gt;  Interactive Application Security Testing (IAST), a hybrid of SAST and DAST, analyzes running applications and watches behaviors initiated by both manual and automated tests. &lt;/li&gt;
&lt;li&gt;  Runtime Application Self Protection (RASP) integrates with an application to prevent attacks during runtime, blocking or preventing execution based on traffic and user behavior. Two popular tools include OpenRASP and Sqreen. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Teams can also implement security practices to further secure the software supply chain: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Secrets detection: Teams can use tools to scan code for secrets, like API keys, encryption keys, and credentials, to prevent accidental exposure. &lt;/li&gt;
&lt;li&gt;  Dependency scanning: Tools like WhiteSource and FOSSA scan dependencies and open source projects for security issues or identify outdated packages. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#start-small-start-today"&gt;
  &lt;/a&gt;
  Start small, start today
&lt;/h2&gt;

&lt;p&gt;As teams work in increasingly complex development environments—relying on more dependencies, tools, and open source technology—security is more important than ever. With widespread security scares, such as &lt;a href="https://www.zdnet.com/article/log4j-flaw-hunt-shows-how-complicated-the-software-supply-chain-really-is/"&gt;Log4j&lt;/a&gt; and SolarWinds, creating a resilient and security-focused organization can be a daunting task. In 2021 alone, the US-CERT Vulnerability database recorded more than 18,000 vulnerabilities, &lt;a href="https://www.securitymagazine.com/articles/96668-2021-breaks-the-record-for-security-vulnerabilities"&gt;breaking previous records&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;In spite of these challenges, DevSecOps and shift-left security testing offers teams a way to confidently and consistently write more secure code and build safer software. With small, continuous improvements, any engineering team can inspire a culture that prioritizes better security.&lt;/p&gt;

</description>
      <category>security</category>
      <category>devops</category>
    </item>
    <item>
      <title>MongoDB Atlas Hackathon</title>
      <author>zaahmed-nisum-com</author>
      <pubDate>Mon, 10 Jan 2022 20:31:59 +0000</pubDate>
      <link>https://dev.to/zaahmednisumcom/mongodb-atlas-hackathon-1jlb</link>
      <guid>https://dev.to/zaahmednisumcom/mongodb-atlas-hackathon-1jlb</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;I have create a simple full-text search for products, A user can search a product with right any text on input field and hit search than MongoDB Atlas search do the job for me. User can search on basis of different fields and get the desire recordes.&lt;br&gt;
I also create a simple schedule trigger to get the daily order report which will get all the orders on daily basis and create a single entity for single day and add it in a dailyorderreport schema.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;I have choose E-Commerce Creation &amp;amp; Action Star for my project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;

&lt;p&gt;Fronend Repo&lt;code&gt;{% github https://github.com/zaahmed-nisum-com/nisum-vuejs-streamingweb %}&lt;/code&gt;&lt;br&gt;
Backend Repo&lt;code&gt;{% github https://github.com/zaahmed-nisum-com/nodeJS-workshop-nisum/tree/master %}&lt;/code&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;Did't use any&lt;/p&gt;

&lt;p&gt;[Note:] # Screenshots/demo videos&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fd2Cb1SC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ff8yrn2vsdg66aeb53ku.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fd2Cb1SC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ff8yrn2vsdg66aeb53ku.gif" alt="full text search" width="600" height="315"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8_w5om74--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wtrgmbmyqbms12rmc8k6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8_w5om74--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wtrgmbmyqbms12rmc8k6.gif" alt="Trigger for daily order " width="500" height="263"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;App pages urls&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#full-text-search-page"&gt;
  &lt;/a&gt;
  full text search page
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://watchnowweb.herokuapp.com/search"&gt;https://watchnowweb.herokuapp.com/search&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#today-order-trigger-event"&gt;
  &lt;/a&gt;
  today order trigger event
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://watchnowweb.herokuapp.com/orders/todayorders"&gt;https://watchnowweb.herokuapp.com/orders/todayorders&lt;/a&gt;&lt;/p&gt;

</description>
      <category>atlashackathon</category>
      <category>mongodb</category>
    </item>
    <item>
      <title>Discount Portal - Send Discount Newsletters</title>
      <author>Hari Karthigasu</author>
      <pubDate>Mon, 10 Jan 2022 19:51:35 +0000</pubDate>
      <link>https://dev.to/harik8/discount-portal-send-discount-newsletters-1e02</link>
      <guid>https://dev.to/harik8/discount-portal-send-discount-newsletters-1e02</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;Discount Portal is Web based application that sends out discount newsletters to a subscriber or list of subscribers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Choose Your Own Adventure&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/harik8"&gt;
        harik8
      &lt;/a&gt; / &lt;a href="https://github.com/harik8/discount-portal"&gt;
        discount-portal
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Discount Portal is a Web application send product discount newsletters to subscribers.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Discount Portal&lt;/h1&gt;
&lt;p&gt;Discount Portal is a Web application that sends product discount newsletters to subscribers. Click &lt;a href="https://portal.forexample.link/" rel="nofollow"&gt;here&lt;/a&gt; to access the portal.&lt;/p&gt;
&lt;p&gt;This is application is developed for Mongo Atlas Hackathon 2021/2022.&lt;/p&gt;
&lt;p&gt;(The portal requires Google Auth to login. Currently it's only allowed to my user.)&lt;/p&gt;
&lt;p&gt;Click &lt;a href="https://dev.to/harik8/discount-portal-send-discount-newsletters-1e02" rel="nofollow"&gt;here&lt;/a&gt; to view the dev.to page about this application.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/harik8/discount-portalassets/screenshots/discount.png"&gt;&lt;img width="200" height="200" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fn0LCzNu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/harik8/discount-portalassets/screenshots/discount.png"&gt;&lt;/a&gt;
&lt;/p&gt;



&lt;h1&gt;
Folder Structure&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;assets    - Screenshots and images.&lt;/li&gt;
&lt;li&gt;backend   - Backend service (server.py) which add records to Mongo Atlas Database via Data API.&lt;/li&gt;
&lt;li&gt;functions - AWS Lambda function to send mails and Realm scheduler function to clean DB.&lt;/li&gt;
&lt;li&gt;templates - AWS SES Email template.&lt;/li&gt;
&lt;/ul&gt;



&lt;h1&gt;
Technologies Used&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;React JS             - Front end&lt;/li&gt;
&lt;li&gt;Python               - Back end&lt;/li&gt;
&lt;li&gt;Mongo Atlas Services&lt;/li&gt;
&lt;/ul&gt;



&lt;h1&gt;
Service Flow Chart&lt;/h1&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/harik8/discount-portalassets/screenshots/discount-portal.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vuwenaxc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/harik8/discount-portalassets/screenshots/discount-portal.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/harik8/discount-portal"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;React JS - Frontend&lt;br&gt;
Python - Backend&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.atlas.mongodb.com/"&gt;Mongo Atlas&lt;/a&gt;&lt;br&gt;
&lt;a href="https://docs.mongodb.com/realm/functions/"&gt;Realm Functions&lt;/a&gt;&lt;br&gt;
&lt;a href="https://docs.mongodb.com/realm/triggers/trigger-types/"&gt;Triggers&lt;/a&gt;&lt;br&gt;
&lt;a href="https://docs.atlas.mongodb.com/api/data-api/"&gt;Data API&lt;/a&gt;&lt;br&gt;
&lt;a href="https://draw.io"&gt;Diagrams and Image&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/NthhIFHp0rA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#flow-chart-diagram"&gt;
  &lt;/a&gt;
  Flow Chart Diagram
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U1LvkheL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uocbd4xd6wmjtfueqr5l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U1LvkheL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uocbd4xd6wmjtfueqr5l.png" alt="Discount Portal Flow Chart" width="731" height="1541"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Please click on the image to view clearly or view on Github).&lt;/p&gt;

</description>
      <category>atlashackathon</category>
    </item>
    <item>
      <title>Understanding Angular Modules</title>
      <author>Anubhab Mukherjee</author>
      <pubDate>Mon, 10 Jan 2022 19:21:25 +0000</pubDate>
      <link>https://dev.to/this-is-angular/understanding-angular-modules-41pb</link>
      <guid>https://dev.to/this-is-angular/understanding-angular-modules-41pb</guid>
      <description>&lt;p&gt;Today we will understand one of the very important topic in Angular - &lt;strong&gt;Angular Modules&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In simple term a module is a logical block or container that holds something.&lt;/p&gt;

&lt;p&gt;If we need to describe module in terms of Angular we can say its a logical block containing &lt;a href="https://dev.to/anubhab5/understanding-angular-component-2bpa"&gt;components&lt;/a&gt;,&lt;br&gt;
&lt;a href="https://dev.to/this-is-angular/custom-directives-in-angular-2cp5"&gt;custom directives&lt;/a&gt;, &lt;a href="https://dev.to/this-is-angular/creating-custom-pipe-in-angular-2pam"&gt;custom pipes&lt;/a&gt; and services (I will talk in detail very soon).&lt;/p&gt;

&lt;p&gt;Once you create a new Angular project the Angular team provided you with a ready to use module called &lt;code&gt;app.module.ts&lt;/code&gt;. Lets see the different parts of &lt;code&gt;Angular Module&lt;/code&gt; -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { AppComponent } from './app.component';

@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now few key take away -&lt;br&gt;
1️⃣ A module is a simple typescript class. &lt;/p&gt;

&lt;p&gt;2️⃣ The module is decorated with &lt;code&gt;@NgModule&lt;/code&gt; decorator.&lt;/p&gt;

&lt;p&gt;3️⃣ The NgModule decorator is a function that takes an object. This object is also called &lt;strong&gt;metadata object&lt;/strong&gt; (you should remember this term)&lt;/p&gt;

&lt;p&gt;4️⃣ The metadata has information/ details which helps Angular how to compile and launch the application.&lt;/p&gt;

&lt;p&gt;In the above example you can see only 4 options but in total there are 9 options available. So lets see each one of them and their use (few are advanced options which will be taken in details later).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;declarations&lt;/code&gt; - &lt;br&gt;
It is an Array of classes. &lt;br&gt;
Holds list of all the custom directives, pipes and components user has created.&lt;br&gt;
All the items (directive, pipe, component) you added in this list are all part of this module.&lt;br&gt;
&lt;strong&gt;Note --- A Very Important One&lt;/strong&gt;&lt;br&gt;
You Can add a component/ directive/ pipe class in only one module's declaration array. If you try to add in more than one place you will get a compile error.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;imports&lt;/code&gt; - &lt;br&gt;
It is a list of all modules that this current module is dependent on.&lt;br&gt;
In the above example you can see &lt;code&gt;BrowserModule&lt;/code&gt; added. It means the current module is dependent on the BrowserModule to function correctly.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;providers&lt;/code&gt; – &lt;br&gt;
It contains the list of dependency injection providers. (Might be a bit hard to digest at this time so in easy term I can say list of services. I will revisit this part when we talk about services)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;exports&lt;/code&gt; - &lt;br&gt;
List of custom components, directives, pipes that the module exposes/ exports so that the other module can use it.&lt;br&gt;
Now try to relate with import... This module will be exporting and some other module will be importing. So the other module should write the name of this module in that module's import array. Easy right???&lt;/p&gt;

&lt;p&gt;&lt;code&gt;entryComponents&lt;/code&gt; - &lt;br&gt;
It is a list of components that should be compiled when this module is defined. &lt;br&gt;
An Angular app always has at least one entry component, root component- &lt;code&gt;AppComponent&lt;/code&gt; by default.&lt;br&gt;
We will learn about dynamic components later. All dynamic components need to be part of EntryComponent list.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bootstrap&lt;/code&gt; –&lt;br&gt;
List of components that are bootstrapped/ during the start and the listed components will be automatically added to entryComponents.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;schemas&lt;/code&gt; - &lt;br&gt;
List of elements and properties that are neither Angular components or directives (again will talk about it later. It will be discussed in Advanced topic part).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;id&lt;/code&gt; – &lt;br&gt;
The Id used to identify the modules in getModuleFactory. If left undefined, the NgModule will not be registered with getModuleFactory.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;jit&lt;/code&gt; -&lt;br&gt;
When this is present, the module will be ignored by the AOT compiler. (Again will be covered in the advanced part)&lt;/p&gt;

&lt;p&gt;The main use of module comes to logically group similar items and put all the related items together. &lt;/p&gt;

&lt;p&gt;Suppose you have a feature like dashboard. All the related components will be placed under that module.&lt;/p&gt;

&lt;p&gt;Hope you enjoyed reading the post.&lt;br&gt;
Coming up next is &lt;strong&gt;Creating custom module in Angular&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If you enjoyed reading the post please do like comment subscribe&lt;br&gt;
and share with your friends.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cheers&lt;/strong&gt;!!!&lt;br&gt;
&lt;em&gt;Happy Coding&lt;/em&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>module</category>
    </item>
    <item>
      <title>AtlasHackathon: Explore With Us (A Web App using Django, MongoDB Atlas)</title>
      <author>Nayan Das</author>
      <pubDate>Mon, 10 Jan 2022 19:01:10 +0000</pubDate>
      <link>https://dev.to/mrpalindrome/atlashackathon-explore-with-us-a-web-app-using-django-mongodb-atlas-5bj0</link>
      <guid>https://dev.to/mrpalindrome/atlashackathon-explore-with-us-a-web-app-using-django-mongodb-atlas-5bj0</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;Explore With Us is a vacation destination catalog website build with Django, Bootstrap and MongoDB Atlas.&lt;br&gt;
I created this webapp to take part in MongoDB Atlas Hackathon.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#technologies-i-used"&gt;
  &lt;/a&gt;
  Technologies I used:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;HTML, CSS, JavaScript and Bootstrap 4.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Django&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MongoDB Atlas&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;I used MongoDB Atlas to store the database by creating a cluster on  &lt;a href="https://www.mongodb.com/cloud/atlas/register"&gt;MongoDB&lt;/a&gt; &lt;/li&gt;

&lt;li&gt;I used the Atlas search feature to implement a fast, relevance-based full-text search for the destinations that I have in my database.&lt;/li&gt;

&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#how-i-used-atlas-search-feature"&gt;
  &lt;/a&gt;
  How I used Atlas Search feature:
&lt;/h4&gt;

&lt;p&gt;I used MongoDB Atlas search to implement the autocomplete feature in my "Search Destination" Search Bar.&lt;br&gt;
First I made a search index for my collection "main_destination"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xTQdCFmL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ograz5f6ousy32oxa6m5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xTQdCFmL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ograz5f6ousy32oxa6m5.png" alt="All collections in the database Project_data" width="880" height="397"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Search Index I used:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "mappings": {
    "dynamic": false,
    "fields": {
      "name": [
        {
          "foldDiacritics": false,
          "maxGrams": 7,
          "minGrams": 3,
          "tokenization": "edgeGram",
          "type": "autocomplete"
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And then in backend I created Connect.py in main folder to connect with the cluster for searching the index from views.py search action. using pymongo package built for python to connect with MongoDB, as djongo does not support aggregate function.&lt;/p&gt;

&lt;p&gt;So that once the user starts searching particular destination it will suggest them destinations automatically.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fYB6L8UP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9p26cu97lddozwoapa8q.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fYB6L8UP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9p26cu97lddozwoapa8q.gif" alt="Demo Video to Show implementation of Atlas Search" width="680" height="382"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;views.py&amp;gt;search :&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rDAGCZ7E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awyquzi6f1upkkcxa4uz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rDAGCZ7E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awyquzi6f1upkkcxa4uz.png" alt="Search action in veiws.py" width="404" height="537"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is how the function looks like:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;add_result = collection.aggregate(
           [
               {
                   "$search": {
                       "autocomplete": {
                           "query": address,
                           "path": "name",
                           "fuzzy": {
                               "maxEdits": 2
                           }
                        }
                   }
               }
           ]
      )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This function build a pipeline that searches using the address parameter automatically from the collection as defined in MongoDB Atlas search index as I demoed at the top in my demo video.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#how-you-will-see-this-project"&gt;
  &lt;/a&gt;
  How you will see this project
&lt;/h4&gt;
&lt;h5&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  &lt;strong&gt;STEP 1:&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;Fork the project repository and clone it using:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/mr-palindrome/Explore-With-Us.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The Django skeleton is look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LYpDpaYA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3aigepbu37ztwew1hb5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LYpDpaYA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3aigepbu37ztwew1hb5.png" alt="Django Skeleton" width="252" height="704"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  &lt;strong&gt;STEP 2:&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;Install virtualenv then create a virtual environment test:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip3 install virtualenv
virtualenv test
source test/bin/activate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Install all the dependencies using:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip3 install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h5&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  &lt;strong&gt;STEP 3:&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;Create a Django SECRET_KEY using following command in python3 terminal:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3
&amp;gt;&amp;gt;&amp;gt; from django.core.management.utils import get_random_secret_key  
&amp;gt;&amp;gt;&amp;gt; get_random_secret_key()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Create a .env file in explore_with_us folder to store all the environment and secret keys, like Django SECRET_KEY, mongoDB connection string.&lt;/p&gt;

&lt;p&gt;But, for demonstration purpose you don't have to create your own cluster, I have provided my own connection string to access all the data present in my Atlas cluster database(AtlasHackathon&amp;gt;Project_data)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GxnW_xCN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/33u6496w5xufkf63kyiz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GxnW_xCN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/33u6496w5xufkf63kyiz.png" alt='My cluster "AtlasHackathon"' width="880" height="402"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now store the Django SECRET_KEY and my connection string in .env, it will look like:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SECRET_KEY = &amp;lt;django SECRET_KEY&amp;gt;
HOST = mongodb+srv://user_demo:demo123@atlashackathon.nhdkl.mongodb.net/myFirstDatabase?retryWrites=true&amp;amp;w=majority
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h5&gt;
  &lt;a href="#step-4"&gt;
  &lt;/a&gt;
  &lt;strong&gt;STEP 4:&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;Now you can see the website in your localhost:8000 using:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3 manange.py runserver
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;The category is &lt;strong&gt;"Choose Your Own Adventure"&lt;/strong&gt;. It could be "E-Commerce Creation" but this is not an e-commerce store or any product catalog. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#link-to-my-code"&gt;
  &lt;/a&gt;
  Link to my Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mr-palindrome"&gt;
        mr-palindrome
      &lt;/a&gt; / &lt;a href="https://github.com/mr-palindrome/Explore-With-Us"&gt;
        Explore-With-Us
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Explore With Us&lt;/h1&gt;
&lt;h2&gt;
Overview&lt;/h2&gt;
&lt;p&gt;Explore With Us is a vacation destination catalog website build with Django, Bootstrap and MongoDB Atlas
I created this website to take part in MongoDB Atlas Hackathon hosted by &lt;a href="https://dev.to/devteam/announcing-the-mongodb-atlas-hackathon-on-dev-4b6m" rel="nofollow"&gt;DEV.to&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Tech I used:&lt;/h3&gt;
&lt;ul&gt;
    &lt;li&gt;HTML,CSS,JS and Bootstrap 4&lt;/li&gt;
    &lt;li&gt;Django&lt;/li&gt;
    &lt;li&gt;MongoDB Atlas&lt;ul&gt;
&lt;li&gt;I used MongoDB Atlas to store the database by creating a cluster on  [MongoDB](&lt;a href="https://www.mongodb.com/cloud/atlas/register" rel="nofollow"&gt;https://www.mongodb.com/cloud/atlas/register&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;I used the Atlas search feature to implement a fast, relevance-based full-text search for the destinations that I have in my database.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
How I used Atlas Search feature:&lt;/h3&gt;
&lt;p&gt;I used MongoDB Atlas search to implement the autocomplete feature in my "Search Destination" Search Bar
So that users can easily find their suitable destination within few seconds without scrolling
First I made a search index for my collection "main_destination".
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;The Search Index I used:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;
&lt;pre&gt;&lt;code&gt;{
  "mappings": {
    "dynamic": false
    "fields": {
      "name": [
        {
          "foldDiacritics": false,
          "maxGrams": 7,
          "minGrams": 3,
          "tokenization":&lt;/code&gt;&lt;/pre&gt;…&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mr-palindrome/Explore-With-Us"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;This was my first time using MongoDB as the database for a website which was a really great experience of using NoSQL specially MongoDB Atlas, I'm also planning to use it in my future projects.&lt;br&gt;
I learned about &lt;a href="https://pymongo.readthedocs.io/en/stable/"&gt;pymongo package&lt;/a&gt; and &lt;a href="https://www.djongomapper.com/"&gt;djongo&lt;/a&gt; availabe for python. I took help from &lt;a href="https://www.mongodb.com/compatibility/mongodb-and-django"&gt;How to Use Django with MongoDB&lt;/a&gt; document.&lt;br&gt;
Initially I started researching about Atlas search and how to use them using the &lt;a href="https://docs.atlas.mongodb.com/atlas-search/"&gt;Atlas Search Docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And another resource that help me to build my frontend was &lt;a href="https://getbootstrap.com/docs/4.0/getting-started/introduction/"&gt;Bootstrap 4&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>atlashackathon</category>
      <category>django</category>
      <category>mongodb</category>
    </item>
  </channel>
</rss>
