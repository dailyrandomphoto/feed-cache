<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to make instagram clone using HTML, CSS. Fully responsive.</title>
      <author>Modern Web</author>
      <pubDate>Mon, 23 Aug 2021 14:04:51 +0000</pubDate>
      <link>https://dev.to/kunaal438/how-to-make-instagram-clone-using-html-css-fully-responsive-49co</link>
      <guid>https://dev.to/kunaal438/how-to-make-instagram-clone-using-html-css-fully-responsive-49co</guid>
      <description>&lt;p&gt;Hello, Today we'll see how to instagram UI clone using HTML, css. No library. Our clone looks very similar to instagram and has post element. With status, and recommendation section.&lt;/p&gt;

&lt;p&gt;To see demo or you want coding tutorial. You can watch the tutorial below.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video Tutorial
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/f9fqiNM30ik"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I appreciate if you can support me by subscribing my youtube channel. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, without wasting more time let's see how to code this.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h1&gt;

&lt;p&gt;So to start, we have two files, &lt;code&gt;index.html&lt;/code&gt; and &lt;code&gt;style.css&lt;/code&gt;. And an image folder contains all icons and post images. You can download image folder from &lt;a href="https://drive.google.com/drive/folders/1ePPSYC_SUS19gJq4fFQhdtwP_pOugbAy?usp=sharing"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So let's start writing code. Let's make navbar first.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#navbar"&gt;
  &lt;/a&gt;
  Navbar
&lt;/h3&gt;

&lt;p&gt;Start with writing basic HTML structure. And link &lt;code&gt;style.css&lt;/code&gt;. After that make navbar like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"navbar"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/logo.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"brand-img"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"search-box"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"search"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav-items"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/home.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/messenger.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/add.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/explore.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/like.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon user-profile"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add styles to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&amp;amp;display=swap')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fafafa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'roboto'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.navbar&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#dfdfdf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.nav-wrapper&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1000px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-between&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.brand-img&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.search-box&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fafafa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#dfdfdf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.search-box&lt;/span&gt;&lt;span class="nd"&gt;::placeholder&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.nav-items&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;22px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.icon&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.user-profile&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;22px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(img/profile-pic.png)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5y8U-IlA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4b3dcnoz67vz3vgon5vv.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5y8U-IlA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4b3dcnoz67vz3vgon5vv.PNG" alt="Capture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's make status section. For that code HTML structure like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"main"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"left-col"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"status-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"status-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 1.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;user_name_1&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"status-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 2.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;user_name_2&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"status-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 3.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;user_name_3&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                // +5 more status card elements.
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.main&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.wrapper&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1000px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60%&lt;/span&gt; &lt;span class="m"&gt;40%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.left-col&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.status-wrapper&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;120px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#dfdfdf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow-x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.status-wrapper&lt;/span&gt;&lt;span class="nd"&gt;::-webkit-scrollbar&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.status-card&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile-pic&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;45deg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;230&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;128&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;80%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile-pic&lt;/span&gt; &lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;object-fit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.username&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Avjm0v2R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xiulk5wieg2od9rs8emt.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Avjm0v2R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xiulk5wieg2od9rs8emt.PNG" alt="Capture2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now make posts inside &lt;code&gt;left-col&lt;/code&gt; element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;section class="main"&amp;gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"left-col"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            // status wrappers

            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"info"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"user"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 1.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;modern_web_channel&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/option.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"options"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 1.png"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post-image"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post-content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"reaction-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/like.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/comment.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/send.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/save.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"save icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"likes"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;1,012 likes&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"description"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;username &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt; Lorem ipsum dolor sit amet consectetur, adipisicing elit. Pariatur tenetur veritatis placeat, molestiae impedit aut provident eum quo natus molestias?&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post-time"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;2 minutes ago&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"comment-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/smile.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"comment-box"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Add a comment"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"comment-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;post&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"info"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"user"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 2.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;modern_web_channel&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/option.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"options"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 2.png"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post-image"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post-content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"reaction-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/like.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/comment.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/send.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/save.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"save icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"likes"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;1,012 likes&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"description"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;username &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt; Lorem ipsum dolor sit amet consectetur, adipisicing elit. Pariatur tenetur veritatis placeat, molestiae impedit aut provident eum quo natus molestias?&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post-time"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;2 minutes ago&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"comment-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/smile.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"comment-box"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Add a comment"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"comment-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;post&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            // +5 more post elements
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.post&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#dfdfdf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.info&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-between&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.info&lt;/span&gt; &lt;span class="nc"&gt;.username&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.info&lt;/span&gt; &lt;span class="nc"&gt;.options&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.info&lt;/span&gt; &lt;span class="nc"&gt;.user&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.info&lt;/span&gt; &lt;span class="nc"&gt;.profile-pic&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.info&lt;/span&gt; &lt;span class="nc"&gt;.profile-pic&lt;/span&gt; &lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.post-image&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;object-fit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.post-content&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.likes&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.description&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.description&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.post-time&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.comment-wrapper&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#dfdfdf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-between&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.comment-wrapper&lt;/span&gt; &lt;span class="nc"&gt;.icon&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.comment-box&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.comment-btn&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.action-btn&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;162&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.reaction-wrapper&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.reaction-wrapper&lt;/span&gt; &lt;span class="nc"&gt;.icon&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.reaction-wrapper&lt;/span&gt; &lt;span class="nc"&gt;.icon.save&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;You can see &lt;code&gt;action-btn&lt;/code&gt; on the style. Don't worry we'll make that next.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0fdesfMJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cds2zbpzsqqfrr1iul8o.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0fdesfMJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cds2zbpzsqqfrr1iul8o.PNG" alt="Capture3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now last last thing we want to make recommendations.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"main"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 
        // left col element
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"right-col"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/profile-pic.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;modern_web_channel&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sub-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;kunaal kumar&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"action-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;switch&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"suggestion-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Suggestions for you&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 9.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;modern_web_channel&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sub-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;followed bu user&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"action-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;follow&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 10.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;modern_web_channel&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sub-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;followed bu user&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"action-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;follow&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 11.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;modern_web_channel&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sub-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;followed bu user&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"action-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;follow&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 12.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;modern_web_channel&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sub-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;followed bu user&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"action-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;follow&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 13.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;modern_web_channel&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sub-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;followed bu user&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"action-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;follow&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.right-col&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile-card&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fit-content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile-card&lt;/span&gt; &lt;span class="nc"&gt;.profile-pic&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile-card&lt;/span&gt;&lt;span class="nd"&gt;:first-child&lt;/span&gt; &lt;span class="nc"&gt;.profile-pic&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile-card&lt;/span&gt; &lt;span class="nc"&gt;.profile-pic&lt;/span&gt; &lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile-card&lt;/span&gt; &lt;span class="nc"&gt;.username&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.sub-text&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.action-btn&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;700&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.suggestion-text&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;700&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1100px&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nc"&gt;.right-col&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.search-box&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.nav-wrapper&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="nc"&gt;.wrapper&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;90%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.wrapper&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nc"&gt;.nav-items&lt;/span&gt; &lt;span class="nc"&gt;.icon&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.post-image&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#final-output"&gt;
  &lt;/a&gt;
  Final Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7M9GwxEO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xavdbzb40k2xvr42wy57.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7M9GwxEO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xavdbzb40k2xvr42wy57.PNG" alt="Capture4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So that's it. I hope you understood each and everything. If you have doubt or I missed something let me know in the comments.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tutorials-you-may-find-useful"&gt;
  &lt;/a&gt;
  Tutorials you may find Useful
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/css-the-best-css-effects-of-all-time-most-underrated-web-ux-2chj"&gt;Best CSS Effect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/4UZXco8rZSE"&gt;Music Player App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/ZeY9RicS2js"&gt;Disney+ Clone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/fOKgHld96mU"&gt;Youtube API - Youtube Clone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/FoD33gwhu00"&gt;TMDB - Netflix Clone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/MCJPHmh_8aQ"&gt;Responsive Portfolio with contact form&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/AWHGQfzfHxI"&gt;Fully working Blogging website with backend&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I really appreciate if you can subscribe my youtube channel. I create awesome web contents.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/c/modern_web?sub_confirmation=1"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5gs5zBA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jeitpawvax07cx7r9yoa.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks For reading.  &lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Java Community Starts to Find More Common Ground</title>
      <author>Otmane Riad</author>
      <pubDate>Mon, 23 Aug 2021 14:02:49 +0000</pubDate>
      <link>https://dev.to/nexteventideas/java-community-starts-to-find-more-common-ground-h76</link>
      <guid>https://dev.to/nexteventideas/java-community-starts-to-find-more-common-ground-h76</guid>
      <description>&lt;p&gt;The Java community appears to be rallying around efforts to bridge some of the rifts that have emerged in recent years while at the same time trying to encourage developers to adopt the latest version of the venerable programming language.&lt;/p&gt;

&lt;p&gt;The Eclipse Foundation has made available the 2021-06 release of the open-source Eclipse integrated development environment (IDE), which among other capabilities, adds support for Java 16. The IDE for Java developers also supports the Mac AArch64 instruction set used in Apple M1-based systems, along with support for more mundane innovations such as additional cleanup tools.&lt;/p&gt;

&lt;p&gt;At the same time, a working group has been created to promote the Eclipse IDE brand and its value in the marketplace. Founding members include Bosch, EclipseSource, IBM, Kichwa Coders, Renesas, SAP, VMware, and Yatta Solutions. &lt;/p&gt;

&lt;p&gt;Microsoft, meanwhile, has become a strategic member of the Eclipse Foundation, while IBM has launched IBM Semeru Runtimes to provide developers with class libraries that can be deployed either on OpenJDK or the Eclipse OpenJ9 Java Virtual Machine. IBM contributed its J9 Java Virtual Machine to the Eclipse Foundation back in 2016 to make available a faster Java runtime. OpenJDK is an open-source edition of Java Platform, Standard Edition that IBM has also been supporting since 2010. &lt;/p&gt;

&lt;p&gt;OpenJDK Java&lt;br&gt;
IBM Semeru Runtimes will be available in two editions with different licenses. The IBM Semeru Runtime Open Edition has an open-source license, while IBM Semeru Runtime Certified Edition has an IBM license. “There are still enterprises that want a more traditional support license,” says Tom Moore, vice president for open technology at IBM.&lt;/p&gt;

&lt;p&gt;Both of the IBM Semeru Runtimes pass the Eclipse AQAvit quality assurance test suite to provide a stable and supportable engine that can run any kind of Java application. The IBM Semeru Runtime Certified Edition is has also certified by the technology compatibility kit (TCK) that is used to certify Java runtimes. The Eclipse Adoptium project was recently formed to created pre-built binaries of OpenJDK.&lt;/p&gt;

&lt;p&gt;Platforms such as IBM WebSphere Liberty and IBM WebSphere Application Server will going forward support IBM Semeru Runtimes, says Moore.&lt;/p&gt;

&lt;p&gt;All this peace, love, and understanding is arriving at a time when rival programming languages have been gaining adherents. Java may still be the most widely employed programming language for building enterprise applications, but there is now a fair amount of interest in not just multiple JavaScript frameworks but also Go and Rust. The vendors that have contributed so much to Java over the years appear to be starting to realize that internecine squabbles don’t necessarily encourage new developers to embrace a programming language that has been around in one form or another since 1995.&lt;/p&gt;

&lt;p&gt;Hopefully, the rate at which arguments over various types of Java virtual machines (JVMs) can also soon be put to rest. As important as performance might be, there’s simply not enough differentiated value at that level of the proverbial stack. None of this means Java is by any means obsolete. It just means the tenor of the conversation needs to shift to what types of great new applications can be built using the latest and greatest versions of a programming language that before too long with be celebrating its 30th birthday.&lt;/p&gt;

</description>
      <category>java</category>
      <category>programming</category>
    </item>
    <item>
      <title>Top 9 observability tools in 2021 perfect for microservices</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Mon, 23 Aug 2021 14:02:10 +0000</pubDate>
      <link>https://dev.to/signoz/top-9-observability-tools-in-2021-perfect-for-microservices-1keg</link>
      <guid>https://dev.to/signoz/top-9-observability-tools-in-2021-perfect-for-microservices-1keg</guid>
      <description>&lt;p&gt;In microservices architecture, observability tools enable you to create central dashboards to gauge the health of your distributed systems. Let's explore some top observability tools which can help you in meeting the increasing demands of today's users.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/SigNoz/signoz"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---bkYFgEJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3iokwnsjpkiad1dh51y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In today's digital economy, distributed architectures have become the norm. Organizations are also opting for polyglot microservices to boost developer productivity. But how do you manage the operational challenges of such systems?&lt;br&gt;
Customer experience is the key to the success of tech companies of any size, be it startups, mid or large-level enterprises. You need to proactively solve for things like availability and performance of your applications in production.&lt;/p&gt;

&lt;p&gt;And that's where observability comes into the picture. A robust observability framework is now critical for maintaining your systems in fine health. Observability is powered by telemetry data - a combination of logs, metrics, and traces.&lt;/p&gt;

&lt;p&gt;A good observability tool has many components:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;It should enable you to generate, sample, process, and emit telemetry data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It should have a good storage system for fast retrieval and long-term retention.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It should have a good visualization layer for your teams to consume and take action.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this article, let's explore the top 9 observability tools in 2021 which can be perfect for your microservice application.&lt;/p&gt;

&lt;p&gt;List of Top 9 observability tools in 2021&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#signoz"&gt;SigNoz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#instana"&gt;Instana&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dynatrace"&gt;Dynatrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#grafana-labs"&gt;Grafana Labs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#honeycomb"&gt;Honeycomb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lightstep"&gt;Lightstep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#new-relic"&gt;New Relic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#datadog"&gt;Datadog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#splunk"&gt;Splunk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#top-observability-tools-in-2021"&gt;
  &lt;/a&gt;
  Top observability tools in 2021
&lt;/h2&gt;

&lt;p&gt;Now let's explore the top observability tools in 2021.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#signoz"&gt;
  &lt;/a&gt;
  SigNoz
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; is a full-stack open-source APM and observability tool. It captures both metrics and traces with log management currently in the product roadmap. One of the advantages of SigNoz is that it is open-source, so you are not locked in with a SaaS vendor. It can also be hosted within your infra. As such, you don't need to send your data to any third party.&lt;/p&gt;

&lt;p&gt;SigNoz enables a full-stack observability stack for your microservice application. Let's see what does a full-stack observability tool entails:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Generation of telemetry data(logs, metrics &amp;amp; traces)&lt;/li&gt;
&lt;li&gt;A storage backend to store the telemetry data, which is often huge&lt;/li&gt;
&lt;li&gt;A visualization layer for your engineering teams to consume and take actions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SigNoz uses OpenTelemetry - a vendor-agnostic instrumentation library for generating telemetry data. OpenTelemetry is a project under Cloud Native Computing Foundation and is becoming the industry standard for creating portable telemetry data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9rxPgdV_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9mq81tiwjspbh43wg885.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9rxPgdV_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9mq81tiwjspbh43wg885.png" alt="SigNoz UI showing RED metrics"&gt;&lt;/a&gt;SigNoz Dashboard with visualization of the popular RED metrics for your application (Number of requests, rate of error &amp;amp; duration)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eUouI2yO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1h4e36q2afjkywkdgn81.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eUouI2yO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1h4e36q2afjkywkdgn81.png" alt="Flamegraphs &amp;amp; gantt charts on SigNoz dashboard"&gt;&lt;/a&gt;SigNoz also has Flamegraphs and Gantt charts to visualize distributed tracing for your microservice application&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#instana"&gt;
  &lt;/a&gt;
  Instana
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.instana.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Instana&lt;/b&gt;&lt;/a&gt; is enterprise observability and automated application monitoring tool. It uses an agent to discover and monitor components. This agent needs to be installed on every host that is to be monitored.&lt;/p&gt;

&lt;p&gt;The agents deploy sensors crafted to capture data from different technologies. Sensors automatically collect configuration, changes, metrics, and events.&lt;/p&gt;

&lt;p&gt;Instana charges $75 per host/per month if billed annually. It also supports open standards like Prometheus, StatsD, OpenTracing, and Opencensus.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fEEgjeVW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2atanwqzhac37do56oc6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fEEgjeVW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2atanwqzhac37do56oc6.png" alt="Instana dashboard"&gt;&lt;/a&gt;Instana Dashboard. (Source: Instana Docs)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dynatrace"&gt;
  &lt;/a&gt;
  Dynatrace
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.dynatrace.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Dynatrace&lt;/b&gt;&lt;/a&gt; is an extensive SaaS enterprise tool targeting a broad spectrum of monitoring needs of large-scale enterprises. It provides an AI engine called Davis to automate things like root cause analysis and anomaly detection.&lt;/p&gt;

&lt;p&gt;Dynatrace also provides a different solution for infrastructure monitoring, application security, and cloud automation. The pricing depends on the product you want to opt for.&lt;/p&gt;

&lt;p&gt;Full-stack monitoring, the product aimed to provide observability for apps, is priced at $69 per month for 8 GB per host if billed annually.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ziqzLXBm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/av89iw0hb2h6jnx9ikxe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ziqzLXBm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/av89iw0hb2h6jnx9ikxe.png" alt="Dynatrace dashboard"&gt;&lt;/a&gt;Dynatrace dashboard (Source: Dynatrace website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#grafana-labs"&gt;
  &lt;/a&gt;
  Grafana Labs
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://grafana.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Grafana&lt;/b&gt;&lt;/a&gt; is popular open-source analytics and interactive visualization web layer. It supports many different storage backends for time-series data. It can be connected to data sources like Graphite, InfluxDB, ElasticSearch, Prometheus, and many more. For traces, it supports Jaeger, Tempo, X-Ray, and Zipkin data sources.&lt;/p&gt;

&lt;p&gt;Grafana offers plugins, dashboards, alerts, and different user-level access for governance as an observability tool. In addition, it provides two versions of services:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Grafana cloud - You can send your data to Grafana cloud dashboards. It provides solutions such as Grafana Cloud Logs, Grafana Cloud Metrics, and Grafana Cloud Traces.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Grafana Enterprise stack - It provides support for metrics and logs with Grafana installed within your infrastructure. It also comes with expert support.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pJhCyIGF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo34szgvqki55shr3hib.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pJhCyIGF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo34szgvqki55shr3hib.png" alt="Grafana dashboard"&gt;&lt;/a&gt;Grafana dashboard (Source: Grafana website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#honeycomb"&gt;
  &lt;/a&gt;
  Honeycomb
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.honeycomb.io/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Honeycomb&lt;/b&gt;&lt;/a&gt; is an observability tool that aims to provide the visibility needed by engineering teams to troubleshoot problems in distributed systems. It is a full-stack cloud-based observability tool with support for events, logs, and traces.&lt;/p&gt;

&lt;p&gt;If your code is not already instrumented, Honeycomb provides an automatic instrumentation agent called Honeycomb beelines, which can instrument your code. It also supports OpenTelemetry for generating instrumentation data.&lt;/p&gt;

&lt;p&gt;Honeycomb offers a free tier of service, and its pro tier starts at $100. The pricing is based on data retention and event volume captured.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cT8HNLhM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uz29hkzpcck2osvlcgqt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cT8HNLhM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uz29hkzpcck2osvlcgqt.png" alt="Honeycomb dashboard"&gt;&lt;/a&gt;Snapshot of Honeycomb dashboard (Source: Honeycomb documentation)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lightstep"&gt;
  &lt;/a&gt;
  Lightstep
&lt;/h3&gt;

&lt;p&gt;As an observability tool, &lt;a href="https://lightstep.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Lightstep&lt;/b&gt;&lt;/a&gt; automatically detects changes to your application, infrastructure, and user experience. It can then highlight the specific causes for the changes.&lt;/p&gt;

&lt;p&gt;For instrumentation, Lightstep uses OpenTelemetry to generate and send telemetry data to what it calls Lightstep Microsatellites. The microsatellites collect and forward the data to Lightstep SaaS for analysis. Lightstep also has its own time-series database to store the telemetry data.&lt;/p&gt;

&lt;p&gt;The observability platform provided by Lightstep analyzes the data, builds traces, and creates service diagrams to monitor any change in performance.&lt;/p&gt;

&lt;p&gt;Lightstep offers three plans of service:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Community edition - Free version to help you get started.&lt;/li&gt;
&lt;li&gt;Teams edition - Starts at $100 per month and is based on the number of monthly active services.&lt;/li&gt;
&lt;li&gt;Enterprise edition - Offered to large enterprises with discounts based on volume.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XRJS-Wqc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8sco04yy3awgeysyufad.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XRJS-Wqc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8sco04yy3awgeysyufad.png" alt="Lighstep dashboard"&gt;&lt;/a&gt;Lightstep dashboard (Source: Lightstep sandbox environment)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#new-relic"&gt;
  &lt;/a&gt;
  New Relic
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://newrelic.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;New Relic&lt;/b&gt;&lt;/a&gt; is one of the oldest companies in the observability domain. Its observability tool enables you to visualize, analyze and troubleshoot your software stack in one platform. It also supports auto-instrumentation for eight popular programming languages.&lt;/p&gt;

&lt;p&gt;New Relic can connect your application performance with your infrastructure health to provide you better insights for quick troubleshooting.&lt;/p&gt;

&lt;p&gt;Standard offering includes plans for teams up to 5 full users. Their pricing depends on the amount of data ingested with 100 GB free data ingest and $0.25 per extra GB.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NGcHoHLR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmjgvcp9pbze5tdonwu5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NGcHoHLR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmjgvcp9pbze5tdonwu5.png" alt="New Relic dashboard"&gt;&lt;/a&gt;New Relic dashboard (Source: New Relic website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#datadog"&gt;
  &lt;/a&gt;
  DataDog
&lt;/h3&gt;

&lt;p&gt;With the &lt;a href="https://www.datadoghq.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;DataDog&lt;/b&gt;&lt;/a&gt; observability tool, you can do a range of things like infrastructure monitoring, log management, application performance monitoring, and security monitoring. For providing full visibility into distributed applications, DataDog allows you to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Trace requests from end to end across distributed systems&lt;/li&gt;
&lt;li&gt;Charts of latency percentiles(p95, p99, etc.)&lt;/li&gt;
&lt;li&gt;Instrumentation with open-source libraries&lt;/li&gt;
&lt;li&gt;seamless navigation between logs, metrics, and traces&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The pricing depends on the product you opt for. For example, the APM solution provides end-to-end distributed tracing, starts at $31 per host per month if billed annually.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V6hZuVen--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a8udb6kohjs9cbu132wl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V6hZuVen--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a8udb6kohjs9cbu132wl.png" alt="DataDog dashboard"&gt;&lt;/a&gt;DataDog dashboard (Source: DataDog website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#splunk"&gt;
  &lt;/a&gt;
  Splunk
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.splunk.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Splunk&lt;/b&gt;&lt;/a&gt; is a comprehensive observability tool that offers multiple products, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;infrastructure monitoring&lt;/li&gt;
&lt;li&gt;Application performance monitoring&lt;/li&gt;
&lt;li&gt;Log Observer&lt;/li&gt;
&lt;li&gt;Real User monitoring&lt;/li&gt;
&lt;li&gt;Synthetic monitoring, and&lt;/li&gt;
&lt;li&gt;Incident response management&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Splunk allows you to collect all traces instead of a sample set. It also provides service maps to offer DevOps teams visibility into interactions between different services, dependencies, and performance.&lt;/p&gt;

&lt;p&gt;Splunk's observability Cloud for Enterprise editions starts at $95 per host per month if billed annually.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w-8x85oW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8sot0hz2274tix0u1trm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w-8x85oW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8sot0hz2274tix0u1trm.png" alt="Splunk dashboard"&gt;&lt;/a&gt;DataDog dashboard (Source: DataDog website)&amp;lt;/figcaption&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-choose-the-right-observability-tool"&gt;
  &lt;/a&gt;
  How to choose the right observability tool?
&lt;/h2&gt;

&lt;p&gt;For applications with microservices architecture, observability tools have become critical to meet operational challenges at scale. Without observability, it is almost impossible for your engineering teams to troubleshoot bugs and assess the performance of your applications. Hence choosing the right observability tool for your application is important. A few questions to ask yourself before selecting an observability tool are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Are there any privacy laws that you need to take care of while sharing user's data with a third-party tool?&lt;/li&gt;
&lt;li&gt;Does the pricing suit your budget?&lt;/li&gt;
&lt;li&gt;How easy is it to get started with things like instrumentation?&lt;/li&gt;
&lt;li&gt;How much data do you want to retain?&lt;/li&gt;
&lt;li&gt;Does the tool provide seamless integration between metrics, logs, and traces?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An open-source tool like &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt;, can be your best option in today's privacy-driven digital economy. Moreover, SigNoz uses open-source standards for instrumentation, and its code can be assessed for quality from its &lt;a href="https://github.com/SigNoz/signoz"&gt;GitHub repo&lt;/a&gt;. Finally, as the tool is open-sourced, you get the support of the community while having access to out-of-box features like a SaaS vendor.&lt;/p&gt;

&lt;p&gt;Check out SigNoz GitHub repo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/SigNoz/signoz"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---bkYFgEJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3iokwnsjpkiad1dh51y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>monitoring</category>
      <category>observability</category>
      <category>docker</category>
    </item>
    <item>
      <title>Design to Duty: The Accounting and Reporting Systems at Adyen</title>
      <author>Willem Pino</author>
      <pubDate>Mon, 23 Aug 2021 13:51:43 +0000</pubDate>
      <link>https://dev.to/adyen/design-to-duty-the-accounting-and-reporting-systems-at-adyen-3fae</link>
      <guid>https://dev.to/adyen/design-to-duty-the-accounting-and-reporting-systems-at-adyen-3fae</guid>
      <description>&lt;p&gt;In this blog, we will have a closer look at how we make decisions around our accounting system and how it evolved as a consequence. We will do the same for our reporting and analysis frameworks.&lt;/p&gt;

&lt;p&gt;This is part two of a series. So, if you have not done so already, it might be nice to start with the &lt;a href="https://www.adyen.com/blog/design-to-duty-adyen-architecture"&gt;first blog&lt;/a&gt;. In that one, we talked about what Adyen does at a high level, how we think about choosing between home-grown and open-source software, and how this shaped our edge services.&lt;/p&gt;

&lt;p&gt;The themes that were laid out in &lt;a href="https://www.adyen.com/blog/design-to-duty-adyen-architecture"&gt;part one&lt;/a&gt; will return and be referenced in this blog. If you didn’t read the first one, it might be that some context is missing.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#accounting-system"&gt;
  &lt;/a&gt;
  Accounting system
&lt;/h1&gt;

&lt;p&gt;Once we have processed a payment, the next step is accounting for it. This is needed because after processing transactions, we receive the money from our partners and we need to determine how much to settle to each merchant. Of course, we also need it for reporting.&lt;/p&gt;

&lt;p&gt;For every payment that enters the system, we do double-entry bookkeeping. The way we ensure that we do so correctly is quite unique to Adyen. The only way to add new records to the accounting system is by means of templates. A template in this context is a recipe that takes certain amounts and accounts as input and converts them into specific journals that can be inserted into the ledger.&lt;/p&gt;

&lt;p&gt;These templates are mathematically verified. To achieve this, we represent the amounts that serve as inputs by logical entities and prove that every combination of amounts will result in a net sum of 0. This verification is fully automated and runs on every change to the templates.&lt;/p&gt;

&lt;p&gt;All of this means we can guarantee that if at any time, we sum up all the records in the accounting system, the result will always be 0. Combine this with the aforementioned double-entry bookkeeping, and it means for every euro that ever went through Adyen, we know exactly where it came from and where it went.&lt;/p&gt;

&lt;p&gt;We leverage this same system of accounting for our banking platform.&lt;/p&gt;

&lt;p&gt;It might be superfluous to mention it, but our accounting framework is also written in-house. Here the choice was evident, it is as core as can be to our business, and nothing in the open-source landscape came close to what we wanted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#underlying-database"&gt;
  &lt;/a&gt;
  Underlying Database
&lt;/h2&gt;

&lt;p&gt;Having all these nice things does come with some cost. Over the lifetime of a payment transaction, about 50 rows have to be inserted into the accounting database. This means that per second, just for the accounting system, the amount of inserts is an order of magnitude higher than the hundreds of transactions we process every second. Some time ago these thousands of inserts a second started to cause issues for our PostgreSQL database. &lt;a href="https://www.adyen.com/blog/updating-a-50-terabyte-postgresql-database"&gt;This blog&lt;/a&gt; has more information on maintaining such large PostgreSQL databases.&lt;/p&gt;

&lt;p&gt;We had already split a reporting database from our accounting database to minimize reads (more on this below), but at some point, even with mainly inserts and updates, the database didn’t scale anymore. This is when we decided to shard our accounting database into several accounting clusters.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IslpLLFM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/0%2ArTo_S_8bcqd66hRP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IslpLLFM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/0%2ArTo_S_8bcqd66hRP.png" alt="accounting DB"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sharding-strategy"&gt;
  &lt;/a&gt;
  Sharding strategy
&lt;/h2&gt;

&lt;p&gt;Now we have several accounting databases, or clusters, processing side-by-side. We considered incorporating domain knowledge into the sharding strategy, but, for several reasons, eventually decided to go for a simple round-robin strategy with some parameters we can adjust.&lt;/p&gt;

&lt;p&gt;First of all, every rule we considered would bring its own problems. For example, if we would put each processing merchant in one database, you still need to go to every shard when you need aggregate data to send to our payment method partners. The same holds the other way around. If you split by payment method you still need to go to every shard when you need aggregate data on the merchant level.&lt;/p&gt;

&lt;p&gt;Incorporating business logic would also complicate the routing, a round-robin strategy is very simple and robust and you do not have to think about balancing your shards. Finally, you lose a lot of flexibility. At the moment we can just add a new cluster whenever we need more capacity or remove one from the routing when we see strange behavior we want to investigate.&lt;/p&gt;

&lt;p&gt;In the end, we decided the benefits domain knowledge routing would offer were not worth the loss of flexibility and increased complexity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#migration"&gt;
  &lt;/a&gt;
  Migration
&lt;/h2&gt;

&lt;p&gt;The migration to a sharded accounting database was quite painful. This was due to two things. First of all, the accounting logic in the code, pretty heavily embedded in any payments processor, working on the assumption there was just one accounting database. This had to be rewritten.&lt;/p&gt;

&lt;p&gt;As an example, consider a payout to a merchant. This needs to come from one account. However, because you processed these transactions on different clusters, the money needs to be transferred from one cluster to the other in order to end up in the same account. To do this without compromising on the strict correctness requirement was quite difficult. In the end, we created several jobs and processes that use back and forth messages between the clusters to keep everything aligned.&lt;/p&gt;

&lt;p&gt;The second complicating factor was that, if we received reports on processed transactions from our partners, we needed to match them to transactions in different clusters. Instead of parsing a file and matching it directly to the transactions, we introduced a two-step framework that would first parse a file and then split it into the relevant parts for each cluster. The second step was to match the relevant transactions within the clusters.&lt;/p&gt;

&lt;p&gt;Whereas the first problem was solvable in a generic way, the reconciliation needs to happen for a lot of different very custom integrations so this was a real team effort.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#future-challenges"&gt;
  &lt;/a&gt;
  Future challenges
&lt;/h2&gt;

&lt;p&gt;From a scaling perspective, the risk that this approach introduces is that any process that depends on all accounting databases being up to date or available becomes a potential liability.&lt;/p&gt;

&lt;p&gt;Historically, processes such as our back office (admin area) would interface directly with the accounting databases to display data or to make corrections. If one of the accounting clusters is not reachable this cannot be done anymore.&lt;/p&gt;

&lt;p&gt;This is not a problem when there are only a few clusters, but as the number of accounting clusters grows, the chance of any of them being unavailable, planned or unplanned, grows with it. This means that instead of interacting with it directly, we need to do so with an intermediate that will mitigate this risk.&lt;/p&gt;

&lt;p&gt;Also, rebalancing the clusters is something that is essential for traditional sharding (inside one database) but has not been implemented yet for this setup. If we add a new cluster, it will be empty while the old clusters keep growing. How do we avoid the original clusters becoming too big?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#connecting-the-edge-services-with-the-accounting-system"&gt;
  &lt;/a&gt;
  Connecting the edge services with the accounting system
&lt;/h1&gt;

&lt;p&gt;Talking so casually about the downtime of our accounting clusters hints at different priorities in this part of the system compared to our edge systems discussed earlier. Whereas for the latter the priority was uptime, for the accounting systems we don’t mind if they are down for a little bit as long as we can guarantee their reliability and consistency. For me, it was interesting to see how these systems are tied together.&lt;/p&gt;

&lt;p&gt;In a very naive solution, these conflicting principles cause a conflict. The PAL would forward the payment to the accounting system to save it. If something goes wrong, do you still save the payments with a risk of inconsistent data, compromising on the consistency priority of the accounting system? Or do you stop processing, compromising on the uptime priority of the frontend? We went for a failsafe in between.&lt;/p&gt;

&lt;p&gt;The Payment Processing Layer (or PAL, see part one) saves the payment in a local database and a separate process picks it up when possible. This process will run behind if we have doubt about whether we can guarantee consistency in the accounting or if an accounting database is not available but that will not impact the availability of the PAL itself. An added benefit of this setup is that if the PAL crashes, no payments are lost because the queue is stored in a database and not in memory.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t4K1kKUe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/0%2A9Y9apDUCsAkJiMMt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t4K1kKUe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/0%2A9Y9apDUCsAkJiMMt.png" alt="Queue processor"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.adyen.com/blog/The-Adyen-way-of-engineering--we-design-for-20x"&gt;In another blog of ours&lt;/a&gt;, you can find more info on how this asynchronous queue between the different layers works.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#technology-choices"&gt;
  &lt;/a&gt;
  Technology choices
&lt;/h2&gt;

&lt;p&gt;The large accounting database and the short-lived queue both use a PostgreSQL database. This was again a pragmatic choice. In the beginning, the requirements on the system were not that high, so we went for a one-size-fits-all solution for databases. It might be that better solutions for queueing were available at that time or since, but we felt that it was not worth the additional complexity they would add to our system.&lt;/p&gt;

&lt;p&gt;We have since been pleasantly surprised by how well PostgreSQL has performed for both use cases. At this point, we have dozens of local databases that can be instantiated dynamically at application startup and transactional databases of hundreds of terabytes running on the same technology.&lt;/p&gt;

&lt;p&gt;This shows that specialized solutions that were designed to tackle specific problems that occur at very large scales might not be needed for smaller applications (or even quite large ones) while they often do add a lot of complexity. Of course, this is always a balancing act, because the solution might have nice specialized features and it is comforting to know that it will definitely scale.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reporting"&gt;
  &lt;/a&gt;
  Reporting
&lt;/h1&gt;

&lt;p&gt;Creating separate accounting clusters creates a new challenge. Namely, how do you generate reports for every merchant and payment method every day from all these data sources?&lt;/p&gt;

&lt;p&gt;We did have a reporting database where we saved the relevant data in a denormalized form. Initially created to minimize reads on the accounting database. However, relying on this might work for a while, but eventually, it would be just another bottleneck.&lt;/p&gt;

&lt;p&gt;For this part of the system, the priority was throughput. We decided to stream the data from the clusters and to have specialized processes consume and preprocess the data for specific use cases. This way there are only a limited number of processes that have to read the stream and when the report is generated a lot of the work is already done.&lt;/p&gt;

&lt;p&gt;The reporting tables can be split over as many databases as needed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S6IITZ2F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/0%2AtjrZULUnc1zNeTdU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S6IITZ2F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/0%2AtjrZULUnc1zNeTdU.png" alt="Reporting DB"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At the time a lot of different technologies were considered for this, especially Kafka. Our current processes were under quite some pressure so time was of the essence. We needed a high throughput, low latency streaming framework that could ensure exactly-once processing, even if processes crashed.&lt;/p&gt;

&lt;p&gt;We scoped a lot of open source technologies but none offered the feature set we were looking for. For example, exactly-once delivery was not yet supported by Kafka.&lt;/p&gt;

&lt;p&gt;On the other hand, we had a lot of familiarity with another technology that was close at hand and had proven very reliable. At this point, you might not be surprised to learn that this was PostgreSQL. For the same reasons, we used Java to write the application code on top of it.&lt;/p&gt;

&lt;p&gt;Even though we did have to do some rounds of optimizations and we are missing some features, such as topics, we are happy with our choice. The setup stood the test of time even though traffic increased by an order of magnitude.&lt;/p&gt;

&lt;p&gt;Even though we initially chose to write something ourselves, this is not a definite choice. In fact, there is an ongoing discussion whether this framework will allow us to scale another 20x or whether we should swap it out for an open-source solution such as Kafka. The 20x scaling factor is a rule of thumb we often use internally when designing a solution or determining whether we are still satisfied with it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#analysis"&gt;
  &lt;/a&gt;
  Analysis
&lt;/h1&gt;

&lt;p&gt;For our data analysis setup, we did not build much in-house but chose to adopt industry standards. We run a Spark Hadoop cluster combined with Airflow. Deploying it on our own servers was an effort but now it is running smoothly. There is &lt;a href="https://www.adyen.com/blog/building-our-data-science-platform-with-spark-and-jupyter"&gt;a blog about the initial shift&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Remarkable about the setup is that we still use our custom streaming system to verify all the information is actually consumed and correct.&lt;/p&gt;

&lt;p&gt;With the Spark Hadoop cluster in place, the main struggle was to feed the results back into the synchronous systems. &lt;a href="https://www.adyen.com/blog/predicting-and-monitoring-payment-volumes-with-spark-and-elasticsearch"&gt;Here&lt;/a&gt; we describe how we did this for monitoring. After this worked for that use case, we expanded it into a generic framework that can also score the machine learning models in real-time.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;The focus of this blog was on payments processing but, as mentioned before, the concepts translate almost perfectly to the other business contexts such as the bank. This is because all systems have high availability and latency requirements on the edge services and strong consistency and reliability on the accounting layer. In the reporting and analysis frameworks, we tie all of the systems together.&lt;/p&gt;

&lt;p&gt;This similarity in architecture, together with our conservative tech stack, allows developers to easily switch between teams. They already know the general design and the technologies used, even if the business context is completely different.&lt;/p&gt;

&lt;p&gt;We hope that this blog made both our architecture and the way we arrived at it clearer. Perhaps it will also influence how you evaluate design choices for your own company in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#technical-careers-at-adyen"&gt;
  &lt;/a&gt;
  Technical careers at Adyen
&lt;/h2&gt;

&lt;p&gt;We are on the lookout for talented engineers and technical people to help us build the infrastructure of global commerce!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.adyen.com/careers/vacancies/development"&gt;Check out developer vacancies&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#developer-newsletter"&gt;
  &lt;/a&gt;
  Developer newsletter
&lt;/h2&gt;

&lt;p&gt;Get updated on new blog posts and other developer news.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.adyen.com/newsletter/developers"&gt;Subscribe now&lt;/a&gt;&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>fintech</category>
      <category>adyen</category>
    </item>
    <item>
      <title>Day 10 : links to important things I learnt today</title>
      <author>Gaurav-Shekhawat</author>
      <pubDate>Mon, 23 Aug 2021 13:45:22 +0000</pubDate>
      <link>https://dev.to/gauravshekhawat/day-10-links-to-important-things-i-learnt-today-3bbo</link>
      <guid>https://dev.to/gauravshekhawat/day-10-links-to-important-things-i-learnt-today-3bbo</guid>
      <description>&lt;p&gt;I am summarising everything that I have learnt today. If you also want to go through the same topic, I believe the article links I am providing is one of the best available on the web available for that topic.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DOM tree basics :- &lt;a href="https://javascript.info/dom-nodes#an-example-of-the-dom"&gt;java-script-info&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;The essential guide to javascript Iterators (the for-of loop guide) :- &lt;a href="https://www.javascripttutorial.net/es6/javascript-iterator/"&gt;javascriptutorial.net&lt;/a&gt; 
and &lt;a href="https://www.educative.io/courses/step-up-your-js-a-comprehensive-guide-to-intermediate-javascript/m27Yx11KPMG"&gt;Educative&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;Walking through the DOM :- &lt;a href="https://javascript.info/dom-navigation#the-sibling-question"&gt;javascript-info&lt;/a&gt; . In this article, you may feel some problem at the last with the table properties. Just see the properties being used in the example, ignore others (we will search for them whenever needed, as we know what to search for).&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;Searching element in DOM :- &lt;a href="https://javascript.info/searching-elements-dom"&gt;javascript-info&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;Debugging javascript in dev tools :-  &lt;a href="https://developer.chrome.com/docs/devtools/javascript/"&gt;Google&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>What Programming Books are Developers Reading?</title>
      <author>Otmane Riad</author>
      <pubDate>Mon, 23 Aug 2021 13:34:29 +0000</pubDate>
      <link>https://dev.to/nexteventideas/what-programming-books-are-developers-reading-7fk</link>
      <guid>https://dev.to/nexteventideas/what-programming-books-are-developers-reading-7fk</guid>
      <description>&lt;p&gt;Many programmers and technology professionals continuously educate themselves as technology changes and to expand their knowledge base. Many of today’s top programming languages have been popular for the past ten years (or longer in some cases), so having an understanding of each can be valuable for a developer interested in maintaining their flexibility and employability in the industry.&lt;br&gt;
According to the Tiobe Index, today’s most popular languages include:&lt;/p&gt;

&lt;p&gt;C&lt;br&gt;
Java&lt;br&gt;
Python&lt;br&gt;
C++&lt;br&gt;
C#&lt;br&gt;
Visual Basic&lt;br&gt;
JavaScript&lt;br&gt;
PHP&lt;br&gt;
SQL&lt;br&gt;
Assembly language&lt;/p&gt;

&lt;p&gt;read more: &lt;a href="https://hitechnoloy.ca/what-programming-books-are-developers-reading/"&gt;https://hitechnoloy.ca/what-programming-books-are-developers-reading/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>python</category>
      <category>php</category>
    </item>
    <item>
      <title>Tina Cloud -  a headless CMS backed by Git</title>
      <author>Tomek Poniatowicz</author>
      <pubDate>Mon, 23 Aug 2021 13:04:14 +0000</pubDate>
      <link>https://dev.to/tomekponiat/tina-a-headless-cms-backed-by-git-3j80</link>
      <guid>https://dev.to/tomekponiat/tina-a-headless-cms-backed-by-git-3j80</guid>
      <description>&lt;p&gt;A common problem when trying to convince someone to use Jamstack tools is the learning curve and that’s understandable, not everyone wants to spend time on learning and more importantly not everyone needs to. After all, it's a bit unfair to expect a blogger, content creator or someone who just isn't that much on the dev side of things to jump at the idea of sitting through courses and tutorials and learning to code. Well thankfully there’s a little something that can help with that and it's called Tina.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#realtime-editor"&gt;
  &lt;/a&gt;
  Real-time editor
&lt;/h2&gt;

&lt;p&gt;What is Tina? Well first let’s look at TinaCMS released by Forestry in late 2019. Despite its name it’s actually not a Content Management System. A typical CMS has an attached frontend and looks something like WordPress, where everything you create has to fit its templates. This is great when you’re starting out, but can be a major hindrance as you’re limited in terms of design which makes it hard to stand out. TinaCMS is a Headless CMS, it operates purely on the backend and reaches the frontend through an API which means you’re free to design your website and display your content any way you like. But that’s just the inner workings, the actual features are much more enticing&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Real-time visual editor&lt;/strong&gt;: This is where TinaCMS really shines, it's basically an open source real-time website editor. This approach is perfect for content creators who can simply add or edit content on the fly and see how it looks on the website in real time. Want to add a post on your site or maybe just fix a couple typos in an existing one? It's as simple as logging in, using the editor to do it and clicking save. No coding needed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Storage agnostic&lt;/strong&gt;: It's entirely up to you how you want to store content Google Sheets, Airtable, Github or even another Headless CMS&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Supports&lt;/strong&gt;: React, GraphQL, REST, Gatsby, Next.js Javascript, PHP, Android, iOS, Python, Java Ruby and .Net&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fnrHr7vy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzsgzeroq00a4wjbkdyk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fnrHr7vy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzsgzeroq00a4wjbkdyk.png" alt="Tina CMS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#source-tinaio"&gt;
  &lt;/a&gt;
  Source: &lt;a href="https://tina.io/"&gt;tina.io&lt;/a&gt;
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#into-the-cloud"&gt;
  &lt;/a&gt;
  Into the cloud
&lt;/h2&gt;

&lt;p&gt;TinaCMS started out as a simple React library on GitHub, if you wanted to do something with it you had to have an account there as it handled authentication. That’s not ideal when your focus is reaching content creators and not developers. On the other hand while the website editor was great for content creators it was somewhat lacking for admins who prefer working with a more traditional admin panel. Another problem was storing data as TinaCMS while agnostic didn't have any dedicated solution for that. So Forestry came up with a new tool: &lt;strong&gt;Tina Cloud&lt;/strong&gt;. It combines the TinaCMS content editor with the power of GraphQL. It's still in alpha but you can already see its key features.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Easier access&lt;/strong&gt;: GitHub account no longer needed, now accessible to everyone&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Database-like&lt;/strong&gt;: as mentioned before TinaCMS lets you use another Headless CMS for storage and that’s exactly where Tina Cloud comes in. It provides you with a GraphQL interface for interacting with your content stored in open formats like Markdown and JSON. This basically makes it work like a database which you can query with GraphQL&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Admin dashboard&lt;/strong&gt;: TinaCloud uses the TinaCMS editor but it also provides admins with a dashboard letting them manage different sites and collaborators.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4-qa18Sw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7ageiewi26mfapm9vvv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4-qa18Sw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7ageiewi26mfapm9vvv.png" alt="Tina in Cloud"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#source-tinaio"&gt;
  &lt;/a&gt;
  Source: &lt;a href="https://tina.io/"&gt;tina.io&lt;/a&gt;
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#patience-please"&gt;
  &lt;/a&gt;
  Patience please
&lt;/h2&gt;

&lt;p&gt;As you can see TinaCMS is already a great tool for those working with someone who isn't into coding or if you’re just looking for something that will help you manage your own site or blog. Now with Tina Cloud it's even more functional and useful for diverse teams with admins and content creators and all that despite it all being less than 2 years old. It's definitely something worth keeping an eye on as it's still in development and will definitely get more features down the road.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;A guest blog post for &lt;a href="https://blog.graphqleditor.com/"&gt;GraphQL Editor blog&lt;/a&gt; by Michał Tyszkiewicz&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#speed-up-your-graphql-api-development"&gt;
  &lt;/a&gt;
  Speed up your GraphQL API development
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;GraphQL Editor&lt;/strong&gt; is a supportive tool for both advanced GraphQL users as well as those taking their first steps with GraphQL APIs. Our all-in-one development environment for GraphQL will help you build, manage &amp;amp; deploy your GraphQL API much faster. &lt;strong&gt;&lt;a href="https://graphqleditor.com"&gt;Try GraphQL Editor for free!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>webdev</category>
      <category>graphql</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Welcome to Creative Tim New Visual Identity</title>
      <author>Creative Tim</author>
      <pubDate>Mon, 23 Aug 2021 12:26:14 +0000</pubDate>
      <link>https://dev.to/creativetim_official/welcome-to-creative-tim-new-visual-identity-1iah</link>
      <guid>https://dev.to/creativetim_official/welcome-to-creative-tim-new-visual-identity-1iah</guid>
      <description>&lt;p&gt;Hello Web Design lovers,&lt;/p&gt;

&lt;p&gt;Huge news! Today is a big day for Creative Tim, as we are saying goodbye to the logo that defined our brand identity and work for 8 years. This way, we are happy to welcome the new Creative Tim visual identity that better defines our new vision and evolution.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-new-visual-identity"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why new Visual Identity&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We loved our old logo, and probably you did the same. However, this breakup does not have to be sad. Here we are to explain why we decided to move forward.&lt;/p&gt;

&lt;p&gt;Creative Tim is growing and evolving since we launched our first product, &lt;a href="https://www.creative-tim.com/product/get-shit-done-kit"&gt;Get Shit Done&lt;/a&gt;, which was embraced by more than 60,000 developers and designers worldwide. Now we have over 1.6 million people that use our products each year.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.creative-tim.com/product/get-shit-done-kit"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jfrJOK9V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-1-min.jpg" alt="get shit done"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;&lt;a href="https://www.creative-tim.com/product/get-shit-done-kit"&gt;Get Shit Done Kit&lt;/a&gt;&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;

&lt;p&gt;After 8 years and a closer look at who Creative Tim is and who our brand became, we felt it is time for a change. &lt;br&gt;
In the last years, we've been through many changes, starting from the way we develop our products, the design we implement, the services we offer to a major change in our business strategy that our team is currently hard-working on.&lt;/p&gt;

&lt;p&gt;Therefore, the last months we've worked in collaboration with &lt;a href="https://www.vrln.studio/"&gt;Studio VRLN&lt;/a&gt; on refreshing our logo to express who we are today and to symbolize our future.&lt;/p&gt;

&lt;p&gt;Let's see how it came together.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-old-logo"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The Old Logo&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Our previous logo was created when the company launched. It was distinctive, innocent, "nice" and was to describe the positivity of a young team of web design enthusiasts. Our first logo did a really great job for our beginnings, but we've grown mature, experienced, and the time has come to move on.&lt;/p&gt;

&lt;p&gt;As amusing the old Tim seems, as naive and static in communication it actually is. Even if the team behind Creative Tim smiles and appears laid-back, this is solely because of its expertise and creativity self-awareness. The Creative Tim products have a crisp and clean design, they are easy to use and easy to customize and precisely these attributes should be conveyed in the brand communication.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bz0W1Txd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/black_center.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bz0W1Txd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/black_center.png" alt="old logo"&gt;&lt;/a&gt;&lt;br&gt;
Moreover, the limits of the old logo set out the limits of brand communication. The Creative Tim logo used to be just a logo, without any visual style or font of its own. The apparently easygoing look &amp;amp; feel of the logo failed to meet the needs of our brand which was evolving rapidly and was in need of a real set of communication tools for the products.&lt;/p&gt;

&lt;p&gt;Though everyone loved it, the old logo wasn’t able anymore to adapt to the new rhythm of life. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-new-logo"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The New Logo&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The talented designer Paul Virlan from &lt;a href="https://www.vrln.studio/"&gt;Studio VRLN&lt;/a&gt; was the designer on this project. Let's see Paul's creation stages of our new brand identity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Research Stage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The first thing that drew the designer's attention to the old logo was Tim’s face expression, that particular smile he wanted to keep at all costs. Well, that smile was about to embody all the brand information we have collected during a discussion with Alex, the Creative Tim founder. That smile would have had a dominant presence and a reassuring effect, unless covered in unnecessary details.&lt;/p&gt;

&lt;p&gt;Keeping that smile in mind, Paul went back to the research stage and he looked up if math and computer science could ever seem fun. He ultimately understood that real intelligence without a sense of humor doesn’t exist and so he bumped into Homological Identities among Yangian-invariants and Brainfuck. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kLYg_yeL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-3-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kLYg_yeL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-3-min.jpg" alt="Homological Identities"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WNHYa_zf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-4-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WNHYa_zf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-4-min.jpg" alt="Brainfuck"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, back to the drawing board.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1: Try&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The designer started by simplifying forms and expressions. He tried different concepts, different solutions to make a modular and engaging system. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zRcxjXYh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-5-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zRcxjXYh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-5-min.jpg" alt="new logo try stage"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Step 2: Investigation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Passing through dozens of ideas, Paul understood what works and what doesn’t and kept only a couple of them on which to build the graphic elements.&lt;/p&gt;

&lt;p&gt;Many of them were just amusing, other ideas would have had a chance to be smart as well, but they eventually failed the originality test. For example:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mq8Y1dlt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-6-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mq8Y1dlt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-6-min.jpg" alt="new logo investigation stage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3: Make&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#concept-development"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Concept Development&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Then, finally, he had the solution! A robot! A “T” robot made with UI elements. A modular system that conveys the main values of those behind Creative Tim: being engaged and being creative. This system now satisfies everybody's needs and also helps the brand to communicate in social media through a special language and a wide variety of emotions. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZpZa2UF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/8a.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZpZa2UF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/8a.gif" alt="robot ui elements"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;Robot made with UI elements&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h3&gt;
  &lt;a href="#font"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Font&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Now that we have a powerful story-driven logomark with a lot of visual potential, it’s time to invest some time in the logotype as well. After a wide research, he has discovered Roboto Slab Typeface and he wasn’t able to move forward anymore. (Because of its name and the T Robot; we could make that Roboto joke). &lt;br&gt;
Unfortunately, Roboto Slab was similar to a monospaced font used in a programming console (we really liked that), but the alliance between the logomark and his logotype was really bad and the “creative and fun” part could have easily became “boring and sad”. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sj3oQpUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-7-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sj3oQpUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-7-min.jpg" alt="new logo roboto slab"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;New Logo using Roboto Slab typography&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
The designer continued to search for something super clean and not too formal that could be easily integrated into my concept. Montserrat (created by Julieta Ulanovsky) satisfied the needs and it was love at first sight with the capital letters, the clean letter design, and the wide array of characters. 

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EuMiof3H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-16.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EuMiof3H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-16.jpg" alt="new logo typography example"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;New Logo Typography Examples&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
After some minimal interventions, it looked perfect. Moreover, we decided to keep this typeface as a brand font as well, because of its versatility in weights and sizes and its modern look that could be easily associated with the new Tim. 

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S1Vud29Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-8-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S1Vud29Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-8-min.jpg" alt="new logo monttserrat"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;New Logo using Montserrat typography&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h3&gt;
  &lt;a href="#the-result"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The result&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;In conclusion, we decided to keep the old logo' soul and upgrade it to a new rhythm of life. It became a robot with a human smile that can now find solutions to any problems and communicate with all of us. The new Tim is still amusing but no longer naive. Tim has now an emotional intelligence that conveys more inner life than any other human being.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KyoGbtXm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-20.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KyoGbtXm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-20.jpg" alt="new vs old logo"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;Old Logo vs. New Logo&lt;/center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g5z9FPnY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-12.jpg" alt="variants of new logo"&gt;&lt;br&gt;
&lt;center&gt;Variants of Creative Tim New Logo&lt;/center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jkNG_IP9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-15.jpg" alt="new logo emotions"&gt;&lt;br&gt;
&lt;center&gt;New Logo Emotions&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
And let's see some brand communication:&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zViN-Wik--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-14.jpg" alt="business cards"&gt;&lt;br&gt;
&lt;center&gt;Creative Tim Business Cards&lt;/center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A2ye_7CN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-17.jpg" alt="smart devices"&gt;&lt;br&gt;
&lt;center&gt;Creative Tim Smart Devices&lt;/center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z3Ef11do--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-13-1.jpg" alt="shirts"&gt;&lt;br&gt;
&lt;center&gt;Creative Tim T-shirts&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h3&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Final Thoughts&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TlSW7ycs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-19.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TlSW7ycs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-19.jpg" alt="smart devices"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nOjfWI-v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-18.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nOjfWI-v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-18.jpg" alt="shirts"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enough with the details for now. We just wanted to share with you this important change around our company. Also, we are very happy with the new Tim and we hope you will embrace it as well. &lt;/p&gt;

&lt;p&gt;The task in the upcoming period will be to align other visuals around Creative Tim to the new logo. We've already started with our &lt;a href="https://www.creative-tim.com/"&gt;website&lt;/a&gt;, &lt;a href="https://www.creative-tim.com/blog/"&gt;blog&lt;/a&gt;, social media accounts (&lt;a href="https://www.facebook.com/CreativeTim"&gt;Facebook&lt;/a&gt;, &lt;a href="https://twitter.com/CreativeTim"&gt;Twitter&lt;/a&gt;, &lt;a href="https://instagram.com/creativetimofficial/"&gt;Instagram&lt;/a&gt;, &lt;a href="https://www.tiktok.com/@creative.tim?lang=en"&gt;TikTok&lt;/a&gt;), where you can see it in action.&lt;/p&gt;

&lt;p&gt;Share your thoughts about the rebranding on our &lt;a href="https://twitter.com/CreativeTim/status/1428627756787585027"&gt;social media&lt;/a&gt;, and Thank You for being with us ❤️&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br&gt;
Creative Tim team&lt;/p&gt;

</description>
    </item>
    <item>
      <title>What Is Green Hat Files?</title>
      <author>Green Hat Files Softwares</author>
      <pubDate>Mon, 23 Aug 2021 12:02:49 +0000</pubDate>
      <link>https://dev.to/greenhatfiles/what-is-green-hat-files-2055</link>
      <guid>https://dev.to/greenhatfiles/what-is-green-hat-files-2055</guid>
      <description>&lt;p&gt;GreenHatFiles is a very unique website that offers a service called Green Hat Files. This is a marketing concept that involves organic SEO (search engine optimization) techniques. If you want to make your online business stand out from the crowd, you need to get the word out about your site and services or products. The way to do this is to get on the first page of Google when people search for a particular keyword.&lt;/p&gt;

&lt;p&gt;By using organic SEO techniques you can get a good page rank and then your site will rank higher for longer. This will create a very high bounce rate (the percentage of people visiting your site who leave within a few minutes). This means that your bounce rate is more than 50%! You are not going to get this kind of results by using normal SEO methods.&lt;/p&gt;

&lt;h2&gt;Is Green Hat Files Legit?&lt;/h2&gt;

&lt;p&gt;Yes, GreenHatFiles Games is a great service for two reasons. First, they have thousands of websites already in place with content already optimized for SEO purposes. This makes it easy for you to get your website listed immediately and start driving traffic immediately. They have tools that allow you to quickly identify the keywords people are using to find your site. This allows you to target those keywords and build content around them.&lt;/p&gt;

&lt;p&gt;The second reason why GreenHatApps is such an excellent service for your website is that they offer an amazing amount of free advice. They have several active forums where you can get expert advice. Some of the topics include building a business website, generating web traffic, optimizing pages etc. They are also a great source for support.&lt;/p&gt;

&lt;h2&gt;Is GreenHatFiles Safe?&lt;/h2&gt;

&lt;p&gt;Many people have asked questions about GreenHatFiles review and the way they work. There have been reviews and discussions on Yahoo Answers. There are many places online where you can ask questions to help you learn how to use this technology for your business. Most people seem to be very pleased with the answers they get. If you do some digging, you will soon find out that people love the help.&lt;/p&gt;

&lt;p&gt;I believe that everyone should at least give it a try. I have had success with it and I am sure other people have had success as well. I personally managed to create my first website using the GreenHat Files. I used it as a base for learning and development and managed to turn it into a very successful business. You never know how far you can go until you try it.&lt;/p&gt;

&lt;h2&gt;How To Download Software From Greenhatfiles?&lt;/h2&gt;

&lt;p&gt;GreenHat Files provides extremely high quality, and in some cases, higher than high SEO standards information software, apps and games. The information is broken down into categories and subcategories so you can get the most benefit for your money. In many cases you can get lifetime value from these sites.&lt;/p&gt;

&lt;p&gt;I have found that using this information has helped me generate more traffic and has helped me make more sales. As an internet marketer, I believe that having good quality information and putting it in front of people who need it can make the world of difference. Sometimes a little knowledge can go a long way. So, if you have questions, you may want to consider Green Hat Files to help your web site.&lt;/p&gt;

&lt;h2&gt;How To Download Games From Greenhatfiles?&lt;/h2&gt;

&lt;p&gt;One great thing about GreenHatFiles Software is the fact that they are completely free. They provide high quality information, but don't cost anything &lt;a href="https://greenhatfiles.com/"&gt;&lt;/a&gt;&lt;a href="https://greenhatfiles.com/"&gt;https://greenhatfiles.com/&lt;/a&gt; . I love that they don't expect you to pay any money to get the information. This is important because many of the paid services tend to place ads on your web page and can be a huge annoyance. With GreenHat Files games, you will only see banners of information that you can view for free.&lt;/p&gt;

&lt;p&gt;Another great thing about GreenHatFiles Apps is that they do a lot of research to get information out there. This information helps to build a community around your site and helps site visitors feel more comfortable about transacting business with you. You can even get special offers and discounts from GreenHatFiles because they monitor and track everything.&lt;/p&gt;

&lt;p&gt;I hope that this little bit of information has helped you understand a little more about what is greenhatamines? I have been using these services for quite some time and they have saved me a TON of money and time. &lt;/p&gt;

&lt;h2&gt;Final Words&lt;/h2&gt;

&lt;p&gt;If you are in need of marketing information that helps to build community awareness, or just general information that can help you learn what is green, then make sure to check out my web site. There are many free reports that you can download, that discuss everything from how to stop drinking caffeine to the latest trends in greenware.&lt;/p&gt;

</description>
      <category>greenhatfiles</category>
      <category>softwares</category>
      <category>gamedev</category>
    </item>
    <item>
      <title>A Nice Developer Joke For Today</title>
      <author>Daily Developer Jokes</author>
      <pubDate>Mon, 23 Aug 2021 12:00:25 +0000</pubDate>
      <link>https://dev.to/dailydeveloperjokes/a-nice-developer-joke-for-today-509f</link>
      <guid>https://dev.to/dailydeveloperjokes/a-nice-developer-joke-for-today-509f</guid>
      <description>&lt;p&gt;Hi there! Here's today's Daily Developer Joke. We hope you enjoy it; it's a good one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VK5UMwxm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e1258a197fb7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VK5UMwxm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e1258a197fb7.png" alt="Joke Image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;For more jokes, and to submit your own joke to get featured, check out the &lt;a href="https://dailydeveloperjokes.github.io/"&gt;Daily Developer Jokes Website&lt;/a&gt;. We're also open sourced, so feel free to view &lt;a href="https://github.com/dailydeveloperjokes"&gt;our GitHub Profile&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leave-this-post-a-if-you-liked-todays-joke-and-stay-tuned-for-tomorrows-joke-too"&gt;
  &lt;/a&gt;
  Leave this post a ❤️ if you liked today's joke, and stay tuned for tomorrow's joke too!
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This joke comes from &lt;a href="https://github.com/wesbos/dad-jokes"&gt;Dad-Jokes GitHub Repo by Wes Bos&lt;/a&gt; (thank you!), whose owner has given me permission to use this joke with credit.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>jokes</category>
      <category>dailydeveloperjokes</category>
    </item>
    <item>
      <title>Node Express CRUD with Mongoose,JWT authentication,authorization</title>
      <author>Tanzim Ibthesam</author>
      <pubDate>Mon, 23 Aug 2021 11:58:13 +0000</pubDate>
      <link>https://dev.to/tanzimibthesam/node-express-crud-with-mongoose-jwt-authentication-authorization-3ogk</link>
      <guid>https://dev.to/tanzimibthesam/node-express-crud-with-mongoose-jwt-authentication-authorization-3ogk</guid>
      <description>&lt;p&gt;Here we will make a CRUD with REST API along with its authentication.Express.js is unopinionated means everyone can have their own way of doing things which is quite different from a strict framework.&lt;br&gt;
If you are using VS code and type &lt;strong&gt;Cntrl+`&lt;/strong&gt; to open the terminal and write &lt;code&gt;npm init -y&lt;/code&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4YBfjGmb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsqyqz7nlcftd448x8n0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4YBfjGmb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsqyqz7nlcftd448x8n0.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
It will create a pacakge.json file for you on the left hand side&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kVdA08Mc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxmywl17d2nvglcbl80f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kVdA08Mc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxmywl17d2nvglcbl80f.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
At first you need to install express and mongoose. &lt;br&gt;
&lt;code&gt;npm install express&lt;/code&gt; &amp;amp;&amp;amp; &lt;code&gt;npm install mongoose&lt;/code&gt;&lt;br&gt;
If you go to &lt;code&gt;package.json file&lt;/code&gt; you can see &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9lLdrYsg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7g40gopk2o5gxvujk2h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9lLdrYsg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7g40gopk2o5gxvujk2h.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
In our depencies you have got your express and mongoose installed to check whether a package has been installed go package.json. These are pretty basic stuffs but will help a begiiner a lot.&lt;br&gt;
you will create a file called app.js&lt;br&gt;
in &lt;code&gt;app.js&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tc5_Itql--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uvsj25yauf5f6d1o4z34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tc5_Itql--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uvsj25yauf5f6d1o4z34.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
These are the thigs you will initially write in app.js file here you will initialize express &lt;br&gt;
go to terminal type &lt;code&gt;node app.js&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XdHT3xt3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6ku54nye20prmfuub75.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XdHT3xt3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6ku54nye20prmfuub75.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 Now we can see that the server is initialized on port 5000. The port can be anything 5000,6000,8000.&lt;br&gt;
But the problem is we need to run it each and every single time when there is any change. As a result we need to install &lt;code&gt;nodemon&lt;/code&gt;&lt;br&gt;
&lt;code&gt;npm install nodemon&lt;/code&gt; Then if we go to our package.json file we will see &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kWd48G8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tgfms0u28j1kc7epqpkl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kWd48G8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tgfms0u28j1kc7epqpkl.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
noe if we want to use nodemon we can use the scripts in package.json file &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1x20m8VJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0g6bgilh4yodb2kn8yo3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1x20m8VJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0g6bgilh4yodb2kn8yo3.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Now we can go to your terminal and run npm start &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F-7Rg-D8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zaehj5pf7swua69k0af1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F-7Rg-D8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zaehj5pf7swua69k0af1.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Now you dont need to run node app.js nodemon will restart everytime there is a change&lt;br&gt;
&lt;strong&gt;Connection with MongoDB through mongoose&lt;/strong&gt;&lt;br&gt;
If you dont have MongoDb installed on your system please install it first. Here you creating a new database we will use Robo3t here &lt;br&gt;
if you go to Robo 3t you can see &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F5HNCa93--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o92gail1fk4twbkknmi3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F5HNCa93--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o92gail1fk4twbkknmi3.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
If you click connect you can see &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C7wuhSL1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3eop7w48mutq63w349vx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C7wuhSL1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3eop7w48mutq63w349vx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will look something like this &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7OD0u5yF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dut4scjy6tx1tsyk1p73.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7OD0u5yF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dut4scjy6tx1tsyk1p73.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From here you will see a modal like this you will named your databse and see create&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KOj_s3Ks--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhormcaxbsnjyf2zagug.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KOj_s3Ks--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhormcaxbsnjyf2zagug.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have done everything correctly you will see name of the databse you have created on the left &lt;/p&gt;

&lt;p&gt;We can use .env files for that we need to install a new package &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GzolxnbQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4f93b8864ok7bt106pgy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GzolxnbQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4f93b8864ok7bt106pgy.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z67WhaA8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2h88xzpdwkm3ey8iyq0p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z67WhaA8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2h88xzpdwkm3ey8iyq0p.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If everything is alright we can now we can see it running&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dllC8oHy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mx1jfj27fg5n0xgcaudb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dllC8oHy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mx1jfj27fg5n0xgcaudb.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
We can install &lt;code&gt;npm install dotenv&lt;/code&gt; to keep database name in an env file &lt;br&gt;
In .env file &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QSIcCXvi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uxwq30dv1u7auib2x5hr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QSIcCXvi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uxwq30dv1u7auib2x5hr.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 In app.js file&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uOiLVS2s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rzam0my54eey1gjxczp6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uOiLVS2s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rzam0my54eey1gjxczp6.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is not mandatory but a good practice&lt;/strong&gt; &lt;br&gt;
&lt;strong&gt;Router&lt;/strong&gt;&lt;br&gt;
Let us get the router fixed we need to create a new file called router.js you can set all routes inside app.js but its better to have a seperate route file now if we create router.js &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YIKcgDVy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dbnp5zkmizzv60d5kxrg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YIKcgDVy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dbnp5zkmizzv60d5kxrg.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In app.js &lt;br&gt;
&lt;code&gt;const allRouter=require('./routes')&lt;/code&gt;&lt;br&gt;
&lt;code&gt;app.use('/',allRouter);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now we need 2 parts 1 is the model and other is the controller&lt;br&gt;
In Model part there will be the database and controller part will have the logic&lt;/p&gt;

&lt;p&gt;Create a new folder model/Post.js&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y1ptTWSO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yu3912y160pu1eexqm7v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y1ptTWSO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yu3912y160pu1eexqm7v.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
here we see we can that we want to add two fields to posts collection title and description &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CRUD part&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;CREATE&lt;/strong&gt;&lt;br&gt;
In routes.js &lt;br&gt;
Import PostsController&lt;br&gt;
&lt;code&gt;const PostsController=require("./controller/Posts")&lt;/code&gt;;&lt;br&gt;
&lt;em&gt;Post route&lt;/em&gt;&lt;br&gt;
&lt;code&gt;router.post('/posts/create',PostsController.createPost);&lt;/code&gt;&lt;br&gt;
Import Post Model on top&lt;br&gt;
in controller/Posts.js&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kzbOKwH3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/upqn6kobuy8xunb7yy4p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kzbOKwH3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/upqn6kobuy8xunb7yy4p.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Test in Postman&lt;/strong&gt;&lt;br&gt;
Make sure in headers Content type is set to application/json&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UfswtXjZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wxhgv5q38xk37d322zvm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UfswtXjZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wxhgv5q38xk37d322zvm.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Testing post request&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2YTDEB2R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3h4upp7zeaxqmm85ctdl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2YTDEB2R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3h4upp7zeaxqmm85ctdl.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can clearly see its successfull giving us a status code of 200&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;READ&lt;/strong&gt;&lt;br&gt;
In router.js&lt;br&gt;
&lt;code&gt;router.get('/posts',PostsController.getPost)&lt;/code&gt;&lt;br&gt;
In controller/Posts.js&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Postman test&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iILPFSt4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofha44j6ood3lcqkrskg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iILPFSt4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofha44j6ood3lcqkrskg.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
If we also check in Robo 3T &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tJzN7a92--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5fzoi1wpmzm22r3qnbi0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tJzN7a92--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5fzoi1wpmzm22r3qnbi0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we can say that it has been successfully inserted onto database.&lt;br&gt;
 ** READING A SINGLE POST**&lt;br&gt;
In router.js&lt;br&gt;
&lt;code&gt;router.get('/posts/:id',PostsController.findSinglePost)&lt;/code&gt;&lt;br&gt;
In controller/Posts.js&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g5mXLPla--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9tt9nmp2evadnv739hzu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g5mXLPla--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9tt9nmp2evadnv739hzu.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Test in Postman&lt;/strong&gt;&lt;br&gt;
Here you can get id from databse using Robo3T or just by using get requests to get all posts &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JGs_mdxT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3jymmxuurq698mkvr85n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JGs_mdxT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3jymmxuurq698mkvr85n.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 Now we see from where we can get the id and get a single post&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5KJ0-lIV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gd5wsyub3dvgki21s2ys.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5KJ0-lIV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gd5wsyub3dvgki21s2ys.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;&lt;br&gt;
In router.js&lt;br&gt;
&lt;code&gt;//Updating a single post&lt;br&gt;
router.put('/posts/:id',PostsController.updatePost);&lt;/code&gt;&lt;br&gt;
In controller/Posts.js &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ff7w2Zdo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y7lvltczmf7og9s48rr9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ff7w2Zdo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y7lvltczmf7og9s48rr9.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Testing in postman&lt;/strong&gt;&lt;br&gt;
The same way we get id like shown with getting id of a single post &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rPe8ATwm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwhvbl40i9rqj9d1rine.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rPe8ATwm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwhvbl40i9rqj9d1rine.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;DELETE&lt;/strong&gt;&lt;br&gt;
In router.js&lt;br&gt;
&lt;code&gt;//Delete a post&lt;br&gt;
router.delete('/posts/:id',PostsController.deletePost);&lt;/code&gt;&lt;br&gt;
In controller/Posts.js&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xETY6Nd_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f2ewfpa06hfdrxqs1l8m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xETY6Nd_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f2ewfpa06hfdrxqs1l8m.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Testing in postman&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JdY6ZDfV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jek14e5gkc1fqlhh275t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JdY6ZDfV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jek14e5gkc1fqlhh275t.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
We will get the individual post and delete &lt;br&gt;
&lt;strong&gt;While Updating you most likely will get an warning&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1kSAIw7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uoeb2r7s2kstfkp5ib72.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1kSAIw7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uoeb2r7s2kstfkp5ib72.png" alt="Mongo Db update warning"&gt;&lt;/a&gt;&lt;br&gt;
For resolving the warning go to app.js&lt;br&gt;
&lt;code&gt;useFindAndModify: false&lt;/code&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---tBnOimY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrhrs8syngc5utotirdh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---tBnOimY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrhrs8syngc5utotirdh.png" alt="Mongo Update warning resolved"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API Authentication,authorization with JWT&lt;/strong&gt;&lt;br&gt;
 Now we will do authentication using email and password only. Remember &lt;strong&gt;JWT&lt;/strong&gt; is used for authorization not authentication &lt;br&gt;
Create a new model in &lt;strong&gt;model/User.js&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;IN User.js&lt;/strong&gt;&lt;br&gt;
In this case &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w8tUKN7P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h4b08fhmti6xmnlmfbpk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w8tUKN7P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h4b08fhmti6xmnlmfbpk.png" alt="model user"&gt;&lt;/a&gt;&lt;br&gt;
 Here we are including email,password and token.&lt;br&gt;
We need to &lt;/p&gt;

&lt;p&gt;In controller folder we will create a new file called &lt;code&gt;Auth.js&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Xp4i-Xu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fv4ja12nhcsxpqmis6x1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Xp4i-Xu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fv4ja12nhcsxpqmis6x1.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
In &lt;strong&gt;router.js&lt;/strong&gt;&lt;br&gt;
//signup route&lt;br&gt;
&lt;code&gt;router.post('/signup',AuthController.signup)&lt;/code&gt; we need to import AuthController at the top&lt;br&gt;
 &lt;code&gt;const AuthController=require("./controller/Auth")&lt;/code&gt;&lt;br&gt;
  In &lt;code&gt;controller/Auth.js&lt;/code&gt;&lt;br&gt;
We need to install a package called &lt;a href="https://www.npmjs.com/package/bcrypt"&gt;bcyrpt&lt;/a&gt;&lt;br&gt;
On Top of Auth.js &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M7PpZiCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ftr7ybjrio0fi84pkb21.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M7PpZiCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ftr7ybjrio0fi84pkb21.png" alt="importauth"&gt;&lt;/a&gt;&lt;br&gt;
 Here is signup we need to use bcrypt to hash the password as we all know passwords cant be stored in plain text&lt;br&gt;
&lt;strong&gt;Testing in Postman&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--laBIxhFx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nuly9dg8t18ct92l91ak.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--laBIxhFx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nuly9dg8t18ct92l91ak.png" alt="signuproute"&gt;&lt;/a&gt;&lt;br&gt;
 As we see the password is hashed and status is ok &lt;br&gt;
&lt;strong&gt;Signin Route&lt;/strong&gt;&lt;br&gt;
In &lt;strong&gt;router.js&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;router.post('/signin',AuthController.signin);&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rOSt3Y4J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhlreuzp407paz4b6jzy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rOSt3Y4J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhlreuzp407paz4b6jzy.png" alt="signin"&gt;&lt;/a&gt;&lt;br&gt;
In signin route after checking credentials a token needs to be generated.&lt;strong&gt;Remember Token is for authorization not authentication&lt;/strong&gt;. We set the secret key on top the secret key can be set in .env file remember the secret key must be secret.&lt;br&gt;
&lt;strong&gt;Testing in Postman&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5T003Yvf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2lr79uhkexcrznf16ky.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5T003Yvf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2lr79uhkexcrznf16ky.png" alt="signinroutetesting"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Authorization&lt;/strong&gt;&lt;br&gt;
We will use a pacakge named &lt;a href="https://www.npmjs.com/package/express-jwt"&gt;express-jwt&lt;/a&gt; for installing &lt;code&gt;npm install express-jwt&lt;/code&gt;.&lt;br&gt;
&lt;strong&gt;Creating a middleware&lt;/strong&gt;&lt;br&gt;
A middleware can be termed as something between a request and response.If we want to protect any route that users who only have token can enter those routers.&lt;br&gt;
in &lt;code&gt;controller/Auth.js&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FzUfbGC6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n9ljk1a7tv1pw1b0w1k3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FzUfbGC6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n9ljk1a7tv1pw1b0w1k3.png" alt="signedIn middleware"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Route test with middleware&lt;/strong&gt; &lt;br&gt;
&lt;code&gt;In router.js&lt;/code&gt; on top &lt;br&gt;
&lt;code&gt;const {isSignedIn}=require("./controller/Auth");&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;Route with isSignedIn&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;router.get('/testauthroute',isSignedIn,(req,res)=&amp;gt;{&lt;br&gt;
     res.send("A protected route")&lt;br&gt;
    res.json(req.auth)&lt;br&gt;
})&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Testing in Postman&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RUromF36--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oi9qwi4l2tv83lkf1g6o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RUromF36--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oi9qwi4l2tv83lkf1g6o.png" alt="testuthroute"&gt;&lt;/a&gt;&lt;br&gt;
Here if we try to access this route without token we get this error 401 forbidden means without token you cant access this route.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MZCTZZxN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ot2kiri4ocrhr1c43zwf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MZCTZZxN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ot2kiri4ocrhr1c43zwf.png" alt="test with token"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here we need to go to header part of the token include &lt;strong&gt;Authorization&lt;/strong&gt; in header.In value of authorization header we need to write Bearer give a space before the token and then copy and paste the token &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zmiEZoER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yriols97fielj5k7d74o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zmiEZoER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yriols97fielj5k7d74o.png" alt="authorization value"&gt;&lt;/a&gt;&lt;br&gt;
If you go to &lt;a href="https://jwt.io/"&gt;jwt&lt;/a&gt; and test your jwt you will see you get all your info&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NbHBRJvS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6hrs9kwognn8a6u4zxl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NbHBRJvS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6hrs9kwognn8a6u4zxl.png" alt="jwt"&gt;&lt;/a&gt;. Here header is the type which is JWT the signature is the token and payload is the email and id.So that's all for this blog. Hopefully you will be able to grasp the concepts of Node,Express,Jwt,authentication,authorization here. &lt;/p&gt;

</description>
      <category>node</category>
      <category>express</category>
      <category>javascript</category>
      <category>jwt</category>
    </item>
    <item>
      <title>Mistakes I made while maintaining an open-source React Native library for five years</title>
      <author>Matteo Mazzarolo</author>
      <pubDate>Mon, 23 Aug 2021 11:55:00 +0000</pubDate>
      <link>https://dev.to/mmazzarolo/mistakes-i-made-while-maintaining-an-open-source-react-native-library-for-five-years-9g9</link>
      <guid>https://dev.to/mmazzarolo/mistakes-i-made-while-maintaining-an-open-source-react-native-library-for-five-years-9g9</guid>
      <description>&lt;p&gt;In this post, I’ll share some details around design decisions and mistakes I made while working on &lt;a href="https://github.com/react-native-modal/react-native-modal"&gt;React Native Modal&lt;/a&gt;, a Modal component library for React Native.&lt;br&gt;&lt;br&gt;
I hope that sharing my thoughts may help other new open-source maintainers to avoid such errors.&lt;/p&gt;

&lt;p&gt;This post focuses on a &lt;a href="https://reactnative.dev/"&gt;React Native&lt;/a&gt; library, but it’s not strictly related to React Native. It’s more about generic design and maintainability decisions.&lt;br&gt;&lt;br&gt;
This should be a beginner-friendly post. Seasoned open source maintainers are probably already familiar with the topics explored here.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2016-open-sourcing-a-react-native-library"&gt;
  &lt;/a&gt;
  2016 — Open Sourcing a React Native library
&lt;/h2&gt;

&lt;p&gt;I started using React Native in late 2015 at my daily job. Back then React Native was still in its infancy.&lt;/p&gt;

&lt;p&gt;In early 2016 I open-sourced a tiny React Native library to enhance the capabilities of &lt;a href="https://reactnative.dev/docs/modal"&gt;React Native’s built-in Modal component&lt;/a&gt;. The built-in Modal is a thin API layer to present content above an enclosing view. It is a low-level API, in the sense that it just offers a way to “show” something, but it’s still up to the developer to handle the styling, animation, and behavior of whatever they present.&lt;/p&gt;

&lt;p&gt;The goals of my library were to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Show a backdrop beneath the modal.&lt;/li&gt;
&lt;li&gt;Animate the modal entrance/exit.&lt;/li&gt;
&lt;li&gt;Allow dismissing the modal on backdrop touch.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The initial surface area of the project was small, and it didn’t allow many customization options.&lt;br&gt;&lt;br&gt;
The entire project was &lt;a href="https://gist.github.com/mmazzarolo/1bddd15effd68b9eb0dbebfcfc1a9793"&gt;86 lines of code&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2021-react-native-modal-today"&gt;
  &lt;/a&gt;
  2021 - React Native Modal, today
&lt;/h2&gt;

&lt;p&gt;It’s August 2021 now, and the modal component is known as &lt;a href="https://github.com/react-native-modal/react-native-modal"&gt;&lt;code&gt;react-native-modal&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;


  


&lt;p&gt;Thanks to all its contributors, &lt;code&gt;react-native-modal&lt;/code&gt; now offers a ton of customization options and features: it’s swipeable, scrollable, user-friendly, and it patches a few quirks of the native modal implementation. And, as expected, the codebase has grown exponentially.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;react-native-modal&lt;/code&gt; has more than 4.5k starts on GitHub, and has/had many contributors. I feel like most of its success is due to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Being one of the first few React Native libs that worked as simple drop-in substitute of lower level APIs.&lt;/li&gt;
&lt;li&gt;Having a SEO-friendly (and, unfortunately, misleading) name.&lt;/li&gt;
&lt;li&gt;Gaining some good exposure while being part of the official &lt;a href="https://github.com/orgs/react-native-community/"&gt;React Native Community organization&lt;/a&gt;, when it included higher-level APIs and components.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-sore-point"&gt;
  &lt;/a&gt;
  The sore point
&lt;/h2&gt;

&lt;p&gt;It’s not all fun and games, though.&lt;br&gt;&lt;br&gt;
Since 2020, &lt;a href="https://github.com/react-native-modal/react-native-modal/issues/414"&gt;&lt;strong&gt;&lt;code&gt;react-native-modal&lt;/code&gt; development has slowed down&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Around two years ago, I moved to a different role at my company, and I’m not using React Native anymore. Additionally, I have several other side-projects I’m trying to maintain. So, I’m not able to actively develop new features in &lt;code&gt;react-native-modal&lt;/code&gt;, nor provide the same grade of support I used to.&lt;/p&gt;

&lt;p&gt;I’m still keeping an eye on important issues and ensuring it stays compatible across React Native updates. Also, some folks are helping from time to time (thank you all, especially &lt;a href="https://github.com/rewieer"&gt;@rewieer &amp;lt;3&lt;/a&gt;), and &lt;a href="https://github.com/react-native-modal/react-native-modal/issues/414"&gt;I’m still open to onboarding new people on the project&lt;/a&gt;.&lt;br&gt;&lt;br&gt;
But we’re far from being as active as we were a couple of years ago.&lt;/p&gt;

&lt;p&gt;Overall, I think &lt;code&gt;react-native-modal&lt;/code&gt; is still a nice library. But I also feel it could be even better if I made different decisions in the past.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mistakes-have-been-made"&gt;
  &lt;/a&gt;
  Mistakes have been made
&lt;/h2&gt;

&lt;p&gt;Besides a few small side projects, &lt;code&gt;react-native-modal&lt;/code&gt; is my first “serious” open-source library.&lt;/p&gt;

&lt;p&gt;While developing and maintaining it, I had a lot of fun, learned new things, and made some poor decisions.&lt;br&gt;&lt;br&gt;
In hindsight, to me, most of these poor decisions sound “obviously” wrong now. But, hey, that’s how experience works and how you learn.&lt;/p&gt;

&lt;p&gt;And that’s also why I think that sharing these decisions and the thought process behind them might help other new open source maintainers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mistake-1-not-having-a-clear-goal-and-direction"&gt;
  &lt;/a&gt;
  Mistake #1: Not having a clear goal and direction
&lt;/h3&gt;

&lt;p&gt;I created the first version of &lt;code&gt;react-native-modal&lt;/code&gt; because I needed its features in my daily job. Then, I decided to open source it.&lt;br&gt;&lt;br&gt;
I didn’t open source it to solve a specific problem. I just wanted to give back to the community and (maybe?) receive contributions (e.g., bug reports, new features).&lt;br&gt;&lt;br&gt;
And it worked!&lt;br&gt;&lt;br&gt;
There was an issue, though: &lt;strong&gt;&lt;code&gt;react-native-modal&lt;/code&gt; didn’t have a “real” goal&lt;/strong&gt;.&lt;br&gt;&lt;br&gt;
Without a clear direction, &lt;code&gt;react-native-modal&lt;/code&gt; quickly became a huge catch-all modal solution. We often added features on top of features just because the native modal API exposed by React Native wasn’t satisfying 100% of the use cases. All of it while trying to catch up with React Native, Android, and iOS updates.&lt;br&gt;&lt;br&gt;
We were (and are) doing the exact opposite of &lt;a href="https://en.wikipedia.org/wiki/KISS_principle"&gt;KISS&lt;/a&gt; (Keeping It Simple, Stupid). And the codebase suffers from this. The more features we want to support, the more conditions and edge cases we need to cover.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mistake-2-not-saying-no-enough"&gt;
  &lt;/a&gt;
  Mistake #2: Not saying “no” enough
&lt;/h3&gt;

&lt;p&gt;When someone spends hours to package an excellent pull request that introduces a new feature, it’s hard to say “no” to it.&lt;br&gt;&lt;br&gt;
But, sometimes, I shouldn’t have been scared to say it.&lt;br&gt;&lt;br&gt;
Quoting &lt;a href="https://www.jeffgeerling.com/blog/2016/why-i-close-prs-oss-project-maintainer-notes"&gt;Jeff Geerling&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Feel free to say ‘no’ when a PR doesn’t meet your standards. So many projects get derailed by accepting too many new features without evaluating them for long-term maintainability, and it’s a problem that’s avoided by a simple two-letter word.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Not having a clear goal makes it much harder to say “no” to contributions.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Especially for pull requests with new features, I should have been more forward-looking and rejected them when they weren’t 100% aligned with the (unfortunately, blurry) project architecture.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mistake-3-using-a-misleading-library-name"&gt;
  &lt;/a&gt;
  Mistake #3: Using a misleading library name
&lt;/h3&gt;

&lt;p&gt;For the first few months, this library was named &lt;code&gt;react-native-animated-modal&lt;/code&gt;.&lt;br&gt;&lt;br&gt;
Then, after asking for permission, I moved it to &lt;code&gt;react-native-modal&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In retrospect, this was a mistake.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;A generic name like &lt;code&gt;react-native-modal&lt;/code&gt; sets some wrong expectations&lt;/strong&gt; because it sounds like the “official” modal component of React Native.&lt;br&gt;&lt;br&gt;
Especially for newcomers, it can be unintuitive that this is just a wrapper on top of React Native’s built-in modal component. From time to time, I still see issues opened in the &lt;code&gt;react-native-modal&lt;/code&gt; repo mentioning problems pertinent to just the React Native built-in modal.&lt;/p&gt;

&lt;p&gt;In my ideal world, the &lt;code&gt;react-native-modal&lt;/code&gt; library name should be used only by the built-in React Native modal (if extracted from the core repository) or by a thin abstraction layer on top of it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If anyone on the React Native team is reading this post: If you need the npm namespace, feel free to DM me 👍&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#mistake-4-hanging-back-on-hard-decisions"&gt;
  &lt;/a&gt;
  Mistake #4: Hanging back on hard decisions
&lt;/h3&gt;

&lt;p&gt;Another thing I regret doing &lt;strong&gt;is hesitating too much on a hard decision&lt;/strong&gt; : &lt;a href="https://github.com/react-native-modal/react-native-modal/issues/145"&gt;Moving &lt;code&gt;react-native-modal&lt;/code&gt; to a full JavaScript implementation&lt;/a&gt;.&lt;br&gt;&lt;br&gt;
We started thinking about using “just JavaScript” because the most common issues reported in &lt;code&gt;react-native-modal&lt;/code&gt; are tied to the behavior of the native modal implementation that &lt;strong&gt;we can’t&lt;/strong&gt; change.&lt;br&gt;&lt;br&gt;
&lt;em&gt;To clarify: I’m not talking about issues of the React Native built-in modal. I’m talking about the native Android and iOS modal. Things like stacking multiple modals on top of each other weren’t natively supported by the Android and iOS OS until a couple of years ago.&lt;/em&gt;&lt;br&gt;&lt;br&gt;
Moving &lt;code&gt;react-native-modal&lt;/code&gt; to a complete JavaScript implementation would unlock a ton of customization options.&lt;br&gt;&lt;br&gt;
But not being backed by a native API introduces new complexities to the tables: What API should we expose to allow the modal to sit at the root element of the app performantly? How do we achieve native-looking modals (especially with the upcoming — now available — &lt;a href="https://developer.apple.com/design/human-interface-guidelines/ios/app-architecture/modality/"&gt;iOS modality flow&lt;/a&gt;)? What about accessibility?&lt;/p&gt;

&lt;p&gt;In &lt;a href="https://github.com/react-native-modal/react-native-modal/issues/145"&gt;PROPOSAL: JS version of react-native-modal #145&lt;/a&gt;, I think I did a good job explaining the issue and suggesting a solution. We got a ton of helpful feedback and ideas. But I procrastinated — and never actually started working on it. I regret not making a sound decision and not leading the initiative with a complete proof of concept.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mistake-5-depending-on-thirdparty-libraries-for-core-features"&gt;
  &lt;/a&gt;
  Mistake #5: Depending on third-party libraries for core features
&lt;/h3&gt;

&lt;p&gt;The last mistake I wanted to mention is &lt;strong&gt;relying too much on third-party libraries.&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Specifically, in my case, &lt;a href="https://github.com/oblador/react-native-animatable"&gt;&lt;code&gt;react-native-animatable&lt;/code&gt;&lt;/a&gt;.&lt;br&gt;&lt;br&gt;
React Native Animatable is a great library that allows defining transitions and animations in a declarative fashion by abstracting the &lt;a href="https://reactnative.dev/docs/animations"&gt;React Native &lt;code&gt;animated&lt;/code&gt; API&lt;/a&gt;. In 2015/2016, &lt;code&gt;react-native-animatable&lt;/code&gt; was &lt;strong&gt;the&lt;/strong&gt; way to sprinkle animations on top of React Native apps. Mad props to &lt;a href="https://github.com/oblador"&gt;@oblador&lt;/a&gt; for building it.&lt;br&gt;&lt;br&gt;
&lt;code&gt;react-native-animatable&lt;/code&gt; powers all &lt;code&gt;react-native-modal&lt;/code&gt;’s animation. Users can pick any animation exposed by &lt;code&gt;react-native-animatable&lt;/code&gt; and apply it to the enter/exit state of the modal with a single line of code.&lt;/p&gt;

&lt;p&gt;Time has passed, though. React Native Animatable is still a good solution today, but it’s not as performant nor configurable as the more modern options. Nowadays, there are several new ways to animate views more efficiently in React Native. Between the good-old React Native &lt;code&gt;animated&lt;/code&gt; API, &lt;a href="https://github.com/software-mansion/react-native-reanimated"&gt;Reanimated/Reanimated 2&lt;/a&gt;, &lt;a href="https://github.com/nandorojo/moti"&gt;Moti&lt;/a&gt; (which can almost be a drop-in replacement for React Native Animatable), and &lt;a href="https://github.com/airbnb/lottie"&gt;Lottie&lt;/a&gt;, adding silk-smooth native animations to a React Native app has never been easier.&lt;/p&gt;

&lt;p&gt;I don’t regret picking React Native Animatable, but &lt;strong&gt;I do regret using a high-level API to customize the modal animation&lt;/strong&gt;.&lt;br&gt;&lt;br&gt;
Most entrace/exit animations for modals are just a combination of translation and opacity interpolations. They could have been easily covered by a lower-level API (like React Native &lt;code&gt;animated&lt;/code&gt;), and we would have avoided playing this catch-up game with the newer APIs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;I hope this post doesn’t sound like a post-mortem.&lt;br&gt;&lt;br&gt;
I want to clarify that &lt;strong&gt;you can/should still use React Native Modal&lt;/strong&gt; , if it fits your use-case.&lt;br&gt;&lt;br&gt;
It works well, even on the latest version of React Native.&lt;br&gt;&lt;br&gt;
There are some known bugs here and there, but they’re all fixable. And I’m still open to onboarding new people on the project (just DM me, and/or start contributing to the repo).&lt;/p&gt;

&lt;p&gt;My goal with this post is just to share some of my experiences, hoping they can be helpful to new open-source maintainers.&lt;/p&gt;

&lt;p&gt;Thanks to the React Native maintainers, and to everyone who contributed to React Native Modal so far!&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://mmazzarolo.com/blog/2021-08-21-what-i-learned-by-maintaining-react-native-modal/"&gt;mmazzarolo.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>javascript</category>
      <category>react</category>
      <category>reactnative</category>
    </item>
  </channel>
</rss>
