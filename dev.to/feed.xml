<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Easy Comments</title>
      <author>Anish De</author>
      <pubDate>Tue, 31 Aug 2021 10:52:11 +0000</pubDate>
      <link>https://dev.to/anishde12020/easy-comments-2f8a</link>
      <guid>https://dev.to/anishde12020/easy-comments-2f8a</guid>
      <description>&lt;h1&gt;
  &lt;a href="#firstly-a-little-bit-about-myself"&gt;
  &lt;/a&gt;
  üë® Firstly a little bit about myself
&lt;/h1&gt;

&lt;p&gt;I am a 14-year-old Developer, YouTuber, Blogger, and of course a student. Though I have been coding for quite a long time, I started web development about 5 months ago. I learned Javascript, React, Redux, NextJS, various styling libraries, and a lot more in this course of time. Hashnode has now given me an opportunity to show and test my skills through this hackathon.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%F0%9F%9B%A1-a-few-words-on-auth0"&gt;
  &lt;/a&gt;
  üõ° A few words on &lt;a href="https://auth0.com/"&gt;Auth0&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;As a part of this hackathon, I am using the popular authentication provider, &lt;a href="https://auth0.com/"&gt;Auth0&lt;/a&gt; for user authentication on my application. Auth0 is great to get started (especially with their &lt;a href="https://auth0.com/docs/quickstarts/"&gt;quickstarts&lt;/a&gt;) and has a quite generous free tier. The &lt;a href="https://github.com/auth0/nextjs-auth0"&gt;NextJS SDK&lt;/a&gt; provides all the basic features along with some advanced ones too and is quite easy to implement and use. There is a Universal Login Page which means one can get started quickly without the need of developing components for that (though you have the option to).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#so-what-have-i-built"&gt;
  &lt;/a&gt;
  ü§î So what have I built?
&lt;/h1&gt;

&lt;p&gt;I started quite late, the 19th of August and I didn't have a lot of time but I was successful in making a Web Application!!! So my app is called &lt;a href="https://easycomments.anishde.dev/"&gt;Easy Comments&lt;/a&gt; and it allows you to easily allow comments functionality to your site by adding a simple embed. &lt;/p&gt;

&lt;p&gt;I started doing some mock-ups in my brain. Then I recreated some of them on Figma and then decided to start building. I started with &lt;a href="https://openchakra.app/"&gt;OpenChakra&lt;/a&gt; (because I am using &lt;a href="https://chakra-ui.com/"&gt;Chakra UI&lt;/a&gt;, more on that later).&lt;/p&gt;

&lt;p&gt;Screenshots&lt;br&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lB3Vx690--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/T7FOqZz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lB3Vx690--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/T7FOqZz.png" alt="Home Page Screenshot"&gt;&lt;/a&gt;&lt;br&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DvuzDiMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/avdZnni.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DvuzDiMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/avdZnni.png" alt="Sites Page Screenshot"&gt;&lt;/a&gt;&lt;br&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Izg1aF2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/S4La8wt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Izg1aF2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/S4La8wt.png" alt="Manage Comments Page Screenshot"&gt;&lt;/a&gt;&lt;br&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2w6gXi0C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/V7Zbzpa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2w6gXi0C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/V7Zbzpa.png" alt="My Comments Page Screenshot"&gt;&lt;/a&gt;&lt;br&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7foCJVYm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kbu0jtt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7foCJVYm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kbu0jtt.png" alt="Leave a Comment Page Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-stack"&gt;
  &lt;/a&gt;
  üìö The stack
&lt;/h2&gt;

&lt;p&gt;I had learned React over the course of over 4 months and also NextJS so I thought of going with NextJS for this project. I also had experience with Chakra UI and found it to be awesome so that is what I am using for styling. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/"&gt;NextJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://chakra-ui.com/"&gt;Chakra UI&lt;/a&gt; for styling&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://firebase.google.com/"&gt;Firebase&lt;/a&gt; for storing data&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://auth0.com/"&gt;Auth0&lt;/a&gt; for user authentication&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-icons.github.io/react-icons/"&gt;React Icons&lt;/a&gt; and &lt;a href="https://chakra-ui.com/docs/media-and-icons/icon#all-icons"&gt;Chakra Icons&lt;/a&gt; for icons&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/react-markdown"&gt;React Markdown&lt;/a&gt; and &lt;a href="https://github.com/remarkjs/remark-gfm"&gt;Remark GFM&lt;/a&gt; for markdown supports in comments&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/react-syntax-highlighter/react-syntax-highlighter"&gt;React Syntax Highligher&lt;/a&gt; for syntax highlighting of code in comments.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/davidjbradshaw/iframe-resizer"&gt;Iframe Resizer&lt;/a&gt; support&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://formik.org/"&gt;Formik&lt;/a&gt; for forms&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://vercel.com/"&gt;Vercel&lt;/a&gt; for hosting&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-reason"&gt;
  &lt;/a&gt;
  üëÄ The reason
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Why did I make this?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are many ways of integrating comments onto your site, &lt;a href="https://disqus.com/"&gt;Disqus&lt;/a&gt; being a popular option but there is one big issue, trackers. Most of us don't like to be tracked around the web and hence I felt like we need a tracker-free alternative. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;No Ads. No Trackers.&lt;/li&gt;
&lt;li&gt;Free and Open Source (Licensed under &lt;a href="https://opensource.org/licenses/MIT"&gt;MIT&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Unlimited Sites&lt;/li&gt;
&lt;li&gt;Unlimited Comments&lt;/li&gt;
&lt;li&gt;Approval stage for Comments (optional)&lt;/li&gt;
&lt;li&gt;Route wise comments&lt;/li&gt;
&lt;li&gt;Ability to edit and delete a Comment&lt;/li&gt;
&lt;li&gt;Markdown support&lt;/li&gt;
&lt;li&gt;Customization of Comments &lt;/li&gt;
&lt;li&gt;Ability to Self-Host&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-use-it"&gt;
  &lt;/a&gt;
  ‚öôÔ∏è How do you use it?
&lt;/h2&gt;

&lt;p&gt;I have written a &lt;a href="https://github.com/AnishDe12020/easycomments#-guide"&gt;quickstart guide&lt;/a&gt; on GitHub - &lt;a href="https://github.com/AnishDe12020/easycomments#-guide"&gt;https://github.com/AnishDe12020/easycomments#-guide&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%F0%9F%96%A7-how-does-it-work"&gt;
  &lt;/a&gt;
  üñß How does it work?
&lt;/h2&gt;

&lt;p&gt;Once you create a site on the &lt;a href="https://easycomments.anishde.dev/sites"&gt;sites page&lt;/a&gt;, you get an embed URL upon clicking the "See Embed URL" button (refer the &lt;a href="https://github.com/AnishDe12020/easycomments#get-the-embed-url"&gt;quickstart&lt;/a&gt; for more information).&lt;/p&gt;

&lt;p&gt;Then it is quite simple, you just need to embed that link on your site but how will you do it?&lt;/p&gt;

&lt;p&gt;The embed supports &lt;a href="https://github.com/davidjbradshaw/iframe-resizer"&gt;Iframe Resizer&lt;/a&gt; so it is quite simple.&lt;/p&gt;

&lt;p&gt;For React -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;IframeResizer&lt;/span&gt;
  &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
    &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;minWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;minHeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}}&lt;/span&gt;
  &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;Your embed url goes here&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Comments&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For Vue refer to this &lt;a href="https://github.com/davidjbradshaw/iframe-resizer/blob/master/docs/use_with/vue.md"&gt;guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For Angular, you can refer to this &lt;a href="https://github.com/davidjbradshaw/iframe-resizer/issues/478#issuecomment-347958630"&gt;comment&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can refer to the Iframe Resizer &lt;a href="https://github.com/davidjbradshaw/iframe-resizer#getting-started"&gt;getting started guide&lt;/a&gt; for more information.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A sneak peek behind the curtains&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ReactMarkdown&lt;/span&gt;
    &lt;span class="nx"&gt;remarkPlugins&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{[&lt;/span&gt;&lt;span class="nx"&gt;remarkGfm&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
    &lt;span class="nx"&gt;components&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
        &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;inline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;match&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/language-&lt;/span&gt;&lt;span class="se"&gt;(\w&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;inline&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;match&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SyntaxHighlighter&lt;/span&gt;
            &lt;span class="nx"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
            &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;colorMode&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;light&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;solarizedlight&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;dracula&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;PreTag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/SyntaxHighlighter&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/code&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;comment&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ReactMarkdown&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here &lt;a href="https://www.npmjs.com/package/react-markdown"&gt;React Markdown&lt;/a&gt;, &lt;a href="https://github.com/react-syntax-highlighter/react-syntax-highlighter"&gt;React Syntax Highlighter&lt;/a&gt; and the &lt;a href="https://github.com/remarkjs/remark-gfm"&gt;Remark GFM&lt;/a&gt; plugin is used. React Markdown helps with parsing markdown and Remark GFM adds support for GitHub Flavoured Markdown. React Syntax Highlighter does syntax highlighting for code snippets in a comment. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;How is the embed URL structured?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A sample embed URL -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://easycomments.anishde.dev/embed/EwI3VgCSuJkl85wh18Ru/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Firstly we have the domain, &lt;code&gt;https://easycomments.anishde.dev&lt;/code&gt;. Then we have the embed route which is a &lt;a href="https://nextjs.org/docs/routing/dynamic-routes"&gt;dynamic route&lt;/a&gt; and hence the &lt;code&gt;siteId&lt;/code&gt; is put as a parameter. We can also add a route, for example -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://easycomments.anishde.dev/embed/EwI3VgCSuJkl85wh18Ru/easy-comments/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, comments are stored route-specific. For example, you have a blog, &lt;code&gt;blog.com&lt;/code&gt;. You can have an embed with the route as &lt;code&gt;/&lt;/code&gt; (default) for comments left on the home page. Then you can have a route for each blog post with a route, for example, &lt;code&gt;how-to-add-auth0-to-nextjs&lt;/code&gt; and only comments for that specific blog post will show up when queried with that route.&lt;/p&gt;

&lt;p&gt;You can also specify a preferred color mode. By default, the comments widget defaults to the system color mode but this can be overwritten with the &lt;code&gt;colorMode&lt;/code&gt; parameter in the URL.&lt;/p&gt;

&lt;p&gt;Example -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://easycomments.anishde.dev/embed/EwI3VgCSuJkl85wh18Ru/easy-comments?colorMode=dark
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The available parameters are &lt;code&gt;light&lt;/code&gt; and &lt;code&gt;dark&lt;/code&gt; as of now&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#some-faq"&gt;
  &lt;/a&gt;
  ‚ùì Some FAQ
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;How does one leave a comment?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Each embed has got a "Leave a Comment" link. This redirects the users to a page where one can sign in (if not already signed in) and then leave a comment. &lt;/p&gt;

&lt;p&gt;Example -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://easycomments.anishde.dev/comments/EwI3VgCSuJkl85wh18Ru
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;How do comment approvals work?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Comments need to be approved by the site owner unless he/she explicitly enabled auto-approvals of comments when setting up the site or later on through the &lt;a href="https://easycomments.anishde.dev/sites"&gt;sites page&lt;/a&gt;. If a comment is not approved, the comment won't show up for everyone except the author (who will see a pending badge). The site owner can also remove the comment which then changes the comment status to removed and the comment author sees a removed badge. The site owner can do such comment management via the &lt;a href="https://easycomments.anishde.dev/comments"&gt;manage comments page&lt;/a&gt;. There is a global manage comments page for all sites the site owner owns and one for each site he/she owns. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;How can I see comments I have left on other's sites?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The comment will be visible on the site you have left the comment on (along with the status). You can also view all comments that you have left at the &lt;a href="https://easycomments.anishde.dev/my-comments"&gt;my comments page&lt;/a&gt; from where you can edit as well as delete a comment (this can be done from the leave a comment page as well)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What site settings can a site owner change&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Right now Show Date, Show Time, Show Avatar and Automatically Approve Comments are the available settings that can be changed by the site owner. In the future, I plan to add support for custom colors and more!!! You can keep an I on the &lt;a href="https://github.com/AnishDe12020/easycomments#%EF%B8%8F-to-do"&gt;to-do list&lt;/a&gt;. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  üéÅ Wrapping up
&lt;/h1&gt;

&lt;p&gt;You can see the site live on &lt;a href="https://easycomments.anishde.dev/"&gt;https://easycomments.anishde.dev/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source code - &lt;a href="https://github.com/AnishDe12020/easycomments"&gt;https://github.com/AnishDe12020/easycomments&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#if-you-liked-the-project-a-star-on-github-would-be-amazing"&gt;
  &lt;/a&gt;
  ‚≠ê If you liked the project, a star on GitHub would be amazing!!! ü§©
&lt;/h3&gt;

</description>
      <category>nextjs</category>
      <category>react</category>
      <category>sideprojects</category>
      <category>pwa</category>
    </item>
    <item>
      <title>Introducing PyTorch-Ignite's Code Generator v0.2.0</title>
      <author>vfdev-5</author>
      <pubDate>Tue, 31 Aug 2021 10:49:35 +0000</pubDate>
      <link>https://dev.to/pytorch-ignite/introducing-pytorch-ignite-s-code-generator-v0-2-0-3l46</link>
      <guid>https://dev.to/pytorch-ignite/introducing-pytorch-ignite-s-code-generator-v0-2-0-3l46</guid>
      <description>&lt;p&gt;Along with the &lt;a href="https://github.com/pytorch/ignite/releases/tag/v0.4.5"&gt;PyTorch-Ignite 0.4.5 release&lt;/a&gt;, we are excited to announce the new release of the web application for generating PyTorch-Ignite's training pipelines. This blog post is an overview of the key features and updates of the &lt;a href="https://github.com/pytorch-ignite/code-generator/releases/tag/v0.2.0"&gt;Code Generator v0.2.0 project release&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deep-learning-as-a-routine"&gt;
  &lt;/a&gt;
  Deep Learning As a Routine
&lt;/h2&gt;

&lt;p&gt;In deep learning applications, neural networks are typically accompanied by code to preprocess the input and output data, visualize the results, define proper training and evaluation pipelines, and more. A significant part of this supporting code consists of reusable components, like data loaders, training loops, logging, and tracking. Therefore, deep learning practitioners usually organize their boilerplate codebases into collections of reusable components to speed up development.&lt;/p&gt;

&lt;p&gt;PyTorch-Ignite is one such practical solution, a high-level library from the PyTorch ecosystem for training neural networks designed to simplify workflow development while maintaining maximum control, flexibility, and reproducibility. PyTorch-Ignite feels like a natural extension to PyTorch.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ignite-your-training-pipelines"&gt;
  &lt;/a&gt;
  Ignite Your Training Pipelines
&lt;/h2&gt;

&lt;p&gt;PyTorch-Ignite's Code Generator is an open-source tool developed to boost your training pipeline's scripts, carefully designed by PyTorch-Ignite's contributors to promote PyTorch-Ignite's best practices. The application has a user-friendly and intuitive web interface, simple enough for day-to-day use, and it is an excellent choice for quickly generating a custom templates for training PyTorch models.&lt;/p&gt;

&lt;p&gt;In this release, we are using a new application development stack to enhance the user experience tenfold. For UI, we switched to a JavaScript stack. The PyTorch and PyTorch-Ignite specific generated code remains the same.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h3&gt;

&lt;p&gt;The best way to "ignite your training pipeline" is to visit Code Generator's &lt;a href="https://code-generator.pytorch-ignite.ai/"&gt;homepage&lt;/a&gt; and select your task's template by clicking on the "Getting Started" button.&lt;/p&gt;

&lt;p&gt;You can choose a template from a list of templates located on the left in the &lt;strong&gt;Templates&lt;/strong&gt; tab. The app will start to render the template with the preconfigured default settings. You will see all the generated files with the rendered code on the right in different tabs as in a regular IDE. The current state of the configurations is reflected partially in the config YAML file.&lt;/p&gt;

&lt;p&gt;Currently, we offer four customizable templates for widely used deep learning tasks: Vision classification and segmentation, Text classification, and DCGAN.&lt;/p&gt;

&lt;p&gt;Start adjusting the code in the template by visiting different tabs on the left side:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Training&lt;/strong&gt;: To turn on Distributed training&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Handlers&lt;/strong&gt;: To set up Checkpointing, Termination on NaNs, Early Stopping, etc&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Loggers&lt;/strong&gt;: To configure Logging&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you choose the appropriate settings, press the "Download" or "Open in Colab" button at the top to export generated code as a zip archive or a notebook, and follow any given additional steps. The resulting archive contains generated files bundled together. The &lt;code&gt;requirements.txt&lt;/code&gt; file contains all the required dependencies, and the &lt;code&gt;README&lt;/code&gt; contains all the necessary information for launching the script.&lt;/p&gt;

&lt;p&gt;You are now ready to add in your data and model and run the code!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#i-want-to-contribute"&gt;
  &lt;/a&gt;
  I Want To Contribute!
&lt;/h2&gt;

&lt;p&gt;We encourage open source contributors from both frontend and data science communities to collaborate on the project. If you are interested, please visit the &lt;a href="https://github.com/pytorch-ignite/code-generator/blob/main/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt;. If you have any questions, do not hesitate to ask them on our &lt;a href="https://discord.com/invite/djZtm3EmKj"&gt;Discord&lt;/a&gt;. Here are some &lt;a href="https://github.com/pytorch-ignite/code-generator/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22"&gt;good first issues&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;In future releases, we plan to extend our template store and add more features, for example, configuration systems, data loaders, datasets and models, optimizers, and schedulers. We will continue improving the app's reliability and usability. To stay in touch, follow us on &lt;a href="https://twitter.com/pytorch_ignite"&gt;Twitter&lt;/a&gt; and &lt;a href="https://facebook.com/PyTorch-Ignite-Community-105837321694508"&gt;Facebook&lt;/a&gt;. We would love to get your feedback on the project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#acknowledgements"&gt;
  &lt;/a&gt;
  Acknowledgements
&lt;/h2&gt;

&lt;p&gt;The development of this project is supported by a NumFOCUS Small Development Grant. We are very grateful to them for this support!&lt;/p&gt;

</description>
      <category>deeplearning</category>
      <category>machinelearning</category>
      <category>pytorchignite</category>
      <category>codegenerator</category>
    </item>
    <item>
      <title>Introducing JekyllEx - The easiest way to manage a Jekyll blog from an Android device!</title>
      <author>Gourav Khunger</author>
      <pubDate>Tue, 31 Aug 2021 10:29:10 +0000</pubDate>
      <link>https://dev.to/gouravkhunger/introducing-jekyllex-the-easiest-way-to-manage-a-jekyll-blog-from-an-android-device-1f84</link>
      <guid>https://dev.to/gouravkhunger/introducing-jekyllex-the-easiest-way-to-manage-a-jekyll-blog-from-an-android-device-1f84</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This is a copy-pasta from &lt;a href="https://genicsblog.com"&gt;my blog&lt;/a&gt;. Consider &lt;a href="https://genicsblog.com/introducing-jekyllex-android-app"&gt;reading the article there&lt;/a&gt; for a better experience and save time by listening to the audio version.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hello, awesome people! &lt;/p&gt;

&lt;p&gt;Today I present to you my latest project - &lt;a href="https://jekyllex.xyz"&gt;JekyllEx&lt;/a&gt;, which I have been working on for the &lt;a href="https://townhall.hashnode.com/auth0-hackathon"&gt;Hashnode Auth0 August Hackathon&lt;/a&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#detailed-background"&gt;
  &lt;/a&gt;
  üéä Detailed Background
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;TLDR&lt;/strong&gt;: I built JekyllEx because Jekyll(a static site generator) has a lot of potentials, but the learning curve for a non-tech-savvy person was high. &lt;/p&gt;

&lt;p&gt;To bridge the gap, I am presenting JekyllEx which can intuitively manage a Jekyll blog's posts with a much simpler UI and effective editor- using which you don't need to mess with code and commits for any article you write!&lt;/p&gt;




&lt;p&gt;A few months ago, I got to learn about &lt;a href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;, which is a static site generator. In short:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx, or another web server.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This caught my attention in the first go as I am a blogging freak who has been &lt;a href="https://genicsblog.com/introductory-first-post"&gt;testing different blogging solutions for a few years now&lt;/a&gt; üòÜ.&lt;/p&gt;

&lt;p&gt;I used Jekyll in many places, testing things locally and then finally making &lt;a href="https://samdisha.me"&gt;my sister's blog&lt;/a&gt; with it, and helped someone(can't mention) to make a &lt;a href="https://60wordsofwisdom.xyz"&gt;small blog&lt;/a&gt; for him.&lt;/p&gt;

&lt;p&gt;It was just the fact that after initial setup, all we need to do for a new post is write markdown and let Jekyll do the further work... And, since it builds a static site, we can host it for free on Github Pages!&lt;/p&gt;

&lt;p&gt;This seems a good deal for someone, who doesn't want to pay much amount for hosting and themes (if we consider WordPress and alternatives), and just want a minimal site for the content they want to put up.&lt;/p&gt;

&lt;p&gt;So, I went on to make the blog for my sister. But here comes the tricky part. Jekyll is actually hard for non-techy people. For, at least they must understand basic coding principles and some web dev to be able to understand what goes on in their Jekyll theme and posts.&lt;/p&gt;

&lt;p&gt;This was the birth of &lt;strong&gt;JekyllEx&lt;/strong&gt;, a solution to a problem that isn't solved because Jekyll hasn't that vast of a community for it to have such solutions. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Jekyll is used by 0.1% of all the websites&lt;/strong&gt; whose content management system we know. This is 0.1% of all websites.&lt;/p&gt;

&lt;p&gt;~ &lt;a href="https://w3techs.com/technologies/details/cm-jekyll"&gt;w3techs.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I had the idea of making a blog manager app for Jekyll, partly because I hadn't coded in a while because of my studies, and partly because my sister would eat my head if there's any single typo in her blog post because I was the one who managed it üòÜ. I had to edit, preview, test, and commit for such small things which seemed tedious.&lt;/p&gt;

&lt;p&gt;I was just procrastinating making this cool project, but as soon as I heard about Auth0, and how easily they let integrating login functionality in an app, I was pretty sure I would be using it. And coincidently, Hashnode partnered with Auth0 to organize the august hackathon challenge and that provided the motivation to work on the project!&lt;/p&gt;

&lt;p&gt;JekyllEx wouldn't be made such a short amount of time if Hashnode hadn't partnered with Auth0 to present this hackathon. That's because JekyllEx depends on Github API, and integration with GitHub is in turn provided by Auth0. JekyllEx, at its core, uses the GitHub API to manage jekyll repositories.&lt;/p&gt;

&lt;p&gt;To put things in a better structure, these were the points that lead me to make JekyllEx:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;My sister personally needed an intuitive manager app for her Jekyll blog, using which she can do things from her phone itself.&lt;/li&gt;
&lt;li&gt;I wanted to get my hands dirty on some project as I hadn't coded for a while&lt;/li&gt;
&lt;li&gt;I also wanted to do something for this blog, as it had been inactive for some months because I couldn't get the time to post anything üòÖ&lt;/li&gt;
&lt;li&gt;Hashnode's august hackathon in partnership with Auth0 provided the zeal required to start a new project!&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#introducing-jekyllex"&gt;
  &lt;/a&gt;
  üöÄ Introducing JekyllEx
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5WMbhD5Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630347657127/VGBAZJ7zN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5WMbhD5Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630347657127/VGBAZJ7zN.png" alt="round_logo.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;JekyllEx is the new way to write articles for a Jekyll blog. It is an android app using which you can create/edit/delete posts for the blog hosted at Github Pages.&lt;/p&gt;

&lt;p&gt;Download and install the &lt;a href="https://github.com/jekyllex/jekyllex-android/releases/latest"&gt;latest release&lt;/a&gt; of the app to start relishing the power of blogging from your mobile!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#some-handy-links"&gt;
  &lt;/a&gt;
  üîó Some Handy Links:
&lt;/h3&gt;

&lt;p&gt;Before the App tour, let me give you the links to different resources that revolve around JekyllEx and will be referred to, later in the post.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#github-repsitories"&gt;
  &lt;/a&gt;
  GitHub Repsitories
&lt;/h4&gt;

&lt;p&gt;Go smash a star on all of 'em üòÜ. If not all, do star the app's repository üòÄ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GitHub Organisation: &lt;a href="https://github.com/jekyllex"&gt;https://github.com/jekyllex&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;JekyllEx Android App: &lt;a href="https://github.com/jekyllex/jekyllex-android"&gt;https://github.com/jekyllex/jekyllex-android&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Proxy API: &lt;a href="https://github.com/jekyllex/jekyllex-api"&gt;https://github.com/jekyllex/jekyllex-api&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Demo blog: &lt;a href="https://github.com/gouravkhunger/demo-jekyll-blog"&gt;https://github.com/gouravkhunger/demo-jekyll-blog&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#others"&gt;
  &lt;/a&gt;
  Others
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://jekyllex.xyz"&gt;https://jekyllex.xyz&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Documentation: &lt;a href="https://docs.jekyllex.xyz"&gt;https://docs.jekyllex.xyz&lt;/a&gt; (under construction)&lt;/li&gt;
&lt;li&gt;API: &lt;a href="https://api.jekyllex.xyz"&gt;https://api.jekyllex.xyz&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Demo blog used for testing Jekyll app: &lt;a href="https://demo.jekyllex.xyz"&gt;https://demo.jekyllex.xyz&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#app-tour"&gt;
  &lt;/a&gt;
  üîé App Tour
&lt;/h2&gt;

&lt;p&gt;This section showcases the UI of the JekyllEx app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#authentication"&gt;
  &lt;/a&gt;
  Authentication
&lt;/h3&gt;

&lt;p&gt;This is the auth page where the user must connect his GitHub account with JekyllEx to authorize the App to manage the blog repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7r0ZHyQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630351766117/Q5GSw4BdA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7r0ZHyQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630351766117/Q5GSw4BdA.png" alt="jekyllex-auth-page.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#home-page"&gt;
  &lt;/a&gt;
  Home Page
&lt;/h3&gt;

&lt;p&gt;The home page of the app lists all your repositories on the home page, so you can choose the repository that has the Jekyll blog in it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XNBi1ldl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630351781213/6x7woWiw8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XNBi1ldl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630351781213/6x7woWiw8.png" alt="jekyllex-home-page.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#posts-page"&gt;
  &lt;/a&gt;
  Posts Page
&lt;/h3&gt;

&lt;p&gt;Clicking on any repository on the Home Page takes you to the Posts page. If the selected repository is a Jekyll blog, then the posts of the blog will be loaded, else an error will be shown that the repository isn't a Jekyll project.&lt;/p&gt;

&lt;p&gt;Implementing the logic of loading posts from the &lt;code&gt;_posts&lt;/code&gt; folder in the repository was a bit tricky, it took me around 1-2 hours to come up with a solution. More on this later in the post!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n2PKCo7r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630355745666/OuiVtnSgk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n2PKCo7r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630355745666/OuiVtnSgk.png" alt="jekyllex-posts-page.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#new-post"&gt;
  &lt;/a&gt;
  New Post
&lt;/h3&gt;

&lt;p&gt;From the posts page, you can create a new post by pressing the icon on the top right representing "New Post".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VFrmdmiC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630355869755/bv7Unn3vJ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VFrmdmiC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630355869755/bv7Unn3vJ.png" alt="jekyllex-new-post.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-editor"&gt;
  &lt;/a&gt;
  The Editor
&lt;/h3&gt;

&lt;p&gt;This is the core page of the app where a user can edit and preview the markdown post being rendered live, and also set post metadata. Meta Data in a Jekyll post is a collection of some variables that define specifics about a post like its &lt;code&gt;Title&lt;/code&gt;, &lt;code&gt;Description&lt;/code&gt;, &lt;code&gt;Summary&lt;/code&gt;...&lt;/p&gt;

&lt;p&gt;These fields are then used by the installed Jekyll theme to present the posts in the rendered HTML accordingly...&lt;/p&gt;

&lt;p&gt;The Editor has two tabs- the &lt;strong&gt;EDIT FILE&lt;/strong&gt; tab and the &lt;strong&gt;PREVIEW CHANGES&lt;/strong&gt; tab. As the text is entered in the editing pane, it gets auto rendered on the preview pane live.&lt;/p&gt;

&lt;p&gt;Another feature of the editor is synchronized scrolling, that is, as soon as one scrolls down in the editing pane, the preview pane scrolls by the same unit so that the editor and the preview show pretty much the same thing and provide a seamless experience of editing.&lt;/p&gt;

&lt;p&gt;This is really helpful if the post file is large and the sections that are to be edited are far away, in such scenarios, synchronized scrolling helps a lot.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m2ykgmJ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630355928541/fYHl0Gzkr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m2ykgmJ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630355928541/fYHl0Gzkr.png" alt="jekyllex-editing-page.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#profile-page"&gt;
  &lt;/a&gt;
  Profile Page
&lt;/h3&gt;

&lt;p&gt;The app has a cool profile page that shows user information that it receives from the GitHub API. Once the data is fetched, it is cached and saved to a local room database. But the user can force refresh the profile from the menu too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dmbzoii8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630355109995/TcAVSCdzsQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dmbzoii8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630355109995/TcAVSCdzsQ.png" alt="jekyllex-profile-page.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#some-other-sections"&gt;
  &lt;/a&gt;
  Some other sections
&lt;/h3&gt;

&lt;p&gt;These are some of the things that were left in the above images, so included aside:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BI_Iag72--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630356234366/bxtpJ84ko.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BI_Iag72--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630356234366/bxtpJ84ko.png" alt="jekyllex-other.png"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#%F0%9F%9B%A0-technical-details"&gt;
  &lt;/a&gt;
  üõ† Technical Details
&lt;/h2&gt;

&lt;p&gt;The codebase of the app is based on the MVVM pattern. Here's a list of tools/libraries/components JekyllEx uses:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#frontend"&gt;
  &lt;/a&gt;
  Frontend
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#platform"&gt;
  &lt;/a&gt;
  Platform
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Android&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#languages-used"&gt;
  &lt;/a&gt;
  Languages Used
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Kotlin&lt;/li&gt;
&lt;li&gt;XML&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#libraries"&gt;
  &lt;/a&gt;
  Libraries
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Android Architecture Components&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://auth0.com/"&gt;Auth0&lt;/a&gt; : For user authentication&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/square/retrofit"&gt;Retrofit&lt;/a&gt; : For network requests&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.android.com/training/data-storage/room"&gt;Room&lt;/a&gt; : For local database and caching user profile&lt;/li&gt;
&lt;li&gt;Kotlin extensions and Coroutines for Room&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/noties/Markwon"&gt;Markwon&lt;/a&gt; : Markdown rendering&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/javiersantos/AppUpdater"&gt;App Updater&lt;/a&gt; : To check for updates from GitHub Releases&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bumptech/glide"&gt;Glide&lt;/a&gt; : For image loading.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://firebase.google.com/"&gt;Firebase&lt;/a&gt; : For push notifications, analytics and crashlytics.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#mad-score"&gt;
  &lt;/a&gt;
  M.A.D. Score
&lt;/h4&gt;

&lt;p&gt;JekyllEx has a &lt;a href="https://goo.gle/MADscore"&gt;M.A.D.&lt;/a&gt; score of MAD legend, the Greatest Of All Time of Android development.&lt;/p&gt;

&lt;p&gt;Check out the &lt;a href="https://madscorecard.withgoogle.com/scorecards/878880162/"&gt;score card&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o_aAzWTX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630400803535/RMu_MMtyW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o_aAzWTX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630400803535/RMu_MMtyW.png" alt="jekyllex-mad-score-summary.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#backend"&gt;
  &lt;/a&gt;
  Backend
&lt;/h3&gt;

&lt;p&gt;Language: &lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;JekyllEx uses a proxy API to securely retrieve user information from Auth0 Management API &lt;a href="https://auth0.com/docs/connections/calling-an-external-idp-api#from-the-frontend"&gt;as recommended in the Auth0 docs&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;The API is built using express and is hosted on Heroku.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#license"&gt;
  &lt;/a&gt;
  üõ°Ô∏è License
&lt;/h3&gt;

&lt;p&gt;This project is &lt;a href="https://github.com/jekyllex/jekyllex-android/blob/main/LICENSE"&gt;&lt;code&gt;MIT&lt;/code&gt;&lt;/a&gt; licensed.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#development-journey"&gt;
  &lt;/a&gt;
  üë®üèª‚Äçüíª Development Journey
&lt;/h2&gt;

&lt;p&gt;Developing JekyllEx was a lot of fun because it involved learning new things!&lt;/p&gt;

&lt;p&gt;I completed most of the UI in 3 days, then took some time to figure out the Proxy API thing. It was completely new for me so I had to struggle a bit for 2 days to understand how Express APIs work.&lt;/p&gt;

&lt;p&gt;Then I made the different features by integrating GitHub API. Authorization was effortlessly handled by Auth0! I used the Retrofit library to do all the networking stuff like API calls, handling responses, etc.&lt;/p&gt;

&lt;p&gt;I quickly made a &lt;a href="https://demo.jekyllex.xyz"&gt;demo blog&lt;/a&gt; with a minimal theme and tested features of JekyllEx once it was done.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#challenges"&gt;
  &lt;/a&gt;
  üòé Challenges
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#making-the-proxy-api"&gt;
  &lt;/a&gt;
  Making the Proxy API
&lt;/h3&gt;

&lt;p&gt;The biggest challenge I faced during development was building the proxy API, which was needed to securely retrieve user credentials.&lt;/p&gt;

&lt;p&gt;I had to look through a lot of articles to understand how Node.js works and how would I get my API to work.&lt;/p&gt;

&lt;p&gt;With considerable theoretical help from @&lt;a href="https://dev.to@SamJakob"&gt;SamJakob&lt;/a&gt;, I got clarity and could proceed to start developing the API.&lt;/p&gt;

&lt;p&gt;To get user profiles from Auth0 Management API, we first get an access token that can be used to retrieve the profile.&lt;/p&gt;

&lt;p&gt;I use this snippet to refresh the Auth0 access token periodically:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Function to renew Auth0 Management API access token&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getAccessToken&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// time after which token must be refreshed, It will be updated later&lt;/span&gt;
  &lt;span class="nx"&gt;refreshAfter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// required parameter to pass to Auth0 Management API OAuth&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;client_id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CLIENT_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;client_secret&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CLIENT_SECRET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;audience&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AUTH0_AUDIENCE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;grant_type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GRANT_TYPE&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="c1"&gt;// axios request to get the access token&lt;/span&gt;
  &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`https://&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AUTH0_DOMAIN&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/oauth/token`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Overwrite Axios' automatically set Content-Type&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// get the access token&lt;/span&gt;
    &lt;span class="nx"&gt;accessToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;access_token&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// token must refresh every 10 minutes before the expiration time&lt;/span&gt;
    &lt;span class="nx"&gt;refreshAfter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;expires_in&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// refresh the token&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getAccessToken&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;refreshAfter&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;accessToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// execute the function for the first time&lt;/span&gt;
&lt;span class="nx"&gt;getAccessToken&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This refreshes the Auth0 Management API access token 10 minutes before it expires. This token can be used to query the API to get details of a specific user.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-files-from-the-raw-posts-endraw-folder"&gt;
  &lt;/a&gt;
  Getting files from the &lt;code&gt;_posts&lt;/code&gt; folder
&lt;/h3&gt;

&lt;p&gt;It feels good to give yourself a pat on the shoulders when you do something good, and that also boosts your motivation to strive and do better than ever. I felt this when making the logic for retrieving all the files under the &lt;code&gt;_post&lt;/code&gt; folder(Jekyll blogs need a &lt;code&gt;_post&lt;/code&gt; folder with &lt;code&gt;md&lt;/code&gt; files) &lt;/p&gt;

&lt;p&gt;When we query for items at a particular path in a repository, the GitHub API returns a list of items present there. &lt;/p&gt;

&lt;p&gt;So it seems simple that the files will be there in the &lt;code&gt;_posts&lt;/code&gt; folder and we can query the content present there from the API and show the posts to the user.&lt;/p&gt;

&lt;p&gt;But this is not the case. The thing is, Jekyll looks for markdown files in the _posts folder on nested folders too. That means if someone has a file at the following path:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;_posts/android/2021-08-29-introduction-to-android.md
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;that will also be considered a valid post, even though it is in the &lt;code&gt;android&lt;/code&gt; subdirectory. So to solve this problem, we could query the GitHub API recursively, as we get the path of a folder when it is returned from the API.&lt;/p&gt;

&lt;p&gt;Here's a snippet of how I am achieving this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Function to get the content of the repository at a specific path inside it.&lt;/span&gt;
&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;getContentFromPath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;shouldPost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;repoName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;accessToken&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;
&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;RepoContentItemModel&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;postsArray&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arrayListOf&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;RepoContentItemModel&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
    &lt;span class="nf"&gt;runBlocking&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;response&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getRepoContent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repoName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;accessToken&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isSuccessful&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;forEach&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s"&gt;"file"&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;postsArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="s"&gt;"dir"&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;nextLevel&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;getContentFromPath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;repoName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;accessToken&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="n"&gt;postsArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;addAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nextLevel&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shouldPost&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;postsArray&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;hasPosts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;postsArray&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What this code does is, it takes some parameters such as &lt;code&gt;repoName&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt; to query for the content at the path in the provided repository. The &lt;code&gt;shouldPost&lt;/code&gt; variable dictates whether all the folders have been checked or not. Once all the folders have been queried, then it returns the array of posts, else it keeps on querying for folders sequentially- one level at a time.&lt;/p&gt;

&lt;p&gt;Notice &lt;code&gt;runBlocking&lt;/code&gt;, it is used to carry out the tasks defined in the block, on the main thread, because if the folders are queried from the coroutines(that carry out code asynchronously), then there can be errors when the posts are returned by GitHub API, consider this case:&lt;/p&gt;

&lt;p&gt;There are two folders- both are queried from separate threads, the problem here is, suppose the API didn't return content for the first folder but returned content for the second folder faster than the first one, now since there are only 2 folders, the function would return the posts array as all folders have been marked as queried...&lt;/p&gt;

&lt;p&gt;And if by chance the API returns content for the second folder, this could lead to a crash, as the posts folder has already been returned. Also, if not a crash, this could lead to missing posts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#synchronizing-editor-with-the-preview-tab"&gt;
  &lt;/a&gt;
  Synchronizing Editor With the Preview Tab
&lt;/h3&gt;

&lt;p&gt;The idea of synchronizing came to me when I once edited a markdown file in visual studio code, there was a markdown plugin that actually scrolled the preview by the same distance as the editing screen would.&lt;/p&gt;

&lt;p&gt;So I thought of implementing it in JekyllEx too, as that would be a really handy feature.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;MutableLiveData&lt;/code&gt;, when used in a &lt;code&gt;ViewModel&lt;/code&gt; easily, allows emitting data that can be observed from Activities/Fragments. I used it to store the scroll distance as soon as the user scrolls inside the Editing tab, and it was observed by the Preview Fragment and was configured to set the scroll of the preview the same.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-editorviewmodelkt-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;EditorViewModel.kt&lt;/code&gt;
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="c1"&gt;// other stuff...&lt;/span&gt;

&lt;span class="c1"&gt;// Observable live data variables.&lt;/span&gt;
&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;scrollDist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;MutableLiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nf"&gt;lazy&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nc"&gt;MutableLiveData&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// other variables&lt;/span&gt;

&lt;span class="c1"&gt;// Function to set the Scroll View scroll distance.&lt;/span&gt;
&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;setScrollDist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newDist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;scrollDist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newDist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// other stuff...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#-raw-editingfragmentkt-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;EditingFragment.kt&lt;/code&gt;
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="c1"&gt;// other stuff...&lt;/span&gt;

&lt;span class="c1"&gt;// Synchronize scroll distance with the preview tab.&lt;/span&gt;
&lt;span class="n"&gt;editorBinding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;editorScrollView&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setOnScrollChangeListener&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scrollY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setScrollDist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scrollY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// other stuff...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#-raw-previewfragmentkt-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;PreviewFragment.kt&lt;/code&gt;
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="c1"&gt;// other stuff...&lt;/span&gt;

&lt;span class="c1"&gt;// Observe the scroll dist of the editor area and scroll to that distance.&lt;/span&gt;
&lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scrollDist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;viewLifecycleOwner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;previewBinding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;previewScrollView&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;smoothScrollTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// other stuff...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The same logic was used for text, as soon as text would be edited, it will be observed by the Preview Fragment and set the rendered markdown.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#roadmap"&gt;
  &lt;/a&gt;
  üî• Roadmap
&lt;/h2&gt;

&lt;p&gt;JekyllEx solves the major problem of managing posts. But there exists another problem, one can manage their blog from JekyllEx, but how could they make the Jekyll blog in the first place?&lt;/p&gt;

&lt;p&gt;Well, this is a major feature and it could bring a great change in how Jekyll Blogs are made, transforming from the traditional coding style, migrating to mobile devices. Then everyone could relish the power of Jekyll. Still, in the end, Jekyll remains only for those who don't wish to have big features on their site and want to keep their hosting bills low, but still want the flexibility to be able to change every single bit of their blog.&lt;/p&gt;

&lt;p&gt;On a side note: For those who want to have an awesome newsletter, custom CSS and complete ownership of their blog for free, and still don't want to mess up with code, Hashnode is a really great fit for them! &lt;a href="https://hashnode.com/@gouravkhunger/joinme"&gt;Go sign up now&lt;/a&gt; and start blogging in minutes.&lt;/p&gt;

&lt;p&gt;Here's a list of features I am planning to add to JekyllEx in the future:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add functionality to make a blog using open-source Jekyll Themes directly from the app.&lt;/li&gt;
&lt;li&gt;Add feature to edit pages too.&lt;/li&gt;
&lt;li&gt;Add the "Continue where you left off" feature.&lt;/li&gt;
&lt;li&gt;Improve the Meta Data editor to a more intuitive chip-based editor rather than a text box.&lt;/li&gt;
&lt;li&gt;Allow editing &lt;code&gt;config.yml&lt;/code&gt; file from the App.&lt;/li&gt;
&lt;li&gt;Save deleted posts to local DB to act as a restore point if deleted in error.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;If possible&lt;/strong&gt;, make a section to share your article with other JekyllEx users, like a community sort of thing.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#real-usage"&gt;
  &lt;/a&gt;
  üí° Real Usage
&lt;/h2&gt;

&lt;p&gt;JekyllEx is already being used to manage:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://samdisha.me"&gt;The personal blog of my sister&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://60wordsofwisdom.xyz"&gt;60 w.o.w blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you use JekyllEx and want to get some backlinks and referral, you can get listed here by comment your experience with using JekyllEx and providing a link to your blog!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  üòä Final Words
&lt;/h2&gt;

&lt;p&gt;On an ending note, I would say making JekyllEx for this hackathon was extremely fun. I couldn't have put myself to learn more new things if I would have procrastinated more. I also made really good new friends on the hashnode server.&lt;/p&gt;

&lt;p&gt;I would really appreciate it if you could take a moment and comment on your views on my project! Also, react to the post to spread some love :)&lt;/p&gt;

&lt;p&gt;All kinds of feedbacks are welcome üòÑ&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  üåè Connect with me!
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Hashnode: &lt;a href="https://hashnode.com/@gouravkhunger"&gt;&lt;code&gt;@gourav_khunger&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;StackOverflow: &lt;a href="https://stackoverflow.com/users/9819031"&gt;&lt;code&gt;Gourav&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href="https://twitter.com/gourav_khunger"&gt;&lt;code&gt;@gourav_khunger&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Instagram: &lt;a href="https://instagram.com/"&gt;&lt;code&gt;@_gourav.khunger_&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Youtube: &lt;a href="https://www.youtube.com/channel/UCkv-J_D8jK2N02nBcyM92mQ"&gt;&lt;code&gt;Gourav Khunger&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Discord: &lt;code&gt;gourav#2215&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>jekyll</category>
      <category>blogging</category>
      <category>auth0</category>
      <category>android</category>
    </item>
    <item>
      <title>Top 10+ Open Source VueJS Admin Templates 2021ü§©</title>
      <author>themeselection</author>
      <pubDate>Tue, 31 Aug 2021 10:24:52 +0000</pubDate>
      <link>https://dev.to/theme_selection/top-10-open-source-vuejs-admin-templates-2021-4c7j</link>
      <guid>https://dev.to/theme_selection/top-10-open-source-vuejs-admin-templates-2021-4c7j</guid>
      <description>&lt;p&gt;Following are the best open source vuejs admin templates. Before we start the collection let's know about VueJS in short.&lt;/p&gt;

&lt;p&gt;As we all know, &lt;a href="https://vuejs.org/"&gt;Vue.js&lt;/a&gt; is one of the best open-source JavaScript frameworks for building user interfaces on the web. Besides, in comparison to other complex front-end frameworks like Angular, Backbone, React, etc, it is very small and lightweight, and easy to use. &lt;/p&gt;

&lt;p&gt;Besides, Vue.js is quickly gaining popularity among developers so as &lt;strong&gt;&lt;a href="https://themeselection.com/products/category/vuejs-admin-templates/"&gt;VueJS admin templates&lt;/a&gt;&lt;/strong&gt;. Thus, it is a great choice to build good and functional user interfaces. By using it, you can build fast, responsive, reactive admin dashboards.&lt;/p&gt;

&lt;p&gt;Furthermore, the majority of popular brands trust their web applications with Vue. Hence, it can be a good choice for you to utilize it for your business. In that case, you must pick the most appropriate and open source VueJS admin template for your next projects.&lt;/p&gt;

&lt;p&gt;So, we decided to collect some of the best Open source Vuejs admin templates to save your precious time. &lt;/p&gt;

&lt;p&gt;Now, let's begin the collection of best open source vuejs admin templates.üî•&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Disclosure&lt;/em&gt;  -  &lt;strong&gt;This post contains affiliate links&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you use these links to buy something (no additional cost to you) we may earn a commission. &lt;strong&gt;Thank you!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fJTZwEsc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ehzbvj7y8znoipvqa284.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fJTZwEsc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ehzbvj7y8znoipvqa284.gif" alt="let's do it gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#materio-free-vuetify-vuejs-admin-template-free-amp-best"&gt;
  &lt;/a&gt;
  &lt;a href="https://themeselection.com/products/materio-free-vuetify-vuejs-admin-template/"&gt;Materio ‚Äì Free Vuetify Vuejs Admin Template&lt;/a&gt; (FreeüéÅ &amp;amp; Bestü§©)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://themeselection.com/products/category/vuejs-admin-templates/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J_0u5lN0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6pnnvpdi5zmy122z8fp5.png" alt="open source vuejs admin template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://themeselection.com/products/materio-free-vuetify-vuejs-admin-template/"&gt;&lt;strong&gt;Materio Free VueJS Vuetify Admin Dashboard Template&lt;/strong&gt;&lt;/a&gt; ‚Äì is the latest developer-friendly ü§òüèª &amp;amp; highly customizable‚ú® Admin Dashboard Template based on &lt;a href="https://vuetifyjs.com/en/"&gt;Vuetify&lt;/a&gt; for developers. This open source vuejs admin template is enriched with features and a highly customizableü§©.Besides, the highest industry standards are considered to bring you the very best Vuetify admin template that is not just fastüöÄand easy to use, but highly scalable. Offering ultimate convenience and flexibility, you‚Äôll be able to build whatever application you want with very little hassle.&lt;/p&gt;

&lt;p&gt;Furthermore, you can use this one of the best innovative free Vuejs admin templates to create eye-catching, high-quality, and high-performing single-page applications. Besides, your apps will be completely responsive, ensuring they‚Äôll look stunning and function flawlessly on desktops, tablets, and mobile devices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  1 Simple Dashboard, 1 Chart Library&lt;/li&gt;
&lt;li&gt;  Single vertical menu&lt;/li&gt;
&lt;li&gt;  Simple Light/Dark theme&lt;/li&gt;
&lt;li&gt;  Basic Cards, pages, and tables&lt;/li&gt;
&lt;li&gt;  Simple From Elements‚ö°&lt;/li&gt;
&lt;li&gt;  Single vertical menu&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://themeselection.com/demo/materio-vuetify-vuejs-admin-template-free/demo/dashboard"&gt;Demo&lt;/a&gt; &lt;a href="https://themeselection.com/products/materio-free-vuetify-vuejs-admin-template/"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vue-element-admin"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/PanJiaChen/vue-element-admin"&gt;Vue element admin&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--orNM3TmI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p12app98h0oj3au2ftnm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--orNM3TmI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p12app98h0oj3au2ftnm.png" alt="vue element admin"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vue-element-admin&lt;/strong&gt; is a production-ready front-end solution for admin interfaces. Besides, It is based on &lt;a href="https://github.com/vuejs/vue"&gt;Vue&lt;/a&gt; and uses the UI Toolkit &lt;a href="https://github.com/ElemeFE/element"&gt;element-UI&lt;/a&gt;. Furthermore, it is based on the newest development stack of Vue and it has a built-in i18n solution, typical templates for enterprise applications, and lots of awesome features. In addition, it also helps you build large and complex Single-Page Applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Login / Logout&lt;/li&gt;
&lt;li&gt;  Permission Authentication&lt;/li&gt;
&lt;li&gt;  I18n&lt;/li&gt;
&lt;li&gt;  Multiple dynamic themes&lt;/li&gt;
&lt;li&gt;  Dynamic breadcrumb&lt;/li&gt;
&lt;li&gt;  Tags-view (Tab page Support right-click operation)&lt;/li&gt;
&lt;li&gt;  SVG Sprite&lt;/li&gt;
&lt;li&gt;  Mock data and many more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://panjiachen.github.io/vue-element-admin/#/dashboard"&gt;Demo&lt;/a&gt; &lt;a href="https://github.com/PanJiaChen/vue-element-admin"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vuestic-admin"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/epicmaxco/vuestic-admin"&gt;Vuestic Admin&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zLouCDGG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8nc7v1ge32c1lfmhi4y6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zLouCDGG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8nc7v1ge32c1lfmhi4y6.png" alt="vuestic admin"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vuestic admin&lt;/strong&gt; is a free and beautiful Vue.js admin template with 44+ custom UI components.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Powered by Vuestic UI customizable UI library with 44+ components included&lt;/li&gt;
&lt;li&gt;  Original and corporate color schemes&lt;/li&gt;
&lt;li&gt;  Cross-Browser (Chrome, Safari, Firefox, Edge, Opera)&lt;/li&gt;
&lt;li&gt;  Responsive&lt;/li&gt;
&lt;li&gt;  i18n-ready&lt;/li&gt;
&lt;li&gt;  Following Vue.js official style guide&lt;/li&gt;
&lt;li&gt;  No jQuery&lt;/li&gt;
&lt;li&gt;  Forever free and Open Source&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://vuestic.epicmax.co/admin/dashboard"&gt;Demo&lt;/a&gt; &lt;a href="https://github.com/epicmaxco/vuestic-admin"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#corona-vue-free"&gt;
  &lt;/a&gt;
  &lt;a href="https://themeselection.com/go/download-corona-vue-free/"&gt;Corona Vue Free&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--szOAwOF9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3vac4c0ym4s3f6fmom9p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--szOAwOF9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3vac4c0ym4s3f6fmom9p.png" alt="corona vue free"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you‚Äôre a fan of dark mode, then you‚Äôll love Corona Vue Free, a free Vue.js admin template from BootstrapDash. This free Vue admin template comes with an MIT license and is open source. This means you can use it anywhere, modify it however you want, all for free.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://themeselection.com/go/demo-corona-vue-free-admin-template/"&gt;Demo&lt;/a&gt; &lt;a href="https://themeselection.com/go/download-corona-vue-free/"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vuetypescript-admin-template"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/Armour/vue-typescript-admin-template"&gt;Vuetypescript admin template&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gK_PVqj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o013lnwbn773gh08uc0u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gK_PVqj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o013lnwbn773gh08uc0u.png" alt="vue typescript admin template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vue typescript admin template&lt;/strong&gt; is a production-ready front-end solution for admin interfaces based on &lt;a href="https://github.com/vuejs/vue"&gt;Vue&lt;/a&gt;, &lt;a href="https://www.typescriptlang.org/"&gt;typescript&lt;/a&gt;, and UI Toolkit &lt;a href="https://github.com/ElemeFE/element"&gt;element-UI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Powered by[Vuestic UI customizable UI library with 44+ components included&lt;/li&gt;
&lt;li&gt;  Original and corporate color schemes&lt;/li&gt;
&lt;li&gt;  Cross-Browser (Chrome, Safari, Firefox, Edge, Opera)&lt;/li&gt;
&lt;li&gt;  Responsive&lt;/li&gt;
&lt;li&gt;  i18n-ready&lt;/li&gt;
&lt;li&gt;  Following Vue.js official style guide&lt;/li&gt;
&lt;li&gt;  No jQuery&lt;/li&gt;
&lt;li&gt;  Forever free and Open Source&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://armour.github.io/vue-typescript-admin-template/#/dashboard"&gt;Demo&lt;/a&gt; &lt;a href="https://github.com/Armour/vue-typescript-admin-template"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#architectui-vue-free-admin"&gt;
  &lt;/a&gt;
  &lt;a href="https://dashboardpack.com/theme-details/architectui-dashboard-vue-free/"&gt;ArchitectUI Vue Free Admin&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GWRMnQxR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/isk5hmk64a0l9ugsn0rd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GWRMnQxR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/isk5hmk64a0l9ugsn0rd.png" alt="Architect UI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Equipped with premade pages and elements, ArchitectUI is an outstanding, free VueJS admin template built using Vue/CLI and Bootstrap 4. It contains 9 beautiful dashboards, 15 handpicked Vue widgets, 200+ customized components that are ever ready to boost the web app‚Äôs performance. With ArchitectUI, setting up the layout of your dashboard has never been this amazing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://demo.dashboardpack.com/architectui-vue-free/#/"&gt;Demo&lt;/a&gt; &lt;a href="https://dashboardpack.com/theme-details/architectui-dashboard-vue-free/"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vue-material-admin-template"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/tookit/vue-material-admin"&gt;Vue Material Admin Template&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vJ5meLlh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/icx1kwd0qbd2c9d83561.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vJ5meLlh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/icx1kwd0qbd2c9d83561.png" alt="vue material admin template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vue Material Admin Template is a &lt;a href="https://vuejs.org/index.html/"&gt;Vue&lt;/a&gt; Based Material Design Admin Template. And use &lt;a href="https://vuetifyjs.com/"&gt;Vuetifyjs&lt;/a&gt; as the base framework. Vuetify is Awesome.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://vma.isocked.com/#/dashboard"&gt;Demo&lt;/a&gt; &lt;a href="https://github.com/tookit/vue-material-admin"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#core-ui-vue-free"&gt;
  &lt;/a&gt;
  &lt;a href="https://themeselection.com/go/download-coreui-vuejs-admin/"&gt;Core UI Vue Free&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--faBAd96K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bykxeuztky7gjcen230x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--faBAd96K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bykxeuztky7gjcen230x.png" alt="Core UI Vue Free"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CoreUI delivers everything you need to build modern, beautiful, responsive apps. Save thousands of development hours by using ready-made, reusable, and commonly used widgets and UI components. Moreover, CoreUI Vue Admin Template is delivered with a ready-to-use environment, so you don't have to waste time configuring the project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://themeselection.com/go/demo-coreui-vuejs-admin-template/"&gt;Demo&lt;/a&gt; &lt;a href="https://themeselection.com/go/download-coreui-vuejs-admin/"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pro Version: &lt;a href="https://themeselection.com/go/download-core-ui-vue-pro/"&gt;CoreUI Vue Pro&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#xtreme-vuesax-admin-lite"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.wrappixel.com/templates/xtreme-vuesax-admin-lite/"&gt;Xtreme Vuesax Admin Lite&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pp9MjweX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dzl5ncntfy7eonl36h6y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pp9MjweX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dzl5ncntfy7eonl36h6y.png" alt="Xtreme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Xtreme Vuesax Admin Lite is a free Vuejs admin template with a clean, modern and distraction-free design. You can utilize the tool for an assortment of different applications and projects as it easily caters to various objectives. Whether you are working on your thing or your client‚Äôs, with Xtreme Vuesax Admin Lite, you can now take care of the admin panel sooner rather than later. Avoid starting from the ground up when you can benefit from a powerful and free template.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://demos.wrappixel.com/free-admin-templates/vuejs/xtreme-vuejs-free/landingpage/index.html"&gt;Demo&lt;/a&gt; &lt;a href="https://www.wrappixel.com/templates/xtreme-vuesax-admin-lite/"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sing-app-vue-dashboard"&gt;
  &lt;/a&gt;
  &lt;a href="https://flatlogic.com/templates/sing-app-vue-dashboard"&gt;Sing app vue dashboard&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lTUc1n17--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0vdm41lvopg6zucw3vv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lTUc1n17--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0vdm41lvopg6zucw3vv.png" alt="sing app vue dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sing App Vue Dashboard&lt;/strong&gt; is an admin template built with Vue JS 2.5.2 and Bootstrap 4. It is built following the newest development stack of Vue. Besides, the Sing App Vue template is a multipurpose admin template. You can build SASS, E-Commerce, CMS, or CRM platforms.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Static &amp;amp; Hover Sidebar&lt;/li&gt;
&lt;li&gt;  Fully responsive&lt;/li&gt;
&lt;li&gt;  Vue 2.5.2&lt;/li&gt;
&lt;li&gt;  Bootstrap 4&lt;/li&gt;
&lt;li&gt;  Advanced Forms&lt;/li&gt;
&lt;li&gt;  Notifications &amp;amp; Icons&lt;/li&gt;
&lt;li&gt;  Well designed Typography&lt;/li&gt;
&lt;li&gt;  Extensive Documentation&lt;/li&gt;
&lt;li&gt;  Charts &amp;amp; Google Maps&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://flatlogic.github.io/sing-app-vue-dashboard/#/app/dashboard"&gt;Demo&lt;/a&gt; &lt;a href="https://flatlogic.com/templates/sing-app-vue-dashboard"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#materialpro-vuetify-admin-lite"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.wrappixel.com/templates/materialpro-vuetify-admin-lite/"&gt;MaterialPro Vuetify Admin Lite&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6TF0BFvL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/knd4917mhw1xak3aibgi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6TF0BFvL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/knd4917mhw1xak3aibgi.png" alt="material pro vuetify admin lite"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can create high quality and beautiful looking interfaces for your web application or product using our MaterialPro Vuejs Admin Lite. It comes with Google's material based design and some great components, which makes your life much easier when you are creating project. It comes with some nicely designed page templates to help you created new pages easily.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://demos.wrappixel.com/free-admin-templates/vuejs/materialpro-vuejs-free/landingpage/index.html"&gt;Demo&lt;/a&gt; &lt;a href="https://www.wrappixel.com/templates/materialpro-vuetify-admin-lite/"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vue-white-dashboard"&gt;
  &lt;/a&gt;
  &lt;a href="https://themeselection.com/go/download-vue-white-dashboard/"&gt;Vue White Dashboard&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LAhvd5cw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tj8vaza13uslek0dt10v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LAhvd5cw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tj8vaza13uslek0dt10v.png" alt="vue white dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vue Dashboard White&lt;/strong&gt; is a beautiful Bootstrap 4 and Vue.js Admin Dashboard with a huge number of components built to fit together and look amazing. You will save a lot of time going from prototyping to full-functional code because all elements are implemented. Every element has multiple states for colors, styles, hover, focus, that you can easily access and use.*&lt;/p&gt;

&lt;p&gt;&lt;a href="https://themeselection.com/go/demo-sing-app-vue-dashboard-github/"&gt;Demo&lt;/a&gt; &lt;a href="https://themeselection.com/go/download-vue-white-dashboard/"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#star-admin-vue-admin-template"&gt;
  &lt;/a&gt;
  &lt;a href="https://themeselection.com/go/download-star-admin-vue/"&gt;Star admin Vue Admin Template&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fffkR8_N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k9una2ipg142eceeakax.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fffkR8_N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k9una2ipg142eceeakax.png" alt="star admin"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Star Admin Vue Admin Template&lt;/strong&gt; is a free admin template based on Bootstrap 4 and Vue.js. Besides, the template is built using the framework Bootstrap-Vue. Bootstrap-Vue is a framework that implements the Bootstrap 4 components and grid system available for Vue.js. Besides, this template is a completely responsive and mobile-first admin template that provides a great foundation for your Bootstrap + Vue.js project. Furthermore, this remarkably flexible and highly customizable template helps you create an amazing UI for your admin panel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://themeselection.com/go/demo-star-admin-vue/"&gt;Demo&lt;/a&gt; &lt;a href="https://themeselection.com/go/download-star-admin-vue/"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vue-sample-admin-template"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/fatihunlu/vue-admin-template"&gt;Vue sample admin template&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lAo2pgd_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uoy2mltjuh4rggy95l5z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lAo2pgd_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uoy2mltjuh4rggy95l5z.png" alt="vue sample admin"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vue Admin Template&lt;/strong&gt; is a Vue.js Based Admin Template. This template uses the Vuetify components and styles.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://fatihunlu.github.io/vue-admin-template/#/"&gt;Demo&lt;/a&gt; &lt;a href="https://github.com/fatihunlu/vue-admin-template"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#purple-vue-free-admin-template"&gt;
  &lt;/a&gt;
  &lt;a href="https://themeselection.com/go/download-purple-vue-free-admin/"&gt;Purple vue Free admin template&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---TuzRjIV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fl5zm5xd6kij3ppvivr8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---TuzRjIV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fl5zm5xd6kij3ppvivr8.png" alt="Purple Vue Free"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Purple Vue free admin template&lt;/strong&gt; is a free version of the Purple Vue Admin template. It is built with Vue.js. Furthermore, this free-to-use template comes with an MIT license. Use it on all your projects. Besides, the free version itself comes packed with features. This admin dashboard is designed to work perfectly across all the latest browsers. The muted colors make it look attractive while reducing eye strain as well. It is one of the best VueJS admin template GitHub.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://themeselection.com/go/demo-purple-vue-free-admin/"&gt;Demo&lt;/a&gt; &lt;a href="https://themeselection.com/go/download-purple-vue-free-admin/"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vue-admin-dashboard-template"&gt;
  &lt;/a&gt;
  &lt;a href="https://mdbootstrap.com/freebies/vue/admin-dashboard/"&gt;Vue Admin Dashboard Template&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6YxL6gPs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xagg788foe8h7042xtiu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6YxL6gPs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xagg788foe8h7042xtiu.png" alt="Vue admin dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here‚Äôs another free and responsive admin dashboard template built using Bootstrap 4, VueJS and Material Design. It contains different styles of dashboards, data presentations, and numerous insightful components. It‚Äôs ideal to use for personal and commercial use. As it is built with Material Design for Bootstrap it has powerful and free UI kit that has ample 400+ material UI elements, 600+ material icons, 74 CSS animations and so much more. Moreover, this admin template also boasts its awesome look on different screens of the laptop, mobile phone, tablet or desktop.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/previews/free-templates/vue-admin-dashboard/#/"&gt;Demo&lt;/a&gt; &lt;a href="https://mdbootstrap.com/freebies/vue/admin-dashboard/"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dashblocks-vue-material-admin-template"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/slanatech/dashblocks-template"&gt;Dashblocks Vue Material Admin Template&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qJgysj12--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rapgu6doo1o6wsibmtu2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qJgysj12--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rapgu6doo1o6wsibmtu2.png" alt="dashblocks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dashblocks Vue Material Admin Template&lt;/strong&gt; is build based on &lt;a href="https://quasar.dev/"&gt;Quasar Framework&lt;/a&gt;, &lt;a href="https://vuex.vuejs.org/installation.html"&gt;Vuex&lt;/a&gt;, &lt;a href="https://vuejs.org/"&gt;Vuejs&lt;/a&gt;, and &lt;a href="https://github.com/slanatech/dashblocks"&gt;Dashblocks&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://slanatech.github.io/dashblocks-template/#/"&gt;Demo&lt;/a&gt; &lt;a href="https://github.com/slanatech/dashblocks-template"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Well, this was the collection of open source vuejs admin templates, We have tried to cover some of the best open source VueJS admin templates available on net. All the templates are unique in their own way and offer useful components. Although, it depends on your requirements so, list down your priorities and pick from this list.&lt;/p&gt;

&lt;p&gt;Well, VueJS admin templates are getting popular as they are highly responsive and customizable. In addition, these admin templates also allow you to create any kind of web application as per your need and requirements.&lt;/p&gt;

&lt;p&gt;So, we hope this collection helps you find the suitable open source VueJS admin template for your next project. üôÇ Also, don't forget to share this collection.&lt;/p&gt;

</description>
      <category>vue</category>
      <category>opensource</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Top 20 JavaScript tips and tricks to increase your Speed and Efficiency </title>
      <author>Tips and Tricks</author>
      <pubDate>Tue, 31 Aug 2021 10:03:52 +0000</pubDate>
      <link>https://dev.to/csshacker/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-4of9</link>
      <guid>https://dev.to/csshacker/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-4of9</guid>
      <description>&lt;h3&gt;Convenient and useful techniques to reduce the lines of code and pace up your Dev Work!&lt;/h3&gt;
&lt;p&gt;In our daily tasks, we get to write functions such as sorting, searching, finding unique values, passing parameters, swapping values etc, so here I present my list of shorthand techniques to write all of them as a Pro!‚úåüèª&lt;/p&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg"&gt;&lt;img alt="Increase Your Performance" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ftNfvGUp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;JavaScript is truly an awesome languageüíõ to learn and work with. And there can be more than one approach to reach to the same solution for given problem. In this article, we will discuss only the quickest ones.üöÄ&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;These approaches will definitely help you in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reducing the number of LOC(lines of code),&lt;/li&gt;
&lt;li&gt;Coding Competitions,&lt;/li&gt;
&lt;li&gt;Hackathons or&lt;/li&gt;
&lt;li&gt;Other time bound tasks.‚è±&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of these JavaScript Hacks uses techniques from ECMAScript6(ES2015) onwards, though the latest version is ECMAScript11(ES2020).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: All below tricks have been tested on the Console of Google Chrome.&lt;/em&gt;&lt;/p&gt;
&lt;br&gt;Read More: &lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/top-20-javascript-tips-and-tricks/"&gt;Top 20 JavaScript tips and tricks to increase your Speed and Efficiency&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>8 Javascript Tips  That You Should Know</title>
      <author>Abdullah Furkan √ñzbek</author>
      <pubDate>Tue, 31 Aug 2021 10:02:56 +0000</pubDate>
      <link>https://dev.to/afozbek/8-javascript-tips-that-you-should-know-3l29</link>
      <guid>https://dev.to/afozbek/8-javascript-tips-that-you-should-know-3l29</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-numberltgtstring"&gt;
  &lt;/a&gt;
  1. Number&amp;lt;&amp;gt;String
&lt;/h2&gt;

&lt;p&gt;For converting numbers and strings with each other, we can use following methods;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Number &amp;gt; String&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newNum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// String &amp;gt; Number&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;stringNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// New Way&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;numString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// number to string&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;stringNum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// string to number&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-swap-using-destructuring"&gt;
  &lt;/a&gt;
  2. Swap using destructuring
&lt;/h2&gt;

&lt;p&gt;The destructuring assignment syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables.&lt;/p&gt;

&lt;p&gt;We can also use that to swap values fast, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// result -&amp;gt; 2&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// result -&amp;gt; 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-remove-duplicates-from-an-array"&gt;
  &lt;/a&gt;
  3. Remove duplicates from an Array
&lt;/h2&gt;

&lt;p&gt;If we have an array of values and we try to filter unique values we can follow this trick;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;abc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arrayWithUniqueItems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="c1"&gt;// ["1", 2, 3, "abc", 5]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-shorten-the-array-using-length"&gt;
  &lt;/a&gt;
  4. Shorten the array using length
&lt;/h2&gt;

&lt;p&gt;Array has length property which tells how many items inside that list.&lt;/p&gt;

&lt;p&gt;If we change the length property the remaining items will be gone forever;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="c1"&gt;// 10&lt;/span&gt;
&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;

&lt;span class="c1"&gt;// Result: [0, 1, 2, 3]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-combine-objects-using-spread"&gt;
  &lt;/a&gt;
  5. Combine objects using ...spread
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs say you want to combine multiple objects into one object containing them all. The spread operator ( ‚Ä¶ ) is a great way to achieve this!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;b&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;c&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;d&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Combine them using the spread operator            &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;objCombined&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;obj3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Result: {'a': 1, 'b': 2, 'c': 3, 'd': 4}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#6-windowlocation-object"&gt;
  &lt;/a&gt;
  6. window.location object
&lt;/h2&gt;

&lt;p&gt;JavaScript can access the current URL using the window.location object. &lt;br&gt;
And it has all kinds of useful property which we can use;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// JavaScript can access the current URL in parts. For this URL:&lt;/span&gt;
&lt;span class="s2"&gt;`https://furkanozbek.com/example/index.html?s=article`&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;protocol&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;`https:`&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;`furkanozbek.com`&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pathname&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;`/example/index.html`&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;`?s=article`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#7-dynamice-object-properties"&gt;
  &lt;/a&gt;
  7. Dynamice Object Properties
&lt;/h2&gt;

&lt;p&gt;ES6 brought us computed property names that allow property keys of object literals to use expressions. &lt;/p&gt;

&lt;p&gt;By surrounding the key with brackets [], we can use variables as property keys.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fruit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;kiwi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// {fruit: "kiwi"}&lt;/span&gt;

&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;   &lt;span class="c1"&gt;// "kiwi"&lt;/span&gt;
&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fruit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// "kiwi"&lt;/span&gt;

&lt;span class="c1"&gt;// Or&lt;/span&gt;
&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fruit&lt;/span&gt; &lt;span class="c1"&gt;// "kiwi"&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#8-map-substitute"&gt;
  &lt;/a&gt;
  8. map() Substitute
&lt;/h2&gt;

&lt;p&gt;We can also use Array.from() method as the same way map function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dogs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Rio&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mac&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bruno&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jucas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Furr&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Blu&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dogsNames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dogs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// returns [‚ÄúRio‚Äù, ‚ÄúMac‚Äù, ‚ÄúBruno‚Äù, ‚ÄúJucas‚Äù, ‚ÄúFurr‚Äù, ‚ÄúBlu‚Äù]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://modernweb.com/45-javascript-tips-tricks-practices/"&gt;45 Useful JavaScript Tips, Tricks And Best Practices | Modern Web&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/toktoktwan/5-must-know-javascript-tips-tricks-3pm7"&gt;5 Must-know Javascript Tips &amp;amp; Tricks&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/worldindev/8-javascript-tips-tricks-that-no-one-teaches-24g1"&gt;8 JavaScript Tips &amp;amp; Tricks That No One Teaches üöÄ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Web Designer Roadmap 2021</title>
      <author>Tips and Tricks</author>
      <pubDate>Tue, 31 Aug 2021 10:00:15 +0000</pubDate>
      <link>https://dev.to/csshacker/web-designer-roadmap-2021-4i8a</link>
      <guid>https://dev.to/csshacker/web-designer-roadmap-2021-4i8a</guid>
      <description>&lt;h2 id="what-is-a-web-designer"&gt;What is a Web Designer?&lt;/h2&gt;
&lt;p&gt;Are you both creative and technically inclined? You may want to consider a career as a web designer!&lt;/p&gt;
&lt;p&gt;Web designers build or redesign websites. They understand what it takes to make a website functional and easy to use, but also understand what is needed to make it aesthetically appealing to the user.&lt;/p&gt;
&lt;p&gt;Web design is a rapidly growing industry, as digital media has become part of everyone's lives and people rely on the web for their communications, information, shopping, social life, and more.&lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/web-designers-roadmap-2021/&amp;amp;ved=2ahUKEwjqlebL7qryAhUF7HMBHVCiCxQQFnoECBoQAQ&amp;amp;usg=AOvVaw2Oo-ikwNXhEKOFAMaulAH4"&gt;Web Designer Roadmap&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;









</description>
    </item>
    <item>
      <title>Run batch jobs using AWS Batch</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 31 Aug 2021 09:57:00 +0000</pubDate>
      <link>https://dev.to/this-is-learning/aws-batch-ai5</link>
      <guid>https://dev.to/this-is-learning/aws-batch-ai5</guid>
      <description>&lt;p&gt;AWS Batch enables developers, scientists, and engineers to easily and efficiently run hundreds of thousands of batch computing jobs on AWS. AWS Batch dynamically provisions the optimal quantity and type of compute resources (e.g., CPU or memory optimized instances) based on the volume and specific resource requirements of the batch jobs submitted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-batch-job"&gt;
  &lt;/a&gt;
  what is a batch job?
&lt;/h2&gt;

&lt;p&gt;A batch job is a job with a start and end to it as opposed to a continuous job that runs 24X7&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-batch-features"&gt;
  &lt;/a&gt;
  AWS batch features
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Batch processing service at any scale.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It provision the right amount of EC2 instances or Spot instances for processing the batch job based on the volume and the requirements&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You submit or schedule batch jobs and AWS manages the rest&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There run as Docker images.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#use-cases"&gt;
  &lt;/a&gt;
  Use cases
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Pulling data form somewhere at night&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Backups at midnight&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Financial data processing each day&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>devops</category>
    </item>
    <item>
      <title>Best CSS Shorthand properties </title>
      <author>Tips and Tricks</author>
      <pubDate>Tue, 31 Aug 2021 09:56:43 +0000</pubDate>
      <link>https://dev.to/csshacker/best-css-shorthand-properties-381p</link>
      <guid>https://dev.to/csshacker/best-css-shorthand-properties-381p</guid>
      <description>&lt;h1&gt;Shorthand properties&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Shorthand properties&lt;/em&gt;&lt;/strong&gt;¬†are CSS properties that let you set the values of multiple other CSS properties simultaneously. Using a shorthand property, you can write more concise (and often more readable) style sheets, saving time and energy.&lt;/p&gt;
&lt;p&gt;The CSS specification defines shorthand properties to group the definition of common properties acting on the same theme. For instance, the CSS¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background"&gt;&lt;code&gt;background&lt;/code&gt;&lt;/a&gt;¬†property is a shorthand property that's able to define the values of¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-color"&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/a&gt;,¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-image"&gt;&lt;code&gt;background-image&lt;/code&gt;&lt;/a&gt;,¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-repeat"&gt;&lt;code&gt;background-repeat&lt;/code&gt;&lt;/a&gt;, and¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-position"&gt;&lt;code&gt;background-position&lt;/code&gt;&lt;/a&gt;. Similarly, the most common font-related properties can be defined using the shorthand¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/font"&gt;&lt;code&gt;font&lt;/code&gt;&lt;/a&gt;, and the different margins around a box can be defined using¬†&lt;span&gt;¬†the&lt;/span&gt;&lt;span&gt;¬†&lt;/span&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/margin"&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/a&gt;&lt;span&gt;¬†&lt;/span&gt;&lt;span&gt;shorthand.¬†¬†&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/best-css-shorthand-properties/&amp;amp;ved=2ahUKEwjIoPCc99DyAhU7-nMBHUxQDrYQFnoECEAQAQ&amp;amp;usg=AOvVaw23jKjWtvmnvAtDmQi7vhZp&amp;amp;cshid=1630058051965"&gt;CSS Shorthand properties for Web Developer&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Trending Javascript Projects for Frontend Developer on GitHub</title>
      <author>Tips and Tricks</author>
      <pubDate>Tue, 31 Aug 2021 09:54:26 +0000</pubDate>
      <link>https://dev.to/csshacker/trending-javascript-projects-for-frontend-developer-on-github-33c8</link>
      <guid>https://dev.to/csshacker/trending-javascript-projects-for-frontend-developer-on-github-33c8</guid>
      <description>&lt;p&gt;The best way to learn a new programming language is to build projects.&lt;/p&gt;
&lt;p&gt;I have created a list of 40 beginner friendly project tutorials in Vanilla JavaScript, React, and TypeScript.&lt;/p&gt;
&lt;p&gt;My advice for tutorials would be to watch the video, build the project, break it apart and rebuild it your own way. Experiment with adding new features or using different methods.&lt;/p&gt;
&lt;p&gt;That will test if you have really learned the concepts or not.&lt;/p&gt;
&lt;p&gt;You can click on any of the projects listed below to jump to that section of the article.&lt;/p&gt;
&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/the-best-beginner-javascript-projects-for-2021/&amp;amp;ved=2ahUKEwikjqzp_tryAhW9ppUCHbDuBT8QtwJ6BAgkEAE&amp;amp;sqi=2&amp;amp;usg=AOvVaw16eIeKYPB8xzH6B1hMi2E6"&gt;Trending Javascript Projects for Frontend Developer¬†on GitHub&lt;/a&gt;&lt;/b&gt;

</description>
    </item>
    <item>
      <title>Intro to asynchrounous javascript: Promises - Async/await</title>
      <author>Hssan Bouzlima</author>
      <pubDate>Tue, 31 Aug 2021 09:53:36 +0000</pubDate>
      <link>https://dev.to/hssanbzlm/intro-to-asynchrounous-javascript-promises-async-await-2ii4</link>
      <guid>https://dev.to/hssanbzlm/intro-to-asynchrounous-javascript-promises-async-await-2ii4</guid>
      <description>&lt;p&gt;In javascript, the code is executed line by line while JS keeps track of the function being called with a call stack.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PROBLEM:&lt;/strong&gt; üò° &lt;/p&gt;

&lt;p&gt;As we mention, JS is single threaded, which means it can execute one commande at a time.&lt;/p&gt;

&lt;p&gt;So, with that being said, if a line of code takes time to be executed, all the rest of code won't execute till this line finish. Which is the case for external api call.&lt;/p&gt;

&lt;p&gt;Then, we want a way to run our code especially long tasks without blocking further code execution. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SOLUTION:&lt;/strong&gt; üòÉ&lt;/p&gt;

&lt;p&gt;We execute long running task in background without blocking the rest of code until we get back a result.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#promises"&gt;
  &lt;/a&gt;
  Promises:
&lt;/h3&gt;

&lt;p&gt;From MDN: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Promise object represents the eventual completion (or failure) of an asynchronous operation and its resulting value. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Promises are simply javascript objects returned the moment we execute asynchrounous task.  &lt;/p&gt;

&lt;p&gt;This object holds mainly three properties: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;onFulfilled:&lt;/em&gt;&lt;/strong&gt; It contains the function to be executed in case of returned data&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;onRejected:&lt;/em&gt;&lt;/strong&gt; It contains the function to be executed in case of error &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;value:&lt;/em&gt;&lt;/strong&gt; Contains data returned by the asynchrounous task, that will be automatically in either onnFulfilled or onRejected function parameter. &lt;/p&gt;

&lt;p&gt;onFulfilled/onRejected functions get notified when data or error returned, then one of them get added to the microtask queue waiting till call stack become empty and the global execution finishes running to be able to run. &lt;/p&gt;

&lt;p&gt;OnFulfilled function is passed to the promise through &lt;em&gt;.then()&lt;/em&gt;, onRejected is passed through &lt;em&gt;.catch()&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;we note that &lt;em&gt;.then()&lt;/em&gt; can hold both of them :&lt;/p&gt;

&lt;p&gt;&lt;em&gt;.then(onFulfill,onReject)&lt;/em&gt;   &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#create-your-promise"&gt;
  &lt;/a&gt;
  CREATE YOUR PROMISE:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createdPromise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;YAY!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;FAIL!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;  

&lt;span class="nx"&gt;createdPromise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;  &lt;span class="c1"&gt;//YAY!&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We create a promise through Promise constructor to wrap a function and make it returns a promise. This function has two callbacks functions: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;resolve:&lt;/em&gt;&lt;/strong&gt; executed when what we were doing succeed &lt;br&gt;
&lt;strong&gt;&lt;em&gt;reject:&lt;/em&gt;&lt;/strong&gt; when it fails &lt;/p&gt;

&lt;p&gt;You can simulate asynchronous execution above by adding settimout function.  &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#promise-execution"&gt;
  &lt;/a&gt;
  PROMISE EXECUTION:
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;runningFor300MiliSeconds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;runningFor200MiliSeconds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;runningFor300MiliSeconds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;futureData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;api-url&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// for 20 ms&lt;/span&gt;
&lt;span class="nx"&gt;futureData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;runningFor200Miliseconds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here in the call stack we have &lt;em&gt;runningFor300MiliSeconds&lt;/em&gt; function running from &lt;em&gt;0 ms&lt;/em&gt; to &lt;em&gt;300 ms&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;From &lt;em&gt;301 ms&lt;/em&gt; fetch function is called and returns a promise object (futureData). &lt;/p&gt;

&lt;p&gt;From &lt;em&gt;302 ms&lt;/em&gt; &lt;em&gt;runningFor200MiliSeconds&lt;/em&gt; function is added to the &lt;em&gt;call stack&lt;/em&gt; and executed till &lt;em&gt;502 ms&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;Meanwhile, in &lt;em&gt;321 ms&lt;/em&gt; futureData value is returned and &lt;em&gt;onFulfilled&lt;/em&gt; function is added to the &lt;em&gt;microtask queue&lt;/em&gt; waiting for the &lt;em&gt;call stack&lt;/em&gt; to become empty.&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;502 ms&lt;/em&gt; &lt;em&gt;runningFor200MiliSeconds&lt;/em&gt; finished running, the call stack is empty then, &lt;em&gt;onFulfilled&lt;/em&gt; function get added to the &lt;em&gt;call stack&lt;/em&gt; and executed.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#asyncawait"&gt;
  &lt;/a&gt;
  Async/Await:
&lt;/h3&gt;

&lt;p&gt;Async/await tries to simplify promises way of handling returned result, through elimating .then/.catch blocks.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;futureData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;api-url&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;futureData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;  

&lt;span class="c1"&gt;// this code is similar to&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;futureData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;api-url&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;futureData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#asynchrounous-javascript-"&gt;
  &lt;/a&gt;
  Asynchrounous Javascript :
&lt;/h3&gt;

&lt;p&gt;Promises and async/await changed the way js works from single threaded blocking execution to non-blocking execution with the help of event loop and microtask queue. &lt;/p&gt;

&lt;p&gt;Hope this quick article make it easier for you to dig deeper in asynchronous javascript concepts and methods. üëè&lt;/p&gt;

&lt;p&gt;‚úåÔ∏è&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/hssanbzlm"&gt;Hssan Bouzlima Github&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/hssanbouzlima/"&gt;Hssan Bouzlima Linkedin&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Web Developer Roadmap 2021</title>
      <author>Tips and Tricks</author>
      <pubDate>Tue, 31 Aug 2021 09:51:10 +0000</pubDate>
      <link>https://dev.to/csshacker/web-developer-roadmap-2021-39dg</link>
      <guid>https://dev.to/csshacker/web-developer-roadmap-2021-39dg</guid>
      <description>&lt;p&gt;&lt;br&gt;A web developer looking at some code on his computer screenHow to Become a Web Developer in 2Technology plays a huge role in our daily lives, from the simplest of apps to the most groundbreaking inventions. Every website or piece of software that we encounter has been built by a web developer‚Äîbut what exactly is web development, and what do they do‚Äîall of this will be answered in this guide to how to become a web developer.&lt;br&gt;To the outside eye, it can seem like a complicated, confusing and somewhat inaccessible field. So, to shed some light on this fascinating industry, we‚Äôve put together the ultimate introduction to web development and what it takes to become a fully-fledged web developer.&lt;br&gt;In this guide, we‚Äôll go through the basics of web development in detail, and show you the essential skills and tools you‚Äôll need to break into the industry. If you decide web development is for you, the next step is to start learning those essential skills, which you can do in this free, online short course designed for beginners.&lt;br&gt;&lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/backend-web-developer-roadmap/&amp;amp;ved=2ahUKEwjOmpvK2NLyAhVJ7HMBHdogAs0QFnoECAwQAQ&amp;amp;usg=AOvVaw0wwwwOEMbJgRlh0aWNwnCj"&gt;Backend Developer Roadmap¬†&lt;/a&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/frontend-web-developer-roadmap/"&gt;Frontend Developer Roadmap¬†&lt;/a&gt;¬†&lt;/b&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/web-developer-roadmap-2021/"&gt;Web Developer Roadmap 2021&lt;/a&gt;¬†&lt;/b&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/web-designers-roadmap-2021/"&gt;Web Designer Roadmap 2021&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
