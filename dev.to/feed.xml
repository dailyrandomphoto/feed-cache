<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How can you embed a simple CODE EDITOR.</title>
      <author>Kavindu Santhusa</author>
      <pubDate>Sun, 03 Oct 2021 11:25:57 +0000</pubDate>
      <link>https://dev.to/ksengine/how-can-you-embed-a-simple-code-editor-1kni</link>
      <guid>https://dev.to/ksengine/how-can-you-embed-a-simple-code-editor-1kni</guid>
      <description>&lt;p&gt;Today we're going to embed an code editor in website.&lt;br&gt;
I found a code editor called codemirror. which is lighter than monaco.&lt;/p&gt;

&lt;blockquote&gt; See my last article -  
&lt;div class="ltag__link"&gt;
  &lt;a href="/ksengine" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qf9ueStI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--873xoY8Q--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/714827/d419ccd6-7e6f-4a23-b3c3-33fc69131069.png" alt="ksengine"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ksengine/embed-vscode-single-file-editor-in-your-website-176j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Embed VSCode single file editor in your website.&lt;/h2&gt;
      &lt;h3&gt;Kavindu Santhusa „Éª Oct 2 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#vscode&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;/blockquote&gt;

&lt;blockquote&gt; **CodeMirror** is a versatile text editor implemented in JavaScript for the browser. It is specialized for editing code, and comes with a number of language modes and addons that implement more advanced editing functionality.&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vFuVTx_a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/codemirror/CodeMirror/raw/master/doc/logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vFuVTx_a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/codemirror/CodeMirror/raw/master/doc/logo.png" alt="Codemirror Logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For features visit &lt;a href="https://codemirror.net/#features"&gt;CodeMirror WebSite&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ksenginew/embed/gORJpQv?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example-explained"&gt;
  &lt;/a&gt;
  Example Explained
&lt;/h2&gt;

&lt;p&gt;The easiest way to use CodeMirror is to simply load the script and style sheet , plus a mode script (Here I'm using Javascript mode script). For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.63.1/codemirror.min.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.63.1/codemirror.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.63.1/mode/javascript/javascript.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then Create a dummy text box for your Editor&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"editor"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  your code here...
&lt;span class="nt"&gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Having done this, an editor instance can be created like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;editor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;CodeMirror&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromTextArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;editor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then enjoy it.&lt;br&gt;
I hope to write more articles with advanced use cases of embedded editor. &lt;br&gt;
Follow üèÉ‚Äç‚ôÇÔ∏è me for more articles.&lt;br&gt;
Asküôè any question on comments section.&lt;br&gt;
Star‚≠ê me if you love this article.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;cover image by &lt;a href="https://unsplash.com/photos/oXlXu2qukGE?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditShareLink"&gt;Unsplash&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Happy Coding üë©‚Äçüíªüë©‚Äçüíªüë©‚Äçüíª...&lt;br&gt;
Thanks. ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>VIM - Beginners Guide</title>
      <author>Vishwa Mittar</author>
      <pubDate>Sun, 03 Oct 2021 10:58:54 +0000</pubDate>
      <link>https://dev.to/vishwasluhana/vim-beginners-guide-274m</link>
      <guid>https://dev.to/vishwasluhana/vim-beginners-guide-274m</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;VIM is a text editor for writing code, where you navigate around the screen with the &lt;strong&gt;Keyboard&lt;/strong&gt; instead of a &lt;strong&gt;Mouse&lt;/strong&gt;.&lt;br&gt;
It is based on original UNIX text editor named &lt;strong&gt;VI&lt;/strong&gt; which came about in 1976 by &lt;em&gt;Bill Joy&lt;/em&gt;. It was later improved by &lt;em&gt;Bram Mooleenar&lt;/em&gt; in 1991 with bunch of improvements and named &lt;strong&gt;VIM&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-vim"&gt;
  &lt;/a&gt;
  Why VIM?
&lt;/h2&gt;

&lt;p&gt;Why would you use VIM when we have modern IDEs? The answer is, when you write code, your fingers should be bound to keyboard all the time. Every time you touch mouse your work rate is interrupted.&lt;br&gt;
Learning to code with VIM is same as learning something new from scratch, it will be painful at first but that pain will lead you to more precise and productive code editing in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;/&lt;strong&gt;MacOS&lt;/strong&gt;: VIM comes preinstalled.&lt;br&gt;
&lt;strong&gt;Windows&lt;/strong&gt;: &lt;a href="https://www.vim.org/download.php"&gt;Download VIM&lt;/a&gt;, Download the installer and install it. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use"&gt;
  &lt;/a&gt;
  How to use
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;/&lt;strong&gt;MacOS&lt;/strong&gt;: Type "vim filename.txt" in terminal (without quotations)&lt;br&gt;
&lt;strong&gt;Windows&lt;/strong&gt;: Open "gVim8.1" from desktop or search in start menu.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vim-modes-press-esc-to-switch-between-modes"&gt;
  &lt;/a&gt;
  Vim Modes (Press &lt;strong&gt;Esc&lt;/strong&gt; to switch between modes)
&lt;/h2&gt;

&lt;p&gt;VIM has many modes, but these four are commonly used:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#normal-mode"&gt;
  &lt;/a&gt;
  Normal mode
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;If you see cursor thicker or little wide, means you're in normal mode.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Normal mode is Vim's default mode and you'll be using it most of the time. When you are in normal mode you can navigate and perform operations throughout the file.&lt;/p&gt;

&lt;p&gt;You can move cursor between characters, words, lines, sentences, paragraphs. code blocks and more.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#characters"&gt;
  &lt;/a&gt;
  Characters
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;"h"&lt;/strong&gt; (move left to character)&lt;br&gt;
&lt;strong&gt;"l"&lt;/strong&gt; (move right to character)&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#words"&gt;
  &lt;/a&gt;
  Words
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;"w"&lt;/strong&gt; (move to next word)&lt;br&gt;
&lt;strong&gt;"e"&lt;/strong&gt; (move the end of current word)&lt;br&gt;
&lt;strong&gt;"b"&lt;/strong&gt; (move back to the previous word)&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#lines"&gt;
  &lt;/a&gt;
  Lines
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;"j"&lt;/strong&gt; (previous line)&lt;br&gt;
&lt;strong&gt;"k"&lt;/strong&gt; (next line)&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#sentences"&gt;
  &lt;/a&gt;
  Sentences
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;"("&lt;/strong&gt; (previous sentence)&lt;br&gt;
&lt;strong&gt;")"&lt;/strong&gt; (next sentence)&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#paragraphs"&gt;
  &lt;/a&gt;
  Paragraphs
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;"{"&lt;/strong&gt; (previous Paragraph)&lt;br&gt;
&lt;strong&gt;"}"&lt;/strong&gt; (next Paragraph)&lt;/p&gt;

&lt;p&gt;For simplification:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8f4IeCto--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o2g9sh1mf3rotebof7yo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8f4IeCto--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o2g9sh1mf3rotebof7yo.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;k&lt;/strong&gt; (up)&lt;br&gt;
&lt;strong&gt;j&lt;/strong&gt; (down)&lt;br&gt;
&lt;strong&gt;h&lt;/strong&gt; (left)&lt;br&gt;
&lt;strong&gt;l&lt;/strong&gt; (right)&lt;br&gt;
You can also use arrow keys to navigate but for best practice you must use (k,j,h,l).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#insert-mode"&gt;
  &lt;/a&gt;
  Insert mode
&lt;/h3&gt;

&lt;p&gt;Press &lt;strong&gt;i&lt;/strong&gt; key in the normal mode to get into &lt;strong&gt;insert&lt;/strong&gt; mode. &lt;em&gt;The word INSERT will appear at the bottom of the screen.&lt;/em&gt;&lt;br&gt;
You can think of it like &lt;em&gt;edit&lt;/em&gt; mode, because now you can write/delete inside the file.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#keys-to-get-into-insert-mode"&gt;
  &lt;/a&gt;
  Keys to get into &lt;em&gt;insert&lt;/em&gt; mode:
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Make sure you're in normal mode then press,&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;i&lt;/strong&gt; (insert from the right of the character)&lt;br&gt;
&lt;strong&gt;a&lt;/strong&gt; (insert from the left of the character)&lt;br&gt;
&lt;strong&gt;I&lt;/strong&gt; (insert from the start of the line)&lt;br&gt;
&lt;strong&gt;A&lt;/strong&gt; (insert from the end of the line)&lt;/p&gt;

&lt;p&gt;Once you are done with editing your file, press &lt;strong&gt;Esc&lt;/strong&gt; key to go back to the normal mode.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#command-mode"&gt;
  &lt;/a&gt;
  Command mode
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Commands can only be typed in **Normal&lt;/em&gt;* mode.*&lt;br&gt;
When you're in normal mode, you can write commands. Every command starts with &lt;strong&gt;":"&lt;/strong&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#basic-commands"&gt;
  &lt;/a&gt;
  Basic commands:
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;:w&lt;/strong&gt; (save file)&lt;br&gt;
&lt;strong&gt;:q&lt;/strong&gt; (quit file. &lt;em&gt;but the file must be saved first&lt;/em&gt;)&lt;br&gt;
&lt;strong&gt;:wq&lt;/strong&gt; (save and quit)&lt;br&gt;
&lt;strong&gt;:q!&lt;/strong&gt; (quit without saving)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;There are many more commands, but these are the common and you'll need these all the time.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#visual-mode"&gt;
  &lt;/a&gt;
  Visual mode
&lt;/h3&gt;

&lt;p&gt;When editing text with Vim, visual mode can be extremely useful for identifying chunks of text to be manipulated.&lt;/p&gt;

&lt;p&gt;Press the &lt;strong&gt;v&lt;/strong&gt; key to enter &lt;strong&gt;visual&lt;/strong&gt; mode. &lt;em&gt;The word VISUAL will appear at the bottom of the screen.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Use the Arrow keys to highlight the desired text. You can use other navigation commands, such as &lt;strong&gt;w&lt;/strong&gt; to highlight to the beginning of the next word or &lt;strong&gt;$&lt;/strong&gt; to include the rest of the line.&lt;br&gt;
Once the text is highlighted, press the &lt;strong&gt;d&lt;/strong&gt; key to delete/cut the text.&lt;br&gt;
If you deleted too much or not enough, press &lt;strong&gt;u&lt;/strong&gt; to undo and start again.&lt;br&gt;
Move your cursor to the new location and press &lt;strong&gt;p&lt;/strong&gt; to paste the text.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tips-and-tricks"&gt;
  &lt;/a&gt;
  Tips and tricks
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;To go forward 3 words, instead of &lt;strong&gt;www&lt;/strong&gt;, we can do &lt;strong&gt;3w&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;To go down 10 lines, instead of &lt;strong&gt;jjjjjjjjjj&lt;/strong&gt;, we can do &lt;em&gt;10j&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;dw&lt;/strong&gt; to delete a word.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;dd&lt;/strong&gt; to delete a word in a line.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;x&lt;/strong&gt; to delete a character.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;r&lt;/strong&gt; followed by new character to replace a character.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There's still a lot to learn. Keep exploring. Happy coding.&lt;/p&gt;

&lt;p&gt;If you learnt something from this article, please like, comment and share.&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://www.instagram.com/vishwas_luhana"&gt;Instagram&lt;/a&gt;.&lt;br&gt;
Follow me on &lt;a href="https://www.facebook.com/luhanavishwas"&gt;Facebook&lt;/a&gt;.&lt;br&gt;
Follow me on &lt;a href="https://twitter.com/vixvos"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>vim</category>
      <category>programming</category>
      <category>linux</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Building a Tailwind CSS button group component</title>
      <author>Zolt√°n Sz≈ëgy√©nyi</author>
      <pubDate>Sun, 03 Oct 2021 10:44:38 +0000</pubDate>
      <link>https://dev.to/themesberg/building-a-tailwind-css-button-group-component-o51</link>
      <guid>https://dev.to/themesberg/building-a-tailwind-css-button-group-component-o51</guid>
      <description>&lt;p&gt;I've been using Tailwind CSS for quite some time and I am in love with how easy it is to set up user interfaces directly from your HTML/React/Vue or other templating files.&lt;/p&gt;

&lt;p&gt;One thing that I noticed is that it is quite bothersome when I have to start a new project not having a set of components to work with out of the box.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0fey3lHn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4n7jb9rcnum345yedh82.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0fey3lHn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4n7jb9rcnum345yedh82.png" alt="Tailwind CSS button group"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is why I started a tutorial series on how to build some of the most commonly used web components with the utility classes from Tailwind CSS.&lt;/p&gt;

&lt;p&gt;Last time I talked about how you can build a &lt;a href="https://dev.to/themesberg/building-a-tailwind-css-button-component-variants-55dp"&gt;Tailwind CSS button component&lt;/a&gt; including different styles and using SVG icons as well.&lt;/p&gt;

&lt;p&gt;Today I want to talk about how you can create a group of buttons stacked together that you can use for more advanced user interfaces.&lt;/p&gt;

&lt;p&gt;Let's get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailwind-css-button-group-component"&gt;
  &lt;/a&gt;
  Tailwind CSS button group component
&lt;/h2&gt;

&lt;p&gt;First of all I want to specify the fact that the button component can either be a link using the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag or simply just a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;We'll start with using the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; element and create the basic HTML that we'll need for this component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div role="group"&amp;gt;
  &amp;lt;button type="button"&amp;gt;
    Flowbite
  &amp;lt;/button&amp;gt;
  &amp;lt;button type="button"&amp;gt;
    Tailwind
  &amp;lt;/button&amp;gt;
  &amp;lt;button type="button"&amp;gt;
    The Practical Dev
  &amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we've added the &lt;code&gt;role="group"&lt;/code&gt; attribute to the parent &lt;code&gt;div&lt;/code&gt; element? &lt;/p&gt;

&lt;p&gt;This &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_group_role"&gt;helps browsers identify&lt;/a&gt; it as a group of components stacked together which in turn helps people with disabilities browse your website more easily.&lt;/p&gt;

&lt;p&gt;Next up we should add some styles to the parent &lt;code&gt;div&lt;/code&gt; element to stack the buttons together.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="inline-flex shadow-sm rounded-md" role="group"&amp;gt;
  &amp;lt;button type="button"&amp;gt;
    Flowbite
  &amp;lt;/button&amp;gt;
  &amp;lt;button type="button"&amp;gt;
    Tailwind
  &amp;lt;/button&amp;gt;
  &amp;lt;button type="button"&amp;gt;
    The Practical Dev
  &amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's apply some styles to the button components.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="inline-flex shadow-sm rounded-md" role="group"&amp;gt;
  &amp;lt;button class="rounded-l-lg border border-gray-200 bg-white text-sm font-medium px-4 py-2 text-gray-900" type="button"&amp;gt;
    Flowbite
  &amp;lt;/button&amp;gt;
  &amp;lt;button class="border-t border-b border-gray-200 bg-white text-sm font-medium px-4 py-2 text-gray-900" type="button"&amp;gt;
    Tailwind
  &amp;lt;/button&amp;gt;
  &amp;lt;button class="rounded-r-md border border-gray-200 bg-white text-sm font-medium px-4 py-2 text-gray-900" type="button"&amp;gt;
    The Practical Dev
  &amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that the button in the middle has only a top and border bottom? All of the buttons between the first and last element should only have a border on the Y axis to prevent a wider border between the elements.&lt;/p&gt;

&lt;p&gt;Now let's add some &lt;code&gt;hover&lt;/code&gt; and &lt;code&gt;focus&lt;/code&gt; styles to the buttons as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="inline-flex shadow-sm rounded-md" role="group"&amp;gt;
  &amp;lt;button type="button" class="rounded-l-lg border border-gray-200 bg-white text-sm font-medium px-4 py-2 text-gray-900 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700"&amp;gt;
    Flowbite
  &amp;lt;/button&amp;gt;
  &amp;lt;button type="button" class="border-t border-b border-gray-200 bg-white text-sm font-medium px-4 py-2 text-gray-900 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700"&amp;gt;
    Tailwind
  &amp;lt;/button&amp;gt;
  &amp;lt;button type="button" class="rounded-r-md border border-gray-200 bg-white text-sm font-medium px-4 py-2 text-gray-900 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700"&amp;gt;
    The Practical Dev
  &amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Awesome! We're done with the first button group component. It should look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sTJ5Qw48--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/quwhe1rd79530lu3kdg1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sTJ5Qw48--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/quwhe1rd79530lu3kdg1.png" alt="Tailwind CSS button group example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#button-group-as-links"&gt;
  &lt;/a&gt;
  Button group as links
&lt;/h2&gt;

&lt;p&gt;You can also use the button group components as a stack of links.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&amp;lt;div class="inline-flex shadow-sm rounded-md"&amp;gt;
  &amp;lt;a href="#" aria-current="page" class="rounded-l-lg border border-gray-200 bg-white text-sm font-medium px-4 py-2  hover:bg-gray-100 text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700"&amp;gt;
    Profile
  &amp;lt;/a&amp;gt;
  &amp;lt;a href="#" class="border-t border-b border-gray-200 bg-white text-sm font-medium px-4 py-2 text-gray-900 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700"&amp;gt;
    Settings
  &amp;lt;/a&amp;gt;
  &amp;lt;a href="#" class="rounded-r-md border border-gray-200 bg-white text-sm font-medium px-4 py-2 text-gray-900 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700"&amp;gt;
    Messages
  &amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#button-group-with-icons"&gt;
  &lt;/a&gt;
  Button group with icons
&lt;/h2&gt;

&lt;p&gt;You can also use SVG icons with the button group element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&amp;lt;div class="inline-flex shadow-sm rounded-md" role="group"&amp;gt;
  &amp;lt;button type="button" class="rounded-l-lg border border-gray-200 bg-white text-sm font-medium px-4 py-2 text-gray-900 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 inline-flex items-center "&amp;gt;
    &amp;lt;svg class="w-4 h-4 mr-2 fill-current" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z" clip-rule="evenodd"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;
    Profile
  &amp;lt;/button&amp;gt;
  &amp;lt;button type="button" class="border-t border-b border-gray-200 bg-white text-sm font-medium px-4 py-2 text-gray-900 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 inline-flex items-center"&amp;gt;
    &amp;lt;svg class="w-4 h-4 mr-2 fill-current" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;path d="M5 4a1 1 0 00-2 0v7.268a2 2 0 000 3.464V16a1 1 0 102 0v-1.268a2 2 0 000-3.464V4zM11 4a1 1 0 10-2 0v1.268a2 2 0 000 3.464V16a1 1 0 102 0V8.732a2 2 0 000-3.464V4zM16 3a1 1 0 011 1v7.268a2 2 0 010 3.464V16a1 1 0 11-2 0v-1.268a2 2 0 010-3.464V4a1 1 0 011-1z"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;
    Settings
  &amp;lt;/button&amp;gt;
  &amp;lt;button type="button" class="rounded-r-md border border-gray-200 bg-white text-sm font-medium px-4 py-2 text-gray-900 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 inline-flex items-center"&amp;gt;
    &amp;lt;svg class="w-4 h-4 mr-2 fill-current" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;path fill-rule="evenodd" d="M2 9.5A3.5 3.5 0 005.5 13H9v2.586l-1.293-1.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 15.586V13h2.5a4.5 4.5 0 10-.616-8.958 4.002 4.002 0 10-7.753 1.977A3.5 3.5 0 002 9.5zm9 3.5H9V8a1 1 0 012 0v5z" clip-rule="evenodd"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;
    Downloads
  &amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all for now! I hope you liked this tutorial.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flowbite-tailwind-component-library"&gt;
  &lt;/a&gt;
  Flowbite - Tailwind component library
&lt;/h2&gt;

&lt;p&gt;This &lt;a href="https://flowbite.com/docs/components/button-group/"&gt;Tailwind CSS button group&lt;/a&gt; component is part of a larger open-source component library called Flowbite.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--49Z09V2d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7e74xtygspba1qcp5ayi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--49Z09V2d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7e74xtygspba1qcp5ayi.png" alt="Flowbite - Tailwind CSS components"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can view more components and examples by checking out &lt;a href="https://flowbite.com/docs/getting-started/introduction/"&gt;Flowbite's Tailwind components documentation&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>opensource</category>
      <category>tutorial</category>
      <category>css</category>
    </item>
    <item>
      <title>6 Things I Learned Writing My First App</title>
      <author>Callum Connolly</author>
      <pubDate>Sun, 03 Oct 2021 10:24:16 +0000</pubDate>
      <link>https://dev.to/11cconnolly/6-things-i-learned-writing-my-first-app-2alb</link>
      <guid>https://dev.to/11cconnolly/6-things-i-learned-writing-my-first-app-2alb</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-i-learned-spending-6-months-making-my-first-app-i-can-now-make-in-6-hours"&gt;
  &lt;/a&gt;
  What I learned spending 6 months making my first app I can now make in 6 hours.
&lt;/h1&gt;

&lt;p&gt;I've finished my first mobile application which took me 6 months to write. I've started many projects that took maybe a few weeks but this was the first side project I did which persevered over the course of months, in an area I previously knew nothing about.&lt;/p&gt;

&lt;p&gt;A bit about my situation; For my shiny new graduate job I was put onto a Front-end Engineering position and had to self-learn JS, HTML, CSS, React etc. as well as how to navigate working professionally for the first time. Before this, I had no knowledge of Front-end Engineering whatsoever. How people got boxes of all shapes and sizes to appear on a screen was beyond me. Moving any of those boxes was part of the mystic arts. This mobile app was a way of consolidating all that knowledge as I learned, as well as trying to find a way to help people. Here are 6 of the most important things I learned along the way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-hardest-part-is-letting-go-is-figuring-out-what-to-do-exactly"&gt;
  &lt;/a&gt;
  The hardest part &lt;del&gt;is letting go&lt;/del&gt; is figuring out what to do exactly
&lt;/h2&gt;

&lt;p&gt;A lot of time when creating the application was spent figuring out what exactly I need to actually develop. This included item such as: a broad roadmap of where I wanted it to go, wireframes and mockups, and more specific requirements written down at each stage as I went along. The time spent figuring out what those exact requirements were, paid dividends later. The fuzzier the requirements were, generally the more issues and roadblocks they caused later. It can be difficult to figure out which steps will require more time over others but that intuition will come with practice and being able to recognize similar situations you've dealt with before.&lt;/p&gt;

&lt;p&gt;Personally, and I would recommend this to most people, is to write down, draw, make a note of whatever you must do and the steps to get you there. It makes forgetting important steps more difficult and gives your brain a way to process and work through things more easily with a more defined structure. Furthermore, if you're like me you have only a fairly limited experience of agile processes, using certain tools can limit the effectiveness of the process. Don't take my word for it though, &lt;a href="https://changelog.com/podcast/367"&gt;take Uncle Bob's word&lt;/a&gt;. For this reason, the intensely manual approach of post-its on a wall was used to keep track of work items, which worked for my dissertation project and this project likewise. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#worse-is-better-until-it-isnt"&gt;
  &lt;/a&gt;
  Worse is better, until it isn't
&lt;/h2&gt;

&lt;p&gt;This is a play on &lt;a href="https://en.wikipedia.org/wiki/Worse_is_better"&gt;the common mantra in software acceptance&lt;/a&gt;. If your goal was, like me, just to make &lt;em&gt;something&lt;/em&gt; then the mantra of worse is better you should stick to. Just get something out; Learn enough so you kind of know what to do then go with it. Even if it's a little messy, you can find a brute force solution first which will help you understand the problem more clearly. Then you can find the eloquent solution afterwards.&lt;/p&gt;

&lt;p&gt;However, if your goal is to make something that won't be &lt;em&gt;a royal pain in the arse to maintain&lt;/em&gt;, or something you want to potentially put to market, then the time spent understanding the right processes and procedures will make your life factorially easier. This means researching file structure, testing (&lt;a href="https://www.kaizenko.com/what-is-the-testing-pyramid/"&gt;at as many levels as you can&lt;/a&gt;), version control, CI, deployment and figuring how to get them to all integrate together into a proper workflow will pay exponential dividends later, especially if you have others join onto the project.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#understand-the-fundamentals-even-if-that-takes-time"&gt;
  &lt;/a&gt;
  Understand the fundamentals, even if that takes time
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;"What I cannot create, I do not understand" - Richard Feynman&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Understanding the fundamentals and building up mental models, as well as the context of where things sit in the development process are key tools to not solidifying knowledge that you learn. To learn React, I first had to &lt;a href="https://justjavascript.com/"&gt;learn JavaScript&lt;/a&gt;, HTML, CSS, which meant understanding web frameworks. Break things down into their most atomic parts, so you can build the knowledge up again on a strong foundation. One really good idea from &lt;a href="https://www.linkedin.com/pulse/how-kickass-new-software-engineer-raymond-gan/"&gt;a post by Raymond Gan's&lt;/a&gt; is to &lt;em&gt;create whatever you're learning&lt;/em&gt;. If you're learning React, code your own mini-React. Learning Java? Write your own Java-jr. This gives you a much better appreciation and understanding of what you're learning. &lt;a href="https://www.coursera.org/learn/learning-how-to-learn"&gt;Learning how to learn&lt;/a&gt;, and pairing the above steps with practice, and you're in a better position than the vast majority of others and it &lt;em&gt;will&lt;/em&gt; make you a better and much more productive engineer.&lt;/p&gt;

&lt;p&gt;Equally important as well is continuing the process of learning, even if you know how to do something. There's a hundred different ways to scare a cat, cook an egg, or write a sorting algorithm. There is always room for improvement, especially in software which constantly changes and shifts, maybe less so when it comes to cooking an egg though. So it's important to keep up to date with the latest trends, releases etc. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#have-a-couple-different-avenues-to-pursue"&gt;
  &lt;/a&gt;
  Have a couple different avenues to pursue
&lt;/h2&gt;

&lt;p&gt;When I did some across some impediment to development, mainly due to lack of knowledge, sometimes due to not being in the right zone, I felt like bashing my head against a wall; A feeling I'm sure that's common to anyone who has ventured further than printing "Hello World". It is not a sustainable feeling to have, especially in personal projects where your only motivation is yourself. This is one of the many reasons why, even in small, personal projects, using &lt;a href="https://learngitbranching.js.org/"&gt;branches for your VCS&lt;/a&gt; is important. Having the ability to switch between problems was something I learned later in the process, but which made things a lot easier. &lt;/p&gt;

&lt;p&gt;Oftentimes coming back to a problem after having spent time elsewhere, on another part or just having a break, will give clarity on the issue and you'll be in a better place to figure things out.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#roles-in-software-engineering-are-there-for-a-reason"&gt;
  &lt;/a&gt;
  Roles in Software Engineering are there for a reason
&lt;/h2&gt;

&lt;p&gt;Tester, team lead, project manager, developer, UI/UX, intern who fetches coffee are all key roles in the software engineering process. Having the independence to decide exactly where a project goes in it's entirety is intensely liberating. Wearing all the hats yourself, however, can very tiring. This requires a lot of context switching and is where we start to see how each of the roles, with their own specific target, work together. The team lead who is able to tell a developer what to do next and keep them deeply focused on the next feature. Testers who has no ego associated with a piece of code are able to test that code to oblivion and uncovers bugs we would not be able to. As someone new to a team, it's an enlightening experience to be able to understand up close that multiple people, when working together cohesively, really make a project succeed more than a single person could, and create something greater than the sum of its parts.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#keep-going"&gt;
  &lt;/a&gt;
  Keep going
&lt;/h2&gt;

&lt;p&gt;Standard motivational advice, I know. The satisfaction from finally making a project is something that is going to stay with you. It's important to know that your first draft won't be your last, and it shouldn't either. It's also important to know that it is okay to take a break when you feel like you're hitting a wall; Some walls are there for you to rest against for a time, some are there to break through. Oftentimes, it's when you break through these walls that you'll do your best work.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#whats-the-app"&gt;
  &lt;/a&gt;
  What's the App?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M8dMQvLV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ph0k7cty309h6xnyzbor.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M8dMQvLV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ph0k7cty309h6xnyzbor.png" alt="App feature graphic"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.callumc11.chainsmobileapp"&gt;You can find the app here&lt;/a&gt;, it's a super simple tool for tracking habits and, I hope, will be able to help people make some changes in their lives. I am working on a new app, similar to this one, with more features as well as a proper workflow and taking into account all the lessons learned. If you could try it out and give some feedback that would be great.&lt;/p&gt;

</description>
      <category>react</category>
      <category>programming</category>
      <category>productivity</category>
      <category>beginners</category>
    </item>
    <item>
      <title>API Integration and Agile Business simulation game in Task force</title>
      <author>Ntwari Egide</author>
      <pubDate>Sun, 03 Oct 2021 09:49:22 +0000</pubDate>
      <link>https://dev.to/ntwariegide/api-integration-and-agile-business-simulation-game-in-task-force-567g</link>
      <guid>https://dev.to/ntwariegide/api-integration-and-agile-business-simulation-game-in-task-force-567g</guid>
      <description>&lt;p&gt;Today, we are closing week 5 in the task force, this week was very different to all other 4 weeks we've covered.&lt;/p&gt;

&lt;p&gt;This week started with improving the ShowApp project. We wanted to add functionality of cropping image upload which was tough but educational. In the afternoon APIs for the LOT dashboard were ready, so we started integrating APIs.&lt;/p&gt;

&lt;p&gt;It was tough because APIs were not working well, so it took us time to know how we could integrate. It was also educational because of learning new things like Google Auths with Firebase.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x4FWcQrz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/swiftsenpai.com/wp-content/uploads/2020/06/Google-Sign-In-Firebase-Feature-Image.jpeg%3Fw%3D1065%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x4FWcQrz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/swiftsenpai.com/wp-content/uploads/2020/06/Google-Sign-In-Firebase-Feature-Image.jpeg%3Fw%3D1065%26ssl%3D1" alt="google auth"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In soft skills, this week we did &lt;strong&gt;Agile simulation game&lt;/strong&gt; which was fun bug educative.&lt;br&gt;
I wanted to try new things because I used to be a scrum master, so I wanted to try being a Software Consultant from RISA. &lt;br&gt;
Being a software consultant was very difficult because It was tough to convince the Team to make sure that they followed the rules from RISA.&lt;br&gt;
I learned to talk to teams, making them understand what I want, making sure that they have the best DONE deliverable at the end of the sprint.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pPwrV49K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.easytechjunkie.com/group-of-well-dressed-people-at-a-desk-looking-at-a-tablet.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pPwrV49K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.easytechjunkie.com/group-of-well-dressed-people-at-a-desk-looking-at-a-tablet.jpg" alt="software consultant"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also enjoyed working with the best team: scrum master, scrum team. I also noticed how it is not easy to be scrum master because in the sprint retrospective you have to be ready for questions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--No3QaarQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.squarespace-cdn.com/content/v1/53252e4ce4b026a30a70a340/1542331531936-AY0OKYCOU9FIOXV3PIB7/IMG_4194.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--No3QaarQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.squarespace-cdn.com/content/v1/53252e4ce4b026a30a70a340/1542331531936-AY0OKYCOU9FIOXV3PIB7/IMG_4194.PNG" alt="scrum master meme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This week, we also implemented a game in the codewars session. It was important because It made me understand how important it is to understand every detail of a problem to solve.&lt;/p&gt;

&lt;p&gt;On Friday we had a brainstorming session, our team also discussed Problem breakdown and we came up with the solution to help in the process of vaccination for children in Rwanda. &lt;/p&gt;

&lt;p&gt;In conclusion, this week was tough but educational because we tried new things. &lt;br&gt;
See you next week :)&lt;/p&gt;

</description>
      <category>codeofafrica</category>
      <category>awesomitylab</category>
      <category>agile</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>5 HTML tags that make the text italic</title>
      <author>Beginner Developer</author>
      <pubDate>Sun, 03 Oct 2021 08:52:21 +0000</pubDate>
      <link>https://dev.to/beginnerdeveloper/5-html-tags-that-make-the-text-italic-5a0i</link>
      <guid>https://dev.to/beginnerdeveloper/5-html-tags-that-make-the-text-italic-5a0i</guid>
      <description>&lt;p&gt;As I was reading the documentation of HTML, I saw the var tag. Initially, I thought it was related to variables. However, I had seen that it was making the text Italic. So I asked myself, how many HTML tags make text Italic.&lt;/p&gt;

&lt;p&gt;I began researching how many HTML tags make the text italic and found 5 tags that do so.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-ltigt-endraw-tag"&gt;
  &lt;/a&gt;
  &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; tag
&lt;/h1&gt;

&lt;p&gt;It is a common and well-known tag.&lt;br&gt;
Display style- Inline&lt;br&gt;
&lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; elements are used to differentiate words from the surrounding text by styling italicized text without adding any emphasis to italicized text.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-ltemgt-endraw-tag"&gt;
  &lt;/a&gt;
  &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; tag
&lt;/h1&gt;

&lt;p&gt;Display Style - Inline.&lt;br&gt;
The &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; element is used to indicate text that should receive more emphasis than the surrounding text.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-ltcitegt-endraw-tag"&gt;
  &lt;/a&gt;
  &lt;code&gt;&amp;lt;cite&amp;gt;&lt;/code&gt; tag
&lt;/h1&gt;

&lt;p&gt;Display style - Inline&lt;br&gt;
Use the cite element to identify the source of a quotation or creative work, rather than the author or creator.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-ltdfngt-endraw-tag"&gt;
  &lt;/a&gt;
  &lt;code&gt;&amp;lt;dfn&amp;gt;&lt;/code&gt; tag
&lt;/h1&gt;

&lt;p&gt;Display style- Inline&lt;br&gt;
When a term is enclosed in a &lt;code&gt;&amp;lt;dfn&amp;gt;&lt;/code&gt; tag, browsers and web crawlers will understand that nearby text contains a definition of the term.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-ltvargt-endraw-tag"&gt;
  &lt;/a&gt;
  &lt;code&gt;&amp;lt;var&amp;gt;&lt;/code&gt; tag
&lt;/h1&gt;

&lt;p&gt;Display style - Inline&lt;br&gt;
Most browsers display text marked with  tags in italics. This element indicates a variable in a mathematical equation or computer program.&lt;/p&gt;

&lt;p&gt;My Blog:- &lt;a href="https://beginners-developer.blogspot.com"&gt;Beginner Developer Blog&lt;/a&gt;&lt;br&gt;
Website:- &lt;a href="https://ejaazrkhan.github.io/portfolio"&gt;https://ejaazrkhan.github.io/portfolio&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to import large csv file in Django-admin.</title>
      <author>RJ-1998</author>
      <pubDate>Sun, 03 Oct 2021 08:47:40 +0000</pubDate>
      <link>https://dev.to/u_cancall_me_rj/how-to-import-large-csv-file-in-django-admin-3fgj</link>
      <guid>https://dev.to/u_cancall_me_rj/how-to-import-large-csv-file-in-django-admin-3fgj</guid>
      <description>&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#you-can-also-read-the-whole-article-on-my-blog"&gt;
  &lt;/a&gt;
  You can also read the whole article on &lt;a href="https://rishabh-tech-blog.vercel.app/blog/how-to-import-large-csv-file-in-django-admin"&gt;my blog&lt;/a&gt;
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;In this tutorial, we will look at an alternative approach to import csv files in django-admin. This tutorial is intended for intermediate to advanced level developers. All the code related to the tutorial is available in the &lt;a href="https://github.com/RJ-1998/django-import-large-csv-tutorial"&gt;github repo&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;If you have worked on django, then there's a high probability that you have already used the popular &lt;code&gt;django-import-export&lt;/code&gt; library which works smoothly in django-admin and gives developers lots of freedom to import/export all sorts of files. (If you haven't seen it do check it out &lt;a href="https://django-import-export.readthedocs.io/en/latest/"&gt;here&lt;/a&gt; because we'll be using it üòâ).&lt;/p&gt;

&lt;p&gt;Although it's good for importing model-specific files as it gives the specific headers for that particular model. But what if you want to import data that leads to different tables in your database and you want to perform some custom logic and data validation. Also, suppose you want to import very large files (say 20k rows), it will be computation heavy and will run a lot of queries. I came across the same requirement while I was working on a project and using default django-import-export is not the way to do it. We have to CUSTOMIZE it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup-the-project"&gt;
  &lt;/a&gt;
  Setup the project
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Setup a virtual environment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install Django and create a new project&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install django-import-export&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install django-import-export
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Add &lt;code&gt;django-import-export&lt;/code&gt; to your INSTALLED_APPS
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;INSTALLED_APPS = [
    ...
    'import_export',
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Define your models. I've used &lt;a href="https://swapi.dev/"&gt;StarWars API&lt;/a&gt; so accordingly, I've created the following model
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#models.py
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;

&lt;span class="c1"&gt;# Create your models here.
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Characters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FloatField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;mass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FloatField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;hair_color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;skin_color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;eye_color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;birth_year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;gender&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;verbose_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Characters"&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Apply &lt;code&gt;ImportExportModelAdmin&lt;/code&gt; in your admin
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#admin.py
# your imports
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;import_export.admin&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ImportExportModelAdmin&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Characters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CharactersAdmin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ImportExportModelAdmin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelAdmin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# your admin logic for the model
&lt;/span&gt;    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have done the setup correctly then you should be able to see the &lt;strong&gt;import/export&lt;/strong&gt; buttons in the django admin.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-template"&gt;
  &lt;/a&gt;
  Create a template
&lt;/h2&gt;

&lt;p&gt;In this step, we'll be overriding the default &lt;code&gt;import&lt;/code&gt; view of django and provide our custom template. This template will be essential in sending and receiving requests to and from the Django-admin. For this, we have to first override the default import method of &lt;code&gt;ImportExportModelAdmin&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#admin.py
# your imports
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;

&lt;span class="c1"&gt;# create a form field which can input a file
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CsvImportForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;csv_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Characters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CharactersAdmin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ImportExportModelAdmin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelAdmin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;list_display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"birth_year"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"gender"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;import_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CsvImportForm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"form"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"form_title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Upload StarWars characters csv file."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"The file should have following headers: "&lt;/span&gt;
                                    &lt;span class="s"&gt;"[NAME,HEIGHT,MASS,HAIR COLOR,EYE COLOR,SKIN COLOR,BIRTH YEAR,GENDER]."&lt;/span&gt;
                                    &lt;span class="s"&gt;" The Following rows should contain information for the same."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                    &lt;span class="s"&gt;"endpoint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"/admin/starwars/characters/import/"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"admin/import_starwars_characters.html"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now create a new html template called &lt;code&gt;import_starwars_characters.html&lt;/code&gt;&lt;br&gt;
inside the &lt;code&gt;templates/admin&lt;/code&gt; folder in your app. You can find the template &lt;a href="https://github.com/RJ-1998/django-import-large-csv-tutorial/blob/master/starwars/templates/admin/import_starwars_characters.html"&gt;here&lt;/a&gt; in my git repo.&lt;/p&gt;

&lt;p&gt;Once you're done then you'll be able to see your custom template when you click the import button.&lt;/p&gt;


  
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kZEdYy14--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dnd2qugjk/image/upload/v1632679694/cover_photos/import_characters_template_wpaoo2.png" alt="Custom template to import csv files"&gt;
  

&lt;h2&gt;
  &lt;a href="#add-jquery-and-ajax"&gt;
  &lt;/a&gt;
  Add Jquery and AJAX
&lt;/h2&gt;

&lt;p&gt;This is the main step of this recipe. Here we will be doing the paginated AJAX calls to our python logic inside django itself!&lt;/p&gt;

&lt;p&gt;Let's do it step by step.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#step1-create-a-promise-to-read-the-csv"&gt;
  &lt;/a&gt;
  Step1:- Create a promise to read the csv
&lt;/h4&gt;

&lt;p&gt;Yes, you heard it right! We will utilize Javascript's Promises to read the csv file contents. Here is the code with some useful comments.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//import_starwars_characters.html&lt;/span&gt;

&lt;span class="c1"&gt;// this is the secure way to get some hidden data into javascript from python&lt;/span&gt;
&lt;span class="c1"&gt;// to learn about it more find the resources at the end&lt;/span&gt;
&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;endpoint&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="na"&gt;json_script&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;endpoint&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="c1"&gt;// all the javascript goes here .....&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//import_starwars_characters.html&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt; &lt;span class="c1"&gt;// to store csv file headers&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;allData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt; &lt;span class="c1"&gt;// to store all the rows except headers&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;file_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;totalentries&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// get the endpoint we want our AJAX call to hit&lt;/span&gt;
&lt;span class="c1"&gt;// reading it from json_script&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;endpoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#endpoint&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="c1"&gt;// &amp;lt;!--  pagination variables--&amp;gt;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;pageSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// it will store limit-offset objects&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;pageObjs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

&lt;span class="c1"&gt;// &amp;lt;!--  promise to read csv so that submit button gets enabled--&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;// &amp;lt;!--  only after file has been read--&amp;gt;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;readCSVPromise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// store headers and rows&lt;/span&gt;
    &lt;span class="nx"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;allData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A brief explanation of the above code is that we resolve our promise if we have the data with length &amp;gt; 0 otherwise we reject the promise.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step2-add-event-listener-to-read-the-input-file"&gt;
  &lt;/a&gt;
  Step2:- Add event listener to read the input file
&lt;/h4&gt;

&lt;p&gt;Let's add an event listener to our file input button that will run when we upload the file through it. We will then run our promise and wait till it gets finished. Once it's done, we then start paginating the data using &lt;strong&gt;limit-offset&lt;/strong&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//import_starwars_characters.html&lt;/span&gt;

&lt;span class="c1"&gt;//&amp;lt;!--  read csv file and perform pagination of rows--&amp;gt;&lt;/span&gt;

&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#csvfile&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;change&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// regex to validate file name and extension&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/^&lt;/span&gt;&lt;span class="se"&gt;([^\s]&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;a-zA-Z0-9&lt;/span&gt;&lt;span class="se"&gt;\s&lt;/span&gt;&lt;span class="sr"&gt;_&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="sr"&gt;.&lt;/span&gt;&lt;span class="se"&gt;\-&lt;/span&gt;&lt;span class="sr"&gt;:()&lt;/span&gt;&lt;span class="se"&gt;\[\]])&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;.csv&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#csvfile&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// initialize javascript's FileReader&lt;/span&gt;
    &lt;span class="c1"&gt;// Read more here https://developer.mozilla.org/en-US/docs/Web/API/FileReader&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;reader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;FileReader&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="c1"&gt;// start storing all the data&lt;/span&gt;
      &lt;span class="nx"&gt;readCSVPromise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="c1"&gt;// when done start paginating the data&lt;/span&gt;
          &lt;span class="nx"&gt;pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;allData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;pageSize&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;pageNo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;pageNo&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;pages&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;pageNo&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;limit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pageNo&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;pageSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pageNo&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;pageSize&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;pageSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;limit&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nx"&gt;allData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nx"&gt;limit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;allData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;pageObjs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;offset&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="c1"&gt;// enable submit button&lt;/span&gt;
          &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;disabled&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;disabled&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nx"&gt;file_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readAsText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Please select a csv file!!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#step3-send-ajax-requests-to-django"&gt;
  &lt;/a&gt;
  Step3:- Send AJAX requests to Django
&lt;/h4&gt;

&lt;p&gt;Now that we have read the csv file and its contents, we are good to call the AJAX requests to Django. Since we want to do the paginated requests, there can be &lt;strong&gt;n&lt;/strong&gt; number of calls, so we will call them sequentially. Here's how we do it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//import_starwars_characters.html&lt;/span&gt;

&lt;span class="c1"&gt;//&amp;lt;!--  Perform multiple sequential AJAX Calls on submit click event  --&amp;gt;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;looper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Deferred&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="c1"&gt;// $.when.apply is the way to call multiple AJAX calls&lt;/span&gt;
  &lt;span class="c1"&gt;// apply functions accepts two arguments =&amp;gt; (this,array of requests)&lt;/span&gt;
  &lt;span class="c1"&gt;// for array of requests we are using map function to loop over pageObjs&lt;/span&gt;
  &lt;span class="c1"&gt;// that returns AJAX request&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;when&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pageObjs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pageObj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;looper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;looper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;callImportRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pageObj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;looper&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// once all requests are finished then enable download report button&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Upload Finished!!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#downloadReport&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now to call the actual AJAX request we will do like the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//import_starwars_characters.html&lt;/span&gt;

&lt;span class="c1"&gt;//&amp;lt;!--  Paginated AJAX call to initiate file upload  --&amp;gt;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callImportRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pageObj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;deferred&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Deferred&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pageObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;limit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pageObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// contains paginated data&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;allData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;dataType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;csv_headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;page_no&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;csrfmiddlewaretoken&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;input[name=csrfmiddlewaretoken]&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;post&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;beforeSend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#spinner&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// here we will update our DOM to show the object status&lt;/span&gt;
      &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#file_name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;totalentries&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#entries&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;totalentries&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;table&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s2"&gt;`&amp;lt;tr class="parent" onclick="handlecollapse($(this))"&amp;gt;&amp;lt;td class="checkpoint"&amp;gt;Entries: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; to &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;`&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;table&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="s2"&gt;`&amp;lt;tr class="child"&amp;gt;&amp;lt;td&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;`&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="nx"&gt;deferred&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#spinner&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;deferred&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#custom-import-logic"&gt;
  &lt;/a&gt;
  Custom import logic
&lt;/h2&gt;

&lt;p&gt;We have made it this far! Now the last step is to Custom import logic to create the objects in our database. Here we write our custom logic of import and try to save some queries using &lt;code&gt;bulk_create&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#admin.py
&lt;/span&gt;
&lt;span class="c1"&gt;# your imports
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;starwars.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ImportUtils&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;starwars&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;import_export.admin&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ImportExportModelAdmin&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;import_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;import_object_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;create_new_characters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"POST"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# clear the list for every new request
&lt;/span&gt;        &lt;span class="n"&gt;create_new_characters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="c1"&gt;# capture payload from request
&lt;/span&gt;        &lt;span class="n"&gt;csv_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"file_name"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;reader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"rows"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;column_headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"csv_headers"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="c1"&gt;# helper class for validation and other stuff
&lt;/span&gt;        &lt;span class="c1"&gt;# look into git repo
&lt;/span&gt;        &lt;span class="n"&gt;util_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImportUtils&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;column_headers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;util_obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"NAME"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
            &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;util_obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;validate_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;util_obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"HEIGHT"&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
            &lt;span class="n"&gt;mass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;util_obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;validate_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;util_obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"MASS"&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
            &lt;span class="n"&gt;hair_color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;util_obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"HAIR COLOR"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
            &lt;span class="n"&gt;eye_color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;util_obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"EYE COLOR"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
            &lt;span class="n"&gt;skin_color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;util_obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"SKIN COLOR"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
            &lt;span class="n"&gt;birth_year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;util_obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"BIRTH YEAR"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
            &lt;span class="n"&gt;gender&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;util_obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"GENDER"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
            &lt;span class="n"&gt;create_new_characters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Characters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hair_color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;hair_color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;eye_color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;eye_color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;skin_color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;skin_color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;birth_year&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;birth_year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gender&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;import_object_status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;"character"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"status"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FINISHED"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                        &lt;span class="s"&gt;"msg"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Character created successfully!"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="c1"&gt;# bulk create objects
&lt;/span&gt;        &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Characters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bulk_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;create_new_characters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# return the response to the AJAX call
&lt;/span&gt;        &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;"file"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;csv_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;"entries"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;import_object_status&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s"&gt;"results"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;import_object_status&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"application/json"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# below code just displays the template once in the django-admin
&lt;/span&gt;    &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CsvImportForm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"form"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"form_title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Upload users csv file."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"The file should have following headers: "&lt;/span&gt;
                &lt;span class="s"&gt;"[NAME,HEIGHT,MASS,HAIR COLOR,EYE COLOR,SKIN COLOR,BIRTH YEAR,GENDER]."&lt;/span&gt;
                &lt;span class="s"&gt;" The Following rows should contain information for the same."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;"endpoint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"/admin/starwars/characters/import/"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"admin/import_user_from_csv.html"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In brief, the above code just listens to every AJAX request and captures the payload. Then with that payload, it creates new entries in the &lt;code&gt;Characters&lt;/code&gt; model and returns the response back to the call.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#points-to-remember"&gt;
  &lt;/a&gt;
  Points to remember
&lt;/h2&gt;

&lt;p&gt;Although the above implementation works pretty well and can handle large csv files, there are some points to remember while considering this approach.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Clicking &lt;code&gt;Cancel&lt;/code&gt; does not cancel the whole operation. This means that if you close the browser window or close the tab or click on cancel, then the operations which have already run can not be reverted.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It does not provide you a preview of your data. This is implemented in &lt;code&gt;django-import-export&lt;/code&gt; pretty well, but sadly not here. I will try to include this feature also in the next iteration.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You have to do your own data validation either before uploading the file or inside your import logic in Python.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Django-import-export&lt;/strong&gt; is great and works pretty well for most cases, but when it comes to adding customize business logic then you have to look for some other alternatives. In this article, I tried to convince you that it is possible to customize the default &lt;code&gt;django-import-export&lt;/code&gt; features and you can import large &lt;strong&gt;csv&lt;/strong&gt; files. I hope this article has given you some new information and approach to customizing django-admin. I hope you have learned something new from here and if so then please appreciate the efforts by liking the post and share it with your peers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Official Django docs explaining about &lt;a href="https://docs.djangoproject.com/en/3.0/ref/templates/builtins/#json-script"&gt;json_script&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Here is an article for &lt;a href="https://adamj.eu/tech/2020/02/18/safely-including-data-for-javascript-in-a-django-template/"&gt;further reading on json_script&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A great article that explains how to use &lt;a href="http://michaelsoriano.com/working-with-jquerys-ajax-promises-and-deferred-objects/"&gt;deffered objects&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>import</category>
      <category>tutorial</category>
      <category>django</category>
    </item>
    <item>
      <title>Controlling mobile Phone using Python</title>
      <author>Yash Makan</author>
      <pubDate>Sun, 03 Oct 2021 08:23:04 +0000</pubDate>
      <link>https://dev.to/yash_makan/controlling-mobile-phone-using-python-192o</link>
      <guid>https://dev.to/yash_makan/controlling-mobile-phone-using-python-192o</guid>
      <description>&lt;h2&gt;
  &lt;a href="#story"&gt;
  &lt;/a&gt;
  Story
&lt;/h2&gt;

&lt;p&gt;Hi, I am Yash Makan, a 17-year-old self-taught programmer. I was thinking a couple of days ago about sending messages from whatsapp using python. Like you guys, I started lurking the internet to find some solutions and found about &lt;a href="https://www.twilio.com/whatsapp"&gt;twilio&lt;/a&gt;. In the beginning, it seems a good solution but it is not free and I have to buy a twilio phone number. Also, I was not able to find any whatsapp API available on the internet. So I drop the idea of using twilio and any other whatsapp API. After thinking a lot, I got tired and opened android studio to start working on one of my apps. I connected my phone and then started the process. When the app was building a thought came to my mind to automate the whatsapp messaging using the phone itself. I searched a little about the same and found something which has great potential to solve my problem. I found a command-line tool known as &lt;code&gt;adb&lt;/code&gt; which helps one to control phone without touching the phone.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#things-you-should-have"&gt;
  &lt;/a&gt;
  Things you should have
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Basic understanding of Python&lt;/li&gt;
&lt;li&gt;Some Free time to read this blog&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;First, go to this &lt;a href="https://dl.google.com/android/repository/platform-tools-latest-windows.zip"&gt;link&lt;/a&gt; and download adb in your system.&lt;/li&gt;
&lt;li&gt;Extract the folder and put adb in the environment variables. Below is a complete process to add adb in environment variable,
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wJ5Tb43z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/matjf4dier920xhdl3xv.png" alt="Complete process of adding environment variables"&gt;
&lt;/li&gt;
&lt;li&gt;Enable usb debugging in your mobile phone and connect your mobile with pc using usb cable.&lt;/li&gt;
&lt;li&gt;Check if the connection is proper by opening cmd and type, &lt;code&gt;adb devices&lt;/code&gt;. You will see a device in List of devices attached.&lt;/li&gt;
&lt;li&gt;If you can see your device then you can open any code editor. I am using visual studio code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lets-begin"&gt;
  &lt;/a&gt;
  Let's Begin
&lt;/h2&gt;

&lt;p&gt;Let's first import some dependencies that we'll require. You can install them using &lt;code&gt;pip&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import cv2
import subprocess
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will be needing subprocess to call adb via command-line and get the output and we need cv2 to do some image processing so that python will able to click on the screen or any other task. &lt;br&gt;
Now let's create a basic function named adb below,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def adb(command):
    proc = subprocess.Popen(command.split(' '), stdout=subprocess.PIPE, shell=True)
    (out, _) = proc.communicate()
    return out.decode('utf-8')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What basically the above function is doing to call adb via subprocess and retrieve the output that we will be needing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tap"&gt;
  &lt;/a&gt;
  Tap
&lt;/h3&gt;

&lt;p&gt;Now let's write code where python will click the screen of the mobile device. So we will create a function named tap which will click on a specific location on the screen.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def tap(tap_x, tap_y):
    adb("adb shell input tap {} {}".format(tap_x, tap_y))
tap(100,100)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will click 100 px from x and 100 px from y. Now you must be thinking that it is very difficult to hard-code the coordinates for each command and it will not work when the device is changed that is why in the next sections of this blog we are going to use image processing to detect the coordinates automatically.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#taking-screenshot"&gt;
  &lt;/a&gt;
  Taking screenshot
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def take_screenshot(final):
    adb(f"adb exec-out screencap -p &amp;gt; ./images/{final}.png")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code is simple. We have made a function that save the screenshot of the mobile inside images directory. In the function, we can pass the name of the image file.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advanced-tap"&gt;
  &lt;/a&gt;
  Advanced Tap
&lt;/h3&gt;

&lt;p&gt;Now instead of passing coordinates, we will be using a target image to detect coordinates automatically. To understand this much better let's take an example, I have this screen&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tk9AUM8R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ri161mxpbgqhbnav3v3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tk9AUM8R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ri161mxpbgqhbnav3v3.png" alt="Screenshot of mobile screen"&gt;&lt;/a&gt;&lt;br&gt;
and I want to open the among us app then will use a process known as &lt;code&gt;TemplateMatching&lt;/code&gt;. With this process we will take screenshot of the screen &amp;gt; calculate the coordinates of among us icon using template matching &amp;gt; click there&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Here small_image is among us icon and big_image is the complete screenshot containing the among us icon
def image_position(small_image, big_image):
    img_rgb = cv2.imread(big_image)
    img_gray = cv2.cvtColor(img_rgb, cv2.COLOR_BGR2GRAY)
    template = cv2.imread(small_image, 0)
    height, width = template.shape[::]
    res = cv2.matchTemplate(img_gray, template, cv2.TM_SQDIFF)
    _, _, top_left, _ = cv2.minMaxLoc(res)
    bottom_right = (top_left[0] + width, top_left[1] + height)
    return (top_left[0]+bottom_right[0])//2, (top_left[1]+bottom_right[1])//2

screen="screen"
take_screenshot(screen)
x, y  = image_position("images/among_us_icon.png", f"images/{screen}")
click(x,y)
# WOWWW Python successfully opened among us app.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the above code even if you change the location of among us game on your mobile screen, python will still be able to open the game.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-more-can-we-do"&gt;
  &lt;/a&gt;
  What more can we do?
&lt;/h2&gt;

&lt;p&gt;There are many more things you can do with adb and python. Let's talk about some of them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#swipe"&gt;
  &lt;/a&gt;
  Swipe
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def swipe(start_x, start_y, end_x, end_y, duration_ms):
    adb("adb shell input swipe {} {} {} {} {}".format(start_x, start_y, end_x, end_y, duration_ms))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#call-someone"&gt;
  &lt;/a&gt;
  Call someone
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def call(number):
    adb(f"adb shell am start -a android.intent.action.CALL -d tel:{number}")
call('+91xxxxxxxxxx') # +[CODE][NUMBER]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#download-file-from-mobile-to-pc"&gt;
  &lt;/a&gt;
  Download file from Mobile to PC
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def download(path, output_path):
    adb(f"adb pull {path} {output_path}")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#remove-file-from-mobile"&gt;
  &lt;/a&gt;
  Remove file from Mobile
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def remove(path):
    adb(f"adb shell rm {path}") #/sdcard/...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#screen-recording-of-mobile"&gt;
  &lt;/a&gt;
  Screen Recording of Mobile
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# name is the video_file name and time is the seconds you want to record
def screen_record(name, time):
    adb(f"adb shell screenrecord /sdcard/{name} --time-limit {time}")
    download(f"/sdcard/{name}",f"./mobile/{name}")
    remove(f"/sdcard/{name}")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#switch-on-mobile-phone"&gt;
  &lt;/a&gt;
  Switch on Mobile Phone
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def switch_phone_on_off():
    adb("adb shell input keyevent 26")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are many more keyevent like 26. If you want to know then visit &lt;a href="https://stackoverflow.com/a/8483797/10566556"&gt;this&lt;/a&gt; link.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#opening-urls"&gt;
  &lt;/a&gt;
  Opening urls
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def open_url(url):
    adb(f'adb shell am start -a android.intent.action.VIEW -d {url}')
open_url("https://www.google.co.in/")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#sending-whatsapp-message"&gt;
  &lt;/a&gt;
  Sending Whatsapp Message
&lt;/h3&gt;

&lt;p&gt;Alright, So I think this is very cool. After getting all of this basic understanding we have arrived at my main issue that was to send whatsapp message without QR code, without PAID methods like twilio. It's a little tricky but It worked on my phone. I hope it works on your's as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def send_whatsapp_message(phone, message):
    adb(f'adb shell am start -a android.intent.action.VIEW -d "https://api.whatsapp.com/send?phone={phone}"') # Opening whatsapp url
    adb('ping 127.0.0.1 -n 2 &amp;gt; nul') # delay
    adb(f'adb shell input text "{message}"')  # entering message
    adb('adb shell keyevent 22') # Right arrow
    adb('adb shell keyevent 22') # Right arrow
    adb('adb shell input keyevent 22') # Right arrow 
    adb('adb shell input keyevent 22') # Right arrow
    adb('adb shell input keyevent 66') # Enter Key

send_whatsapp_message('+91xxxxxxxxxx', 'blah blah blah')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Message Sent!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So that was it for today. I hope you like the content I've posted in the blog post and it adds some value to your day. This is my first blog post and I was quite nervous before about my grammar, spelling, syntax errors and all that stuff. But I love when developers help each other in developing stuff. So it's my time to help others and spread what I know. With that being said I would like to end this blog here and wish to see you again.&lt;/p&gt;

&lt;p&gt;ü•≥ Happy Coding!&lt;/p&gt;

</description>
      <category>python</category>
      <category>android</category>
      <category>automation</category>
      <category>adb</category>
    </item>
    <item>
      <title>Google Core Web Vitals Explained</title>
      <author>Pranav</author>
      <pubDate>Sun, 03 Oct 2021 08:16:43 +0000</pubDate>
      <link>https://dev.to/codedamn/google-core-web-vitals-explained-2ojk</link>
      <guid>https://dev.to/codedamn/google-core-web-vitals-explained-2ojk</guid>
      <description>&lt;p&gt;If you are a web developer, you should understand the concept of core web vitals very well because there are parameters that help make your website more performant and faster and all the best practices to optimize your website perfectly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-web-vitals"&gt;
  &lt;/a&gt;
  Google Web Vitals
&lt;/h2&gt;

&lt;p&gt;There are many web vitals defined by google, and they have handpicked some of them and gave them the name core, and hence they are called &lt;strong&gt;core web vitals&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bh6rTnue--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hz3kwozbouuav6ha5876.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bh6rTnue--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hz3kwozbouuav6ha5876.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The three core web vitals are Cumulative Layout Shift, Largest Contentful Paint, and First Input Delay. These are mostly the guidelines that google follows to evaluate your website as software. And if the tests are passed then, that's a thumbs up from google.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-cumulative-layout-shift"&gt;
  &lt;/a&gt;
  1) Cumulative Layout Shift
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BZmTajUl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8520urlmsshds0qb8gm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BZmTajUl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8520urlmsshds0qb8gm.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Cumulative Layout Shift is the metric to measure the unexpected layout shifts within the viewport that occur during a page's entire lifecycle. This metric states the visual stability of the webpage as it also determines the User Experience for the most part. It's essential to understand the metrics unit, the unit of CLS is not in seconds because it's not measured in time. It measures the change in the viewport size or the shift of elements on the page. The lower the value, the better the score for this web vital.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-largest-contentful-paint"&gt;
  &lt;/a&gt;
  2) Largest Contentful Paint
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cRdOXGCO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mkrjl93kgtp5vov9dtq8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cRdOXGCO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mkrjl93kgtp5vov9dtq8.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This metric delivers the time. It says how fast the largest part of your page gets loaded. Let's say you have a small web page with a heading, paragraph, and an image that takes most of the web page. As the web page's largest part is the image, Google tracks the load of the image to determine the Largest Contentful Paint of the website. You can see in the below image what is the largest part of the web page in each loading phase.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VuUj1Ro4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/020ed9t9gzzy1b1mf7hr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VuUj1Ro4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/020ed9t9gzzy1b1mf7hr.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Its best in the LCP is in the range from 0 - 2.5 seconds. Also, Largest Contentful Paint and Cumulative Layout shift are somewhat interconnected. If you add the image to the web page dynamically, which takes a lot more time to load than the static pages, it affects both the values. After all, there is a cumulative shift in the user interface without any user input, which is unexpected for the user. The user experience of the web page is torn apart at the start itself.&lt;/p&gt;

&lt;p&gt;3) First Input Delay&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--emuqrczO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m1qkyuisrrh9gw8htgf7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--emuqrczO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m1qkyuisrrh9gw8htgf7.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Once the server responds with the necessary file to load your website, the first page that your web browser renders is the index.html page, and this HTML page might need some resources like CSS files, JavaScript files, or .wasm in some cases. If you are not familiar with how the HTML document is mounted on the browser, it is done by a single thread, and this thread is often referred to as UI thread or the main thread of the website. So, when the additional resources are fetched from the network, the process is asynchronous, which means the UI thread is not blocked. But once the downloading of the JavaScript files is completed, it must be executed. The execution of JavaScript blocks the main thread of the website.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DMy90hOv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3n5sg7ur0kk8531amkqo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DMy90hOv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3n5sg7ur0kk8531amkqo.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The longer the JavaScript takes to complete its execution, the longer your page will be unresponsive and the larger the penalty you face for more prolonged inactivity. The phase of the loading is measured as the first input delay by google. It's measured in seconds as it's a time metric. This is the most important metric of all the three that we have discussed because the whole interactivity of the page depends on the output reaction of your application. The FID value should be under 100 ms to maintain better responsiveness of your website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y5cqY6Z2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18xelvcipwbwc7qpwe75.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y5cqY6Z2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18xelvcipwbwc7qpwe75.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As mentioned in the above image, our website passes the Core Web Vitals assessment from the data collected over the previous 28 days. Our website is well under the maximum value that google puts in. The core web vitals play an essential role in determining the overall score of the website. Well, there is room for improvement on each page of the website. If you are aiming for the highest score possible on your website's main pages, that's enough.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--azEsMnI3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ypca9x1bmju98239d3ba.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--azEsMnI3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ypca9x1bmju98239d3ba.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Google also uses the Core Web Vitals as one of the Ranking factors of the SEO of your website, so make sure if you have a website than to maximize your core web vitals till the possible extent. There are a lot of factors that might affect the core web vitals, but the most important being the code of your website, which should be properly maintained to score an extra mile in the Page insights meter.&lt;/p&gt;

&lt;p&gt;You can watch the full YouTube video &lt;a href="https://www.youtube.com/watch?v=NItNEiWmJdU"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>google</category>
      <category>corewebvitals</category>
      <category>webdev</category>
    </item>
    <item>
      <title>The only guide to OPEN SOURCE CONTRIBUTION you will ever need.</title>
      <author>Adamay Mann</author>
      <pubDate>Sun, 03 Oct 2021 07:46:21 +0000</pubDate>
      <link>https://dev.to/mannadamay12/the-only-guide-to-open-source-contribution-you-will-ever-need-1ij2</link>
      <guid>https://dev.to/mannadamay12/the-only-guide-to-open-source-contribution-you-will-ever-need-1ij2</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-the-world-of-open-source-"&gt;
  &lt;/a&gt;
  What is the world of OPEN SOURCE ?
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#there-are-two-kinds-of-software"&gt;
  &lt;/a&gt;
  There are two kinds of software.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Open source software&lt;/strong&gt; - A software for which the original source code is made freely available and may be redistributed and modified according to the requirement of the user.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Proprietary software / Closed source software&lt;/strong&gt; - Closed source software refers to the computer software which source code is closes means public is not given access to the source code.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Both have their advantages and disadvantages , but in this guide we will be talking about Open Source.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Open-source software is developed in a decentralized and collaborative way, relying on peer review and community production. Open-source software is often cheaper, more flexible, and has more longevity than its proprietary peers because it is developed by communities rather than a single author or company.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#values-of-open-source"&gt;
  &lt;/a&gt;
  Values of Open source
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Transparency:&lt;/strong&gt;¬†Need to know exactly what kinds of data are moving where, or what kinds of changes have happened in the code? Open-source allows you to check and track that for yourself, without having to rely on vendor promises.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Reliability:&lt;/strong&gt;¬†Proprietary code relies on the single author or company controlling that code to keep it updated, patched, and working. Open-source code outlives its original authors because it is constantly updated through active open source communities.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Flexibility:&lt;/strong&gt;¬†Because of its emphasis on modification, you can use open-source code to address problems that are unique to your business or community. You aren‚Äôt locked in to using the code in any one specific way, and you can rely on community help and peer review when you implement new solutions.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Lower cost:&lt;/strong&gt;¬†With open-source the code itself is free‚Äîwhat you pay for when you use a company like Red Hat is support, security hardening, and help managing interoperability.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;No vendor lock-in:&lt;/strong&gt;¬†Freedom for the user means that you can take your open source code anywhere, and use it for anything, at anytime.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Open collaboration:&lt;/strong&gt;¬†The existence of active open source communities means that you can find help, resources, and perspectives that reach beyond one interest group or one company.&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#why-should-you-contribute-"&gt;
  &lt;/a&gt;
  Why should YOU contribute ?
&lt;/h1&gt;

&lt;p&gt;Spoiler Alert - Not just for free Tees&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Makes you a better developer&lt;/strong&gt;¬†- By contributing to an open-source project, you receive immediate feedback on your development and programming skills. As you create more pull requests and apply what you learned from previous submissions, you begin to learn how to write good code and submit outstanding pull requests for code review.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Expands your professional network&lt;/strong&gt;¬†- Building a robust professional network can help you achieve your career goals, learn more about your own or adjacent fields, and help with a job search. Contributing to open source is an excellent way to build that network. You join a welcoming community of hundreds or thousands of contributors, interact with like-minded developers in the open-source space, and make connections along the way.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Builds your resume -&lt;/strong&gt; Mentioning Open Source contributions on your resume , especially as a fresher leaves an extremely good impression on a recruiter.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Opens new doors -&lt;/strong&gt; Contributing to an open source project may even land you a job! For example, Mattermost has hired several contributors from its open source community to work full-time on the engineering team.&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#who-is-it-for-"&gt;
  &lt;/a&gt;
  Who is it for ?
&lt;/h1&gt;

&lt;p&gt;Open-source is a field where any person, expert, or novice can contribute and learn on the go. It is known that a person can't master anything. There is always scope for improvement. Hence, the gain comes from practicing repeatedly. It doesn't matter if you are just starting to contribute or a seasoned developer with a high number of contributions. You should always work to better this community by making as many contributions as you can do.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#when-can-you-get-started-"&gt;
  &lt;/a&gt;
  When can you get started ?
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#now-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;NOW !!!&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;If you are a first-time contributor, which everybody was at some point ‚Äì here are some links that will get you started in the open-source world :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/larymak/Python-project-Scripts"&gt;Python Project Scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opensourcefriday.com/"&gt;Open Source Friday&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://habitica.com/static/front"&gt;Hebatica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pinaxproject.com/"&gt;Pinax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.firsttimersonly.com/"&gt;First Timers Only&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codetriage.com/"&gt;Code Triage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://24pullrequests.com/"&gt;24 Pull Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://contributor.ninja/"&gt;Contributor Ninja&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/firstcontributions/first-contributions"&gt;First Contribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/deepsourcelabs/good-first-issue"&gt;Good First Issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pullrequestroulette.com"&gt;Pull Request Roulette&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Looking to contribute after all this open-source knowledge you just got? Do not forget to register in the biggest celebration of the open-source community ‚Üí &lt;a href="https://hacktoberfest.digitalocean.com/register"&gt;HACKTOBERFEST 2021&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#start-with-your-first-contribution"&gt;
  &lt;/a&gt;
  Start with your First Contribution
&lt;/h1&gt;

&lt;p&gt;This writeup aims to simplify and guide the way beginners make their first contribution. If you are looking to make your first contribution, follow the steps below.&lt;/p&gt;

&lt;p&gt;We will be using [git command line]&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fork-a-repository"&gt;
  &lt;/a&gt;
  Fork a repository
&lt;/h3&gt;

&lt;p&gt;Fork a repository on which you wish to work by clicking on the fork button on the top of this page. This will create a copy of this repository in your account.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#clone-the-repository"&gt;
  &lt;/a&gt;
  Clone the repository
&lt;/h3&gt;

&lt;p&gt;Now clone the forked repository to your machine. Go to your GitHub account, open the forked repository, click on the code button and then click the¬†&lt;em&gt;copy to clipboard&lt;/em&gt;¬†icon.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rUMW7UiS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-us-west-2.amazonaws.com/secure.notion-static.com/06191b7c-ada6-4707-a3ad-4e5f8ae9ac36/Untitled.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rUMW7UiS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-us-west-2.amazonaws.com/secure.notion-static.com/06191b7c-ada6-4707-a3ad-4e5f8ae9ac36/Untitled.png" alt="Untitled"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open a terminal in your machine and run the following git command:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;where "url you just copied" (without the quotation marks) is the url to this repository (your fork of this project).&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;clone&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"url you just copied"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-a-branch"&gt;
  &lt;/a&gt;
  Create a branch
&lt;/h3&gt;

&lt;p&gt;Change to the repository directory on your computer (if you are not already there):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="nt"&gt;-name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now create a branch using the git checkout command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;checkout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="nt"&gt;-new-branch-name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#make-and-commit-changes"&gt;
  &lt;/a&gt;
  Make and commit changes
&lt;/h3&gt;

&lt;p&gt;When you stage changes in a file in the repository, the major thing you need to do is commit those changes. If you go to the project directory and execute the command git status, you'll see there are changes. Add those changes to the branch you just created using the git add command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="nt"&gt;-in-which-changes-were-made&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have more than one files and you need to commit all changes, use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now commit those changes using the git commit command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;commit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-m&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"My first commit"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#push-changes-to-github"&gt;
  &lt;/a&gt;
  Push changes to GitHub
&lt;/h3&gt;

&lt;p&gt;Push your changes using the command git push:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;origin&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="nt"&gt;-your-branch-name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#submit-your-changes-for-review"&gt;
  &lt;/a&gt;
  Submit your changes for review
&lt;/h3&gt;

&lt;p&gt;If you go to your repository on GitHub, you'll see a Compare &amp;amp; pull request button. Click on that button.&lt;/p&gt;

&lt;p&gt;Now submit the pull request.&lt;/p&gt;

&lt;p&gt;Congrats! You just completed the standard fork -&amp;gt; clone -&amp;gt; edit -&amp;gt; pull request workflow that you'll encounter often as a contributor!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#way-forward"&gt;
  &lt;/a&gt;
  Way Forward
&lt;/h1&gt;

&lt;p&gt;Whether you just made your first open-source contribution or you‚Äôre looking for new ways to contribute, we hope you‚Äôre inspired to take action. Even if your contribution wasn‚Äôt accepted, don‚Äôt forget to say thanks when a maintainer put effort into helping you. People like you make open source: one issue, pull request, comment, or high-five at a time. Celebrate üéâ your contribution and share it with your friends and followers. Never stop contributing to the open-source family, as it will help you become better as a developer and programmer. Through Open Source, you will get to meet and learn from some fantastic people and help those who lack some skillset.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#authors"&gt;
  &lt;/a&gt;
  Authors
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Ishaan-10"&gt;Ishaan Bhola&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mannadamay12"&gt;Adamay Mann&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>hacktoberfest</category>
      <category>opensource</category>
      <category>github</category>
      <category>microsoft</category>
    </item>
    <item>
      <title>Paxful Clone Script- Know better paxful exchange and its features</title>
      <author>jacksonjones</author>
      <pubDate>Sun, 03 Oct 2021 07:44:11 +0000</pubDate>
      <link>https://dev.to/jacksonjonesl2/paxful-clone-script-know-better-paxful-exchange-and-its-features-4lc</link>
      <guid>https://dev.to/jacksonjonesl2/paxful-clone-script-know-better-paxful-exchange-and-its-features-4lc</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-paxful"&gt;
  &lt;/a&gt;
  What is Paxful?
&lt;/h2&gt;

&lt;p&gt;In 2014, Ray Youssef and Artur Schaback founded EasyBitz which was then renamed to Paxful, which gets its name from the Latin word for "peace". They had one goal in mind when they created it: to make Bitcoin easier for everyone from businesses to traders.&lt;/p&gt;

&lt;p&gt;In this article, we are supposed to analyze the process of functioning paxful exchange, &lt;strong&gt;&lt;a href="https://radindev.com/paxful-clone-script/"&gt;paxful clone script&lt;/a&gt;&lt;/strong&gt;, benefits, features, functions, white-label paxful clone script, and how to build exchange like paxful.&lt;br&gt;&lt;br&gt;
As of this writing:&lt;br&gt;
Paxful grew their employee count by 26% last year.&lt;br&gt;
Paxful currently has 1 job openings. Paxful's estimated annual revenue is currently $54.3M per year.&lt;br&gt;
Paxful's estimated revenue per employee is $130,000&lt;br&gt;
A lot of big problems in the world revolve around money, specifically earning it and transporting it. Sending money around the world is not fast or cheap in any way, but Paxful changed that.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6p6Pix3b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2jkvf44h1ghvdneiwlqv.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6p6Pix3b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2jkvf44h1ghvdneiwlqv.jpeg" alt="paxful exchange statistics"&gt;&lt;/a&gt;&lt;br&gt;
Paxful is the p2p cryptocurrency marketplace where buyers and sellers are connected for business. Having over 300 payment methods available on Paxful creates it unbelievably easy to find proper suggestions.&lt;br&gt;
The p2p system of Paxful removes limits. You can think of your Paxful account as your very own financial passport. Also, you can send money and buy things from halfway around the world. &lt;br&gt;
As is the case with most P2P OTC exchange models, Paxful does not custody the fiat or fiat-like wallets, accounts, or instruments (gift cards, for example) used as counterparty to these trades and instead acts as a supervising authority over peers who use these wallets, accounts, or instruments to trade amongst themselves. As such, Paxful does not need to officially connect to the banking or regulatory infrastructure of many of the countries which it operates in. Because of this model, Paxful is able to onboard financially disconnected citizens of developing countries on a level that non-P2P OTC exchanges like Coinbase simply cannot. As of this writing, Paxful services trades in more than 70 currencies around the world and has made much of its traction in geographic regions that many bigger exchanges have not.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-what-is-clone-script"&gt;
  &lt;/a&gt;
  First, what is clone script?
&lt;/h2&gt;

&lt;p&gt;A clone script is a replacement code or architecture of an existing website. The purpose of the website clone script is, it helps the entrepreneurs to start business rapidly with popular and unique features and minimize the startup costs. Actually The Clone scripts are the copy of famous online businesses out there in the world. These scripts can be used by entrepreneurs to start their online business at ease.&lt;br&gt;
Some business owners say clone scripts are not legal. But it isn‚Äôt. Because cloning a website doesn‚Äôt mean that the clone scripts are made from the exact code of the existing website.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-and-benefits-of-using-clone-script"&gt;
  &lt;/a&gt;
  Features and benefits of using clone script
&lt;/h3&gt;

&lt;p&gt;Scalable and Customizable:&lt;br&gt;
Clone scripts are used in developing the clone app and it is very easy to customize the clone scripts according to the requirement of the project of the client. &lt;br&gt;
Quick Launch:&lt;br&gt;
The clone scripts do not take a long time to run as they are predefined scripts and already written and capable to run quickly.&lt;br&gt;
Low Cost:&lt;br&gt;
the clone scripts are open source so we can get that from the original site of the existing app though we do not have to pay any amount hence results in it being cost-effective.&lt;br&gt;
High Success Rate:&lt;br&gt;
The clone scripts are very powerful and we know that these are already used on someone‚Äôs site or used by many others though it is bug-free and attracted by the users across the globe. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-the-purpose-of-clone-scripts"&gt;
  &lt;/a&gt;
  What‚Äôs the purpose of clone scripts?
&lt;/h3&gt;

&lt;p&gt;The ultimate purpose of clone scripts is to help budding entrepreneurs to start their own online business hassle-free. Also eliminate the cost and time of development of the business applications. The entrepreneurs can buy the clone script from any of the service providers and customize them based on their preferences.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gJYAnvdr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3xji1qdgdngfwkpucl4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gJYAnvdr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3xji1qdgdngfwkpucl4.png" alt="paxful clone script"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-steps-to-build-website-like-paxful"&gt;
  &lt;/a&gt;
  6 steps to build website like paxful
&lt;/h2&gt;

&lt;p&gt;### Step1: Paxful Business Model&lt;br&gt;
Paxful is one of the most advanced clone scripts that you can use for making a high-end crypto trading platform. Using this powerful solution, it is possible for any entrepreneur to create an exchange as impeccable as Paxful. It has made the cryptocurrency exchange development more valuable for all the parties involved. From the developers to the exchange owners, it is prolific for everyone. paxful clone script works on a very strong architectural design that paves way for some big changes. The replication gets easier only because the platform has allowed you to use its technology. Otherwise, the security aspects are unbeatable and the functionality is also matchless. With this program, it is even possible for you to have a very certain style of trade. It brings a string of plugins and features for the users. To guarantee an honest exchange on the website, smart contracts with escrow are used. To reduce fraud, with other methods of exchange on the site, a system of reviews and reputation ratings has been introduced.&lt;br&gt;
The most incredible thing about Paxful is its versatile payment options. This Exchange offers 300+ payment options under six major categories such as&lt;br&gt;
‚Ä¢ Bank Transfer&lt;br&gt;
‚Ä¢ Online Wallet&lt;br&gt;
‚Ä¢ Itune gift card&lt;br&gt;
‚Ä¢ Amazon gift card&lt;br&gt;
‚Ä¢ Cash in Person&lt;br&gt;
‚Ä¢ Cryptocurrencies&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CLvtiFqP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cbvcdrjsazbbjc9skmzs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CLvtiFqP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cbvcdrjsazbbjc9skmzs.png" alt="paxful p2p finance"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-key-exchange-features"&gt;
  &lt;/a&gt;
  Step 2. Key Exchange Features
&lt;/h3&gt;

&lt;p&gt;Registration. To create a new Paxful account:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Open a web browser and launch the Paxful webpage&lt;/li&gt;
&lt;li&gt; Click Create account on the top right corner of the main page&lt;/li&gt;
&lt;li&gt; Complete the following fields on the signup form&lt;/li&gt;
&lt;li&gt; Click Create Paxful account&lt;/li&gt;
&lt;li&gt; Complete your captcha verification&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;User profiles.  Your public profile contains a summary of your account and your history on Paxful. Also, you can add an avatar (photo or any image), indicate the phone number, main currency and very briefly tell about yourself. In addition, you can configure notification settings in your profile. &lt;br&gt;
Remember that your public profile is visible to other Paxful users. On your public profile, other Paxful users will be able to view the following information about you:&lt;br&gt;
‚Ä¢ Username&lt;br&gt;
‚Ä¢ Profile picture&lt;br&gt;
‚Ä¢ Verification - information if your email, phone, ID or address are verified, and you were verified as a trusted vendor.&lt;br&gt;
‚Ä¢ Reputation - an aggregation of the positive and negative feedback that you have received on Paxful.&lt;br&gt;
‚Ä¢ Active offers - offers you created that are currently active.&lt;br&gt;
‚Ä¢ Your profile language&lt;br&gt;
‚Ä¢ Number of trade partners&lt;br&gt;
‚Ä¢ Number of trades&lt;br&gt;
‚Ä¢ Trade volume - total BTC you‚Äôve traded on Paxful.&lt;br&gt;
‚Ä¢ Number of users who trust you&lt;br&gt;
‚Ä¢ Number of users who have blocked you&lt;br&gt;
‚Ä¢ Time elapsed since you joined Paxful&lt;br&gt;
‚Ä¢ Last time you were online on Paxful&lt;br&gt;
Note: Your public profile will contain all the IDs you have earned on Paxful and will help other users decide if you are a safe trade partner or not.&lt;br&gt;
Verification, Know Your Customer (KYC). Paxful is one of the few crypto marketplaces that enforce KYC verification procedures. Verification is an important part of Paxful. Users who fail to verify their identity can continue to use the exchanger, but a limit on the volume of transactions will be set for them.&lt;br&gt;
Cryptocurrency wallet. The Paxful wallet is useful, protected, and easy to use on all your devices. You can simply manage your funds and top up directly through p2p marketplace, and send or receive Bitcoin, in just a few clicks. Over 3 million people have used the Paxful wallet to send and receive over 40,000 BTC. Its best-in-class security features make it one of the most trusted wallets in the world ‚Äî so you‚Äôll never have to choose between security and convenience.&lt;br&gt;
Security tools. Cryptocurrency holders and traders are especially vulnerable to cyber-attacks since digital currencies only run electronically. This is why choosing a secure and reliable online Bitcoin wallet is very essential. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Choose a crypto wallet that fits your needs&lt;/li&gt;
&lt;li&gt;Enable two-factor authentication&lt;/li&gt;
&lt;li&gt;Encrypt your Bitcoin wallet&lt;/li&gt;
&lt;li&gt;Backup your entire wallet regularly&lt;/li&gt;
&lt;li&gt;Utilize the multi-signature feature&lt;/li&gt;
&lt;li&gt;Keep your software updated&lt;/li&gt;
&lt;li&gt;Use different passwords for different accounts&lt;/li&gt;
&lt;li&gt;Never give away your private key&lt;/li&gt;
&lt;li&gt;Don‚Äôt click on unknown or suspicious links&lt;/li&gt;
&lt;li&gt;Use a secure Internet connection
Cryptocurrency purchase, sale and exchange. 
Over 350 ways to buy and sell Bitcoin: Select a payment method you like and trade directly with other people!
1.Bank Transfers
2.Exchange for Cash
3.Other Wallet (Send to over 140 online wallets worldwide)
4.Discounted Gift Cards
5.Digital Currencies
6.Goods &amp;amp; Services
Escrow. Escrow in the financial sense means an arrangement where a third party (not the buyer or the seller)  holds funds in safekeeping pending the completion of a promised obligation. And enables users to get guaranteed transactions. It is best if it is open source software so that users can verify the integrity of the smart contract and the absence of errors in the code. 
Reviews and rating system. On the Paxful website, users can distinguish reliable counterparties from unscrupulous or scammers. They can be positive, neutral or negative. You can leave a response instantly after the successful completion of the transaction (or its failure). 
Customer support. &lt;/li&gt;
&lt;li&gt; Customizable dashboard&lt;/li&gt;
&lt;li&gt; The ability to view site statistics (activity, trading volume, etc.)&lt;/li&gt;
&lt;li&gt; View user profiles&lt;/li&gt;
&lt;li&gt; Buy-Sell tab&lt;/li&gt;
&lt;li&gt; General information about the platform&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#step-3-monetization-of-the-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  Step 3. Monetization of the cryptocurrency exchange
&lt;/h3&gt;

&lt;p&gt;Publication fee. &lt;br&gt;
Buyer creates an escrow account&lt;br&gt;
One of the two parties, either the Buyer or Seller, will initiate the transaction. This process begins when the user inquires about the offering and creates an account on Crypto Exchange. With an account set up, the two parties can solidify the terms of their agreement.&lt;br&gt;
Advertisements. Advertising promotion fees, posters, contextual advertising and paid links - all this is used on the site and in the Paxful application to increase the profitability of the platform.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-marketing-strategy"&gt;
  &lt;/a&gt;
  Step 4: Marketing Strategy
&lt;/h3&gt;

&lt;p&gt;The paxful cryptocurrency exchange was launched in 2014 and is a peer-to-peer Bitcoin marketplace, has recently entered India. In the first 21 weeks of 2020, Paxful has recorded a minimum of $1 million in weekly volumes. Since the beginning of May 2020, the weekly traded Bitcoin volumes have grown setting three consecutive all-time highs ‚Äì with the week ending 17th May recording a total of $1.521 million (ATH).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-5-development-approaches"&gt;
  &lt;/a&gt;
  Step 5. Development approaches
&lt;/h3&gt;

&lt;p&gt;Template Solution. You can create a crypto exchange like Paxful using ready-made software. You can get it for free, for example, on GitHub, or buy for 300 - 1000 dollars. Free solutions usually have poor functionality and are not well tested for errors and other vulnerabilities. Paxful clones software sold may vary by manufacturer.&lt;br&gt;
Development from scratch. A more complex and expensive option to create a Paxful clone software, but it gives you more control over the development process and allows you to implement unique software solutions. The cost of creating a P2P crypto exchanger from scratch usually varies from 20 to 50 thousand dollars.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-6-get-the-consultation-from-the-experienced-clone-script-providers"&gt;
  &lt;/a&gt;
  Step 6. Get the consultation from the experienced clone script providers
&lt;/h3&gt;

&lt;p&gt;The script is usually developed by well-experienced and qualified experts. They take care of everything from development, design, testing, and deployment, allowing you to focus on just the customization part. There are many advantages involved with purchasing and deploying a Paxful clone script for your business.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-paxful-clone-script"&gt;
  &lt;/a&gt;
  What is Paxful Clone Script?
&lt;/h2&gt;

&lt;p&gt;Paxful clone script is the ready-made website script with a 100% source code by which one can easily build a bitcoin exchange just like Paxful. This script has been encrypted with high standard security features and designed based upon the cybersecurity protocols.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ct4hFwE_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iu87qezv90hl7aqfzzz8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ct4hFwE_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iu87qezv90hl7aqfzzz8.png" alt="White label Paxful Clone Script"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#white-label-paxful-clone-script"&gt;
  &lt;/a&gt;
  White label Paxful Clone Script
&lt;/h2&gt;

&lt;p&gt;White label Paxful Clone Script is a set of source code that contains all trading functionalities of the Paxful exchange website. White label Paxful clone script allows you to customize the features according to the current digital trend &amp;amp; it allows you to change brand name, logo, theme, design according to your business needs at that moment.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-benefits-of-paxful-clone-script-to-start-a-p2p-cryptocurrency-exchange-software"&gt;
  &lt;/a&gt;
  The benefits of Paxful clone script to start a P2P cryptocurrency exchange software
&lt;/h3&gt;

&lt;p&gt;‚Ä¢ Ready to launch&lt;br&gt;
‚Ä¢ Skip development from scratch&lt;br&gt;
‚Ä¢ No technical assistance&lt;br&gt;
‚Ä¢ Easy customization&lt;br&gt;
‚Ä¢ Save time and money&lt;br&gt;
These are benefits you can get to develop a P2P crypto exchange with Paxful clone script.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Icmy_lJ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p3scklu11gilnpfjvfvd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Icmy_lJ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p3scklu11gilnpfjvfvd.png" alt="Paxful Clone App Development"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#paxful-clone-app"&gt;
  &lt;/a&gt;
  Paxful Clone App
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#paxful-clone-app-development"&gt;
  &lt;/a&gt;
  Paxful Clone App Development
&lt;/h3&gt;

&lt;p&gt;Paxful Clone App is the cryptocurrency exchange trading app that contains all the crypto trading features of the Paxful app and also the additional features that help you to develop your own Crypto Exchange App such as Paxful. Ultra-fast transaction permits you trade crypto coins in a matter of seconds with 100+ payment gateway support.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o4w2BvN0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsjanjuk4mvrduxg5eqe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o4w2BvN0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsjanjuk4mvrduxg5eqe.png" alt="comparison between 2 exchanges"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#which-exchange-is-better-paxful-or-binance"&gt;
  &lt;/a&gt;
  Which exchange is better? Paxful or Binance!
&lt;/h3&gt;

&lt;p&gt;Binance is one of the leading online crypto exchanges offering Bitcoin. Paxful is a crypto trading exchange and digital wallet offering low fees and easy sign-up. Buy and sell an extensive list of leading and emerging crypto coins at Binance. Paxful offers buying and selling of the world's leading cryptocurrencies.&lt;br&gt;
Both the exchanges have a lot of positive aspects but if you are a seller, you should go for Binance due to low fees. On the other hand, a beginner might prefer Paxful because Binance‚Äôs website is a bit difficult to navigate.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
      <category>cryptocurrency</category>
      <category>p2p</category>
    </item>
    <item>
      <title>Clean architecture of Flutter application. Part 2 - Practice</title>
      <author>gandronchik</author>
      <pubDate>Sun, 03 Oct 2021 07:36:09 +0000</pubDate>
      <link>https://dev.to/george_andronchik/clean-architecture-of-flutter-application-part-2-practice-3562</link>
      <guid>https://dev.to/george_andronchik/clean-architecture-of-flutter-application-part-2-practice-3562</guid>
      <description>&lt;p&gt;Hello everyone. In the &lt;a href="https://dev.to/george_andronchik/clean-architecture-of-flutter-application-part-1-theory-3b6p"&gt;previous article&lt;/a&gt;, we spoke about clean architecture concepts. Now it's time to implement them.&lt;/p&gt;

&lt;p&gt;For a good understanding, we are going to develop a simple app. The app receives  info about solar flares and storms from the NASA API and presents it on the view.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-project"&gt;
  &lt;/a&gt;
  Create Project
&lt;/h3&gt;

&lt;p&gt;First of all, you have to install flutter. You may check &lt;a href="https://flutter.dev/docs/get-started/install"&gt;here&lt;/a&gt; the installation process.&lt;/p&gt;

&lt;p&gt;After that let‚Äôs create a project. There are few ways to do it. The basic way is to create a project by terminal command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;flutter create sunFlare
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have an example of a project. Let's modify it a bit by removing unwanted code and setting up directories.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lBD4mE5H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uofs1zivhrz5s9vhdb39.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lBD4mE5H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uofs1zivhrz5s9vhdb39.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, we‚Äôve created directories for each layer (data, domain, and presentation) and another one for the application layer which will contain application initialization and dependency injections. Also, we‚Äôve created files app.dart (app initialization) and home.dart (main view of application). Code of these files you can see below:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;main:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:flutter/material.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/application/app.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="n"&gt;runApp&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Application&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;app:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:flutter/material.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/presentation/home.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Application&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="nd"&gt;@override&lt;/span&gt;
 &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;MaterialApp&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
     &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="s"&gt;'Flutter Demo'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
     &lt;span class="nl"&gt;theme:&lt;/span&gt; &lt;span class="n"&gt;ThemeData&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
       &lt;span class="nl"&gt;primarySwatch:&lt;/span&gt; &lt;span class="n"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;blue&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
       &lt;span class="nl"&gt;visualDensity:&lt;/span&gt; &lt;span class="n"&gt;VisualDensity&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;adaptivePlatformDensity&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
     &lt;span class="o"&gt;),&lt;/span&gt;
     &lt;span class="nl"&gt;home:&lt;/span&gt; &lt;span class="n"&gt;Home&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
   &lt;span class="o"&gt;);&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;home:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:flutter/material.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Home&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatefulWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="nd"&gt;@override&lt;/span&gt;
 &lt;span class="n"&gt;_HomeState&lt;/span&gt; &lt;span class="n"&gt;createState&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_HomeState&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;_HomeState&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Home&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="nd"&gt;@override&lt;/span&gt;
 &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first step behind and now it‚Äôs time to develop a domain.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#domain"&gt;
  &lt;/a&gt;
  Domain
&lt;/h3&gt;

&lt;p&gt;As you can understand from the &lt;a href="https://dev.to/george_andronchik/clean-architecture-of-flutter-application-part-1-theory-3b6p"&gt;previous article&lt;/a&gt;, the domain layer is the most important part of the application and it‚Äôs the first layer you should design. By the way, if you design a backend system, you just think about what entities (aggregators) should exist in the system and design it. So far as we are designing the client application, we already have some initial data (which we fetch from the backend), so we should take it into consideration when designing our domain entities. However, it doesn‚Äôt mean we have to use the same data format as we receive from the backend. Our application has its own business logic, so we have to define entities that participate in this process.&lt;/p&gt;

&lt;p&gt;Now then, here is our domain-level models:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:meta/meta.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;GeoStorm&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;gstId&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;startTime&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;GeoStorm&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;
   &lt;span class="nd"&gt;@required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gstId&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
   &lt;span class="nd"&gt;@required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;startTime&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
 &lt;span class="o"&gt;});&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:meta/meta.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SolarFlare&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;flrID&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;startTime&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;endTime&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;classType&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;sourceLocation&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;SolarFlare&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;
   &lt;span class="nd"&gt;@required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;flrID&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
   &lt;span class="nd"&gt;@required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;startTime&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
   &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;endTime&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
   &lt;span class="nd"&gt;@required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;classType&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
   &lt;span class="nd"&gt;@required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sourceLocation&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
 &lt;span class="o"&gt;});&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are going to implement a use case for collecting last solar activities (geo storm and solar flare), so let‚Äôs define the model first.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:meta/meta.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'solar_flare.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'geo_storm.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SolarActivities&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;SolarFlare&lt;/span&gt; &lt;span class="n"&gt;lastFlare&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;GeoStorm&lt;/span&gt; &lt;span class="n"&gt;lastStorm&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;SolarActivities&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;
   &lt;span class="nd"&gt;@required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;lastFlare&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
   &lt;span class="nd"&gt;@required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;lastStorm&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
 &lt;span class="o"&gt;});&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fine. Now we have business-level models. Let‚Äôs define protocols for repositories returning these models.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:meta/meta.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/domain/entities/geo_storm.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;GeoStormRepo&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;GeoStorm&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getStorms&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;
   &lt;span class="nd"&gt;@required&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
   &lt;span class="nd"&gt;@required&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
 &lt;span class="o"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:meta/meta.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/domain/entities/solar_flare.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SolarFlareRepo&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SolarFlare&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getFlares&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;
   &lt;span class="nd"&gt;@required&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
   &lt;span class="nd"&gt;@required&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
 &lt;span class="o"&gt;});&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And as I‚Äôve promised here is a use case.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/domain/entities/solar_activities.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/domain/repos/geo_storm_repo.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/domain/repos/solar_flare_repo.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SolarActivitiesUseCase&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;GeoStormRepo&lt;/span&gt; &lt;span class="n"&gt;_geoStormRepo&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;SolarFlareRepo&lt;/span&gt; &lt;span class="n"&gt;_solarFlareRepo&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;SolarActivitiesUseCase&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;_geoStormRepo&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;_solarFlareRepo&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

 &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SolarActivities&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getLastSolarActivities&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;fromDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;now&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;subtract&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Duration&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;days:&lt;/span&gt; &lt;span class="mi"&gt;365&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
   &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;toDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;now&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

   &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;storms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_geoStormRepo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getStorms&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;from:&lt;/span&gt; &lt;span class="n"&gt;fromDate&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;to:&lt;/span&gt; &lt;span class="n"&gt;toDate&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
   &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;flares&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_solarFlareRepo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getFlares&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;from:&lt;/span&gt; &lt;span class="n"&gt;fromDate&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;to:&lt;/span&gt; &lt;span class="n"&gt;toDate&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;SolarActivities&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;lastFlare:&lt;/span&gt; &lt;span class="n"&gt;flares&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;last&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;lastStorm:&lt;/span&gt; &lt;span class="n"&gt;storms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;last&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Good. Now let me clarify what we‚Äôve done just now. First of all, we designed the data models we needed for our use case. After that, we found out where to get those models from and defined repository protocols. Finally, we implemented a direct use case, which function is to return the last solar activities. It calls functions of repositories, extracts and collects last solar activities and returns it.&lt;/p&gt;

&lt;p&gt;The tree of domain layer directory should looks like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--12bzlpL7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bsqokglh7q7bvo57967k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--12bzlpL7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bsqokglh7q7bvo57967k.png" alt="Domain layer directory"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We‚Äôve just implemented the core of our application ‚Äî the business logic. Now it's time to take care of the data layer.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#data"&gt;
  &lt;/a&gt;
  Data
&lt;/h3&gt;

&lt;p&gt;The first step is quite similar to the first step of the previous section - we are going to design the data models which will be fetched from the network.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/domain/entities/geo_storm.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;GeoStormDTO&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;gstId&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;startTime&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;GeoStormDTO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fromApi&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;dynamic&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gstId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'gstID'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
       &lt;span class="n"&gt;startTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'startTime'&lt;/span&gt;&lt;span class="o"&gt;]),&lt;/span&gt;
       &lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'link'&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/domain/entities/solar_flare.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SolarFlareDTO&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;flrID&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;startTime&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;endTime&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;classType&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;sourceLocation&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;SolarFlareDTO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fromApi&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;dynamic&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flrID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'flrID'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
       &lt;span class="n"&gt;startTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'beginTime'&lt;/span&gt;&lt;span class="o"&gt;]),&lt;/span&gt;
       &lt;span class="n"&gt;endTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'endTime'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'endTime'&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;classType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'classType'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
       &lt;span class="n"&gt;sourceLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'sourceLocation'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
       &lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'link'&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;DTO means Data Transfer Object. It‚Äôs an usual name for transport layer models. The models implement constructors parsing JSON.&lt;/p&gt;

&lt;p&gt;The next code snippet contains the implementation of NasaService, which is responsible for NASA API requests.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:dio/dio.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/data/entities/geo_storm_dto.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/data/entities/solar_flare_dto.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:intl/intl.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;NasaService&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;_BASE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'https://kauai.ccmc.gsfc.nasa.gov'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;Dio&lt;/span&gt; &lt;span class="n"&gt;_dio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Dio&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
   &lt;span class="n"&gt;BaseOptions&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;baseUrl:&lt;/span&gt; &lt;span class="n"&gt;_BASE_URL&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
 &lt;span class="o"&gt;);&lt;/span&gt;

 &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;GeoStormDTO&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getGeoStorms&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_dio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
     &lt;span class="s"&gt;'/DONKI/WS/get/GST'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
     &lt;span class="nl"&gt;queryParameters:&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
       &lt;span class="s"&gt;'startDate'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DateFormat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'yyyy-MM-dd'&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
       &lt;span class="s"&gt;'endDate'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DateFormat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'yyyy-MM-dd'&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;},&lt;/span&gt;
   &lt;span class="o"&gt;);&lt;/span&gt;

   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;map&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;GeoStormDTO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fromApi&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)).&lt;/span&gt;&lt;span class="na"&gt;toList&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;

 &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SolarFlareDTO&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getFlares&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_dio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
     &lt;span class="s"&gt;'/DONKI/WS/get/FLR'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
     &lt;span class="nl"&gt;queryParameters:&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
       &lt;span class="s"&gt;'startDate'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DateFormat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'yyyy-MM-dd'&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
       &lt;span class="s"&gt;'endDate'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DateFormat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'yyyy-MM-dd'&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;},&lt;/span&gt;
   &lt;span class="o"&gt;);&lt;/span&gt;

   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
       &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;map&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;SolarFlareDTO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fromApi&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;
       &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toList&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The service contains methods calling API and returning DTO objects.&lt;/p&gt;

&lt;p&gt;Now we have to extend our DTO models. We are going to implement mappers from data layer models to domain layer models.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/domain/entities/geo_storm.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;GeoStormDTO&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;gstId&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;startTime&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;GeoStormDTO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fromApi&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;dynamic&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gstId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'gstID'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
       &lt;span class="n"&gt;startTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'startTime'&lt;/span&gt;&lt;span class="o"&gt;]),&lt;/span&gt;
       &lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'link'&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;extension&lt;/span&gt; &lt;span class="n"&gt;GeoStormMapper&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;GeoStormDTO&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="n"&gt;GeoStorm&lt;/span&gt; &lt;span class="n"&gt;toModel&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;GeoStorm&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;gstId:&lt;/span&gt; &lt;span class="n"&gt;gstId&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;startTime:&lt;/span&gt; &lt;span class="n"&gt;startTime&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/domain/entities/solar_flare.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SolarFlareDTO&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;flrID&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;startTime&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;endTime&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;classType&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;sourceLocation&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;SolarFlareDTO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fromApi&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;dynamic&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flrID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'flrID'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
       &lt;span class="n"&gt;startTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'beginTime'&lt;/span&gt;&lt;span class="o"&gt;]),&lt;/span&gt;
       &lt;span class="n"&gt;endTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
           &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'endTime'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'endTime'&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;classType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'classType'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
       &lt;span class="n"&gt;sourceLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'sourceLocation'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
       &lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'link'&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;extension&lt;/span&gt; &lt;span class="n"&gt;SolarFlareMapper&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;SolarFlareDTO&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="n"&gt;SolarFlare&lt;/span&gt; &lt;span class="n"&gt;toModel&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;SolarFlare&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
       &lt;span class="nl"&gt;flrID:&lt;/span&gt; &lt;span class="n"&gt;flrID&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
       &lt;span class="nl"&gt;startTime:&lt;/span&gt; &lt;span class="n"&gt;startTime&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
       &lt;span class="nl"&gt;classType:&lt;/span&gt; &lt;span class="n"&gt;classType&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
       &lt;span class="nl"&gt;sourceLocation:&lt;/span&gt; &lt;span class="n"&gt;sourceLocation&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And finally it‚Äôs time to implement repositories which protocols are in the domain layer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/data/services/nasa_service.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/domain/entities/geo_storm.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/domain/repos/geo_storm_repo.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/data/entities/geo_storm_dto.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;GeoStormRepoImpl&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;GeoStormRepo&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;NasaService&lt;/span&gt; &lt;span class="n"&gt;_nasaService&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;GeoStormRepoImpl&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;_nasaService&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

 &lt;span class="nd"&gt;@override&lt;/span&gt;
 &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;GeoStorm&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getStorms&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_nasaService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getGeoStorms&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;map&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toModel&lt;/span&gt;&lt;span class="o"&gt;()).&lt;/span&gt;&lt;span class="na"&gt;toList&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/data/services/nasa_service.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/domain/entities/solar_flare.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/domain/repos/solar_flare_repo.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/data/entities/solar_flare_dto.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SolarFlareRepoImpl&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;SolarFlareRepo&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;NasaService&lt;/span&gt; &lt;span class="n"&gt;_nasaService&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;SolarFlareRepoImpl&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;_nasaService&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

 &lt;span class="nd"&gt;@override&lt;/span&gt;
 &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SolarFlare&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getFlares&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_nasaService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getFlares&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;map&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toModel&lt;/span&gt;&lt;span class="o"&gt;()).&lt;/span&gt;&lt;span class="na"&gt;toList&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The constructors of repositories accept NasaService. Methods call requests, map DTO models to domain models by mappers we have just realized, and return domain models to the domain layer.&lt;/p&gt;

&lt;p&gt;This is how the Data directory should look like now.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EcJwt3JI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjt02akeg2kcpogwo16o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EcJwt3JI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjt02akeg2kcpogwo16o.png" alt="Data layer directory"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#user-interface"&gt;
  &lt;/a&gt;
  User Interface
&lt;/h3&gt;

&lt;p&gt;Almost there. Domain and Data are behind, now it‚Äôs time for Presentation Layer.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I am not going to write a lot about presentation layer architectures in this article. There is a range of variants and if you are interested in this topic, please let me know in the comments.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As long as we decided to use the MVVM pattern for presentation layer architecture, let‚Äôs add dependencies for RX.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;flutter:
 ...
 mobx: any
 flutter_mobx: any
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, we need to add packets to dev dependencies to generate files that allow us to use annotations &lt;code&gt;@observable&lt;/code&gt;, &lt;code&gt;@computed&lt;/code&gt;, &lt;code&gt;@action&lt;/code&gt;. Just a bit of syntax sugar.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dev_dependencies:
...
 mobx_codegen: any
 build_runner: any
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We already have the view ‚Äî Home. Just add the file called home_state.dart nearby. This file will contain viewModel (which in flutter is usually called state for some reason). And add the code to the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:mobx/mobx.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/domain/use_cases/solar_activities_use_case.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/domain/entities/solar_activities.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;part&lt;/span&gt; &lt;span class="s"&gt;'home_state.g.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HomeState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HomeStateBase&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;_$HomeState&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HomeStateBase&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Store&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="n"&gt;HomeStateBase&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;_useCase&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;getSolarActivities&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;

 &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;SolarActivitiesUseCase&lt;/span&gt; &lt;span class="n"&gt;_useCase&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

 &lt;span class="nd"&gt;@observable&lt;/span&gt;
 &lt;span class="n"&gt;SolarActivities&lt;/span&gt; &lt;span class="n"&gt;solarActivities&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

 &lt;span class="nd"&gt;@observable&lt;/span&gt;
 &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;isLoading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

 &lt;span class="nd"&gt;@action&lt;/span&gt;
 &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getSolarActivities&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;isLoading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
   &lt;span class="n"&gt;solarActivities&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_useCase&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getLastSolarActivities&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
   &lt;span class="n"&gt;isLoading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nothing special here. We call our use case in the constructor. Also, we have two observable properties ‚Äî solarActivities and isLoading. solarActivities is just the model returned by the use case. isLoading shows us if the request is in progress. The view will subscribe to these variables soon.&lt;/p&gt;

&lt;p&gt;To generate class &lt;code&gt;home_state.g.dart&lt;/code&gt; (to use &lt;code&gt;@obsevable&lt;/code&gt; annotations), just call the command in terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;flutter packages pub run build_runner build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let‚Äôs come back to our view ‚Äî home.dart and update it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:flutter/material.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:flutter_mobx/flutter_mobx.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/presentation/home_state.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Home&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatefulWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="n"&gt;HomeState&lt;/span&gt; &lt;span class="n"&gt;homeState&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;Home&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nd"&gt;@required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;homeState&lt;/span&gt;&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

 &lt;span class="nd"&gt;@override&lt;/span&gt;
 &lt;span class="n"&gt;_HomeState&lt;/span&gt; &lt;span class="n"&gt;createState&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_HomeState&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;_HomeState&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Home&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;_body&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Observer&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
     &lt;span class="nl"&gt;builder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;homeState&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
         &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
           &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;CircularProgressIndicator&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
         &lt;span class="o"&gt;);&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
         &lt;span class="nl"&gt;crossAxisAlignment:&lt;/span&gt; &lt;span class="n"&gt;CrossAxisAlignment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;stretch&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
         &lt;span class="nl"&gt;children:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
           &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
               &lt;span class="s"&gt;'Last Solar Flare Date: &lt;/span&gt;&lt;span class="si"&gt;${widget.homeState.solarActivities.lastFlare.startTime}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
           &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
               &lt;span class="s"&gt;'Last Geo Storm Date: &lt;/span&gt;&lt;span class="si"&gt;${widget.homeState.solarActivities.lastStorm.startTime}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
         &lt;span class="o"&gt;],&lt;/span&gt;
       &lt;span class="o"&gt;);&lt;/span&gt;
     &lt;span class="o"&gt;},&lt;/span&gt;
   &lt;span class="o"&gt;);&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;

 &lt;span class="nd"&gt;@override&lt;/span&gt;
 &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;body:&lt;/span&gt; &lt;span class="n"&gt;SafeArea&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;_body&lt;/span&gt;&lt;span class="o"&gt;()));&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;HomeState object in initializator as an argument and extremely simple UI. If isLoading == true, we show an activity indicator. If not, we present data of the last solar activities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#application"&gt;
  &lt;/a&gt;
  Application
&lt;/h3&gt;

&lt;p&gt;Finish him! We have everything we need, now it's time to keep it together. The application layer includes dependency injections and initializations. Create directory dependencies in the application directory and add two files there.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/domain/repos/geo_storm_repo.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/domain/repos/solar_flare_repo.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/data/repos/geo_storm_repo.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/data/repos/solar_flare_repo.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/data/services/nasa_service.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RepoModule&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;GeoStormRepo&lt;/span&gt; &lt;span class="n"&gt;_geoStormRepo&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;SolarFlareRepo&lt;/span&gt; &lt;span class="n"&gt;_solarFlareRepo&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

 &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;NasaService&lt;/span&gt; &lt;span class="n"&gt;_nasaService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NasaService&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

 &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;GeoStormRepo&lt;/span&gt; &lt;span class="n"&gt;geoStormRepo&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_geoStormRepo&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
     &lt;span class="n"&gt;_geoStormRepo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GeoStormRepoImpl&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_nasaService&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
   &lt;span class="o"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;_geoStormRepo&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;

 &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;SolarFlareRepo&lt;/span&gt; &lt;span class="n"&gt;solarFlareRepo&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_solarFlareRepo&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
     &lt;span class="n"&gt;_solarFlareRepo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SolarFlareRepoImpl&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_nasaService&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
   &lt;span class="o"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;_solarFlareRepo&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/domain/use_cases/solar_activities_use_case.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/presentation/home_state.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'repo_module.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HomeModule&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;HomeState&lt;/span&gt; &lt;span class="n"&gt;homeState&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HomeState&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SolarActivitiesUseCase&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
       &lt;span class="n"&gt;RepoModule&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;geoStormRepo&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;RepoModule&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;solarFlareRepo&lt;/span&gt;&lt;span class="o"&gt;()));&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Come back to app.dart and throw &lt;code&gt;HomeModule.homeState()&lt;/code&gt; to Home constructor:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:flutter/material.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/application/dependencies/home_module.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:sunFlare/presentation/home.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Application&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="nd"&gt;@override&lt;/span&gt;
 &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;MaterialApp&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
     &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="s"&gt;'Flutter Demo'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
     &lt;span class="nl"&gt;theme:&lt;/span&gt; &lt;span class="n"&gt;ThemeData&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
       &lt;span class="nl"&gt;primarySwatch:&lt;/span&gt; &lt;span class="n"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;blue&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
       &lt;span class="nl"&gt;visualDensity:&lt;/span&gt; &lt;span class="n"&gt;VisualDensity&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;adaptivePlatformDensity&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
     &lt;span class="o"&gt;),&lt;/span&gt;
     &lt;span class="nl"&gt;home:&lt;/span&gt; &lt;span class="n"&gt;Home&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;homeState:&lt;/span&gt; &lt;span class="n"&gt;HomeModule&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;homeState&lt;/span&gt;&lt;span class="o"&gt;()),&lt;/span&gt;
   &lt;span class="o"&gt;);&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the application and enjoy the result :)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2N3-L5g---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r64o24ritasrzek36fr7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2N3-L5g---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r64o24ritasrzek36fr7.png" alt="Result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Congratulations! We‚Äôve got it. Now you understand how to build the clean architecture of the flutter application. In case you don‚Äôt understand something, feel free to ask me in the comments.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Full code example you can find at&lt;/strong&gt; &lt;a href="https://github.com/gandronchik/flutter_clean_arch"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>architecture</category>
      <category>dart</category>
    </item>
  </channel>
</rss>
