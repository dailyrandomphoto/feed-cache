<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Top Ultimate B2B Video Marketing Ideas to Use for 2021</title>
      <author>Explain Ninja</author>
      <pubDate>Wed, 03 Nov 2021 10:49:31 +0000</pubDate>
      <link>https://dev.to/explain_ninja/top-ultimate-b2b-video-marketing-ideas-to-use-for-2021-2fb2</link>
      <guid>https://dev.to/explain_ninja/top-ultimate-b2b-video-marketing-ideas-to-use-for-2021-2fb2</guid>
      <description>&lt;p id="c0c9"&gt;We’ve studied expert video marketing prognosis and are ready to share the ideas for attracting leads in B2B with videos that will be relevant this year and how you may apply them in your video marketing. Let’s go!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QGVAKW_G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/560/1%2AMJPMmmKrAAyLNvPpAQsy0A.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QGVAKW_G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/560/1%2AMJPMmmKrAAyLNvPpAQsy0A.gif" alt="" width="800" height="600"&gt;&lt;/a&gt;&lt;/p&gt;
Created by &lt;a href="https://explain.ninja/works/" rel="noopener ugc nofollow"&gt;Explain Ninja&lt;/a&gt;



&lt;h1 id="c6f9"&gt;5 Ideas for B2B to Look for Your Marketing Success&lt;/h1&gt;

&lt;p id="4bd9"&gt;At least five ideas will be helpful for your strategy since vi&lt;span id="rmm"&gt;&lt;span id="rmm"&gt;&lt;span id="rmm"&gt;&lt;span id="rmm"&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;eos or animations may solve many performance problems in increasingly popular formats. Namely, from live broadcasts, explainer videos, short ads, leaving subscribers, for example, with a promotional code for the company’s products and so much more, the market is now full of ideas that may transform your marketing into live-commerce. Check them out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MFRZn057--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/24/1%2AjHRxvHbICEI8DiNdLnFOPA.png%3Fq%3D20" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MFRZn057--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/24/1%2AjHRxvHbICEI8DiNdLnFOPA.png%3Fq%3D20" alt="" width="24" height="18"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W7Dte_Af--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/560/1%2AjHRxvHbICEI8DiNdLnFOPA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W7Dte_Af--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/560/1%2AjHRxvHbICEI8DiNdLnFOPA.png" alt="" width="560" height="420"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a href="https://explain.ninja/about/" rel="noopener ugc nofollow"&gt;Video Designing&lt;/a&gt; Process



&lt;h1 id="b8c4"&gt;Idea # 1 Explainer Video marketing&lt;/h1&gt;

&lt;p id="2dfe"&gt;Videos help generate leads for 83% of marketers. Data visualization rules. That’s why it is recommended to add a call to action at the end of the video. Make it easier for them to reach what you offer them which means to improve your business UX. If you don’t, your potential customers will have to look for additional information about the service you promote via your explainer videos.&lt;/p&gt;

&lt;p id="df22"&gt;So do not forget that there are at least two ways to get leads via your videos: request contacts before watching it and offer to fill in a form after watching the video with a clear, powerful CTA.&lt;/p&gt;

&lt;h1 id="aee6"&gt;Idea # 2 Content marketing&lt;/h1&gt;

&lt;p id="27fc"&gt;Customers trust brands that provide them with valuable and exciting information, &lt;a href="https://explain.ninja/blog/6-amazing-types-of-animation-styles/" rel="noopener ugc nofollow"&gt;styled content&lt;/a&gt;. Plus, 80% of business decision-makers prefer to learn about a company from articles rather than advertisements. This makes content marketing one of the most effective B2B or even B2P lead generation tools out there. Video or text, make sure you apply to content in your ads, do not release videos without incredibly well-thought scripts and high-quality sounds.&lt;/p&gt;

&lt;h1 id="3ea0"&gt;Idea # 3 Influence marketing&lt;/h1&gt;

&lt;p id="7c14"&gt;One of the critical trends in lead generation is marketing based on the recommendations of the so-called influencers. The audience trusts native integrations in influencer blogs more than the usual formats of advertising on the Internet. The influencer becomes an intermediary between the audience and the brand and influences audience loyalty. So you may integrate influencer content into your videos or allow the chosen influencers to use your video content for mutual benefits. The business owners themselves tend to give more preference to native blogger content. And this sets the trend.&lt;/p&gt;

&lt;h1 id="4a41"&gt;Idea # 4 Omnichannel marketing&lt;/h1&gt;

&lt;p id="2d43"&gt;The Omnichannel strategy is a complex use of communication channels, each of which supports the others. This means that you use your videos on the video streaming channels, connect to your business website, distribute your video content on social media or your influencers’ markets or even through email or messenger tools directly to your most loyal customers.&lt;/p&gt;

&lt;p id="ff81"&gt;Multichannel seeks to achieve different goals depending on the channel. There is one set of goals in the omnichannel approach, but other media are used to achieve them.&lt;/p&gt;

&lt;h1 id="d82a"&gt;Idea # 5 Video production services&lt;/h1&gt;

&lt;p id="4ea5"&gt;To make it easier to generate leads from their great video ads, the top marketers tend to automate routine tasks like sending emails, segmenting leads, finding contacts, etc via. Many services appear on the market that may automate their lead generation processes. This is one thing, and it’s common.&lt;/p&gt;

&lt;p id="2319"&gt;Another thing is that they use professional &lt;a href="https://explain.ninja/about/" rel="noopener ugc nofollow"&gt;animated video production&lt;/a&gt; to create video content which is a high standard and has greater odds to bring incredible results from the start while distributed via any chosen communication channel or all at once.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L9PpS0gF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/24/1%2AtcgE9QxbgsSmwcg5ruQQFA.png%3Fq%3D20" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L9PpS0gF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/24/1%2AtcgE9QxbgsSmwcg5ruQQFA.png%3Fq%3D20" alt="" width="24" height="17"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KkCKHp6o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/560/1%2AtcgE9QxbgsSmwcg5ruQQFA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KkCKHp6o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/560/1%2AtcgE9QxbgsSmwcg5ruQQFA.png" alt="" width="560" height="417"&gt;&lt;/a&gt;&lt;/p&gt;
Business Design, Source: &lt;a href="https://dribbble.com/Fireart-d" rel="noopener ugc nofollow"&gt;Dribbble&lt;/a&gt;



&lt;h1 id="f9a6"&gt;Wrapping up&lt;/h1&gt;

&lt;p id="aa7b"&gt;How to integrate the above-mentioned ideas into your strategy and benefit all in one? Here is the checklist:&lt;/p&gt;

&lt;p id="3dca"&gt;1. Create both video and text lead magnets by offering useful checklists, explainers &amp;amp; guides, or instructions in exchange for contacts.&lt;/p&gt;

&lt;p id="cf8b"&gt;2. Create and run blogs with video content.&lt;/p&gt;

&lt;p id="4e7c"&gt;3. Make both videos with helpful tips and reviews, as well as ads. For example, if you sell real estate, you may start a video blog showing rooms, etc.&lt;/p&gt;

&lt;p id="9471"&gt;4. Organize webinars &amp;amp; speak at video conferences. There you may show your ads for good.&lt;/p&gt;

&lt;p id="8c75"&gt;5. Use a professional &lt;a href="https://explain.ninja/blog/the-software-for-explainer-video-explainer-video-toolkit/" rel="noopener ugc nofollow"&gt;video marketing toolkit&lt;/a&gt;.&lt;/p&gt;

&lt;p id="399f"&gt;Through your video content marketing:&lt;/p&gt;

&lt;p id="1082"&gt;· you demonstrate the expertise of the company;&lt;/p&gt;

&lt;p id="caee"&gt;· increase loyalty, as potential customers receive new knowledge from you;&lt;/p&gt;

&lt;p id="be48"&gt;· collect their contacts: 80% of users are ready to share them in exchange for receiving useful content via your videos.&lt;/p&gt;

&lt;p id="2c35"&gt;Also, welcome to read on 6 more &lt;a href="https://explain.ninja/blog/top-6-video-marketing-trends-expected-in-2021/" rel="noopener ugc nofollow"&gt;video marketing trends&lt;/a&gt; on our blog a bit in detail.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--blrC9_Uw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/24/1%2A5sqhyKq0kP3XonompmtpGg.png%3Fq%3D20" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--blrC9_Uw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/24/1%2A5sqhyKq0kP3XonompmtpGg.png%3Fq%3D20" alt="" width="24" height="16"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Rk4Qcn6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/560/1%2A5sqhyKq0kP3XonompmtpGg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Rk4Qcn6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/560/1%2A5sqhyKq0kP3XonompmtpGg.png" alt="" width="560" height="385"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a href="https://explain.ninja/video-for-b2b/" rel="noopener ugc nofollow"&gt;B2B Video Marketing&lt;/a&gt;



&lt;p id="827f"&gt;Sky’s the limit! Make sure you set the goals and pick the best suitable communication channel to distribute your video for marketing campaigns. Create high-quality content with the help of &lt;a href="https://explain.ninja/contact-us/" rel="noopener ugc nofollow"&gt;professional video makers&lt;/a&gt; and use top-notch technologies to back up. Good luck!&lt;/p&gt;

</description>
      <category>design</category>
      <category>wordpress</category>
      <category>writing</category>
      <category>webdev</category>
    </item>
    <item>
      <title>10 VS Code Extensions to Fight Technical Debt</title>
      <author>Alex Omeyer</author>
      <pubDate>Wed, 03 Nov 2021 10:48:42 +0000</pubDate>
      <link>https://dev.to/alexomeyer/10-vs-code-extensions-to-fight-technical-debt-508f</link>
      <guid>https://dev.to/alexomeyer/10-vs-code-extensions-to-fight-technical-debt-508f</guid>
      <description>&lt;p&gt;Many engineering teams get stuck and cannot ship quality software fast because of technical debt.&lt;/p&gt;

&lt;p&gt;The best engineering teams I've talked to use the right tools to continuously refactor code, improve their codebase communication, and address technical debt🚀&lt;/p&gt;

&lt;p&gt;Here are VS Code extensions that'll help you do that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-glean"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://marketplace.visualstudio.com/items?itemName=wix.glean"&gt;Glean&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Glean provides refactoring tools for your React codebase: extract JSX into a new component, convert Class Components to Functional Components, wrapping with Hooks. It allows extracting JSX into new component, converting Class Components to Functional Components and vice-verse, wrapping JSX with conditional, renaming state variables and their setters simultaneously, and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w7_DQC1B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iik8e0rzwddnnx186mqv.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w7_DQC1B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iik8e0rzwddnnx186mqv.gif" alt="Alt Text" width="880" height="602"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-stepsize"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://www.stepsize.com/r/vscode?utm_medium=dev.to&amp;amp;utm_source=referral&amp;amp;utm_campaign=technical%20debt"&gt;Stepsize&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Stepsize is an editor-first issue tracker for technical debt. It allows Engineering teams to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create &amp;amp; view code issues directly from your editor&lt;/li&gt;
&lt;li&gt;Track &amp;amp; prioritise code improvements like technical debt&lt;/li&gt;
&lt;li&gt;Add key issues to your sprints with our Jira integration &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0L0sNd3y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07bq86an4k62k7upo1b3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0L0sNd3y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07bq86an4k62k7upo1b3.gif" alt="Image description" width="880" height="598"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-todo-highlight"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://marketplace.visualstudio.com/items?itemName=wayou.vscode-todo-highlight"&gt;TODO Highlight&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;If you like to mark sections of code with TODO and FIXME tags but keep forgetting about them then this plugin will solve your problem. It highlights TODO or FIXME phrases in the code so that you don’t forget what you wanted to fix or improve.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a1WE7tM0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ccn37vzyqjxbbgn1u8x4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a1WE7tM0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ccn37vzyqjxbbgn1u8x4.png" alt="Alt Text" width="880" height="559"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-todo-tree"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree"&gt;Todo Tree&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Todo Tree extension collects all your tasks scattered throughout the application at your command into one tree on the left side of the editor workspace. You can quickly search your workspace for comment tags like TODO and FIXME, and see them in a tree view.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--36BD26kJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2zrx08qysap69zz2in73.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--36BD26kJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2zrx08qysap69zz2in73.png" alt="Alt Text" width="880" height="388"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-abracadabra-refactor-this"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://marketplace.visualstudio.com/items?itemName=nicoespeon.abracadabra&amp;amp;ssr=false#overview"&gt;Abracadabra, refactor this!&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;With Abracadabra, you can quickly and safely refactor existing code in VS Code.&lt;/p&gt;

&lt;p&gt;VS Code ships with a few basic refactorings. Abracadabra supercharges your editor with shortcuts to trigger the most useful ones in no-time, quick fixes to suggest refactorings when appropriate, options to customize the UX to your needs, refactorings that work with .js, .jsx, .ts, .tsx and .vue files.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VQRIHmlA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvywnjvywv3fx1tv37t4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQRIHmlA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvywnjvywv3fx1tv37t4.gif" alt="Alt Text" width="856" height="560"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-sonarlint"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarlint-vscode"&gt;SonarLint&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;SonarLint lets you fix coding issues before they exist: like a spell checker, SonarLint highlights Bugs and Security Vulnerabilities as you write code, with clear remediation guidance so you can fix them before the code is even committed. SonarLint in VS Code supports analysis of JavaScript, TypeScript, Python, Java, HTML &amp;amp; PHP code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WqBD7eX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vkudc5zri6jj601rcch9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WqBD7eX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vkudc5zri6jj601rcch9.gif" alt="Alt Text" width="860" height="486"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-comment-anchors"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://marketplace.visualstudio.com/items?itemName=ExodiusStudios.comment-anchors"&gt;Comment Anchors&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Comment Anchors allows you to place anchors within comments or strings to place bookmarks within the context of your code. Anchors can be used to track TODOs, write notes, create foldable sections, or to build a simple navigation making it easier to navigate your files.&lt;/p&gt;

&lt;p&gt;Anchors can be viewed for the current file, or throughout the entire workspace, using an easy to use sidebar.&lt;/p&gt;

&lt;p&gt;Comment Anchors provides many configuration options, allowing you to tailor this extension to your personal workflow, and increase productivity.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wzw17tfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5eu0133wvnrw40l4eco7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wzw17tfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5eu0133wvnrw40l4eco7.gif" alt="Image description" width="880" height="422"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-javascript-assistant"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://marketplace.visualstudio.com/items?itemName=p42ai.refactor"&gt;JavaScript Assistant&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;JavaScript assistant will help you write modern, clear, and concise code. It offers 48 automated refactorings, cleanups and actions for JavaScript and TypeScript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1d8VANO5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k3vs17xcp446ycvcoib6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1d8VANO5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k3vs17xcp446ycvcoib6.gif" alt="Image description" width="520" height="258"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-new-relic-codestream"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://marketplace.visualstudio.com/items?itemName=CodeStream.codestream"&gt;New Relic CodeStream&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;New Relic CodeStream is a developer collaboration platform that integrates essential dev tools into VS Code. Eliminate context-switching and simplify code discussion and code review by putting collaboration tools in your IDE.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create and Review GitHub and GitLab Pull Requests&lt;/li&gt;
&lt;li&gt;Get Feedback on Work-in-Progress with Pre-PR Code Reviews&lt;/li&gt;
&lt;li&gt;Code Discussions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Av-crf5x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hp59ham0d2obdyjrnl78.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Av-crf5x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hp59ham0d2obdyjrnl78.gif" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-code-runner"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner"&gt;Code Runner&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Run code snippet or code file for multiple languages, such as C, C++, Java, JavaScript, PHP, Python, Perl, Perl 6, Ruby, Go, and many more.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run code file of current active Text Editor&lt;/li&gt;
&lt;li&gt;Run code file through context menu of file explorer&lt;/li&gt;
&lt;li&gt;Run selected code snippet in Text Editor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jf1JSLAQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pqmetfqnwmq5dg8u1cy8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jf1JSLAQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pqmetfqnwmq5dg8u1cy8.gif" alt="Image description" width="880" height="577"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>codequality</category>
      <category>vscode</category>
      <category>tooling</category>
      <category>refactorit</category>
    </item>
    <item>
      <title>Introduction to Angular CLI Builders</title>
      <author>Tarun Gurang</author>
      <pubDate>Wed, 03 Nov 2021 10:24:00 +0000</pubDate>
      <link>https://dev.to/tarungurang/introduction-to-angular-cli-builders-33p2</link>
      <guid>https://dev.to/tarungurang/introduction-to-angular-cli-builders-33p2</guid>
      <description>&lt;p&gt;In this blog, we'll look at a new API in Angular CLI that allows us to add new CLI features and enhance existing ones. We'll go over how to interact with this API and what extension points we can use to extend the CLI's features.&lt;/p&gt;

&lt;p&gt;With Angular 8, the Builders API was released, and it includes the ability to override commands such as ng build, ng test, and ng lint. Not to be confused with Angular Schematics, which can be used to add custom commands to ng generate or provide support for ng add.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#history"&gt;
  &lt;/a&gt;
  History
&lt;/h2&gt;

&lt;p&gt;We introduced the workspace file (angular.json) in the Angular CLI about a year ago, and we reworked several key principles of how its commands were implemented as a result. We ended up placing the following commands in boxes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Commands on the schematic diagram. We've probably heard of Schematics, the CLI's code generation, and modification library. It launched in version 5 and is now used in most commands that interact with our code, including new, generate, add, and update.&lt;/li&gt;
&lt;li&gt;Miscellaneous commands. help, version, config, doc, our newly added analytics, and our Easter eggs are all commands that are specially coded and are not unique to a project.&lt;/li&gt;
&lt;li&gt;Task commands. This category translates to "running a process on other people's code." The build is a good example, but linting and testing are also good examples.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This was originally designed to allow people to replace their webpack configuration or migrate to a different underlying build implementation; we started designing it a long time ago. We eventually came up with a basic task-running method that we could use as an experiment for the time being. This API was given the name "Architect" by us.&lt;/p&gt;

&lt;p&gt;The architect was a success with people who wanted to use a custom build or third-party libraries who wanted to customize their workflow, even though it wasn't officially sponsored. Nx used it to run Bazel commands, Ionic used it to run Jest unit tests, and users could use tools like ngx-build-plus to extend their webpack setup. And this was just the beginning.&lt;/p&gt;

&lt;p&gt;An enhanced version of this API is now stable and officially supported in Angular CLI version 8.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conceptual-overview"&gt;
  &lt;/a&gt;
  Conceptual Overview
&lt;/h3&gt;

&lt;p&gt;The CLI uses the Architect API for command implementations since it has tools for scheduling and coordinating tasks. It uses the workspace's angular.json to resolve tasks and goals to their builder implementation, and builders as the implementation of a task (which can schedule other builders).&lt;/p&gt;

&lt;p&gt;It's a generic framework that's designed to be adaptable and forward-thinking. It includes APIs for progress reporting, logging, and testing, as well as the ability to add new features.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read More: &lt;a href="https://www.ifourtechnolab.com/blog/how-to-implement-file-upload-in-angular"&gt;How To Implement File Upload In Angular?&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#builders"&gt;
  &lt;/a&gt;
  Builders
&lt;/h3&gt;

&lt;p&gt;Builders are functions that enforce the logic and behavior for a process that can be used instead of a command, such as running a linter.&lt;/p&gt;

&lt;p&gt;A builder is given two arguments: an input (or options) and a context that allows the CLI and the builder to communicate. The separation of concerns is the same as with Schematics: the CLI user provides options, the API provides context, and we provide the behavior. It can be synchronous, asynchronous, or watch several values and output them. BuilderOutput is the only output form that includes a success boolean field and an optional error field that can contain an error message.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#workspace-file-and-targets"&gt;
  &lt;/a&gt;
  Workspace File and Targets
&lt;/h4&gt;

&lt;p&gt;The angular.json workspace file is used by Architect to resolve targets and their options.&lt;/p&gt;

&lt;p&gt;The workspace is divided into projects by angular.json, and each project has a set of targets. Our default application, which is generated when we run ng new, is an example of a project. Create, which is run automatically while using ng build, is one of the project objectives. That target has three keys (by default):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;builder. When running this target, the name of the builder to use is of the form packageName:builderName.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;options. While running this target, a default set of options is used.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;configurations. When running this target with a particular configuration, a map of name to options has been used.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When executing a target, the options are resolved by first using the default options object, then overwriting values from the configuration used (if any), and finally overwriting values from the overrides object passed to scheduleTarget (). The overrides object in the Angular CLI is created using command line arguments. This is then applied to the builder's schema, and only if it satisfies, seems to be the context created and the builder itself executed.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#creating-an-api-builders-project"&gt;
  &lt;/a&gt;
  Creating an API Builders Project
&lt;/h4&gt;

&lt;p&gt;Let's take a look at the API before we start writing our builder.&lt;/p&gt;

&lt;p&gt;1.BuilderContext&lt;/p&gt;

&lt;p&gt;2.BuilderOutput&lt;/p&gt;

&lt;p&gt;3.createBuilder&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Looking for Genuine &lt;a href="https://www.ifourtechnolab.com/angular-js-development-company"&gt;AngularJS Development Company&lt;/a&gt;? Enquire Today.&lt;/strong&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#buildercontext"&gt;
  &lt;/a&gt;
  BuilderContext
&lt;/h5&gt;

&lt;p&gt;Let's take a look at some of the useful methods and properties that are available:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;reportStatus:&lt;/strong&gt; To report the status of a running task to the command prompt, use the reportStatus method.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;logger:&lt;/strong&gt; For logging purposes, logger offers methods such as log, debug, info, warn, error, and fatal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;scheduleTarget:&lt;/strong&gt; This approach allows us to schedule other tasks using the given config; for example, running the build task as part of our task.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#createbuilder"&gt;
  &lt;/a&gt;
  createBuilder
&lt;/h5&gt;

&lt;p&gt;This is the builder's entry point; it may return a promise or an observable of type BuilderOutput.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#builderoutput"&gt;
  &lt;/a&gt;
  BuilderOutput
&lt;/h5&gt;

&lt;p&gt;The following values can be returned by BuilderOutput:&lt;/p&gt;

&lt;p&gt;error: It is an error message to send to the application. it is an optional value&lt;/p&gt;

&lt;p&gt;info: this function returns a [key, value] pair and it is optional.&lt;/p&gt;

&lt;p&gt;success: It is required and can return a true/false value.&lt;/p&gt;

&lt;p&gt;target: It can return a configuration project and target this is optional.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Index.ts&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export default createBuilder&amp;lt;options&amp;gt;(
  async (options: Options, context: BuilderContext): Promise&amp;lt;builderoutput&amp;gt; =&amp;gt; {
context.reportStatus(`Executing "${options.command}"...`);
const configuration = options.configuration ? options.configuration : 'production';
    const build = await context.scheduleTarget({
      target: 'build',
      project: context.target !== undefined ? context.target.project : '',
      configuration
});
    const test = await context.scheduleTarget({
      target: 'test',
      project: context.target !== undefined ? context.target.project : ''
});
let buildResult = await build.result &amp;amp;&amp;amp; await test.result;
return { success: buildResult.success };
  });
&amp;lt;/builderoutput&amp;gt;&amp;lt;/options&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2.To test the builder locally, use the npm run build command.&lt;/p&gt;

&lt;p&gt;3.To link the package locally, use the npm link command.&lt;/p&gt;

&lt;p&gt;4.Using the CLI, create a new Angular application.&lt;/p&gt;

&lt;p&gt;5.Run npm link @example/command-runner we may modify the package name to fit the one mentioned in the builder's package. JSON is a type of data.&lt;/p&gt;

&lt;p&gt;6.In angular.json, add the following configuration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"[our-command]": {
  "builder": "@example/command-runner:command",
  "options": {
    "command": "[our-command]",
    "args": [
      "src/main.ts"
    ]
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;7.To test the builder, type ng run [project-name]: [our-command] or ng deploy if our command is for deploying. This will be available after the release of Angular CLI 8.3.0.&lt;/p&gt;

&lt;p&gt;We can also use it across multiple applications by publishing it on npm.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h6&gt;

&lt;p&gt;The use case for the builder’s API is even broader, and there are already many custom builders available. The CLI team decided to make ng deploy the command available after the custom builder to deploy became so popular.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>programming</category>
    </item>
    <item>
      <title>Day 47-49/100 Data Structures: Objects and Arrays</title>
      <author>Rio Cantre</author>
      <pubDate>Wed, 03 Nov 2021 10:18:04 +0000</pubDate>
      <link>https://dev.to/riocantre/day-47-49-data-structures-objects-and-arrays-eh8</link>
      <guid>https://dev.to/riocantre/day-47-49-data-structures-objects-and-arrays-eh8</guid>
      <description>&lt;p&gt;"On two occasions I have been asked, ‘Pray, Mr. Babbage, if you put into the machine wrong figures, will the right answers come out?’ [...] I am not able rightly to apprehend the kind of confusion of ideas that could provoke such a question."&lt;/p&gt;

&lt;p&gt;–– Charles Babbage, Passages from the Life of a Philosopher (1864)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jeLog1bO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/va26xeh01pnxrnpo9ump.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jeLog1bO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/va26xeh01pnxrnpo9ump.png" alt="data" width="880" height="484"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>programming</category>
      <category>challenge</category>
      <category>motivation</category>
    </item>
    <item>
      <title>Can you find the bug in this piece of code? - RegExp edition 🌍</title>
      <author>Keff</author>
      <pubDate>Wed, 03 Nov 2021 10:01:30 +0000</pubDate>
      <link>https://dev.to/nombrekeff/can-you-find-the-bug-in-this-piece-of-code-regexp-edition-27ac</link>
      <guid>https://dev.to/nombrekeff/can-you-find-the-bug-in-this-piece-of-code-regexp-edition-27ac</guid>
      <description>&lt;p&gt;Hey there! 👋&lt;/p&gt;

&lt;p&gt;I'm back with another installment of &lt;strong&gt;Find the bug&lt;/strong&gt;, this time with Typescript/Javascript. Regular expressions are useful, but can behave in some unexpected ways. Can you tell me what the code below will output and what the cause for it is? &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-dont-look-at-the-comments-to-prevent-spoilers-if-you-want-to-solve-it-by-yourself-"&gt;
  &lt;/a&gt;
  !! Don't look at the comments to prevent spoilers if you want to solve it by yourself !!
&lt;/h4&gt;




&lt;p&gt;&lt;strong&gt;Buggy code&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;TEST_REGEXP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;a-z0-9&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+_&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;a-z0-9&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+/gi&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isValidName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;TEST_REGEXP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;filenames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test_1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test_1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test_2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;other_test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;some_file&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;filenames&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValidName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#%C2%A0now-then-can-you-find-the-bug"&gt;
  &lt;/a&gt;
   Now then, can you find the bug?
&lt;/h3&gt;

</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>bugs</category>
      <category>regexp</category>
    </item>
    <item>
      <title>Improve our code with the property-based testing and fast-check</title>
      <author>Cédric Teyton</author>
      <pubDate>Wed, 03 Nov 2021 09:59:25 +0000</pubDate>
      <link>https://dev.to/promyze/improve-our-code-with-the-property-based-testing-and-fast-check-10p1</link>
      <guid>https://dev.to/promyze/improve-our-code-with-the-property-based-testing-and-fast-check-10p1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-propertybased-testing"&gt;
  &lt;/a&gt;
  🧪 Why property-based testing?
&lt;/h2&gt;

&lt;p&gt;At &lt;a href="https://promyze.com?utm_source=DevTo"&gt;Promyze&lt;/a&gt;, we're convinced that methodologies such as &lt;strong&gt;Test-Driven Development&lt;/strong&gt; (TDD) can really improve the quality of our code. But developers need relevant inputs to ensure our code answers a business requirement. Behavior-Driven Development or Example Mapping sessions help to generate concrete examples of the behavior of a feature. This clearly brings value for developers and allows them to start writing tests and business code. &lt;/p&gt;

&lt;p&gt;However, our tests usually cover a &lt;strong&gt;restricted range of inputs&lt;/strong&gt; that come from our examples. We assume they are representative enough for our tests. But what if we want to test edge cases? Or if we're not sure that our test is representative? &lt;/p&gt;

&lt;p&gt;This is where &lt;strong&gt;property-based testing&lt;/strong&gt; comes in. This post is a short intro to this concept. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-pbt"&gt;
  &lt;/a&gt;
  ❓ What is PBT?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Property-based testing&lt;/strong&gt; aims to identify and test &lt;strong&gt;invariants&lt;/strong&gt;: predicates that should be true, whatever the input data are. An invariant ****is a business rule that can be written as a predicate. &lt;/p&gt;

&lt;p&gt;A PBT framework will generate random input data and check if the invariant is valid. If one single execution fails, this means the code under test may have some defects in its implementation. But the PBT framework will give you the &lt;strong&gt;input data,&lt;/strong&gt; meaning you can reproduce the problem. &lt;/p&gt;

&lt;p&gt;PBT is not something new, the first research studies on that topic are from 1994, from &lt;a href="https://ieeexplore.ieee.org/document/367311"&gt;Fink &amp;amp; Levitt&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#illustration-with-a-test-case"&gt;
  &lt;/a&gt;
  🎓 Illustration with a test case
&lt;/h2&gt;

&lt;p&gt;Our platform &lt;a href="https://promyze.com?utm_source=DevTo"&gt;Promyze&lt;/a&gt; is designed for best coding practices sharing. Users can &lt;strong&gt;merge&lt;/strong&gt; two practices if they have the same intention. Each practice can have zero, one, or multiple &lt;strong&gt;categories&lt;/strong&gt;. During a merge, categories of both practices should be merged into the &lt;strong&gt;target&lt;/strong&gt; practice. &lt;/p&gt;

&lt;p&gt;Here is a simple implementation of this business rule (the &lt;em&gt;mergePractice&lt;/em&gt; method) and a unit test written in JS with Mocha and Chai. For simplicity, the code is written in the same file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;chai&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;chai&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;chai&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;mergePractice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;practice1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;practice2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;practice1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;practice2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Merge two practices&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should merge categories of the source practices into the target practice&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;practice1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;categories&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]};&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;practice2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;categories&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Node&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]};&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;targetPractice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mergePractice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;practice1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;practice2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;targetPractice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;eql&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Node&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, this code does not handle any edge case. The implementation is clearly straightforward with a &lt;em&gt;concat&lt;/em&gt; operation. We consider only a typical case with two practices having a single category. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#an-implementation-of-pbt-with-fastcheck"&gt;
  &lt;/a&gt;
  🚀 An implementation of PBT with fast-check
&lt;/h2&gt;

&lt;p&gt;Now comes the PBT with &lt;a href="https://github.com/dubzzz/fast-check"&gt;fast-check&lt;/a&gt;, an open-source framework developed by &lt;a href="https://twitter.com/ndubien"&gt;Nicolas Dubien&lt;/a&gt; for Javascript and Typescript.  &lt;/p&gt;

&lt;p&gt;From our example, we can identify &lt;strong&gt;two invariants&lt;/strong&gt; during the merge of two practices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There can't be any duplications in the &lt;strong&gt;categories&lt;/strong&gt; of the target practice.&lt;/li&gt;
&lt;li&gt;The categories of the target practice should not contain elements that do not appear in the source practices' categories.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the implementation of the two predicates.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;noDuplicationsPredicate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;targetPractice&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;targetPractice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;categories&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;targetPractice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;uniqueCategories&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;targetPractice&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;uniqueCategories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;targetPractice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;targetCategoriesShouldNotContainCategoriesNotInSourcePractices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sourcePractice1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sourcePractice2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;targetPractice&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;targetPractice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;targetPractice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;every&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; 
            &lt;span class="nx"&gt;sourcePractice1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;sourcePractice2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here is the test with fast-check :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Merge two practices&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should merge categories of the source practices into the target practice based on random data&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nx"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="nx"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
                &lt;span class="nx"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cat1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cat2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;practice1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;categories&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cat1&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
                    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;practice2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;categories&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cat2&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
                    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;targetPractice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mergePractice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;practice1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;practice2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;noDuplicationsPredicate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;targetPractice&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; 
                            &lt;span class="nx"&gt;targetCategoriesShouldNotContainCategoriesNotInSourcePractices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;practice1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;practice2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;targetPractice&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;}),&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;numRuns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In short: &lt;em&gt;fc.assert&lt;/em&gt; runs the property, &lt;em&gt;fc.property&lt;/em&gt; defines it, and &lt;em&gt;fc.array(fc.string())&lt;/em&gt; generates a random array of string values, possible empty. We ask here to run 10,000 iterations of the test. Of course the documentation of the framework will give your more information!&lt;/p&gt;

&lt;p&gt;After execution of our test (running with Mocha), we got the following error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Merge&lt;/span&gt; &lt;span class="nx"&gt;two&lt;/span&gt; &lt;span class="nx"&gt;practices&lt;/span&gt;
       &lt;span class="nx"&gt;should&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt; &lt;span class="nx"&gt;categories&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="nx"&gt;practices&lt;/span&gt; &lt;span class="nx"&gt;into&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt; &lt;span class="nx"&gt;practice&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
     &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Property&lt;/span&gt; &lt;span class="nx"&gt;failed&lt;/span&gt; &lt;span class="nx"&gt;after&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nx"&gt;tests&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1361468347&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0:0:3:2:3:2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;endOnFailure&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nl"&gt;Counterexample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[],[&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See the counterexample? You could argue that such a case should not normally happen, as categories should never be null or empty, but this is not the point here, it's just an illustration of PBT :). We've got which inputs raise the error.&lt;/p&gt;

&lt;p&gt;Thanks to that, we can slightly edit our business function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;mergePractice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;practice1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;practice2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;practice1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;practice2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next run, we realized that our business case did not cover duplicated categories :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Property&lt;/span&gt; &lt;span class="nx"&gt;failed&lt;/span&gt; &lt;span class="nx"&gt;after&lt;/span&gt; &lt;span class="mi"&gt;161&lt;/span&gt; &lt;span class="nx"&gt;tests&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;759575891&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;160:1:0:4:6&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;endOnFailure&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nl"&gt;Counterexample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;em&gt;mergePractice&lt;/em&gt; method should now be updated to avoid duplications. &lt;/p&gt;

&lt;p&gt;I think you've got it, right? PBT can complement your existing tests, and we showed an example of how this can help improve our codebase quality and the robustness of our tests. &lt;/p&gt;

&lt;p&gt;There are many more exciting features, such as &lt;strong&gt;Shrinking&lt;/strong&gt;, which tries to simplify the understanding of a failing test by reducing the problem at its lowest level. &lt;/p&gt;

&lt;p&gt;In a future post, we'll discuss how mutation testing can also be relevant to improve our codebase.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Top 10 Tips to Find the Best Mobile App Development Company
</title>
      <author>Vrinsoft Pty Ltd</author>
      <pubDate>Wed, 03 Nov 2021 09:46:02 +0000</pubDate>
      <link>https://dev.to/vrinsoftaustralia/top-10-tips-to-find-the-best-mobile-app-development-company-me6</link>
      <guid>https://dev.to/vrinsoftaustralia/top-10-tips-to-find-the-best-mobile-app-development-company-me6</guid>
      <description>&lt;p&gt;&lt;a href="https://www.vrinsoft.com.au/tips-to-find-the-best-mobile-app-development-company/"&gt;&lt;strong&gt;Top 10 Tips to Find the Best Mobile App Development Company&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The digital era is well and truly upon us as the number of businesses opting for mobile apps is on the rise. The number of devices that can connect to the Internet are also on the rise thus allowing the Internet to be easily accessible. Mobile apps offer a unique experience and are easy to use. It is possible to offer the consumers a wide range of features using advanced technologies along with an interface that is highly user friendly. It is essential for all businesses to develop mobile applications for their business to remain competitive.&lt;/p&gt;

&lt;p&gt;Searching for a &lt;a href="https://www.vrinsoft.com.au/mobile-app-development/"&gt;&lt;strong&gt;mobile App development company&lt;/strong&gt;&lt;/a&gt; is tough since there are so many offering similar services. This article is meant to make it easier to find the best one.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>android</category>
      <category>ios</category>
      <category>programming</category>
    </item>
    <item>
      <title>Top 7 Security Standards For Your Video Streaming Business
</title>
      <author>Charlotte Jane</author>
      <pubDate>Wed, 03 Nov 2021 09:41:48 +0000</pubDate>
      <link>https://dev.to/charlot/top-7-security-standards-for-your-video-streaming-business-3d8d</link>
      <guid>https://dev.to/charlot/top-7-security-standards-for-your-video-streaming-business-3d8d</guid>
      <description>&lt;p&gt;Secure &lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;video streaming&lt;/a&gt; is an internet video streaming service that puts privacy and security first. Secure streaming has a lot of connotations, and there are a lot of ways to approach it.&lt;/p&gt;

&lt;p&gt;For some, security streaming may be as simple as encrypting their stream with a password to keep undesirable viewers out. For others, safe &lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;video streaming&lt;/a&gt; may be a little more complicated, requiring cutting-edge encryptions and more stringent security standards.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#top-7-security-features-for-video-delivery"&gt;
  &lt;/a&gt;
  Top 7 Security Features for Video Delivery
&lt;/h2&gt;

&lt;p&gt;There are features explicitly intended to assist secure &lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;video streaming&lt;/a&gt;. For hosting safe live broadcasts and on-demand video libraries, these security measures are available.&lt;/p&gt;

&lt;p&gt;Let's look at some of the most important things to consider when comparing video hosting providers for secure &lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;video streaming&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-password-protection"&gt;
  &lt;/a&gt;
  1. Password Protection
&lt;/h3&gt;

&lt;p&gt;Password protection is one of the most basic ways of video security. This option allows you to set a password that prevents others from viewing your video material. Your stream will be safe as long as you can keep your password private.&lt;/p&gt;

&lt;p&gt;This strategy is useful for passing around a film secretly before distributing it publicly within a small business or group.&lt;/p&gt;

&lt;p&gt;If you're considering employing password-protected streaming, keep in mind that it's not completely secure. Passwords are easily shared among friends and colleagues, as well as in online forums.&lt;/p&gt;

&lt;p&gt;Change your video passwords every couple of months to keep things secure, and search Google for leaked passwords on a regular basis. Simply type "password for [VIDEO NAME] + [YOUR BRAND]" into Google, and any forums with your leaked password should appear.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-restrictions-based-on-location-and-domain"&gt;
  &lt;/a&gt;
  2. Restrictions based on location and domain
&lt;/h3&gt;

&lt;p&gt;Broadcasters can apply two different sorts of audience limitations to protect online video.&lt;/p&gt;

&lt;p&gt;A domain restriction is the first. This feature, as the name implies, limits the domains on which your stream can be seen. When you enable this option, you must enter the URLs of the websites where you want your films to play.&lt;/p&gt;

&lt;p&gt;Any attempt to embed your video on another website once it has been set up will fail. This helps to fight piracy by preventing others from putting your video player on their website.&lt;/p&gt;

&lt;p&gt;Geographic restrictions are the second sort of constraint. IP addresses are used in this way to whitelist specific countries. You pick which nations can access your films in a similar way to the approach described above. Users outside of these countries will be unable to see.&lt;/p&gt;

&lt;p&gt;If you're providing a very specialised audience in a very specific location, geo-restrictions are ideal.&lt;/p&gt;

&lt;p&gt;This procedure is extremely precise and adds an extra degree of security.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-paywalls-that-are-secure"&gt;
  &lt;/a&gt;
  3. Paywalls that are secure
&lt;/h3&gt;

&lt;p&gt;Payment security is crucial if you want to monetize your online movies and live streaming. Mixed-content warnings may cause you to lose a lot of clients if you don't have adequate payment security safeguards in place. In the worst-case situation, you could face negative publicity or even legal action as a result of your failure to protect client data.&lt;/p&gt;

&lt;p&gt;Flicknexs employs a player-to-player payment system. To safeguard payment information from unauthorised actors, this method is entirely HTTPS and employs bank-grade SSL encryption.&lt;/p&gt;

&lt;p&gt;Flicknexs also prohibits the sharing of login credentials in order to circumvent the video paywall. Users who have purchased video or live &lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;video streaming&lt;/a&gt; access are only allowed to log in on one device at a time. The original stream will be shut down if another login is discovered via another device.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-token-security-system-with-dynamic-tokens"&gt;
  &lt;/a&gt;
  4. Token Security System with Dynamic Tokens
&lt;/h3&gt;

&lt;p&gt;Tokenised video transmission is an advanced method for ensuring video security. This security feature is handy for embedding video material into a website or app.&lt;/p&gt;

&lt;p&gt;In a dynamic tokenised security system, the video player requests a new token every two minutes from the server. Domain limits, geographic restrictions, and other security measures are all regularly verified and cross-checked as a result of this. The video playback will immediately fail if improper tokens or no tokens are available.&lt;/p&gt;

&lt;p&gt;This method is absolutely transparent to the user, but it adds an additional degree of security to your material that is difficult to circumvent.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-monitoring-of-the-system"&gt;
  &lt;/a&gt;
  5. Monitoring of the System
&lt;/h3&gt;

&lt;p&gt;Select a video-on-demand service that offers system monitoring. This will aid in the detection of any security concerns or red flags.&lt;/p&gt;

&lt;p&gt;Both automated and human-managed security scans, inspections, and checks keep an eye on the Flicknexs &lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;video streaming&lt;/a&gt; solution. Video content storage, for example, necessitates SSH public-key authentication. Every day, security managers check the system's integrity and access.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-video-delivery-through-https"&gt;
  &lt;/a&gt;
  6. Video Delivery through HTTPS
&lt;/h3&gt;

&lt;p&gt;HTTPS is an encrypted web communication protocol that is widely used by government agencies, banks, and other businesses with sensitive data. Security is provided by this protocol in three ways.&lt;/p&gt;

&lt;p&gt;First, it protects the video file from alteration while it is in transit. Encrypted data cannot be modified while travelling over the internet without totally destroying the data.&lt;/p&gt;

&lt;p&gt;Second, HTTPS encrypts data and enables authentication. You can almost always be certain that data sent over HTTPS connections came from the source you believe it did.&lt;/p&gt;

&lt;p&gt;Finally, HTTPS safeguards against eavesdropping when used in conjunction with HLS delivery. Only the intended receiver should be able to access the data being delivered if everything is done correctly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-hls-highlevel-security-video-encryption"&gt;
  &lt;/a&gt;
  7. HLS (High-Level Security) Video Encryption
&lt;/h3&gt;

&lt;p&gt;HTTP live streaming is abbreviated as HLS. While there are various encryption methods available, AES-128 is the most widely utilised approach for HLS encryption. AES (Advanced Encryption Standard) is a 128-bit block cypher that encrypts and decrypts data. Here's a quick rundown of how AES-128 works.&lt;/p&gt;

&lt;p&gt;Broadcasters can add AES video encryption to a stream for security purposes in &lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;video streaming&lt;/a&gt;. A unique key scrambles the video content when it is encrypted. The video cannot be seen unless the viewer has the relevant access key. Furthermore, if they attempt to intercept it, all they will find is a jumbled mess of meaningless information.&lt;/p&gt;

&lt;p&gt;Authorised viewers can access AES-encrypted video via their web browser with a secure HTTPS connection at the same time. The encryption process is undetectable, but it adds a degree of security against interception and piracy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-sum-it-up"&gt;
  &lt;/a&gt;
  To Sum it Up:
&lt;/h2&gt;

&lt;p&gt;Customisation possibilities for a secure HTML5 online video player are more complicated than ever before, as this article demonstrates. Secure &lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;video streaming&lt;/a&gt; is essential in a world where threats and attack vectors are continually developing. It's critical to evaluate your objectives and select the most appropriate security measures for your streaming requirements.&lt;/p&gt;

&lt;p&gt;You may rely on the security safeguards provided by a professional-grade video hosting platform, such as Flicknexs, to protect your content.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Beginner's guide to deploy smart contract with an example</title>
      <author>Harish</author>
      <pubDate>Wed, 03 Nov 2021 09:31:53 +0000</pubDate>
      <link>https://dev.to/harishteens/beginners-guide-to-deploy-smart-contract-with-example-4ac0</link>
      <guid>https://dev.to/harishteens/beginners-guide-to-deploy-smart-contract-with-example-4ac0</guid>
      <description>&lt;p&gt;This guide tries to explain how to write and deploy smart contracts to Arweave using Javascript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#chapter-1"&gt;Fundamentals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-2"&gt;PreRequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-3"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-4"&gt;Setting up inital state&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-5"&gt;Updating state&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-6"&gt;Deployment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-7"&gt;Interacting with the contract&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-8"&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#fundamentals"&gt;
  &lt;/a&gt;
  Fundamentals &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#what-is-a-smart-contract"&gt;
  &lt;/a&gt;
  What is a smart contract?
&lt;/h4&gt;

&lt;p&gt;Smart contracts are digital substitutes of real world contracts. Once its coded and pushed to the chain, its immuatable, hence cannot be changed!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-to-write-one"&gt;
  &lt;/a&gt;
  How to write one?
&lt;/h4&gt;

&lt;p&gt;There are plenty of networks out there. I deployed my contract to &lt;a href="https://www.arweave.org/"&gt;Arweave&lt;/a&gt;. Unlike many other networks, the smart contracts on Arweave can be written in JavaScript. The process to write and deploy one is fairly straight forward.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  PreRequisites &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/ArweaveTeam/arweave-js#npm"&gt;Install Arweave CLI &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArweaveTeam/SmartWeave#cli-usage"&gt;Install Smartweave CLI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get &lt;a href="https://docs.arweave.org/info/wallets/arweave-web-extension-wallet#getting-started"&gt;Arweave wallet &lt;/a&gt; or &lt;a href="https://finnie.koii.network/"&gt;Finnie wallet&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Complete the above steps before moving ahead.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;There are two steps to deploying Smart Contracts on Arweave once the prerequisites are completed.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Write the smart contracts&lt;/strong&gt;
Go through the &lt;a href="https://github.com/ArweaveTeam/SmartWeave/blob/master/CONTRACT-GUIDE.md"&gt;Contract writing guide&lt;/a&gt; by Arweave Team. It contains an example of &lt;a href="https://github.com/ArweaveTeam/SmartWeave/blob/master/CONTRACT-GUIDE.md#hello-world-contract"&gt;Hello World&lt;/a&gt; that should set your fundamentals straight.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Deploy them via CLI&lt;/strong&gt;
Once the contract files are ready. To deploy it via the CLI, you would need to export the private key of your Arweave/Finnie Wallet which you must have created earlier. Here is the &lt;a href="https://github.com/ArweaveTeam/SmartWeave/blob/master/CONTRACT-GUIDE.md#hello-world-contract"&gt;CLI Usage guide&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-initial-state"&gt;
  &lt;/a&gt;
  Setting up initial state &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Please go through the introduction section and explore the attached resources before moving ahead.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Example Contract description&lt;/strong&gt; : Set up a Decentralised marketplace where people can donate to crowdsource fundraiser listings.&lt;/p&gt;

&lt;p&gt;Time to build our Crowdsource App 🥳🥳🥳&lt;/p&gt;

&lt;p&gt;In order to do that, we need two contracts to make it work.&lt;br&gt;&lt;br&gt;
A Collection contract that would contain all the information regarding the listing in its &lt;a href="https://github.com/HarishTeens/PeopleHelpPeople/blob/main/contracts/crowdsource/collection/init_state.json"&gt;state&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;owner&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;6Jfg5shIvbAcgoD04mOppSxL6LAqx6IfjL0JexxpmFQ&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tabs over Spaces&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This is my first petition. Please vote this petition to make spaces illegal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;funds&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;raised&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;goal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;records&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A Parent Crowdsource contract that would contain references to the above created collection contracts in its &lt;a href="https://github.com/HarishTeens/PeopleHelpPeople/blob/main/contracts/crowdsource/parent%20/init_state.json"&gt;state&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;owner&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;6Jfg5shIvbAcgoD04mOppSxL6LAqx6IfjL0JexxpmFQ&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;CrowdSource | PeopleHelpPeople&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;collections&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:{}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#updating-state"&gt;
  &lt;/a&gt;
  Updating state &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;There are two operations that could happen:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Users enlist a new crowdsource collection&lt;/li&gt;
&lt;li&gt;Users donate funds to the collection&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: These actions are basic and preliminary. Since I didnt have much time during the hackathon, this was all I could build. But obviously it could be expanded to make the system more usable and robust.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#enlisting-a-collection-contract"&gt;
  &lt;/a&gt;
  Enlisting a Collection Contract
&lt;/h4&gt;

&lt;p&gt;Lets take a look at the enlist function on the &lt;a href="https://github.com/HarishTeens/PeopleHelpPeople/blob/main/contracts/crowdsource/parent%20/index.js"&gt;Parent Contract&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;enlist&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listingId&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;undefined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ContractError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`PetitionId cant be null`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collections&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listingId&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ContractError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`PetitionId already exists`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collections&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listingId&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ContractError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Invalid input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The enlist function performs the essential checks firstly, then adds the reference to the collections object of the state. This serves as a means to keep track of all the crowdsource contracts on the chain.&lt;/p&gt;

&lt;p&gt;After enlisting a collection contract, the parent contract state should like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;owner&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;6Jfg5shIvbAcgoD04mOppSxL6LAqx6IfjL0JexxpmFQ&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;CrowdSource | PeopleHelpPeople&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;collections&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Ji6MP-Wt_LYk6yaTsxEnhlpbRpAu08248PUTxnp2qOU&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#donating-to-a-collection-contract"&gt;
  &lt;/a&gt;
  Donating to a Collection Contract
&lt;/h4&gt;

&lt;p&gt;Once the collection is enlisted, users could transfer funds to the collection. Feel free to use any wallet services to transfer tokens. But make sure you got the correct address on the owner field.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Since I used Finnie wallet, I put my Finnie address inside the owner field.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is the &lt;a href="https://github.com/HarishTeens/PeopleHelpPeople/blob/main/contracts/crowdsource/collection/index.js"&gt;Collection Contract&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;donate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;donorId&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;undefined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ContractError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`DonorId cant be null`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;undefined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ContractError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`amount cant be null`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ContractError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`amount must be a number`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;funds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;records&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;donorId&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;funds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;raised&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ContractError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Invalid input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After performing essential checks, the contracts state is updated with the donor payment ID(address) and the amount of funds they have contributed.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The default currency is assumed to be KOII. Again a place for improvement. To support various currencies, currency field could be added to the record.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is how the collection contract would look like once users have donated some funds.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;owner&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;6Jfg5shIvbAcgoD04mOppSxL6LAqx6IfjL0JexxpmFQ&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tabs over Spaces&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This is my first petition. Please vote this petition to make spaces illegal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;funds&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;raised&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.2109999999999999&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;goal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;records&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Ji6MP-Wt_LYk6yaTsxEnhlpbRpAu0824&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;6Jfg5shIvbAcgoD04mOppSxL6LAqx6IfjL0JexxpmFQ&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.001&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#deployment"&gt;
  &lt;/a&gt;
  Deployment &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;To deploy the contracts, use the Smartweave create command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;smartweave create [SRC LOCATION] [INITIAL STATE FILE] --key-file [YOUR KEYFILE]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It takes around 10-15 minutes for the contract to be deployed. &lt;strong&gt;Note that you would have to spend some AR in order to deploy the contract.&lt;/strong&gt; &lt;br&gt;
Once the create command completes, the CLI will output a unique transaction ID for the transaction. This ID is essential to proceed forward.&lt;/p&gt;

&lt;p&gt;To check the status of the transaction&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;arweave status [CONTRACT TXID]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To read the state of the contract&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;smartweave read [CONTRACT TXID]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;For a web GUI experience, check out &lt;a href="//viewblock.io"&gt;Viewblock.io&lt;/a&gt;. Its a handy website to check all the information about your contracts state, tags and transactions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#interacting-with-the-contract"&gt;
  &lt;/a&gt;
  Interacting with the contract &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It is time to send payloads to interact with the contract i.e. update the state. We would be using the enlist and donate functions that we set up earlier on the contracts.&lt;/p&gt;

&lt;p&gt;To interact with the transaction:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;smartweave write [CONTRACT TXID] --key-file [YOUR KEYFILE] \
  --input "[CONTRACT INPUT STRING HERE]"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For enlisting a contract&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;smartweave write [Parent Crowdsource Contract TXID] --key-file [YOUR KEYFILE] --input "{"function":"enlist","listingId":"&amp;lt;Collection contract TXID&amp;gt;"}"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For donating tokens to a collection&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;smartweave write [Collection Contract] --key-file [YOUR KEYFILE] --input '{"function":"donate","donorId":"&amp;lt;Donor wallet address&amp;gt;","amount":&amp;lt;number of tokens&amp;gt;}'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Congratulations 🥳🥳🥳&lt;br&gt;&lt;br&gt;
Hope you liked reading through the article. To summarise the learnings, you should have understood:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;What are smart contracts&lt;/li&gt;
&lt;li&gt;How to write and deploy one on Arweave&lt;/li&gt;
&lt;li&gt;How to Interact with them &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Read about my project I built for the hackathon if you're interested &lt;a href="#chapter-9"&gt;below&lt;/a&gt; 🙂&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#bonus-tip"&gt;
  &lt;/a&gt;
  Bonus Tip
&lt;/h4&gt;

&lt;p&gt;All of these are done via CLI, but to scale it to a real world application. You would need to the Arweave SDKs and APIs.&lt;br&gt;&lt;br&gt;
Happy Exploring 😉&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-my-project"&gt;
  &lt;/a&gt;
  About my project &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Its called &lt;strong&gt;People Help People&lt;/strong&gt;, the origin of the name comes from the idea of a society where people are not dependent on middle men or central systems to help each other. One can find more information about the Aim and Goals on the &lt;a href="https://docs.google.com/presentation/d/1aKKLEy4_jbnvHA1-2FpWgVjiqPK1W-jKKnlb-1cZPKc/edit?usp=sharing"&gt;Pitch Deck&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is a blockchain based project. It has two parts to it. The smart contracts and the web client interface. &lt;/p&gt;

&lt;p&gt;The project presently consists of two prototypes&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/People-Help-People/petitions"&gt;Petitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/People-Help-People/crowdsource"&gt;Crowdsource&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Both of these prototypes inherits the idea of PHP, i.e. to defeat the intervention of a central system. Hence I covered only one of them in the article. Once I learnt the basic fundamentals of how smart contracts work and how to write one, giving life to these two ideas was plain sailing. &lt;/p&gt;

&lt;p&gt;Devfolio Submission link: &lt;a href="https://devfolio.co/submissions/people-help-people-a3c8"&gt;https://devfolio.co/submissions/people-help-people-a3c8&lt;/a&gt;&lt;br&gt;&lt;br&gt;
GitHub Repo link: &lt;a href="https://github.com/HarishTeens/PeopleHelpPeople"&gt;https://github.com/HarishTeens/PeopleHelpPeople&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I had to struggle a lot to walk through the right steps in order to learn this. So I tried my best to make the learning smooth for a beginner. Please share your feedbacks in the comments.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#join-the-movement"&gt;
  &lt;/a&gt;
  Join the Movement
&lt;/h3&gt;

&lt;p&gt;If you're interested in joining the movement, dm me on Twitter so I could add you to the organisation &lt;a href="https://github.com/People-Help-People"&gt;People Help People&lt;/a&gt; on GitHub. It's a very recent org, so it appears to be blank at the moment. But definitely planning to work on it in the future ✨ &lt;/p&gt;

&lt;p&gt;Follow me on Twitter &lt;a href="https://twitter.com/harishteens"&gt;@HarishTeens&lt;/a&gt;   &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>blockchain</category>
      <category>web3</category>
    </item>
    <item>
      <title>How to write good Test Cases with examples</title>
      <author>Roselyne</author>
      <pubDate>Wed, 03 Nov 2021 09:22:54 +0000</pubDate>
      <link>https://dev.to/roselyne/how-to-write-good-test-cases-with-examples-2dp6</link>
      <guid>https://dev.to/roselyne/how-to-write-good-test-cases-with-examples-2dp6</guid>
      <description>&lt;p&gt;Test cases are an integral part of the testing process. But how can one write good test cases? They are used to verify that when a software application is being tested when it comes in contact with input, the output is what is expected.&lt;/p&gt;

&lt;p&gt;The test cases are executed by a tester. &lt;strong&gt;&lt;em&gt;The tester should have enough knowledge about the software being tested so that he/she can identify the prerequisites that are needed to proceed with the execution of the test cases.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Having sufficient knowledge is key because it saves time, effort and money for both the individuals executing the test cases and also for teams who have to write test cases.&lt;/p&gt;

&lt;p&gt;This information can help them know what value each hypothesis they write should have so that they don’t waste time implementing solutions not applicable or not suited for their use case.&lt;/p&gt;

&lt;p&gt;Prerequisites are to be satisfied before the test case can be executed.&lt;/p&gt;

&lt;p&gt;A test case generally has two parts:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-inputs"&gt;
  &lt;/a&gt;
  1) Inputs
&lt;/h3&gt;

&lt;p&gt;They describe what should happen when they are given different inputs – these will be given in different combinations to see if they produce the correct output. For example, one input might be “One plus One” and another input might be “2 minus 1”. These inputs would be combined with all other possible inputs to see which ones produce the desired results.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-outputs"&gt;
  &lt;/a&gt;
  2) Outputs
&lt;/h3&gt;

&lt;p&gt;Outputs describe what an application should produce when given a certain input. For example, if the input is “One plus One” the expected output would be “Two”.&lt;/p&gt;

&lt;p&gt;Most Test cases are generally created or written by Quality Assurance/Quality Control (QA/QC) testers.&lt;/p&gt;

&lt;p&gt;However, programmers also document test cases for themselves to ensure that they are testing each part of their application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tips-to-write-good-test-cases"&gt;
  &lt;/a&gt;
  Tips to write good test cases
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-avoid-test-repetition"&gt;
  &lt;/a&gt;
  1) Avoid test repetition
&lt;/h3&gt;

&lt;p&gt;it is difficult to determine if you have covered all possible input combinations or not. It is even harder to determine if a program has worked properly for each scenario.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-verify-the-application-works-properly-under-different-conditions"&gt;
  &lt;/a&gt;
  2) Verify the application works properly under different conditions
&lt;/h3&gt;

&lt;p&gt;This helps ensure that your application will work properly after a change has been made to it. For example, if a calculator is being tested and the programmer implements a new feature that doesn’t work as intended, the users of that calculator can check whether it works as expected or not by running tests created before and after the change was implemented, this is known as regression testing – see more here.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-have-someone-else-read-your-test-casespeer-reviews"&gt;
  &lt;/a&gt;
  3) Have someone else read your test cases(peer reviews)
&lt;/h3&gt;

&lt;p&gt;Peer reviews help to catch errors in logical thinking as well as typos that may have been introduced when writing test cases manually.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-consider-a-testdriven-development-approach"&gt;
  &lt;/a&gt;
  4) Consider a test-driven development approach
&lt;/h3&gt;

&lt;p&gt;This allows the test cases to be created by developers so that they can create a complete set of test cases for a demo/prototype rather than manually creating all the scenarios the software has to be tested against.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-tests-should-be-simple-and-easy-to-understand"&gt;
  &lt;/a&gt;
  5) Tests should be simple and easy to understand.
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#6-tests-should-be-easily-identified-by-the-title"&gt;
  &lt;/a&gt;
  6) Tests should be easily identified by the title
&lt;/h3&gt;

&lt;p&gt;Avoid writing vague titles like “Test for Input” or “Test for Output 2”. Keep in mind that your goal is to communicate what the test case does to the reader in the most concise manner possible.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-never-assume-any-test-scenarios"&gt;
  &lt;/a&gt;
  7) Never assume any test scenarios
&lt;/h3&gt;

&lt;p&gt;User stories, acceptance criteria or use cases should be written to describe expectations of the application. Do not write test cases without considering these as they can lead to you executing incorrect tests. Covered by other tests is a good Cucumber term, i.e., this scenario covers all those scenarios which are already written in the past.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-create-a-standard-testing-template-for-the-team-to-follow"&gt;
  &lt;/a&gt;
  8) Create a standard testing template for the team to follow
&lt;/h3&gt;

&lt;p&gt;It’s very useful as it can help keep the team members consistent in their test cases by following a format that works for the entire team.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Good Test Cases are the foundation that is used to create proper test plans, i.e., test cases are used to decide what should be present in the test plan, therefore creating a good plan is essential for maintaining high-quality software.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Good tests cover all functionalities that are required for the application being tested and ensure that these applications implement all necessary functions.&lt;/p&gt;

&lt;p&gt;A proper testing plan should contain Minimum Viable Product (MVP), User Acceptance Testing (UAT) and User Acceptance Testing with Regression Testing (UAT+R).&lt;/p&gt;

&lt;p&gt;Best practice to write good test cases:&lt;br&gt;
1) In most cases, Test cases should be written against the requirements and not against the design.&lt;/p&gt;

&lt;p&gt;Let’s take a look at some examples of good and bad test cases for the same scenario. Here we have a webpage that needs testing on basic login – logout functionality.&lt;/p&gt;

&lt;p&gt;Check &lt;a href="https://senseitechtips.com/software/how-to/how-to-write-good-test-cases-with-examples/"&gt;examples of good test cases on the main article here.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>testing</category>
      <category>test</category>
      <category>programming</category>
      <category>codequality</category>
    </item>
    <item>
      <title>5 reasons I started a developer blog and why you should concider starting one too</title>
      <author>Eli H. Schei</author>
      <pubDate>Wed, 03 Nov 2021 09:21:59 +0000</pubDate>
      <link>https://dev.to/elischei/5-reasons-i-started-a-developer-blog-and-why-you-should-concider-starting-one-too-2kml</link>
      <guid>https://dev.to/elischei/5-reasons-i-started-a-developer-blog-and-why-you-should-concider-starting-one-too-2kml</guid>
      <description>&lt;p&gt;After a two month “blogging dry spell” it might be a little ironic that now is when I decide to write a blogpost about blogging. But I’d like to get back into the habit of writing regularly, and I think you should consider it too! In this blogpost I will explain why.&lt;/p&gt;

&lt;p&gt;After a decade as a front-end developer I finally started a developer/tech-blog in february 2021. Why now? Why not 5 years ago, or 10 years ago? The short answer is “imposter syndrome”. I felt like everything was written before and/or I didn’t know enough about a subject to blog about it. None of these are good reasons for not blogging.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-you-have-a-unique-point-of-view"&gt;
  &lt;/a&gt;
  1. You have a unique point of view
&lt;/h2&gt;

&lt;p&gt;It does not matter if you have worked as a developer for years, or if you are just starting out. Your point of view are unique. Your ways of explaining something is unique, and even though there are hundreds of blogposts about a subject your blogpost might be the one that will help someone else.&lt;/p&gt;

&lt;p&gt;In my experience I can read multiple different blogposts about exactly the same topic, and only one of them makes sense to me. Thats why I decided to add my voice to the mix – and thats why there are always room for more bloggers!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-we-want-to-learn-from-someone-at-our-own-level-or-just-one-step-above"&gt;
  &lt;/a&gt;
  2. We wan’t to learn from someone at our own level – or just one step above
&lt;/h2&gt;

&lt;p&gt;Have you ever read a blogpost and thought “I feel like there is something secret written between the lines, and I don’t know what it is”. This can typically be a problem when an expert tries to write something for beginners. The expert have forgotten what it was like when they just started out, and take a lot of knowledge for granted – and without even thinking about it they leave it out of their explanations.&lt;/p&gt;

&lt;p&gt;Thats why you should write about stuff as you’re learning them, or right after. When you still remember all the questions you had, and what type of challanges you met.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-you-get-a-deeper-understanding-of-the-subject"&gt;
  &lt;/a&gt;
  3. You get a deeper understanding of the subject
&lt;/h2&gt;

&lt;p&gt;The process around writing a blogpost will give you a better understanding of a subject. And probably about some related subjects too.&lt;/p&gt;

&lt;p&gt;For most of my blogposts I try to find some good resources that the reader can benefit from – and that means I have to locate and read those resources myselfe to make sure they are relevant. If I was not blogging I probably would not read as many other blogs either – and I would miss out on the knowledge other people share.&lt;/p&gt;

&lt;p&gt;Writing things down also helps you to remember it better. And it gives you an reference you can go back to later. Like my github cheat sheet I use (and update) regularly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-you-help-others-avoid-the-issues-you-have-encountered"&gt;
  &lt;/a&gt;
  4. You help others avoid the issues you have encountered
&lt;/h2&gt;

&lt;p&gt;At some point in your developer journy you have probably encountered an issue that you have trouble finding good resources on. You know, when you actually go to page 2 on google out of desperation “Someone must have solved this before!?”. And after hours (days/weeks) you are finally able to fit together small pieces of information from multiple sources – and find the solution to your issue.&lt;/p&gt;

&lt;p&gt;The next time this happens you should write about the issue – and the solution – so the next person that is googling it doesn’t need to spend as much time on it! Sharing is caring!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-it-can-give-you-opertunities"&gt;
  &lt;/a&gt;
  5. It can give you opertunities
&lt;/h2&gt;

&lt;p&gt;A lot of developers have portfolios to showcase what they can do. But if you don’t have time to create multiple portfolio projects a blog is a great way to showcase your knowledge, and highlight what you’re most interested in.&lt;/p&gt;

&lt;p&gt;A blogpost can also be a great outline to a conference talk, or even a workshop. You can use it as a baseline if you are sending in a call for papers, or creating an online course.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-you-can-earn-some-money"&gt;
  &lt;/a&gt;
  6. You can earn some money
&lt;/h2&gt;

&lt;p&gt;This is not one of my reasons, and it is not a goal for me right now. But that does not mean that it can’t be one of yours. Lots of people make money of their content, here are some great resources you can look into:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.compiled.blog/blog/how-i-made-80000-in-2020"&gt;“How I made $80,000 on side projects in 2020” – Emma Bostian, compiled.blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://edidiongasikpo.com/5-ways-developers-can-make-money-through-blogging"&gt;“5 ways developers can make money through blogging” – Edidiong Asikpo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Maybe one day I’ll take this blog ‘to the next level’ and monitize it, but for now I’m happy with keeping it simple and don’t overthink this blogging thing. 🙂&lt;/p&gt;




&lt;p&gt;Did you find this article usefull? &lt;a href="https://twitter.com/acupof_dev"&gt;Follow me on twitter&lt;/a&gt; to be notified when I publish something new!&lt;/p&gt;

&lt;p&gt;Also, if you have any feedback or questions, please let me know in the comments below. 🙂&lt;/p&gt;

&lt;p&gt;Thank you for reading, and happy coding!&lt;/p&gt;

&lt;p&gt;/Eli&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to implement Redis Cache Using Spring boot?</title>
      <author>ROHAN KADAM</author>
      <pubDate>Wed, 03 Nov 2021 09:21:57 +0000</pubDate>
      <link>https://dev.to/rohan2596/how-to-implement-redis-cache-using-spring-boot-42gk</link>
      <guid>https://dev.to/rohan2596/how-to-implement-redis-cache-using-spring-boot-42gk</guid>
      <description>&lt;p&gt;Hello 👋,Its Rohan Kadam 😊&lt;/p&gt;

&lt;p&gt;Hello All 👋, You all may have in mind many questions such as &lt;strong&gt;What is Redis Cache? Why use Redis Cache? How to use Redis Cache?&lt;/strong&gt; In this blog, we are going to answer all the questions asked above but predominately &lt;strong&gt;How Redis Cache implemented Using Spring Boot?&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lhYy-IuR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3840/1%2AEb_Nvyac9_OmenCNx0JF9w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lhYy-IuR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3840/1%2AEb_Nvyac9_OmenCNx0JF9w.png" alt="How to implement Redis Cache Using Spring Boot" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-redis-cache"&gt;
  &lt;/a&gt;
  What is Redis Cache?
&lt;/h3&gt;

&lt;p&gt;Redis, which stands for Remote Dictionary Server, is a fast, open-source, in-memory, key-value data store. The project started when Salvatore Sanfilippo, the original developer of Redis, wanted to improve the scalability of his Italian startup. From there, he developed Redis, which is now used as a database, cache, message broker, and queue. Redis is an open-source (BSD licensed), in-memory data structure store, used as a database, cache, and message broker. Redis provides data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes, and streams. Redis has built-in replication, Lua scripting, LRU eviction, transactions, and different levels of on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning with Redis Cluster.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-use-redis-cache"&gt;
  &lt;/a&gt;
  Why use Redis Cache?
&lt;/h3&gt;

&lt;p&gt;Redis is a great choice for implementing a highly available in-memory cache to decrease data access latency, increase throughput, and ease the load off your relational or NoSQL database and application. Redis can serve frequently requested items at sub-millisecond response times and enables you to easily scale for higher loads without growing the costlier backend. Database query results caching, persistent session caching, web page caching and caching of frequently used objects such as images, files, and metadata are all popular examples of caching with Redis. Redis can be used with streaming solutions such as Apache Kafka and Amazon Kinesis as an in-memory data store to ingest, process, and analyze real-time data with sub-millisecond latency. Redis is an ideal choice for &lt;a href="https://aws.amazon.com/elasticache/redis/#Real-time_Analytics"&gt;real-time analytics&lt;/a&gt; use cases such as social media analytics, ad targeting, personalization, and IoT.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-use-redis-cache"&gt;
  &lt;/a&gt;
  &lt;strong&gt;How to use Redis Cache?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The use of Redis Cache is are many its can be used as a database or cache but in these parts, we going to cover how we can use &lt;strong&gt;Redis as a cache.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-how-to-generate-spring-boot-project"&gt;
  &lt;/a&gt;
  Step 1: How to generate Spring Boot Project?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://start.spring.io/"&gt;&lt;strong&gt;Spring Initializr&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-which-dependencies-should-i-include"&gt;
  &lt;/a&gt;
  Step 2: Which dependencies should I include?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BVhf90QM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2648/1%2AONPlr0RBVFGU9SLFNT_mzw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BVhf90QM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2648/1%2AONPlr0RBVFGU9SLFNT_mzw.png" alt="Redis Cache Dependencies" width="880" height="582"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-what-are-the-properties-we-need-to-add-to-the-application-properties"&gt;
  &lt;/a&gt;
  Step 3: What are the properties we need to add to the application. properties?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0GyJCHiP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3432/1%2Ab5MTN-9qfBMGYdumxb29YQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0GyJCHiP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3432/1%2Ab5MTN-9qfBMGYdumxb29YQ.png" alt="application.properties" width="880" height="652"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-what-will-be-the-configuration-for-redis-cache"&gt;
  &lt;/a&gt;
  Step 4: What will be the Configuration for Redis Cache?
&lt;/h3&gt;

&lt;p&gt;Note: We are using building a spring boot application so we are going to Jedis Configuration in configuration.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nhqmrki0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3340/1%2AabKE10bZjDAW3UlKUuxxLw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nhqmrki0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3340/1%2AabKE10bZjDAW3UlKUuxxLw.png" alt="Redis Configuration For Application" width="880" height="1107"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-5-what-are-the-controller-endpoints-or-api-endpoints"&gt;
  &lt;/a&gt;
  Step 5: What are the Controller Endpoints or API Endpoints?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1RZuR3wf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3340/1%2ArEe6VPC5nlDllr7dcOEBOg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1RZuR3wf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3340/1%2ArEe6VPC5nlDllr7dcOEBOg.png" alt="User Controller For Redis Application" width="880" height="575"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-5-what-is-genericresponseadduserdtoamp-authuserdto"&gt;
  &lt;/a&gt;
  Step 5: What is GenericResponse?AddUserDto?&amp;amp; AuthUserDto?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1E2f2UGC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AB3WrWnapiSRFStPPkRz4ag.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1E2f2UGC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AB3WrWnapiSRFStPPkRz4ag.png" alt="Generic Response" width="828" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CmrN5NSr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AyjGol62dTUB7if9AeQZQVg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CmrN5NSr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AyjGol62dTUB7if9AeQZQVg.png" alt="AddUserDTO" width="828" height="588"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hRG3Inkl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2168/1%2Ar_w1pl9wKsNEVga8LPy1Hw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hRG3Inkl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2168/1%2Ar_w1pl9wKsNEVga8LPy1Hw.png" alt="AuthUserDTO" width="880" height="448"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-6-where-is-business-logic-or-socalled-userservice"&gt;
  &lt;/a&gt;
  Step 6: Where is business logic or so-called UserService?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j5hCDKd1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3476/1%2AqWzvMOhKJe33DRkGliVNFQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j5hCDKd1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3476/1%2AqWzvMOhKJe33DRkGliVNFQ.png" alt="User Service For Login and Registration" width="880" height="1100"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-7-where-is-my-entity-class"&gt;
  &lt;/a&gt;
  Step 7: Where is my entity class?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x7tUdwGO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2744/1%2ARTBv25zQpgxrEGOgPz5nHw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x7tUdwGO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2744/1%2ARTBv25zQpgxrEGOgPz5nHw.png" alt="RedisUser" width="880" height="1324"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-8-how-to-perform-crud-operations-for-redis-cache"&gt;
  &lt;/a&gt;
  Step 8: How to perform CRUD operations for Redis cache?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fvWT8oMk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3012/1%2AlZXAtAGu1ejx4IjfMvlvFQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fvWT8oMk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3012/1%2AlZXAtAGu1ejx4IjfMvlvFQ.png" alt="Redis Utility for Redis Service" width="880" height="848"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-9-how-to-test-it-are-project"&gt;
  &lt;/a&gt;
  Step 9: How to test It are project?
&lt;/h3&gt;

&lt;p&gt;Testing of API endpoint can be done using many different ways if you asked me its will using &lt;strong&gt;&lt;a href="https://www.postman.com/"&gt;Postman&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API Endpoints are:-&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User Registration Endpoint&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://localhost:8080/redis/demo/add"&gt;http://localhost:8080/redis/demo/add&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User Login Endpoint&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://localhost:8080/redis/demo"&gt;http://localhost:8080/redis/demo&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:-
&lt;/h3&gt;

&lt;p&gt;In the article, we tried to answers many questions related to Redis Cache and how to implement the same using Spring boot. Redis Cache powerfully features such as caching and fast querying are used by many fortune 500 companies to provide service to others.&lt;/p&gt;

&lt;p&gt;Please do share and like 💕if you find the article useful. Follow me on medium &lt;a href="https://dev.toundefined"&gt;Rohan Ravindra Kadam&lt;/a&gt; and on Twitter at &lt;a href="https://twitter.com/rohankadam25"&gt;**rohankadam25&lt;/a&gt;**&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RewtI9lv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2800/1%2AmRwSuSvhuRcZKS3uElP6bg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RewtI9lv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2800/1%2AmRwSuSvhuRcZKS3uElP6bg.png" alt="Thank You Viewers" width="880" height="267"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
