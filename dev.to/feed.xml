<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Jamstack Open Source Projects Looking for Contributors </title>
      <author>Rizel Scarlett</author>
      <pubDate>Tue, 26 Oct 2021 21:44:46 +0000</pubDate>
      <link>https://dev.to/github/jamstack-open-source-projects-looking-for-contributors-2ooh</link>
      <guid>https://dev.to/github/jamstack-open-source-projects-looking-for-contributors-2ooh</guid>
      <description>&lt;p&gt;&lt;em&gt;Happy Hacktober! There are only a few days left of Hacktober, but it's not too late to contribute.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-contribute"&gt;
  &lt;/a&gt;
  Why Contribute?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You can win prizes.

&lt;ul&gt;
&lt;li&gt;This year you can receive swag (or have a tree planted in your name) as a reward for making pull requests to projects participating in &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest&lt;/a&gt;. Hint: All the projects described below are participating in Hacktoberfest and welcoming contributions.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;You can strengthen your technical and communication skills.&lt;/li&gt;
&lt;li&gt;You can expand your network.&lt;/li&gt;
&lt;li&gt;You can improve your career.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;If you are a fan of JavaScript, APIs, and Markup, here's a list of suggested projects you can contribute to:&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hoppscotch"&gt;
  &lt;/a&gt;
  Hoppscotch
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-it"&gt;
  &lt;/a&gt;
  What is it?
&lt;/h3&gt;

&lt;p&gt;Hoppscotch is an open source API development ecosystem. Through Hoppscotch, users can test and build their APIs for free. Creator and CEO, Liya Thomas developed Hoppscotch after using Postman. While his experience was positive, he was inspired to create an API testing tool with the following characteristics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;open source&lt;/li&gt;
&lt;li&gt;free&lt;/li&gt;
&lt;li&gt;runs on multiple platforms&lt;/li&gt;
&lt;li&gt;runs on multiple devices&lt;/li&gt;
&lt;li&gt;in-browser
Read more about Liya's motivation behind Hoppscotch.
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-its-built"&gt;
  &lt;/a&gt;
  How it's built
&lt;/h3&gt;

&lt;p&gt;You can access Hoppscotch in your web browser, via PWA, and as a Chrome extension. It is built using HTML, CSS, SCSS, Windi CSS, JavaScript, TypeScript, Vue, and Nuxt.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-contribute"&gt;
  &lt;/a&gt;
  How to Contribute
&lt;/h3&gt;

&lt;p&gt;If Hoppscotch has piqued your interest, take a look at the &lt;a href="https://github.com/hoppscotch/hoppscotch"&gt;repository&lt;/a&gt; and &lt;a href="https://github.com/hoppscotch/hoppscotch/blob/main/CONTRIBUTING.md"&gt;Contributing.md&lt;/a&gt;. Currently, the repo has approximately 43 open issues, so get started and pick up an issue today!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/hoppscotch"&gt;
        hoppscotch
      &lt;/a&gt; / &lt;a href="https://github.com/hoppscotch/hoppscotch"&gt;
        hoppscotch
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üëΩ Open source API development ecosystem https://hoppscotch.io
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
  &lt;a href="https://hoppscotch.io" rel="nofollow"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0xVYW8Wi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/56705483" alt="Hoppscotch Logo" height="64"&gt;
  &lt;/a&gt;
  &lt;br&gt;
  
&lt;h3&gt;
      &lt;b&gt;
        Hoppscotch
      &lt;/b&gt;
    &lt;/h3&gt;
  &lt;p&gt;
    &lt;b&gt;
      Open source API development ecosystem
    &lt;/b&gt;
  &lt;/p&gt;
  

&lt;p&gt;&lt;a href="https://github.com/hoppscotch/hoppscotchCODE_OF_CONDUCT.md"&gt;&lt;img src="https://camo.githubusercontent.com/52ba83e17191b6026edd7ca63ff27c44c98e4bb532a8dab532a225baf752edf5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e732d77656c636f6d652d627269676874677265656e3f6c6f676f3d676974687562" alt="contributions welcome"&gt;&lt;/a&gt; &lt;a href="https://hoppscotch.io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f452635f8c103ccc6529083336947a53cdc96e371c505f6e70a182633be4dafe/68747470733a2f2f696d672e736869656c64732e696f2f776562736974653f75726c3d6874747073253341253246253246686f707073636f7463682e696f266c6f676f3d686f707073636f746368" alt="Website"&gt;&lt;/a&gt; &lt;a href="https://github.com/hoppscotch/hoppscotch/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ntQLIet--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/hoppscotch/hoppscotch/actions/workflows/tests.yml/badge.svg" alt="Tests"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/share?text=%F0%9F%91%BD%20Hoppscotch%20%E2%80%A2%20Open%20source%20API%20development%20ecosystem%20-%20Helps%20you%20create%20requests%20faster,%20saving%20precious%20time%20on%20development.&amp;amp;url=https://hoppscotch.io&amp;amp;hashtags=hoppscotch&amp;amp;via=hoppscotch_io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7151c326e9dfb17f7a635721f401791ecd17008cc420716a3c1bd27c95170228/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c3f75726c3d6874747073253341253246253246686f707073636f7463682e696f253246" alt="Tweet"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;&lt;br&gt;
    &lt;br&gt;
      Built with ‚ù§Ô∏é by&lt;br&gt;
      &lt;a href="https://github.com/hoppscotch/hoppscotch/graphs/contributors"&gt;&lt;br&gt;
        contributors&lt;br&gt;
      &lt;/a&gt;&lt;br&gt;
    &lt;br&gt;
  &lt;/p&gt;
&lt;br&gt;
  &lt;br&gt;&lt;br&gt;
  &lt;p&gt;&lt;br&gt;
    &lt;a href="https://hoppscotch.io" rel="nofollow"&gt;&lt;br&gt;
      &lt;img src="https://camo.githubusercontent.com/0a19c596d367a9e39d63781ff57f1b09aa43a7191ec647e7557466e7ad656ed0/68747470733a2f2f74696e792e63632f686f707073636f7463685f73637265656e73686f745f31" alt="Screenshot" width="100%"&gt;&lt;br&gt;
    &lt;/a&gt;&lt;br&gt;
  &lt;/p&gt;
&lt;br&gt;
&lt;/div&gt;

&lt;h4&gt;
&lt;strong&gt;Support&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://hoppscotch.io/discord" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3a9f21e0546d311c516e92b810c2aa3a8b9572a4375ad15cb94855304d2f5f01/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d446973636f72642d3732383944413f6c6f676f3d646973636f7264" alt="Chat on Discord"&gt;&lt;/a&gt; &lt;a href="https://hoppscotch.io/telegram" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/971f7c4a4493bb063a5db4fdcad6bf8be7c4a09170eb2b201aa324139c4d2137/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d54656c656772616d2d3243413545303f6c6f676f3d54656c656772616d" alt="Chat on Telegram"&gt;&lt;/a&gt;&lt;/p&gt;


  &lt;b&gt;Table of contents&lt;/b&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#demo"&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#built-with"&gt;Built with&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#developing"&gt;Developing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#docker"&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#releasing"&gt;Releasing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#continuous-integration"&gt;Continuous Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#changelog"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#authors"&gt;Authors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;h3&gt;
&lt;strong&gt;Features&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;‚ù§Ô∏è &lt;strong&gt;Lightweight:&lt;/strong&gt; Crafted with minimalistic UI design.&lt;/p&gt;

&lt;p&gt;‚ö°Ô∏è &lt;strong&gt;Fast:&lt;/strong&gt; Send requests and get/copy responses in real-time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTTP Methods&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;GET&lt;/code&gt; - Requests retrieve resource information&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;POST&lt;/code&gt; - The server creates a new entry in a database&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;PUT&lt;/code&gt; - Updates an existing resource&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;PATCH&lt;/code&gt; - Very similar to &lt;code&gt;PUT&lt;/code&gt; but makes a partial update on a resource&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DELETE&lt;/code&gt; - Deletes resource or related component&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;HEAD&lt;/code&gt; - Retrieve response headers identical to those of a GET request, but without the response body.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;CONNECT&lt;/code&gt; - Establishes a tunnel to the server identified by the target resource&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;OPTIONS&lt;/code&gt; - Describe the communication options for the target resource&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;TRACE&lt;/code&gt; - Performs a message loop-back test along the path to the target resource&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;custom&amp;gt;&lt;/code&gt; - Some APIs‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/hoppscotch/hoppscotch"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;If you want to learn more about Hoppscotch, check out our Open Source Friday stream featuring Hoppscotch's CEO Liya Thomas and Developer Advocate Michelle Mannering.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/bBOr2A_xbBo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#bltizjs"&gt;
  &lt;/a&gt;
  Bltiz.js
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#what-is-it"&gt;
  &lt;/a&gt;
  What is it?
&lt;/h3&gt;

&lt;p&gt;Developed in 2020, Blitz.js is a "Zero-API" data layer that enables users to import server-side code directly into React components instead of manually adding API endpoints, handling client-side fetching, and handling caching. Out of the box, Blitz includes ESLint, Prettier, Jest, user sign up, log in, and password reset. The creator, Brandon Bayer, appreciated that Ruby-on-Rails has all the tools he needed to create web apps quickly but preferred React's dynamic UI. Instead of just wishing that React came with these tools out of the box, he developed Blitz.js. Read the manifesto to learn more about how Blitz.js works.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#create-your-own-blitz-app"&gt;
  &lt;/a&gt;
  Create Your Own Blitz App
&lt;/h3&gt;

&lt;p&gt;You can create a Blitz.js application by running the following commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;blitz new myAppName&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd myAppName&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blitz dev&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are working examples of Blitz.js in action.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-contribute"&gt;
  &lt;/a&gt;
  How to Contribute
&lt;/h2&gt;

&lt;p&gt;If Blitz.js has piqued your interest, take a look at the &lt;a href="https://github.com/blitz-js/blitz"&gt;repository&lt;/a&gt; and &lt;a href="https://github.com/blitz-js/blitz/blob/canary/CONTRIBUTING.md"&gt;Contributing.md&lt;/a&gt;. Currently, the repo has approximately 130 open issues, so get started and pick up an issue today!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/blitz-js"&gt;
        blitz-js
      &lt;/a&gt; / &lt;a href="https://github.com/blitz-js/blitz"&gt;
        blitz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ‚ö°Ô∏èThe Fullstack React Framework ‚Äî built on Next.js
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://blitzjs.com" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U3g0Icf_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/blitz-js/art/master/github-cover-photo.png" alt="Blitz.js"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://discord.blitzjs.com" rel="nofollow"&gt;
    &lt;img alt="" src="https://camo.githubusercontent.com/012b266692fd449be23ae6ac8cf0bf5c690f9f382d1379ec2047daba77a7adb4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6f696e2532306f7572253230636f6d6d756e6974792d3637303045422e7376673f7374796c653d666f722d7468652d6261646765266c6162656c436f6c6f723d303030303030266c6f676f57696474683d3230266c6f676f3d646174613a696d6167652f706e673b6261736536342c6956424f5277304b47676f414141414e535568455567414141494141414143414341594141414444506d484c414141414358424957584d41414173544141414c457745416d7077594141414141584e535230494172733463365141414141526e51553142414143786a777638595155414141513953555242564867423764336456647441454962686353704943556f483049456f675171535642425341553446535370494f6f414f524166516753676848587a5a31552f59634d44345239725a6d6632656333793434384c79694e663237694c694749416d504c7277654339556e334468727a47364561724c4e5030396e6c774a31534f5a2f6c5172354e38302f532f7032514d56434266354e31375843666d31592f724248716a4147395050487642737a2b6d66395741502b484c41394d2f59413134634f503270617948376a706a2b5643746b31776e54502b766a37784379366354706e3745484c4d4c703035396944316944386576654a6256434e73534c6865583159412f59674f576e663859654b4233576d6637556436467934662f46486d747078626c33596c43344d4a2f436a3062576477506e50624152672b4c3053353458514853333257777578436c7a6434434d307a3972506665417554744135756c5058595137775a3034592b6f4f6f4444394b5a6339594f6f4f6f446a3973346477467a6758523677317749506f4f765057413962754148454a3137336f336757697933416e754255484c4562676d597776416b312f77754d38764167657854687a627750446b78372f444877565866464f785032476d734b64344162367a5065417955384349374148466d483242524342505841796b3138477a557271415843546952347373796a305646772f6f4355382b652b525a333341577a364b4d61596249495778422b4a534c73316273626b654d4e304171616b48766f6b75396f41327341667142766241516477305141727367623235615942555154335167543267422b79427571476348696a3255437158445a41436532416e6c77325159672f51414f7942756f453938434c33445a4443754b342f72682f51376f474c36552b544f76634e6b4a6f696a4e3858314334382b542b6737356551447241482f716d7141564a6744777971616f41556534414759412f55445a5833514c554e6b45495a50524364352b36426168736756556750524f77425453696a42376a705641764748726948766d773977415a3442705831414276676d616b48745063625275774254574150554c67415639442f6a4b4459395952767776674561757244343475514876416f6c3771425737574b6c75567449486955533747797641307336436958446e787270516673676271425337474b6b2f326a59484372566c47796678544d72566f30414c64713151337367534b6f6668304d396f413631612b4432514d3041487567626d415071436c6d53526a4b3261705656513855737953736f4b31614864674465734374576e554465794372497065466731753373796c795754693362744d41374947366754327775754b33686f4539734b726974345956736c574c5061414e374947366f634b74327a6d593268344f39734469544730505a772f51414e79365854657742785a6a396f67595648793032354c4d4868457a3963426e305765364230796645525265424c666878302f523159514850782f51425062413056776345776632774e466348425048486a69656d334d433251504863586453614a6a412b4b6667545051386868666a427a484334306d686c7a4a2b5871396c4b346134504373343341566147546564356d5a712b694f585a7757486933416e4f6a327746574e636e785965376754784c74424b4875616d502f4a2b576e68386135697242375a4335596b3967505831517558432b757348577147796859765559523061377a626f554f46434e56686e6b306b725a414f573777464f767a58686f6d32786e45624948697a544131774559685757365946477943366331674f636667397766413830516a3767384237673948754377772b686149523877663439774f6e33437676396b38744779432f733767464f7633665933514f4e6b482b76394d4257714237506571446e39466349542f2f6b636974556e366b484f752f542f7866577a6c517933644548687741414141424a52553545726b4a6767673d3d"&gt;
  &lt;/a&gt;
&lt;a href="https://github.com/blitz-js/blitz#contributors-"&gt;&lt;img alt="" src="https://camo.githubusercontent.com/766cdcca52e2ee0af5e22c9971c5e3ba955806fc57a325793b5efb25f5f63ff5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d3335342d3137424238412e7376673f7374796c653d666f722d7468652d6261646765266c6162656c436f6c6f723d303030303030"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/blitz-js/blitz/blob/canary/LICENSE"&gt;
    &lt;img alt="" src="https://camo.githubusercontent.com/085439f0afdcbee03c6a1cd98b138c69036ccd5c964e578e4fb7d7aa178e0ea8/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f626c69747a2e7376673f7374796c653d666f722d7468652d6261646765266c6162656c436f6c6f723d30303030303026636f6c6f723d626c7565"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.npmjs.com/package/blitz" rel="nofollow"&gt;
    &lt;img alt="" src="https://camo.githubusercontent.com/813843305cd621ea8a7daeef640c6aa84712e38da67305c11f8ee82025d9928c/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f626c69747a2e7376673f7374796c653d666f722d7468652d6261646765266c6162656c436f6c6f723d30303030303026636f6c6f723d453635353238"&gt;
  &lt;/a&gt;
&lt;/p&gt;



&lt;h1&gt;
The Fullstack React Framework&lt;/h1&gt;

&lt;h5&gt;
"Zero-API" Data Layer ‚Äî Built on Next.js ‚Äî Inspired by Ruby on Rails&lt;/h5&gt;

&lt;h3&gt;
&lt;a href="https://blitzjs.com/docs/get-started" rel="nofollow"&gt;Read the Documentation&lt;/a&gt;
&lt;/h3&gt;



&lt;p&gt;‚ÄúZero-API‚Äù data layer &lt;strong&gt;lets you import server code directly into your React components&lt;/strong&gt; instead of having to manually add API endpoints and do client-side fetching and caching.&lt;/p&gt;

&lt;p&gt;New Blitz apps come with &lt;strong&gt;all the boring stuff already set up for you!&lt;/strong&gt; Like ESLint, Prettier, Jest, user sign up, log in, and password reset.&lt;/p&gt;

&lt;p&gt;Provides &lt;strong&gt;helpful defaults and conventions&lt;/strong&gt; for things like routing, file structure, and authentication while also being extremely flexible.&lt;/p&gt;



&lt;h3&gt;
Quick Start&lt;/h3&gt;
&lt;p&gt;You need Node.js 12 or newer&lt;/p&gt;
&lt;h4&gt;
Install Blitz&lt;/h4&gt;
&lt;p&gt;Run &lt;code&gt;npm install -g blitz&lt;/code&gt; or &lt;code&gt;yarn global add blitz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;You can alternatively use &lt;a href="https://www.npmjs.com/package/npx" rel="nofollow"&gt;&lt;code&gt;npx&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;
Create a New App&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;blitz new myAppName&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd myAppName&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blitz dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;View your brand new app at &lt;a href="http://localhost:3000" rel="nofollow"&gt;http://localhost:3000&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;a href="https://ui.dev/bytes/?r=blitzjs" rel="nofollow"&gt;
&lt;img alt="Bytes Newsletter" src="https://camo.githubusercontent.com/3b1563f798ec1bd1fa2caef34a22e408b2286c799590ff751355c9a37bc8bb9e/68747470733a2f2f66696c65732d387774736b6a6f66622e76657263656c2e6170702f736d61727465722d313678312e6a7067"&gt;
&lt;/a&gt;

&lt;h3&gt;
The Foundational Principles&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Fullstack &amp;amp; Monolithic&lt;/li&gt;
&lt;li&gt;API Not Required&lt;/li&gt;
&lt;li&gt;Convention over Configuration&lt;/li&gt;
&lt;li&gt;Loose Opinions&lt;/li&gt;
&lt;li&gt;Easy to‚Ä¶&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/blitz-js/blitz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;em&gt;If you want to learn more about Blitz.js, check out our Open Source Friday stream featuring Blitz.js's CEO, Brandon Bayer, and GitHub's Director of Developer Advocacy, Brian Douglas.&lt;/em&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fbNePTPyfIU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#ngrx"&gt;
  &lt;/a&gt;
  Ngrx
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#what-is-it"&gt;
  &lt;/a&gt;
  What is it?
&lt;/h3&gt;

&lt;p&gt;Ngrx enables developers to add reactive state management to Angular applications. It‚Äôs a group of Angular libraries, which provides standardized APIs for reactive programming. People use Ngrx because it reduces complexity and coupling between different elements of the app by creating a unidirectional flow. The architecture is also made simple by following the Redux pattern. Through reactive programming, your application listens and subscribes to events within your application.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-contribute"&gt;
  &lt;/a&gt;
  How to Contribute
&lt;/h3&gt;

&lt;p&gt;If Ngrx has piqued your interest, take a look at the &lt;a href="https://github.com/ngrx/platform"&gt;repository&lt;/a&gt; and &lt;a href="https://github.com/ngrx/platform/blob/master/CONTRIBUTING.md"&gt;Contributing.md&lt;/a&gt;. Currently, the repo has approximately 38 open issues, so get started and pick up an issue today!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ngrx"&gt;
        ngrx
      &lt;/a&gt; / &lt;a href="https://github.com/ngrx/platform"&gt;
        platform
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Reactive libraries for Angular
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a class="mentioned-user" href="https://dev.to/ngrx"&gt;@ngrx&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Reactive libraries for Angular&lt;/p&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/ngrx/workflows/platform/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4b54ff1a40cddc0f79e3a3637b736cf008ea1eb31d0d757aadb175f71bc7c724/68747470733a2f2f636972636c6563692e636f6d2f67682f6e6772782f706c6174666f726d2f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/ngrx/platform?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1804932a8a951494c8c48660301ade339cc5c464bc447cb25ead18fa7f3ce140/68747470733a2f2f6261646765732e6769747465722e696d2f6e6772782f706c6174666f726d2e737667" alt="Join the chat at https://gitter.im/ngrx/platform"&gt;&lt;/a&gt;
&lt;a href="https://discord.com/invite/ngrx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/99a0affadd1a229bbb6c49a2fc4417701572b64108d73a4d32ece1c2c617543e/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3734303535373338333130393035303436392e7376673f636f6c6f723d373338394438266c6162656c436f6c6f723d364137454332266c6f676f3d646973636f7264266c6f676f436f6c6f723d666666666666267374796c653d666c61742d737175617265" alt="Join the discord server at https://discord.com/invite/ngrx"&gt;&lt;/a&gt;
&lt;a href="https://commitizen.github.io/cz-cli/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aca3301042bdedae125df537db587fe82c2123dc8a2c46f0859840b5fa4b7f1a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6d6d6974697a656e2d667269656e646c792d627269676874677265656e2e737667" alt="Commitizen friendly"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/@ngrx/store" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fca0b0f9549e875e27275b1447b77657e6f6ce0aec26400f12fb5455ad996620/68747470733a2f2f62616467652e667572792e696f2f6a732f2534306e67727825324673746f72652e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;Check out our website: &lt;a href="https://ngrx.io" rel="nofollow"&gt;ngrx.io&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;NgRx is a community-driven project. Read our &lt;a href="https://github.com/ngrx/platform./CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; on how to get involved.&lt;/p&gt;
&lt;h2&gt;
Sponsoring NgRx&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/ngrx/platform#backers"&gt;&lt;img src="https://camo.githubusercontent.com/c44b84a54a64eb0bdfdb66b3ab58fcf8aaa10fea4d76e9346f6e18796aab26d9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f6261636b6572732f62616467652e737667" alt="Backers on Open Collective"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Become a gold sponsor and get your logo on our README on GitHub and the front page of &lt;a href="https://ngrx.io" rel="nofollow"&gt;ngrx.io&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
Gold Sponsors&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/ngrx/tiers/gold-sponsors/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9a96b2d6393931349110b6cadfec2eb141d299ed913887e43cb371c2c3692daa/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f676f6c642d73706f6e736f72732f302f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/gold-sponsors/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/63d914b55c4a2f73cf5fd57cc015b2a1e67d12e75013b56d8c316bdbd7c93d51/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f676f6c642d73706f6e736f72732f312f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/gold-sponsors/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d27ee9b6e2d96cd36d16473ba168e87f0aea54deae0bd574e2440111568cb210/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f676f6c642d73706f6e736f72732f322f6176617461722e737667"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Silver Sponsors&lt;/h3&gt;
&lt;p&gt;Become a silver sponsor and get your logo on our README on GitHub and our website &lt;a href="https://ngrx.io" rel="nofollow"&gt;ngrx.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/ngrx/tiers/silver-sponsors/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/144b81e59a797cbe1360f9a04bb1235470ac714c9c732e85c56e93b1bc2dc908/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f73696c7665722d73706f6e736f72732f302f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/silver-sponsors/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ecbbd3d9ebd8ac95a14ca0c4c35045dc53ad8e1bc09758921d82bff3ece5ed43/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f73696c7665722d73706f6e736f72732f312f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/silver-sponsors/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b50345c7395a26701f7df21b842da7b0a6f84778ed9637f378b6d8f41cecdd8d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f73696c7665722d73706f6e736f72732f322f6176617461722e737667"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Bronze Sponsors&lt;/h3&gt;
&lt;p&gt;Become a bronze sponsor and get your logo on our README on GitHub.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e3e7ec10fe4747608b2a48722487b98703ad81280c5d54b88f4b7ae024101b9b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f302f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5b6a8cb27b59568460a57bdc74b27b612d53293605a6fbfa10b02f3564a9855e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f312f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3d1c28dbb56b560e4fbd6198a5482545e2a89154f1b9011298cb002e5290009c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f322f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/925397ea77eaddd6c80c62837f29082c9cd197be1fca866bb3a433f9954d0fde/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f332f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d48ce9f1de1daf6fa2c0dcb3550648ec373e36d0d7a0a6d03721fe4f658941f4/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f342f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a896673d1df08b838bba6b35af86d2b79a08ce5b5c10407a5432661c6042a371/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f352f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f4e95a996f30b4211330ab902a99f9a33a973e77ce0435ecc5642430288ecba7/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f362f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3fd91605032641e598297315997146df08080a76e0575495999c8f612eeeb3f2/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f372f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6c56c76bf2696c3b7c27e23348ba64b5faa70bead36a085a15a310113d8e2ffa/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f382f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/53df2edd08cee2fcfad18db2c0539772f3518d54b07611da910b58d1e444b367/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f392f6176617461722e737667"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ngrx/platform"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;If you want to learn more about Ngrx, check out our Open Source Friday stream featuring Ngrx maintainer, Brandon Roberts, and GitHub's Director of Developer Advocacy, Brian Douglas.&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/yVkwPhodm7k"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>jamstack</category>
      <category>opensource</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Always do these 16 things when you're taking screening calls with recruiters</title>
      <author>Eliot Sanford</author>
      <pubDate>Tue, 26 Oct 2021 21:10:46 +0000</pubDate>
      <link>https://dev.to/techieeliot/always-do-these-16-things-when-youre-taking-screening-calls-with-recruiters-40e2</link>
      <guid>https://dev.to/techieeliot/always-do-these-16-things-when-youre-taking-screening-calls-with-recruiters-40e2</guid>
      <description>&lt;p&gt;When doing a screening call with a recruiter ALWAYS have these 16 down:&lt;/p&gt;

&lt;p&gt;1 - have shared your updated resume before the call&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;include portfolio page, GitHub, + LinkedIn profile on resume&lt;/li&gt;
&lt;li&gt;few things slows it down like no updated resume&lt;/li&gt;
&lt;li&gt;&lt;p&gt;offer to share pdf and word doc&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the word doc is often appreciated by the recruiter to prepare before sending to the client&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6HEO4jwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/413kmk5clj4yzlas1k24.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6HEO4jwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/413kmk5clj4yzlas1k24.jpeg" alt="Image description" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2 - be able to quickly in &amp;lt; 2 min. preferably tell:&lt;/p&gt;

&lt;p&gt;a. what you're excited about doing&lt;br&gt;
b. share your story&lt;br&gt;
c. share the number of years or months you have with each of the three main required skill&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;sharing years before them (be proactive because they will ask)&lt;/li&gt;
&lt;li&gt;show passion to learn&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;3 - prepare to tell what are you currently doing in &amp;lt; 1 min. preferably&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;what you do like you're telling a 6 year old&lt;/li&gt;
&lt;li&gt;avoid using company or industry jargon&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No experience?&lt;/p&gt;

&lt;p&gt;Place a high priority on gaining experience by networking and making "intern" experience, e.g. offering to build an app&lt;/p&gt;

&lt;p&gt;4 - look up the company's web presence and prepare to tell why you want to work there&lt;/p&gt;

&lt;p&gt;keys to focus on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;company website (what do they do?)&lt;/li&gt;
&lt;li&gt;what's the mission of the company in your own words&lt;/li&gt;
&lt;li&gt;view social media accounts to see what they value&lt;/li&gt;
&lt;li&gt;view reviews like Glassdoor and/or talk with current employees if possible&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rO2DaEyb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bpae33mtwk8w8tkig0yi.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rO2DaEyb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bpae33mtwk8w8tkig0yi.jpeg" alt="Image description" width="640" height="427"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5 - prepare your 1-3 most polished and most recent projects in a public repo and on a deployed url and have them ready to share when requested&lt;/p&gt;

&lt;p&gt;Stallers here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;projects only in private repos (no public code)&lt;/li&gt;
&lt;li&gt;code older than a year&lt;/li&gt;
&lt;li&gt;public repos don't represent your current ability&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;6 - glance at the job description before chatting with the recruiter or interviewer&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if you don't have it before the call then request it via email or LinkedIn (I wouldn't schedule the call without it)&lt;/li&gt;
&lt;li&gt;note the tech and soft skills&lt;/li&gt;
&lt;li&gt;find out what the top 3 must haves are&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;7 - be prepared and be on-time&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;get sleep the night before&lt;/li&gt;
&lt;li&gt;have energy for the call&lt;/li&gt;
&lt;li&gt;have a clean, quiet distraction-free workspace for the call from desktop preferably&lt;/li&gt;
&lt;li&gt;if you've not got these 3, then reschedule&lt;/li&gt;
&lt;li&gt;arrive at least a couple of minutes before time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ELmwv78b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/olgs8th6kaxhjjggylac.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ELmwv78b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/olgs8th6kaxhjjggylac.jpeg" alt="Image description" width="640" height="424"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;8 - seek to get to know the recruiter's story&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;where are they from?&lt;/li&gt;
&lt;li&gt;what cause them to become a recruiter?&lt;/li&gt;
&lt;li&gt;how many people have they place at this company and other companies in the past year?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most recruiters are never asked this and appreciate it when they are.&lt;/p&gt;

&lt;p&gt;9 - seek to know what sort of rapport the recruiter has with not just the company but the hiring manager&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if not much then ask if they have a company with similar needs that they would&lt;/li&gt;
&lt;li&gt;ask them if their senior's in their company have rapport at the company&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;10 - ask what the interview process is like&lt;/p&gt;

&lt;p&gt;This gives you heads up if:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the process is one-off or it's a 5-step process&lt;/li&gt;
&lt;li&gt;the next step will happen in a week or tomorrow&lt;/li&gt;
&lt;li&gt;it's a technical or cultural interview&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;11 - know your availability for the next week&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;have your calendar bookmarked &lt;/li&gt;
&lt;li&gt;be ready to tell them a few best times&lt;/li&gt;
&lt;li&gt;understand if the scheduled time is a zoom call invite or a phone screen&lt;/li&gt;
&lt;li&gt;accept the calendar invite&lt;/li&gt;
&lt;li&gt;create a reminder if one is not sent to you&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CBzvpenW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvee8f2p223zqlvvx9r7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CBzvpenW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvee8f2p223zqlvvx9r7.jpeg" alt="Image description" width="640" height="960"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;12 - ask what is the specific team that you're going to work on and the size&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it makes a difference if you'll be working on a front-facing app for customers or the internal app for the employees&lt;/li&gt;
&lt;li&gt;is your team all remote and made up of 10-15 people or is it a small team &amp;lt; 5 devs?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;13 - seek to understand the scenario that you'll be walking into&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;has the role been open for 6 months or was it just available today?&lt;/li&gt;
&lt;li&gt;was someone fired or is it a brand-new team?&lt;/li&gt;
&lt;li&gt;are there colleagues from the team who've been with the company a long time?&lt;/li&gt;
&lt;li&gt;is it agile?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;14 - know the salary range that you would need to take the sort of role that they're asking you to fill&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if you're uncomfortable to answer then ask some questions and tell them you'll return to answering when you've gotten some answers&lt;/li&gt;
&lt;li&gt;ask if contract-hire or direct&lt;/li&gt;
&lt;li&gt;ask them what's the total compensation package&lt;/li&gt;
&lt;li&gt;how have comparable candidates been paid (also gives you an idea if they've placed devs in the team)&lt;/li&gt;
&lt;li&gt;if contract to hire will they submit a conversion salary&lt;/li&gt;
&lt;li&gt;if contract do you get full health benefits and PTO&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;15 - seek to understand what the hesitations would be with you as a candidate and seek to know how you would mitigate those and ask again at the end of the call whether they have hesitations&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the best scenario is that they have zero hesitation&lt;/li&gt;
&lt;li&gt;if they have hang-ups, address it without being defensive or hurting your prospects&lt;/li&gt;
&lt;li&gt;do sell your strengths and your passion&lt;/li&gt;
&lt;li&gt;tell them that you want the role&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o_hcP02P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/796hlsbrii5d2pa1md6t.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o_hcP02P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/796hlsbrii5d2pa1md6t.jpeg" alt="Image description" width="640" height="960"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;16 - seek to know all the tips and advice that the recruiters have to share&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ask and you shall receive&lt;/li&gt;
&lt;li&gt;good recruiters explode with every bit of information that they've got to help you succeed&lt;/li&gt;
&lt;li&gt;bad recruiters will have not gotten this far with you and moved to the next quota&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's it. That's all the nuggets I have. Trust me, the more time you spend putting focus here, the better your odds will be of landing a great role that you enjoy. I'm rooting for you to get the role. Now go seize your next role.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>career</category>
      <category>productivity</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Advice to frontend developers new to javascript</title>
      <author>bhadmus damilola</author>
      <pubDate>Tue, 26 Oct 2021 21:10:30 +0000</pubDate>
      <link>https://dev.to/damaxcodz/advice-to-frontend-developers-new-to-javascript-2dej</link>
      <guid>https://dev.to/damaxcodz/advice-to-frontend-developers-new-to-javascript-2dej</guid>
      <description>&lt;p&gt;As a frontend developer who just started learning JavaScript after completing HTML and CSS, At first JavaScript, may seem boring, sorry not "may", it is boring at first. This article is pointing to those learning JavaScript for the first time(mainly Frontend developers). This is a part of my personal experience too. &lt;/p&gt;

&lt;p&gt;Unlike the days of HTML and CSS, JavaScript is a more complex and technical language that requires an unruffled, enthusiastic and fertile mind to be learned.  &lt;/p&gt;

&lt;p&gt;The reason why JavaScript seem boring is, just as said, unlike the days of learning HTML and CSS, while learning those languages you implement almost every new thing you‚Äôve learned maybe into a project you are working on (it is advisable to be working on a project while learning), this makes it fun and you are ready to learn more. I believe most Frontend dev can relate to this, "I used to have fun implementing any new thing into my project".  &lt;/p&gt;

&lt;p&gt;The story changes when it comes to the case of the BOSS 'JavaScript', while learning for the first few days or probably weeks, you find yourself not making any meaningful thing of what you‚Äôve learned, talk less of implementing it.  &lt;/p&gt;

&lt;p&gt;To all those Frontend developers currently in this phase(learning 'JavaScript') all I want to tell you is to just keep learning and occasionally try going through what you‚Äôve learned so as not to forget them when the time to use them comes.  &lt;/p&gt;

&lt;p&gt;I promise you it would get to a time when the idea of what to do with what you‚Äôve learned would come, and if not try watching tutorials on "making projects with JavaScript". While watching these you would find out that they are making use of what you know already, then maybe try imitating what they‚Äôve done and probably make some changes. from there ideas on what to do would begin to pop up (I believe).  &lt;/p&gt;

&lt;p&gt;If you are not still satisfied and you think you are not improving I would advise you to visit these websites  &lt;/p&gt;

&lt;p&gt;Hackerranks &lt;a href="https://www.hackerrank.com/dashboard"&gt;https://www.hackerrank.com/dashboard&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;Freecodecamp &lt;a href="https://www.freecodecamp.org/"&gt;https://www.freecodecamp.org/&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;Coursera &lt;a href="https://www.coursera.org/specializations/javascript-beginner"&gt;https://www.coursera.org/specializations/javascript-beginner&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;Codecademy &lt;a href="https://www.codecademy.com/"&gt;https://www.codecademy.com/&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;Trust me my fellow JS learners this process would help you improve a great deal.  &lt;/p&gt;

&lt;p&gt;Lets meet  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/damilola-bhadmus-351074221/"&gt;https://www.linkedin.com/in/damilola-bhadmus-351074221/&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.facebook.com/damilola.bhadmus.94"&gt;https://web.facebook.com/damilola.bhadmus.94&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;DO NOT KEEP THE SPIRIT LOW !!!! &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Deploy Rails and Sidekiq to Render.com using YAML</title>
      <author>Ayush Newatia</author>
      <pubDate>Tue, 26 Oct 2021 21:07:58 +0000</pubDate>
      <link>https://dev.to/ayushn21/deploy-rails-and-sidekiq-to-rendercom-using-yaml-346</link>
      <guid>https://dev.to/ayushn21/deploy-rails-and-sidekiq-to-rendercom-using-yaml-346</guid>
      <description>&lt;p&gt;&lt;a href="https://render.com"&gt;Render.com&lt;/a&gt; is a new Platform-as-a-service offering that's a great alternative to Heroku. Rather than think in terms of "apps" as Heroku does; Render has the concept of "services". So your Rails app would be a service; your database would be another service; Redis would be another service etc. Services could also potentially be shared between multiple apps.  &lt;/p&gt;

&lt;p&gt;Any non-trivial Rails app these days needs &lt;a href="https://guides.rubyonrails.org/active_job_basics.html"&gt;Background Jobs&lt;/a&gt; and a popular framework for this is &lt;a href="http://github.com/mperham/sidekiq/"&gt;Sidekiq&lt;/a&gt;. Sidekiq uses Redis as a data store. This means we need to deploy 4 services to Render to run our app:  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Rails web service&lt;/li&gt;
&lt;li&gt;Sidekiq background service&lt;/li&gt;
&lt;li&gt;PostgreSQL database&lt;/li&gt;
&lt;li&gt;Redis&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Render supports "infrastructure as code" so we're going to define these services in a YAML file so it's tracked in &lt;code&gt;git&lt;/code&gt; along with our application code. Ruby environments are supported natively and they also have a managed PostgreSQL database offering. For anything else we need to use a Docker image, so using Redis is a tiny bit trickier.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;At the time of writing,&lt;/em&gt; &lt;a href="https://feedback.render.com/features/p/managed-redis"&gt;&lt;em&gt;Render is working on a managed Redis offering&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. When that's live, it should be easier to deploy and manage a Redis service.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Render supports 3 service types:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web service [&lt;em&gt;exposed to the internet via&lt;/em&gt; &lt;code&gt;https&lt;/code&gt; &lt;em&gt;on port 80&lt;/em&gt;]&lt;/li&gt;
&lt;li&gt;Private service [&lt;em&gt;exposed only to all your other services&lt;/em&gt;]&lt;/li&gt;
&lt;li&gt;Background worker [&lt;em&gt;not exposed to the network at all&lt;/em&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#rails-on-render"&gt;
  &lt;/a&gt;
  Rails on Render
&lt;/h2&gt;

&lt;p&gt;We'll deploy the Rails web app as a web service, the Sidekiq worker as a background worker and Redis as a private service using a &lt;a href="http://github.com/render-examples/redis"&gt;Render maintained &lt;code&gt;Dockerfile&lt;/code&gt;&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;Firstly, we need to update our database and Puma configurations for production. Follow &lt;a href="https://render-web.onrender.com/docs/deploy-rails#go-production-ready"&gt;this section from Render's Rails deployment guide&lt;/a&gt; and then return to this post.  &lt;/p&gt;

&lt;p&gt;Then, we need to add a build script that will be run when the app is deployed. Create a file called &lt;code&gt;render-build.sh&lt;/code&gt; in your &lt;code&gt;bin&lt;/code&gt; directory and add the following contents:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class="c"&gt;# exit on error&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nt"&gt;-o&lt;/span&gt; errexit

bundle &lt;span class="nb"&gt;install
&lt;/span&gt;bundle &lt;span class="nb"&gt;exec &lt;/span&gt;rake assets:precompile
bundle &lt;span class="nb"&gt;exec &lt;/span&gt;rake assets:clean
bundle &lt;span class="nb"&gt;exec &lt;/span&gt;rake db:migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;This script is also from Render's&lt;/em&gt; &lt;a href="https://render-web.onrender.com/docs/deploy-rails#create-a-build-script"&gt;&lt;em&gt;Rails deployment guide&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ensure the script is executable by running the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;chmod &lt;/span&gt;a+x bin/render-build.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, we create our infrastructure specification. In your project root, create a file called &lt;code&gt;render.yaml&lt;/code&gt; and paste in the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;web&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;myapp-web&lt;/span&gt;
    &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ruby&lt;/span&gt;
    &lt;span class="na"&gt;region&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;frankfurt&lt;/span&gt; &lt;span class="c1"&gt;# or oregon&lt;/span&gt;
    &lt;span class="na"&gt;plan&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;starter&lt;/span&gt;
    &lt;span class="na"&gt;numInstances&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="na"&gt;buildCommand&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;./bin/render-build.sh&lt;/span&gt;
    &lt;span class="na"&gt;startCommand&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;REDIS_URL="redis://${REDIS_HOST}" bundle exec puma -C config/puma.rb&lt;/span&gt;
    &lt;span class="na"&gt;domains&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;example.com&lt;/span&gt; &lt;span class="c1"&gt;# replace with your domain name&lt;/span&gt;
    &lt;span class="na"&gt;envVars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;DATABASE_URL&lt;/span&gt;
        &lt;span class="na"&gt;fromDatabase&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;myapp-db&lt;/span&gt;
          &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;connectionString&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;REDIS_HOST&lt;/span&gt;
        &lt;span class="na"&gt;fromService&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;myapp-redis&lt;/span&gt;
          &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pserv&lt;/span&gt;
          &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;hostport&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;RAILS_MASTER_KEY&lt;/span&gt;
        &lt;span class="na"&gt;sync&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;

  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;worker&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;myapp-sidekiq&lt;/span&gt;
    &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ruby&lt;/span&gt;
    &lt;span class="na"&gt;region&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;frankfurt&lt;/span&gt; &lt;span class="c1"&gt;# or oregon&lt;/span&gt;
    &lt;span class="na"&gt;plan&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;starter&lt;/span&gt;
    &lt;span class="na"&gt;buildCommand&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;bundle install &amp;amp;&amp;amp; bundle exec rake assets:precompile&lt;/span&gt;
    &lt;span class="na"&gt;startCommand&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;REDIS_URL="redis://${REDIS_HOST}" bundle exec sidekiq -e production&lt;/span&gt;
    &lt;span class="na"&gt;envVars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;DATABASE_URL&lt;/span&gt;
        &lt;span class="na"&gt;fromDatabase&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;myapp-db&lt;/span&gt;
          &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;connectionString&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;REDIS_HOST&lt;/span&gt;
        &lt;span class="na"&gt;fromService&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;myapp-redis&lt;/span&gt;
          &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pserv&lt;/span&gt;
          &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;hostport&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;RAILS_MASTER_KEY&lt;/span&gt;
        &lt;span class="na"&gt;sync&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;

  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pserv&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;myapp-redis&lt;/span&gt;
    &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker&lt;/span&gt;
    &lt;span class="na"&gt;region&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;frankfurt&lt;/span&gt; &lt;span class="c1"&gt;# or oregon&lt;/span&gt;
    &lt;span class="na"&gt;repo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://github.com/render-examples/redis.git&lt;/span&gt;
    &lt;span class="na"&gt;numInstances&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="na"&gt;disk&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;myapp-redis-data&lt;/span&gt;
      &lt;span class="na"&gt;mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/lib/redis&lt;/span&gt;
      &lt;span class="na"&gt;sizeGB&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="na"&gt;databases&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;myapp-db&lt;/span&gt;
    &lt;span class="na"&gt;plan&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;starter&lt;/span&gt;
    &lt;span class="na"&gt;region&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;frankfurt&lt;/span&gt; &lt;span class="c1"&gt;# or oregon&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The full Render YAML specification is&lt;/em&gt; &lt;a href="https://render-web.onrender.com/docs/yaml-spec"&gt;&lt;em&gt;available here&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Most of the above file should be self explanatory. I recommend changing the service names to something specific to your app. The only tricky bit is providing the &lt;code&gt;REDIS_URL&lt;/code&gt; environment variable to our Rails and Sidekiq services. Unlike PostgreSQL which is a managed service, Redis is a generic private service; so the only the host name and port is given to us in environment variables by the Render platform. This means we need to add the &lt;code&gt;redis://&lt;/code&gt; protocol directive to the URL on our own.   &lt;/p&gt;

&lt;p&gt;I found that the easiest way to do this was interpolate the &lt;code&gt;REDIS_HOST&lt;/code&gt; environment variable that Render gives us to create a &lt;code&gt;REDIS_URL&lt;/code&gt; variable in the &lt;code&gt;startCommand&lt;/code&gt; for our services. You can how this is done in the Rails and Sidekiq services above.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;If you run the Rails console in the Render dashboard, you'll need to invoke it using&lt;/em&gt; &lt;code&gt;REDIS_URL="redis://${REDIS_HOST}" bundle exec rails console&lt;/code&gt; otherwise the console process won't be able to find the Redis service.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And finally, all we need to do is connect this YAML file to Render. Go to the Render dashboard, click &lt;strong&gt;New&lt;/strong&gt; in the top right corner and select &lt;strong&gt;Blueprint&lt;/strong&gt;.   &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T7JAg3R1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.chapter24.blog/1634677726VzxY8lo8FiZM-AkRYp7Ygw" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T7JAg3R1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.chapter24.blog/1634677726VzxY8lo8FiZM-AkRYp7Ygw" width="400" height="337"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow the on screen instructions to connect your repository and you should be good to go!  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I'm using the above approach in my app: &lt;a href="https://scattergun.email"&gt;Scattergun&lt;/a&gt;. So far I'm really happy with it. I'm excited to see what the Render team has in store for the future and personally I plan to use them for all my projects in the foreseeable future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further reading
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://render-web.onrender.com/docs/deploy-rails"&gt;Render's guide to deploying Rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://render-web.onrender.com/docs/deploy-sidekiq-worker"&gt;Render's guide to deploying Sidekiq&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/render-examples/redis"&gt;Render's guide to deploy persistent Redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://render.com/render-vs-heroku-comparison"&gt;Render vs Heroku&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Scattergun is the easiest way to collect email addresses on your landing page and send emails to your mailing list.&lt;/em&gt; &lt;a href="https://scattergun.email"&gt;&lt;em&gt;Get started for free&lt;/em&gt;&lt;/a&gt;&lt;em&gt;!&lt;/em&gt; &lt;/p&gt;

</description>
      <category>rails</category>
      <category>render</category>
      <category>devops</category>
      <category>yaml</category>
    </item>
    <item>
      <title>How to make a stunning README for your Github profile.
</title>
      <author>DivineFavour</author>
      <pubDate>Tue, 26 Oct 2021 20:58:57 +0000</pubDate>
      <link>https://dev.to/favor/how-to-make-a-stunning-readme-for-your-github-profile-5e8g</link>
      <guid>https://dev.to/favor/how-to-make-a-stunning-readme-for-your-github-profile-5e8g</guid>
      <description>&lt;p&gt;Hey I'm Favor, a 13 year old self-taught front-end web developer very passionate about programming ‚ù§Ô∏è I've not been writing for some time due to the preparations I've been making for the new school session. Yay, I'm in high school!! üíÉüíÉ So, let's jump right into our story üëá&lt;/p&gt;

&lt;p&gt;...From time to time, when you visit people's Github profiles, you may find amazing animations, pictures and fancy texts. All these are included in the new Github profile READMEs. In this article I'll show you how to make yours as stunning as theirs üò∏&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xt0vI6A5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awmdk1e5ye5kqc2ys9k2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xt0vI6A5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awmdk1e5ye5kqc2ys9k2.png" alt="My Github Profile"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nmasi322/"&gt;https://github.com/nmasi322/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-your-readme-file"&gt;
  &lt;/a&gt;
  Creating your README file
&lt;/h2&gt;

&lt;p&gt;To create your README Github profile got to  &lt;a href="https://github.com/new"&gt;https://github.com/new&lt;/a&gt; and create a new repository. Name the repository with your username in that case, mine would be nmasi322/nmasi322 Now it's typed in, you will receive a message telling you about this secret/special repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tazB-26i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rxa369chzbgaqvk9tga.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tazB-26i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rxa369chzbgaqvk9tga.png" alt="Creating a new repository"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is all you need to do here. With that said, you can include any other files like code, pictures, GIFs etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#making-it-stand-out"&gt;
  &lt;/a&gt;
  Making it stand out
&lt;/h2&gt;

&lt;p&gt;You now have your personal README profile, and you could just add your mail, social media links and toss it out for the world to see but guess what? YOUR PROFILE IS VERY BOOORRRIIINNNGGGG üò¥üí§. It's so boring that recruiters might just skip your profile, but I can help you style this profile in a few minutes. Just follow the steps below.üëá&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#your-header"&gt;
  &lt;/a&gt;
  Your header
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You can create a beautiful header at &lt;a href="https://xscoder.com/ths/?ref=producthunt"&gt;https://xscoder.com/ths/?ref=producthunt&lt;/a&gt;, which is where I created mine, or just have your writeup there.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a62KlAS0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ypmzzxi19t1gz13c8wt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a62KlAS0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ypmzzxi19t1gz13c8wt.png" alt="My header Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Next, you should have a little introduction of yourself and what you do or love to do üë©‚Äçüíª&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1NOOny6N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y0a5om45m5fk2vfaid8d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1NOOny6N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y0a5om45m5fk2vfaid8d.png" alt="A little intro of myself"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can then add your social media link through which people can contact you. You can do it when editing your README file below. Press ctrl + k or command + k on your computer to show the link option. The title goes in the square brackets [], while the link goes in the parenthesis ().&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9DOEBSbt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bul4744zncuve90etzly.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9DOEBSbt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bul4744zncuve90etzly.png" alt="Adding your social media links"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Next is your different skills. Feel free to show the different skills which you have acquired in your field ü¶ö&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sX5ez-Rl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbypwu7lrz1dadmbon3p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sX5ez-Rl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbypwu7lrz1dadmbon3p.png" alt="Skills section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Then, you can add your extra-curricular activities in the next section. I added my recent blogs in this section.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xS4Ti2jU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zw346ztq80x4vxyuisq0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xS4Ti2jU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zw346ztq80x4vxyuisq0.png" alt="Extra-curricular activities"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;And finally you can add the special Github Profile Stats by pasting the link below in your README file.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[![My GitHub Stats](https://github-readme-stats.vercel.app/api/?username=YOUR_USERNAME&amp;amp;count_private=true&amp;amp;theme=react&amp;amp;showicons=true)]()

[![My GitHub Language Stats](https://github-readme-stats.vercel.app/api/top-langs/?username=YOUR_USERNAME&amp;amp;langs_count=5&amp;amp;theme=react)]()

[![My Contribution Stats](https://github-contribution-stats.vercel.app/api/?username=YOUR_USERNAME)](https://github.com/YOUR_USERNAME/github-contribution-stats/)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace YOUR_USERNAME with your Github profile username. You can pin your repositories below your README file and this is how you do it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;At the top right corner of your profile, click "Your Profile"&lt;/li&gt;
&lt;li&gt;Move down to "Customize your pins"&lt;/li&gt;
&lt;li&gt;Click on the pins you wish to pin to your profile and voila! Your awesome profile is now complete. Don't forget to regularly create repos or projects and upload them to your Github account.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope this article was helpful if it was not, I'm sorry to let you down but I'll try better next time. Until I write again, ‚ù§Ô∏è Divine.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>github</category>
    </item>
    <item>
      <title>A/B Testing with the new Next.js 12 Middleware</title>
      <author>Jeremy Dorn</author>
      <pubDate>Tue, 26 Oct 2021 20:34:54 +0000</pubDate>
      <link>https://dev.to/jdorn/ab-testing-with-the-new-nextjs-12-middleware-54j6</link>
      <guid>https://dev.to/jdorn/ab-testing-with-the-new-nextjs-12-middleware-54j6</guid>
      <description>&lt;p&gt;Today, Vercel released &lt;a href="https://nextjs.org/blog/next-12"&gt;Next.js 12&lt;/a&gt; which adds a number of exciting performance improvements as well as a new beta feature - Middleware.  Middleware has many uses, but I'm going to focus in this post on A/B Testing.&lt;/p&gt;

&lt;p&gt;You've always been able to run A/B tests on Next.js applications, but until this latest release there have been some major strings attached. For example, on static pages, there would often be a "flash" where users would see the original page for a split second before your variation popped in and replaced it. And on server-rendered pages, you would need to completely disable caching since two users on the same URL could get two different HTML responses.&lt;/p&gt;

&lt;p&gt;Next.js middleware fixes these issues in an elegant way.  You can create two different pages for a single URL and route traffic between them with a middleware function. The middleware is run at the edge, so it's globally distributed and super fast for your users.&lt;/p&gt;

&lt;p&gt;Let's start with a simple Next.js app structure:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pages/
|  index.tsx
|  index_new.tsx
|  _middleware.ts
lib/
|  abtesting.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our existing homepage (&lt;code&gt;pages/index.tsx&lt;/code&gt;) is kind of boring:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* pages/index.tsx */&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next/link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;HomePage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;My Site&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/signup"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Sign Up&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We want to see if we can increase signups, so we clone the existing homepage into a new file (&lt;code&gt;pages/index_new.tsx&lt;/code&gt;) and change the text to be more exiciting:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* pages/index_new.tsx */&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next/link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;HomePageVariant&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Welcome to My Site!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/signup"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Get Started Today!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the real magic happens in the &lt;code&gt;pages/_middleware.ts&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* pages/_middleware.ts */&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NextRequest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;NextResponse&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;next/server&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nx"&gt;initRequest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;getExperimentContext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;trackRequest&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../lib/abtesting&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;middleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NextRequest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;initRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="c1"&gt;// Default to normal Next.js routing&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;NextResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="c1"&gt;// If the user is on the homepage, run the experiment&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;pathname&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nextUrl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pathname&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getExperimentContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newPath&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;homepage-copy-experiment&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;variations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/index_new&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="c1"&gt;// Route to the assigned page path&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;NextResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rewrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Server-side analytics tracking&lt;/span&gt;
  &lt;span class="nx"&gt;trackRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The middleware file references a few helper functions in &lt;code&gt;lib/abtesting.ts&lt;/code&gt;. For dependencies, I'm using &lt;a href="https://github.com/growthbook/growthbook"&gt;GrowthBook&lt;/a&gt; to run the A/B tests and &lt;a href="https://mixpanel.com/"&gt;Mixpanel&lt;/a&gt; for analytics tracking. Feel free to swap these out with other libraries if you want.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* lib/abtesting.ts */&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;GrowthBook&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@growthbook/growthbook&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NextRequest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;NextResponse&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next/server&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Mixpanel&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mixpanel&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;COOKIE_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;distinct_id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mixpanel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Mixpanel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MIXPANEL_TOKEN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Get the user's ip and distinct_id from the request&lt;/span&gt;
&lt;span class="c1"&gt;// Generate a new distinct_id if it doesn't exist yet&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;distinct_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;initRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NextRequest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;distinct_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;COOKIE_NAME&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;randomUUID&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nx"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ip&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Function to get the GrowthBook A/B testing client&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getExperimentContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NextRequest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;GrowthBook&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;distinct_id&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;trackingCallback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;experiment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;mixpanel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Experiment Viewed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;distinct_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;experimentId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;experiment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;variationId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;variationId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;trackRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NextRequest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Track the page view in Mixpanel&lt;/span&gt;
  &lt;span class="nx"&gt;mixpanel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Page View&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;distinct_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nextUrl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pathname&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="c1"&gt;// Persist the distinct_id in a cookie for future requests&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;COOKIE_NAME&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;COOKIE_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;distinct_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all we need!  Now, when a user visits your site, the following will happen:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; If there is no distinct_id cookie yet, we generate a new UUID.&lt;/li&gt;
&lt;li&gt; If the user is requesting the homepage, we randomly assign them a variation - either &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;/index_new&lt;/code&gt; - and overwrite the default Next.js routing to use the assigned path.&lt;/li&gt;
&lt;li&gt; We track the page view (and which variation the user was assigned) in Mixpanel.&lt;/li&gt;
&lt;li&gt; If we needed to generate a new UUID in step 1, we store it in a cookie in the response.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hopefully in future releases, Next.js expands on this feature to make A/B testing even more powerful. Imagine, for example, that middleware could inject props into your pages, similar to &lt;code&gt;getServerSideProps&lt;/code&gt;. Then you wouldn't need to create new temporary pages every time you wanted to run an A/B test!&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>react</category>
    </item>
    <item>
      <title>Contributed to Audio Dataset</title>
      <author>Abid</author>
      <pubDate>Tue, 26 Oct 2021 20:24:27 +0000</pubDate>
      <link>https://dev.to/kingabzpro/contributed-to-audio-dataset-1ngh</link>
      <guid>https://dev.to/kingabzpro/contributed-to-audio-dataset-1ngh</guid>
      <description>&lt;p&gt;Contributed ten audio datasets into open-source project as a part of hacktoberfest 2021: &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/DAGsHub"&gt;
        DAGsHub
      &lt;/a&gt; / &lt;a href="https://github.com/DAGsHub/audio-datasets"&gt;
        audio-datasets
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      open-source audio datasets
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Open-source Audio Datasets&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/DAGsHub/audio-datasetsassets/hacktoberfest.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LxDHX9-8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/DAGsHub/audio-datasetsassets/hacktoberfest.png" alt="audio-catalog"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hacktoberfest.digitalocean.com" rel="nofollow"&gt;Hacktoberfest&lt;/a&gt; is a month-long virtual festival of open source! Participants are giving back to the community by completing pull requests, participating in events, and donating to open-source projects. This project is part of Hacktoberfest 2021, where participants enrich the open-source audio datasets hosted on DagsHub.&lt;/p&gt;
&lt;h2&gt;
Quick Start to Contribution&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Sign-up to &lt;a href="https://hacktoberfest.digitalocean.com/profile" rel="nofollow"&gt;Hacktoberfest&lt;/a&gt; &amp;amp; &lt;a href="https://dagshub.com/user/sign_up?redirect_to=" rel="nofollow"&gt;DagsHub&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Join our &lt;a href="https://discord.gg/xAGgkNht" rel="nofollow"&gt;Hacktoberfest 2021 Discord channel&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Read the &lt;a href="https://hacktoberfest.digitalocean.com/resources/participation" rel="nofollow"&gt;contribution guide lines&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Create a Pull Requests on the GitHub &lt;a href="https://github.com/DAGsHub/audio-datasets"&gt;audio-datasets&lt;/a&gt; repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
What does the DagsHub community contribute?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;This year we'd like to focus our contribution on the audio domain&lt;/strong&gt;. For that, we added audio data catalog capabilities to DagsHub! You can now upload audio files to DagsHub and see its spectrogram, wave, and even listen to it! You can see a vivid example of this (extremely cool) feature in our &lt;a href="https://dagshub.com/DagsHub/Librispeech-ASR-corpus/src/master/dev-clean/84/121123/84-121123-0000.flac" rel="nofollow"&gt;Librispeech-ASR-corpus&lt;/a&gt; project.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/DAGsHub/audio-datasetsassets/audio-catalog.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ytzG8NLv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/DAGsHub/audio-datasetsassets/audio-catalog.png" alt="audio-catalog"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To help audio practitioners leverage this new feature‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/DAGsHub/audio-datasets"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xjYlmQEv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owu6j8n5vh46ny398dv3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xjYlmQEv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owu6j8n5vh46ny398dv3.jpg" alt="ten-dataset"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>audio</category>
      <category>opensource</category>
      <category>dagshub</category>
    </item>
    <item>
      <title>Using material-table in React to build feature-rich data tables</title>
      <author>Matt Angelosanto</author>
      <pubDate>Tue, 26 Oct 2021 20:16:02 +0000</pubDate>
      <link>https://dev.to/logrocket/using-material-table-in-react-to-build-feature-rich-data-tables-48no</link>
      <guid>https://dev.to/logrocket/using-material-table-in-react-to-build-feature-rich-data-tables-48no</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/mohammadfaisal/"&gt;Mohammad Faisal&lt;/a&gt;&lt;/strong&gt; ‚úèÔ∏è&lt;/p&gt;

&lt;p&gt;Tables are a vital part of almost any web application, especially heavily data-driven applications.&lt;/p&gt;

&lt;p&gt;In this tutorial, we‚Äôll review the importance of choosing the right table component for your project and demonstrate how to create tables in React using one of the best and most feature-rich libraries available: material-table.&lt;/p&gt;

&lt;p&gt;Here‚Äôs what we‚Äôll cover:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Why do you need a table component?&lt;/li&gt;
&lt;li&gt;  Why use material-table?&lt;/li&gt;
&lt;li&gt;  Installing material-table&lt;/li&gt;
&lt;li&gt;  Creating a table&lt;/li&gt;
&lt;li&gt;  Adding Material Icons&lt;/li&gt;
&lt;li&gt;  Using icons in your table&lt;/li&gt;
&lt;li&gt;  Adding actions to material-table&lt;/li&gt;
&lt;li&gt;  Overriding table components&lt;/li&gt;
&lt;li&gt;  Custom rendering&lt;/li&gt;
&lt;li&gt;  Exporting data to &lt;code&gt;.csv&lt;/code&gt; and &lt;code&gt;.pdf&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  Grouping data&lt;/li&gt;
&lt;li&gt;  Searching&lt;/li&gt;
&lt;li&gt;  Sorting data&lt;/li&gt;
&lt;li&gt;  Alternatives to material-table

&lt;ul&gt;
&lt;li&gt;  rsuite-table&lt;/li&gt;
&lt;li&gt;  React Table&lt;/li&gt;
&lt;li&gt;  MUI-Datatables&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;  Is material-table actively maintained?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-do-you-need-a-table-component"&gt;
  &lt;/a&gt;
  Why do you need a table component?
&lt;/h2&gt;

&lt;p&gt;A plain HTML table is very powerful and can be used to present data quickly. You can even add customized styling to make it your own. If you‚Äôre only concerned with presenting simple data to your end users, a plain old HTML table should be enough for you.&lt;/p&gt;

&lt;p&gt;But plain HTML tables have some limitations, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Look and feel ‚Äî plain HTML tables are pretty basic in terms of styling. You have to add a lot of styles to make an HTML table look professional&lt;/li&gt;
&lt;li&gt;  Features ‚Äî HTML tables don‚Äôt support any additional features such as searching, sorting, etc.&lt;/li&gt;
&lt;li&gt;  Performance ‚Äî HTML tables are not optimized for performance because there is no default support for pagination or lazy loading&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Table components are designed to help you solve these and other issues associated with plain HTML tables. A good table component should have the following features built in:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Searching through data&lt;/li&gt;
&lt;li&gt;  Sorting data&lt;/li&gt;
&lt;li&gt;  Filtering columns&lt;/li&gt;
&lt;li&gt;  Download options&lt;/li&gt;
&lt;li&gt;  Style customization&lt;/li&gt;
&lt;li&gt;  Row actions&lt;/li&gt;
&lt;li&gt;  Row selection&lt;/li&gt;
&lt;li&gt;  Grouping data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The features mentioned above are commonly found in modern applications that present data in table format.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-materialtable"&gt;
  &lt;/a&gt;
  Why use material-table?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://material-table.com/#/"&gt;material-table&lt;/a&gt; is virtually the only table library that supports all of the aforementioned features.&lt;/p&gt;

&lt;p&gt;The library is built on top of &lt;a href="https://blog.logrocket.com/using-material-ui-with-react-hook-form/"&gt;Material UI&lt;/a&gt;, the most popular UI library in the React ecosystem. material-table will blend in perfectly if you are already using Material UI.&lt;/p&gt;

&lt;p&gt;With the ability to customize the look and feel of a table build with material-table, you can use it in any React project.&lt;/p&gt;

&lt;p&gt;If you‚Äôre a visual learner, check out this video tutorial to help you get started using material-table.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=T4dtGAGCXVU&amp;amp;"&gt;https://www.youtube.com/watch?v=T4dtGAGCXVU&amp;amp;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-materialtable"&gt;
  &lt;/a&gt;
  Installing material-table
&lt;/h2&gt;

&lt;p&gt;First, create a new project using &lt;a href="https://blog.logrocket.com/create-react-app-a-quick-setup-guide-b812f0aad03c/"&gt;Create React App&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-react-app material-table-demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After the project is created, go into the root folder of your project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;material-table-demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And add the following dependencies to use material-table:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;material-table &lt;span class="nt"&gt;--save&lt;/span&gt;
npm &lt;span class="nb"&gt;install&lt;/span&gt; @material-ui/core &lt;span class="nt"&gt;--save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or, if you want to use yarn:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add material-table
yarn add @material-ui/core
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That‚Äôs all you need to get started with material-table.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-table"&gt;
  &lt;/a&gt;
  Creating a table
&lt;/h2&gt;

&lt;p&gt;To render a table with material-table, you have to supply the data (an array of objects) and the name of the columns to map with the data. The columns will specify which piece of data will go in which column.&lt;/p&gt;

&lt;p&gt;Let‚Äôs create a new file named &lt;code&gt;BasicTable.jsx&lt;/code&gt; and add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MaterialTable&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;material-table&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mohammad&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;surname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Faisal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;birthYear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1995&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Nayeem Raihan &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;surname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Shuvo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;birthYear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1994&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;field&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Surname&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;field&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;surname&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Birth Year&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;field&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;birthYear&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;numeric&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;BasicTable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;MaterialTable&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Basic Table"&lt;/span&gt; &lt;span class="na"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This piece of code will render the following table:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b9pdP4JA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/basic-table.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b9pdP4JA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/basic-table.png" alt="Basic Table"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nice! Our data is displayed properly and we also have the default &lt;code&gt;search&lt;/code&gt; and &lt;code&gt;pagination&lt;/code&gt; functionality ‚Äî and we didn‚Äôt need to write a single line of code.&lt;/p&gt;

&lt;p&gt;But wait, something is not right. If you direct your attention to the arrows drawn on the image, you‚Äôll notice some weird text. This is because material-table internally tries to use Material Icons, which we need to manually.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-material-icons"&gt;
  &lt;/a&gt;
  Adding Material Icons
&lt;/h2&gt;

&lt;p&gt;To add Material Icons to our table, we must first install the dependency inside our project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; @material-ui/icons &lt;span class="nt"&gt;--save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or, with yarn:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add @material-ui/icons
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have added Material Icons to our project.&lt;/p&gt;

&lt;p&gt;Now let‚Äôs say we want to import a single icon. Do we need to add the whole set of icons? Obviously not ‚Äî that would make the app too heavy.&lt;/p&gt;

&lt;p&gt;Below we‚Äôll demonstrate the wrong and correct ways to import Material Icons to use in your material-table.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wrong way:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;import &lt;span class="o"&gt;{&lt;/span&gt; AddBox, ArrowDownward &lt;span class="o"&gt;}&lt;/span&gt; from &lt;span class="s2"&gt;"@material-ui/icons"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will result in importing all the icons.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Correct way:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Instead, we should try to only get the specific icon:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;import AddBox from &lt;span class="s2"&gt;"@material-ui/icons/AddBox"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
import ArrowDownward from &lt;span class="s2"&gt;"@material-ui/icons/ArrowDownward"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Following this best practice, let‚Äôs create a special component to add all the required icons into the project and reuse that everywhere.&lt;/p&gt;

&lt;p&gt;Create a new file named &lt;code&gt;MaterialTableIcons.js&lt;/code&gt; and add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;AddBox&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/AddBox&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ArrowDownward&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/ArrowDownward&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Check&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/Check&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ChevronLeft&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/ChevronLeft&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ChevronRight&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/ChevronRight&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Clear&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/Clear&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;DeleteOutline&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/DeleteOutline&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Edit&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/Edit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;FilterList&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/FilterList&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;FirstPage&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/FirstPage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;LastPage&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/LastPage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Remove&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/Remove&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;SaveAlt&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/SaveAlt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Search&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/Search&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ViewColumn&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/ViewColumn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tableIcons&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AddBox&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;  &lt;span class="na"&gt;Check&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Check&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;  &lt;span class="na"&gt;Clear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Clear&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;  &lt;span class="na"&gt;Delete&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DeleteOutline&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;  &lt;span class="na"&gt;DetailPanel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ChevronRight&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;  &lt;span class="na"&gt;Edit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Edit&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;  &lt;span class="na"&gt;Export&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SaveAlt&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;  &lt;span class="na"&gt;Filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;FilterList&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;  &lt;span class="na"&gt;FirstPage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;FirstPage&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;  &lt;span class="na"&gt;LastPage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;LastPage&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;  &lt;span class="na"&gt;NextPage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ChevronRight&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;  &lt;span class="na"&gt;PreviousPage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ChevronLeft&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;  &lt;span class="na"&gt;ResetSearch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Clear&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;  &lt;span class="na"&gt;Search&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Search&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;  &lt;span class="na"&gt;SortArrow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ArrowDownward&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;  &lt;span class="na"&gt;ThirdStateCheck&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Remove&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;  &lt;span class="na"&gt;ViewColumn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ViewColumn&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;tableIcons&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The cool thing is if you don‚Äôt like the icons from the &lt;a href="https://mui.com/components/material-icons/"&gt;&lt;code&gt;material-icons&lt;/code&gt;&lt;/a&gt;, you can change the look by switching to some other icon library.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-icons-in-your-table"&gt;
  &lt;/a&gt;
  Using icons in your table
&lt;/h2&gt;

&lt;p&gt;Now let‚Äôs import the icons into our table component where we want to fix the issue.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;import tableIcons from &lt;span class="s2"&gt;"./MaterialTableIcons"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, pass the icons into the table. Update your code with the additional icons prop:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;MaterialTable&lt;/span&gt; &lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;"Table"&lt;/span&gt; &lt;span class="na"&gt;icons=&lt;/span&gt;&lt;span class="s"&gt;{tableIcons}&lt;/span&gt; &lt;span class="na"&gt;columns=&lt;/span&gt;&lt;span class="s"&gt;{columns}&lt;/span&gt; &lt;span class="na"&gt;data=&lt;/span&gt;&lt;span class="s"&gt;{data}&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now our table will look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yCsosT70--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/basic-table-icons.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yCsosT70--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/basic-table-icons.png" alt="Basic Table Icons"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now it‚Äôs perfect! Let‚Äôs explore some other features.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-actions-to-materialtable"&gt;
  &lt;/a&gt;
  Adding actions to material-table
&lt;/h2&gt;

&lt;p&gt;We can add two types of actions to our material-table:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Actions for each row (e.g., deleting or updating a row)&lt;/li&gt;
&lt;li&gt;  Actions for the whole table (e.g., adding a new item to the table)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can easily add actions by passing an &lt;code&gt;actions&lt;/code&gt; array prop into the table.&lt;/p&gt;

&lt;p&gt;If the action is row-specific, we don‚Äôt need to say anything. If the action is for the whole table, we have to pass &lt;code&gt;isFreeAAction = true&lt;/code&gt; into the table.&lt;/p&gt;

&lt;p&gt;Here‚Äôs an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MaterialTable&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;material-table&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;tableIcons&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./MaterialTableIcons&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;TableWithActions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MaterialTable&lt;/span&gt;
      &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Table with actions&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;tableIcons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Delete&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;tooltip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Delete User&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rowData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;You want to delete &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;rowData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;tableIcons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;tooltip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Add User&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;isFreeAction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;You want to add a new row&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;]}&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="nx"&gt;other&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;before&lt;/span&gt;
    &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are removing the &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;column&lt;/code&gt; props to remove duplicates. Our table will have two additional buttons now ‚Äî one in the top right corner (&lt;strong&gt;Add button&lt;/strong&gt;) and a &lt;strong&gt;Delete&lt;/strong&gt; button for each row.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ti8Zw0TU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/delete-notification.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ti8Zw0TU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/delete-notification.png" alt="Delete Notification"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This enables you to specify the actions for your table. There is a &lt;code&gt;disabled&lt;/code&gt; property through which you can determine whether you want to enable action or not.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overriding-table-components"&gt;
  &lt;/a&gt;
  Overriding table components
&lt;/h2&gt;

&lt;p&gt;Now let‚Äôs say you don‚Äôt like the look of the action buttons and you want to render a custom action button. Or maybe you don‚Äôt like how the table cells look. material-table enables you to change the look and feel of any component.&lt;/p&gt;

&lt;p&gt;To achieve this, the &lt;code&gt;MaterialTable&lt;/code&gt; component takes an additional parameter named &lt;code&gt;components&lt;/code&gt; where you can override almost any part of the table.&lt;/p&gt;

&lt;p&gt;To show how this works, we‚Äôll modify the &lt;strong&gt;Delete&lt;/strong&gt; button from our previous example. Let‚Äôs say we don‚Äôt want a &lt;strong&gt;Delete&lt;/strong&gt; icon; instead, we want an actual text button.&lt;/p&gt;

&lt;p&gt;All we have to do is add the following prop to the table:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MaterialTable&lt;/span&gt;
    &lt;span class="nx"&gt;components&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
        &lt;span class="na"&gt;Action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nx"&gt;Custom&lt;/span&gt; &lt;span class="nx"&gt;Delete&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;}}&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="nx"&gt;other&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now our table will look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uJ1v31WM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/table-with-actions.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uJ1v31WM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/table-with-actions.png" alt="Table With Actions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See the &lt;a href="https://material-table.com/#/docs/features/component-overriding"&gt;material-table docs&lt;/a&gt; for a complete list of customization options.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#custom-rendering"&gt;
  &lt;/a&gt;
  Custom rendering
&lt;/h2&gt;

&lt;p&gt;It‚Äôs nice that we can override the components that are provided by material-table. But what about &lt;a href="https://material-table.com/#/docs/features/custom-column-rendering"&gt;rendering our own columns&lt;/a&gt;? We‚Äôve seen that we pass the columns and data props into the table and material-table itself takes care of the rendering.&lt;/p&gt;

&lt;p&gt;Now let‚Äôs say we have an image URL that comes from a remote source. We don‚Äôt want to render the URL (because that‚Äôs stupid üòõ).&lt;/p&gt;

&lt;p&gt;In this scenario, we can render whatever we like, such as an image component, for example.&lt;/p&gt;

&lt;p&gt;To do that, we have to modify the columns that we pass into the table.&lt;/p&gt;

&lt;p&gt;Let‚Äôs modify our previous example like the following to add &lt;code&gt;imageUrl&lt;/code&gt; and render that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MaterialTable&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;material-table&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;tableIcons&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./MaterialTableIcons&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mohammad&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;surname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Faisal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;birthYear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1995&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;imageUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://avatars0.githubusercontent.com/u/7895451?s=460&amp;amp;v=4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Nayeem Raihan &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;surname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Shuvo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;birthYear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1994&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;imageUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://avatars0.githubusercontent.com/u/7895451?s=460&amp;amp;v=4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Avatar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;field&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;imageUrl&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;render&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rowData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;rowData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;imageUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;borderRadius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;50%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;field&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Surname&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;field&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;surname&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Birth Year&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;field&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;birthYear&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;numeric&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ImageTable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MaterialTable&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Basic Table&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;icons&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;tableIcons&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now our table will look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_gJD-d77--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/avatar-icons.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_gJD-d77--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/avatar-icons.png" alt="Avatar Icons"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exporting-data-to-raw-csv-endraw-and-raw-pdf-endraw-"&gt;
  &lt;/a&gt;
  Exporting data to &lt;code&gt;.csv&lt;/code&gt; and &lt;code&gt;.pdf&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://material-table.com/#/docs/features/export"&gt;export&lt;/a&gt; feature is by far my favorite feature of the material-table library. When you‚Äôre building data-heavy applications, you may need to enable users to export the data to Excel or PDF. Traditionally you would have to use some custom Excel library to do that job.&lt;/p&gt;

&lt;p&gt;With material-table, you simply pass an option that says &lt;code&gt;exportButton : true&lt;/code&gt;, and you‚Äôre good to go.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MaterialTable&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;material-table&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;BasicTable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MaterialTable&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="nx"&gt;other&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;
            &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
                &lt;span class="na"&gt;exportButton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now there will be an additional icon at the top of the table that enables users to download data both in &lt;code&gt;.csv&lt;/code&gt; and &lt;code&gt;.pdf&lt;/code&gt; format.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D8OTfQIc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/export-table.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D8OTfQIc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/export-table.png" alt="Export Table"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just a single line of code, and you‚Äôve already supercharged your table.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#grouping-data"&gt;
  &lt;/a&gt;
  Grouping data
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs say you have a list of people, each of whom has a &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;age&lt;/code&gt; etc. If you want to see people of the same age, how do you show this in your table?&lt;/p&gt;

&lt;p&gt;material-table enables you to &lt;a href="https://material-table.com/#/docs/features/grouping"&gt;group data&lt;/a&gt; super easily. In any other type of table, this would be an extremely difficult thing to do dynamically.&lt;/p&gt;

&lt;p&gt;With material-table, all you need to do is pass another option named &lt;code&gt;grouping :true&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MaterialTable&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="nx"&gt;other&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;
    &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
        &lt;span class="na"&gt;grouping&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you should see something like the following if you drag the &lt;code&gt;Name&lt;/code&gt; column header to the top of the table:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R4Ha3UgG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/group-table.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R4Ha3UgG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/group-table.png" alt="Group Table"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;material-table internally uses another awesome library named &lt;a href="https://blog.logrocket.com/react-drag-and-drop/"&gt;React DnD&lt;/a&gt; to achieve this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#searching"&gt;
  &lt;/a&gt;
  Searching
&lt;/h2&gt;

&lt;p&gt;We have already seen that, by default, material-table enables us to &lt;a href="https://material-table.com/#/docs/features/search"&gt;search through data&lt;/a&gt;. You can override the look and feel of the search bar by adding styles in the &lt;code&gt;options.searchFieldStyle&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you don‚Äôt want to show the search bar for some reason, you will have to pass &lt;code&gt;search : false&lt;/code&gt;, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MaterialTable&lt;/span&gt;
    &lt;span class="c1"&gt;// other props&lt;/span&gt;
    &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
      &lt;span class="na"&gt;search&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now there should be no search field in your table:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XT3kkzqH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/no-search-field.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XT3kkzqH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/no-search-field.png" alt="No Search Field"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sorting-data"&gt;
  &lt;/a&gt;
  Sorting data
&lt;/h2&gt;

&lt;p&gt;material-table also enables you to &lt;a href="https://material-table.com/#/docs/features/sorting"&gt;sort your data&lt;/a&gt; very easily. All you have to do is pass another option, &lt;code&gt;sorting : true&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MaterialTable&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="nx"&gt;other&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;
    &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;sorting&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All your columns should now be sortable:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--USXJrWeS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/sortable-columns.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--USXJrWeS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/sortable-columns.png" alt="Sortable Columns"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remember, by default, material-table will try to sort your data lexicographically. If you want to sort with some other mechanism, you can modify that by overriding the columns property, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
          &lt;span class="na"&gt;field&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;customSort&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="nx"&gt;other&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt;
  &lt;span class="p"&gt;]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This give you complete control over how you sort your data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alternatives-to-materialtable"&gt;
  &lt;/a&gt;
  Alternatives to material-table
&lt;/h2&gt;

&lt;p&gt;We focused on material-table for this tutorial, but there are certainly other table components to use in your React app. Let‚Äôs highlight a few prominent alternatives to material-table.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rsuitetable"&gt;
  &lt;/a&gt;
  rsuite-table
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/rsuite/rsuite-table"&gt;rsuite-table&lt;/a&gt; has a wide range of features and is great for creating professional-looking tables. It supports almost all the features we we mentioned above but doesn‚Äôt have a download data option. Also, data grouping is not supported out of the box.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-table"&gt;
  &lt;/a&gt;
  React Table
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://blog.logrocket.com/complete-guide-building-smart-data-table-react/"&gt;React Table&lt;/a&gt; is not a component library like the others mentioned here; it is a collection of hooks that enables you to add features to any table component. According to the &lt;a href="https://react-table.tanstack.com/"&gt;official website&lt;/a&gt;, React Table is a ‚Äútable utility, not a table component.‚Äù&lt;/p&gt;

&lt;p&gt;You can use React Table to add sorting, filtering, grouping, pagination, etc., to any table component.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#muidatatables"&gt;
  &lt;/a&gt;
  MUI-Datatables
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.material-ui-datatables.com/"&gt;MUI-Datatables&lt;/a&gt; is a lightweight version of material-table. If you don‚Äôt need the full range of features described above, this library offers a lighter alternative.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-materialtable-actively-maintained"&gt;
  &lt;/a&gt;
  Is material-table actively maintained?
&lt;/h2&gt;

&lt;p&gt;As robust and feature-rich as material-table is, maintenance and support have waned since the original creator left the project. Other contributors are still maintaining the library, though not as actively. However, there is a fork of the current project called &lt;a href="https://www.npmjs.com/package/@material-table/core"&gt;material-table/core&lt;/a&gt;. This version is not yet as polished as material-table, but it is under active development and frequently updated. Although it doesn‚Äôt yet support the entire range of features described above, material-table/core is compatible with the new &lt;a href="https://github.com/mui-org/material-ui/issues/20012"&gt;Material-UI v5&lt;/a&gt;, which is great! material-table remains the more popular library, with roughly 150,000 downloads per week as opposed to material-table/core's 23,000 weekly downloads at the time of writing. But material-table/core is a viable alternative if you're using the latest version of Material-UI and looking for a library with more active support.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h2&gt;

&lt;p&gt;As you can see, material-table solves almost all the problems and covers all the use cases you‚Äôre likely to encounter when building data-heavy React apps. It‚Äôs almost too good to be true.&lt;/p&gt;

&lt;p&gt;But there is a catch: material-table is heavier than all the alternatives mentioned above. Using &lt;a href="https://bundlephobia.com/"&gt;bundlephobia&lt;/a&gt;, we can see that &lt;code&gt;material-table&lt;/code&gt; is over 200KB when used in production.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IP5ZoHPv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/bundle-size.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IP5ZoHPv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/bundle-size.png" alt="Bundle Size"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So if your data needs are simple, using this library might be overkill. You may want to choose some other lightweight library, such as rsuite-table, which is around 30KB in size, or even Rect Table, which is only 15KB.&lt;/p&gt;

&lt;p&gt;I hope this guide helps you make a more informed decision next time you need to choose a table library for your React project.&lt;/p&gt;

&lt;p&gt;The complete code used in this demo is available on &lt;a href="https://github.com/Mohammad-Faisal/material-table-demo"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#full-visibility-into-production-react-apps"&gt;
  &lt;/a&gt;
  Full visibility into production React apps
&lt;/h2&gt;

&lt;p&gt;Debugging React applications can be difficult, especially when users experience issues that are hard to reproduce. If you‚Äôre interested in monitoring and tracking Redux state, automatically surfacing JavaScript errors, and tracking slow network requests and component load time, &lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;try LogRocket&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8FGBNR-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2017/03/1d0cd-1s_rmyo6nbrasp-xtvbaxfg.png" alt="LogRocket Dashboard Free Trial Banner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;LogRocket&lt;/a&gt; is like a DVR for web apps, recording literally everything that happens on your React app. Instead of guessing why problems happen, you can aggregate and report on what state your application was in when an issue occurred. LogRocket also monitors your app's performance, reporting with metrics like client CPU load, client memory usage, and more.&lt;/p&gt;

&lt;p&gt;The LogRocket Redux middleware package adds an extra layer of visibility into your user sessions. LogRocket logs all actions and state from your Redux stores.&lt;/p&gt;

&lt;p&gt;Modernize how you debug your React apps ‚Äî &lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;start monitoring for free&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Nano ID for ColdFusion/CFML</title>
      <author>James Moberg</author>
      <pubDate>Tue, 26 Oct 2021 20:00:08 +0000</pubDate>
      <link>https://dev.to/gamesover/nano-id-for-coldfusioncfml-3l5h</link>
      <guid>https://dev.to/gamesover/nano-id-for-coldfusioncfml-3l5h</guid>
      <description>&lt;p&gt;I wanted to use unique IDs in a project and the &lt;a href="https://github.com/ai/nanoid"&gt;nanoid&lt;/a&gt; library looked interesting.  There was a &lt;a href="https://github.com/aventrix/jnanoid"&gt;Java version&lt;/a&gt; available, but nothing available in ColdFusion/CFML. I didn't want to have to manually add a JAR file to my server, so I ported it and added support for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;multiple dictionaries (numbers, hexadecimalLowercase, hexadecimalUppercase, lowercase, uppercase, alphanumeric, nolookalikes &amp;amp; nolookalikesSafe)&lt;/li&gt;
&lt;li&gt;multiple algorithms (SHA1PRNG, IBMSecureRandom, NativePRNG, NativePRNGBlocking &amp;amp; NativePRNGNonBlocking)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also created a test script with ms/ns benchmarks and example code so that the results could be reviewed.&lt;/p&gt;

&lt;p&gt;This was also my first ever #Hacktoberfest submission.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/JamoCA/cfml-nanoid"&gt;https://github.com/JamoCA/cfml-nanoid&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;

</description>
      <category>cfml</category>
      <category>hacktoberfest</category>
    </item>
    <item>
      <title>Everything you've (n)ever wanted to know about favicons</title>
      <author>fiiv</author>
      <pubDate>Tue, 26 Oct 2021 19:43:43 +0000</pubDate>
      <link>https://dev.to/mtimofiiv/everything-youve-never-wanted-to-know-about-favicons-4k5k</link>
      <guid>https://dev.to/mtimofiiv/everything-youve-never-wanted-to-know-about-favicons-4k5k</guid>
      <description>&lt;p&gt;A favicon is quite simply an &lt;strong&gt;icon&lt;/strong&gt;. The idea behind its inception was for browsers to use them to make a quick, easy to identify visual representation of a website in the browser's UI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jYP7DbvM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydfpdypv6lqmuvirmonk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jYP7DbvM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydfpdypv6lqmuvirmonk.png" alt="Favicon as it appears in Firefox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-little-bit-of-history"&gt;
  &lt;/a&gt;
  A little bit of history
&lt;/h2&gt;

&lt;p&gt;The first favicons were implemented in 1999 by Microsoft in their Internet Explorer browser. Since then, they were widely adopted by almost all browsers, and today it is commonplace to find favicons being displayed all over the browser, such as in bookmarks menus, window and tab headings, address bars, history, etc.&lt;/p&gt;

&lt;p&gt;Microsoft's original idea was to load that icon from a specific place relative to a website. If your website's address was &lt;code&gt;pokemon.com&lt;/code&gt;, Internet Explorer looked for it at &lt;code&gt;pokemon.com/favicon.ico&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This original implementation worked alright at first. But at the time, lots of websites were hosted with companies like Geocities, Angelfire and Tripod. They would give your website an address like &lt;code&gt;tripod.com/my-pokemon-website&lt;/code&gt;. The problem with this was that the browser would always use Tripod's favicon located at &lt;code&gt;tripod.com/favicon.ico&lt;/code&gt; and not one that the website's author might want to show!&lt;/p&gt;

&lt;p&gt;Eventually, the people responsible for standardising HTML on the web, the World Wide Web Consortium (W3C), created a specification for how both browsers and website authors should use these icons. In the HTML of the page, an HTML tag would be included, telling the browser where to find that icon.&lt;/p&gt;

&lt;p&gt;But, since the original Internet Explorer needed to work because lots of websites had been using it, browsers began supporting them both.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-advent-of-the-smartphone-and-other-usecases"&gt;
  &lt;/a&gt;
  The advent of the smartphone (and other use-cases)
&lt;/h2&gt;

&lt;p&gt;A lot of things changed when the smartphone became mainstream. One notable thing that changed for favicons was that people could save websites to their home screen. But the favicon.ico icons up to this point were all too small ‚Äì sometimes they were as tiny as 16 pixels! These icons were supposed to be shown next to app icons, which are much more high fidelity images ‚Äì up to 10 times bigger, in fact!&lt;/p&gt;

&lt;p&gt;Android and iOS use different icon sizes. Also, Windows began using yet another icon type for displaying websites in its Metro tile display.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-chaos-is-real"&gt;
  &lt;/a&gt;
  The chaos is real
&lt;/h2&gt;

&lt;p&gt;As a result of all these different specifications, there are now a lot of places to look for favicons. And the different icons you can get will vary depending on which one you request. Some sites will have some but not others!&lt;/p&gt;

&lt;p&gt;The list includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;yoursite.com/favicon.ico&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;In the site's HTML code&lt;/li&gt;
&lt;li&gt;In the site's web manifest file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some sites end up with dozens of different icons. These vary, from the usually tiny favicon.ico to the higher resolution icon used by iOS's home screen feature. Additionally, a lot can go wrong with fetching these.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There might not be any icons at all.&lt;/li&gt;
&lt;li&gt;The icons are specified but don't exist (return a 404).&lt;/li&gt;
&lt;li&gt;The icons are the wrong size.&lt;/li&gt;
&lt;li&gt;The icons are the wrong format for where you might want to use them.&lt;/li&gt;
&lt;li&gt;The icons are corrupted or broken.&lt;/li&gt;
&lt;li&gt;The icons specified might not have the one you might want to use.&lt;/li&gt;
&lt;li&gt;The web server could be misconfigured (for example, resulting in redirect loops).&lt;/li&gt;
&lt;li&gt;The web server could be slow to respond with the icons or the files specifying the icons.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, requesting something as simple as a tiny little website icon can be a very complicated task! Clearly there is no one-size-fits-all solution to grab the icons.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-make-sure-your-website-has-all-its-icons"&gt;
  &lt;/a&gt;
  How to make sure your website has all its icons
&lt;/h2&gt;

&lt;p&gt;So all that being said, how do you make sure your website has all the different icons it should have, and they're properly referenced in your HTML markup?&lt;/p&gt;

&lt;p&gt;Quite simply, the best way to do this is to use a service that generates the markup and icons for you. The best I've found so far is the ol' faithful &lt;a href="https://realfavicongenerator.net/"&gt;realfavicongenerator.net&lt;/a&gt;. You can upload an icon image, specify some preferences, and it will generate a ZIP file with your icons properly sized and set up, as well as the HTML to insert into your site's &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section.&lt;/p&gt;

&lt;p&gt;If you use Webpack, you could also try out the plugin &lt;a href="https://github.com/jantimon/favicons-webpack-plugin"&gt;jantimon/favicons-webpack-plugin&lt;/a&gt; that will automatically work its magic to give you favicons.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-other-sites-favicons-on-your-site"&gt;
  &lt;/a&gt;
  How to use other sites' favicons on your site
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;You could build your own API or serverless function to fetch a site's favicons. But, I gotta tell you from experience, there's a lot of edge cases and weirdness here.&lt;/li&gt;
&lt;li&gt;You could always load &lt;code&gt;domain.com/favicon.ico&lt;/code&gt;, but be prepared for 404s.&lt;/li&gt;
&lt;li&gt;You could use an existing service. &lt;strong&gt;Shameless plug&lt;/strong&gt; ‚Äì I built &lt;a href="https://icon.horse"&gt;Icon Horse&lt;/a&gt; for this purpose, you can use it free (or upgrade for additional features). Other services also exist, like &lt;a href="https://favicongrabber.com/"&gt;Favicon Grabber&lt;/a&gt;. Some search engines like Google, Bing and DuckDuckGo also have APIs for this, but since they're intended for internal use and are undocumented and unsupported, be prepared that they might not work like you want or they might stop working at any moment.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#other-cool-stuff"&gt;
  &lt;/a&gt;
  Other cool stuff
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://iconmap.io/"&gt;Iconmap.io&lt;/a&gt;&lt;/strong&gt;: a massive map of favicons from all over the web&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://realfavicongenerator.net/"&gt;realfavicongenerator.net&lt;/a&gt;&lt;/strong&gt;: the best tool I've found for generating favicons for your website&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://icon.horse"&gt;Icon Horse&lt;/a&gt;&lt;/strong&gt;: my super cool favicon grabber API&lt;/li&gt;
&lt;li&gt;Let me know if you can think of a link for here and I'll add it&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>frontend</category>
      <category>technology</category>
      <category>web</category>
    </item>
    <item>
      <title>Type | Treat 2021 - Day 2</title>
      <author>Orta</author>
      <pubDate>Tue, 26 Oct 2021 19:35:06 +0000</pubDate>
      <link>https://dev.to/typescript/type-treat-2021-day-2-1ojn</link>
      <guid>https://dev.to/typescript/type-treat-2021-day-2-1ojn</guid>
      <description>&lt;h2&gt;
  &lt;a href="#type-treat-challenge-2"&gt;
  &lt;/a&gt;
  Type | Treat Challenge 2
&lt;/h2&gt;

&lt;p&gt;Welcome to the second &lt;code&gt;Type | Treat&lt;/code&gt; challenge! These challenges are a series of blog posts which have 2 code challenges in, one for beginners and one for intermediate TypeScript programmers. We're on day two, which means going over the answers from yesterday and 2 new challenges.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterdays-solution"&gt;
  &lt;/a&gt;
  Yesterday's Solution
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#beginnerlearner-challenge"&gt;
  &lt;/a&gt;
  Beginner/Learner Challenge
&lt;/h3&gt;

&lt;p&gt;The first part of the solution for this challenge used &lt;code&gt;as const&lt;/code&gt; to trigger "Literal Inference" - basically telling TypeScript "Don't convert the array to &lt;code&gt;string[]&lt;/code&gt; but consider it a constant set of string literals. This meant that &lt;code&gt;playlist[0]&lt;/code&gt; stopped returning &lt;code&gt;string&lt;/code&gt; and started returning &lt;code&gt;"The Legend of Sleepy Hollow by The Monotones.mp3"&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;  const playlist = [
      "The Legend of Sleepy Hollow by The Monotones.mp3",
      ...
&lt;span class="gd"&gt;- ]
&lt;/span&gt;&lt;span class="gi"&gt;+ ] as const
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The second part of the challenge used &lt;a href="https://www.typescriptlang.org/docs/handbook/2/typeof-types.html"&gt;&lt;code&gt;typeof&lt;/code&gt; types&lt;/a&gt; to extract the type from the &lt;code&gt;playlist&lt;/code&gt; array. Without the first change, this would be &lt;code&gt;string&lt;/code&gt; but after the change this meant the full array of different types. You then needed to use the &lt;a href="https://www.typescriptlang.org/docs/handbook/2/indexed-access-types.html"&gt;type index syntax&lt;/a&gt; &lt;code&gt;[number]&lt;/code&gt; to declare that you want any potential string from that array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="gd"&gt;- function playSong(song: string) {
&lt;/span&gt;&lt;span class="gi"&gt;+ function playSong(song: typeof playlist[number]) {
&lt;/span&gt;      api.play(song)
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Successfully completing this challenge would raise an error in the final code samples due to a subtle typo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.typescriptlang.org/play?#code/PTAEEkDtQBwJwKbwIYBcCWB7aAzTdQALZAGxMwHcEFIAaUAT0wFcByANwVACMEBjTAFsuqQlwDOxRABNQAEQBSoPHABQIUKRKMWBHHHQ1p4gHSgAmiw4SEqUMxihREhuNQJBTzKGno3B7mZ3JzFQQWZxdD51MAj0SABzEK5CdEdIBAonBhgEdBwGUABBAAVwMFBVVXRBGHw7AG9UHLyC0vAAX2U4IVAAImbcgFp8IdREND6qgUg3WBJkBhI-OwBeUABtVVAd-oAVUIAZBASjUEwcUABlEmoYQoAJTDJKHkKDrgBZbExUbARTLUAMx9WjbXZ9AAU4FQrHEmgAlKBvrN3HA4aAnstpIs3qAAELMPgAa1AAHkqLMTMDQeCdn18d5PtRUPDnMjsG4EARuIVGfJ0NJpLcGNSYCCwbt+iVmHAYLdQCUEJh5VwAKJobnIlls0IAdXQqD4hHkmD4fx571C+PQSUZMFycDFErp-SufAmgniBK0oEhaHkcGQfGYC0xWiRvNAH3kzBK2FZztpUoZaEEyDooD1zxw6czADEg5BiTQufF6PhA8HQ8g8TG5OhkIJsMYk5KIYWMyXUXloHsKCs66EAMJwVyoUiA8XJiGsA4GMjc1h4z5RYgIbQKYPE8TYJOqAC6mnhMzcVXli2WZ40AD0APwxaMtd0GGB2UTxHchPygH+1q92BcoD+PECTiPQFCpMav5snAzBcEMPBBKAfAZjozCVBo6Ylk+uQvmk74TO+oQXksg7IHAQaFM2iD9MgJ6chOkCsn0D6qKedjIDA6CgOsgytAw7SQn0ggMAA+lx6BiSWDB9AiqiSSYMwZOakLyaoODMJA5pYNApFXNgCSQruiQAFzZLkQGkQBGyQMwgi8HAB5Ig0rqKaRxmGfJHTngsDAGYkwkynKCpKiqCoami2q2LqXAGkaJpyGaFpDlwNp2iqjpJupGgHD+FD4F+CREQAhASyGGihLAkLIvCaKAyyoKgCo0VwiCRFyzFeBZmDgShaFMMwj4fsW5yXLWFC4n8KHEIkIihAABvphkLaAC0mQkq0wBRTa2FqiARPNXADC0Fx9MkmFgNZKz0LuIQBnsz4egRoBBn4AKaNA3I9AQ+TJIgGK1oMmBsctgVQjCgNIiiXLovCWKCriUaEiS5KUlOILyWDRl9DGxynJAshATcdyPM85BZFGMYor8-wY3JqjY8J+Jphm9DZiQuZs6AnbFqW7jlucBByBRIZhlToQNk2Lb0wiQA"&gt;Our answer&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#intermediateadvanced-challenge"&gt;
  &lt;/a&gt;
  Intermediate/Advanced Challenge
&lt;/h3&gt;

&lt;p&gt;This pattern is quite common in code we write in TypeScript codebases, you create one function which takes the result of another and keeps passing objects between functions in a pipeline. One of the best techniques for simplifying this design pattern is to use &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#returntypetype"&gt;&lt;code&gt;ReturnType&lt;/code&gt;&lt;/a&gt; with &lt;a href="https://www.typescriptlang.org/docs/handbook/2/typeof-types.html"&gt;&lt;code&gt;typeof myFunc&lt;/code&gt;&lt;/a&gt; to map the return type of one function to the paramter of another. This removes the need for intermediary types which need to be updated when the functions change.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;  const findOldCostume = () =&amp;gt; {
      // ...
      return { jumpSuit, estimate }
  }

- const createNewMask = (costume: any) =&amp;gt; {
&lt;span class="gi"&gt;+ const createNewMask = (costume: ReturnType&amp;lt;typeof findOldCostume&amp;gt;) =&amp;gt; {
&lt;/span&gt;      // ...
      return { ...costume, mask }
  }

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The little extra step at the end was a small reminder that you can use this technique to provide a type which can be re-used everywhere.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Costume&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ReturnType&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;assembleCostume&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://www.typescriptlang.org/play?#code/PTAEGEHsGcBcFcC2BTUAHATstpYEsUAaUAT0nlADM8BzeLUAIgHcALE0AO0llABMs0aKHg4ANngDWyAFAhcrVAENOsJTUic8cYXk4LUAZQCO8PH1ABxJSgD8jYnl7RkyRMMzJYsDsiXQSOTAAI39kC01ScgxQSDELcH8lflQABSU0ZDFY+FhqWAA6UCDQAApQVm80aAAuED54AGNJBuaNAsbIRGBbYwBeRqSAaj5kIbQMrIAyPCUADz6CdWRoGaVFxGXoAEoZEoBNclAXXn9zVHwUXEgqWnpUcl42JV4yeAByBg09GmuuVwssBuJU6nAAbsgMLxYIpQKC4EhlJwLNBpLBGqwctDYWgeMhVLNssxIBhJNcSjQ8BCovQXGJKKAVKBzslIAzLitBmJkDU9gRcVDQABvFxKDAY4iYPSwSEAXyoGC6TB8mQAtCTVbAsC9GHt4bxqMiAPLxKAIq59MrbUB9AB8wpkoCdcM0cFAACskGhDGZeJbReLWAUXvhGqVrQAfCPHPyBjpiGBecOgKMxsUYgo0MXLcOO5360ArS4vVCWgDMAAY806sAgMPohR6vT6nMQi0sZaBZTJuzIC41tTKAHLIZgAWX8ZMtpU65p5oAASl56JwACokTIAHhVyDZt2NppgCBQtutdodzpdnDdm1RNvQGGlkIKUtUE9Rucvt8kBWgrEm96MI0eDityuqXrOx7IAU7abJ2QyWgAbFWl61iuwqgAUWGQYixDfl2PZ6q6vADn4MoAEKQHwJCJCgGDJNOOEoDUTpLnWa4bsg26cXupEliO46TqeNr2kK1ZXm6gx0QxD5PhgL6PqotGQkon7OvIACSTx4GI2ScAC6BKNKPzXJA4lMdBsElqACGgAALAArOJaH1hhWEdEeuFwjYKkEb2Bb+C4iDBNyZpQfeybnmJqHLq5fEUVRNE+fRM6DsgAnvpIpSGnwJp8GFiLhtsuy9vIliDsQMLaHCaXCEygVuCFHASPpsQMkoukGIZUJ1ciJQwqgxKkjS-zhH8fCQEUAASkDMMgEIYI4vBYBIKyxPoAAGKgkBtwhsHgGLFPImzSHtJKSCZzBOJiA2Mo0CAdS6c6MqAwROIywV3OQtREdeJGeRajJCI1oUA8gubyM6AB6th7PIiT6G8Ch6GSe7JMwSgcECtxzF1eiUJC+KNIN12PDVZE-CU+nMKAG07rtsQxBtcmUEoxO7cQJKgFgaBiGzJm3dte3XbTjbuV2G2wyUGmjB1YhY6w1U7numCQCFbjefowSoNAcQQiiNwwi8I2DJwJQncocL-pwNCoHo60POysKUPAnD3XgrqMsiXA8KNgI3KIfDWbdO7QAUcNgIcHydZI3A0+9Q3SBYbD4sjwgtag9HaGtTKQoqGB9q6cTQQmNClBtWnHKw5DxLgSjSIywRkwAJEKFkFBy8qIHouQrBtuwlEOs0KMbc3vNSGinKAicmWgeCZBnxCmyNtv6fRnbJDuJT7YdPOCPisDCLd+J8KqcDWWjwPBaDz26yPvA8IoGDQCCTJYKq8AuMyvB8zKGBSzuCAYN7xsRXOuLcyt2pX3VgVE8QA"&gt;Our Answer&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-challenge"&gt;
  &lt;/a&gt;
  The Challenge
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#beginnerlearner-challenge"&gt;
  &lt;/a&gt;
  Beginner/Learner Challenge
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.typescriptlang.org/play?#gist/927ccc66ae3022dc64c4f650109b937a-5"&gt;Help sort out a large array of pumpkins, and then get cooking soup.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#intermediateadvanced-challenge"&gt;
  &lt;/a&gt;
  Intermediate/Advanced Challenge
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.typescriptlang.org/play?#gist/927ccc66ae3022dc64c4f650109b937a-6"&gt;Fresh back from robotics camp, can you make the perfect punch mixer bot?&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-share-your-solution"&gt;
  &lt;/a&gt;
  How To Share Your Solution
&lt;/h2&gt;

&lt;p&gt;Once you feel you have completed the challenge, you will need to select the &lt;strong&gt;Share&lt;/strong&gt; button in the playground. This will automatically copy a playground URL to your clipboard.&lt;/p&gt;

&lt;p&gt;Then either:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Go to Twitter, and create a tweet about the challenge, add the link to your code and mention the &lt;a href="https://twitter.com/typescript"&gt;@TypeScript&lt;/a&gt; Twitter account with the hashtag &lt;a href="https://twitter.com/search?q=%23TypeOrTreat"&gt;#TypeOrTreat&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Leave us a comment with your feedback on the &lt;a href="https://dev.to/typescript"&gt;dev.to&lt;/a&gt; post, or in this post.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#best-resources-for-additional-help"&gt;
  &lt;/a&gt;
  Best Resources for Additional Help
&lt;/h3&gt;

&lt;p&gt;If you need additional help you can utilize the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/intro.html"&gt;The New TypeScript Handbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://discord.com/invite/typescript"&gt;TypeScript Community Discord&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;The comments on each &lt;a href="https://dev.to/typescript"&gt;Dev.to&lt;/a&gt; post!&lt;/li&gt;
&lt;li&gt;Our previous &lt;a href="https://www.typescriptlang.org/play/#gist/303ebff59a6fc37f88c86e86dbdeb0e8-0"&gt;&lt;code&gt;Type | Treat&lt;/code&gt; 2020 challenges&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy Typing :)&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>challenge</category>
    </item>
    <item>
      <title>How I started my Opensource journey with just 1 line of code!</title>
      <author>Saharsh Laud</author>
      <pubDate>Tue, 26 Oct 2021 19:00:18 +0000</pubDate>
      <link>https://dev.to/saharshlaud/how-i-started-my-opensource-journey-with-just-1-line-of-code-285k</link>
      <guid>https://dev.to/saharshlaud/how-i-started-my-opensource-journey-with-just-1-line-of-code-285k</guid>
      <description>&lt;p&gt;With the changing times, the recruitment process in many companies has evolved significantly as organizations are now more interested in skills in an individual rather than their educational qualifications. Many companies have even removed the criteria for college degrees in their hiring process and only look at your skills and expertise. &lt;/p&gt;

&lt;p&gt;Now you might think, how can I show my skills and expertise to a recruiter? The most straightforward and powerful answer is Open-source and Github. Contributing to Open-source projects is considered one of the most effective ways to demonstrate your expertise and your ability to take the initiative on your own and collaborate with a community. &lt;/p&gt;

&lt;p&gt;GitHub is the most popular platform for Open-source collaborations, but it might be slightly challenging to get started with Open-source contributions as a beginner. &lt;br&gt;
Worry no more since I have brought the best beginner-friendly GitHub repository to give you the required boost in your Open-source journey.&lt;/p&gt;

&lt;p&gt;So let us get started with the entire process that I've myself used to begin my opensource collaboration journey.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-get-familiar"&gt;
  &lt;/a&gt;
  Let's get familiarüòé
&lt;/h2&gt;

&lt;p&gt;Before diving into our open-source contribution on GitHub, let us understand some of the important terms we will come across while contributing.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Repository -&lt;/strong&gt; It is a storage space or a directory where your projects can reside. You can keep all your code files, text files, image files, etc., inside a repository.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Fork -&lt;/strong&gt; It is a copy of the GitHub repository under your account that you can manage. This way, you can make changes to a project without affecting the original repository and even fetch updates from or submit changes to the original repository with pull requests.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Clone -&lt;/strong&gt; It is a copy of the repository on &lt;a href="http://github.com/"&gt;GitHub.com&lt;/a&gt; on your local system. Cloning pulls down a full copy of all the online repository data at that point in time, including all versions of every file and folder in the repo.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Branch -&lt;/strong&gt; It is a new version of the repository that diverges from the main working project and can be used to create an isolated development space without affecting other branches. You can merge a branch into another branch using a pull request.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Commit -&lt;/strong&gt; It is similar to the save command except that every time you save, it creates a unique ID (‚ÄúSHA‚Äù or ‚Äúhash‚Äù) that allows you to keep a record of what changes were made, when they were made and by whom.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Push -&lt;/strong&gt; It is the process of uploading or committing changes from your local clone repository to the remote repository (i.e. the online repo). Pushing sends the recent commit history from your local repository up to GitHub.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Pull Request -&lt;/strong&gt; It is a way to notify the maintainers about the changes you have pushed in your branch and ask them to review these changes and merge them with the main repository.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisitesüßê
&lt;/h2&gt;

&lt;p&gt;Before we begin the process for our open-source contribution, let me quickly tell you some prerequisites for this tutorial:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Git&lt;/strong&gt; - Git backs all GitHub repositories. Since we will be performing all changes on a local copy and then pushing these to the remote repository, we will definitely require Git installed on our system to clone, create a branch and push changes to the remote branch. You can download Git for your system from this link: &lt;a href="https://git-scm.com/"&gt;Git Download&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;VS Code&lt;/strong&gt; - VS Code is an Integrated Development Environment that will help us to perform actions such as clone, branching, push, publish, etc., with minimal effort. We will also make the required code changes using VS Code. You can download VS Code for your system from this link: &lt;a href="https://code.visualstudio.com/download"&gt;VS Code Download&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#time-to-contribute"&gt;
  &lt;/a&gt;
  Time to Contributeü§©üöÄ
&lt;/h2&gt;

&lt;p&gt;Finally, we can get started with our contribution. The project that we will be contributing to is called &lt;a href="https://github.com/firstcontributions"&gt;&lt;strong&gt;First Contributions&lt;/strong&gt;&lt;/a&gt;, which is primarily meant for beginners to open-source and aims at providing them with a simplified guide to make their first contribution. The repository has more than &lt;strong&gt;21k&lt;/strong&gt; stars and more than &lt;strong&gt;40k&lt;/strong&gt; forks so far, showing how popular it is among beginners in the open-source community.&lt;/p&gt;

&lt;p&gt;Let us begin with the steps to make our first contribution to open-source.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step1-forking-the-repository"&gt;
  &lt;/a&gt;
  Step-1 : Forking the Repository
&lt;/h3&gt;

&lt;p&gt;The first step to get started with any open-source contribution through GitHub us forking the main project repository. Go to the &lt;a href="https://github.com/firstcontributions/first-contributions"&gt;first-contributions&lt;/a&gt; GitHub repository and fork it by clicking on the fork icon on the top right corner. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yK11tnHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl8zpgnne6j4vkx88lwj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yK11tnHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl8zpgnne6j4vkx88lwj.jpg" alt="Forking Repository"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is how your forked repository will look like: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rw27VAyO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9zkt3gc680zugjo8dt8d.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rw27VAyO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9zkt3gc680zugjo8dt8d.jpg" alt="Forked Repository"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step2-cloning-to-local-system"&gt;
  &lt;/a&gt;
  Step-2 : Cloning to local system
&lt;/h3&gt;

&lt;p&gt;The next step is cloning the forked repository to your local system so that you can easily make the required changes. &lt;br&gt;
For this, head over to your forked repository, click on the &lt;strong&gt;Code&lt;/strong&gt; button and copy the URL shown. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z-mxZMcr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nmaq8kis3j0qyxcwevqk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z-mxZMcr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nmaq8kis3j0qyxcwevqk.jpg" alt="Cloning Repository"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;CAREFUL:&lt;/strong&gt; While cloning the repository make sure that you clone the repo you &lt;strong&gt;forked &lt;em&gt;from&lt;/em&gt;&lt;/strong&gt; rather than cloning your repo. Check your browser's address bar and make sure you are cloning your repo and not the original repository.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next we'll head over to Visual Studio Code to clone the repository. Open the Command Palette by pressing the shortcut key &lt;strong&gt;F1&lt;/strong&gt; and then type in &lt;code&gt;git clone&lt;/code&gt;, only  &lt;code&gt;git&lt;/code&gt;  or  &lt;code&gt;clone&lt;/code&gt;  (it works like a search). Select the Entry  &lt;code&gt;Git: Clone&lt;/code&gt;  and press  &lt;code&gt;Enter&lt;/code&gt;.&lt;br&gt;
If you have properly installed Git on your system you will automatically see the &lt;code&gt;Git: Clone&lt;/code&gt; option.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EIc-OJfX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4gwtkgc92fjehqo0uzmw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EIc-OJfX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4gwtkgc92fjehqo0uzmw.jpg" alt="Git Clone"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Paste the URL of the forked repository that you copied earlier and press Enter. &lt;br&gt;
VS Code asks you to select the location at which you want to store your cloned repository. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ft7J64go--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w39ch31rse4umdws19nl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ft7J64go--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w39ch31rse4umdws19nl.jpg" alt="Cloning to local system"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select the location and the cloning process will start automatically. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Th44b6so--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogbitflvyp73998a6q8e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Th44b6so--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogbitflvyp73998a6q8e.jpg" alt="Cloning"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the successful clone, VS Code asks you to Open the cloned repository in the same window or a new window. Select any option to see the contents of your cloned repository. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step3-creating-a-branch"&gt;
  &lt;/a&gt;
  Step-3 : Creating a Branch
&lt;/h3&gt;

&lt;p&gt;Now that you've cloned your repository, it's always a good habit to create a branch when you're doing development work that is somewhat experimental in nature. This way you can work on a feature or an issue and merge and see if many features work well together or not.&lt;br&gt;
Open up the command palette again by pressing &lt;code&gt;F1&lt;/code&gt;. Type in &lt;code&gt;branch&lt;/code&gt; and select the &lt;code&gt;create branch&lt;/code&gt; command from there.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lO1dkV08--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckurxztaleclih63ea6p.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lO1dkV08--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckurxztaleclih63ea6p.jpg" alt="Branch option"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next dialog box asks for your branch name. Provide a proper branch name and press Enter.  The branch will be created with the given name and it is also already checked out.  &lt;/p&gt;

&lt;p&gt;The git checkout command is used to switch between branches in a repository. It &lt;strong&gt;checks the branches and updates the files in the working directory&lt;/strong&gt; to match the version already available in that branch, and it forwards the updates to Git to save all new commit in that branch.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nIO8Wm1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/76onn09kcdkh9aogfzf4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nIO8Wm1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/76onn09kcdkh9aogfzf4.jpg" alt="Branch Created"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step4-making-code-changes"&gt;
  &lt;/a&gt;
  Step-4 : Making code changes
&lt;/h3&gt;

&lt;p&gt;Now its time to add your name as a Contributor to this repository. Open the &lt;code&gt;Contributors.md&lt;/code&gt; file and add your name anywhere in the file. The code in this file is in Markdown language which is a lightweight markup language for creating formatted text using a plain-text editor.&lt;br&gt;
You can also copy-paste anyone of the existing entries and make changes to it. Add your name and GitHub profile link anywhere in the file and save it. You can see that as soon as you save, an icon appears in the source control tab in the left panel indicating that there are changes made to the code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C0Ivqadm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hb97t06usjpoidenvfgy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C0Ivqadm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hb97t06usjpoidenvfgy.jpg" alt="Changing Contributor file"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step5-commit-amp-push-changes-to-github"&gt;
  &lt;/a&gt;
  Step-5 : Commit &amp;amp; Push changes to GitHub
&lt;/h3&gt;

&lt;p&gt;On the left panel click on the Source Control icon. You can see all the files that have been altered after the last commit. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4D9xsPS_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/feusvfgd4tc7jror1g6q.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4D9xsPS_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/feusvfgd4tc7jror1g6q.jpg" alt="Source Control"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on the plus (+) icon to stage the changes. The staging area is a file, in your Git directory, that stores information about what will go into your next commit.&lt;/p&gt;

&lt;p&gt;Type a commit message in the top line and click on the check mark icon to commit changes to your local repository. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z80RxtE7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9yjtvo981nwdwfccnxv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z80RxtE7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9yjtvo981nwdwfccnxv.jpg" alt="Commit changes"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After committing the changes, you can see an option for &lt;strong&gt;Publish Changes&lt;/strong&gt; to push your changes back to GitHub. Click on this option to publish your changes back to GitHub. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--afg_eO4C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hdv26lymii125npumkq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--afg_eO4C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hdv26lymii125npumkq.jpg" alt="Publish Changes"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Uh-Oh!&lt;/strong&gt; Something's not right. You must have got an error message as shown below. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aHjsY07---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oo0eser5vfj1rrna8zdu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aHjsY07---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oo0eser5vfj1rrna8zdu.jpg" alt="Git Error"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It seems that you need to tell your identity to Git in order to proceed further. Let's rectify this issue. Head over to the terminal by pressing shortcut key &lt;strong&gt;Ctrl+Shift+`&lt;/strong&gt;.&lt;br&gt;
Then run the following commands to set the global username and global email.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Set your username:  
    git config --global user.name "FIRST_NAME LAST_NAME"
// Set your email address:  
    git config --global user.email "MY_NAME@example.com"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lGJN6CcY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7helzoxevb3ccqb56qq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lGJN6CcY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7helzoxevb3ccqb56qq.jpg" alt="Git Config"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: If you don't get any such error, there is nothing to worry. It simply means that your global username and email are already registered with Git.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now that we have set our global username and email, head back to the &lt;strong&gt;Publish Changes&lt;/strong&gt; option in the Source Control Panel. A dialog box opens that asks you to login to your GitHub account. Login using your GitHub credentials and if all goes well, your commits will be pushed from your local repository to your GitHub repository online.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aXOdheLw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/suxukkut6g3yrv2n07t9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aXOdheLw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/suxukkut6g3yrv2n07t9.png" alt="GitHub Login"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step6-create-a-pull-request"&gt;
  &lt;/a&gt;
  Step-6 : Create a Pull Request
&lt;/h3&gt;

&lt;p&gt;If you have followed all the above steps correctly, then you should see a message in your forked repository that shows your new branch.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0L449aYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71bg4bel8imhhblassiq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0L449aYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71bg4bel8imhhblassiq.jpg" alt="Branch Pushed to GitHub"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point the changes that you have made reside on your side of the repository. Now we will create a pull request to submit a request to the administrator of the top-level repo to merge your change into the main branch.&lt;/p&gt;

&lt;p&gt;Click on the &lt;strong&gt;Compare &amp;amp; pull request&lt;/strong&gt; option as shown in the image above. This opens up the Pull Request page where you will edit your Pull Request. &lt;/p&gt;

&lt;p&gt;Here you can also see if your branch can be merged with the main branch or not. You need to provide a title for your pull request and you can also provide some extra comments for the maintainer of the repository. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i3Yi9JEX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m4g10uo4tdgtw662rs02.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3Yi9JEX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m4g10uo4tdgtw662rs02.jpg" alt="Open Pull Request"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After this your Pull Request will be assigned a number and marked as Open until the maintainer reviews it and merges your code. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u5VceGhp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/res83kezn0ew95kuqtd3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u5VceGhp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/res83kezn0ew95kuqtd3.jpg" alt="Open Pull Request"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The maintainer might ask you to make some changes or if everything is fine, your pull request will be successfully accepted and your code changes will be merged into the master branch of this project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lVD6mKwp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tphpkb5bf7no7z2cgnud.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lVD6mKwp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tphpkb5bf7no7z2cgnud.jpg" alt="Pull Request Accepted"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that your code changes have been merged into the master branch, you can see your name in the Contributor's list. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--801wCLI5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f004bkm1bdq0iz21fv3y.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--801wCLI5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f004bkm1bdq0iz21fv3y.jpg" alt="Final Name Added"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You have now successfully made your first open-source contribution with just a single line of code!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#made-my-first-contribution-now-what"&gt;
  &lt;/a&gt;
  Made my first contribution now what?
&lt;/h2&gt;

&lt;p&gt;Congratulations! You‚Äôve successfully made your first open-source contribution and completed the standard &lt;em&gt;fork -&amp;gt; clone -&amp;gt; edit -&amp;gt; PR&lt;/em&gt; workflow that you‚Äôll often encounter as a contributor!&lt;/p&gt;

&lt;p&gt;Don‚Äôt let this momentum die! Try to find more repositories based on your skillset and contribute to these projects. The best thing is that you don‚Äôt need to be an expert to contribute to open-source. You can even visit the &lt;a href="https://firstcontributions.github.io/"&gt;First-Contributions website&lt;/a&gt; to see some of the amazing open-source projects you can contribute to.&lt;/p&gt;

&lt;p&gt;I have also published an article that focuses on how you can become an active open-source contributor which you can access &lt;a href="https://dev.to/aviyel/open-source-community-how-to-become-an-active-contributor-f3d"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hope you enjoyed my blog. Thanks for reading and keep contributing!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Feel free to comment, share and reach out to me on &lt;a href="https://dev.to/saharshlaud"&gt;Dev.to&lt;/a&gt; , &lt;a href="https://twitter.com/saharshlaud"&gt;Twitter&lt;/a&gt; , or &lt;a href="https://in.linkedin.com/in/saharsh-laud"&gt;LinkedIn&lt;/a&gt; .&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>opensource</category>
      <category>beginners</category>
      <category>github</category>
      <category>hacktoberfest</category>
    </item>
  </channel>
</rss>
