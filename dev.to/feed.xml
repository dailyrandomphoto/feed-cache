<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to Create Responsive Clipboard Landing Page with HTML CSS | Frontend Mentor</title>
      <author>Sadee</author>
      <pubDate>Tue, 16 Nov 2021 13:00:44 +0000</pubDate>
      <link>https://dev.to/codewithsadee/how-to-create-responsive-clipboard-landing-page-with-html-css-frontend-mentor-4eoj</link>
      <guid>https://dev.to/codewithsadee/how-to-create-responsive-clipboard-landing-page-with-html-css-frontend-mentor-4eoj</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ATRQj60Q3S0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;How to create Responsive clipboard landing page with html css&lt;br&gt;
Frontend mentor&lt;/p&gt;

&lt;p&gt;In this tutorial, &lt;br&gt;
I will show you how to build a Complete Responsive Landing Page Website using HTML CSS.&lt;/p&gt;




&lt;p&gt;HI üëã&lt;br&gt;
I'm Sadee (webdev)&lt;br&gt;
In this channel I make videos about Complete Responsive website.&lt;br&gt;
You can checkout my channel üëá&lt;/p&gt;

&lt;p&gt;üì∫ My Channel : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
üîî Subscribe : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g?sub_confirmation=1"&gt;subscribe now&lt;/a&gt;&lt;br&gt;
üïê New videos Every Friday &amp;amp; Tuesday&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#recommended-videos"&gt;
  &lt;/a&gt;
  üìπ Recommended Videos
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://youtu.be/TTrYjLOJeKs"&gt;How to use ionicon&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#essential-links"&gt;
  &lt;/a&gt;
  üîó Essential links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://drive.google.com/file/d/1Q2hq3vhCyikGVPVnPOpe-MyWb7ulpo6u/view?usp=sharing"&gt;Images &amp;amp; Text&lt;/a&gt;&lt;br&gt;
&lt;a href="https://fonts.google.com/specimen/Bai+Jamjuree?query=bai+jam"&gt;Font - Bai Jamjuree&lt;/a&gt;&lt;br&gt;
&lt;a href="https://ionic.io/ionicons"&gt;Ionicon&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.patreon.com/posts/source-code-page-58766992?utm_medium=clipboard_copy&amp;amp;utm_source=copy_to_clipboard&amp;amp;utm_campaign=postshare"&gt;Source Code&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#timestamp"&gt;
  &lt;/a&gt;
  ‚è±Ô∏è Timestamp
&lt;/h2&gt;

&lt;p&gt;0:00 - Demo&lt;br&gt;
1:29 - File structure&lt;br&gt;
1:43 - Header section, Css Variables &amp;amp; Reset&lt;br&gt;
11:10 - Main section structure &amp;amp; style&lt;br&gt;
23:05 - Footer section structure &amp;amp; style&lt;br&gt;
28:20 - Media queries&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#others-videos"&gt;
  &lt;/a&gt;
  üìπ Others Videos
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://youtube.com/playlist?list=PLasZMtSCguZbYYb7uzDMAC0rg49A8XOsS"&gt;Personal Portfolio Website&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/OpbbPLPqSDc"&gt;Toggle Button with 3d Effect&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/0MDBVR93g7E"&gt;Twitter Sidebar Clone&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/g9VdvKx8fuM"&gt;Awesome Card Design for Website&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/mUBW8i2kht0"&gt;Restaurant Header Design&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#like-follow-amp-subscribe-me"&gt;
  &lt;/a&gt;
  üë§ Like - Follow &amp;amp; Subscribe Me
&lt;/h2&gt;

&lt;p&gt;Twitter : &lt;a href="https://twitter.com/codewithsadee"&gt;https://twitter.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Github : &lt;a href="https://github.com/codewithsadee"&gt;https://github.com/codewithsadee&lt;/a&gt;&lt;br&gt;
YouTube : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
Buy Me A Coffee : &lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;https://www.buymeacoffee.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Patreon : &lt;a href="https://www.patreon.com/codewithsadee"&gt;https://www.patreon.com/codewithsadee&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qhS87mRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kn6vwn4mulhsx6o69is.png" alt="Buy Me A Coffee" width="225" height="51"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to Build a Forum App with NextJs and Strapi CMS</title>
      <author>Shada </author>
      <pubDate>Tue, 16 Nov 2021 12:49:48 +0000</pubDate>
      <link>https://dev.to/strapi/how-to-build-a-forum-app-with-nextjs-and-strapi-cms-3an9</link>
      <guid>https://dev.to/strapi/how-to-build-a-forum-app-with-nextjs-and-strapi-cms-3an9</guid>
      <description>&lt;p&gt;While programming, programmers encounter various challenges, which make them solicit help with solving these problems. Forums provide a tech community of enthusiasts who can assist with these problems. We will be building a forum site with &lt;a href="https://github.com/strapi/community-content/issues/nextjs.org"&gt;NextJs&lt;/a&gt; on the Front-end and &lt;a href="https://github.com/strapi/community-content/issues/strapi.io"&gt;Strapi&lt;/a&gt; for content management&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#goals"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Goals&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;This tutorial will cover building a forum website and providing user authentication and authorization on the site.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Prerequisite&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;To fully grasp this tutorial, you need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Node.js installed&lt;/li&gt;
&lt;li&gt;Knowledge of NextJs&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-strapi"&gt;
  &lt;/a&gt;
  What is Strapi?
&lt;/h2&gt;

&lt;p&gt;Strapi is an open-source headless CMS built on Node.js. Strapi enables developers to be able to create and manage the contents of their applications. Strapi provides users with an admin panel that is used to manage the user's content. Content can be created as in a traditional database; with tables. What's more? Strapi provides functionality to integrate APIs and allows collaborative access to content to enable multiple users to access and manage stored data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#strapi-setup"&gt;
  &lt;/a&gt;
  Strapi setup
&lt;/h2&gt;

&lt;p&gt;To set up our Strapi back-end, we will first create a directory for our project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    mkdir forumapp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This creates a folder for our project &lt;code&gt;strapi-forum&lt;/code&gt;. Next, we move into this folder:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    cd forumapp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we install Strapi:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    npm create strapi-app forum-backend &lt;span class="nt"&gt;--quickstart&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The command above sets up Strapi for our app with all dependencies required. Here &lt;code&gt;forum-backend&lt;/code&gt; is the name of our project folder. The &lt;code&gt;--quickstart&lt;/code&gt; option sets up Strapi with a &lt;code&gt;sqlite&lt;/code&gt; database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r_HHIViL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635424583375_installation%2Breolacement.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r_HHIViL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635424583375_installation%2Breolacement.jpg" alt="" width="880" height="352"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Above, after the dependencies have been installed, it proceeds to set up the admin UI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fi2PywEZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635424643351_runs%2Bstrapi%2Bdevelop.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fi2PywEZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635424643351_runs%2Bstrapi%2Bdevelop.jpg" alt="" width="880" height="278"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the process is complete, it runs &lt;code&gt;strapi develop&lt;/code&gt; and opens up a URL in your browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CEVYDpP_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635424695244_runs%2Blocalhost.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CEVYDpP_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635424695244_runs%2Blocalhost.jpg" alt="" width="880" height="435"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, it opens up our administrator panel on localhost. If you open up your browser to the URL, you will get a form.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qV-Vryok--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635424783987_opens%2Blocalhost.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qV-Vryok--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635424783987_opens%2Blocalhost.jpg" alt="" width="880" height="584"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fill out your details in the form and click on "Let's start." It will sign you in and navigate you to the dashboard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tTMjx8lo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635424842475_dashboard.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tTMjx8lo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635424842475_dashboard.jpg" alt="" width="880" height="347"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#collection-and-field-setup"&gt;
  &lt;/a&gt;
  Collection and Field Setup
&lt;/h2&gt;

&lt;p&gt;This section will create our CollectionCollection to contain the post and comments for our forum application.&lt;/p&gt;

&lt;p&gt;Click on the "Create your first content-type" button. It opens up a page to create our content. There is a modal where you can enter the name of your CollectionCollection.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ey4q_cs---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635427422972_popup%2B.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ey4q_cs---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635427422972_popup%2B.jpg" alt="" width="880" height="404"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, click on "Continue". Another modal appears where you set the field for your collection type. Click on "Text," then add the text fields.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M6T4PDcD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635427923434_title.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M6T4PDcD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635427923434_title.jpg" alt="" width="880" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add "Title" in the text field and click on "Add another field". Repeat the process for two additional fields, but we will use "Rich text" instead this time. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fEzX9T8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635428508532_fields.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fEzX9T8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635428508532_fields.jpg" alt="" width="840" height="505"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We now have three fields: the title, answers, and questions for our forum posts. Click on the "Save" button. Now, in the Collection type sidebar, we see the "Strapi forums" collection. Click on it, then click on the "Add new Strapi Forums" button:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r0i19A26--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635430141823_strapi%2Bforums.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r0i19A26--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635430141823_strapi%2Bforums.jpg" alt="" width="880" height="340"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You'll get a page where you can create an entry for the Forum app. Enter a title in the Title field, answer any question, click "Save" then "Publish".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vxdkEdpz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635431104681_added%2Ba%2Bforum.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vxdkEdpz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635431104681_added%2Ba%2Bforum.jpg" alt="" width="880" height="266"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The new entry will be added to the "Strapi Forums" collection.&lt;/p&gt;

&lt;p&gt;To enable our app to allow access to content without authorization, you must go to &lt;strong&gt;Settings&lt;/strong&gt; then &lt;strong&gt;Roles.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ko_z7i8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635431510840_roles.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ko_z7i8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635431510840_roles.jpg" alt="" width="880" height="385"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on ‚ÄúPublic‚Äù.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5lWrsYyy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635431800321_permissions.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5lWrsYyy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635431800321_permissions.jpg" alt="" width="880" height="402"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Click on Select all&lt;/strong&gt; then &lt;strong&gt;Save.&lt;/strong&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fetching-the-collection"&gt;
  &lt;/a&gt;
  Fetching the Collection
&lt;/h2&gt;

&lt;p&gt;You can fetch the data from the CollectionCollection with an API tester. Enter the URL: &lt;a href="http://localhost:1337/strapi-forums"&gt;http://localhost:1337/strapi-forums&lt;/a&gt;. Send a request, and you'll get the response from Strapi:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CSj_lps8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635432339514_api%2Bresponse.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CSj_lps8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635432339514_api%2Bresponse.jpg" alt="" width="880" height="413"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-our-frontend"&gt;
  &lt;/a&gt;
  Building our front-end
&lt;/h2&gt;

&lt;p&gt;We will build the front-end of our forum application with &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt;. Next.js is an open-source framework built on &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt; to allow React applications to be rendered on the server-side.&lt;/p&gt;

&lt;p&gt;To install Next.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    npx create-next-app forum
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command installs the Next.js framework in a project folder forum for us. Our finished app will have two pages: one to display the forum and the other to post new questions. The images below show what our app will look like:&lt;/p&gt;

&lt;p&gt;The display forum page:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1Mc4xlnJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635486372366_display%2Bforum.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Mc4xlnJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635486372366_display%2Bforum.jpg" alt="" width="880" height="357"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Post a new question page:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q5fjbvbn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635486521676_Upload%2Bpage.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q5fjbvbn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635486521676_Upload%2Bpage.jpg" alt="" width="880" height="401"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the &lt;code&gt;forum&lt;/code&gt; project folder, our app structure will look like this:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;‚î£ üìÇpages
 ‚îÉ ‚î£ üìÇapi
 ‚îÉ ‚îÉ ‚îó üìúhello.js
 ‚îÉ ‚î£ üìÇComponents
 ‚îÉ ‚îÉ ‚î£ üìúDisplayforum.js
 ‚îÉ ‚îÉ ‚îó üìúUploadforum.js
 ‚îÉ ‚î£ üìúindex.js
 ‚îÉ ‚î£ üìúupload.js
 ‚îÉ ‚îó üìú_app.js
 ‚î£ üìÇpublic
 ‚îÉ ‚î£ üìúfavicon.ico
 ‚îÉ ‚îó üìúvercel.svg
 ‚î£ üìÇstyles
 ‚îÉ ‚î£ üìúglobals.css
 ‚îÉ ‚îó üìúHome.module.css
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Here, our &lt;code&gt;index.js&lt;/code&gt; file is our display form page, and it makes use of the component &lt;code&gt;Displayforum.js&lt;/code&gt; while the &lt;code&gt;upload.js&lt;/code&gt; file serves as our page for posting new questions. It contains the component &lt;code&gt;Uploadforum.js&lt;/code&gt;. All our styles are in &lt;code&gt;Home.module.css&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;Index.js&lt;/code&gt; we have the following codes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import styles from "../styles/Home.module.css";
    import Displayforum from "./Components/Displayforum";
    export default function Home() {
      return (
        &amp;lt;div className={styles.container}&amp;gt;
          &amp;lt;Displayforum /&amp;gt;
        &amp;lt;/div&amp;gt;
      );
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we have added the &lt;code&gt;Displayforum&lt;/code&gt; component to our page. In &lt;code&gt;Displayforum.js&lt;/code&gt;, we have:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import React, { useState } from "react";
    import style from "../../styles/Home.module.css";
    import Link from "next/link";
    function Displayforum() {
      const [show, setShow] = useState(false);
      return (
        &amp;lt;div&amp;gt;
          &amp;lt;div className={style.topcont}&amp;gt;
            &amp;lt;h1 className={style.heading}&amp;gt;Display forum&amp;lt;/h1&amp;gt;
            &amp;lt;div&amp;gt;
              &amp;lt;Link href="/upload"&amp;gt;
                &amp;lt;button&amp;gt;Ask a question&amp;lt;/button&amp;gt;
              &amp;lt;/Link&amp;gt;
              &amp;lt;button&amp;gt;Login&amp;lt;/button&amp;gt;
            &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
          &amp;lt;h2 className={style.subheading}&amp;gt;Questions&amp;lt;/h2&amp;gt;
          &amp;lt;div className={style.userinfo}&amp;gt;
            &amp;lt;p&amp;gt;Posted By: Victory Tuduo&amp;lt;/p&amp;gt;
          &amp;lt;/div&amp;gt;
          &amp;lt;div className={style.questioncont}&amp;gt;
            &amp;lt;p className={style.question}&amp;gt;Description of the Question&amp;lt;/p&amp;gt;
          &amp;lt;/div&amp;gt;
          &amp;lt;div className={style.answercont}&amp;gt;
            &amp;lt;h2 className={style.subheading}&amp;gt;Answers&amp;lt;/h2&amp;gt;
            &amp;lt;div className={style.inputanswer}&amp;gt;
              &amp;lt;form&amp;gt;
                &amp;lt;textarea type="text" placeholder="Enter your answer" rows="5" /&amp;gt;
                &amp;lt;button&amp;gt;Post&amp;lt;/button&amp;gt;
              &amp;lt;/form&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;button className={style.showanswer} onClick={() =&amp;gt; setShow(!show)}&amp;gt;
              {show ? "Hide Answers" : "Show Answers"}
            &amp;lt;/button&amp;gt;
            {show ? (
              &amp;lt;div className={style.answers}&amp;gt;
                &amp;lt;div className={style.eachanswer}&amp;gt;
                  &amp;lt;p className={style.username}&amp;gt;Miracle&amp;lt;/p&amp;gt;
                  &amp;lt;p className={style.answertext}&amp;gt;Try doing it Like this&amp;lt;/p&amp;gt;
                &amp;lt;/div&amp;gt;
              &amp;lt;/div&amp;gt;
            ) : null}
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      );
    }
    export default Displayforum;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This component handles the layout of our display forum page. We also have a button here that directs the user to the page to upload new questions.&lt;/p&gt;

&lt;p&gt;Meanwhile, in &lt;code&gt;upload.js&lt;/code&gt; we have the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import React from "react";
    import Uploadforum from "./Components/Uploadforum";
    function upload() {
      return (
        &amp;lt;div&amp;gt;
          &amp;lt;Uploadforum /&amp;gt;
        &amp;lt;/div&amp;gt;
      );
    }
    export default upload;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we simply added an import for the &lt;code&gt;Uploadforum&lt;/code&gt; component into our page. In &lt;code&gt;Uploadforum.js&lt;/code&gt; file we have a simple form to create new questions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import React from "react";
    import style from "../../styles/Home.module.css";
    import Link from "next/Link";
    function Uploadforum() {
      return (
        &amp;lt;div className={style.uploadpage}&amp;gt;
          &amp;lt;div className={style.topcont}&amp;gt;
            &amp;lt;h1&amp;gt;Ask a question&amp;lt;/h1&amp;gt;
            &amp;lt;Link href="/"&amp;gt;
              &amp;lt;button&amp;gt;Forum&amp;lt;/button&amp;gt;
            &amp;lt;/Link&amp;gt;
          &amp;lt;/div&amp;gt;
          &amp;lt;div className={style.formcont}&amp;gt;
            &amp;lt;form className={style.uploadform}&amp;gt;
              &amp;lt;input type="text" placeholder="Enter your title" maxLength="74" /&amp;gt;
              &amp;lt;textarea type="text" placeholder="Enter your description" rows="8" /&amp;gt;
              &amp;lt;button&amp;gt;Submit Question&amp;lt;/button&amp;gt;
            &amp;lt;/form&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      );
    }
    export default Uploadforum;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, we have the following styles in &lt;code&gt;Home.module.css&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    .container {
      min-height: 100vh;
      padding: 0 0.5rem;
      height: 100vh;
      font-family: monospace;
    }
    /* display forum page */
    .topcont {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 5px 8px;
    }
    .topcont button,
    .inputanswer button,
    .formcont button,
    .showanswer {
      border: none;
      color: #fff;
      background: dodgerblue;
      border-radius: 8px;
      padding: 10px 15px;
      outline: none;
      margin: 8px;
    }
    .topcont button:hover {
      cursor: pointer;
      transform: scale(1.2);
    }
    .heading {
      font-weight: bold;
    }
    .subheading {
      font-weight: 500;
      text-transform: uppercase;
    }
    .userinfo {
      font-size: 18px;
      font-weight: 600;
    }
    .questioncont {
      min-height: 300px;
      padding: 15px 14px;
      box-shadow: 12px 12px 36px rgba(0, 0, 0, 0.12);
    }
    .answercont {
      min-height: 300px;
      padding: 5px 3px 5px 15px;
    }
    .answers {
      height: 300px;
      overflow-x: scroll;
    }
    .inputanswer {
      margin-bottom: 8px;
    }
    .inputanswer textarea {
      width: 100%;
      resize: none;
      padding: 5px 8px;
    }
    .showanswer {
      border: 1px solid dodgerblue;
      background: #fff;
      color: dodgerblue;
      transition: 0.4s ease-in-out;
    }
    .showanswer:hover {
      background: dodgerblue;
      color: #fff;
    }
    .eachanswer {
      border-radius: 15px;
      background: #e7e7e7;
      padding: 8px 15px;
      margin-bottom: 10px;
    }
    .username {
      font-weight: bold;
      text-transform: uppercase;
    }
    .answertext {
      font-family: Montserrat;
      font-size: 14px;
      font-weight: 500;
    }
    /* upload a question page */
    .uploadpage {
      min-height: 100vh;
    }
    .formcont {
      min-width: 100vw;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .uploadform {
      display: flex;
      flex-direction: column;
      min-width: 500px;
      padding-top: 10px;
    }
    .uploadform input,
    .uploadform textarea {
      resize: none;
      width: 100%;
      margin: 8px;
      padding: 5px;
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All of this makes up the layout of our pages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-data-from-strapi"&gt;
  &lt;/a&gt;
  Getting data from Strapi:
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-our-fetch-request"&gt;
  &lt;/a&gt;
  Setting up our Fetch Request
&lt;/h2&gt;

&lt;p&gt;In this section, we will fetch our data from Strapi and display it in our app. We will be using &lt;a href="https://axios-http.com/docs/intro"&gt;Axios&lt;/a&gt; to perform our fetch operations.&lt;/p&gt;

&lt;p&gt;We will install this via CLI:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    npm &lt;span class="nb"&gt;install &lt;/span&gt;axios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a file &lt;code&gt;index.js&lt;/code&gt; in the API folder. Here, we will set up our fetch request:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import axios from "axios";
    const url = "http://localhost:1337/strapi-forums";
    export const readForum = () =&amp;gt; axios.get(url);
    export const createQuestion = (newQuestion) =&amp;gt; axios.post(url, newQuestion);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above, we added import for &lt;code&gt;axios&lt;/code&gt;, the URL to fetch our data, and exported functions to read and create data from our forum.&lt;/p&gt;

&lt;p&gt;We‚Äôll import these functions into our app in our &lt;code&gt;index.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import { readForum, createQuestion } from "./api";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#fetching-data-from-strapi"&gt;
  &lt;/a&gt;
  Fetching Data from Strapi
&lt;/h2&gt;

&lt;p&gt;We will fetch the data from Strapi in our &lt;code&gt;index.js&lt;/code&gt;  file and pass it to &lt;code&gt;Displayforum.js&lt;/code&gt; component to display it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import { react, useState, useEffect } from "react";
    ...
    const [question, setQuestions] = useState({});
      const [response, setResponse] = useState([]);
      useEffect(() =&amp;gt; {
        const fetchData = async () =&amp;gt; {
          const result = await readForum();
          setResponse(result.data);
        };
        fetchData();
      }, []);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we fetched our data from Strapi and assigned it to &lt;code&gt;response&lt;/code&gt; with the React &lt;code&gt;useState&lt;/code&gt; hook. We have a &lt;code&gt;useEffect&lt;/code&gt; function that makes the request when our component mounts.&lt;/p&gt;

&lt;p&gt;Now, we pass this &lt;code&gt;response&lt;/code&gt; down to our &lt;code&gt;Displayforum&lt;/code&gt; component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;Displayforum response={response} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#displaying-data-from-strap"&gt;
  &lt;/a&gt;
  Displaying Data from Strap
&lt;/h2&gt;

&lt;p&gt;To display our data in our &lt;code&gt;Displayforum.js&lt;/code&gt; file, we will map our responses and render our components. Before we do this, we will create two additional text fields in our Strapi CollectionCollection: &lt;code&gt;Username&lt;/code&gt; and &lt;code&gt;Answername&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c2XelJbV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635543765246_created%2Bnew%2Bfields.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c2XelJbV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635543765246_created%2Bnew%2Bfields.jpg" alt="" width="792" height="468"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Back in our &lt;code&gt;Displayforum&lt;/code&gt; component we will proceed with displaying our data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    ...
    function Displayforum({ response }) {
    ...
      {response.map((response, index) =&amp;gt; (
      &amp;lt;div key={index}&amp;gt;
      &amp;lt;div className={style.userinfo}&amp;gt;
      ...
       &amp;lt;p className={style.answertext}&amp;gt;Try doing it Like this&amp;lt;/p&amp;gt;
              &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
          ) : null}
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
      ))}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we wrapped up our components to map through &lt;code&gt;response&lt;/code&gt; and display this component as many times as the number of responses. To display our Strapi data, we simply reference it. We can get our &lt;code&gt;Username&lt;/code&gt; with this code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    response.Username
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can now add this to our component and display it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;p&amp;gt;Posted By: {response.Username}&amp;lt;/p&amp;gt;
    ...
    &amp;lt;p className={style.question}&amp;gt;{response.Questions}&amp;lt;/p&amp;gt;
    ...
    &amp;lt;p className={style.username}&amp;gt;{response.Answername}&amp;lt;/p&amp;gt;
    &amp;lt;p className={style.answertext}&amp;gt;{response.Answers}&amp;lt;/p&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have successfully added the data from our CollectionCollection to our &lt;code&gt;front-end&lt;/code&gt; to view this in the browser. Run the following command in the CLI:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your browser, you will have an output similar to the image below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0X_EJPA4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635545169076_got%2Bdata%2Bfrom%2BStrapi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0X_EJPA4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635545169076_got%2Bdata%2Bfrom%2BStrapi.jpg" alt="" width="880" height="399"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After this, we will add functionality to add new questions to Strapi.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-data-to-strapi"&gt;
  &lt;/a&gt;
  Adding data to Strapi
&lt;/h2&gt;

&lt;p&gt;In our &lt;code&gt;Uploadforum.js&lt;/code&gt; file, we will add functionality to upload the contents of the form to Strapi. First, we will create two state variables to store the text from our &lt;code&gt;inputs&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import { React, useState } from "react";
    ...
    const [name, setName] = useState("");
    const [description, setDescription] = useState("");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we set these variables to the value of our form &lt;code&gt;input&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;input
                type="text"
                placeholder="Enter your title"
                maxLength="74"
                value={name}
                onChange={(e) =&amp;gt; setName(e.target.value)}
              /&amp;gt;
              &amp;lt;textarea
                type="text"
                placeholder="Enter your description"
                rows="8"
                value={description}
                onChange={(e) =&amp;gt; setDescription(e.target.value)}
              /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also we will a function to send these variables when we click our &lt;code&gt;button&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;button onClick={() =&amp;gt; sendData()}&amp;gt;Submit Question&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can create the &lt;code&gt;sendData&lt;/code&gt; function above our &lt;code&gt;return&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const sendData = () =&amp;gt; {
      };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For our create functionality we will import the &lt;code&gt;createQuestion&lt;/code&gt; function we defined in our &lt;code&gt;api&lt;/code&gt; folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import { createQuestion } from "../api";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we pass in our data to this function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const sendData = () =&amp;gt; {
        const newQuestion = {
          Title: name,
          Questions: description,
        };
        createQuestion(newQuestion);
      };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can now upload new questions to our Strapi &lt;code&gt;collection&lt;/code&gt;. We will add the &lt;code&gt;Username&lt;/code&gt; when we cover user authentication.&lt;/p&gt;

&lt;p&gt;Next up, we will add functionality to answer questions in our &lt;code&gt;Displayforum&lt;/code&gt; component.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-functionality-to-answer-questions"&gt;
  &lt;/a&gt;
  Adding Functionality to Answer Questions
&lt;/h2&gt;

&lt;p&gt;Since we set a text field for our answers in our &lt;code&gt;collection&lt;/code&gt;, it can only take in one value. To have multiple answers for a question, we will delete the Answers field and create another field for our Answers of type &lt;code&gt;json&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;With that done, here is an example of what a response from our API would look like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6ji2Py_9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635601446784_new%2Bresponse.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ji2Py_9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635601446784_new%2Bresponse.jpg" alt="" width="586" height="423"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To display our answers, we will map through &lt;code&gt;Answers&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     {response.Answers.map((answers, i) =&amp;gt; (
                      &amp;lt;div className={style.eachanswer} key={i}&amp;gt;
                        &amp;lt;p className={style.username}&amp;gt;{response.Answername}&amp;lt;/p&amp;gt;
                        &amp;lt;p className={style.answertext}&amp;gt;{answers}&amp;lt;/p&amp;gt;
                      &amp;lt;/div&amp;gt;
                    ))}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now in our browser, if we add more &lt;code&gt;answers&lt;/code&gt; to our JSON collection, we can see them displayed on our page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jt0sMsr0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635602131051_added%2Banswers%2Bjson.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jt0sMsr0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635602131051_added%2Banswers%2Bjson.jpg" alt="" width="880" height="335"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-new-answers"&gt;
  &lt;/a&gt;
  Adding New Answers
&lt;/h2&gt;

&lt;p&gt;We will repeat the same method as we did with our Upload &lt;code&gt;Question&lt;/code&gt; functionality for the add answer functionality, but with a minor difference. In your &lt;code&gt;Displayforum&lt;/code&gt; component, add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import axios from "axios";
    ...
    const [answer, setAnswer] = useState("")
    const [id, setId] = useState("");
    const [a, formerArray] = useState([]);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will store the input from the &lt;code&gt;textarea&lt;/code&gt; in &lt;code&gt;answer&lt;/code&gt;. We will use the &lt;code&gt;id&lt;/code&gt; variable to reference the collection we want to add the answer to.&lt;/p&gt;

&lt;p&gt;Then in our form &lt;code&gt;textarea&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     &amp;lt;textarea
                      type="text"
                      placeholder="Enter your answer"
                      rows="5"
                      value={answer}
                      onChange={(e) =&amp;gt; setAnswer(e.target.value)}
                    /&amp;gt;
     &amp;lt;button onClick={() =&amp;gt; {
                      setId(response.id);
                      formerArray(response.Answers);
                      submitAnswer()
                    }}&amp;gt;Post&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then in the &lt;code&gt;submitAnswer&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const submitAnswer = () =&amp;gt; {
        try {
          axios.put(`http://localhost:1337/forums/${id}`, {
            Answers: [...a, answer],
          });
        } catch (error) {
          console.log(error);
        }
      };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this, we can now add answers through our form to our collection.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#user-authentication-with-nextauth"&gt;
  &lt;/a&gt;
  User Authentication with NextAuth
&lt;/h2&gt;

&lt;p&gt;This section will use &lt;a href="https://next-auth.js.org/"&gt;Nextauth&lt;/a&gt;, a NextJs package for authentication, to implement Google login for our application. We will also set up protected routes so that only authenticated users can create questions and view them.&lt;/p&gt;

&lt;p&gt;To install &lt;code&gt;next-auth&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    npm i next-auth
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For our authentication, we will make use of &lt;a href="https://jwt.io/introduction"&gt;JWT token&lt;/a&gt; . JWT is a standard used to create access tokens for an application.&lt;/p&gt;

&lt;p&gt;We will create a file to handle user authentication. To do this, create a folder named &lt;code&gt;auth&lt;/code&gt; in your &lt;code&gt;api&lt;/code&gt; folder and within it, create a file &lt;code&gt;[...nextauth].js&lt;/code&gt; with the following code in it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import NextAuth from "next-auth";
    import GoogleProvider from 'next-auth/providers/google'

    export default NextAuth({
      providers: [
        GoogleProvider({
          clientId: process.env.GOOGLE_CLIENT_ID,
          clientSecret: process.env.GOOGLE_CLIENT_SECRET,
          authorizationUrl: 'https://accounts.google.com/o/oauth2/v2/auth?prompt=consent&amp;amp;access_type=offline&amp;amp;response_type=code',
        })
      ],
      jwt: {
        encryption: true
      },
      secret: process.env.secret,
      callbacks: {
        async jwt(token, account) {
          if (account ?.accessToken) {
            token.accessToken = account.accessToken
          }
          return token;
        },
        redirect: async (url, _baseUrl)=&amp;gt;{
          if (url === '/check') {
            return Promise.resolve('/')
          }
          return  Promise.resolve('/')
        }
    }
    });
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above sets up our &lt;code&gt;Google Authentication&lt;/code&gt; for our app. To use it, we need to wrap up our application in &lt;code&gt;_app.js&lt;/code&gt; with the Google Provider component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    ...
    import {Provider} from 'next-auth/client'
    function MyApp({ Component, pageProps }) {
      return (
        &amp;lt;Provider session={pageProps.session}&amp;gt;
          &amp;lt;Component {...pageProps} /&amp;gt;
        &amp;lt;/Provider&amp;gt;
      );
    }
    export default MyApp;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we will modify our &lt;code&gt;Displayforum&lt;/code&gt; component in to return to our component if the user is authenticated, else it returns a button that leads to an authentication page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import {signIn, signOut, useSession} from 'next-auth/client'
    ...
    const [session, loadingSession] = useSession();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will use &lt;code&gt;useSession&lt;/code&gt; to know if our user has been authorized.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    if (loadingSession) {
        &amp;lt;&amp;gt;
          &amp;lt;p&amp;gt;logging in&amp;lt;/p&amp;gt;
        &amp;lt;/&amp;gt;;
      }
    return(
    ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code simply returns ‚Äúlogging in‚Äù if &lt;code&gt;loadingSession&lt;/code&gt; is true. If there is &lt;code&gt;session&lt;/code&gt;, we will return the rest of the component and if there is no &lt;code&gt;session&lt;/code&gt; we will render a button to &lt;code&gt;sign in&lt;/code&gt; to access the app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    return(
    &amp;lt;div&amp;gt;
    {!session &amp;amp;&amp;amp; (
            &amp;lt;&amp;gt;
              &amp;lt;h1&amp;gt;Sign in to access forum&amp;lt;/h1&amp;gt;
              &amp;lt;button onClick={() =&amp;gt; signIn()}&amp;gt;Sign In&amp;lt;/button&amp;gt;
            &amp;lt;/&amp;gt;
          )}
    {session &amp;amp;&amp;amp; (
     &amp;lt;&amp;gt;
     {/*rest of our app*/}
     &amp;lt;/&amp;gt;
     )}
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will also set our button to &lt;code&gt;Sign out&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    ...
    &amp;lt;Link href="/upload"&amp;gt;
      &amp;lt;button&amp;gt;Ask a question&amp;lt;/button&amp;gt;
    &amp;lt;/Link&amp;gt;
    &amp;lt;button onClick={() =&amp;gt; signOut()}&amp;gt;Signout&amp;lt;/button&amp;gt;
    ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To make use of &lt;code&gt;Google authentication&lt;/code&gt; in our app, we will require access credentials from Google Cloud console. To get this, navigate in your browser to &lt;a href="https://console.developers.google.com/apis/credentials."&gt;Google Cloud&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8fyVQQWR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635626385264_create%2Bkey.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8fyVQQWR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635626385264_create%2Bkey.jpg" alt="" width="488" height="309"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;code&gt;OAuth Client ID&lt;/code&gt; and Fill out the fields on the new page that opens.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jdbKsofe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635626440061_create%2Bkey2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jdbKsofe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635626440061_create%2Bkey2.jpg" alt="" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, set the redirect URL to: &lt;a href="http://localhost/api/auth/callback/google"&gt;http://localhost/api/auth/callback/google&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To use the credentials in the &lt;code&gt;[‚Ä¶nextauth].js&lt;/code&gt;  file, you can create a &lt;code&gt;.env&lt;/code&gt; file and set up your environmental variables:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    GOOGLE_CLIENT_ID: id
    GOOGLE_CLIENT_SECRET: secret
    secret: any string
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we will set up our &lt;code&gt;Uploadforum.js&lt;/code&gt; component on our &lt;code&gt;upload&lt;/code&gt; page as a protected route so that unauthorized users can‚Äôt access the route. To do this, in &lt;code&gt;upload.js&lt;/code&gt; add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import { getSession, useSession } from 'next-auth/client'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then at the bottom:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    export async function getServerSideProps(context) {
      const session = await getSession(context);
      if (!session) {
        context.res.writeHead(302, { Location: '/' });
        context.res.end();
        return {};
      }
      return {
        props: {
          user: session.user,
        }
      }
    }
    export default Upload;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, if you run the app with &lt;code&gt;npm run dev&lt;/code&gt; in CLI, we have &lt;code&gt;Google authentication&lt;/code&gt; implemented. Also we can‚Äôt access the &lt;code&gt;/upload&lt;/code&gt; path without logging in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-user-name-to-collection"&gt;
  &lt;/a&gt;
  Adding User name to Collection
&lt;/h2&gt;

&lt;p&gt;Now that we have added authentication to our app, we can add the &lt;code&gt;username&lt;/code&gt; received from the &lt;code&gt;Google Login&lt;/code&gt; as the &lt;code&gt;Answername&lt;/code&gt; field when we answer a question:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    ...
     axios.put(`http://localhost:1337/forums/${id}`, {
            Answers: [...a, answer],
            Answername: session.user.name,
          });
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, if I add a new answer to the form:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lnTi91zI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635629050599_before%2Bpost.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lnTi91zI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635629050599_before%2Bpost.jpg" alt="" width="880" height="272"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When I click on the &lt;code&gt;Post&lt;/code&gt; button, I get:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DOQyNCJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635629083784_After%2Bsubmission.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DOQyNCJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635629083784_After%2Bsubmission.jpg" alt="" width="880" height="169"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The answer has been added and the &lt;code&gt;Answername&lt;/code&gt;  field has been set to my &lt;code&gt;user.name&lt;/code&gt; form our &lt;code&gt;session&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Finally, we will also add the &lt;code&gt;username&lt;/code&gt; when posting a question to our &lt;code&gt;collection&lt;/code&gt;. We will do this in our &lt;code&gt;upload.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     const [session, loadingSession] = useSession();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we pass the value of &lt;code&gt;session&lt;/code&gt; to our &lt;code&gt;Uploadforum&lt;/code&gt; Component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;Uploadforum session={session} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can now use &lt;code&gt;session&lt;/code&gt; data in our &lt;code&gt;Uploadforum&lt;/code&gt; component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    function Uploadforum({session}) {
    ...
     const newQuestion = {
          Title: name,
          Questions: description,
          Answers: [""],
          Username: session.user.name,
        };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Any new questions added now take the &lt;code&gt;Username&lt;/code&gt; field to be the &lt;code&gt;username&lt;/code&gt; received from &lt;code&gt;session&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If we add new answers, since the &lt;code&gt;Answername&lt;/code&gt; is a field, it overwrites the previous data and all the &lt;code&gt;answers&lt;/code&gt; use the same name. To fix this, we will simply modify our &lt;code&gt;Answers&lt;/code&gt; field of type JSON to contain both the answers and the username of the person providing the answers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XNbqg2mj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635678809482_compounded%2Banswers%2Band%2Busername.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XNbqg2mj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635678809482_compounded%2Banswers%2Band%2Busername.jpg" alt="" width="880" height="406"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, we can get this data and display it in our &lt;code&gt;Displayforum&lt;/code&gt; component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     &amp;lt;div className={style.answers}&amp;gt;
                        {response.Answers.map((answers, i) =&amp;gt; (
                          &amp;lt;div className={style.eachanswer} key={i}&amp;gt;
                            &amp;lt;p className={style.username}&amp;gt;{answers[0]}&amp;lt;/p&amp;gt;
                            &amp;lt;p className={style.answertext}&amp;gt;{answers[1]}&amp;lt;/p&amp;gt;
                          &amp;lt;/div&amp;gt;
                        ))}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;answer[0]&lt;/code&gt; is the name of the user, while &lt;code&gt;answers[1]&lt;/code&gt; is the answer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gkFoOjyL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635679166354_compounded%2Banswers%2B.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gkFoOjyL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635679166354_compounded%2Banswers%2B.jpg" alt="" width="880" height="339"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, we will modify the code to add new answers:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    ...
     axios.put(`http://localhost:1337/forums/${id}`, {
            Answers: [...a, [session.user.name, answer]],
          });
        } catch (error) {
          console.log(error);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can now add new answers to our questions without overwriting previous data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g5whN-Z9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635679343611_final%2Btest.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g5whN-Z9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635679343611_final%2Btest.jpg" alt="" width="880" height="453"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When I click on post I get a new answer:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KEWj1FXK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635679382631_final%2Bresult.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KEWj1FXK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_C85777D6DFCF98E4EF331F9FA47DA97E3213CAFEB9DAD61A99F14E2CE8154E5F_1635679382631_final%2Bresult.jpg" alt="" width="880" height="478"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We have come to the end of this tutorial. In this tutorial, we learned how to use Strapi CMS and connect it to NextJ's front-end. In this process, we built a forum site and implemented user authentication and authorization on it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;p&gt;The source code used in this tutorial can be found in the GitHub repo: &lt;a href="https://github.com/Victory-ET/Strapi-Forumapp"&gt;Forum Application&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>cms</category>
      <category>tutorial</category>
      <category>application</category>
    </item>
    <item>
      <title>Publish Your First Website Using Github Pages</title>
      <author>Abhi Dadhaniya</author>
      <pubDate>Tue, 16 Nov 2021 12:49:40 +0000</pubDate>
      <link>https://dev.to/abhidadhaniya23/publish-your-first-website-using-github-pages-1o3n</link>
      <guid>https://dev.to/abhidadhaniya23/publish-your-first-website-using-github-pages-1o3n</guid>
      <description>&lt;p&gt;There are lots of hosting services available to publish websites.&lt;br&gt;
Github is a free hosting service provider. You can publish your front-end website using github pages.&lt;br&gt;
Here, I will explain you how to publish your github website for free in easy steps.&lt;/p&gt;

&lt;p&gt;Before you host your website on github first of all you have to learn about git. Git is a open source version control system to track your code history and changes. Git is created by Linus Torvalds (creator of linux).&lt;/p&gt;

&lt;p&gt;You can upload your codes in github using git terminal or any other graphical user interface like sublime merge, Github desktop and also you can use vscode to track your code using git.&lt;br&gt;
Here is the blogpost which is written by me on git.&lt;/p&gt;

&lt;p&gt;If you feels hard to remember all git commands then you should use all commands cheat sheet &lt;a href="https://education.github.com/git-cheat-sheet-education.pdf"&gt;PDF&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-upload-website-code-on-github"&gt;
  &lt;/a&gt;
  How to upload website code on github
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#upload-files-using-git"&gt;
  &lt;/a&gt;
  Upload files using git
&lt;/h3&gt;

&lt;p&gt;First of all you need to create an account on github. So if you don't have any github account then you need to create it right now.&lt;br&gt;
Now, you need to create a repository by clicking on + icon which is shown in below picture.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0fnt9YJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://encrypted-tbn0.gstatic.com/images%3Fq%3Dtbn:ANd9GcRI7_O92CTZznLf0MDTVh3Y0P2npYc50rs3GQ%26usqp%3DCAU" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0fnt9YJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://encrypted-tbn0.gstatic.com/images%3Fq%3Dtbn:ANd9GcRI7_O92CTZznLf0MDTVh3Y0P2npYc50rs3GQ%26usqp%3DCAU" alt="hello" width="192" height="201"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Github will ask you about repository name and visibility of repository.&lt;/p&gt;

&lt;p&gt;First of all let's set repository name. You need to strictly follow this rules to publish website from github.&lt;br&gt;
Your repository name must be unique and follow this sequence &lt;strong&gt;&lt;code&gt;name.github.io&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
Example : if your project name is &lt;strong&gt;color-game&lt;/strong&gt; then you should set repository name &lt;code&gt;color-game.github.io&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You have to choose unique name otherwise github will not allow you to create repository. Once you create your repository and published your code in that repository then your URL of website is like &lt;code&gt;https://&amp;lt;username&amp;gt;/&amp;lt;project-name&amp;gt;/github.io/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once you pass and select the name of your repository then you have to choose &lt;strong&gt;public repository&lt;/strong&gt; insted of private repository because when you want to publish your website you have to set your code as public repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VFR0rzTr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://developers.sap.com/tutorials/webide-github-create-git-repo/_jcr_content.github-proxy.1563441917.file/p2_4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VFR0rzTr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://developers.sap.com/tutorials/webide-github-create-git-repo/_jcr_content.github-proxy.1563441917.file/p2_4.png" alt="enter image description here" width="792" height="569"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, click on create repository and your repository will be created. Once you will create repository, you will able to see below picture.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--10BIEGeJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://curriculum-content.s3.amazonaws.com/web-development/enough-git-for-learn-co/github_quick_setup.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--10BIEGeJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://curriculum-content.s3.amazonaws.com/web-development/enough-git-for-learn-co/github_quick_setup.png" alt="enter image description here" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, you have to click on marked copy button and it will copy the ssh URL of your repository. This URL called your remote repository URL.&lt;br&gt;
You have to open git bash by clicking right click in your website code folder. Make sure you are inside your code folder and you have to keep &lt;strong&gt;&lt;code&gt;index.html&lt;/code&gt;&lt;/strong&gt; outside any folder &lt;strong&gt;(not from this folder)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oa2kL_wN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.stack.imgur.com/7BI04.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oa2kL_wN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.stack.imgur.com/7BI04.png" alt="enter image description here" width="288" height="376"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Before we use git commands make sure you have already set ssh key of your computer in github.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, you have to use basic commands of git. If you good at git commands then not any problem but if you don't know about basic git commands then first you have to learn all those commands.&lt;/p&gt;

&lt;p&gt;Here, I will show some basic commands to upload files and folder to repote repository (GitHub Repository). This is called a local repository.&lt;/p&gt;

&lt;p&gt;First of all we need to initialize repository using&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After initializing repository, we have to stage files and folders using&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git add &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After staging all files and folder, we have to commit files from staging area. So that git can understand we have finally commit changes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"initial commit"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In inverted commas you can write any message about what you have change in code.&lt;/p&gt;

&lt;p&gt;after commit we have to push our changes or files &amp;amp; Folder to local repository.&lt;/p&gt;

&lt;p&gt;But, before we use the push command we need to add that repote URL to git so that out git can understand about where we want to push our files (at which location).&lt;/p&gt;

&lt;p&gt;To add remote URL we need to run this command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git remote add origin &amp;lt;remote url&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Don't forget to replace your remote repository url in above command like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git remote add origin git@github.com:unknown/demo.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we add remote origin now we have to use push command to push all data on out github repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git push &lt;span class="nt"&gt;-u&lt;/span&gt; origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we dont this all process then we able to see our files and folder on github repository. If it's now showing your files and folder then you have to refresh your repository page.&lt;/p&gt;

&lt;p&gt;Once again, make sure you keep &lt;code&gt;index.html&lt;/code&gt; outside the folder so github pages can easily check &lt;code&gt;index.html&lt;/code&gt; file to publish our website.&lt;/p&gt;

&lt;p&gt;Now, you have to go repository setting and go to github pages. If you don't able to find github pages you can search github pages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--59IRrCUL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.stack.imgur.com/4upKT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--59IRrCUL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.stack.imgur.com/4upKT.png" alt="enter image description here" width="880" height="612"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In github pages you have to select master branch. After selecting master branch also you have to mark below option to get secure connection in your website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fnIbJzMv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.github.com/assets/images/help/pages/enforce-https-checkbox.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fnIbJzMv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.github.com/assets/images/help/pages/enforce-https-checkbox.png" alt="enter image description here" width="880" height="594"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mark this Enforce HTTPS to get secure connection for your website.&lt;/p&gt;

&lt;p&gt;If you want to add any custom domain then you can add that also in custom domain but for now, we can keep it simple and default pages link.&lt;/p&gt;

&lt;p&gt;Now, click on save button and it will show you website is publishing at &lt;strong&gt;&lt;code&gt;&amp;lt;website-link&amp;gt;&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;When you click on that link you will see 404 not found error but don't worry github will generate your website page shortly. (around 20 - 25 min OR maximun 2 - 3 hours).&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you will not able see your published website you probably maked any mistake.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We discussed about how we can publish out front-end website using github pages. Github is a free hosting service provider by microsoft. We don't need to purchase money to host code of our website and we can easily host our website in github for completly for free. I thik it's the best plateform to host front-end websites.&lt;/p&gt;

</description>
      <category>website</category>
      <category>github</category>
      <category>tutorial</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>An Example Shopping App Built with ReactJS, MongoDB, ExpressJS</title>
      <author>Linh Truong Cong Hong</author>
      <pubDate>Tue, 16 Nov 2021 12:43:18 +0000</pubDate>
      <link>https://dev.to/linhtch90/an-example-shopping-app-built-with-reactjs-mongodb-expressjs-lk1</link>
      <guid>https://dev.to/linhtch90/an-example-shopping-app-built-with-reactjs-mongodb-expressjs-lk1</guid>
      <description>&lt;p&gt;I want to share with the community the source code of a fullstack web application that I have just developed using MERN (MongoDB, ExpressJS, ReactJS, NodeJS) stack demonstrating basic features of a bookstore.&lt;/p&gt;

&lt;p&gt;I hope this would be a good resource for anyone who enjoys learning Javascript in general and MERN stack in particular.&lt;/p&gt;

&lt;p&gt;The live demo is accessible at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bn-bookstore.herokuapp.com/#/"&gt;https://bn-bookstore.herokuapp.com/#/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Frontend and Backend source code is available at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/linhtch90/bn_bookstore_public_source"&gt;https://github.com/linhtch90/bn_bookstore_public_source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy coding and if this is useful for you, please give me a Github star for encouragement!&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Tipos de Controllers no Magento 2</title>
      <author>Lucas Teixeira dos Santos Santana</author>
      <pubDate>Tue, 16 Nov 2021 12:39:54 +0000</pubDate>
      <link>https://dev.to/santanaluc94/tipos-de-controllers-no-magento-2-2j68</link>
      <guid>https://dev.to/santanaluc94/tipos-de-controllers-no-magento-2-2j68</guid>
      <description>&lt;h2&gt;
  &lt;a href="#contextualizando"&gt;
  &lt;/a&gt;
  Contextualizando
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#o-que-%C3%A9-um-controlador"&gt;
  &lt;/a&gt;
  O que √© um controlador?
&lt;/h3&gt;

&lt;p&gt;Um controlador faz parte da camada de controle do padr√£o de arquitetura de software MVC (&lt;em&gt;Model&lt;/em&gt;-&lt;em&gt;Controller&lt;/em&gt;-&lt;em&gt;View&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Um controlador √© respons√°vel por intermediar as requisi√ß√µes enviadas pela camada de visualiza√ß√£o (&lt;em&gt;View&lt;/em&gt;) com as respostas fornecidas pela camada de modelo (&lt;em&gt;Model&lt;/em&gt;), processando os dados que o usu√°rio informou e repassando para outras camadas.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#c%C3%B3digo"&gt;
  &lt;/a&gt;
  C√≥digo
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Controllers&lt;/em&gt; da loja devem seguir a estrutura de pastas &lt;code&gt;\{Vendor}\{Module}\Controller\{ControllerDirectory}\{ControllerName}&lt;/code&gt; e implementar a interface &lt;code&gt;\Magento\Framework\App\ActionInterface&lt;/code&gt;, que obriga a classe a implementar o m√©todo &lt;code&gt;execute()&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Caso esteja utilizando uma vers√£o anterior a 2.4.0 do magento, a interface &lt;code&gt;\Magento\Framework\App\ActionInterface&lt;/code&gt; n√£o √© estar√° dispon√≠vel, ent√£o dever√° estender a classe &lt;code&gt;\Magento\Framework\App\Action\Action&lt;/code&gt; e ajustar o construtor com suas heran√ßas.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#json"&gt;
  &lt;/a&gt;
  Json
&lt;/h3&gt;

&lt;p&gt;As classes &lt;em&gt;Controllers&lt;/em&gt; (controladores) podem retornar objetos Json com o tipo &lt;em&gt;mime&lt;/em&gt; na resposta.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="n"&gt;namespace&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Vendor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Controller&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ControllerDirectory&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\Controller\Result\JsonFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\App\ActionInterface&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\Controller\Result\Json&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ControllerName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;ActionInterface&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="kt"&gt;JsonFactory&lt;/span&gt; &lt;span class="nv"&gt;$jsonResultFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="kt"&gt;JsonFactory&lt;/span&gt; &lt;span class="nv"&gt;$jsonResultFactory&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;jsonResultFactory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$jsonResultFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;Json&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s1"&gt;'{param}'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'{value}'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'message'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'{Message to return}'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s1"&gt;'error'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
        &lt;span class="p"&gt;];&lt;/span&gt;

        &lt;span class="nv"&gt;$jsonResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;jsonResultFactory&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$jsonResult&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$jsonResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#raw"&gt;
  &lt;/a&gt;
  Raw
&lt;/h3&gt;

&lt;p&gt;As classes &lt;em&gt;Controllers&lt;/em&gt; (controladores) podem ter retorno do tipo &lt;em&gt;string&lt;/em&gt; ou conte√∫dos bin√°rios.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="n"&gt;namespace&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Vendor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Controller&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ControllerDirectory&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\Controller\Result\RawFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\App\ActionInterface&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\Controller\Result\Raw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ControllerName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;ActionInterface&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="kt"&gt;RawFactory&lt;/span&gt; &lt;span class="nv"&gt;$rawResultFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="kt"&gt;RawFactory&lt;/span&gt; &lt;span class="nv"&gt;$rawResultFactory&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;rawResultFactory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$rawResultFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;Raw&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$rawResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;rawResultFactory&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$rawResult&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;setContents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'{Custom message}'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$rawResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#redirect"&gt;
  &lt;/a&gt;
  Redirect
&lt;/h3&gt;

&lt;p&gt;As classes &lt;em&gt;Controllers&lt;/em&gt; (controladores) podem ter uma &lt;em&gt;string&lt;/em&gt; com a rota de redirecionamento para outra p√°gna como retorno.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="n"&gt;namespace&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Vendor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Controller&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ControllerDirectory&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\Controller\Result\RedirectFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\App\ActionInterface&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\Controller\Result\Redirect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ControllerName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;ActionInterface&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="kt"&gt;RedirectFactory&lt;/span&gt; &lt;span class="nv"&gt;$redirectResultFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="kt"&gt;RedirectFactory&lt;/span&gt; &lt;span class="nv"&gt;$redirectResultFactory&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;redirectResultFactory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$redirectResultFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;Redirect&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$redirectResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;redirectResultFactory&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$redirectResult&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;setPath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'{router_name}/{controller_directory}/{className}'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;setHttpResponseCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;301&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$redirectResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#forward"&gt;
  &lt;/a&gt;
  Forward
&lt;/h3&gt;

&lt;p&gt;As classes &lt;em&gt;Controllers&lt;/em&gt; (controladores) podem ter retorno com um encaminhamento interno para outro controlador sem que o usu√°rio fa√ßa uma segunda solicita√ß√£o.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="n"&gt;namespace&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Vendor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Controller&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ControllerDirectory&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\Controller\Result\ForwardFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\App\ActionInterface&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\Controller\Result\Forward&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ControllerName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;ActionInterface&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="kt"&gt;ForwardFactory&lt;/span&gt; &lt;span class="nv"&gt;$forwardResultFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="kt"&gt;ForwardFactory&lt;/span&gt; &lt;span class="nv"&gt;$forwardResultFactory&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;forwardResultFactory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$forwardResultFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;Forward&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$forwardResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;forwardResultFactory&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$forwardResult&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;setModule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'{module_name}'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;setController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'{controller_directory}'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;forward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'{controller_name}'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;setParams&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'{param}'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'{value}'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$forwardResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A conven√ß√£o √© que no m√©todo &lt;code&gt;setModule()&lt;/code&gt; seja definido o nome do diret√≥rio do m√≥dulo, o &lt;code&gt;setController()&lt;/code&gt; deve ser o nome do diret√≥rio dentro do diret√≥rio &lt;em&gt;Controller&lt;/em&gt; do m√≥dulo e o &lt;code&gt;forward()&lt;/code&gt; √© o nome da classe que ir√° ser renderizada atrav√©s do controller forward.&lt;br&gt;
√â poss√≠vel passar par√¢metros atrav√©s de um &lt;em&gt;array&lt;/em&gt;. Caso o nome do m√≥dulo n√£o seja seja fornecido, o Magento ir√° assumir que ser√° o m√≥dulo presente no controller do forward.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#page"&gt;
  &lt;/a&gt;
  Page
&lt;/h3&gt;

&lt;p&gt;As classes &lt;em&gt;Controllers&lt;/em&gt; (controladores) podem ter retorno em forma de HTML com um arquivo &lt;em&gt;layout&lt;/em&gt; vinculado ao controlador que renderizar√° a p√°gina.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="n"&gt;namespace&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Vendor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Controller&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ControllerDirectory&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\View\Result\PageFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\App\ActionInterface&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\View\Result\Page&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ControllerName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;ActionInterface&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="kt"&gt;PageFactory&lt;/span&gt; &lt;span class="nv"&gt;$resultPageFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="kt"&gt;PageFactory&lt;/span&gt; &lt;span class="nv"&gt;$resultPageFactory&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;resultPageFactory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$resultPageFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;Page&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;resultPageFactory&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#layout"&gt;
  &lt;/a&gt;
  Layout
&lt;/h3&gt;

&lt;p&gt;As classes &lt;em&gt;Controllers&lt;/em&gt; (controladores) podem ter retorno em forma de HTML e pode ser usado como o Page. Al√©m disso o Layout tamb√©m podem renderizar o HTML de blocos espec√≠ficos.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="n"&gt;namespace&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Vendor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Controller&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ControllerDirectory&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\View\Result\LayoutFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\App\ActionInterface&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\View\Result\Layout&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ControllerName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;ActionInterface&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="kt"&gt;LayoutFactory&lt;/span&gt; &lt;span class="nv"&gt;$resultLayoutFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="kt"&gt;LayoutFactory&lt;/span&gt; &lt;span class="nv"&gt;$resultLayoutFactory&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;resultLayoutFactory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$resultLayoutFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;Layout&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;resultLayoutFactory&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getLayout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getBlock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'{block.name}'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;toHtml&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#admin"&gt;
  &lt;/a&gt;
  Admin
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Controllers&lt;/em&gt; do admin devem seguir a estrutura de pastas &lt;code&gt;\{Vendor}\{Module}\Controller\Adminhtml\{ControllerDirectory}\{ControllerName}&lt;/code&gt; e estender a classe abstrata &lt;code&gt;\Magento\Backend\App\AbstractAction&lt;/code&gt;, que obriga a classe a implementar o m√©todo &lt;code&gt;execute()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="n"&gt;namespace&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Vendor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Controller\Adminhtml&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ControllerDirectory&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\View\Result\PageFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Backend\App\AbstractAction&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Backend\App\Action\Context&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Magento\Framework\View\Result\Page&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ControllerName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;AbstractAction&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="kt"&gt;PageFactory&lt;/span&gt; &lt;span class="nv"&gt;$resultPageFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="kt"&gt;Context&lt;/span&gt; &lt;span class="nv"&gt;$context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="kt"&gt;PageFactory&lt;/span&gt; &lt;span class="nv"&gt;$resultPageFactory&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$context&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;resultPageFactory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$resultPageFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;Page&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;resultPageFactory&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;O exemplo mostra como declarar um &lt;em&gt;controller&lt;/em&gt; do tipo &lt;em&gt;Page&lt;/em&gt; na √°rea administrativa no Magento, mas pode ser utilizado qualquer um dos tipos de &lt;em&gt;controllers&lt;/em&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#finalizando"&gt;
  &lt;/a&gt;
  Finalizando
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Valores entre chaves (&lt;code&gt;{test}&lt;/code&gt;) devem ser alterados na implementa√ß√£o do c√≥digo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#habilitando-as-altera%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  Habilitando as altera√ß√µes
&lt;/h3&gt;

&lt;p&gt;Execute o comando PHP para gerar a configura√ß√£o das inje√ß√µes de depend√™ncia e todas as classes ausentes que precisam ser geradas (proxys, interceptors, etc).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php bin/magento setup:di:compile
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#diret%C3%B3rios-e-arquivos"&gt;
  &lt;/a&gt;
  Diret√≥rios e Arquivos
&lt;/h3&gt;

&lt;p&gt;Segue a a lista de diret√≥rios e arquivos que devem ser criados.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- app/
  - code/
    - {Vendor}/
        - {Module}/
          - Controller/
            - {ControllerDirectory}/
              - {ControllerName}.php
          - etc/
            - module.xml
          - registration.php
          - composer.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>php</category>
      <category>magento2</category>
      <category>braziliandevs</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to send Chrome / Browser Notifications</title>
      <author>ùêãùêÑùëΩùêàùë®ùêìùêáùêÄùêç Programming</author>
      <pubDate>Tue, 16 Nov 2021 12:34:51 +0000</pubDate>
      <link>https://dev.to/leviathanprogramming/how-to-send-chrome-browser-notifications-28jg</link>
      <guid>https://dev.to/leviathanprogramming/how-to-send-chrome-browser-notifications-28jg</guid>
      <description>&lt;p&gt;It took me a while of looking around StackOverflow and such to find out how to send browser notifications, but it turns out to be really simple.  What I'm going to do here is walk you through a tutorial on making a simple notification-sending function.&lt;/p&gt;

&lt;p&gt;At first, when the function is called, it will have to ask for permission first, but after that, it will be able to send all sorts of notifications.&lt;/p&gt;

&lt;p&gt;Let's get started!!&lt;/p&gt;




&lt;p&gt;First, let's create the function.  It'll have three parameters.  One for the title, next for the message, and the last for the icon.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sendNotif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, just to be safe, let's make sure the browser supports notifications.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Notification&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Your Browser does not support Chrome Notifications :(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's chain onto the if statement with an &lt;code&gt;else if&lt;/code&gt;.  This statement tests if the notification status is granted or not.  If it is granted, it will send a notification.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;permission&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;granted&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// If it's okay let's create a notification&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;notif&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Still, we'll chain onto the else-if statement.  Let's add another one.  This statement will request permission if it isn't granted or denied.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;permission&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;denied&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//request notification permission&lt;/span&gt;
  &lt;span class="nx"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestPermission&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;perm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//save permission status&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;permission&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;permission&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;perm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//if granted, send a notification immediately&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;permission&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;granted&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;notif&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that should be it.  Your function should be working well.  Let's, for extra error handling, add an else statement at the end of the chain and log the current notification to the console if it isn't denied or allowed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Failed, Notification Permission is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;permission&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Have fun and don't spam websites or users with notifications.&lt;br&gt;
Happy Coding.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Effortless Cloud Native App Development Using Skaffold - Book Review</title>
      <author>Shai Almog</author>
      <pubDate>Tue, 16 Nov 2021 12:28:36 +0000</pubDate>
      <link>https://dev.to/codenameone/effortless-cloud-native-app-development-using-skaffold-book-review-53kj</link>
      <guid>https://dev.to/codenameone/effortless-cloud-native-app-development-using-skaffold-book-review-53kj</guid>
      <description>&lt;p&gt;I‚Äôm a developer who cares deeply about production. But I‚Äôm not a devops and unfortunately I‚Äôm pretty bad at that. That‚Äôs why when I heard about Skaffold it instantly piqued my interest. Write Kubernetes cloud native apps without well‚Ä¶ Writing Kubernetes native apps‚Ä¶ Sign me up!&lt;/p&gt;

&lt;p&gt;Unfortunately, as we all know. The time to pick up a new technology is when we actually need it and then it‚Äôs a rush to get something out. Few of us have time to take off from our busy day to study something and learn something new. That‚Äôs why when &lt;a href="https://twitter.com/iASHeeesh"&gt;Ashish Choudhary&lt;/a&gt;, the author of the book ‚Äú&lt;strong&gt;Effortless Cloud Native App Development Using Skaffold&lt;/strong&gt;‚Äù asked for reviewers in the &lt;a href="https://foojay.io/"&gt;foojay.io&lt;/a&gt; slack group, I jumped on the opportunity. I can learn something interesting and be productive (this book review). &lt;/p&gt;

&lt;p&gt;Before we go on to the book review, I‚Äôd like to get the following things out of the way:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I don‚Äôt know Ashish Choudhary personally&lt;/li&gt;
&lt;li&gt;I receive nothing for this review and don‚Äôt provide any affiliate links or stuff like that.  &lt;a href="https://www.packtpub.com/product/effortless-cloud-native-apps-development-using-skaffold/9781801077118"&gt;This is the only link to the book&lt;/a&gt; in this post, and it has no affiliate code!&lt;/li&gt;
&lt;li&gt;I did some work for the publisher Packt in the past (an online course) - I don‚Äôt think that affects my judgement here. It‚Äôs been a while since I did that work&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Another important detail: I didn‚Äôt run the code or go through the samples. I just read the book. I also did that relatively quickly and used the PDF version. As such, I feel I lost some of the core experience in the book. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-skaffold"&gt;
  &lt;/a&gt;
  What‚Äôs Skaffold
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/GoogleContainerTools/skaffold"&gt;Skaffold&lt;/a&gt;  is an open source project started by a Google engineer after suffering the pain of cloud native Kubernetes deployments. It‚Äôs effectively a command-line tool that automates the build, push, and deploy steps for Kubernetes applications. &lt;/p&gt;

&lt;p&gt;That alone warrants an info sheet. The surrounding system integrates with Maven/Gradle/Spring etc. to create a smooth development experience. This makes building/debugging Kubernetes apps locally almost as easy as running a regular Spring Boot application.&lt;/p&gt;

&lt;p&gt;There‚Äôs obviously additional complexity, and configuration, but the core idea is the same. Developers still need to understand basic Kubernetes ideas, there‚Äôs no way around it. But you can remove some of the hassle involved with it. Kubernetes is aimed at devops and a lot of its features are redundant for developers. This way we can build cloud native microservices without the hassle.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-book"&gt;
  &lt;/a&gt;
  The Book
&lt;/h2&gt;

&lt;p&gt;Packt books offer a quick and practical introduction to current technologies. They have the advantage of including a lot of current details that other books might miss. However, these details might become outdated by the time you need the book. It‚Äôs a tradeoff you need to make based on your experience with the publication.&lt;/p&gt;

&lt;p&gt;Since the subject ‚Äåis a very specific tool, I see the value of going into specific details and samples.&lt;/p&gt;

&lt;p&gt;Choudhary divided the book into 3 sections:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The Kubernetes Nightmare - Skaffold to the Rescue&lt;/li&gt;
&lt;li&gt;Getting Started with Skaffold&lt;/li&gt;
&lt;li&gt;Building and Deploying Cloud-Native Spring Boot Applications with Skaffold&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the first section, we get a glimpse into the ‚Äúproblem‚Äù of building Kubernetes applications with chapters such as ‚ÄúDeveloping Cloud-Native Applications with Kubernetes - A Developer's Nightmare‚Äù. &lt;/p&gt;

&lt;p&gt;Choudhary introduces Skaffold in the second section. The third section gets into the finer points of deployment, alternatives, etc. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cloud-native"&gt;
  &lt;/a&gt;
  Cloud Native
&lt;/h3&gt;

&lt;p&gt;The book focuses on the separation of the inner/outer loop of the development cycle. The inner loop is the local development environment, where the outer loop is the production/CI/CD environment. What makes this development style ‚ÄúCloud Native‚Äù is the similarity between the inner and outer loops. &lt;/p&gt;

&lt;p&gt;There‚Äôs a similar focus on the value delivered in integration tests during the CI cycle and finally in pushing to production via tools like GitOps. The cool thing is that we use an environment that‚Äôs pretty close to production in all stages of development.&lt;/p&gt;

&lt;p&gt;Another aspect that makes Skaffold native to the cloud is the instant deployment via jib. As a result, we can instantly see changes in our local Kubernetes environment as we save changes in the IDE. That‚Äôs pretty cool, and this alone is worth the price of admission to Skaffold (which admittedly is free).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-i-liked"&gt;
  &lt;/a&gt;
  What I Liked
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#writing-and-focus"&gt;
  &lt;/a&gt;
  Writing and Focus
&lt;/h3&gt;

&lt;p&gt;Choudhary is a talented writer who uses clear language and examples. The examples weren‚Äôt too verbose, as is sometimes the case with such books. He wrote the book targeting Kotlin/Java developers, which is great.&lt;/p&gt;

&lt;p&gt;The core ideas and benefits of Skaffold are covered early on in the book and are pretty obvious. There are a few diagrams that illustrate the big set pieces. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#objectivity"&gt;
  &lt;/a&gt;
  Objectivity
&lt;/h3&gt;

&lt;p&gt;The book covers competitors to Skaffold and seems to be reasonably objective with its treatment. This is at the end of the book, so if you have doubts about Skaffold, I suggest reading the ending first.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#publishing"&gt;
  &lt;/a&gt;
  Publishing
&lt;/h3&gt;

&lt;p&gt;While somewhat wasteful (more on that later), the layout of the Packt books is as usual pretty great. Packt books have excellent layout, table of contents and index. This makes the reading/referencing process much smoother.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-i-didnt-like"&gt;
  &lt;/a&gt;
  What I Didn‚Äôt Like
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#cloud-native"&gt;
  &lt;/a&gt;
  Cloud Native
&lt;/h3&gt;

&lt;p&gt;I feel the phrase cloud native was ‚Äåco-opted by GraalVM and frameworks such as Quarkus. I understand what Choudhary is aiming at and think this makes sense for the book. But it‚Äôs one of those overused phrases that loses some of its meaning. A cloud native book is a pretty vague statement, Skaffold narrows it down but only after you know what that means. &lt;/p&gt;

&lt;p&gt;There‚Äôs an entire chapter on GKE which I skipped entirely for that reason. It just isn‚Äôt relevant to me.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#publishing"&gt;
  &lt;/a&gt;
  Publishing
&lt;/h3&gt;

&lt;p&gt;While I like Packt books, I have two grievances. I hope they improve on these:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I don‚Äôt like filler in books. The book could be 100 pages shorter, this is due to blank pages, large margins, over spacing, etc. Think of the tree‚Äôs Packt (this goes to other publishers too!).&lt;/li&gt;
&lt;li&gt;I wish other publishers would pick up the source annotation style of manning. This is hard to do as  &lt;a href="https://medium.com/sketch-app-sources/using-sketch-and-asciidoc-to-generate-a-professional-tech-book-ef5b5d8dd410"&gt;I discovered&lt;/a&gt; , but the readability is so much better‚Ä¶&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Notice that both comments aren‚Äôt unique to Packt and apply to most publishers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-word"&gt;
  &lt;/a&gt;
  Final Word
&lt;/h2&gt;

&lt;p&gt;I liked the book. I still haven‚Äôt made up my mind about Skaffold though. As a latecomer to the cloud native realm, I feel I need to leapfrog some of the hassle. That makes it attractive. But I try to keep away from  &lt;a href="https://talktotheduck.dev/production-horrors-handling-disasters-public-debrief"&gt;Google services due to past trauma&lt;/a&gt; . Skaffold doesn‚Äôt require GCP and can still be pretty useful without it, so it‚Äôs something I intend to try.&lt;/p&gt;

&lt;p&gt;I like that Choudhary focused the book on Java/Kotlin as I‚Äôm a Java guy. But I‚Äôm doing a lot of cloud native polyglot work recently, and this could be a limitation. I saw a mention in the book of NodeJS debugging, but that‚Äôs it. I honestly don‚Äôt know if I can use Skaffold for one of my Polyglot demos. It would be really cool for that. &lt;/p&gt;

&lt;p&gt;I assume this isn‚Äôt discussed much because of a limitation in Skaffold, not because of an omission in the book. &lt;/p&gt;

</description>
      <category>cloudnative</category>
      <category>cloud</category>
      <category>java</category>
      <category>kubernetes</category>
    </item>
    <item>
      <title>Enforce MFA Access to the AWS Console</title>
      <author>Nicolas El Khoury</author>
      <pubDate>Tue, 16 Nov 2021 12:26:17 +0000</pubDate>
      <link>https://dev.to/aws-builders/enforce-mfa-access-to-the-aws-console-1ho1</link>
      <guid>https://dev.to/aws-builders/enforce-mfa-access-to-the-aws-console-1ho1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;One of the most important security concerns for entities using AWS is securing their AWS accounts. Evidently, managing an AWS account with 5 users may be somewhat a walk in the park. However, as the usage of the account scales, and the number of users increases, managing account becomes trivial. Several policies must be put in place in order to organize access between different stakeholders. &lt;/p&gt;

&lt;p&gt;One of the most common security features is to enable &lt;a href="https://en.wikipedia.org/wiki/Multi-factor_authentication"&gt;Multi-Factor Authentication&lt;/a&gt; on the AWS account users.&lt;/p&gt;

&lt;p&gt;In this tutorial, we are going to setup a process that forbids any AWS user from using any service without:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Setting up an MFA device.&lt;/li&gt;
&lt;li&gt;Signing in using MFA. Any user that signs in without MFA must not be allowed to manage any resource on AWS.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  Steps
&lt;/h2&gt;

&lt;p&gt;In this tutorial we will perform the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create the required policy.&lt;/li&gt;
&lt;li&gt;Create a test user.&lt;/li&gt;
&lt;li&gt;Validate the setup.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#policy-creation"&gt;
  &lt;/a&gt;
  Policy Creation
&lt;/h3&gt;

&lt;p&gt;Navigate to &lt;strong&gt;Policies&lt;/strong&gt; section, under the &lt;strong&gt;IAM&lt;/strong&gt; service, and create the following policy:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "AllowViewAccountInfo",
            "Effect": "Allow",
            "Action": [
                "iam:GetAccountPasswordPolicy",
                "iam:GetAccountSummary",       
                "iam:ListVirtualMFADevices"
            ],
            "Resource": "*"
        },       
        {
            "Sid": "AllowManageOwnPasswords",
            "Effect": "Allow",
            "Action": [
                "iam:ChangePassword",
                "iam:GetUser"
            ],
            "Resource": "arn:aws:iam::*:user/${aws:username}"
        },
        {
            "Sid": "AllowManageOwnAccessKeys",
            "Effect": "Allow",
            "Action": [
                "iam:CreateAccessKey",
                "iam:DeleteAccessKey",
                "iam:ListAccessKeys",
                "iam:UpdateAccessKey"
            ],
            "Resource": "arn:aws:iam::*:user/${aws:username}"
        },
        {
            "Sid": "AllowManageOwnSigningCertificates",
            "Effect": "Allow",
            "Action": [
                "iam:DeleteSigningCertificate",
                "iam:ListSigningCertificates",
                "iam:UpdateSigningCertificate",
                "iam:UploadSigningCertificate"
            ],
            "Resource": "arn:aws:iam::*:user/${aws:username}"
        },
        {
            "Sid": "AllowManageOwnSSHPublicKeys",
            "Effect": "Allow",
            "Action": [
                "iam:DeleteSSHPublicKey",
                "iam:GetSSHPublicKey",
                "iam:ListSSHPublicKeys",
                "iam:UpdateSSHPublicKey",
                "iam:UploadSSHPublicKey"
            ],
            "Resource": "arn:aws:iam::*:user/${aws:username}"
        },
        {
            "Sid": "AllowManageOwnGitCredentials",
            "Effect": "Allow",
            "Action": [
                "iam:CreateServiceSpecificCredential",
                "iam:DeleteServiceSpecificCredential",
                "iam:ListServiceSpecificCredentials",
                "iam:ResetServiceSpecificCredential",
                "iam:UpdateServiceSpecificCredential"
            ],
            "Resource": "arn:aws:iam::*:user/${aws:username}"
        },
        {
            "Sid": "AllowManageOwnVirtualMFADevice",
            "Effect": "Allow",
            "Action": [
                "iam:CreateVirtualMFADevice",
                "iam:DeleteVirtualMFADevice"
            ],
            "Resource": "arn:aws:iam::*:mfa/${aws:username}"
        },
        {
            "Sid": "AllowManageOwnUserMFA",
            "Effect": "Allow",
            "Action": [
                "iam:DeactivateMFADevice",
                "iam:EnableMFADevice",
                "iam:ListMFADevices",
                "iam:ResyncMFADevice"
            ],
            "Resource": "arn:aws:iam::*:user/${aws:username}"
        },
        {
            "Sid": "DenyAllExceptListedIfNoMFA",
            "Effect": "Deny",
            "NotAction": [
                "iam:CreateVirtualMFADevice",
                "iam:EnableMFADevice",
                "iam:GetUser",
                "iam:ListMFADevices",
                "iam:ListVirtualMFADevices",
                "iam:ResyncMFADevice",
                "sts:GetSessionToken",
                "iam:ChangePassword",
                "iam:GetUser"
            ],
            "Resource": "*",
            "Condition": {
                "BoolIfExists": {
                    "aws:MultiFactorAuthPresent": "false"
                }
            }
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The policy above allows a user to only perform certain actions related to their account such as changing the password, or setting an MFA device. Moreover, the policy denies every other action for the user, if signed in without an MFA device. This policy allows any user to login for the first time, and set their own MFA device.&lt;/p&gt;

&lt;p&gt;Give the policy a name and finalize its creation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#test-user-creation"&gt;
  &lt;/a&gt;
  Test User Creation.
&lt;/h3&gt;

&lt;p&gt;Navigate to &lt;strong&gt;Users&lt;/strong&gt; section, under the &lt;strong&gt;IAM&lt;/strong&gt; service, and add a new user with the following options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Name: testuser&lt;/li&gt;
&lt;li&gt;AWS Credential Type: autogenerated password that should be changed on first signed in for the AWS Management Console.&lt;/li&gt;
&lt;li&gt;Under the permissions section, navigate to "Attach existing policies directly", search for the name of the policy created previously, and add it to the user.&lt;/li&gt;
&lt;li&gt;Attach the &lt;strong&gt;AmazonEC2FullAccess&lt;/strong&gt; policy as well, giving the user full access to the EC2 service.&lt;/li&gt;
&lt;li&gt;Leave the remaining options as defaults, and create the user.&lt;/li&gt;
&lt;li&gt;A password will be generated. Use this password to login to the console with the new user.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#mfa-setup-and-validation"&gt;
  &lt;/a&gt;
  MFA setup and Validation
&lt;/h3&gt;

&lt;p&gt;In order to validate the setup, perform the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Login to the AWS management console using the new testuser. For the first time, you will be able to login using only the password. Moreover, you will be asked to change the password.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After successfully logging in, navigate to the EC2 instances console. You will be greeted with the following message "You are not authorized to perform this operation." forbidding you from listing any existing instances. Even though this user has full access to the EC2 service, managing EC2 resources is forbidden before signing in using MFA.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To setup MFA, navigate to the dashboard of the &lt;strong&gt;IAM&lt;/strong&gt; section. The dashboard will be filled with permission error messages.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click on &lt;strong&gt;Add MFA&lt;/strong&gt; --&amp;gt; &lt;strong&gt;Assign MFA Device&lt;/strong&gt; --&amp;gt; Virtual MFA device.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Download an MFA software (Google, Microsoft, etc) on your phone, and complete the setup on AWS by scanning the QR code, and then copying 2 consecutive MFA Codes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Upon completion, you will receive the following message:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;You have successfully assigned virtual MFA
This virtual MFA will be required during sign-in.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sign out, and sign back in. This time, you will be prompted to enter the code from the authentication device.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After signing in, navigate again to the EC2 instances dashboard. The error message is now replaced by the list of EC2 instances present.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The end :)&lt;/p&gt;

</description>
      <category>aws</category>
      <category>security</category>
      <category>devops</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Seguran√ßa</title>
      <author>Pedro Kiefer</author>
      <pubDate>Tue, 16 Nov 2021 12:21:32 +0000</pubDate>
      <link>https://dev.to/pedrokiefer/seguranca-4no8</link>
      <guid>https://dev.to/pedrokiefer/seguranca-4no8</guid>
      <description>&lt;p&gt;Seguran√ßa √© um dos temas mais em voga no momento, especialmente depois dos grandes ataques de ransomware que aconteceram no Brasil e no mundo. Seguran√ßa deve permear todos os passos do desenvolvimento de software e n√£o ser uma camada que jogam por cima. Claro, em sistema legados talvez seja a √∫nica solu√ß√£o poss√≠vel e mesmo assim ser√° um cobertor curto ‚Äî algum peda√ßo vai ficar desprotegido.&lt;/p&gt;

&lt;p&gt;Quando estamos come√ßando um projeto novo, devemos olhar para a seguran√ßa desde o princ√≠pio. Algumas escolhas simples podem fazer toda a diferen√ßa. Isso √© parte do pr√≠ncipio de shift left, isto √©, trazer seguran√ßa para dentro dos times e deixar de ser uma responsabilidade de um time s√≥ de seguran√ßa.&lt;/p&gt;

&lt;p&gt;Todos s√£o respons√°veis pela seguran√ßa ‚Äî inclu√≠ndo as pessoas n√£o t√©cnicas, ou talvez especialmente elas. Imaginem se a portaria deixa entrar algu√©m que n√£o deveria? De nada adianta dez camadas de seguran√ßa no software se qualquer um entra no pr√©dio e tem acesso a rede local, ou se deixamos as senhas anotadas na mesa. Temos que balancear o n√≠vel paran√≥ia com o bom senso. Nenhum dos extremos funciona bem.&lt;/p&gt;

&lt;p&gt;Olhando para o compilado de vulnerabilidades feito pela &lt;a href="https://owasp.org/www-project-top-ten/"&gt;OWASP&lt;/a&gt; temos um √≥timo panorama de quais s√£os os problemas mais comuns. A maioria √© evit√°vel simplesmente se prestarmos aten√ß√£o e entendermos que vulnerabilidades existem. Por exemplo, ataques de inje√ß√£o s√£o &lt;a href="https://www.vice.com/en/article/aekzez/the-history-of-sql-injection-the-hack-that-will-never-go-away"&gt;conhecidos desde 1998&lt;/a&gt; e praticamente todas as bibliotecas para acesso de banco de dados possuem fun√ß√µes que evitam esse tipo de ataque. Basta uma simples escolha para resolver uma classe inteira de problemas. Outros s√£o um pouco mais complexos, mas nada de outro planeta. Com a ajuda de uma equipe de seguran√ßa qualquer time est√° apto a sanar todos.&lt;/p&gt;

&lt;p&gt;Existem diversas ferramentas que prometem milagres, fazem an√°lise de c√≥digo, an√°lise em tempo de execu√ß√£o, filtram requisi√ß√µes maliciosas, etc., mas o mais importante √© ter uma cultura que entenda que seguran√ßa vem primeiro e faz parte da qualidade do software entregue. As ferramentas podem auxiliar, indicando onde devemos olhar, mas s√£o s√≥ ferramentas. Um time com conhecimento vai sempre se sair melhor que ferramentas ‚Äî especialmente se as ferramentas n√£o forem totalmente compreendidas pelo time. Criar uma cultura √© bem mais demorado, envolve treinamentos e participa√ß√£o de todos, mas os benef√≠cios s√£o incrivelmente maiores.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#c%C3%B3digo-e-linguagens"&gt;
  &lt;/a&gt;
  C√≥digo e Linguagens
&lt;/h2&gt;

&lt;p&gt;Quando olhamos para seguran√ßa sob a √≥tica do c√≥digo precisamos ter em mente que aquele software deve atender algum usu√°rio. Se criarmos algo super seguro, mas de dif√≠cil uso, poucas pessoas ir√£o usar ou encontrar√£o formas de burlar a burocracia da seguran√ßa ‚Äî especialmente se forem desenvolvedores. Ent√£o √© necess√°rio encontrar um meio termo entre seguran√ßa e uso. Aceitar que o risco sempre existir√°, mas estamos minimizando ele ao m√°ximo. Todo o software √© inseguro por natureza. O √∫nico software totalmente seguro √© aquele que ainda n√£o foi escrito ‚Äî depois de escrito ele ser√° inseguro, ou rodar√° num ambiente inseguro. Encontre o balan√ßo de seguran√ßa / utilidade ideal para o contexto do neg√≥cio.&lt;/p&gt;

&lt;p&gt;Nunca √© demais repetir, mas &lt;strong&gt;valide&lt;/strong&gt; todas as entradas ‚Äî inclusive aqueles headers HTTP que parecem inofensivos.&lt;/p&gt;

&lt;p&gt;N√£o deixe chaves de acesso, senhas, ou qualquer dado sens√≠vel no meio do c√≥digo fonte ou configura√ß√£o. Gerencie as senhas com um sistema pr√≥prio para isso. Tenha cuidado redobrado se o projeto for p√∫blico, uma senha vazada pode ser a porta de entrada para diversos tipos de ataques.&lt;/p&gt;

&lt;p&gt;As linguagens de programa√ß√£o evolu√≠ram muito nos √∫ltimos 20 anos e surgiram algumas linguagens com modelos de mem√≥ria mais seguros ‚Äî &lt;a href="https://en.wikipedia.org/wiki/Rust_(programming_language)"&gt;&lt;code&gt;Rust&lt;/code&gt;&lt;/a&gt; sendo o melhor exemplo. Escolher uma linguagem com um modelo de mem√≥ria seguro d√° diversos benef√≠cios e barra muitos tipos de ataques. Um modelo de mem√≥ria seguro √© t√£o importante que diversos projetos opensource est√£o reescrevendo partes em Rust para justamente n√£o terem mais problemas com o comportamento indefinido do &lt;code&gt;C&lt;/code&gt; ‚Äî a biblioteca de criptografia do &lt;a href="https://github.com/pyca/cryptography"&gt;python&lt;/a&gt;, ou mais recentemente o pr√≥prio &lt;a href="https://github.com/Rust-for-Linux"&gt;kernel do linux&lt;/a&gt;. &lt;code&gt;Go&lt;/code&gt; adicionou suporte nativo a fuzzing para justamente facilitar testes e aumentar a seguran√ßa das aplica√ß√µes que adotam essa pr√°tica ‚Äî fuzzing consiste em testar diversos tipos de dados para uma entrada qualquer, se o teste falha temos uma potencial falha de seguran√ßa ou somente um bug.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#criptografia"&gt;
  &lt;/a&gt;
  Criptografia
&lt;/h2&gt;

&lt;p&gt;Use e abuse de solu√ß√µes de criptografia, mas n√£o tente inventar a sua. Todos os algoritmos envolvidos na gera√ß√£o de chaves criptogr√°ficas fortes s√£o dif√≠cies de implementar. Um pequeno erro pode fazer que um gerador de n√∫meros aleat√≥rios vire uma m√°quina de repeti√ß√£o, um atacante facilmente criaria uma chave igual. Existem √≥timas bibliotecas prontas e seguras para criptografia.&lt;/p&gt;

&lt;p&gt;Use criptografia no tr√¢nsito de dados, mesmo que seja entre sistemas internos ‚Äî a maioria dos protocolos j√° possuem uma vers√£o com TLS. Garanta que os dados estejam cifrados quando em repouso, todos os sistemas operacionais e banco de dados como servi√ßo suportam.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#infraestrutura"&gt;
  &lt;/a&gt;
  Infraestrutura
&lt;/h1&gt;

&lt;p&gt;Uma das camadas fundamentais para um sistema seguro √© a infraestrutura onde rodamos nossos sistemas. Se utilizamos um provedor de nuvem, eles garantem a seguran√ßa f√≠sica dos servidores, mas cabe a n√≥s garantir que o sistema est√° seguro. Assuma sempre que o ambiente est√° comprometido ‚Äî mesmo n√£o estando ‚Äî, defina o m√≠nimo de privil√©gios necess√°rios para cada parte da infraestrutura. N√£o √© simples aplicar esse tipo de pensamento em um ambiente j√° existente, ent√£o come√ße pequeno, garanta que novos sistemas j√° surjam com os acessos m√≠nimos. Aqui estamos aplicando os princ√≠pios de &lt;a href="https://en.wikipedia.org/wiki/Zero_trust_security_model"&gt;Zero Trust&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Para quem trabalha mais com frontend, ou mobile, troquem nuvem por navegador ou dispositivo m√≥vel. Os mesmos conceitos se aplicam e alguns casos de uso podem inclusive fazer parte das ferramentas de desenvolvimento.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>architecture</category>
    </item>
    <item>
      <title>Design website || you wan't believe exist üòéüòé</title>
      <author>Femil Savaliya</author>
      <pubDate>Tue, 16 Nov 2021 12:06:16 +0000</pubDate>
      <link>https://dev.to/femil/design-website-you-want-believe-exist-16cc</link>
      <guid>https://dev.to/femil/design-website-you-want-believe-exist-16cc</guid>
      <description>&lt;h2&gt;
  &lt;a href="#there-ae-many-fantastic-websites-for-designer-on-the-internet"&gt;
  &lt;/a&gt;
  There ae many fantastic websites for designer on the internet.
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#the-ones-i-will-show-you-in-this-blog-will-blow-you-mind-"&gt;
  &lt;/a&gt;
  The ones i will show you in this blog will blow you mind !!
&lt;/h4&gt;

&lt;p&gt;Let‚Äôs dive into üèäüèä&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1happy-hues"&gt;
  &lt;/a&gt;
  1.Happy Hues
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.happyhues.co/"&gt;Happy Hues&lt;/a&gt; is a color palette inspiration site that acts&lt;br&gt;
as a real world example as to how the colors could be&lt;br&gt;
used in your design projects. It's very practical.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sAMpIp82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.linkpicture.com/q/Screenshot-60_9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sAMpIp82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.linkpicture.com/q/Screenshot-60_9.png" alt="Happy Hues" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#2design-system-checklist"&gt;
  &lt;/a&gt;
  2.Design System Checklist
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.designsystemchecklist.com/"&gt;Design System Checklist&lt;/a&gt; is An open-source checklist to help you plan, build and&lt;br&gt;
grow your design system. It's highly detailed and&lt;br&gt;
contains all you need to build a design system.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZdnBykNl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.linkpicture.com/q/Screenshot-61.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZdnBykNl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.linkpicture.com/q/Screenshot-61.png" alt="Design System Checklist" width="880" height="503"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#3humane-by-design"&gt;
  &lt;/a&gt;
  3.Humane by Design
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://humanebydesign.com/"&gt;Humane by Design&lt;/a&gt; is a resource that provides guidance for designing&lt;br&gt;
ethically humane digital products through patterns&lt;br&gt;
focused on user well-being.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NrQsCsO7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.linkpicture.com/q/Screenshot-62_1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NrQsCsO7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.linkpicture.com/q/Screenshot-62_1.png" alt="Humane by Design" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#4useronboard"&gt;
  &lt;/a&gt;
  4.UserOnboard
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://humanebydesign.com/"&gt;This&lt;/a&gt; website is a true gem. It's a library of different&lt;br&gt;
onboarding processes by leadign companies, including&lt;br&gt;
detailed breakdown and explanation.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8NHDj_rk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.linkpicture.com/q/Screenshot-63_1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8NHDj_rk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.linkpicture.com/q/Screenshot-63_1.png" alt="UserOnboard" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5scrnshts"&gt;
  &lt;/a&gt;
  5.scrnshts
&lt;/h2&gt;

&lt;p&gt;After the app is developed, it's time to publish it on&lt;br&gt;
the app store, for which you'll need some cool cover&lt;br&gt;
images. &lt;a href="//scrnshts.club"&gt;This&lt;/a&gt; website will inspire you.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ccxAXTYL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.linkpicture.com/q/Screenshot-2021-11-16-172341.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ccxAXTYL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.linkpicture.com/q/Screenshot-2021-11-16-172341.png" alt="scrnshts" width="880" height="443"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#6figma-freebies"&gt;
  &lt;/a&gt;
  6.Figma Freebies
&lt;/h2&gt;

&lt;p&gt;A curated collection of freebies for the most popular&lt;br&gt;
&lt;a href="http://www.figmafreebi.es/"&gt;design tool&lt;/a&gt;. Let's face it - who doesn't like a good freebie? I think we all 'em.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nIgOmLqZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.linkpicture.com/q/Screenshot-2021-11-16-172910.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nIgOmLqZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.linkpicture.com/q/Screenshot-2021-11-16-172910.png" alt="Figma Freebies" width="880" height="424"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;What's your &lt;u&gt;favorite website&lt;/u&gt; from above ?? üíùüíù&lt;/em&gt;&lt;br&gt;
comment below. &lt;/p&gt;

&lt;p&gt;Thank's for reading.&lt;/p&gt;

</description>
      <category>css</category>
      <category>design</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Writing a tester code</title>
      <author>jjung99</author>
      <pubDate>Tue, 16 Nov 2021 12:05:04 +0000</pubDate>
      <link>https://dev.to/jjung99/writing-a-tester-code-41jo</link>
      <guid>https://dev.to/jjung99/writing-a-tester-code-41jo</guid>
      <description></description>
    </item>
    <item>
      <title>6 Tech Jobs That Don't Involve Coding</title>
      <author>Danish Saleem</author>
      <pubDate>Tue, 16 Nov 2021 12:00:18 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/6-tech-jobs-that-dont-involve-coding-44bk</link>
      <guid>https://dev.to/mrdanishsaleem/6-tech-jobs-that-dont-involve-coding-44bk</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-ui-ux-designer"&gt;
  &lt;/a&gt;
  1. UI / UX Designer
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;UI Designers establish the look and feel of the software's interface, making design cohesive and easy for users.&lt;/li&gt;
&lt;li&gt;UX Designers create products with end-user in mind, attract users, make their experiences better.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-qa-software-quality-tester"&gt;
  &lt;/a&gt;
  2. QA (Software Quality Tester)
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;QA test the quality of the products, working with developers and product managers to ensure the software is built with high quality.&lt;/li&gt;
&lt;li&gt;QA runs various functional, stress, and scalability tests across. In an effort to think of edge cases and "break" the product to eliminate bugs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-seo-search-engine-optimization-specialist"&gt;
  &lt;/a&gt;
  3. (SEO) Search Engine Optimization Specialist
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;SEO specialists collaborate with developers and web designers to ensure SEO best practices are being implemented across web/web apps.&lt;/li&gt;
&lt;li&gt;Dealing with increasing rankings in search engines whose algorithms are forever being optimized for up-to-the-minute relevance.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-sale-software-engineer"&gt;
  &lt;/a&gt;
  4. Sale Software Engineer
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Software-as-a-service sales, more typically known as "SaaS sales" function primarily as business-to-business (B2B) services.&lt;/li&gt;
&lt;li&gt;However, as is the case in so many sales roles, high reward comes with high risk.&lt;/li&gt;
&lt;li&gt;Quotas, high-pressure-high-stakes negotiations, and extensive travel often take a toll on family life, so knowing what you're getting into at the outset is important.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-technical-recruiter"&gt;
  &lt;/a&gt;
  5. Technical Recruiter
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Technical recruiters often stand as gatekeepers between major organizations and technical employees such as programmes and developers.&lt;/li&gt;
&lt;li&gt;While they don't perform hands-on tasks with technology or coding, a fundamental understanding of the larger technical landscape is extremely important to gain the experience needed for the highly-specialized role they're contracted to fill.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#6-growth-hackers"&gt;
  &lt;/a&gt;
  6. Growth Hackers
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Commonly employed by startups, growth hackers combine marketing, technology, and business development with a laser focus on user acquisition.&lt;/li&gt;
&lt;li&gt;They develop and implement onboarding strategies, measure results, and tweak plans as necessary, based on consumer response and engagement.&lt;/li&gt;
&lt;li&gt;Also known as a user acquisition specialist, growth hackers fall under the larger umbrella of marketing, as well.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#7-follow-industry-news"&gt;
  &lt;/a&gt;
  7. Follow Industry News
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Make a point to keep up with what's happening in tech - this is critical for both your first web developer job interview and all the small talk you'll be making with new tech friends.&lt;/li&gt;
&lt;li&gt;You don't need to be an expert on every story or topic out there; just get to know what's hot and what's happening.&lt;/li&gt;
&lt;li&gt;You can read blogs or tech news sites over breakfast, listen to podcasts when you're walking your dog, or scan Twitter lists while you're waiting in line at the store.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect üíú
&lt;/h2&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/MrDanishSaleem"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/mrdanishsaleem/"&gt;LinkedIn&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mrdanishsaleem/"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like this post. Kindly support me by &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem"&gt;Buying Me a Coffee&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" alt="Buy Me a Coffee" width="880" height="247"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>beginners</category>
      <category>techtalks</category>
    </item>
  </channel>
</rss>
