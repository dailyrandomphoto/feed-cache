<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>🐳 Docker para desarrolladores</title>
      <author>Fernando Cutire</author>
      <pubDate>Thu, 12 Aug 2021 23:05:11 +0000</pubDate>
      <link>https://dev.to/fernandocutire/docker-para-desarrolladores-bk6</link>
      <guid>https://dev.to/fernandocutire/docker-para-desarrolladores-bk6</guid>
      <description>&lt;p&gt;Docker es una herramienta maravillosa para desarrolladores y el concepto de empaquetar tus dependencias en un solo lugar que corre en cualquier lugar suena casi utóṕico.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#en-este-art%C3%ADculo-aprender%C3%A1s"&gt;
  &lt;/a&gt;
  En este artículo aprenderás
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Cómo leer un Dockerfile&lt;/li&gt;
&lt;li&gt;Problemas comunes al correr tu Dockerfile&lt;/li&gt;
&lt;li&gt;Analizar Dockerfile de una SPA&lt;/li&gt;
&lt;li&gt;Cómo construir tus propios dockerfile&lt;/li&gt;
&lt;li&gt;Keywords básicas sobre los Dockerfile&lt;/li&gt;
&lt;li&gt;Qué es alpine y porqué es usado&lt;/li&gt;
&lt;li&gt;Donde buscar imágenes para tus contenedores&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Usaré un ejemplo para que podamos entender mejor el funcionamiento de un Dockerfile, un ejemplo para una aplicación de react&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:current-alpine3.14&lt;/span&gt;

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; package.json /app&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;set &lt;/span&gt;&lt;span class="nv"&gt;progress&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 8086&lt;/span&gt;

&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["npm", "start"]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Si empleamos la similitud entre un contenedor de esos que los barcos transportan y los docker lo podemos entender de una manera mucho más sencilla y práctica.&lt;/p&gt;

&lt;p&gt;Es verdad que dentro de un contenedor puedes meter una cantidad exacta de mercancía, pero de diferentes tipos y estos poseen un tamaño específico para que sean fáciles de identificar y de llevar por los barcos.&lt;/p&gt;

&lt;p&gt;En docker funciona de forma similar, solo que nuestra mercancía es nuestra aplicación y las reglas son las siguientes.&lt;/p&gt;

&lt;p&gt;De manera práctica nos encontraremos con &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#from"&gt;
  &lt;/a&gt;
  FROM
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:current-alpine3.14&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Esto significa que se genera un contenedor a partir de una &lt;strong&gt;imagen&lt;/strong&gt;, podemos pensar en ella como un molde que es la primera capa de nuestro contenedor. Ella tendrá configuraciones específicas que servirán para correr los comandos consecuentes, puedes ver que uso node:current-alpine3.14&lt;/p&gt;

&lt;p&gt;Esta imagen la encuentro en la página de &lt;a href="https://hub.docker.com/_/node"&gt;docker hub&lt;/a&gt;, que podemos pensar en ella como un repositorio de imágenes, comúnmente buscarás &lt;strong&gt;imágenes oficiales&lt;/strong&gt; (estas tienen un símbolo de imagen oficial a lado del nombre). &lt;/p&gt;

&lt;p&gt;En docker funciona de forma similar, solo que nuestra mercancía es nuestra aplicación y las reglas son las siguientes.&lt;/p&gt;

&lt;p&gt;Ahora conocemos que esto de node:current-alpine3.14 es el nombre completo de la imagen que usamos como base, pero ¿Qué es alpine? Alpine es el sistema operativo (basado en linux) de nuestra imagen. Este nombre es famoso porque representa una imagen con un peso mínimo de mega bytes , y esto se busca para que tu contenedor final no pese mucho, ya que no conviene mucho tener tu aplicación de 50mb y que tu imagen base pese 250 mb.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#workdir"&gt;
  &lt;/a&gt;
  Workdir
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;El WORKDIR indica el directorio de trabajo, nos referimos a el como un directorio que se crea dentro del contenedor que se usará como base para correr los comandos consecuentes.&lt;/p&gt;

&lt;p&gt;Entonces conocemos que el workdir se refiere más a nuestro contenedor que a tu aplicación por eso verás que en muchos lugares se le conoce como /app, si tu aplicación usa sus archivos en src/, nada de preocupaciones, recuerda que se habla del contenedor y no tanto de tu aplicación, esto vendrá en los próximos comandos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#copy"&gt;
  &lt;/a&gt;
  COPY
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; package.json /app&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Los comandos COPY, hacen honor a su nombre de copiar los archivos de tu aplicación a la del contenedor /app.&lt;/p&gt;

&lt;p&gt;Primero copiamos el package.json porque de allí correremos comandos npm.&lt;/p&gt;

&lt;p&gt;Luego empleamos el COPY . . &lt;/p&gt;

&lt;p&gt;Admito que esto no es muy explicativo pero básicamente es copiar lo de tu directorio al directorio de trabajo (WORKDIR) el que ya habíamos específicado anteriormente. &lt;/p&gt;

&lt;p&gt;Podríamos traducir a COPY . /app&lt;/p&gt;

&lt;p&gt;El WORKDIR indica el directorio de trabajo, nos referimos a el como un directorio que se crea dentro del contenedor que se usará como base para correr los comandos consecuentes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#run"&gt;
  &lt;/a&gt;
  RUN
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;set &lt;/span&gt;&lt;span class="nv"&gt;progress&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Este puede aparecer bastante en el desarrollo de una aplicación, y hace lo que su nombre, corre en tu contenedor lo que le pongas a su izquierda así de simple.&lt;/p&gt;

&lt;p&gt;Usualmente cuando agarras una aplicación , lo primero que haces es instalar las dependencias porque sino la aplicación no corre, esto es un clásico. Bueno en docker sucede similar, corre el npm install que harías normalmente. Sobre el set progress=false es para que no meustre la barra de progreso al instalar dependencias , el &amp;amp;&amp;amp; une comandos por lo que le coloco npm install.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#expose"&gt;
  &lt;/a&gt;
  EXPOSE
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 8086&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;EXPOSE sirve para decir que el puerto que tu contenedor usará. &lt;/p&gt;

&lt;p&gt;Aquí está el dilema y es que colocarlo no hará efecto a la hora de correr el contenedor, entonces esto sirve más de documentación. Lee sobre como correr un contenedor&lt;/p&gt;

&lt;p&gt;En mi opinión está bien colocarlo porque la documentación es muy importante pero es bueno tener en cuenta que su utilidad es esa y a la hora de correrlo no esperar que abra en ese puerto por defecto.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cmd"&gt;
  &lt;/a&gt;
  CMD
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["npm", "start"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;CMD es la consola que corre el comando que coloques entre sus corchetes, esto sucederá cuando se termine de correr el contenedor.&lt;/p&gt;

&lt;p&gt;Quizá al final de la construcción de la imagen no se ejecute pero su función se realizará al final de correr el contenedor y no la construcción.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recapitulando"&gt;
  &lt;/a&gt;
  Recapitulando
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;
&lt;span class="c"&gt;# Usar una imagen  &lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:current-alpine3.14&lt;/span&gt;

&lt;span class="c"&gt;# Establecer el directorio de trabajo de nuestro contenedor&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app&lt;/span&gt;

&lt;span class="c"&gt;# Copiar el package.json a la carpeta /app de nuestro contenedor&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; package.json /app&lt;/span&gt;

&lt;span class="c"&gt;# Copiará otros archivos de la aplicación&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;

&lt;span class="c"&gt;# Ejecutar el comando npm set progress=false &amp;amp;&amp;amp; npm install&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;set &lt;/span&gt;&lt;span class="nv"&gt;progress&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="c"&gt;# Exponer el puerto 8086 de el contenedor docker, fin de documentación&lt;/span&gt;
&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 8086&lt;/span&gt;

&lt;span class="c"&gt;# Correrá este comando al final cuando se esté corriendo el contenedor&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["npm", "start"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#finalizando"&gt;
  &lt;/a&gt;
  Finalizando
&lt;/h2&gt;

&lt;p&gt;Al final de todo esto recuerda que puedes ejecutar el comando &lt;code&gt;docker build -t aplicacion-docker .&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-t&lt;/code&gt; significa que colocarás un tag que vendría a ser un nombre, aquí no puedes usar letras mayúsculas así que separo con un guión.&lt;/p&gt;

&lt;p&gt;El &lt;code&gt;.&lt;/code&gt; al final significa que buscará dentro de la carpeta un Dockerfile y lo leerá para crear una imagen a partir de las instrucciones, si abres la terminal desde otra carpeta y quieres correr el comando debes sustituir ese punto con la ubicación de el Dockerfile, lo mismo sucede si tienes más de un Dockerfile en tu aplicación pero esto es algo que no suele suceder.&lt;/p&gt;

&lt;p&gt;También quiero destacar que tu archivo se debe llamar Dockerfile, si le llamas DockerFile, u otro nombre te mandará error, este es un error frecuente también, recuerda Dockerfile.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>frontend</category>
    </item>
    <item>
      <title>11 Websites To Practice You Coding And Your Problem Solving Skills</title>
      <author>Aya Bouchiha</author>
      <pubDate>Thu, 12 Aug 2021 23:00:46 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/11-websites-to-practice-you-coding-and-your-problem-solving-skills-51k9</link>
      <guid>https://dev.to/ayabouchiha/11-websites-to-practice-you-coding-and-your-problem-solving-skills-51k9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#11-websites-to-practice-your-coding-and-problemsolving-skills"&gt;
  &lt;/a&gt;
  11 websites to practice your coding and problem-solving skills
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://coderbyte.com/"&gt;coderbyte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.topcoder.com/"&gt;topcoder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codewars.com/"&gt;codewars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/"&gt;Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackerrank.com/"&gt;hackerrank&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://exercism.io/"&gt;exercism&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codechef.com/"&gt;codechef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://coderbyte.com/"&gt;coderbyte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codefights.com/"&gt;coderfights&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.spoj.com/"&gt;SPOJ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codeforces.com/"&gt;codeforces&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#suggested-posts"&gt;
  &lt;/a&gt;
  Suggested Posts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/youtube-courses-projects-to-master-javascript-3lhc"&gt;Youtube Courses, Projects To Learn Javascript&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/you-complete-guide-to-set-object-in-javascript-12gc"&gt;You Complete Guide To Set Object In Javascript&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/all-js-string-methods-in-one-post-4h23"&gt;All JS String Methods In One Post!&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To Contact Me:&lt;/p&gt;

&lt;p&gt;email:&lt;a href="mailto:developer.aya.b@gmail.com"&gt;developer.aya.b@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;telegram: &lt;a href="https://t.me/AyaBouchiha"&gt;Aya Bouchiha&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have a nice day!&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>programming</category>
    </item>
    <item>
      <title>Build End-to-End Encryption in 51 lines of Rust</title>
      <author>Mrinal Wadhwa</author>
      <pubDate>Thu, 12 Aug 2021 22:19:41 +0000</pubDate>
      <link>https://dev.to/mrinal/build-end-to-end-encryption-in-51-lines-of-rust-340p</link>
      <guid>https://dev.to/mrinal/build-end-to-end-encryption-in-51-lines-of-rust-340p</guid>
      <description>&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ockam-network"&gt;
        ockam-network
      &lt;/a&gt; / &lt;a href="https://github.com/ockam-network/ockam"&gt;
        ockam
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      End-to-end encryption and mutual authentication for distributed applications.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Ockam is a &lt;a href="https://github.com/ockam-network/ockam"&gt;rust library&lt;/a&gt; that makes it simple for distributed applications to guarantee end-to-end integrity, authenticity, and confidentiality of data.&lt;/p&gt;

&lt;p&gt;In this post, we'll create two small Rust programs called Alice and Bob. Alice and Bob will send each other messages, over the network, via a cloud service. They will mutually authenticate each other and will have a cryptographic guarantee that en-route messages were not tampered or forged.&lt;/p&gt;

&lt;p&gt;The intermediary cloud service and attackers on the network will not be able to see or change the contents of en-route messages. In &lt;a href="https://github.com/ockam-network/ockam/tree/develop/documentation/guides/rust#readme"&gt;later examples&lt;/a&gt; we'll also see how we can have this end-to-end protection even when the communication path between Alice and Bob is more complex - with multiple transport connections, a variety of transport protocols and many intermediaries.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3IgHbSE0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iet0jafct83uggj57ygp.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3IgHbSE0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iet0jafct83uggj57ygp.jpeg" alt="Alice and Bob have an end-to-end protected secure channel between them that passes through a cloud service"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="#rust-example"&gt;Show me the code&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remove-implicit-trust-in-porous-network-boundaries"&gt;
  &lt;/a&gt;
  Remove implicit trust in porous network boundaries
&lt;/h3&gt;

&lt;p&gt;Modern distributed applications operate in highly dynamic environments. Infrastructure automation, microservices in multiple clouds or data centers, a mobile workforce, the Internet of Things, and Edge computing mean that machines and applications are continuously leaving and entering network boundaries. Application architects have learnt that they must lower the amount of trust they place in network boundaries and infrastructure.&lt;/p&gt;

&lt;p&gt;The vulnerability surface of our application cannot include &lt;em&gt;all code&lt;/em&gt; that may be running within the same porous network boundary. That surface is too big, too dynamic and usually outside the control of an application developer. Applications must instead take control of the security and reliability of their own data. To do this, all messages that are received over the network must prove who sent them and show that they weren't tampered with or forged.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lower-trust-in-intermediaries"&gt;
  &lt;/a&gt;
  Lower trust in intermediaries
&lt;/h3&gt;

&lt;p&gt;Another aspect of modern applications that can take away Alice's and Bob's ability to rely on the integrity and authenticity of incoming messages are intermediary services, such as the cloud service in our example below.&lt;/p&gt;

&lt;p&gt;Data, within distributed applications, are rarely exchanged over a single point-to-point transport connection. Application messages routinely flow over complex, multi-hop, multi-protocol routes — &lt;em&gt;across data centers, through queues and caches, via gateways and brokers&lt;/em&gt; — before reaching their end destination.&lt;/p&gt;

&lt;p&gt;Typically, when information or commands are exchanged through an intermediary service, the intermediary is able to &lt;code&gt;READ&lt;/code&gt; the messages that are being exchanged, &lt;code&gt;UPDATE&lt;/code&gt; en-route messages, &lt;code&gt;CREATE&lt;/code&gt; messages that were never sent, and &lt;code&gt;DELETE&lt;/code&gt; (never deliver) messages that were actually sent. Alice and Bob are entirely dependent on the security of such intermediaries. If the defenses of an intermediary are compromised, our application is also compromised.&lt;/p&gt;

&lt;p&gt;Transport layer security protocols are unable to protect application messages because their protection is constrained by the length and duration of the underlying transport connection. If there is an intermediary between Alice and Bob, the transport connection between Alice and the intermediary is completely different from the transport connection between Bob and the intermediary.&lt;/p&gt;

&lt;p&gt;This is why the intermediary has full &lt;code&gt;CRUD&lt;/code&gt; permissions on the messages in motion.&lt;/p&gt;

&lt;p&gt;In environments like &lt;em&gt;Microservices, Internet-of-Things, and Edge Computing&lt;/em&gt; there are usually many such intermediaries. Our application’s vulnerability surface quickly grows and becomes unmanageable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mutually-authenticated-endtoend-encrypted-secure-channels-with-ockam"&gt;
  &lt;/a&gt;
  Mutually Authenticated, End-to-End Encrypted Secure Channels with Ockam
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/ockam-network/ockam"&gt;Ockam&lt;/a&gt; crate makes it simple for applications to create any number of lightweight, mutually-authenticated, end-to-end encrypted secure channels. These channels use cryptography to guarantee end-to-end integrity, authenticity, and confidentiality of messages.&lt;/p&gt;

&lt;p&gt;An application can use Ockam Secure Channels to enforce &lt;strong&gt;least-privileged access&lt;/strong&gt; to commands, data, configuration, machine-learning models, and software updates that are flowing, as messages, between its distributed parts. Intermediary services and compromised software (that may be running within the same network boundary) no longer have implicit CRUD permissions on our application's messages. Instead, we have granular control over access permissions – tampering or forgery of &lt;em&gt;data-in-motion&lt;/em&gt; is immediately detected.&lt;/p&gt;

&lt;p&gt;With end-to-end secure channels, we can make the vulnerability surface of our application strikingly small.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rust-example"&gt;
  &lt;/a&gt;
  Rust Example
&lt;/h2&gt;

&lt;p&gt;Let's build end-to-end protected communication between Alice and Bob, through a cloud service.&lt;/p&gt;

&lt;p&gt;We'll create two small Rust programs called Alice and Bob. We want Bob to create a secure channel listener and ask Alice to initiate a secure handshake (authenticated key exchange) with this listener. We'll imagine that Bob and Alice are running on two separate computers and this handshake must happen over the Internet.&lt;/p&gt;

&lt;p&gt;We'll also imagine that Bob is running within a private network and cannot open a public port exposed to the Internet. Instead, Bob registers a forwarding address on an Ockam Node, running as a cloud service in Ockam Hub.&lt;/p&gt;

&lt;p&gt;This node is at TCP address &lt;code&gt;1.node.ockam.network:4000&lt;/code&gt; and offers two general purpose Ockam services: &lt;em&gt;routing and forwarding.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;

&lt;p&gt;If you don't have it, please &lt;a href="https://www.rust-lang.org/tools/install"&gt;install&lt;/a&gt; the latest version of Rust.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Next, create a new cargo project to get started:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cargo new --lib hello_ockam &amp;amp;&amp;amp; cd hello_ockam &amp;amp;&amp;amp; mkdir examples &amp;amp;&amp;amp;
  echo 'ockam = "*"' &amp;gt;&amp;gt; Cargo.toml &amp;amp;&amp;amp; cargo build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;If the above instructions don't work on your machine please &lt;a href="https://github.com/ockam-network/ockam/discussions/1642"&gt;post a question&lt;/a&gt;, we would love to help.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#bob"&gt;
  &lt;/a&gt;
  Bob
&lt;/h3&gt;

&lt;p&gt;Create a file at &lt;code&gt;examples/bob.rs&lt;/code&gt; and copy the below code snippet to it.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="c"&gt;// examples/bob.rs&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;ockam&lt;/span&gt;&lt;span class="p"&gt;::{&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Entity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SecureChannels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TrustEveryonePolicy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Vault&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;ockam&lt;/span&gt;&lt;span class="p"&gt;::{&lt;/span&gt;&lt;span class="n"&gt;RemoteForwarder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Routed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TcpTransport&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;Echoer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;// Define an Echoer worker that prints any message it receives and&lt;/span&gt;
&lt;span class="c"&gt;// echoes it back on its return route.&lt;/span&gt;
&lt;span class="nd"&gt;#[ockam::worker]&lt;/span&gt;
&lt;span class="k"&gt;impl&lt;/span&gt; &lt;span class="n"&gt;Worker&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;Echoer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;Message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;handle_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Routed&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[✓] Address: {}, Received: {}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="nf"&gt;.address&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c"&gt;// Echo the message body back on its return_route.&lt;/span&gt;
        &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="nf"&gt;.send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="nf"&gt;.return_route&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="nf"&gt;.body&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="k"&gt;.await&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nd"&gt;#[ockam::node]&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;// Initialize the TCP Transport.&lt;/span&gt;
    &lt;span class="nn"&gt;TcpTransport&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="k"&gt;.await&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;// Create a Vault to safely store secret keys for Bob.&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;vault&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;Vault&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;// Create an Entity to represent Bob.&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;bob&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;Entity&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;vault&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;// Create a secure channel listener for Bob that will wait for requests to&lt;/span&gt;
    &lt;span class="c"&gt;// initiate an Authenticated Key Exchange.&lt;/span&gt;
    &lt;span class="n"&gt;bob&lt;/span&gt;&lt;span class="nf"&gt;.create_secure_channel_listener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"listener"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TrustEveryonePolicy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;// The computer that is running this program is likely within a private network and&lt;/span&gt;
    &lt;span class="c"&gt;// not accessible over the internet.&lt;/span&gt;
    &lt;span class="c"&gt;//&lt;/span&gt;
    &lt;span class="c"&gt;// To allow Alice and others to initiate an end-to-end secure channel with this program&lt;/span&gt;
    &lt;span class="c"&gt;// we connect with 1.node.ockam.network:4000 as a TCP client and ask the forwarding&lt;/span&gt;
    &lt;span class="c"&gt;// service on that node to create a forwarder for us.&lt;/span&gt;
    &lt;span class="c"&gt;//&lt;/span&gt;
    &lt;span class="c"&gt;// All messages that arrive at that forwarding address will be sent to this program&lt;/span&gt;
    &lt;span class="c"&gt;// using the TCP connection we created as a client.&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;node_in_hub&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TCP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"1.node.ockam.network:4000"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;forwarder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;RemoteForwarder&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node_in_hub&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"listener"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="k"&gt;.await&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[✓] RemoteForwarder was created on the node at: 1.node.ockam.network:4000"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Forwarding address for Bob is:"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;forwarder&lt;/span&gt;&lt;span class="nf"&gt;.remote_address&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

    &lt;span class="c"&gt;// Start a worker, of type Echoer, at address "echoer".&lt;/span&gt;
    &lt;span class="c"&gt;// This worker will echo back every message it receives, along its return route.&lt;/span&gt;
    &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="nf"&gt;.start_worker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"echoer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Echoer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="k"&gt;.await&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;// We won't call ctx.stop() here, this program will run until you stop it with Ctrl-C&lt;/span&gt;
    &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(())&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#alice"&gt;
  &lt;/a&gt;
  Alice
&lt;/h3&gt;

&lt;p&gt;Create a file at &lt;code&gt;examples/alice.rs&lt;/code&gt; and copy the below code snippet to it.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="c"&gt;// examples/alice.rs&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;ockam&lt;/span&gt;&lt;span class="p"&gt;::{&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Entity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SecureChannels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TrustEveryonePolicy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Vault&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;ockam&lt;/span&gt;&lt;span class="p"&gt;::{&lt;/span&gt;&lt;span class="n"&gt;TcpTransport&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;std&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nd"&gt;#[ockam::node]&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;// Initialize the TCP Transport.&lt;/span&gt;
    &lt;span class="nn"&gt;TcpTransport&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="k"&gt;.await&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;// Create a Vault to safely store secret keys for Alice.&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;vault&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;Vault&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;// Create an Entity to represent Alice.&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;alice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;Entity&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;vault&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;// This program expects that Bob has setup a forwarding address,&lt;/span&gt;
    &lt;span class="c"&gt;// for his secure channel listener, on the Ockam node at 1.node.ockam.network:4000.&lt;/span&gt;
    &lt;span class="c"&gt;//&lt;/span&gt;
    &lt;span class="c"&gt;// From standard input, read this forwarding address for Bob's secure channel listener.&lt;/span&gt;
    &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Enter the forwarding address for Bob: "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;String&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nn"&gt;io&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="nf"&gt;.read_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error reading from stdin."&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;forwarding_address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="nf"&gt;.trim&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c"&gt;// Combine the tcp address of the node and the forwarding_address to get a route&lt;/span&gt;
    &lt;span class="c"&gt;// to Bob's secure channel listener.&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;route_to_bob_listener&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nd"&gt;route!&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;TCP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"1.node.ockam.network:4000"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;forwarding_address&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="c"&gt;// As Alice, connect to Bob's secure channel listener, and perform an&lt;/span&gt;
    &lt;span class="c"&gt;// Authenticated Key Exchange to establish an encrypted secure channel with Bob.&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;alice&lt;/span&gt;&lt;span class="nf"&gt;.create_secure_channel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;route_to_bob_listener&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TrustEveryonePolicy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[✓] End-to-end encrypted secure channel was established.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;loop&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;// Read a message from standard input.&lt;/span&gt;
        &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Type a message for Bob's echoer:"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;String&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nn"&gt;io&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="nf"&gt;.read_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error reading from stdin."&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="nf"&gt;.trim&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="c"&gt;// Send the provided message, through the channel, to Bob's echoer.&lt;/span&gt;
        &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="nf"&gt;.send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;route!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="nf"&gt;.clone&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;"echoer"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="nf"&gt;.to_string&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="k"&gt;.await&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c"&gt;// Wait to receive an echo and print it.&lt;/span&gt;
        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;reply&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="py"&gt;.receive&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="k"&gt;.await&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Alice received an echo: {}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c"&gt;// should print "Hello Ockam!"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// This program will keep running until you stop it with Ctrl-C&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#run-the-example"&gt;
  &lt;/a&gt;
  Run the example
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Run Bob’s program:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cargo run --example bob
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;The Bob program creates a Secure Channel Listener to accept requests to begin an Authenticated Key Exchange. It also connects, over TCP, to the cloud node at &lt;code&gt;1.node.ockam.network:4000&lt;/code&gt; and creates a Forwarder on that cloud node. All messages that arrive at that forwarding address will be forwarded to Bob using the TCP connection that Bob created as a client.&lt;/p&gt;

&lt;p&gt;Bob also starts an Echoer worker that prints any message it receives and echoes it back on its return route.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Bob program will print a hex value which is the forwarding address for Bob on the cloud node, copy it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In a separate terminal window, in the same directory path, run the Alice program:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cargo run --example alice
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It will stop to ask for Bob's forwarding address that was printed in step 2. Give it that address.&lt;/p&gt;

&lt;p&gt;This will tell Alice that the route to reach Bob is:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[(TCP, "1.node.ockam.network:4000"), forwarding_address]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When Alice sends a message along this route, the Ockam routing layer will look at the first address in the route and hand the message to the TCP transport. The TCP transport will connect with the cloud node over TCP and hand the message to it.&lt;/p&gt;

&lt;p&gt;The routing layer on the cloud node will then take the message to the forwarding address for Bob. The forwarder at that address will send the message to Bob over the TCP connection Bob had earlier created with the cloud node.&lt;/p&gt;

&lt;p&gt;Replies, from Bob, take the same path back and the entire secure channel handshake is completed is this way.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;End-to-end Secure Channel is established. Send messages to Bob and get their echoes back.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once the secure channel is established, the Alice program will stop and ask you to enter a message for Bob. Any message that you enter, is delivered to Bob using the secure channel, via the cloud node. The echoer on Bob will echo the messages back on the same path and Alice will print it.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Congratulations on creating your first end-to-end encrypted application 🥳.&lt;/p&gt;

&lt;p&gt;We discussed that, in order to have a small and manageable vulnerability surface, distributed applications must use mutually authenticated, end-to-end encrypted channels. Implementing an end-to-end secure channel protocol, from scratch, is complex, error prone, and will take more time than application teams can typically dedicate to this problem.&lt;/p&gt;

&lt;p&gt;In the above example, we created a mutually authenticated, end-to-end encrypted channel in &lt;strong&gt;51 lines of code&lt;/strong&gt; (excluding comments).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ockam-network/ockam"&gt;Ockam&lt;/a&gt; combines proven cryptographic building blocks into a set of reusable protocols for distributed applications to communicate security and privately. The above example only scratched the surface of what is possible with the tools that our included in the &lt;code&gt;ockam&lt;/code&gt; Rust crate.&lt;/p&gt;

&lt;p&gt;To learn more, please see our use-case guide on &lt;a href="https://github.com/ockam-network/ockam/tree/develop/documentation/use-cases/end-to-end-encryption-through-kafka#readme"&gt;End-to-End Encryption through Kafka&lt;/a&gt; 🦀 and our &lt;a href="https://github.com/ockam-network/ockam/tree/develop/documentation/guides/rust#step-by-step"&gt;Step-by-Step Deep Dive&lt;/a&gt; 🦀 into the various building blocks that makeup &lt;a href="https://github.com/ockam-network/ockam"&gt;Ockam&lt;/a&gt;. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ockam-network"&gt;
        ockam-network
      &lt;/a&gt; / &lt;a href="https://github.com/ockam-network/ockam"&gt;
        ockam
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      End-to-end encryption and mutual authentication for distributed applications.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>rust</category>
      <category>security</category>
      <category>showdev</category>
      <category>technology</category>
    </item>
    <item>
      <title>Styling issues with response Templates Buttons</title>
      <author>Thomas Bnt</author>
      <pubDate>Thu, 12 Aug 2021 21:49:14 +0000</pubDate>
      <link>https://dev.to/thomasbnt/styling-issues-with-response-templates-buttons-20jf</link>
      <guid>https://dev.to/thomasbnt/styling-issues-with-response-templates-buttons-20jf</guid>
      <description>&lt;p&gt;Hello here! I'm Thomas and 22 years old. I really in love of DEV.to(gether) and sometimes I contribute to the code. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#open-source-background"&gt;
  &lt;/a&gt;
  Open Source Background
&lt;/h3&gt;

&lt;p&gt;I started a few years ago to contribute to Open Source projects, basically I love helping people. &lt;/p&gt;

&lt;p&gt;This merger allowed me to better understand some aspects of web developers, to say that you are never alone with a problem, that you can always be helped. You just have to ask!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-this-bug"&gt;
  &lt;/a&gt;
  About This Bug
&lt;/h3&gt;

&lt;p&gt;I have already seen this possibility issue, but never created a new issue on the repository. it's absolutely nothing but seeing buttons with a default style, it stings my eyes 😵 &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PNZ8_ySg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.thomasbnt.dev/i/y4i7o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PNZ8_ySg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.thomasbnt.dev/i/y4i7o.png" alt="Preview of the default buttons"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/13747"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Styling Issues With Response Templates Buttons
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#13747&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/michael-tharrington"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s----ubsuNC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/16007075%3Fv%3D4" alt="michael-tharrington avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/michael-tharrington"&gt;michael-tharrington&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/13747"&gt;&lt;time&gt;May 12, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;&lt;strong&gt;Describe the bug&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The moderator templates button under response templates is not styled.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The buttons should be styled so that you can see when you click on one!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Screenshots&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/16007075/117997048-a68c6700-b310-11eb-8148-dd425b3b01f9.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PfA5EAoh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/16007075/117997048-a68c6700-b310-11eb-8148-dd425b3b01f9.png" alt="Image 2021-05-12 at 9 28 42 AM"&gt;&lt;/a&gt;&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/13747"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#how-i-smashed-it"&gt;
  &lt;/a&gt;
  How I Smashed It
&lt;/h3&gt;

&lt;p&gt;I modified the style of the two buttons while adding a black color to the &lt;code&gt;active&lt;/code&gt; class. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OGIXc-3X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.thomasbnt.dev/i/156452615641516_devto.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OGIXc-3X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.thomasbnt.dev/i/156452615641516_devto.gif" alt="Preview of buttons stylised"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Others themes work, good! &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kuXg3Y_F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.thomasbnt.dev/i/yp43g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kuXg3Y_F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.thomasbnt.dev/i/yp43g.png" alt="Others themes colors"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oh and edited &lt;strong&gt;submit buttons&lt;/strong&gt; like 'Send as Mod' and 'Insert'. More margin 😎&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--djdbGtwd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/14293805/129024997-5c0ac9c7-c1f8-4827-bf01-a46bca22b691.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--djdbGtwd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/14293805/129024997-5c0ac9c7-c1f8-4827-bf01-a46bca22b691.png" alt="Two buttons with style"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/pull/14468"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Edit buttons styles for Templates responses (Mod)
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#14468&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/thomasbnt"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--CDzcgoCT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/14293805%3Fv%3D4" alt="thomasbnt avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/thomasbnt"&gt;thomasbnt&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/pull/14468"&gt;&lt;time&gt;Aug 10, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;h2&gt;
&lt;a id="user-content-what-type-of-pr-is-this-check-all-applicable" class="anchor" href="#what-type-of-pr-is-this-check-all-applicable"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;What type of PR is this? (check all applicable)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Refactor&lt;/li&gt;
&lt;li&gt;[ ] Feature&lt;/li&gt;
&lt;li&gt;[ ] Bug Fix&lt;/li&gt;
&lt;li&gt;[ ] Optimization&lt;/li&gt;
&lt;li&gt;[ ] Documentation Update&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-description" class="anchor" href="#description"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;Make styles for buttons "Personal" and "Moderator" for &lt;strong&gt;Templates responses&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
&lt;a id="user-content-related-tickets--documents" class="anchor" href="#related-tickets--documents"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Related Tickets &amp;amp; Documents&lt;/h2&gt;
&lt;p&gt;From &lt;a href="https://github.com/forem/forem/issues/13747"&gt;https://github.com/forem/forem/issues/13747&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
&lt;a id="user-content-qa-instructions-screenshots-recordings" class="anchor" href="#qa-instructions-screenshots-recordings"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;QA Instructions, Screenshots, Recordings&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/14293805/128946040-412c7195-ad9b-4c2b-8186-2dcba84a992f.mp4" rel="nofollow"&gt;https://user-images.githubusercontent.com/14293805/128946040-412c7195-ad9b-4c2b-8186-2dcba84a992f.mp4&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
&lt;a id="user-content-addedupdated-tests" class="anchor" href="#addedupdated-tests"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Added/updated tests?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Yes&lt;/li&gt;
&lt;li&gt;[ ] No, and this is why: &lt;em&gt;please replace this line with details on why tests
have not been included&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;[ ] I need help with writing tests&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-forem-core-team-only-how-will-this-change-be-communicated" class="anchor" href="#forem-core-team-only-how-will-this-change-be-communicated"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;[Forem core team only] How will this change be communicated?&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Will this PR introduce a change that impacts Forem members or creators, the
development process, or any of our internal teams? If so, please note how you
will share this change with the people who need to know about it.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[ ] I've updated the &lt;a href="https://docs.forem.com" rel="nofollow"&gt;Developer Docs&lt;/a&gt; and/or
&lt;a href="https://admin.forem.com/" rel="nofollow"&gt;Admin Guide&lt;/a&gt;, or
&lt;a href="https://storybook.forem.com/" rel="nofollow"&gt;Storybook&lt;/a&gt; (for Crayons components)&lt;/li&gt;
&lt;li&gt;[ ] I've updated the README or added inline documentation&lt;/li&gt;
&lt;li&gt;[ ] I've added an entry to
&lt;a href="https://github.com/forem/forem/tree/main/CHANGELOG.md"&gt;&lt;code&gt;CHANGELOG.md&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;[ ] I will share this change in a &lt;a href="https://forem.dev/t/changelog" rel="nofollow"&gt;Changelog&lt;/a&gt;
or in a &lt;a href="http://forem.dev" rel="nofollow"&gt;forem.dev&lt;/a&gt; post&lt;/li&gt;
&lt;li&gt;[ ] I will share this change internally with the appropriate teams&lt;/li&gt;
&lt;li&gt;[ ] I'm not sure how best to communicate this change and need help&lt;/li&gt;
&lt;li&gt;[ ] This change does not need to be communicated, and this is why not: &lt;em&gt;please
replace this line with details on why this change doesn't need to be
shared&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-optional-what-gif-best-describes-this-pr-or-how-it-makes-you-feel" class="anchor" href="#optional-what-gif-best-describes-this-pr-or-how-it-makes-you-feel"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;[optional] What gif best describes this PR or how it makes you feel?&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://camo.githubusercontent.com/27598177e106725893e571e8ebfca4933b4da2ecd64ccaca6a1c85f7c31f5ded/68747470733a2f2f632e74656e6f722e636f6d2f734f77357662443961346b41414141432f6e65772d6769726c2d6669737462756d702e676966" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/27598177e106725893e571e8ebfca4933b4da2ecd64ccaca6a1c85f7c31f5ded/68747470733a2f2f632e74656e6f722e636f6d2f734f77357662443961346b41414141432f6e65772d6769726c2d6669737462756d702e676966" alt="New Girl Fistbump GIF"&gt;&lt;/a&gt;&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/pull/14468"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#reflection"&gt;
  &lt;/a&gt;
  Reflection
&lt;/h3&gt;

&lt;p&gt;I learned how used &lt;code&gt;@extend&lt;/code&gt; with &lt;strong&gt;SCSS&lt;/strong&gt;. Pretty nice tool, yeah! 💪🏼&lt;br&gt;
Maybe smash others bugs like that for Forem 😎&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#suggestions-for-dev-community-bug-smash"&gt;
  &lt;/a&gt;
  Suggestions for DEV Community Bug Smash
&lt;/h3&gt;

&lt;p&gt;Noope ! Just thanks &lt;em&gt;again&lt;/em&gt; to &lt;a class="mentioned-user" href="https://dev.to/nickytonline"&gt;@nickytonline&lt;/a&gt;
 &lt;a class="mentioned-user" href="https://dev.to/rhymes"&gt;@rhymes&lt;/a&gt;
 &lt;a class="mentioned-user" href="https://dev.to/citizen428"&gt;@citizen428&lt;/a&gt;
 &lt;a class="mentioned-user" href="https://dev.to/s_aitchison"&gt;@s_aitchison&lt;/a&gt;
 and &lt;a class="mentioned-user" href="https://dev.to/coffeecraftcode"&gt;@coffeecraftcode&lt;/a&gt;
 for helping me ! &lt;/p&gt;

</description>
      <category>devbugsmash</category>
    </item>
    <item>
      <title>Are you on TikTok?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Thu, 12 Aug 2021 21:20:12 +0000</pubDate>
      <link>https://dev.to/devteam/are-you-on-tiktok-546h</link>
      <guid>https://dev.to/devteam/are-you-on-tiktok-546h</guid>
      <description>&lt;p&gt;I don't know about you, but I frequently find myself &lt;em&gt;lost&lt;/em&gt; in TikTok's #techtok content. There are so many brilliant content creators and software developers there sharing clips of their skills, inner monologues, humor, and beyond. Who knew that so much could be communicated and captured in just a few seconds? 🤯 &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#if-youre-a-software-developer-whos-also-on-tiktok-share-your-profile-in-the-comments-below-so-we-can-all-follow-you"&gt;
  &lt;/a&gt;
  If you're a software developer who's also on TikTok, share your profile in the comments below so we can all follow you!
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;I also wanted to let you know that, whether you're on TikTok or not, there's an awesome opportunity to be featured on the &lt;a href="https://codelandconf.com"&gt;CodeLand 2021&lt;/a&gt; program using your skills and personality as a developer...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CodeLand Recess&lt;/strong&gt; is a community-sourced track of short TikTok-&lt;em&gt;style&lt;/em&gt; videos that will lend some fun, humor, and developer-realness to the day's events. We'd love to see a video submission from you! &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;All CodeLand Recess video submissions are due by August 20th by 11:59 PM PT (6 AM UTC the following day).&lt;/strong&gt; Get yours in soon! Instructions and examples &lt;a href="https://community.codenewbie.org/codenewbie/reminder-submit-a-short-video-for-codeland-recess-by-august-20th-4623"&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#share-your-tiktok-profile-in-the-comments-below-and-consider-submitting-a-video-to-codeland-recess"&gt;
  &lt;/a&gt;
  Share your TikTok profile in the comments below — and consider submitting a video to &lt;a href="https://community.codenewbie.org/codenewbie/reminder-submit-a-short-video-for-codeland-recess-by-august-20th-4623"&gt;CodeLand Recess&lt;/a&gt;!
&lt;/h2&gt;

</description>
      <category>discuss</category>
      <category>codenewbie</category>
      <category>codeland</category>
    </item>
    <item>
      <title>Pure CSS Flex Box Responsive Design - No Media Queries</title>
      <author>TechSnack - Technology Tutorials</author>
      <pubDate>Thu, 12 Aug 2021 20:57:01 +0000</pubDate>
      <link>https://dev.to/techsnack/pure-css-flex-box-responsive-design-no-media-queries-p7o</link>
      <guid>https://dev.to/techsnack/pure-css-flex-box-responsive-design-no-media-queries-p7o</guid>
      <description>&lt;h2&gt;
  &lt;a href="#responsive-design-doesnt-have-to-be-hard"&gt;
  &lt;/a&gt;
  Responsive Design Doesn't Have To Be Hard
&lt;/h2&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/romesbergjames/embed/mdmaxGv?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#with-flex-box-we-can-easily-make-our-webpage-act-as-a-responsive-container-without-media-queries"&gt;
  &lt;/a&gt;
  With Flex Box we can easily make our webpage act as a responsive container without media queries!
&lt;/h3&gt;

&lt;p&gt;To start with we are going to quickly create a file with the following HTML inside of it&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="viewport flex-parent flex-col"&amp;gt;
    &amp;lt;div class="nav flex-parent space-around"&amp;gt;
        &amp;lt;div class="box-1"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class="box-2"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class="box-3"&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class="content flex-parent"&amp;gt;
        &amp;lt;div class="sidebar-left"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class="main-area"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class="sidebar-right"&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class="footer flex-parent space-evenly"&amp;gt;
        &amp;lt;div class="box-4"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class="box-5"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class="box-6"&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;...and this is it for the HTML. That's our entire page!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#now-the-css"&gt;
  &lt;/a&gt;
  Now the CSS
&lt;/h2&gt;

&lt;p&gt;At this point the page is blank. We will fix that by styling it right now. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-endraw-css-reset"&gt;
  &lt;/a&gt;
  &lt;code&gt;*&lt;/code&gt; CSS RESET
&lt;/h3&gt;

&lt;p&gt;The first thing we will do is a basic reset to all of the elements in the document. This will set everything to border-box sizing and remove all margins and padding.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;*{
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
  &lt;a href="#-raw-viewport-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;.viewport&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;We can now create the &lt;code&gt;viewport&lt;/code&gt; class. We want this element to take up all available space within the device's screen.&lt;br&gt;
Just to emphasize where the viewport is we will also give it a large black border (this is not necessary when you have inner content or other elements to display)&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.viewport{
    min-height: 100vh;
    min-width: 100%;
    border: 5px solid black;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Next we can make our &lt;code&gt;viewport&lt;/code&gt; class responsive with the following class. &lt;code&gt;.viewport&lt;/code&gt; is now a Flex Box container!&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.flex-parent{
    display: flex;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;By default Flex Box containers display vertically but we would like our &lt;code&gt;viewport flex-parent&lt;/code&gt; element to display horizontally. We can achieve this with the following flex property.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.flex-col{
    flex-direction: column;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#thats-it-for-the-flex-box-container"&gt;
  &lt;/a&gt;
  That's it for the flex box container.
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#now-we-can-begin-creating-the-flex-children"&gt;
  &lt;/a&gt;
  Now we can begin creating the flex children.
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#-raw-nav-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;.nav&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The first child element will be &lt;code&gt;.nav&lt;/code&gt; This is our general header area. Let's make the width &lt;code&gt;100%&lt;/code&gt; of the container's width and the height &lt;code&gt;20vh&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.nav{
    min-width: 100%;
    min-height: 20vh;
    border: 5px dashed blue;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Since we want to place elements inside of &lt;code&gt;.nav&lt;/code&gt; we will give it the class &lt;code&gt;.flex-parent&lt;/code&gt; and we will also demonstrate a key aspect of Flex Box here.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-raw-justifycontent-endraw-flex-property"&gt;
  &lt;/a&gt;
  The &lt;code&gt;justify-content&lt;/code&gt; flex property
&lt;/h3&gt;

&lt;p&gt;Empty space is crucial. If you have ever attempted to position something with pure CSS without the use of Flex Box or CSS Grids then you know how difficult this is to get right. Luckily, Flex Box has a property called &lt;code&gt;justify-content&lt;/code&gt; that can do this for us in various ways.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-spacearound-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;.space-around&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;We are going use the following code to place the white space around each element.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.space-around{
    justify-content: space-around;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
  &lt;a href="#-raw-spaceevenly-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;.space-evenly&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;and while we are here we will make another class for later except using &lt;code&gt;space-evenly&lt;/code&gt; which works similarly to &lt;code&gt;space-around&lt;/code&gt; with one major difference. With &lt;code&gt;space-evenly&lt;/code&gt; the white on the left of the furthest and the right of the furthest right elements will also be part of the spacing distribution!&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.space-evenly{
    justify-content: space-evenly;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;justify-content&lt;/code&gt; property deals with our &lt;code&gt;main axis&lt;/code&gt;. Which in this case is the &lt;code&gt;x axis&lt;/code&gt; or &lt;code&gt;horizontal axis&lt;/code&gt;. this would act differently if this had a class of &lt;code&gt;.flex-col&lt;/code&gt;. Go ahead and try it out!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-nav-endraw-inner-elements"&gt;
  &lt;/a&gt;
  &lt;code&gt;.nav&lt;/code&gt; inner elements
&lt;/h2&gt;

&lt;p&gt;Now we can go worry about the elements within &lt;code&gt;.nav&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I want to be able to easily change the value of one element without affecting another. For this we will create a different class for each element. This is not entirely necessary but will save stress down the road.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.box-1{
    min-width: 20vw;
    background-color: yellow;
}

.box-2{
    min-width: 20vw;
    background-color: purple;
}

.box-3{
    min-width: 20vw;
    background-color: red;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Take a look! The content does not overflow from the page and everything inside of &lt;code&gt;.nav&lt;/code&gt; scales with the screen size!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#we-can-now-style-the-rest-of-our-elements"&gt;
  &lt;/a&gt;
  We can now style the rest of our elements!
&lt;/h2&gt;

&lt;p&gt;First we will place &lt;code&gt;.content&lt;/code&gt; and &lt;code&gt;.footer&lt;/code&gt; onto the page&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-content-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;.content&lt;/code&gt;
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.content{&lt;br&gt;
    min-width: 100%;&lt;br&gt;
    min-height: 80vh;&lt;br&gt;
    border: 5px dashed orange;&lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;br&gt;
  &lt;a href="#-raw-footer-endraw-"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;code&gt;.footer&lt;/code&gt;&lt;br&gt;
&lt;/h3&gt;
&lt;br&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.footer{&lt;br&gt;
    min-width: 100%;&lt;br&gt;
    min-height: 20vh;&lt;br&gt;
    border: 5px solid cyan;&lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
&lt;br&gt;
  &lt;a href="#-raw-content-endraw-inner-elements"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;code&gt;.content&lt;/code&gt; inner elements&lt;br&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#-raw-sidebarleft-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;.sidebar-left&lt;/code&gt;
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.sidebar-left{&lt;br&gt;
    min-width: 20%;&lt;br&gt;
    background: teal;&lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;br&gt;
  &lt;a href="#-raw-mainarea-endraw-"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;code&gt;.main-area&lt;/code&gt;&lt;br&gt;
&lt;/h3&gt;
&lt;br&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.main-area{&lt;br&gt;
    min-width: 60%;&lt;br&gt;
    background: green;&lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;br&gt;
  &lt;a href="#-raw-sidebarright-endraw-"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;code&gt;.sidebar-right&lt;/code&gt;&lt;br&gt;
&lt;/h3&gt;
&lt;br&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.sidebar-right{&lt;br&gt;
    min-width: 20%;&lt;br&gt;
    background: blue;&lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
&lt;br&gt;
  &lt;a href="#-raw-footer-endraw-inner-elements"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;code&gt;.footer&lt;/code&gt; inner elements&lt;br&gt;
&lt;/h2&gt;
&lt;br&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.box-4{&lt;br&gt;
    min-width: 15%;&lt;br&gt;
    background: pink;&lt;br&gt;
}

&lt;p&gt;.box-5{&lt;br&gt;
    min-width: 30%;&lt;br&gt;
    background: maroon;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.box-6{&lt;br&gt;
    min-width: 20%;&lt;br&gt;
    background: black;&lt;br&gt;
}&lt;br&gt;
&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
&lt;br&gt;
  &lt;a href="#the-results"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  The Results&lt;br&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#desktop"&gt;
  &lt;/a&gt;
  Desktop
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qkt8t_E5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xo15ap1e3d43gua9eox.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qkt8t_E5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xo15ap1e3d43gua9eox.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h-e_yCKa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6dylthwd7f1y8lc63f9b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h-e_yCKa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6dylthwd7f1y8lc63f9b.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tablet"&gt;
  &lt;/a&gt;
  Tablet
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OFbNDFI4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qa9f670j1079j0q9mq4w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OFbNDFI4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qa9f670j1079j0q9mq4w.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LhIthfJw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zs14hyp07hg2h5orpi2a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LhIthfJw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zs14hyp07hg2h5orpi2a.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mobile"&gt;
  &lt;/a&gt;
  Mobile
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lB_YdkR_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5e9gxcvb60klvy1bbkb8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lB_YdkR_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5e9gxcvb60klvy1bbkb8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--35U-mHMd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrhvzjjiox7wu1em7310.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--35U-mHMd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrhvzjjiox7wu1em7310.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;If you made it this far thank you! I hope you have a better understanding of what Flex Box is and how it can better help us make responsive designs easily without stressing too much.&lt;/p&gt;

&lt;p&gt;This was a bonus article today. Stay tuned for an Intro to Version Control later!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>MasquerBot: A Telegram Bot for true paranoids</title>
      <author>Parth Agarwal</author>
      <pubDate>Thu, 12 Aug 2021 20:33:18 +0000</pubDate>
      <link>https://dev.to/ra101/a-telegrambot-for-true-paranoids-16po</link>
      <guid>https://dev.to/ra101/a-telegrambot-for-true-paranoids-16po</guid>
      <description>&lt;center&gt;
&lt;h3&gt;
  &lt;a href="#httpstmemasquerbot"&gt;
  &lt;/a&gt;
  &lt;a href="https://t.me/MasquerBot"&gt;https://t.me/MasquerBot&lt;/a&gt;
&lt;/h3&gt;




&lt;/center&gt;
&lt;br&gt;&lt;br&gt;
I watched Snowden in 2016. It was the year, I became paranoid. 👻

&lt;p&gt;Introducing 𝗠𝗮𝘀𝗾𝘂𝗲𝗿𝗕𝗼𝘁! It is a telegram bot that can hide any given text message inside any given image, by manipulating the very pixels of that image (steganography)&lt;/p&gt;

&lt;p&gt;• URL changes every 6 hrs, with 130 char long, therefore making it impossible to trace by anyone other than Telegram.&lt;/p&gt;

&lt;p&gt;𝘍𝘢𝘳 𝘣𝘦𝘵𝘵𝘦𝘳 𝘥𝘰𝘤𝘶𝘮𝘦𝘯𝘵𝘢𝘵𝘪𝘰𝘯 𝘪𝘴 𝘰𝘯 𝘨𝘪𝘵𝘩𝘶𝘣, 𝘭𝘪𝘯𝘬𝘴 𝘢𝘵 𝘵𝘩𝘦 𝘦𝘯𝘥.&lt;/p&gt;

&lt;p&gt;📈 𝗪𝗼𝗿𝗸𝗳𝗹𝗼𝘄:&lt;/p&gt;

&lt;p&gt;• It works by creating an ECDSA encryption 🔑🗝key pair, returns you the 🔑public key, to distribute.&lt;/p&gt;

&lt;p&gt;• To encrypt, one will have to send your 🔑key along with ✉text and 🖼image.&lt;/p&gt;

&lt;p&gt;• The bot will encrypt the text and hide it then it will return the 🖼 encode-image.&lt;/p&gt;

&lt;p&gt;• You as a recipient will send the encoded-image to the bot. and it will take your 🗝private key from the 📒database and will send you the hidden ✉text.&lt;/p&gt;

&lt;p&gt;PS: Icon is not just eye-candy for otakus. try "/icon" command, within the bot. I bet you will love it. 😉&lt;/p&gt;

&lt;p&gt;⚡𝗟𝗶𝗻𝗸𝘀:&lt;br&gt;
Github: &lt;a href="https://github.com/ra101/MasquerBot"&gt;https://github.com/ra101/MasquerBot&lt;/a&gt;&lt;br&gt;
LBRY: &lt;a href="https://lbry.tv/@ra101/MasquerBot"&gt;https://lbry.tv/@ra101/MasquerBot&lt;/a&gt;&lt;/p&gt;

</description>
      <category>telegram</category>
      <category>python</category>
      <category>heroku</category>
      <category>cryptography</category>
    </item>
    <item>
      <title>Supercharge Your Coding in Visual Studio</title>
      <author>Scott Hintze</author>
      <pubDate>Thu, 12 Aug 2021 20:04:36 +0000</pubDate>
      <link>https://dev.to/dealeron/supercharge-your-coding-in-visual-studio-159h</link>
      <guid>https://dev.to/dealeron/supercharge-your-coding-in-visual-studio-159h</guid>
      <description>&lt;h1&gt;
  &lt;a href="#keyboard-shortcuts"&gt;
  &lt;/a&gt;
  Keyboard Shortcuts
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#hold-down-alt-when-selecting-text"&gt;
  &lt;/a&gt;
  Hold Down Alt when Selecting Text
&lt;/h2&gt;

&lt;p&gt;Let’s say you have a list of variables and you decide to change the scope from public to protected. You could use find and replace on the selected text, or you could just copy/paste over each modifier. Another option is block selecting. Holding down the Alt key while selecting allows you to include multiple lines to the position of the cursor rather than the entire line. The result is that when you type, cut or paste, it applies to every line selected. You could select all the public modifiers and simply type or paste protected to edit them all at once.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CgsCPSu0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8gvmwbttnay9944knol3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CgsCPSu0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8gvmwbttnay9944knol3.png" alt="alt text" title="Block Selection Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ctrl-x-and-ctrl-v-with-nothing-selected"&gt;
  &lt;/a&gt;
  Ctrl + X and Ctrl + V with nothing selected
&lt;/h2&gt;

&lt;p&gt;Cut and paste? What is so special about these? In Visual Studio. If you have nothing selected, the cut command will cut the entire line and paste will insert the entire line above the cursor. When moving lines around, this method is very fast.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ctrl-k-c-comment-and-ctrl-k-u-uncomment-with-nothing-selected"&gt;
  &lt;/a&gt;
  Ctrl + K + C (comment) and Ctrl + K + U (uncomment) with nothing selected
&lt;/h2&gt;

&lt;p&gt;These commands will comment and uncomment the entire line when no text is selected. When text is selected, they will comment and uncomment the selection. The uncomment shortcut will uncomment even if no text is selected as long as the cursor is within commented code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#better-commenting"&gt;
  &lt;/a&gt;
  Better Commenting
&lt;/h3&gt;

&lt;p&gt;As nice as the default comment shortcuts are, you still have to use both hands. That can get tedious if you are doing a lot. Here is an easier combo to make it even faster.&lt;br&gt;
Go to Tools&amp;gt;Options, then find the Environment&amp;gt;Keyboard node.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TNyIaEZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9tsnv9rz77spucehgzo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TNyIaEZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9tsnv9rz77spucehgzo.png" alt="alt text" title="Better comments step 1 image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the “Show commands containing box” enter “comment” (no quotes).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6QBaL2ru--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tbc4fg5rkglhx92pfkk8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6QBaL2ru--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tbc4fg5rkglhx92pfkk8.png" alt="alt text" title="Better comments step 2 image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select the Edit.ToggleLineComment shortcut and click in the “Press shortcut key” input field. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---HOy_Po---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g8gnpg7it2wxj46yhfia.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---HOy_Po---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g8gnpg7it2wxj46yhfia.png" alt="alt text" title="Better comments step 3 image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Press Left Ctrl + Left Windows, then click “Assign”&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2uEA8OpG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3wm5cmcsus7af2p8vzc1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2uEA8OpG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3wm5cmcsus7af2p8vzc1.png" alt="alt text" title="Better comments step 4 image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Repeat the process for Edit.UncommentSelection using Left Alt + Left Windows&lt;/p&gt;

&lt;p&gt;Setting these shortcuts allows you to keep one hand on the mouse or arrow keys to navigate the code and the other to comment and uncomment quickly.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#visual-studio-has-a-back-button"&gt;
  &lt;/a&gt;
  Visual Studio has a Back Button?!
&lt;/h1&gt;

&lt;p&gt;Ever feel you are a bit like Alice and falling down the rabbit hole when navigating code? Visual Studio has a back button that tracks a history of where your cursor has been. Just click to go back through and retrace your steps. You can also click the down arrow to see the history list.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aeoippa4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nb8iib5uiqx87s9w7euq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aeoippa4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nb8iib5uiqx87s9w7euq.png" alt="alt text" title="Visual Studio back button image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tedious-code"&gt;
  &lt;/a&gt;
  Tedious Code
&lt;/h1&gt;

&lt;p&gt;Repetitive code, such as mapping database tables to object models, can be a real downer to a good programming groove. Here’s how to use simple Excel formulas to write hundreds of lines of code in seconds.&lt;br&gt;
Get a list of the variable names or database fields without any extra punctuation. Then, paste the list into column A of your blank Excel sheet.&lt;br&gt;
Excel string formulas are fairly straightforward. The basic syntax is =”string literal” &amp;amp; A1 &amp;amp; “string literal”. The quotes indicate literal text. Use ”” to escape a double quote in the string. Let’s say your variable name is Id and is located in the A1 cell of your sheet and you want to create a public string accessor property for it. The formula would be &lt;code&gt;=”public string ” &amp;amp; TRIM(A1)  &amp;amp; “{ get; set; }”&lt;/code&gt; Now, you just use the Excel fill handle and pull it down your list to "write" that line of code for each variable.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UKZEWCkA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxb2w98pzt0fabiit1p2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UKZEWCkA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxb2w98pzt0fabiit1p2.png" alt="alt text" title="Excel coding step 1 image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vqomac-0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owjuvdjvogfoug4gkuoi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vqomac-0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owjuvdjvogfoug4gkuoi.png" alt="alt text" title="Excel coding step 2 image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>csharp</category>
    </item>
    <item>
      <title>Trabalhe para fora em 2021</title>
      <author>Programador Sincero</author>
      <pubDate>Thu, 12 Aug 2021 20:00:47 +0000</pubDate>
      <link>https://dev.to/devsincero/trabalhe-para-fora-em-2021-16fd</link>
      <guid>https://dev.to/devsincero/trabalhe-para-fora-em-2021-16fd</guid>
      <description>&lt;p&gt;Quem já tem uma boa experiência na área de programação, em 2021, tem chances muito maiores de conseguir um bom emprego, ganhando em moeda estrangeira e com atividades que exijam menor responsabilidade e tempo diário. &lt;/p&gt;

&lt;p&gt;Um programador de alta qualidade técnica, se estiver ainda na área técnica, estará vivenciando os cenários abaixo, que são bem ruins e praticamente eram o destino no nosso mercado antes da pandemia. Eu levantei alguns pontos interessantes abaixo. Segue o fio:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Seu perfil no LinkedIn, quando bem preenchido e cheio de boas experiências, atrai inúmeras consultorias do Brasil. Se o seu perfil está preenchido em Inglês, melhor ainda - o mercado internacional de software está de braços abertos para você. Espera-se que você esteja recebendo muitos convites diários para processos seletivos.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Se você não está trazendo pelo menos 20 mil LÍQUIDOS mensalmente, você está fazendo algo errado. Reveja sua estratégia. Eu pessoalmente trago muito mais que isso.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Essa é uma das primeiras épocas onde é possível ganhar um bom dinheiro sem ter responsabilidade proporcional, mantendo-se estritamente técnico. Porém, ser um técnico altamente remunerado tem um custo: quanto mais foda e quanto maior é o salário, maior nível técnico é esperado. Então, é preciso estar antenado com tudo: como fazer DevOps, como trabalhar com a nuvem, como estruturar o melhor o front-end, como deixar as coisas menos síncronas usando filas e outras merdas da vida, isso sem falar nas inúmeras formas de salvar dados e acessar dados de forma simples e barata.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Em geral, se você for o mais pica da sua empresa, terá o privilégio de ser o único filho da puta a dirigir o caminhão de amônia em chamas. Ninguém vai te chamar para fazer uma deliciosa tela em React ou Nextjs a partir de um belo design feito em Figma. Esse tipo de trampo é uma commodity. É trampo de juninho. Um dev foda vai ter que resolver problemas bem mais complexos. Por exemplo, terá que ajudar a decidir como migrar a app para nuvem, terá que pensar em como a app será distribuída geograficamente, terá que pensar em observabilidade mais profundamente, terá que pensar em GDPR, terá que ajudar os arquitetos em PoCs complexas (ex: como lidar com certificados no kubernetes, como lidar com mensagens perdidas / órfãs no Kafka, etc.). Isso sem falar em jobs insuportavelmente chatos como interop e p/invoke, multi-threading com Futures, async e o caralho, comunicação com dispositivos restritos, merdas difíceis e nativas no celular… Não é uma vida exatamente fácil. Ah, e tudo tem prazo mais ou menos igual, embora lá fora eles assumam que certas funcionalidades podem demandar um tempo específico de pesquisa.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Um cara sênior de verdade viu muitos quilômetros de logs. Vocês que estão chegando deverão se acostumar a criar sistemas que gerem bons logs/telemetria e observabilidade deverá ser parte contínua do trabalho de vocês, já que daqui pra frente tudo na na merda da nuvem. Observabilidade e performance não são opcionais. Grepar logs, usar regex pra processar e extrair logs, ser rápido pra encontrar causa raiz, entender dump de memória - tudo isso pode ser necessário de vez em quando. Portanto, conhecimento em suporte também te faz ser muito foda na área e te torna uma peça chave para dirigir caminhões em chama com gás fenol.&lt;br&gt;
Como vocês podem imaginar, ser um consultor caro e foda exige também participação em discussões técnicas avançadas e potencialmente, experiência com arquitetura de software e de sistemas. Estudem essas merdas.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Muitas vezes, você estará em um time sem arquiteto específico, e você será o acting-architect. Foda. Eventualmente maior responsa por um tempo. Eventualmente, maior responsa forever and ever. Terá que apresentar coisas técnicas em eventos da empresa, terá que participar de hackatons, terá que criar uma PoC que sustente alguma coisa nova que você precise que o time use e principalmente, será a referência profissional de muita gente boa e nova que está chegando. Infelizmente é inevitável liderar pelo bom exemplo. E claro, ao tutorar o time em discussões internas, você acabará passando muito de suas experiências de vida, de campo e de outras batalhas. E isso é o que há de mais valioso para o crescimento do time e dos seus liderados/pares.&lt;br&gt;
Você terá que apresentar o design de suas soluções para que outros times entendam e apliquem. E terão que justificar o motivo de tal coisa técnica não ter sido usada/implementada quando algo der errado em produção. Pode ser necessário lidar com back-fire corporativo de chefes filhos da puta, isso sem falar em pares/subordinados que na hora H sempre dizem coisas como "nós avisamos que isso ia acontecer e nada foi feito". Mas esse filho da puta nunca avisa da forma correta. Nunca se empenha em tentar realmente evitar alguma cagada de antemão. Às vezes parece que certos caras querem te ver errar o pênalti de propósito para depois falar "é, do jeito que ele correu, ele cantou a bola pro goleiro mesmo. Tava na cara". Foda. Saber ouvir, saber se defender e saber ter base para as decisões é tão importante quanto decidir corretamente a tempo. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pode ser que seja forçado a escolher entre times e projetos mais prósperos, que possam a vir a dar resultados e lucros maiores. Embora não seja legal, muitas vezes para ganhar mais importância e visibilidade na empresa é necessário estratégia e visão. Entender o que os times fazem é bem importante e faz parte de um cara ser bom - um cara de alto nível sempre tenta atuar onde seu impacto é mais global. Foda-se aquele componente de relatório - o que importa é estar no código que processa milhares ou milhões de mensagens por dia. O dinheiro, bônus, PLR, importância e visibilidade está geralmente onde a empresa gera faturamento, onde entrega e onde evita problemas. Coisas invisíveis ou difíceis de explicar para não técnicos em geral não são lucrativas. Ninguém liga para a engenharia tapete do chão do avião. Mas todo mundo liga para o motor, para os diversos sistemas de controle. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ao entrar profundamente no desenvolvimento de funcionalidades, você notará desde o começo da carreira que muitas vezes o que está desenhado é uma merda pro cliente. Uma completa bosta. Um designer provavelmente não terá conhecimento das regras de negócio. Em geral, os Product Owners são uns fracassados de merda com pós graduação e altos salários e os Scrum Masters (ex-devs/testers fracassados e inúteis) não servem pra nada que não seja controlar o ritmo das entregas e levar políticas de escritório para a gestão superior. Sim! Muito SM presta mais como informante do que como scrum master. Na hora em que realmente é preciso pensar no produto, criar, melhorar, evoluir, esses filhos da puta de merda não servem pra nada. No máximo, influenciam o backlog de acordo com o que o arrombado de um cliente analfabeto pede. Entretanto, o cliente, PO e SM não sabem realmente o que é necessário. Com diversos projetos na carreira, experiências e coisas rodando no ar, nós sim sabemos e podemos SIM opinar e influenciar diretamente na implementação de funcionalidades que são tocadas pelo usuário final. Portanto, um cara pica também tem essa incumbência: não deixar a empresa fazer merda com o dinheiro e tempo e tentar consertar o rumo do backlog quando aplicável e possível. E como podem adivinhar, nunca é possível! :) ;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Indo nesse sentido, times de profissionais bons geralmente têm à disposição uma boa forma de geração de dados de usabilidade. Se tiverem um ambiente saudável e propício para experimentação, tentem criar experimentos. Criem testes A/B. Levantem dados. Saiam da frente do computador. Tentem ver quais são os sentimentos dos usuários finais ao tocarem o seu software. Isso era mais forte antes da pandemia. Mas pensem em outras formas de validarem isso. Não se restrinjam ao opinionismo sem dados de falsos POs. Tá cheio de PO que ou não sabe nada e pergunta tudo pra todo mundo ou então, fdp que se acha o novo steve jobs e manda fazer merdas aleatórias no software, claro, às custas do nosso esforço, tempo, horas-extra gratuitas;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Entendam. Atuar, como um especialista ou sênior foda, é bem chato na maior parte dos casos. Nas empresas grandes, pegam esse tipo especial de sujeito-de-sorte para no fim, dar trampo de corno / atividades estúpidas e bem abaixo da capacidade técnica do dev. É bem comum ouvir de vários trouxas que trabalharam no google, microsoft, facebook e tal que as atividades eram bem merdas e que o ambiente interno não era dos melhores, mas os salários e benefícios até que eram bons. Entretanto, quando se chega numa fase da vida, o chato mesmo é ficar sem ter como dar escola boa de verdade pros filhos, andar em carro com banco duro e com embreagem barulhenta, morar em casa com vizinho que ouve funk e sertanejo alto até 2:00 da manhã do seu sagrado domingo de descanso ou então, ir no supermercado sozinho para evitar o pede-pede dos filhos. Outra coisa chata é aguentar a esposa pedindo pra sair e gastar dinheiro nos passeios com a família e você entrar no cheque especial pra não ter que admitir que é um trouxa sem grana, um merda-fracassado-na-casa dos 40 esperando a promoção pra tech lead sair e então ganhar mais bônus. É o passa-cartão, é o paga-pedágio, é o pede-comida, é o pode-incluir-os-10% que vão te fodendo e te afundando em tristeza. Sem grana, sem planos, esperando, esperando, esperando. E a conta bancária? Sempre na mesma. E parece que você tá fazendo tudo certo! Certificações, eventualmente uma pós-graduação inútil, alguns cursos… investe a sua grana e é trouxa pra cair no discurso do super CDB de 100% do CDI, espera, espera e os cabelos começam a cair. Um verdadeiro trouxa, esperando para correr a trás da próxima cenoura: &lt;a href="https://www.youtube.com/watch?v=ucbISPe5Meg"&gt;https://www.youtube.com/watch?v=ucbISPe5Meg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;E nunca nada acontece nas empresas do Brasil. Sempre tem um filho da putinha mais jovem e motivando querendo liderar e você, um cara velho e muito experiente tecnicamente, nunca chega lá. Nunca é reconhecido. Ou melhor, é sempre reconhecido como aquele cara que dirige os caminhões em chama, mas nunca é visto como um cara que pode gerenciar uma equipe de motoristas de caminhões em chama! E o que resta é ver o tempo passar, ver cada vez mais reuniões inúteis, opções para mudar de emprego mais uma vez e sempre o mais do mesmo. Trampos difíceis, chatos e que só caras pica podem fazer. Um saco. E na hora do review para a promoção a Spec II ou Spec III? Hummm… ainda você não tá pronto. Você entregou tudo, participou bem de todos os projetos, fez o que tinha que fazer…. mas ainda faltam muitas cenouras aqui. São vários "precisa de", "tem que", "mudar isso". Aí te jogam pra outro mentor arrombado, e lá se vai mais um ano. A grana entra, bônus entra e você continua ainda morando naquela merda de casa de rua onde invariavelmente passa busão 5 da manhã. E a pergunta a cada dia fica mais latente antes de dormir: será que eu serei Spec II ou Staff Engineer algum dia? O que tem de errado comigo? Sobreviverei ao próximo corte? Será que devo focar em carreira gerencial mesmo? Talvez nada disso dê certo e descubram que eu realmente sou bosta mesmo, um impostor. Foda. (na verdade não é não - vc é tratado como trouxa de propósito só pra vc ficar de boa no seu lugar - não aceite este lugar que te deram).&lt;/p&gt;

&lt;p&gt;Há uma época da vida é em que é preciso tomar decisões focadas unicamente na grana. As aventuras e o prazer de se trabalhar no que gosta acabam tendo que ficar em segundo plano. Se você está no ramo há mais de 10 anos, agora é o momento mais fácil para lucrar com trabalho na área de desenvolvimento. Com tantas opções pagando em USD ou EURO, não há porque se submeter aos empregos de merda do Brasil, que em geral pagam pouco e exploram muito. Se é pra pra ser uma putinha de empresa, que seja pra ganhar uma boa grana. Não caiam nesse discurso de LinkedIn sobre como ser um bom líder, sobre como ser um bom chefe e toda essa cagação de regra de gente triste e ressentida que te força a ter vontade de ser um bom chefe um dia. Sim, você pode sim aprender e ser um bom líder, mas o que mais interessa é o DINHEIRO HOJE e não FUNÇÕES/CARGOS AMANHÃ. Se for o caso, deixe de ser coordenador de onde está, deixe de ser gerente e se possível, volte para a área técnica. É possível ser um simples programador de qualidade e ganhar uma grana muito alta, sem precisar esperar promoção, sem precisar esperar por reconhecimento e por nada - só passar nas entrevistas e mandar ver. Você pode até querer mudar o mundo, se esforçar pra caralho, ser um ótimo tech lead e eventualmente um grande engineering manager. Tomara, até torço por você! Eu mesmo quero ser um algum dia! Quero que todo mundo vá no meu enterro! Mas coloque um prazo. Uma meta. Algo como "quero estar ganhando 25k em Dezembro de 2022, não importa como". E siga só essa meta. A grana importa bem mais que cargo nesse momento pré-riqueza, pré-independência financeira.&lt;/p&gt;

&lt;p&gt;Sugiro que você mande à merda as super vagas fantásticas de empresas brasileiras. Salvo raríssimas exceções, a grande parte das empresas daqui são feitas por caras exploradores que não se importam com o bem-estar dos funcionários e buscam apenas aumentar os lucros e rendimentos. E isso passa necessariamente por economizar com o seu salário e seus benefícios. Além disso, o mundo corporativo está cheio de psicopatas, sociopatas e narcisistas, e você, com todo o seu trabalho, pode estar sendo apenas uma peça no joguinho de poder de gente grande. Pode ser que você seja só visto como um carro bom no estacionamento. Pode ser que você seja só visto como um bispo no tabuleiro de xadrez. Talvez você nunca seja alçado a posições de liderança e altos salários. Ou talvez até aconteça, mas você pode falhar nos jogos de poder nesse nível ao perceber boicotes sutis como falta de colaboração para suas iniciativas e falta de engajamento que possa ajudar no seu report anual. Ao ser gerente/líder, você terá que lidar com uma coisa legal, que é exercer liderança e conseguir tempo de pessoas que não são subordinadas diretas. Pode ser necessário implorar por agenda, por reuniões e isso ser visto como algo que não é lucrativo para quem você pede. Por exemplo, você como tech lead pode precisar guerrear para rever a estratégia de multi-tenancy do produto, o que claramente é um atraso de backlog e não é do interesse de ninguém exceto do produto/cliente final/sobrevivência da empresa a longo prazo. Pode ser que você tenha que escalar nessa guerra corporativa e pode ser que você tenha que comprar briga com muita gente para fazer o correto, inclusive, com seus gerentes diretos! Eu particularmente já me vi no meio dessa encrenca, onde eu precisava consertar a linha de produção e tinha que entregar o dobro da produção no mesmo mês. Eu tinha 2 chefes pedindo coisas urgentes o tempo todo e claro, coisas com interesses divergentes. E eu tinha que agir como firewall do time. Uma verdadeira situação cocô. Não digo que o mundo lá fora seja melhor ou pior, mas por enquanto, é possível ganhar bem mais do que aqui para se foder da mesma forma, como dev e como lead.&lt;/p&gt;

&lt;p&gt;Socialmente falando, gostaria de colocar também alguns pontos que me fazem ficar bem ressabiado ao trabalhar para o sustento de elites nocivas ao Brasil, país que tanto amo. Eu pude validar de perto como é triste para uma pessoa fora da área de TI procurar emprego. As empresas brasileiras são tóxicas neste aspecto: quando as vagas são de TI, há um tratamento muito melhor e em geral, há respeito do RH; quando as vagas são operacionais, os turnos em geral são absurdamente longos, os salários são ridículos e as condições em geral são insalubres. E claro, com um desemprego tão alto, os caras do topo da pirâmide deitam e rolam com os funcionários menos qualificados. E os poucos que estão trabalhando se submetem aos desmandos dos empresários, porque afinal, precisam agradecer por terem um emprego ainda. &lt;/p&gt;

&lt;p&gt;Desde o Golpe de 2016, nunca foi objetivo de governo diminuir o desemprego e dar condições sociais melhores para a maior parte possível da população. Eu e vários conhecidos ouviram coisas como: " Imagina só! Filho da puta da classe C escolhendo emprego e consumindo o mesmo lugar que nossos filhos? Favelado pegando avião e comendo com a boca aberta do meu lado? Minha filha estudando com filho de porteiro? Minha filha dando pra filho de pedreiro! Isso tem que parar!" E assim foi feito. A elite tirou o PT justamente por que isso estava acontecendo, usando como pano de fundo a questão da lei e ordem, dos bons costumes e do fim da corrupção estatal (ninguém se importa com a corrupção privada, com sonegar impostos usando CNAE errado no Simples e etc.). Anteriormente, nos governos do PT, gente que se submetia a trabalhos nojentos acabou tendo novas chances, incomodando brutalmente as elites. Eu pessoalmente vi também o outro lado da moeda - mina da classe C dizendo que não iria estudar pra ganhar 2000 de salário. Enfim, de toda maneira, todo o trabalho então foi feito para voltar as coisas à "normalidade" e claro, a pandemia ajudou nesse aspecto. Quem estava com alguma condição boa antes da crise voltou à estaca zero, entregando comida de moto humildemente, sendo uber ou mesmo, empregada doméstica a limpar novamente, banheiros de filhos da puta inúteis. Ou então, voltou a trabalhar de pé no shopping, tendo que sorrir até 22h enquanto troca a merda da película do celular ou dobra a merda de roupa que foi experimentada de novo e não serviu (roupa G da china é P no BR). E se for ver com os olhos sem lentes da verdade, nunca foi de interesse real a redução do desemprego a melhora geral da qualidade de vida da população. Vejam mais detalhes neste excelente texto: &lt;a href="https://outraspalavras.net/trabalhoeprecariado/mp-1045-a-nova-e-sorrateira-reforma-trabalhista/"&gt;https://outraspalavras.net/trabalhoeprecariado/mp-1045-a-nova-e-sorrateira-reforma-trabalhista/&lt;/a&gt;. No texto, podemos ver que as reformas recentes na verdade foram formas de baratear os custos trabalhistas, não necessariamente, gerando novos empregos. E ainda há muitos trouxas que apoiam esse tipo de coisa. Inclusive, o texto sustenta que a manutenção de altas taxas de desemprego ajuda na pressão salarial.&lt;/p&gt;

&lt;p&gt;O que quero dizer com tudo isso? Quero dizer que nós, programadores, somos pedra fundamental para que novos projetos possam acontecer no Brasil e somos agentes econômicos fundamentais em um mundo onde quase todas as empresas precisam de uma área de TI forte para existir e sobreviver. Entretanto, ao dar nossa força de trabalho para empresas brasileiras que exploram pessoas descaradamente, na minha humilde, revoltosa e enviesada opinião, estamos trabalhando para o continuísmo do que há de pior, que é a exploração do trabalho em prol de agentes que buscam o lucro sem qualquer tipo de retribuição para a sociedade. Eu pessoalmente me incomodo muito ao ver que o RH se joga aos pés de gente de IT e trata pessoas normais como lixo, fazendo-as passar por intermináveis processos seletivos, humilhando-as até não poder mais. Também me incomodo muito com essa relação de comando e controle colonialista que existe por aqui. Trabalhar para esse tipo de gente é meio foda, ainda mais quando estamos em necessidade financeira.&lt;/p&gt;

&lt;p&gt;Todo mundo sabe que o trabalho remoto na pandemia deu super certo, embora isso tenha gerado uma onde de choque na percepção de qualidade de vida dos funcionários e um medo muito grande na gestão, que não pôde mais controlar direito o tempo dos funcionários ou observar cuidadosamente as redes internas de conversas e fofocas. Funcionários felizes, trabalhando e entregando sem comando e controle abalou toda a lógica sobre a real necessidade de gerentes. Para segurar os empregos, os gestores estão buscando novos motivos para trazer as pessoas de volta aos escritórios. Um motivo bem comum na área de TI é a ausência de inovação e disseminação de cultura. Embora eu concorde com os motivos, não vejo isso como justificativa clara para fazer eu trabalhar todos os dias presencialmente, pegando trânsito arrombado e tendo que sair correndo pra levar e trazer filhos da escola e academia, cursos e tal. Por último, claro, ainda temos sociopatas corporativos famintos para voltarem a fazer seus jogos de cena. Onde vão expor as roupas novas? Seus carros? Seu charme? Suas apresentações fantásticas nas reuniões? Como vão fazer todo o teatro? Como que vão conseguir convencer a todos sobre sua suposta utilidade para a empresa? A volta do trabalho presencial é essencialmente um volta à estrutura de comando-e-controle tradicional e trata-se de um grande retrocesso para as mentes que simplesmente querem trabalhar com qualidade por um salário de qualidade e com uma vida de qualidade. Trabalhar no Brasil significa uma grande chance de voltar ao presencial em 2022. Não sejam tolos. Ninguém vai ficar remoto pra sempre aqui. Só o farão se for muito necessário e se ninguém mais se curvar a isso. Mas nunca é o caso. Repito: não caiam nessa de trabalho presencial sem que isso seja da sua plena vontade e seja altamente opcional. Você que pode escolher, deve considerar morar em qualquer lugar decente, pacífico e barato do Brasil.&lt;/p&gt;

&lt;p&gt;Se nada mudar nesse pós-pandemia, vamos continuar na mesma: caras de TI se virando bem, gente sem aptidão vendo na TI como uma fonte de ouro, gente sendo humilhada por ser do administrativo (e ganhando R$ 2000 por 44 horas semanais no extremo melhor dos casos!), e vai continuar tudo como está. E mesmo nós de TI continuaremos a ser currados todos os dias por fdps que fazem pós-graduação chique, mas nunca entregaram uma linha de código em produção. Isso tem que mudar. Lá fora a qualificação da liderança em geral é muito melhor, assim como nível técnico, já que países com moedas mais fortes conseguem escolher as melhores pessoas e conseguem atrair grandes mentes qualificadas e incrivelmente, muito mais pessoas do bem do que vemos comumente no Brasil! Ao experimentar atuar remoto para fora ou mesmo, se mudar para outro país, há muitas chances de uma melhora exponencial de qualidade de vida sem precisar dar muito mais em troca em termos horas e esforço diário. Isso não tem preço. Pensem nisso e me falem o que acham :)&lt;/p&gt;

&lt;p&gt;Portanto, para fechar, seja foda e tenha um plano:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Escolha o que você realmente quer de bens materiais e objetivos pessoais. Escreva em vários post-its. Coloque eles seu quarto e no seu banheiro. Veja e reveja seus objetivos todos os dias. Coloque uma meta clara de quanto dinheiro mensal você quer por mês e coloque um prazo. Uma ideia de meta você considere ganhar seu salário atual em 6 a 8 meses no ano que vem. Coloque essa meta clara no post-it onde você dorme e onde vc caga. Você tem que escovar os dentes todos os dias vendo a sua meta. Uma meta simples. Clara. Objetiva. Atingível. Mensurável.&lt;/li&gt;
&lt;li&gt;Trace um plano de estudos técnicos com datas e prazos. Invista em materiais que precisar investir, em livros, cursos e mesmo, avalie oportunidades de cursos presenciais sim.&lt;/li&gt;
&lt;li&gt;Invista fortemente em inglês. Fortemente é agir com seriedade. Comprometimento. Não falte nas aulas. Faça os exercícios com alto rigor. Treine sua memória decorando e recitando textos em inglês. Esta técnica é fortemente recomendada para quem precisa aprender logo a falar. &lt;/li&gt;
&lt;li&gt;Estude em sites como pluralsight e udemy com material EM INGLÊS. Estude com a legenda em inglês. Em pouco tempo você notará que consegue absorver em 1.25x e depois, em 1.75x/2.0x.
Ao negociar, não seja otário. Muitos fdps estrangeiros já descobriram a mina de ouro de programadores brasileiros bons e baratos e estão tentando contratar caras bons por 4k ou 5k USD mensais. Provavelmente vocês conseguirão bem mais, mas pode ser que inicialmente começar com essa grana ajude na autoestima e na prática do inglês - nem sempre nosso salário é pago em dinheiro. Pode ser que tenhamos vários outros ganhos como ter um histórico de projeto internacional, boas entregas, bons reviews no nosso perfil e muito mais. Tudo conta. A regra do sucesso é: "pague o preço antes de colher os lucros".&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Infelizmente algumas empresa usam um processo chato de entrevistas com testes. E de certa forma, estes testes são bem bons para ajudar você a evoluir como programador, ainda mais se você é mais um arrombado na nossa área que não teve a decência de fazer um curso superior. Para melhorar, invista tempo no leetcode, hackerrank e outros do tipo. Tem uma boa trilha, Project Euler, que ajuda a evoluir bem. Mas tem também vários desafios legais em outras trilhas. Na verdade, não são legais, mas são bem importantes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Compre o livro Cracking the Code Interview. Meu amigo comprou e passou nas provas e processos seletivos todos. Hoje ele manja de complexidade de tempo e espaço, de algoritmos até pra arrumar mulher e tudo mais. Eu comprei o livro mas ainda não o abri, porque eu acabei tendo sorte de fazer entrevistas mais teóricas (e acho que até bem complexas ao meu ver).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Existe uma técnica secreta que é anotar em um diário um caderno afirmações como "hoje eu estou cada vez mais próximo do objetivo xpto", "eu me vejo trabalhando em um projeto X nas condições A, B e C"e por aí vai. O poder de coisas escritas acabam impressionando nosso cérebro e acabam nos empurrando para fazer as coisas. Algumas pessoas também colocam o que querem que aconteça em suas vidas pessoais. Para mim funcionou essa técnica e meus resultados melhoram sensivelmente nos últimos 24 meses. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Evite contar publicamente sobre seus planos e ideias. Se você fizer isso antes, vai dar tudo errado. Não sei exatamente o motivo, mas é o que tem acontecido com muita gente que conheço. Isso é especialmente importante ao usar redes sociais.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Além dos passos acima, pense nas seguintes coisas aleatórias que consegui lembrar pra ajudar você, tiradas diretamente da minha experiência pessoal:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tudo tem seu tempo e tudo vai acontecer na hora certa. Não se condene por demorar a ter seus resultados planejados. Eu demorei uns bons anos até conseguir a minha primeira proposta formal de emprego na Europa - em 2016 eu consegui chegar até o fim do meu primeiro processo seletivo internacional. Depois disso, até hoje, eu participei de vários processos seletivos no Brasil e no exterior e fui aprovado e reprovado em inúmeros. As reprovações doeram muito. Mas com o tempo, eu me acostumei a falar melhor, a aceitar melhor as falhas, a entender meus pontos fracos e segui a vida. Se demorar para encontrar, não importa. O que importa mesmo é você estar vivo, com saúde e com comida na mesa. E claro, continua sendo um absurdo privilégio ter um banheiro limpo para você cagar, tomar aquele banhão quente gostoso e ter aquela cama macia para você dormir :)&lt;/li&gt;
&lt;li&gt;Cuide bem da sua saúde mental. Os fdps vão pressionar por features mais rápidas, por metodologias que nos fazem trabalhar o tempo todo e tudo mais. Foda-se se você não entregar, foda-se se der erro em produção e foda-se o cliente sofrendo. O que importa é você estar vivo, com saúde e com comida na mesa. Na situação atual, quase ninguém tem culhão pra mandar embora por baixo número de itens entregues. Pode acontecer de não chegar a promoção ou aumento, mas foda-se. &lt;/li&gt;
&lt;li&gt;Responsabilidade é uma coisa séria e que precisa ser absurdamente remunerada. Se você tem um time e precisa garantir a entrega dessas pessoas, assegure que o tempo e energia que você gasta com estas atividades são de fato justas financeiramente. Eu acho mancada dar um cargo de coordenação sem estarmos falando de um Total Comp de uns R$ 250.000 a R$ 300.000 anuais. Por isso que acho que trabalhar como um simples dev pra fora, sem grandes responsabilidades e sem vender muitas horas-extra na faixa é interessante financeiramente. No Brasil, para ganhar essa grana, é preciso trabalhar umas 12 horas diárias ou mais. Nunca ouvi falar de alguém que ganha isso por "apenas" 8 horas diárias. Inclusive, a gestão arrombada adora dizer que quem faz 8 horas é peão. Pois bem, prefiro ser peão e fazer 7 horas diárias por dia por esse dinheiro.&lt;/li&gt;
&lt;li&gt;Divirta-se o máximo que puder. Transe gostoso. Não deixe de fazer um sexo oral e não deixe de beijar na boca. O tempo passa e às vezes isso acaba ficando de lado por causa das inúmeras obrigações diárias e do cansaço extremo. Beba. Saia de casa. Sei que nessa pandemia ainda é complicado, mas mesmo assim, faça o que der com responsabilidade. Se tiver rede de apoio, use ao máximo. Use a rede de apoio também para ter horas de estudo.&lt;/li&gt;
&lt;li&gt;Não exija demais de você mesmo. Mesmo que você tenha uma família pra sustentar ou contas demais pra pagar. Se você morrer ou ficar inválido, vai foder do mesmo jeito. Pega leve nesse trampo caralho! O seu chefe está comendo o melhor churrasco, tá dando aquele rolê gostoso na praia e você tá aí, dando tempo excessivo da sua vida para sobreviver a ameaças de demissão, de ser um impostor, de ser incompetente e de ser um cara que não entrega "o que se espera de um sênior". Foda-se.&lt;/li&gt;
&lt;li&gt;Cuide da saúde, dos dentes e pense sempre em deixar bons seguros de vida para os seus. Dependendo de onde morar, faça seguro da casa também. Se pegar o carro para trabalhar muito longe, se pegar estrada, se pegar fretado… já sabe. 
Seja absolutamente discreto ao decidir trabalhar para fora ou mesmo, mudar para um emprego melhor aqui mesmo. Aliás, seja sempre discreto com tudo na sua vida. NÃO FALE NADA SOBRE TEUS PLANOS NA SUA EMPRESA. Às vezes, convém manter os planos em sigilo até mesmo de sua família. Por exemplo, se você tem um plano de ter uma segunda fonte de renda e comenta isso no trabalho, claramente vão associar uma eventual queda de produtividade com este seu suposto segundo trabalho. E você será sempre julgado e colocado de lado sem ao menos saber o que está acontecendo. Evite isso. Cala a merda da sua boca! Isso vale muito para mim também.&lt;/li&gt;
&lt;li&gt;Mantenha seus documentos em dia. Isso significa ter passaportes em dia. Isso significa, possivelmente, ter visto de visitante para os EUA em dia. Se estiver apenas morando junto com a esposa, considere o casamento formal - alguns vistos demandam tempo de casamento formal para que o cônjuge também seja incluído no visto. Considere também deixar os passaportes dos seus filhos absolutamente prontos. Pode acontecer muitas greves ou mesmo, falta de dinheiro para este tipo de serviço, como já aconteceu recentemente.&lt;/li&gt;
&lt;li&gt;Sempre guarde pelo menos 10% do salário bruto, antes dos impostos. E esse dinheiro em geral precisa ser utilizável em no máximo 1 dia útil. E claro, nesse aspecto, seja honesto e tenha as finanças da casa organizadas. Você e seu cônjuge precisam saber para onde vão todos os centavos que entram. Sem segredinhos. Sem grana escondida para comer porcaria, usar drogas ou gastar com prostituição. E não se esqueça: separe o sagrado orçamento do lazer individual e coletivo!&lt;/li&gt;
&lt;li&gt;Não interessa mais o carro que você tem. O trabalho remoto ajuda muito nesse aspecto, porque afinal, você não precisa mais comprar um carro bom para demonstrar sucesso no estacionamento do trabalho. Não se afunde em dívidas altas por causa de um carro, que hoje em dia, tem um custo altíssimo. Mas como sempre reforço, a compra do primeiro carro é obrigatória e em algum momento da vida é necessário tanto comprar um carro como também, fazer um upgrade. Só tome cuidado para que as contas mensais estejam equilibradas.&lt;/li&gt;
&lt;li&gt;Junte dinheiro para eventuais viagens a trabalho. Pense em um caixa com pelo menos 1000 euros para você gastar em eventual passeio pela Europa após suas entrevistas ou mesmo, reuniões de trabalho pós-contratação! :)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Saúde e sucesso para todos!&lt;/p&gt;

</description>
      <category>carreira</category>
      <category>trabalho</category>
      <category>remoto</category>
    </item>
    <item>
      <title>The Story About a Smart Boss</title>
      <author>Evgenii Ponomarev</author>
      <pubDate>Thu, 12 Aug 2021 19:47:33 +0000</pubDate>
      <link>https://dev.to/_elergy_/the-story-about-a-smart-boss-f72</link>
      <guid>https://dev.to/_elergy_/the-story-about-a-smart-boss-f72</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ytrpi0Ko--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://evgenii.info/content/images/2021/08/philippe-oursel-ZAF-rhUyESY-unsplash--1-.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ytrpi0Ko--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://evgenii.info/content/images/2021/08/philippe-oursel-ZAF-rhUyESY-unsplash--1-.jpg" alt="The Story About a Smart Boss"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Molly had a very smart boss.&lt;/p&gt;

&lt;p&gt;Once, they had a system outage in the middle of the night, which nobody could solve until they called Molly. She logged in, scanned through all the changes from the day before, read the logs, did her own tests, and found the culprit – some expired certificates on one of their production clusters.&lt;/p&gt;

&lt;p&gt;When the boss saw it the following day, he gathered everyone in one place and praised her in front of the others.&lt;br&gt;&lt;br&gt;
"Thanks to Molly, the outage persisted for only 45 minutes. She was quick, accurate, and she did the exact things I would do in this situation.&lt;br&gt;&lt;br&gt;
I had numerous incidents like this in my life, you know. And now it almost feels easy — I see the symptoms, and the root cause becomes apparent. But even with all this experience, I'm not sure I could have done it faster than Molly."&lt;/p&gt;

&lt;p&gt;And everyone clapped him because he was very smart and humble, and they knew he would have found these expired certificates much quicker.&lt;/p&gt;




&lt;p&gt;Another time, the whole team were brainstorming how to reduce the latency of their API.&lt;/p&gt;

&lt;p&gt;Molly knew one or two things about it and proposed to cache frequently used data in Redis.&lt;/p&gt;

&lt;p&gt;"I think it can be a huge success," the boss commented. "It's great that you mentioned that because I've been analyzing Redis myself and was just about to create the task to begin using it. Do you guys all agree about giving it a try?"&lt;/p&gt;

&lt;p&gt;And everyone nodded because he was very smart and always had excellent and well-thought-out ideas.&lt;/p&gt;

&lt;p&gt;"Actually," the boss pointed to Molly, "considering you also proposed Redis, why wouldn't you create tasks yourself?"&lt;/p&gt;

&lt;p&gt;And everyone found it to be a good idea because wise leaders delegate work to their people.&lt;/p&gt;




&lt;p&gt;Later that day, Molly called her old friend. He was a manager in another company, and she knew they were hiring.&lt;/p&gt;

&lt;p&gt;"Is it what, my birthday?" her friend laughed. "But how is your team gonna take it?"&lt;/p&gt;

&lt;p&gt;She paused for a second. "I'll miss them... but they don't need me much anyway. I don't think anything will change".&lt;/p&gt;




&lt;p&gt;Molly was right – nothing has changed with her departure.&lt;/p&gt;

&lt;p&gt;She had a chance to see this for herself a year later when she met her former boss.&lt;/p&gt;

&lt;p&gt;"We just talked about you yesterday! There was a huge outage because of some expired certificates — put us down for 12 hours! I remember you were good at fixing those..."&lt;/p&gt;

&lt;p&gt;Molly was startled but chose to switch to something more positive. "Those certificates are always tricky, don't even remind me… So how's the cool stuff, huh? API?"&lt;/p&gt;

&lt;p&gt;"A bit slow as always, you know. But we plan to fix it soon — I think if we can implement some sort of a cache, or perhaps find an open-source thing."&lt;/p&gt;

&lt;p&gt;"Like Redis," Molly suggested.&lt;/p&gt;

&lt;p&gt;"Exactly! You know, I've been looking at it myself recently — my favourite option so far!"&lt;/p&gt;




&lt;p&gt;As always, you can &lt;a href="https://evgenii.info/newsletter"&gt;subscribe to Resilient Systems&lt;/a&gt; and receive new articles by email if you haven't done it yet.&lt;br&gt;&lt;br&gt;
You also can &lt;a href="https://twitter.com/_elergy_"&gt;find me on Twitter&lt;/a&gt; or somewhere else – I am always happy to chat :-)&lt;/p&gt;

</description>
      <category>career</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Everything you need to know about AdonisJs</title>
      <author>Ted Ngeene</author>
      <pubDate>Thu, 12 Aug 2021 19:43:32 +0000</pubDate>
      <link>https://dev.to/tngeene/introduction-to-adonisjs-4a1f</link>
      <guid>https://dev.to/tngeene/introduction-to-adonisjs-4a1f</guid>
      <description>&lt;p&gt;When we talk about modern software development, it's hard to overlook the role of JavaScript. With so many frameworks to choose from, choosing the 'perfect one is often a conundrum that many newbie developers and experienced ones face when they want to learn new skills. In this series, I will highlight why you should go with &lt;a href="%5Bhttps://adonisjs.com/%5D(https://adonisjs.com/)"&gt;AdonisJs&lt;/a&gt;. By the end of the tutorial, I believe you will be able to handle most, if not all of the common tasks involved in any backend application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table Of Content
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#what-is-adonisjs"&gt;What is AdonisJs?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#why-adonisjs"&gt;Why Use AdonisJs?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#outline"&gt;Series Outline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#communities-and-resources"&gt;Communities and Resources in AdonisJs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#what-is-adonisjs"&gt;
  &lt;/a&gt;
  What is AdonisJs?
&lt;/h2&gt;

&lt;p&gt;Some of you are wondering, "what in the world is AdonisJs in the first place?". AdonisJs describes itself as, "a backend framework for Node.js." However, you can do both back-end and front-end development using the framework. It follows the &lt;a href="https://www.tutorialspoint.com/mvc_framework/mvc_framework_introduction.htm"&gt;Model View Controller(MVC)&lt;/a&gt; architecture, therefore, you can create fully functional web apps using a single framework. It has its own templating engine called edge. It was created by &lt;a href="https://dev.to/amanvirk1"&gt;Aman Virk&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-adonisjs"&gt;
  &lt;/a&gt;
  Why AdonisJs
&lt;/h2&gt;

&lt;p&gt;A couple of weeks ago, I started using the framework. Being torn between express and Adonis, I finally swayed the Adonis way. The reason for this is;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It has a robust &lt;a href="https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping"&gt;Object Relational Mapping(ORM)&lt;/a&gt;, which provides first-class support for SQL databases, Query builder with active records, seeds, migrations, and Redis support. This to me was the biggest factor in choosing it as I didn't have to go through the extra step of manually configuring the ORM.&lt;/li&gt;
&lt;li&gt;Typescript support outside the box🎊&lt;/li&gt;
&lt;li&gt;Well-written and thorough &lt;a href="https://docs.adonisjs.com/guides/introduction"&gt;documentation&lt;/a&gt;. You can build a web app by just using the documentation.&lt;/li&gt;
&lt;li&gt;Multi driver auth support, which lets you choose between JWT, session, and opaque API tokens.&lt;/li&gt;
&lt;li&gt;It is easy to set up and use.&lt;/li&gt;
&lt;li&gt;It follows good design patterns on what should encompass a web framework.&lt;/li&gt;
&lt;li&gt;Strong emphasis on web security&lt;/li&gt;
&lt;li&gt;A growing community. I personally see Adonis cementing itself as a top backend framework in the next couple of years.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I could go on and on about why I like the framework, but for that, I'll link some communities at the end of the post for you to have a look at the discussions around it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outline"&gt;
  &lt;/a&gt;
  Outline
&lt;/h2&gt;

&lt;p&gt;Before we make any development I'll highlight what we'll be building and the requirements you'll need to set up an Adonis project.&lt;/p&gt;

&lt;p&gt;We're going to be making a sports apparel store, called FitIt. The goal of the series is to highlight a couple of concepts that are important in your journey to becoming a top-notch Adonis developer. The store will be multi-tenant, meaning users can own different stores and post their gear for that particular shop.&lt;/p&gt;

&lt;p&gt;The Database model is illustrated below;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eDRIfGtY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--e9nyVRxq--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pzn7uhf6fh7om3u017g5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eDRIfGtY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--e9nyVRxq--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pzn7uhf6fh7om3u017g5.png" alt="https://res.cloudinary.com/practicaldev/image/fetch/s--e9nyVRxq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pzn7uhf6fh7om3u017g5.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#topics"&gt;
  &lt;/a&gt;
  Topics
&lt;/h2&gt;

&lt;p&gt;These are the features we'll be going over, which are essential to understand while working on any project.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Installation and setup(using typescript)&lt;/li&gt;
&lt;li&gt;Login and registration

&lt;ul&gt;
&lt;li&gt;Different authentication schemes&lt;/li&gt;
&lt;li&gt;Account activation&lt;/li&gt;
&lt;li&gt;social signup&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Relationships

&lt;ul&gt;
&lt;li&gt;one to many&lt;/li&gt;
&lt;li&gt;many to many&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CRUD operations

&lt;ul&gt;
&lt;li&gt;Pagination&lt;/li&gt;
&lt;li&gt;Filters&lt;/li&gt;
&lt;li&gt;File uploads&lt;/li&gt;
&lt;li&gt;Validators&lt;/li&gt;
&lt;li&gt;Success and error messages&lt;/li&gt;
&lt;li&gt;Slug system&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Lifecycle hooks&lt;/li&gt;
&lt;li&gt;Events in AdonisJs&lt;/li&gt;
&lt;li&gt;Mailing&lt;/li&gt;
&lt;li&gt;Database Seeders&lt;/li&gt;
&lt;li&gt;Hook up to vue.js frontend.&lt;/li&gt;
&lt;li&gt;Deployment.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt; - AdonisJS is a Node.js framework and hence it requires Node.js to be installed on your computer. To be precise, we require at least the latest release of Node.js 14.&lt;/li&gt;
&lt;li&gt;A package manager. I will be using &lt;a href="https://www.npmjs.com/"&gt;npm&lt;/a&gt; However, you can use &lt;a href="https://yarnpkg.com/"&gt;yarn.&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;A code editor. My go-to editor is &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code.&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#communities-and-resources"&gt;
  &lt;/a&gt;
  Communities and Resources
&lt;/h2&gt;

&lt;p&gt;If you've made it this far, then I'm sure I've picked your interest in learning this framework. AdonisJs has a growing community, where you'll get assistance in your journey. For more info on the framework, you can check out;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://discord.com/invite/vDcEjq6"&gt;AdonisJS Discord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/adonisframework?lang=en"&gt;Twitter account&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adonisjs/core"&gt;Official Github Repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adonisjs.com/"&gt;official Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can also follow me on dev as well as check out my &lt;a href="https://tngeene.com/"&gt;personal website&lt;/a&gt; where I'll be writing more on Adonis and full stack development.&lt;/p&gt;

</description>
      <category>adonisjs</category>
      <category>typescript</category>
      <category>javascript</category>
      <category>node</category>
    </item>
    <item>
      <title>ระบบลงทะเบียน ใช้ Firebase ดีไหม?</title>
      <author>Narate Ketram</author>
      <pubDate>Thu, 12 Aug 2021 19:14:22 +0000</pubDate>
      <link>https://dev.to/domecloud/firebase-2i3b</link>
      <guid>https://dev.to/domecloud/firebase-2i3b</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;สวัสดีครับ ผม&lt;a href="https://www.facebook.com/koonnarate/"&gt;นเรศ&lt;/a&gt; หรือว่า เรียกสั้น ๆ ว่า นเรศ เฉย ๆ ก็ได้&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;วันนี้ ผมจะมาวิเคราะห์ระบบลงทะเบียน สำหรับการฉีดวัคซีนฟรี เพื่อเป็นกรณีศึกษาครับ เนื่องจาก &lt;a href="https://www.facebook.com/domecloud.io"&gt;DomeCloud&lt;/a&gt; ได้เสนอตัวเพื่อทำระบบการลงทะเบียน เพื่อฉีดวัคซีนซิโนฟาร์มฟรี ให้กับจังหวัดชลบุรี โดยเป็นหนึ่งในการทำระบบเพื่อสังคม ไม่ต้องเสียค่าใช้จ่ายใด ๆ ให้ DomeCloud (ถ้ามีใครสนใจอยากสอบถาม ถามไปที่ Inbox page DomeCloud Facebook ได้เลย)&lt;/p&gt;

&lt;p&gt;โดยส่วนตัวผมเอง ผมมักจะพูดถึงการทำระบบลงทะเบียนต่าง ๆ ที่ไม่สามารถรองรับผู้ใช้งานได้ว่า "ทำเว็บสวย ๆ แล้วใช้ไม่ได้ ทำทำไม" ซึ่งกรณีนี้อยากจะสื่อความว่า เว็บสวย ๆ ทำงาน มันก็แค่ Static file ทำให้มันล่ม ยากกว่าอีก&lt;/p&gt;

&lt;p&gt;แต่...&lt;/p&gt;

&lt;p&gt;แต่ การทำเว็บแบบ Static มันก็ไม่ได้ตอบโจทย์ของระบบการลงทะเบียนอะไรเหล่านี้ มันก็จริงอยู่ว่า ทำเป็น SPA (Single Page Application) มันก็ Static file นี่ ?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jvM2aWav--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdx0vulzi3jnv0uq72u8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jvM2aWav--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdx0vulzi3jnv0uq72u8.jpg" alt="Spa"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ใช่ แต่...&lt;/p&gt;

&lt;p&gt;แต่อีกแล้ว คือหน้าเว็บเอง มัน Static แหละ แต่ข้อมูลมันไม่ Static โดยธรรมชาติของระบบลงทะเบียน ข้อมูลต่างๆ มันจะเก็บลงฐานข้อมูล&lt;/p&gt;




&lt;p&gt;เข้าเรื่องเลย การออกแบบระบบนี้ อาศัยความขี้เกียจ ออกแบบระบบไว้ประมาณนี้&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MAdo80iy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zsn9m1fnzjy5kxyziuww.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MAdo80iy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zsn9m1fnzjy5kxyziuww.png" alt="Register Diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;เราเลือกใช้ Firebase สำหรับงาน Backend เพราะว่าทำให้สามารถสร้างระบบการลงทะเบียนขึ้นมาได้ง่าย แบบ ง่ายมาก ไม่ต้องดูแล Backend ของตัวเอง มีแค่ Static file ที่เราคิดว่า ดูแลเองง่ายกว่า (เพราะว่า เคยเจอปัญหาตอนฝากไฟล์ไว้ที่ Cloudflare)&lt;/p&gt;

&lt;p&gt;แต่พอใช้งานจริง มันไม่ง่ายอย่างที่คิด&lt;/p&gt;

&lt;p&gt;หลังจากที่ออกแบบและสร้างมันขึ้นมาแล้ว ผมก็ได้ทำการโหลดเทสระบบ โดยเทสไปที่แค่ส่วนของ Static file หรือหน้าเว็บที่เราสร้างมา เพื่อดูว่าเราสามารถรองรับการใช้งานได้ที่เท่าไหร่&lt;/p&gt;

&lt;p&gt;ผลโหลดเทสแรกๆเลย ตามภาพข้างบน เราใช้ Cloudflare + Proxy ที่ Cloudflare เลย ผลโหลดเทส ออกมา กระจอกมาก ได้ที่ประมาณ 2,000 Request per sec. อันนี้ ผมคิดว่าอาจจะเป็น Limit ฝั่ง Cloudflare จากนั้นนำเสนอข้อมูลการโหลดเทส ไปยังที่ประชุมว่า ได้ที่ 2,000 RPS เพราะ Cloudflare มัน Limit ไว้&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YgadW3fg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f4co1dpovkplo012kr2u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YgadW3fg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f4co1dpovkplo012kr2u.png" alt="Chon Buri with CF Proxy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;แต่ที่ประชุมบอกว่ามันน้อยเกินไป ผมเลยปลด Cloudflare Proxy ให้ใช้เป็น DNS Only แล้วยิงโหลดเทสใหม่ ผลคือ ได้ประมาณ 50,000 RPS อันนี้เป็นอีกโดเมนหนึ่ง ซึ่งเป็นของ เทศบาลตำบลเสม็ด จังหวัดชลบุรี ที่ยิงไปตรง ๆ แบบ HTTP&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S9boaxnm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0q1xsocrgy0cc8123c1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S9boaxnm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0q1xsocrgy0cc8123c1.png" alt="Samet Load testing HTTP"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ผลทดสอบแบบ HTTPS&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OWa0T667--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/grrqk7ear4zh8m641x6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OWa0T667--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/grrqk7ear4zh8m641x6g.png" alt="Samet Load testing HTTPS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;จากผลการทดสอบ ทั้งของจังหวัด และเทศบาล พอจะสรุปได้คร่าวๆว่า HTTP เรารับได้มากกว่า 50,000 Request per sec. แน่ๆ และ ถ้าเรา Terminate HTTPS เอง จะได้ราวๆ 20,000 Request per sec.&lt;/p&gt;

&lt;p&gt;ตัวเลขทั้งสองค่า ทั้ง HTTP, HTTPS ผมค่อนข้างพอใจกับตัวเลขนี้ คิดว่า คนจังหวัดชลบุรี ไม่น่าจะใช้เกินนี้ เลยสรุปกันกับทีมว่า จะใช้ Cloudflare เป็น DNS Only เท่านั้น เพราะที่ประชุมเห็นตัวเลขว่ารับได้มากกว่า&lt;/p&gt;

&lt;p&gt;การโหลดเทส ทีมไม่ได้โหลดเทสไปยัง Firebase เพราะเราเชื่อว่า Google จะสามารถรองรับผู้ใช้งานให้เราได้ เราใช้ Firebase Realtime Database ในการเก็บข้อมูล และเช็คว่ามีการลงทะเบียนครบหรือยัง ถ้าครบแล้วจะปิดการลงทะเบียนอัตโนมัติ&lt;/p&gt;




&lt;p&gt;จากการออกแบบ ที่ความไว้ใจ Firebase เราก็ชะล่าใจไประดับหนึ่ง แต่ก็คิดว่า ยังไงมันก็อาจจะเกินโควต้าฟรีของ Firebase ก็เลยไปเพิ่มแพลนของ Firebase เป็น Pay as you go...&lt;/p&gt;




&lt;p&gt;วันที่ระบบขึ้นใช้งานจริง ตอนวันที่ 12 สิงหาคม 2564 เวลาท้องถิ่น 09:00 น. ผมซึ่งคืนก่อนหน้า นั่งทำระบบ Logging Server ไปนอนตอนตีห้า ป่าน น้องในทีมแชทมาว่า ระบบเริ่มหน่วง ผมก็คิดว่า ไม่น่าจะมีปัญหาอะไร เลยตอบแชทไปและนอนต่อ&lt;/p&gt;

&lt;p&gt;ผ่านไปไม่ถึงห้านาที ป่านโทรมา บอกว่า ล่มแล้ว หน่วงมาก ใช้งานไม่ได้ ผมลุกจากที่นอนทันที จากนั้นสิ่งแรกที่ทำคือ ให้ Cloudflare Proxy และแคชให้ด้วยเลย&lt;/p&gt;

&lt;p&gt;แต่ว่าเจอปัญหาต่อมา&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FaGTCl59--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr771vri97mn0axuci93.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FaGTCl59--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr771vri97mn0axuci93.png" alt="Cloudflare Ratelimit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;เราเชื่อใน Cloudflare มากว่า มันเก่ง แต่ลืมคิดไปว่า มันก็มี Limit ของมัน พอผมเจอปัญหานี้ เลยกดจ่ายเงินไป (ตัดบัตรพี่โดม 5555) สำหรับ Pro Plan ราคา $20 ต่อเดือน แต่ว่า เกิดปัญหาขึ้นว่า ตัว Cloudflare เอง มันแคช Dashboard มันเองด้วย (สัส คิดในใจ) ผมคิดว่า แย่ละ Pro Plan ไม่เพียงพอ เลยกดเพิ่มเป็น Biz Plan บวกเพิ่มไปอีก $200 ต่อเดือน (รวม $220 ที่กดไป)&lt;/p&gt;

&lt;p&gt;หลังจากกดไปแล้ว มันเหมือนเดิม... เอ๊ะ...&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%E0%B9%80%E0%B8%AD%E0%B9%8A%E0%B8%B0%E0%B8%B0%E0%B8%B0%E0%B8%B0%E0%B8%B0-"&gt;
  &lt;/a&gt;
  เอ๊ะะะะะ ?
&lt;/h1&gt;

&lt;p&gt;อีหยังวะ ทำไม Cloudflare มันไม่อัปเกรดให้&lt;/p&gt;

&lt;p&gt;ระหว่างนี้คือ ผ่านไปราวๆครึ่งชั่วโมง (ณ 09:30) ผมยังคงเห็น Cloudflare return 503 กลับมาว่า ติด Rate Limit อยู่เลย จากนั้นก็ได้รับแจ้งมาว่า คนลงทะเบียนครบแล้ว คือ รอบแรก จะให้ลงทะเบียนราวๆ 25,000 คน มั้ง ประมาณนั้น แต่ พอคงลงเต็มไปแล้ว ระบบยังได้รับข้อมูลเข้ามาเรื่อยๆ จบที่ราวๆ 30,000 คน&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vKgpXHZf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlgvx4lk0zlgp5ilr59t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vKgpXHZf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlgvx4lk0zlgp5ilr59t.png" alt="Cloudflare Request"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;จากกราฟ จะเห็นว่าตอนช่วงเริ่มเปิดให้ลงทะเบียน จะมี Request พุ่งไปที่ประมาณ 150,000 Request per sec. ซึ่งมากกว่าที่เราโหลดเทสราวๆ 3 เท่า (โหลดเทสที่ 50,000 request per sec)&lt;/p&gt;

&lt;p&gt;ผลก็คือ หน้าเว็บมันไม่แสดงผลแบบสมบูรณ์ แต่ว่า ใช้ cURL ทดสอบเรียกหน้าเว็บจะได้  200 OK นะ แต่ว่า เราออกแบบหน้าเว็บไว้ให้เช็คว่า ลงทะเบียนครบหรือยัง ทำให้ยังมี Request ไปที Firebase Realtime Database อยู่&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--te08CPN_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbrnesut0oqdfox288os.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--te08CPN_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbrnesut0oqdfox288os.png" alt="Full"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ซึ่งตัว Firebase เอง มันคิดค่า Data Transfer ด้วย!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L2aDNXeN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pyx5hb4efpcl0hpum5h6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L2aDNXeN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pyx5hb4efpcl0hpum5h6.png" alt="Firebase Data Transfer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;เหี้ย! แล้วเรา! โดน Data Transfer ไปราวๆ 3.5 TB คิดเป็นเงินราวๆ $3,500 หรือ ราวๆ 115,000 บาท โดยประมาณ จากการเปิดใช้งานระบบ 1 ชั่วโมง&lt;/p&gt;




&lt;p&gt;ข้อมูลจาก Cloudflare&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XhQKtQTk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dkuvujwadkgyuhhg421u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XhQKtQTk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dkuvujwadkgyuhhg421u.png" alt="Cloudflare Request"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#%E0%B8%9B%E0%B8%B1%E0%B8%8D%E0%B8%AB%E0%B8%B2"&gt;
  &lt;/a&gt;
  ปัญหา
&lt;/h1&gt;

&lt;p&gt;ปัญหาที่เราเจอคือ จาก Cloudflare มาหา Origin Server ของเรา Bandwidth เต็ม... เราเลยให้ Cloudflare Cache ให้ แต่ว่า ปัญหามันไม่ได้จบที่ตรงนั้น หลังจากโหลดไฟล์ไปครบจากฝั่ง Cloudflare แล้ว ปัญหาต่อมาคือ Firebase Realtime Database มัน Response ช้า ทำให้หน้าแรกโหลดไม่สมบูรณ์เพราะ รอข้อมูลจาก Firebase ซึ่งเราทำอะไรไม่ได้เลย ณ เวลานั้น&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#%E0%B8%AA%E0%B8%A3%E0%B8%B8%E0%B8%9B"&gt;
  &lt;/a&gt;
  สรุป
&lt;/h1&gt;

&lt;p&gt;Firebase ใช้งานได้ดี ถ้าไม่ได้ใช้มากจนเกินไป แต่การเขียน Query ฝั่ง Firebase ต้องคำนึงถึง Data Transfer ด้วย เพื่อลดค่าใช้จ่ายที่จะเกิดขึ้น&lt;/p&gt;




&lt;p&gt;แผนต่อไปของการลงทะเบียนผมได้ออกแบบแนวทางไว้แล้ว 2 ทาง ไว้จะมาเล่าต่อรอบหน้า&lt;/p&gt;

</description>
      <category>register</category>
      <category>firebase</category>
    </item>
  </channel>
</rss>
