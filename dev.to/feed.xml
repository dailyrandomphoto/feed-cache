<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>08 Advantages Of Using Illustrations In UI Design</title>
      <author>imanbhuiyan96</author>
      <pubDate>Sat, 01 Jan 2022 12:24:56 +0000</pubDate>
      <link>https://dev.to/imanbhuiyan96/08-advantages-of-using-illustrations-in-ui-design-f87</link>
      <guid>https://dev.to/imanbhuiyan96/08-advantages-of-using-illustrations-in-ui-design-f87</guid>
      <description>&lt;p&gt;Let’s &lt;a href="https://vector.cx/08-advantages-of-using-illustrations-in-ui-design/"&gt;talk about&lt;/a&gt; how illustrations can help designers increase the usability of their visual designs and encourage users to keep on reading or interacting with your interfaces.&lt;br&gt;
&lt;a href="https://vector.cx/08-advantages-of-using-illustrations-in-ui-design/"&gt;https://vector.cx/08-advantages-of-using-illustrations-in-ui-design/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>design</category>
      <category>uiweekly</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Add some effects to text using JavaScript</title>
      <author>mohamedfrindi</author>
      <pubDate>Sat, 01 Jan 2022 12:22:37 +0000</pubDate>
      <link>https://dev.to/mohamedfrindi/add-some-effects-to-text-using-javascript-1nk5</link>
      <guid>https://dev.to/mohamedfrindi/add-some-effects-to-text-using-javascript-1nk5</guid>
      <description>&lt;p&gt;You can add some simple effects to texts through this simple library using JavaScript&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;demo&lt;/strong&gt; : &lt;a href="https://github.com/mohamedfrindi/TxtAnime.js"&gt;https://github.com/mohamedfrindi/TxtAnime.js&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>My Roadmap 2022 : from a beginner to advanced developer</title>
      <author>Rawan Amr Abdulsattar</author>
      <pubDate>Sat, 01 Jan 2022 11:38:49 +0000</pubDate>
      <link>https://dev.to/rawan_amr_abdulsattar/my-roadmap-2022-from-a-beginner-to-advanced-developer-1cp4</link>
      <guid>https://dev.to/rawan_amr_abdulsattar/my-roadmap-2022-from-a-beginner-to-advanced-developer-1cp4</guid>
      <description>&lt;p&gt;At the end of &lt;strong&gt;2021&lt;/strong&gt; I found myself a programmer who only knows about some programming languages and some frameworks but with no real programming experience,no projects and no achievements. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-"&gt;
  &lt;/a&gt;
  Why ?
&lt;/h2&gt;

&lt;p&gt;It was because I didn't start with the &lt;strong&gt;fundamentals&lt;/strong&gt;, I didn't learn about algorithms, data structures or anything important as Big O.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-decision"&gt;
  &lt;/a&gt;
  My Decision
&lt;/h2&gt;

&lt;p&gt;I decided to start from the beginning as if I learnt nothing before, and then wrote my goals of 2022, &lt;strong&gt;a modified roadmap every beginner should use.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My Roadmap 2022:&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-introduction-to-programming"&gt;
  &lt;/a&gt;
  1- Introduction to programming:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--586swKkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/27fm0ravp7i1pmwjzi4i.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--586swKkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/27fm0ravp7i1pmwjzi4i.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Programming is writing computer code to create a program, to solve a problem. Programs are created to implement algorithms . Algorithms can be represented as pseudocode or a flowchart , and programming is the translation of these into a computer program.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=zOjov-2OZ0E&amp;amp;t=378s"&gt;Freecodecamp video&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2algorithms-and-data-structures"&gt;
  &lt;/a&gt;
  2-Algorithms and data structures
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SST-1-rv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w00hhh69j0sbv5ravlhp.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SST-1-rv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w00hhh69j0sbv5ravlhp.jpeg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
A data structure is a named location that can be used to store and organize data. And, an algorithm is a collection of steps to solve a particular problem. Learning data structures and algorithms allow us to write efficient and optimized computer programs.&lt;br&gt;
Freecodecamp videos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First video : &lt;a href="https://www.youtube.com/watch?v=RBSGKlAvoiM&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=4"&gt;https://www.youtube.com/watch?v=RBSGKlAvoiM&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=4&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Second video: &lt;a href="https://www.youtube.com/watch?v=zg9ih6SVACc&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=5"&gt;https://www.youtube.com/watch?v=zg9ih6SVACc&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=5&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Third video: &lt;a href="https://www.youtube.com/watch?v=BBpAmxU_NQo&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=8"&gt;https://www.youtube.com/watch?v=BBpAmxU_NQo&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=8&lt;/a&gt;&lt;br&gt;
)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-learn-dynamic-programming"&gt;
  &lt;/a&gt;
  3- Learn dynamic programming
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xdWsKXKL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fkx4hhs9tplp1rabydj1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xdWsKXKL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fkx4hhs9tplp1rabydj1.png" alt="Image description" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dynamic programming is both a mathematical optimization method and a computer programming method. &lt;br&gt;
Freecodecamp dynamic programming video: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=oBt53YbR9Kk&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=7"&gt;https://www.youtube.com/watch?v=oBt53YbR9Kk&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=7&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-take-cs50-course"&gt;
  &lt;/a&gt;
  4- Take CS50 Course:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZFD5Cm7d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q41284kkcsupetnz4uai.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZFD5Cm7d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q41284kkcsupetnz4uai.jpg" alt="Image description" width="650" height="327"&gt;&lt;/a&gt;&lt;br&gt;
CS50 is an on-campus and online introductory course on computer science taught at Harvard University and Yale University. In 2016, CS50 became available to high school students as an Advanced Placement Computer Science course&lt;/p&gt;

&lt;p&gt;Most Important lectures in my opinion are :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=tI_tIZFyKBw&amp;amp;list=PLzHzhIMAxNqybs6a-CaQ_ClV2BhKpWtjj&amp;amp;index=3"&gt;Arrays&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=gR6nycuZKlM&amp;amp;list=PLzHzhIMAxNqybs6a-CaQ_ClV2BhKpWtjj&amp;amp;index=4"&gt;Algorithms&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=NKTfNv2T0FE&amp;amp;list=PLzHzhIMAxNqybs6a-CaQ_ClV2BhKpWtjj&amp;amp;index=5"&gt;Memory&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=2T-A_GFuoTo&amp;amp;list=PLzHzhIMAxNqybs6a-CaQ_ClV2BhKpWtjj&amp;amp;index=6"&gt;Data structures&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=ZEQh45W_UDo&amp;amp;list=PLzHzhIMAxNqybs6a-CaQ_ClV2BhKpWtjj&amp;amp;index=7"&gt;Python&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Wb0DM9I8RDo&amp;amp;list=PLzHzhIMAxNqybs6a-CaQ_ClV2BhKpWtjj&amp;amp;index=8"&gt;SQL&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-learn-about-big-o-notation"&gt;
  &lt;/a&gt;
  5- learn about BIG O notation:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1qVd7nvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j80rkuszey1qiyrhq9ey.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1qVd7nvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j80rkuszey1qiyrhq9ey.png" alt="Image description" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
Big O notation is a mathematical notation that describes the limiting behavior of a function when the argument tends towards a particular value or infinity.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Freecodecamp : &lt;a href="https://www.youtube.com/watch?v=Mo4vesaut8g&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=1"&gt;https://www.youtube.com/watch?v=Mo4vesaut8g&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CS dojo: &lt;a href="https://www.youtube.com/watch?v=D6xkbGLQesk&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=2"&gt;https://www.youtube.com/watch?v=D6xkbGLQesk&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=2&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hacker rank: &lt;a href="https://www.youtube.com/watch?v=v4cd1O4zkGw&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=3"&gt;https://www.youtube.com/watch?v=v4cd1O4zkGw&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#6-learn-dart-and-flutter"&gt;
  &lt;/a&gt;
  6- Learn Dart and flutter:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UKgllGO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tdp7atz4s3th5g09hw9h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UKgllGO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tdp7atz4s3th5g09hw9h.png" alt="Image description" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
Flutter is a cross-platform software development framework that was presented by Google in 2015 and received its first release in May of 2017. Flutter nowadays has steadily grown and provided possibilities not only for iOS and Android mobile development but also for web and desktop applications as well.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Freecodecamp : &lt;a href="https://www.youtube.com/watch?v=pTJJsmejUOQ&amp;amp;t=35s"&gt;https://www.youtube.com/watch?v=pTJJsmejUOQ&amp;amp;t=35s&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Acadmind: &lt;a href="https://www.youtube.com/watch?v=x0uinJvhNxI&amp;amp;t=272s"&gt;https://www.youtube.com/watch?v=x0uinJvhNxI&amp;amp;t=272s&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The net ninja : &lt;a href="https://www.youtube.com/watch?v=1ukSR1GRtMU&amp;amp;list=PL4cUxeGkcC9jLYyp2Aoh6hcWuxFDX6PBJ"&gt;https://www.youtube.com/watch?v=1ukSR1GRtMU&amp;amp;list=PL4cUxeGkcC9jLYyp2Aoh6hcWuxFDX6PBJ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#7program-projects-on-your-own"&gt;
  &lt;/a&gt;
  7-Program projects on your own
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5cOgslQM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/abl1vpwux2mmq7xewcha.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5cOgslQM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/abl1vpwux2mmq7xewcha.jpg" alt="Image description" width="710" height="311"&gt;&lt;/a&gt;&lt;br&gt;
After you practice projects in the coursesyou should make at least 4-6 projects on your own from scratch and upload them on GitHub&lt;/p&gt;

&lt;p&gt;project ideas:&lt;/p&gt;

&lt;p&gt;👉 Uber Clone with Flutter. ...&lt;br&gt;
👉 E-Commerce App using Flutter. ...&lt;br&gt;
👉 Clubhouse Clone UI using Flutter. ...&lt;br&gt;
👉 SpaceX Go - Launch Tracker using Flutter. ...&lt;br&gt;
👉 Tetris Game using Flutter. ...&lt;br&gt;
👉 Build a Beautiful Pokedex (Pokemon) App using Flutter. ...&lt;br&gt;
👉 Game Store using Flutter. ...&lt;br&gt;
👉 Proximity - Flutter Widgets App.&lt;/p&gt;

&lt;p&gt;Read this &lt;a href="https://www.theinsaneapp.com/2021/06/flutter-projects-with-source-code.html"&gt;article&lt;/a&gt; for more project ideas&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-read-books"&gt;
  &lt;/a&gt;
  8- Read books
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gqwa24_s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/52j1s7dofierl8m8qg7j.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gqwa24_s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/52j1s7dofierl8m8qg7j.jpeg" alt="Image description" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
You must read one book at least about programming and it will help you.&lt;/p&gt;

&lt;p&gt;Books about flutter:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Beginning App Development with Flutter.&lt;/li&gt;
&lt;li&gt;Beginning Flutter: A Hands On Guide to App Development.&lt;/li&gt;
&lt;li&gt;Flutter Apprentice.&lt;/li&gt;
&lt;li&gt;Flutter Complete Reference.&lt;/li&gt;
&lt;li&gt;Flutter: Développez vos applications mobiles multiplateformes avec Dart.&lt;/li&gt;
&lt;li&gt;Flutter for Beginners.&lt;/li&gt;
&lt;li&gt;Flutter in Action.&lt;/li&gt;
&lt;li&gt;Flutter Libraries We Love.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#9-build-your-resume"&gt;
  &lt;/a&gt;
  9- Build your resume
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LgsRDNOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0kglli3mrvr1nflk319.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LgsRDNOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0kglli3mrvr1nflk319.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Build a nice resume to land your first job, and it should include :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Your name, email address, and social media accounts&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;skills with the percentage of experience&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;project links on GitHub&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;your education level and degree if you have one&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;course certifications if present&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;languages you speak and mention your mother language&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#so"&gt;
  &lt;/a&gt;
  So,
&lt;/h2&gt;

&lt;p&gt;That was it for this post , follow me , like ,share if you like it and if you have any comments type them in the comment section below and thanks for reading.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#information-about-me-"&gt;
  &lt;/a&gt;
  Information about me :
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Name: Rawan Amr Abdulsattar&lt;/li&gt;
&lt;li&gt;Gender: female&lt;/li&gt;
&lt;li&gt;Nationality: Egyptian&lt;/li&gt;
&lt;li&gt;Blog: &lt;a href="https://codewithrona.blogspot.com/"&gt;https://codewithrona.blogspot.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Email address: &lt;a href="mailto:rawanamrabdulsattar@gmail.com"&gt;rawanamrabdulsattar@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Dev.To account: &lt;a href="https://dev.to/rawan_amr_abdulsattar"&gt;https://dev.to/rawan_amr_abdulsattar&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Twitter : &lt;a href="https://twitter.com/RawanAmr1552006"&gt;https://twitter.com/RawanAmr1552006&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Instagram : &lt;a href="https://www.instagram.com/rawanamr1552006/"&gt;https://www.instagram.com/rawanamr1552006/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>android</category>
      <category>flutter</category>
      <category>mobile</category>
    </item>
    <item>
      <title>Create Image slider using Js and CSS</title>
      <author>anomaly3108</author>
      <pubDate>Sat, 01 Jan 2022 11:25:25 +0000</pubDate>
      <link>https://dev.to/anomaly3108/create-image-slider-using-js-and-css-48l3</link>
      <guid>https://dev.to/anomaly3108/create-image-slider-using-js-and-css-48l3</guid>
      <description>&lt;p&gt;In this article, we are going to make an Image Slider with a clean UI and smooth transition. First, Let's see what are we building.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#preview"&gt;
  &lt;/a&gt;
  PREVIEW
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1VPCyh4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkchj8pzdo19yd1sqmz2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1VPCyh4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkchj8pzdo19yd1sqmz2.gif" alt="Image description" width="575" height="402"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="container"&amp;gt;
     &amp;lt;div class="img-comp-container"&amp;gt;
          &amp;lt;div class="img-comp-img"&amp;gt;
               &amp;lt;img src="a.png" height="400" width="300"&amp;gt;
          &amp;lt;/div&amp;gt;
          &amp;lt;div class="img-comp-img img-comp-overlay"&amp;gt;
               &amp;lt;img src="b.png" height="400" width="300"&amp;gt;
          &amp;lt;/div&amp;gt;
     &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will have an outer div with class &lt;code&gt;.img-comp-container&lt;/code&gt;. It will have two separate children.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;.img-comp-img&lt;/code&gt;: It will contain the first image.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;.img-comp-overlay&lt;/code&gt;: It will contain the second image for overlay. This image will be overlayed over the top of first image to create the effect of sliding.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I guess now you have an overview of what are we doing. Now let's get into the CSS.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;* {
    box-sizing: border-box;
}

.img-comp-container {
    position: relative;
    height: 500px;
}

.img-comp-img {
    position: absolute;
    width: auto;
    height: auto;
    overflow: hidden;
}

.img-comp-img img {
    padding: 20px;
    display: table-row;
}
.container {
    display: table;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This CSS is for the image that will be displayed on the screen.&lt;br&gt;
Everything above is self-explanatory but If you have any queries then comment down.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.img-comp-slider {
    position: absolute;
    z-index: 9;
    cursor: ew-resize;
    /*set the appearance of the slider:*/
    width: 40px;
    height: 40px;
    background: url(slider_icon.jpg);
    background-color: #ffffff70;
    background-repeat: round;
    backdrop-filter: blur(5px);
    border-radius: 50%;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;this CSS is for the slider button &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  Javascript
&lt;/h1&gt;

&lt;p&gt;This is where the fun begins. Let's see from the scratch.&lt;br&gt;
First, we need to find all elements with an "overlay" (&lt;code&gt;img-comp-overlay&lt;/code&gt;) class&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var x, i;
    /*find all elements with an "overlay" class:*/
    x = document.getElementsByClassName("img-comp-overlay");
    for (i = 0; i &amp;lt; x.length; i++) {
        /*once for each "overlay" element:
        pass the "overlay" element as a parameter when executing the compareImages function:*/
        compareImages(x[i]);
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we will create a function &lt;code&gt;compareImages&lt;/code&gt; with an &lt;code&gt;img&lt;/code&gt; parameter&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function compareImages(img) {
   var slider, img, clicked = 0, w, h;
   /*get the width and height of the img element*/
   w = img.offsetWidth;
   h = img.offsetHeight;
   /*set the width of the img element to 50%:*/
   img.style.width = (w / 2) + "px";
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, We will create the slider using Js in the same function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/*create slider:*/
slider = document.createElement("DIV");
slider.setAttribute("class", "img-comp-slider");
/*insert slider*/
img.parentElement.insertBefore(slider, img);
position the slider in the middle:*/
slider.style.top = (h / 2) - (slider.offsetHeight / 2) + "px";
slider.style.left = (w / 2) - (slider.offsetWidth / 2) + "px";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, Let us add the listeners that will be triggered when we press the mouse button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/*execute a function when the mouse button is pressed:*/
slider.addEventListener("mousedown", slideReady);
/*and another function when the mouse button is released:*/
window.addEventListener("mouseup", slideFinish);    
/*or touched (for touch screens:*/
slider.addEventListener("touchstart", slideReady);
/*and released (for touch screens:*/
window.addEventListener("touchstop", slideFinish);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, Basic structure of our slider is created. Next we need to create some functions that will perform the main functionality of the slider. i.e, Slide over the the image.&lt;/p&gt;

&lt;p&gt;For this we will first create &lt;code&gt;slideReady&lt;/code&gt; Function inside the &lt;code&gt;compareImages&lt;/code&gt; Function that will be executed when mouse button is pressed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function slideReady(e) {
    /*prevent any other actions that may occur when moving over the image:*/
    e.preventDefault();
    /*the slider is now clicked and ready to move:*/
    clicked = 1;
    /*execute a function when the slider is moved:*/
    window.addEventListener("mousemove", slideMove);
    window.addEventListener("touchmove", slideMove);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, create another Function inside the &lt;code&gt;compareImages&lt;/code&gt; Function when the slider is no longer clicked&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function slideFinish() {
    /*the slider is no longer clicked:*/
    clicked = 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we will create 3 more functions in &lt;code&gt;compareImages&lt;/code&gt; with which we will get the cursor position and move the slider accordingly across the Image window&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function slideMove(e) {
    var pos;
    /*if the slider is no longer clicked, exit this function:*/
    if (clicked == 0) return false;
    /*get the cursor's x position:*/
    pos = getCursorPos(e)
        /*prevent the slider from being positioned outside the image:*/
    if (pos &amp;lt; 0) pos = 0;
    if (pos &amp;gt; w) pos = w;
    /*execute a function that will resize the overlay image according to the cursor:*/
    slide(pos);
}

function getCursorPos(e) {
    var a, x = 0;
    e = e || window.event;
    /*get the x positions of the image:*/
    a = img.getBoundingClientRect();
    /*calculate the cursor's x coordinate, relative to the image:*/
    x = e.pageX - a.left;
    /*consider any page scrolling:*/
    x = x - window.pageXOffset;
    return x;
}

function slide(x) {
    /*resize the image:*/
    img.style.width = x + "px";
    /*position the slider:*/
    slider.style.left = img.offsetWidth - (slider.offsetWidth / 2) + "px";
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Wrap it all in a parent function with name &lt;code&gt;initComparisons&lt;/code&gt;.&lt;br&gt;
Now we have covered all the aspects of this now let's see the full  &lt;code&gt;Scripts.js&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function initComparisons() {
    var x, i;
    /*find all elements with an "overlay" class:*/
    x = document.getElementsByClassName("img-comp-overlay");
    for (i = 0; i &amp;lt; x.length; i++) {
        /*once for each "overlay" element:
        pass the "overlay" element as a parameter when executing the compareImages function:*/
        compareImages(x[i]);
    }

    function compareImages(img) {
        var slider, img, clicked = 0,
            w, h;
        /*get the width and height of the img element*/
        w = img.offsetWidth;
        h = img.offsetHeight;
        /*set the width of the img element to 50%:*/
        img.style.width = (w / 2) + "px";
        /*create slider:*/
        slider = document.createElement("DIV");
        slider.setAttribute("class", "img-comp-slider");
        /*insert slider*/
        img.parentElement.insertBefore(slider, img);
        /*position the slider in the middle:*/
        slider.style.top = (h / 2) - (slider.offsetHeight / 2) + "px";
        slider.style.left = (w / 2) - (slider.offsetWidth / 2) + "px";
        /*execute a function when the mouse button is pressed:*/
        slider.addEventListener("mousedown", slideReady);
        /*and another function when the mouse button is released:*/
        window.addEventListener("mouseup", slideFinish);
        /*or touched (for touch screens:*/
        slider.addEventListener("touchstart", slideReady);
        /*and released (for touch screens:*/
        window.addEventListener("touchstop", slideFinish);

        function slideReady(e) {
            /*prevent any other actions that may occur when moving over the image:*/
            e.preventDefault();
            /*the slider is now clicked and ready to move:*/
            clicked = 1;
            /*execute a function when the slider is moved:*/
            window.addEventListener("mousemove", slideMove);
            window.addEventListener("touchmove", slideMove);
        }

        function slideFinish() {
            /*the slider is no longer clicked:*/
            clicked = 0;
        }

        function slideMove(e) {
            var pos;
            /*if the slider is no longer clicked, exit this function:*/
            if (clicked == 0) return false;
            /*get the cursor's x position:*/
            pos = getCursorPos(e)
                /*prevent the slider from being positioned outside the image:*/
            if (pos &amp;lt; 0) pos = 0;
            if (pos &amp;gt; w) pos = w;
            /*execute a function that will resize the overlay image according to the cursor:*/
            slide(pos);
        }

        function getCursorPos(e) {
            var a, x = 0;
            e = e || window.event;
            /*get the x positions of the image:*/
            a = img.getBoundingClientRect();
            /*calculate the cursor's x coordinate, relative to the image:*/
            x = e.pageX - a.left;
            /*consider any page scrolling:*/
            x = x - window.pageXOffset;
            return x;
        }

        function slide(x) {
            /*resize the image:*/
            img.style.width = x + "px";
            /*position the slider:*/
            slider.style.left = img.offsetWidth - (slider.offsetWidth / 2) + "px";
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the final step, use this script in HTML and call the &lt;code&gt;initComparisons&lt;/code&gt; function at the starting of the page where you want the slider.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    initComparisons();
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The final product will look like:-&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yvv3x-Ro--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/044pq2jwhnu83l1lgrwj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yvv3x-Ro--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/044pq2jwhnu83l1lgrwj.gif" alt="Image description" width="400" height="540"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h1&gt;

&lt;p&gt;I hope you enjoyed the article, if yes then don't forget to press ❤️. You can also bookmark it for later use. It was fun to make this slider and If you have any queries or suggestions don't hesitate to drop them. See you. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>css</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Upload multiple images and rename them using drag &amp; drop UI using dropzone.js</title>
      <author>Sahil kashyap</author>
      <pubDate>Sat, 01 Jan 2022 11:18:17 +0000</pubDate>
      <link>https://dev.to/sahilkashyap64/upload-multiple-images-and-rename-them-using-drag-drop-ui-using-dropzonejs-3e0j</link>
      <guid>https://dev.to/sahilkashyap64/upload-multiple-images-and-rename-them-using-drag-drop-ui-using-dropzonejs-3e0j</guid>
      <description>&lt;h2&gt;
  &lt;a href="#dropzonejs-multiupload-with-rename-functionality"&gt;
  &lt;/a&gt;
  Dropzone.js Multiupload with rename functionality
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#scenrio-user-wants-to-upload-logos-of-tv-channelssports-team-etc-if-he-uploads-one-by-one-it-is-a-hassle"&gt;
  &lt;/a&gt;
  Scenrio: User wants to upload logos of tv channels/sports team etc, if he uploads one by one it is a hassle.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Rough design, how UI might look(How I intially imagined it to be)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z2FA-uSH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/sahilkashyap64/dropzone-sortablejs-multiupload-rename/master/img/UI%2520formultiupload%2520and%2520rename.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z2FA-uSH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/sahilkashyap64/dropzone-sortablejs-multiupload-rename/master/img/UI%2520formultiupload%2520and%2520rename.png" alt="UI drawn using excalidraw" width="880" height="263"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#used-these-js-lib"&gt;
  &lt;/a&gt;
  Used these js lib
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Lib&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Use&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;dropzone.min.js&lt;/td&gt;
&lt;td&gt;^5.9.3&lt;/td&gt;
&lt;td&gt;Multi drop images&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sortable.js&lt;/td&gt;
&lt;td&gt;^*&lt;/td&gt;
&lt;td&gt;Sort dropzone instances&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select2.min.js&lt;/td&gt;
&lt;td&gt;^4.0.13&lt;/td&gt;
&lt;td&gt;For multiselect&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;jquery.js&lt;/td&gt;
&lt;td&gt;^0.3.1&lt;/td&gt;
&lt;td&gt;simple add/remove items from dom&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Using Html drag and drop API, was able to create the ui.&lt;br&gt;
Renaming is done via server side(Laravel php),I just pass 2 arrays&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Files&lt;/li&gt;
&lt;li&gt;Names&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Simply merge the arrays,save the file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/32007662/147849196-5ba3c92c-1fd4-49e4-a83f-e7e998ba05bb.mp4"&gt;video demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/sahilkashyap64/dropzone-sortablejs-multiupload-rename"&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For backend check gist &lt;a href="https://gist.github.com/sahilkashyap64/7db7a3d0e2877158bcd293223564707e"&gt;code&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>ux</category>
      <category>webdev</category>
      <category>php</category>
    </item>
    <item>
      <title>Docker - Run/Refactor PHP code from a web interface</title>
      <author>Christophe Avonture</author>
      <pubDate>Sat, 01 Jan 2022 11:11:31 +0000</pubDate>
      <link>https://dev.to/cavo789/docker-runrefactor-php-code-from-a-web-interface-1ffn</link>
      <guid>https://dev.to/cavo789/docker-runrefactor-php-code-from-a-web-interface-1ffn</guid>
      <description>&lt;p&gt;As a loyal reader of several forums for years, I frequently find unreadable PHP code posted by beginners asking for help. Before we can try to help them, it is sometimes useful to reformat the code and rewrite it partially. This can take times...&lt;/p&gt;

&lt;p&gt;To execute the code to see where the problem is before fixing it, I have been using the &lt;a href="https://github.com/websiteduck/Run-PHP-Code"&gt;Run-PHP-Code&lt;/a&gt; tool for a few years but it does not meet the need for reformatting (&lt;a href="https://github.com/FriendsOfPHP/PHP-CS-Fixer"&gt;php-cs-fixer&lt;/a&gt; / &lt;a href="https://github.com/squizlabs/PHP_CodeSniffer/"&gt;php code-beautifier&lt;/a&gt;) or refactoring (&lt;a href="https://github.com/rectorphp/rector"&gt;rector&lt;/a&gt;). Second disadvantage here (since I don't trust the PHP code), &lt;em&gt;Run-PHP-Code&lt;/em&gt; is running on my localhost i.e. on my machine and that can represent a risk (creation/deletion of files, ...). The ideal is to execute the code in a sandbox.&lt;/p&gt;

&lt;p&gt;It had been a while since I wanted to do it: I took some hours to take the code of &lt;em&gt;Run-PHP-Code&lt;/em&gt; to make his own Docker image, based on PHP 7.4.26 and thus to allow to run it in a secure environment.&lt;/p&gt;

&lt;p&gt;I also took the time to add a "refactor" button which then calls php-cs-fixer, phpcbf and Rector.&lt;/p&gt;

&lt;p&gt;The result is this ready-to-use Docker image: &lt;a href="https://hub.docker.com/r/cavo789/runcode"&gt;https://hub.docker.com/r/cavo789/runcode&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In only two CLI commands, you will have a web interface with an editor where, on the left side, you can copy/paste or type a PHP code and on the right side visualize the result of its execution (button &lt;code&gt;Run&lt;/code&gt;) or its refactoring (button &lt;code&gt;Refactor&lt;/code&gt;); the whole running in a Docker container and thus isolated from your machine. &lt;/p&gt;

&lt;p&gt;Pretty easy and helpful when trying to give support on forums.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--33DZxp0n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25uvrxisg07nwr7sygsz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--33DZxp0n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25uvrxisg07nwr7sygsz.png" alt="Run and refactor php from an isolated environment" width="880" height="488"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>docker</category>
      <category>php</category>
      <category>tooling</category>
      <category>refactorit</category>
    </item>
    <item>
      <title>One of the most powerful Software Development tool - 2 mins read</title>
      <author>Burhanuddin Bhopalwala</author>
      <pubDate>Sat, 01 Jan 2022 10:40:45 +0000</pubDate>
      <link>https://dev.to/burhanuddinbhopalwala/one-of-the-most-powerful-software-development-tool-2-mins-read-24li</link>
      <guid>https://dev.to/burhanuddinbhopalwala/one-of-the-most-powerful-software-development-tool-2-mins-read-24li</guid>
      <description>&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#chapter-1"&gt;Tool Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-2"&gt;Tool Management/Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#chapter-3"&gt;Best practices and tips&lt;/a&gt;
...&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#tool-introduction"&gt;
  &lt;/a&gt;
  Tool Introduction &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Hello everyone! In this short article, I wanted to share with the DEV community here a utility tool that immensely me in 2021 for managing and developing the Software(s) I worked on.&lt;/p&gt;

&lt;p&gt;I am talking about &lt;code&gt;asdf&lt;/code&gt;. While most of the PRO developers out there are aware of it. This article is to share with community members who are unaware of this like I was a few months back.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;asdf&lt;/code&gt; is a CLI tool for managing &lt;strong&gt;multiple runtime(s)&lt;/strong&gt; via extendable plugins - docs at &lt;a href="//asdf-vm.com"&gt;asdf&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With this one single CLI tool, not only you can &lt;strong&gt;manage and switch to multiple runtime/s and its version/s&lt;/strong&gt; but can also simply avoid the &lt;strong&gt;installation overhead&lt;/strong&gt;. Thus, having a levy to switch the runtime versions in between projects you are working on. &lt;/p&gt;

&lt;p&gt;So how does it works? I will be explaining this in brief in the following content.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tool-managementusage"&gt;
  &lt;/a&gt;
  Tool Management/Usage &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;You can easily install &lt;code&gt;asdf&lt;/code&gt; from &lt;a href="http://asdf-vm.com/guide/getting-started.html#_3-install-asdf"&gt;here&lt;/a&gt;. It has all the details and has good documentation available.&lt;/p&gt;

&lt;p&gt;So, It's really simple, &lt;code&gt;asdf&lt;/code&gt; for each runtime uses a &lt;code&gt;git&lt;/code&gt; plugin. A plugin shares one-to-one mapping with the runtime you want to install. After adding a plugin you can now install multiple versions of the runtime using the same plugin. Here are the simple 4 steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Search for a plugin&lt;br&gt;
&lt;code&gt;asdf plugin-list-all | grep python&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install/Add a plugin&lt;br&gt;
&lt;code&gt;asdf plugin-add python&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install a runtime version of your choice, default is the latest stable head/version&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;asdf install python latest&lt;/code&gt;&lt;br&gt;
&lt;code&gt;asdf global python latest&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Above command will make an entry into an &lt;code&gt;$HOME/.tool-versions&lt;/code&gt; file (more details to follow on this config file)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;You can not install other runtime versions by repeating the above step no need to add a plugin as it's a one-time process&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;asdf install python 3.8.7&lt;/code&gt;&lt;br&gt;
&lt;code&gt;asdf local python 3.8.7&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Above command will make an entry into an &lt;code&gt;$WORK_DIR/.tool-versions&lt;/code&gt; file (more details to follow on this config file)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;By using local scope you can set the asdf version for local project scope runs on python 3.8.7 and not on python latest/3.10.1&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Yx-AbHB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x3rz1g87rjymltfvcpjf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Yx-AbHB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x3rz1g87rjymltfvcpjf.png" alt="asdf runtime/python installation" width="880" height="890"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Another example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FAFzd-3v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9f3pfh3w0ox09yks4hip.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FAFzd-3v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9f3pfh3w0ox09yks4hip.png" alt="asdf runtime/scala installation" width="880" height="723"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Currently, with the help of &lt;code&gt;asdf&lt;/code&gt;, I can easily manage all the below runtimes some with even multiple versions like for &lt;code&gt;nodeJS&lt;/code&gt;, &lt;code&gt;python&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j8u8uitT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h1bk2j9h8veeme9drfzj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j8u8uitT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h1bk2j9h8veeme9drfzj.png" alt="asdf multiple runtime installations" width="880" height="544"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Attaching the code block below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;❯ asdf plugin-list --urls --refs
act         https://github.com/grimoh/asdf-act.git master 8729029
aws-vault   https://github.com/beardix/asdf-aws-vault.git master 937a1db
awscli      https://github.com/MetricMike/asdf-awscli.git main b9ba4c7
docker-slim https://github.com/everpeace/asdf-docker-slim.git master 4ee75a3
golang      https://github.com/kennyp/asdf-golang.git master 1f388f1
helm        https://github.com/Antiarchitect/asdf-helm.git master 87eef5a
java        https://github.com/halcyon/asdf-java.git master f0c702f
jq          https://github.com/ryodocx/asdf-jq.git master 3144577
kubectl     https://github.com/asdf-community/asdf-kubectl.git master da7bb0b
minikube    https://github.com/alvarobp/asdf-minikube.git master 8ca7b8d
mysql       https://github.com/iroddis/asdf-mysql.git master 3aaf756
nodejs      https://github.com/asdf-vm/asdf-nodejs.git master cb61e3d
perl        https://github.com/ouest/asdf-perl.git master 31bb799
php         https://github.com/asdf-community/asdf-php.git master 759843b
postgres    https://github.com/smashedtoatoms/asdf-postgres.git master 4f8b356
python      https://github.com/danhper/asdf-python.git master 8ab052f
redis       https://github.com/smashedtoatoms/asdf-redis.git master bf1276e
ruby        https://github.com/asdf-vm/asdf-ruby.git master f134c2d
sbt         https://github.com/bram2000/asdf-sbt.git master 33f9637
scala       https://github.com/asdf-community/asdf-scala.git master 1206055
skaffold    https://github.com/virtualstaticvoid/asdf-skaffold.git master c942ecf
spark       https://github.com/joshuaballoch/asdf-spark.git master 6fe49de
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#best-practices-and-tips"&gt;
  &lt;/a&gt;
  Best practices and tips &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#1-use-of-raw-hometoolversions-endraw-"&gt;
  &lt;/a&gt;
  1: Use of &lt;code&gt;$HOME/.tool-versions&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;I want to share some useful tips to make full use of &lt;code&gt;asdf&lt;/code&gt;. For most of the runtimes (particularly for a programming language(s), we maintain a &lt;em&gt;version file&lt;/em&gt; as a satellite file inside the project.&lt;/p&gt;

&lt;p&gt;For &lt;em&gt;python&lt;/em&gt; it is &lt;code&gt;.python-version&lt;/code&gt;, for &lt;em&gt;nodeJS&lt;/em&gt; it is &lt;code&gt;.nvmrc&lt;/code&gt; and for &lt;em&gt;RoR&lt;/em&gt; it is &lt;code&gt;.ruby-version&lt;/code&gt;. These files are recognized as &lt;em&gt;legacy&lt;/em&gt; files to &lt;code&gt;asdf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For &lt;code&gt;asdf&lt;/code&gt; that satellite file is called &lt;code&gt;.tool-versions&lt;/code&gt;. You can maintain one copy under a &lt;code&gt;$HOME/.tool-versions&lt;/code&gt; directory to mention the version you want to use globally.&lt;/p&gt;

&lt;p&gt;For local projects, you can add another &lt;code&gt;.tool_verisons&lt;/code&gt; file under &lt;code&gt;$WORK_DIR/.tool-versions&lt;/code&gt;. So every time you check-in into the project &lt;code&gt;asdf&lt;/code&gt; knows which version to switch for a particular runtime.&lt;/p&gt;

&lt;p&gt;This is what my &lt;code&gt;~/.tool-versions&lt;/code&gt; file looks like (globally) attaching for reference.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rXXHPbAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fv5esgjgrnafenhlacow.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rXXHPbAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fv5esgjgrnafenhlacow.png" alt="Global tool-versions" width="880" height="1481"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-use-of-raw-homeasdfrc-endraw-"&gt;
  &lt;/a&gt;
  2: Use of &lt;code&gt;$HOME/.asdfrc&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;You may not want to use/manage multiple satellite files just for the sake of auto-switching of the runtime version. In such a case we can you one config file &lt;code&gt;~/.asdfrc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;~/.asdfrc&lt;/code&gt; is the configuration file for managing &lt;code&gt;asdf&lt;/code&gt;. As spells out from the file name it is based on &lt;strong&gt;cosmic config&lt;/strong&gt; configuration.&lt;/p&gt;

&lt;p&gt;For &lt;code&gt;asdf&lt;/code&gt; to work with the legacy version file you need to turn on the switch for &lt;code&gt;legacy_version_file&lt;/code&gt; under &lt;code&gt;$HOME/.asdfrc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;legacy_version_file = yes&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If this config is turned on it means that &lt;code&gt;asdf&lt;/code&gt; can globally/locally pick the versions based on the legacy file if the &lt;code&gt;.tool-versions&lt;/code&gt; file is not found. More details &lt;a href="//ide/getting-started.html#using-existing-tool-version-files"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A more generic use case is to have one &lt;code&gt;.tool-versions&lt;/code&gt; file for a project which builds on using multiple runtimes of a particular version. It makes lots of sense to switch to a single &lt;code&gt;.tool-versions&lt;/code&gt; file instead of maintaining multiple &lt;code&gt;legacy&lt;/code&gt; files. O/w in most cases legacy files are usually preferred! and &lt;code&gt;asdf&lt;/code&gt; support that as well via the &lt;code&gt;.asdfrc&lt;/code&gt; config file as mentioned above.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-from-my-experience-with-this-tool"&gt;
  &lt;/a&gt;
  3: From my experience with this tool
&lt;/h4&gt;

&lt;p&gt;It may happen that you for some runtimes/tools you are not able to install/list a plugin, in such cases, a google search will help. For example below plugin URL, I found by searching on Google.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W95nL45J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c6j62fva8es0tjci7i1o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W95nL45J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c6j62fva8es0tjci7i1o.png" alt="asdf built-in plugin not found" width="880" height="357"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope, this article may help the DEV community who are unaware of this cool utility software development till the time of reading this post. &lt;/p&gt;

&lt;p&gt;It not only help to manage &lt;strong&gt;multiple runtime(s)&lt;/strong&gt; in a single click but at the same time helps in avoiding all the &lt;strong&gt;installation overhead&lt;/strong&gt; and conflicts among them.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Lastly, you might be wondering about the full form/meaning of &lt;code&gt;asdf&lt;/code&gt; let me tell you its a series of keys on your keyboard :)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thanks for reading.&lt;br&gt;
&lt;a href="https://medium.com/@burhanuddinbhopalwala"&gt;https://medium.com/@burhanuddinbhopalwala&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>In JavaScript Console Other Than Console.log()</title>
      <author>Kamran Ahmad</author>
      <pubDate>Sat, 01 Jan 2022 10:39:06 +0000</pubDate>
      <link>https://dev.to/officialkamran/in-javascript-console-other-than-consolelog-5222</link>
      <guid>https://dev.to/officialkamran/in-javascript-console-other-than-consolelog-5222</guid>
      <description>&lt;ol&gt;
&lt;li&gt;Console.count()&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let assume you want to keep a count of how many click the user makes on the button. The code with .log() might look like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let userClickCounter = 0;
function watchUserClicks(){
userClickCounter++;
console.log("User Clicked ${userClickCounter}")
}
&amp;lt;button onclick = "watchUserClicks()"&amp;gt;
Click Me to Without pause
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The other method is also present&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function watchUserClick(){
consol.count('User Click');
}
&amp;lt;button onclick = "watchUserClicks()"&amp;gt;
Click Me to Without pause
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here the need for variable and its related code is eliminated thereby, making the code optimal and readable.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Console.Dir()&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This method shows all the properties of the JS Object.&lt;br&gt;
The console.log() print out toString representation whereas consol.dir() print out a navigation tree&lt;/p&gt;

&lt;p&gt;see the difference:-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--csErmDrP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/is91b14d3w7eysw2rr93.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--csErmDrP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/is91b14d3w7eysw2rr93.jpg" alt="Image description" width="880" height="305"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This method come to the real help when you want to show a single Dom Element like this&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rC2KARFV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ymxx0s7a2fec36fqmra7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rC2KARFV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ymxx0s7a2fec36fqmra7.jpg" alt="Image description" width="880" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Console.Time() and Console.ThimeEnd()&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When you are working on a complex algorithm. time is one of the main factor you need to look on simultaneously.&lt;/p&gt;

&lt;p&gt;this is where you can use these console method to know how much time your algorithm is taking to execute.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3gEj2YXO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u3utg7zqdox6s8fitq32.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3gEj2YXO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u3utg7zqdox6s8fitq32.jpg" alt="Image description" width="880" height="800"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Console.table()&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;the best method vs console.log() to show an object In JS. this method is used to represent complex object or arrays in tabular format.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f0v8O8Pf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oedhpj9pg8suz7gby9o1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f0v8O8Pf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oedhpj9pg8suz7gby9o1.jpg" alt="Image description" width="880" height="717"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/kamranah"&gt;buymeacoffee&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to add Color to your code snippets using markdown</title>
      <author>Jima Victor </author>
      <pubDate>Sat, 01 Jan 2022 10:36:47 +0000</pubDate>
      <link>https://dev.to/jimajs/how-to-add-color-to-your-code-snippets-using-markdown-fic</link>
      <guid>https://dev.to/jimajs/how-to-add-color-to-your-code-snippets-using-markdown-fic</guid>
      <description>&lt;p&gt;Which one of these look better?&lt;br&gt;
this?👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function printHello() {
 console.log("Hello"); // prints hello to the console..
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or this..👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printHello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// prints hello to the console..&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's right! The code snippet with colors definitely looks better and there are many advantages of using this feature built into text editors.&lt;/p&gt;

&lt;p&gt;This feature that enables us to add colors to our code is known as &lt;strong&gt;&lt;em&gt;syntax highlighting&lt;/em&gt;&lt;/strong&gt; and it makes it easier and more enjoyable to read and understand code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-add-syntax-hightlighting-in-markdown"&gt;
  &lt;/a&gt;
  How to add syntax hightlighting in markdown
&lt;/h2&gt;

&lt;p&gt;This is actually very easy to implement. All you have to do is add the name of the the programming language after the backticks in your markdown editor.&lt;br&gt;
like this👇&lt;/p&gt;

&lt;pre&gt;


```javascript
function printHello() {
 console.log("Hello"); // prints hello to the console..
}
```


&lt;/pre&gt;

&lt;p&gt;and viola! You're done!!&lt;/p&gt;

&lt;p&gt;Make the world beautiful today by adding some color to it😊&lt;br&gt;
Happy New Year Coders🎉🎉🎉..&lt;/p&gt;

</description>
      <category>programming</category>
      <category>tutorial</category>
      <category>productivity</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Day 67 of 100 Days of Code &amp; Scrum: Back From Holiday Break!</title>
      <author>Rammina</author>
      <pubDate>Sat, 01 Jan 2022 10:25:37 +0000</pubDate>
      <link>https://dev.to/rammina/day-67-of-100-days-of-code-scrum-back-from-holiday-break-5hh4</link>
      <guid>https://dev.to/rammina/day-67-of-100-days-of-code-scrum-back-from-holiday-break-5hh4</guid>
      <description>&lt;p&gt;Happy New Year, everyone!&lt;/p&gt;

&lt;p&gt;I took a long time off from coding and blogging during the holiday season. My &lt;a href="https://blog.rammina.com/day-66-of-100-days-of-code-and-scrum-services-and-portfolio-pages-for-my-business-website"&gt;previous post&lt;/a&gt; was back from December 21, 2021. I just wanted to take a break from my usual daily routine and spend time with people that I cared for the most.&lt;/p&gt;

&lt;p&gt;Today, I finally went back into it! I have a long list of tasks that I have to deal with as a result of taking a break for about two weeks. I managed to deal with my social media backlog, which I haven't checked in a while. Also, I checked my e-mails and other messages.&lt;/p&gt;

&lt;p&gt;In my remaining free time, I studied Scrum for my upcoming Professional Scrum Master I (PSM I) certification exam. Also, I re-examined my &lt;a href="https://www.rammina.com"&gt;company website&lt;/a&gt;, found some of the things that didn't work as intended, as well as thought of ways to improve the &lt;a href="https://www.rammina.com/portfolio"&gt;Portfolio&lt;/a&gt; and &lt;a href="https://www.rammina.com/services"&gt;Services&lt;/a&gt; sections of the website. It was kind of difficult to start working after such a long break, but it shouldn't take me long to get back my lost momentum.&lt;/p&gt;

&lt;p&gt;Anyway, let's move on to my first daily report of the year!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#two-week-holiday-break"&gt;
  &lt;/a&gt;
  Two Week Holiday Break
&lt;/h2&gt;

&lt;p&gt;No coding, blogging, and social media. Time was spent with my wife playing games, reading novels, eating unhealthy Christmas food, watching movies, and unproductive things.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I learned and worked on today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#company-website"&gt;
  &lt;/a&gt;
  Company Website
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I found a few things that are either bugs or not working as intended in my &lt;a href="https://www.rammina.com"&gt;business website&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;plan out how to improve the &lt;a href="https://www.rammina.com/portfolio"&gt;Portfolio&lt;/a&gt; and &lt;a href="https://www.rammina.com/services"&gt;Services&lt;/a&gt; sections of the website.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I reread the &lt;a href="https://scrumguides.org/scrum-guide.html"&gt;2020 Scrum Guide&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Took some practice exams for the Professional Scrum Master I (PSM I) certification.&lt;/li&gt;
&lt;li&gt;I did some practice flashcards for Scrum.&lt;/li&gt;
&lt;li&gt;reviewed some of the things I've learned before.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#other-stuff"&gt;
  &lt;/a&gt;
  Other Stuff
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;replied to emails and social media messages.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope everyone had a great time during the holidays. And I wish you all the best for this new year!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Rammina Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.scrum.org/open-assessments"&gt;Open Assessments | Scrum.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#other-media"&gt;
  &lt;/a&gt;
  Other Media
&lt;/h3&gt;

&lt;p&gt;Feel free to reach out to me in other media!&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://www.rammina.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BK-zilS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1638444046/rammina-button-128_x9ginu.png" alt="Rammina Logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://twitter.com/RamminaR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C341ckO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636792959/twitter-logo_laoyfu_pdbagm.png" alt="Twitter logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://github.com/Rammina"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4ZlXeay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636795051/GitHub-Emblem2_epcp8r.png" alt="Github logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Set Up Tailwind Css With create-react-app and yarn</title>
      <author>Ashirbad Panigrahi</author>
      <pubDate>Sat, 01 Jan 2022 10:23:03 +0000</pubDate>
      <link>https://dev.to/ashirbadgudu/set-up-tailwind-css-with-create-react-app-and-yarn-pio</link>
      <guid>https://dev.to/ashirbadgudu/set-up-tailwind-css-with-create-react-app-and-yarn-pio</guid>
      <description>&lt;h3&gt;
  &lt;a href="#create-a-new-react-project-with-yarn"&gt;
  &lt;/a&gt;
  Create a new react project with yarn
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn create react-app react-tailwind-css-stater
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#install-tailwind-css-with-postcss-amp-autoprefixer"&gt;
  &lt;/a&gt;
  Install Tailwind CSS with postcss &amp;amp; autoprefixer
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add &lt;span class="nt"&gt;-D&lt;/span&gt; tailwindcss postcss autoprefixer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#generate-raw-tailwindconfigjs-endraw-and-raw-postcssconfigjs-endraw-"&gt;
  &lt;/a&gt;
  Generate &lt;code&gt;tailwind.config.js&lt;/code&gt; and &lt;code&gt;postcss.config.js&lt;/code&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn tailwindcss init &lt;span class="nt"&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#modify-raw-tailwindconfigjs-endraw-file"&gt;
  &lt;/a&gt;
  Modify &lt;code&gt;tailwind.config.js&lt;/code&gt; file
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/**/*.{js,jsx,ts,tsx}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-tailwind-base-components-and-utilities-to-raw-indexcss-endraw-"&gt;
  &lt;/a&gt;
  Add tailwind base, components and utilities to &lt;code&gt;index.css&lt;/code&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;utilities&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#github-repo"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/AshirbadGudu/react-tailwind-css-stater"&gt;GitHub Repo&lt;/a&gt;
&lt;/h3&gt;

</description>
      <category>react</category>
      <category>tailwindcss</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>You've Gotta Check Out SnowPack...</title>
      <author>Nukala Suraj</author>
      <pubDate>Sat, 01 Jan 2022 09:52:22 +0000</pubDate>
      <link>https://dev.to/lucidmach/youve-gotta-check-out-snowpack-15a3</link>
      <guid>https://dev.to/lucidmach/youve-gotta-check-out-snowpack-15a3</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;So like most 2020 developers I used to give 0 fucks about bundlers... &lt;/p&gt;

&lt;p&gt;I mean &lt;strong&gt;react/next/svelte takes care of it&lt;/strong&gt; for us right&lt;/p&gt;

&lt;p&gt;but then, I started doing this course called &lt;a href="https://threejs-journey.com/"&gt;threejs journey&lt;/a&gt; by &lt;a href="https://bruno-simon.com/"&gt;brunosimon&lt;/a&gt; in which bruno makes us understand why bundlers are important&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rbz5l2rT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FH_p4ihUUAEAXSQ%3Fformat%3Djpg%26name%3D900x900" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rbz5l2rT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FH_p4ihUUAEAXSQ%3Fformat%3Djpg%26name%3D900x900" alt="node_modules meme" width="880" height="633"&gt;&lt;/a&gt;&lt;br&gt;
TL;DR helps client import node_modules files that are stored on the server&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#webpack"&gt;
  &lt;/a&gt;
  WebPack
&lt;/h2&gt;

&lt;p&gt;The world's most popular javascript bundler "webpack" has a bunch of disadvantages&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It is pretty &lt;strong&gt;complex&lt;/strong&gt;, for context and it took me 2 days to understand and be able to configure webpack on my own&lt;/li&gt;
&lt;li&gt; It is kinda really &lt;strong&gt;slow&lt;/strong&gt; cuz it rebuilds and rebundles the files for every change
&lt;em&gt;[especially if you want to use typescript]&lt;/em&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#heres-recordings-of-webpack"&gt;
  &lt;/a&gt;
  Here's Recordings of WebPack
&lt;/h3&gt;

&lt;p&gt;Time to Initial Load: &lt;strong&gt;35s&lt;/strong&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ZaX9vVwpEsA"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Time to Load Changes: &lt;strong&gt;20s&lt;/strong&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/zaSyyna3RTI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enter-snowpack"&gt;
  &lt;/a&gt;
  Enter Snowpack
&lt;/h2&gt;

&lt;p&gt;Snowpackjs has a fundamentally different approach to bundling... &lt;br&gt;
It builds each file and caches it for future use, while webpack rebuilds and rebundles every single time&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EpwG3mYb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.snowpack.dev/img/snowpack-unbundled-example-3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EpwG3mYb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.snowpack.dev/img/snowpack-unbundled-example-3.png" alt="Help" width="880" height="499"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus
&lt;/h3&gt;

&lt;p&gt;Snowpack is &lt;em&gt;&lt;strong&gt;super easy&lt;/strong&gt; to configure&lt;/em&gt;&lt;br&gt;
here's the config I used in the below test&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.exports = {
  mount: {
    src: { url: "/" },
    public: { url: "/", static: true },
  },
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;it mounts files in src, public dir to "/" (root directory of served content) &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#heres-recordings-of-snowpack"&gt;
  &lt;/a&gt;
  Here's Recordings of Snowpack
&lt;/h3&gt;

&lt;p&gt;Time to Initial Load: &lt;strong&gt;20s&lt;/strong&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/L7sIkfxBHbg"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Time to Load Changes: &lt;strong&gt;14ms&lt;/strong&gt; 😱&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fDasUwOa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FH_vdR2UUAIDtNp%3Fformat%3Djpg%26name%3D900x900" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fDasUwOa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FH_vdR2UUAIDtNp%3Fformat%3Djpg%26name%3D900x900" alt="screenshot" width="836" height="470"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#thanks"&gt;
  &lt;/a&gt;
  Thanks
&lt;/h2&gt;

&lt;p&gt;if you ❤️ this blog post... I'd ❤️ to tell you that this is the blogified version of the following thread&lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NfHehPY2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/tweet_video_thumb/FH_x_p4VkAAO6GY.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--MiLfDO_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1365754533104676867/xaN59iTz_normal.jpg" alt="Suraj Nukala profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Suraj Nukala
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/lucidmach"&gt;@lucidmach&lt;/a&gt;
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      snowpack is probably 100x faster...&lt;br&gt;&lt;br&gt;my experience + live comparison w/ webpack🧵&lt;br&gt;&lt;a href="https://twitter.com/hashtag/webdev"&gt;#webdev&lt;/a&gt; &lt;a href="https://twitter.com/snowpackjs"&gt;@snowpackjs&lt;/a&gt; &lt;a href="https://twitter.com/typescript"&gt;@typescript&lt;/a&gt; &lt;a href="https://twitter.com/webpack"&gt;@webpack&lt;/a&gt; &lt;a href="https://twitter.com/threejs"&gt;@threejs&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      06:30 AM - 01 Jan 2022
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1477165287384305665" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1477165287384305665" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1477165287384305665" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
