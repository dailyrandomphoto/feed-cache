<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Deploying a SvelteKit app to Netlify</title>
      <author>Dana Woodman</author>
      <pubDate>Sun, 11 Apr 2021 20:29:13 +0000</pubDate>
      <link>https://dev.to/danawoodman/deploying-a-sveltekit-app-to-netlify-5dc3</link>
      <guid>https://dev.to/danawoodman/deploying-a-sveltekit-app-to-netlify-5dc3</guid>
      <description>&lt;p&gt;Want to deploy your SvelteKit app to Netlify? Well, you're in luck because it's actually quite easy!&lt;/p&gt;

&lt;p&gt;Let's jump right in üëá&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#1-create-your-sveltekit-project"&gt;
  &lt;/a&gt;
  1. Create your SvelteKit project
&lt;/h1&gt;

&lt;p&gt;First, obviously you'll need a SvelteKit project. If you don't have one yet, setup is super simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init svelte@next my-app
&lt;span class="nb"&gt;cd &lt;/span&gt;my-app
npm i
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then you can run &lt;code&gt;npm run dev&lt;/code&gt; to play üëØ‚Äç‚ôÄÔ∏è with your new app.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#2-create-raw-netlifytoml-endraw-"&gt;
  &lt;/a&gt;
  2. Create &lt;code&gt;netlify.toml&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;You'll need to let Netlify know where the SvelteKit build will be located (&lt;code&gt;/build&lt;/code&gt;) and where the serverless functions will live (&lt;code&gt;/functions&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;In the root of your project, create a &lt;code&gt;netlify.toml&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;&lt;span class="nn"&gt;[build]&lt;/span&gt;
  &lt;span class="py"&gt;command&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"npm run build"&lt;/span&gt;
  &lt;span class="py"&gt;publish&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"build/"&lt;/span&gt;
  &lt;span class="py"&gt;functions&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"functions/"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#3-use-the-netlify-adapter"&gt;
  &lt;/a&gt;
  3. Use the Netlify adapter
&lt;/h1&gt;

&lt;p&gt;Now you'll want to install the &lt;a href="https://www.npmjs.com/package/@sveltejs/adapter-netlify"&gt;@sveltejs/adapter-netlify adapter&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i &lt;span class="nt"&gt;-D&lt;/span&gt; @sveltejs/adapter-netlify@next
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your &lt;code&gt;svelte.config.cjs&lt;/code&gt; file, change &lt;code&gt;adapter-node&lt;/code&gt; to &lt;code&gt;adapter-netlify&lt;/code&gt;, like so (diff):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="p"&gt;const sveltePreprocess = require('svelte-preprocess')
&lt;/span&gt;&lt;span class="gd"&gt;-const node = require('@sveltejs/adapter-node')
&lt;/span&gt;&lt;span class="gi"&gt;+const netlify = require('@sveltejs/adapter-netlify')
&lt;/span&gt;&lt;span class="p"&gt;const pkg = require('./package.json')
&lt;/span&gt;
/** @type {import('@sveltejs/kit').Config} */
&lt;span class="p"&gt;module.exports = {
&lt;/span&gt;  // Consult https://github.com/sveltejs/svelte-preprocess
  // for more information about preprocessors
  preprocess: sveltePreprocess(),
  kit: {
    // By default, `npm run build` will create a standard Node app.
    // You can create optimized builds for different platforms by
    // specifying a different adapter
&lt;span class="gd"&gt;-    adapter: node(),
&lt;/span&gt;&lt;span class="gi"&gt;+    adapter: netlify(),
&lt;/span&gt;
    // hydrate the &amp;lt;div id="svelte"&amp;gt; element in src/app.html
    target: '#svelte',

    vite: {
      ssr: {
        noExternal: Object.keys(pkg.dependencies || {}),
      },
    },
  },
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you have everything you need to deploy your Netlify site!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#4-deploy-on-netlify"&gt;
  &lt;/a&gt;
  4. Deploy on Netlify
&lt;/h1&gt;

&lt;p&gt;Now all you need to do is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a Github repo&lt;/li&gt;
&lt;li&gt;Push your code to it&lt;/li&gt;
&lt;li&gt;Add the new repo to Netlify (e.g. the "New site from Git" button)

&lt;ul&gt;
&lt;li&gt;Accept the default options&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Wait for it to build and after about a minute, you should have a SvelteKit app on Netlify! üéâ&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now you can add routes to your SvelteKit app and they will be served by Netlify's global serverless infrastructure üõ∞&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  That's it!
&lt;/h1&gt;

&lt;p&gt;Deploying SvelteKit to Netlify (or Vercel) is quite simple and gives you a global CDN and serverless function out the gate!&lt;/p&gt;

&lt;p&gt;Hope this was helpful! üçª&lt;/p&gt;

&lt;p&gt;If you want to check out the source code, &lt;a href="https://github.com/danawoodman/netlify-sveltekit"&gt;see the Github repo here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Follow me on &lt;a href="https://dev.to/danawoodman"&gt;Dev.to&lt;/a&gt;, &lt;a href="https://twitter.com/DanaWoodman"&gt;Twitter&lt;/a&gt; and &lt;a href="https://github.com/danawoodman"&gt;Github&lt;/a&gt; for more web dev and startup related content&lt;/em&gt; ü§ì&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>sveltekit</category>
      <category>netlify</category>
      <category>webdev</category>
    </item>
    <item>
      <title>My first month as a Developer</title>
      <author>Vardana Bhanot</author>
      <pubDate>Sun, 11 Apr 2021 20:15:46 +0000</pubDate>
      <link>https://dev.to/vardanabhanot/my-first-month-as-a-developer-4805</link>
      <guid>https://dev.to/vardanabhanot/my-first-month-as-a-developer-4805</guid>
      <description>&lt;p&gt;So a little about me, I joined a company as a software developer a month back and it's my first job, in which I am  mostly working on PHP and JavaScript specifically jQuery.&lt;/p&gt;

&lt;p&gt;So most of the things I am gonna mention here are the once I learnt after writting a lot of jQuery speghetti. &lt;/p&gt;

&lt;p&gt;So as I started working on a new feature I was given a new file, so I was just trying to make things work in the front-end and ended up thinking that I will structure these things after I make up things work. So after the things were done and I had to add something new and after adding the new thing everything broke.&lt;br&gt;
And then I realised how difficult it was to read the code I had written.&lt;br&gt;
I was having difficult time reading my own code.&lt;br&gt;
So here I am gonna tell you things I learnt after getting I that situation.&lt;/p&gt;

&lt;p&gt;And all the code example are in &lt;strong&gt;&lt;em&gt;PHP&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#1divide-the-code-into-functions"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1.Divide the code into functions:&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;A single function should just do a single thing&lt;/em&gt;, and structure your code from the start, as it will make it easy for you to debug the code as well as for someone who might have to make changes to your code in future.&lt;br&gt;
Making your function do just one thing makes it more readable and modular so you can reuse it anywhere you want.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#2try-not-to-nest-ifelse-much-and-return-early"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2.Try not to nest if-else much and return early&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Nesting if else too much make it difficult to read &lt;br&gt;
for example.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bad Practice&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function is_winters($month){
   if(!empty($month)){
      if(is_string($month)){
         if($month == 'january'){
             return true;
         }
         else if($month == 'december'){
             return true;
         }
         else if($month == 'november'){
             return true;
         }
      }else{
            return false;
      }
   }else{
      return false;
   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Good Practice&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function is_winters($month){
    if(empty($month)){
       return false;
    }
    $winter_months = ['november', 'december', 'january'];
return in_array(strtolower($month), $winter_months, true);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#3avoid-using-for-loops"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3.Avoid using for loops&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Here I am talking about the basic for loops like &lt;br&gt;
&lt;code&gt;for($i=0; $i&amp;lt; $num; $i++){}&lt;/code&gt;&lt;br&gt;
using foreach loops make the code more readable and reduces the need to map the variable in mind in for loops.&lt;br&gt;
for example we have an array of &lt;code&gt;$userProfiles=[...somedata];&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;using old school for loop&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for($i=0; $i&amp;lt;count($userProfiles); $i++){
    print_r($userProfiles[$i]['user_name'];
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;using foreach(or any other equivalent form in your language)&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;foreach($userProfiles as $userProfile){
    print_r($userProfile['user_name']);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;you might agree or disagree with me but this helped me, and you surely sometimes need the old school for loop or even while loops but it depends on what you are dealing with.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4dont-make-unneeded-long-descriptive-variable-name"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4.Don't make unneeded long descriptive variable name&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;I did this a lot trying to make good descriptive variable names but I ended up making them long.&lt;br&gt;
like &lt;code&gt;$user_profile_color;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bad Practice&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class UserProfile{
    $user_profile_color;
    $user_profile_picture;
    $user_profile_settings;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Good Practice&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class UserProfile{
    $profile_color;
    $profile_picture;
    $settings;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#5think-before-you-write"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.Think before you write&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Just jumping on to write is not a wise thing to do, it's good to sit back for a while and think about how to do things, how to structure the function, which conditional to use , which loop to use, these small decisions help a lot.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;p&gt;These where the few things that I learnt and helped me write more readable code. Its not that I have mastered the art of writing clean code but if I look a month back I am surely better at writing programs which are more readable.&lt;br&gt;
I knew most of these points before I ended up writing the code still I ended up writing messy code, but after I had faced how a messy code can make your life a hell, I am trying my best to keep things clean.&lt;/p&gt;

&lt;p&gt;I would love to know if you have suggestions on how to write better code.&lt;/p&gt;

&lt;p&gt;I hope you have an amazing day.&lt;/p&gt;

</description>
      <category>php</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>SCSS make life more easier .</title>
      <author>Fatima Almashhor</author>
      <pubDate>Sun, 11 Apr 2021 20:03:24 +0000</pubDate>
      <link>https://dev.to/fatimaalmashhor/scss-make-life-more-easier-9h8</link>
      <guid>https://dev.to/fatimaalmashhor/scss-make-life-more-easier-9h8</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-scss-"&gt;
  &lt;/a&gt;
  What Scss ?
&lt;/h1&gt;

&lt;p&gt;Scss is Sassy Cascading Style Sheets. It wraps the CSS to allow you to use functions and variables exc.. make more likely language like JavaScript .&lt;/p&gt;

&lt;p&gt;Previously when we styled some of our projects we get repeated code and some time needed much work to design the things .&lt;/p&gt;

&lt;p&gt;Then after the Scss appears make the style more clean , easy to read and use multiple times . I am not here to explain what is Scss and how to start and all these PLA PLA things , So let's jump into the way to use it .&lt;/p&gt;

&lt;p&gt;Just Second before we dev deep into the example ?! Would you ever feel &lt;strong&gt;confused between the Scss and Sass&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;Sass is stand from (Syntactically Awesome Style Sheets) ,language that will be compiled into CSS . SassScript is itself a scripting language whereas SCSS is the main syntax for the SASS which builds on top of the existing CSS syntax.SASS has more developer community and support than SCSS&lt;/p&gt;

&lt;p&gt;let jump in into the basic syntax &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#variables"&gt;
  &lt;/a&gt;
  Variables
&lt;/h3&gt;

&lt;p&gt;the most useful feature , It is really help for write the value once and get it all over the project and help for avoid the forgot value of the colors , fonts size and even the  break points&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Colors 
$color-primary : #333333;
$color-scondary :  #4F4F4F ;  
$color-oriange : #F2994A ;
$color-green : #B0C2AC ; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#functions"&gt;
  &lt;/a&gt;
  Functions
&lt;/h3&gt;

&lt;p&gt;the second things that we absolutely aspect from script language is the methods , Which struct our code and reject the repetitions .In Scss there are two comment way to do that on is by using &lt;code&gt;@mixin&lt;/code&gt; and the other is &lt;code&gt;@function&lt;/code&gt;. &lt;br&gt;
And the equation is which one is better . Let me tell you the main differences between them first . Function are blocks of code that return a single value of any Sass data type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@function pow($base, $exponent) {
  $result: 1;
  @for $_ from 1 through $exponent {
    $result: $result * $base;
  }
  @return $result;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And invoke it like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.sidebar {
  float: left;
  margin-left: pow(4, 3) * 1px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But the mixin will compile directly into CSS styles, no need to return any value .&lt;br&gt;
like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@mixin reset-list {
  margin: 0;
  padding: 0;
  list-style: none;
}

@mixin horizontal-list {
  @include reset-list;

  li {
    display: inline-block;
    margin: {
      left: -2px;
      right: 2em;
    }
  }
}

nav ul {
  @include horizontal-list;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By using the &lt;code&gt;@include&lt;/code&gt; &lt;/p&gt;

</description>
      <category>scss</category>
      <category>javascript</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>How Neural Networks work: activation functions</title>
      <author>Madeline</author>
      <pubDate>Sun, 11 Apr 2021 19:40:40 +0000</pubDate>
      <link>https://dev.to/madeline_pc/how-neural-networks-work-activation-functions-2nd7</link>
      <guid>https://dev.to/madeline_pc/how-neural-networks-work-activation-functions-2nd7</guid>
      <description>&lt;p&gt;In my post &lt;a href="https://madelinecaples.hashnode.dev/deep-learning-when-and-why-is-it-useful"&gt;Deep learning: when and why is it useful?&lt;/a&gt;, I discussed why a neural network uses non-linear functions. In this article we will see an example of &lt;em&gt;how&lt;/em&gt; to use those non-linear functions in a neural network. We'll be considering classification problems for the sake of simplicity. We'll also look at a few different kinds of non-linear functions, and see the different effects they have on the network. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-actually-is-an-activation-function"&gt;
  &lt;/a&gt;
  What actually &lt;em&gt;is&lt;/em&gt; an activation function?
&lt;/h2&gt;

&lt;p&gt;A neural network can have any number of layers. Each layer has a linear function followed by a non-linear function, called an &lt;strong&gt;activation function.&lt;/strong&gt; The activation function takes the output from the linear function and transforms it somehow. That activation becomes the input features for the next layer in the neural network. &lt;/p&gt;

&lt;p&gt;Here's a 3 layer neural network to help us visualize the process: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j98M30cd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168960678/XMnZZXGfs.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j98M30cd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168960678/XMnZZXGfs.jpeg" alt="20210411_151200.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We have features (x1, x2, x3, x4, x5) that go into the first hidden layer&lt;/li&gt;
&lt;li&gt;this layer calculates the linear functions (y=wx+b) on each input and then puts the result from that calculation through the activation function ReLU(max(0, x)&lt;/li&gt;
&lt;li&gt;the activations output from layer 1 becomes the inputs for layer 2 and the same calculations happen here&lt;/li&gt;
&lt;li&gt;the activations output from layer 2 become the input for layer 3 and then layer 3 does the same linear function-activation function combo&lt;/li&gt;
&lt;li&gt;the last set of activations from layer 3 go through a final activation layer, that will be different depending on what your model is trying to predict: if you have only two classes (a binary classifier), then you can use a &lt;strong&gt;sigmoid&lt;/strong&gt; function, but if you have more than two classes you will want to use &lt;strong&gt;softmax&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;those final activations are your predicted labels&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#why-would-we-want-to-do-that"&gt;
  &lt;/a&gt;
  Why would we want to do that?
&lt;/h3&gt;

&lt;p&gt;Linear models are great, but sometimes non-linear relationships exist and we want to know what they are. Consider the example below. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cQMZTyNk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168740763/hJu2pIeI3.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cQMZTyNk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168740763/hJu2pIeI3.jpeg" alt="20210409_145007.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We want to predict the boundary line between the blue and pink dots (fascinating, I know!).  &lt;/p&gt;

&lt;p&gt;This is what a linear function, such as logistic regression, can uncover: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UHzuLG1D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168750925/-dNmQHb5b.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UHzuLG1D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168750925/-dNmQHb5b.jpeg" alt="20210409_145210.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is what a non linear neural network can uncover, which gives us a better visualization of the boundaries between blue and pink dots: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xd8Q-fzn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168797808/HzCF2vJaZ.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xd8Q-fzn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168797808/HzCF2vJaZ.jpeg" alt="20210409_145518.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Furthermore, the more hidden layers we add to our network, the more complex relationships we can potentially find in the data‚Äîeach layer is learning about some feature in the data. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#okay-but-how"&gt;
  &lt;/a&gt;
  Okay, but how?
&lt;/h3&gt;

&lt;p&gt;I find it helpful to think of activation functions in two categories (I don't know if this is an "official" distinction, it's just the way I think about them)‚Äîactivations on hidden units and activations for the final output. The activations for the hidden units exist to make training easier for the neural network, and allow it to uncover non-linear relationships in the data. The activations for the final output layer are there to give us an answer to whatever question we are asking the neural network.&lt;/p&gt;

&lt;p&gt;For example, let's imagine we're training a binary classifier that distinguishes between pictures of cats and mice. We might use the &lt;strong&gt;ReLU activation function&lt;/strong&gt; on our &lt;em&gt;hidden&lt;/em&gt; units, but for our &lt;em&gt;final&lt;/em&gt; output layer we need to know the answer to our question: is this picture of a cat or a mouse? So we will want an activation function that outputs 0 or 1. &lt;/p&gt;

&lt;p&gt;Let's take a look at what each different activation function is actually doing. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-few-popular-activation-functions"&gt;
  &lt;/a&gt;
  A few popular activation functions:
&lt;/h3&gt;

&lt;p&gt;x here stands for the output from the linear function that is being fed into the activation function  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mAHoxVWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618169062564/Q3JxGG6to.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mAHoxVWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618169062564/Q3JxGG6to.jpeg" alt="20210411_151748.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Sigmoid&lt;/strong&gt; converts outputs to be between 0 and 1 &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HCjM_pqN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168116473/2QMkQxm1k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HCjM_pqN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168116473/2QMkQxm1k.png" alt="sigmoid.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Tanh:&lt;/strong&gt;  converts numbers to range from -1 to 1‚Äîyou can picture it as a shifted version of sigmoid. It has the effect of centering the data so that the mean is closer to 0, which improves learning for the following layer.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ByybrVuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168142479/4U7DZhFDf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ByybrVuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168142479/4U7DZhFDf.png" alt="tanh.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ReLU (rectified linear unit):  max(0, x)&lt;/strong&gt; if the number is negative the function gives back 0, and if the number is positive it just gives back the number with no changes‚ÄîReLU tends to run faster than tanh in computations, so it is generally used as the default activation function for hidden units in deep learning&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Leaky ReLU:  max(0.001x, x)&lt;/strong&gt;‚Äîif the number x is negative, it gets multiplied by 0.01, but if the number x is positive, it stays the same x &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#final-layer-activation-functions"&gt;
  &lt;/a&gt;
  Final layer activation functions:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Sigmoid&lt;/strong&gt; is used to turn the activations into something interpretable for predicting the class in &lt;strong&gt;binary classification,&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;since we want to get an output of either 0 or 1, a further step to is added: &lt;/li&gt;
&lt;li&gt;decide which class your predictions belong to according to a certain threshold (often if the number is less than 0.5 the output is 0, and if the number is 0.5 or higher the output is 1)&lt;/li&gt;
&lt;li&gt;(Yes, sigmoid is on both lists‚Äîthat's because it is more useful in deep learning in producing outputs, but it's helpful to know about for understanding Tanh and ReLU).&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Softmax&lt;/strong&gt; is used when you need more than one final output, such as in a classifier for more than one category/class. Suppose you want to know if a certain image depicts a cat, dog, alligator, onion, or none of the above. The &lt;strong&gt;motivation:&lt;/strong&gt; it provides outputs that are probabilities&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dqSN7sHC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168170744/vaGO3TGvh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dqSN7sHC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168170744/vaGO3TGvh.png" alt="softmax.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If that formula looks gross to you, come back next week‚ÄîI plan to break it down step by step until if seems painfully simple&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>deeplearning</category>
      <category>machinelearning</category>
      <category>datascience</category>
      <category>neuralnetworks</category>
    </item>
    <item>
      <title>A Basic Setup for Web Developer</title>
      <author>CodeOzz</author>
      <pubDate>Sun, 11 Apr 2021 19:37:27 +0000</pubDate>
      <link>https://dev.to/codeozz/a-basic-setup-for-web-developer-5hg7</link>
      <guid>https://dev.to/codeozz/a-basic-setup-for-web-developer-5hg7</guid>
      <description>&lt;p&gt;Hey ! A few time ago I started a new Dev environment in a new computer so I needed to re-install all stuff linked to my dev stuff !&lt;/p&gt;

&lt;p&gt;I took this opportunity to create a list of thing to install in order to have a basic and good dev environment from scratch !&lt;/p&gt;

&lt;p&gt;(Check at the end of this article a link with every command linux in order to create this env with more stuff)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basics"&gt;
  &lt;/a&gt;
  üîß Basics
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#curl"&gt;
  &lt;/a&gt;
  Curl
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://curl.se/"&gt;https://curl.se/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;curl is used in command lines or scripts to transfer data ! Very useful tools for every developer !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vim"&gt;
  &lt;/a&gt;
  Vim
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.vim.org/"&gt;https://www.vim.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A powerful Text editor when you need to edit or check a file fastly !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#zsh-amp-ohmyzsh"&gt;
  &lt;/a&gt;
  Zsh &amp;amp; oh-my-zsh
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://ohmyz.sh/"&gt;https://ohmyz.sh/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the best terminal ever to my mind ! for using oh-my-zsh you will need to install zsh.&lt;/p&gt;

&lt;p&gt;oh-my-zsh will improve a lot of thing and with this you will be able to use a lot of shortcut about git &amp;amp; shell command !&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(link to shortcut &lt;a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Cheatsheet"&gt;https://github.com/ohmyzsh/ohmyzsh/wiki/Cheatsheet&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dev-tools"&gt;
  &lt;/a&gt;
  üíª Dev tools
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#git"&gt;
  &lt;/a&gt;
  Git
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://git-scm.com/"&gt;https://git-scm.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Git is a free and open source distributed version control system, if you don't it, close this tab (no keep open but open a new tab :p) and learn git !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#node"&gt;
  &lt;/a&gt;
  Node
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://nodejs.org/en/"&gt;https://nodejs.org/en/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For every javascript developper you will need to use NodeJs in a lot of project ! It's use for creating a server in JS !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#npm-amp-nvm"&gt;
  &lt;/a&gt;
  Npm &amp;amp; Nvm
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/"&gt;https://www.npmjs.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What is the most heavy thing in the world ? Node module folder of course ! npm will help developper to add a lot of external module very easy !&lt;/p&gt;

&lt;p&gt;Nvm is used to handle npm versioning !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#docker"&gt;
  &lt;/a&gt;
  Docker
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.docker.com/"&gt;https://www.docker.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Docker is very very usefull for every developper in the world ! If you don't know what is this, you should learn how and why it's a &lt;strong&gt;famous&lt;/strong&gt; tools !&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dev-software"&gt;
  &lt;/a&gt;
  üìÄ Dev Software
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#google-chrome-or-any-other-browser"&gt;
  &lt;/a&gt;
  Google Chrome or any other browser
&lt;/h3&gt;

&lt;p&gt;For me I used Google chrome but you are free of using any browser !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#postman"&gt;
  &lt;/a&gt;
  Postman
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.postman.com/"&gt;https://www.postman.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I &lt;strong&gt;LOVE&lt;/strong&gt; this software, you can so easly make http(s) call for API, create custom API Library, test your api, import any call from curl to Postman call.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vs-code-or-any-other-ide"&gt;
  &lt;/a&gt;
  VS Code or any other IDE
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://code.visualstudio.com/"&gt;https://code.visualstudio.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I used it for every JS project and I love it ! I used a lot of extension (an incoming article from my VS Code setup and shortcut incoming !)&lt;/p&gt;

&lt;p&gt;So from now you are ready to start to learn basic web !&lt;/p&gt;

&lt;p&gt;I let my GitHub repository about my own setup on linux with &lt;strong&gt;every line&lt;/strong&gt; to put in your terminal in order to install and setup all thing.&lt;/p&gt;

&lt;p&gt;You will find a lot of tools that I have not mentioned in this article since I want to keep the very very basic !&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Code-Oz/setup-linux-dev"&gt;https://github.com/Code-Oz/setup-linux-dev&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>git</category>
      <category>node</category>
    </item>
    <item>
      <title>Animate Button text using only CSS</title>
      <author>Rahul Nayak</author>
      <pubDate>Sun, 11 Apr 2021 19:33:16 +0000</pubDate>
      <link>https://dev.to/pragyes31/animate-button-text-using-only-css-3dan</link>
      <guid>https://dev.to/pragyes31/animate-button-text-using-only-css-3dan</guid>
      <description>&lt;p&gt;Hello, Hola and Namaste!&lt;/p&gt;

&lt;p&gt;Today we are going to achieve what you see below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GKh7jbZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608963039573/bjdKJE7PT.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GKh7jbZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608963039573/bjdKJE7PT.gif" alt="deepin-screen-recorder_Select area_20201226113539.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Basically, we would animate the button text to smoothly slide up and down and show a different text when one hovers over it.&lt;/p&gt;

&lt;p&gt;Without further ado, let's dive in. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-add-the-html-structure"&gt;
  &lt;/a&gt;
  Step 1: Add the html structure
&lt;/h3&gt;

&lt;p&gt;Needless to say that we would need two different text values for button. &lt;/p&gt;

&lt;p&gt;The primary text(&lt;code&gt;New Blog&lt;/code&gt;) would hold the current information while the hidden text(&lt;code&gt;Read it now!&lt;/code&gt;) would hold the value shown on button hover. &lt;/p&gt;

&lt;p&gt;Here is the  &lt;a href="https://codepen.io/pragyesh31/pen/PoGONVb"&gt;code&lt;/a&gt;  so far:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="btn blog-button"&amp;gt;
  &amp;lt;div class="primary text"&amp;gt;New Blog&amp;lt;/div&amp;gt;
  &amp;lt;div class="secondary text"&amp;gt;Read it now!&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
.btn {
  width: 200px;
  height: 50px;
  background-color: #0fabbc;
  border-radius: 25px;
  color:#fff;
  font-size:18px;
  font-weight:bold;
  font-family: "Lucida Console", "Courier New", monospace;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8yzb_RKB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608911982787/-AJ5ceAhG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8yzb_RKB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608911982787/-AJ5ceAhG.png" alt="Screenshot from 2020-12-25 21-28-52.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-initial-state-no-hover"&gt;
  &lt;/a&gt;
  Step 2: Initial state (No Hover)
&lt;/h3&gt;

&lt;p&gt;Right now both the text values are stacked against each other in the tiny button box. Let us use the &lt;code&gt;position&lt;/code&gt; property to separate them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.btn {
  width: 180px;
  height: 45px;
  background-color: #0d7377;
  border-radius: 25px;
  position: relative;
}

.text {
  width: 180px;
  height: 45px;
  position: absolute;
}

.primary {
  top: 0px;
}

.secondary {
  top: 80px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--43yMDSFW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608912040413/jaYo3JY9C.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--43yMDSFW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608912040413/jaYo3JY9C.png" alt="Screenshot from 2020-12-25 21-30-05.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you use &lt;code&gt;position: absolute;&lt;/code&gt;, it positions itself relative to the nearest positioned parent. If you look at the above code and the image, we gave the &lt;code&gt;.btn&lt;/code&gt; the position of relative and positioned the children divs absolute. &lt;/p&gt;

&lt;p&gt;So now whenever you try to change the position of the children elements(&lt;strong&gt;&lt;code&gt;.secondary and .primary&lt;/code&gt;&lt;/strong&gt;), they would move with respect to the &lt;code&gt;.btn&lt;/code&gt; div and not body.&lt;/p&gt;

&lt;p&gt;### Step 3: Hover state &lt;/p&gt;

&lt;p&gt;If you look at the code above, you'd notice that we have given the &lt;code&gt;.secondary&lt;/code&gt; class a top value of 80px. That's our button text to be displayed on hover. When one hover over the button, the top property should be 0 so it sits inside the button box. &lt;/p&gt;

&lt;p&gt;Similarly at this point, we want the existing text("New Blog") to clear space for the secondary text so we would move it up by setting the top to -80px. Let's see it in action.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.btn:hover .primary {
  top:-80px
}

.btn:hover .secondary {
  top:0px
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LnnZ_Dwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608909711163/aN-9ccwsF.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LnnZ_Dwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608909711163/aN-9ccwsF.gif" alt="deepin-screen-recorder_Select area_20201225205114.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's the complete &lt;a href="https://codepen.io/pragyesh31/pen/KKgyzvv"&gt;code&lt;/a&gt;  used so far for your reference. But wait, isn't something missing here?&lt;/p&gt;

&lt;p&gt;Ohh yeah, the transition doesn't look very smooth. Plus why the other text is still visible. Let's fix it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-sprinkle-some-animation-here-and-there"&gt;
  &lt;/a&gt;
  Step 4: Sprinkle some animation here and there
&lt;/h3&gt;

&lt;p&gt;Right now, the sliding up and down behaviour is instant. Let's use the CSS &lt;code&gt;transition&lt;/code&gt; property to control the speed of this slide up/down behaviour. &lt;/p&gt;

&lt;p&gt;Additionally, time to get rid of the unwanted text. We only want to show whatever text is inside the button box with the &lt;code&gt;.btn&lt;/code&gt; class and so we would use &lt;code&gt;overflow:hidden&lt;/code&gt; to hide that text. Let's see it in action:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.btn {
  overflow:hidden;
}

.text {
  transition: top 0.7s;
  -moz-transition: top 0.7s; // Firefox
  -webkit-transition: top 0.7s; // Safari and Chrome 
  -o-transition: top 0.7s; // Opera 
  -ms-transition: top 0.7s; // Explorer
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GKh7jbZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608963039573/bjdKJE7PT.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GKh7jbZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608963039573/bjdKJE7PT.gif" alt="deepin-screen-recorder_Select area_20201226113539.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The above code snippet is simplified to only show the code relevant to this section. You can find the final code  &lt;a href="https://codepen.io/pragyesh31/pen/KKgyZPL"&gt;here&lt;/a&gt;  for all the css styling that I have used. &lt;/p&gt;

&lt;p&gt;This brings me to the end of this article. I enjoyed animating this button and writing about it. I hope this brings the same joy to you when you read and try it on your website.&lt;/p&gt;

&lt;p&gt;My comment section is open to your feedback. If you want to chat over twitter, you can find me  &lt;a href="https://twitter.com/rhlnyk"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Concluding this article with the usual request: Like, share and comment. It would mean a lot to me. üôÇüôÇ&lt;/p&gt;

&lt;p&gt;Until Next time!&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>animation</category>
    </item>
    <item>
      <title>Using Docker secrets with MySQL in Docker Compose</title>
      <author>adithyasrinivasan</author>
      <pubDate>Sun, 11 Apr 2021 19:21:48 +0000</pubDate>
      <link>https://dev.to/adithyasrinivasan/using-docker-secrets-with-mysql-in-docker-compose-4dk7</link>
      <guid>https://dev.to/adithyasrinivasan/using-docker-secrets-with-mysql-in-docker-compose-4dk7</guid>
      <description>&lt;p&gt;Prefacing this that Docker secrets were built for Docker Swarm and not for single containers. From the docs:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : Docker secrets are only available to swarm services, not to standalone containers. To use this feature, consider adapting your container to run as a service. Stateful containers can typically run with a scale of 1 without changing the container code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also, this is not completely secure as we will be using files on the host machine to feed at the build time, so if you're considering commiting this to your repository, commit just the secrets' file structure with no content.&lt;/p&gt;

&lt;p&gt;Initial docker container that I used for a Laravel application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mysql:
    image: mysql:8.0.22
    container_name: mysql
    restart: unless-stopped
    tty: true
    volumes:
      - ./mysql:/var/lib/mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: db_name
      MYSQL_USER: user_name
      MYSQL_PASSWORD: db_password
      MYSQL_ROOT_PASSWORD: db_root_password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To use Docker Secrets, we need to create two files (for two passwords). I created it in the same level as the docker-compose.yml inside a folder &lt;code&gt;secrets&lt;/code&gt; named &lt;code&gt;db_password.txt&lt;/code&gt; and &lt;code&gt;db_root_password.txt&lt;/code&gt; (commit at this point) and then add the passwords inside them.&lt;/p&gt;

&lt;p&gt;Now let's change the docker container definition to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mysql:
    image: mysql:8.0.22
    container_name: mysql
    restart: unless-stopped
    tty: true
    volumes:
      - ./mysql:/var/lib/mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: db_name
      MYSQL_USER: db_user
      MYSQL_PASSWORD_FILE: /run/secrets/db_password
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    secrets:
      - db_password
      - db_root_password


secrets:
  db_password:
    file: ./secrets/db_password.txt
  db_root_password:
    file: ./secrets/db_root_password.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Define a &lt;code&gt;secrets&lt;/code&gt; section on your docker-compose.yml with the file locations and then in the &lt;code&gt;mysql&lt;/code&gt; section, we'll just use those &lt;strong&gt;without&lt;/strong&gt; the extension during runtime.&lt;/p&gt;

&lt;p&gt;Important thing to note is that &lt;code&gt;MYSQL_PASSWORD&lt;/code&gt; and &lt;code&gt;MYSQL_ROOT_PASSWORD&lt;/code&gt; have been replaced by &lt;code&gt;MYSQL_PASSWORD_FILE&lt;/code&gt; and &lt;code&gt;MYSQL_ROOT_PASSWORD_FILE&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Run &lt;code&gt;docker-compose up -d&lt;/code&gt; and your MySQL installation should be using these passwords from the files :)&lt;/p&gt;

</description>
      <category>docker</category>
      <category>laravel</category>
      <category>mysql</category>
    </item>
    <item>
      <title>Wordpress blog in a Rails app subfolder üôà</title>
      <author>lee</author>
      <pubDate>Sun, 11 Apr 2021 19:07:12 +0000</pubDate>
      <link>https://dev.to/leewynne/wordpress-blog-in-a-rails-app-subfolder-40db</link>
      <guid>https://dev.to/leewynne/wordpress-blog-in-a-rails-app-subfolder-40db</guid>
      <description>&lt;p&gt;Hello peeps üëãüèº &lt;/p&gt;

&lt;p&gt;As anyone in the Dev community successfully added a Wordpress blog to a subfolder in a rails app?&lt;/p&gt;

&lt;p&gt;myapp.com (rails)&lt;br&gt;
myapp.com/blog (wordpress)&lt;/p&gt;

&lt;p&gt;I have done a few rounds of googling but haven‚Äôt yielded any confident results.&lt;/p&gt;

&lt;p&gt;I am thinking that page rules within Cloudflare might be the answer but apparently Wordpress likes to be at the root domain or subdomain.&lt;/p&gt;

&lt;p&gt;I know I could use Rails as the blog but I can‚Äôt be üçë‚Äôsed atm as I can just use the huge Wordpress plugin systems for stuff I need quickly.&lt;/p&gt;

&lt;p&gt;Thanks üòä and in return I can do portraits of anyone that can shed clear informations on said subject.&lt;/p&gt;

</description>
      <category>rails</category>
      <category>wordpress</category>
    </item>
    <item>
      <title>Programming with best YouTube Channels</title>
      <author>Suprabha</author>
      <pubDate>Sun, 11 Apr 2021 19:06:43 +0000</pubDate>
      <link>https://dev.to/suprabhasupi/programming-with-best-youtube-channels-420k</link>
      <guid>https://dev.to/suprabhasupi/programming-with-best-youtube-channels-420k</guid>
      <description>&lt;p&gt;If you are searching for best tutorials on youtube, I am sharing all the programming channels which I have used to grow my skills set as a programmer. Sharing all the youtube channels which is there in my list üòç&lt;/p&gt;

&lt;p&gt;&lt;b&gt;1. &lt;a href="https://www.youtube.com/channel/UCLNgu_OupwoeESgtab33CCw"&gt;Coding Garden&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Coding Garden is an open, interactive and engaging community where any coder, from beginner to veteran, can learn and grow together.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--55NVw_UD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/9ebrkCO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--55NVw_UD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/9ebrkCO.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;2. &lt;a href="https://www.youtube.com/channel/UCW5YeuERMmlnqo4oq8vwUpg"&gt; The net Ninza &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Teaching is more than just about passing information, it's about the connect too.&lt;/p&gt;

&lt;p&gt;Over 1000 free programming tutorials about:- Modern JavaScript (beginner to advanced)- Node.js- React- Vue.js- Firebase and many more programming languages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hXM2Hosl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/eWXV2Bo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hXM2Hosl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/eWXV2Bo.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;3. &lt;a href="https://www.youtube.com/channel/UClb90NQQcskPUGDIXsQEz5Q"&gt; Dev Ed &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Learn web development, web design, 3d modelling, tools like figma and more without getting bored!The goes of this channel is to get you to become as creative.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oHUfjGen--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/hN84QMV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oHUfjGen--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/hN84QMV.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;4. &lt;a href="https://www.youtube.com/channel/UCWv7vMbMWH4-V0ZXdmDpPBA/playlists"&gt; Programming with Mosh &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;He gives you lots of tutorial on web tech and languages that are quickly gaining their ground in the development world.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--puLLTkl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/x9peyJ0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--puLLTkl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/x9peyJ0.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;5. &lt;a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ/playlists"&gt; Free Code Camp &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Freecodecamp is an open-source community as it provides many best tutorials from different instructors for Python, CSS, React, Data Science, JavaScript and etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WqZONHLT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/aBng1fV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WqZONHLT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/aBng1fV.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;6. &lt;a href="https://www.youtube.com/channel/UCvjgXvBlbQiydffZU7m1_aw"&gt; The Coding Train &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;The Coding Train is on its way with creative coding video tutorials on subjects ranging from the basics of programming languages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q2lTirw9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/VStTY1s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q2lTirw9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/VStTY1s.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;7. &lt;a href="https://www.youtube.com/channel/UCO1cgjhGzsSYb1rsB4bFe4Q"&gt; Fun Fun Function &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Mattias Petter Johansson, mpj for short. He has talked about Javascript features and its use cases with some great example.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bKXgAfpG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/WprfXtX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bKXgAfpG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/WprfXtX.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;8. &lt;a href="https://www.youtube.com/channel/UCfzlCWGWYyIQ0aLC5w48gBQ"&gt; sentdex &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Python Programming tutorials, going further than just the basics. Learn about machine learning, finance, data analysis, robotics, web development, game development, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JvU6PJct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Qk4U9TE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JvU6PJct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Qk4U9TE.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;9. &lt;a href="https://www.youtube.com/channel/UC29ju8bIPH5as8OGnQzwJyA/playlists"&gt; Traversy Media &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Traversy Media features the best online web development and programming tutorials for all of the latest web technologies including Node.js, Angular 2, React, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AalvEKpw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/JBr8Tyx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AalvEKpw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/JBr8Tyx.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
        üåü &lt;a href="https://twitter.com/suprabhasupi"&gt; Twitter&lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;
        üë©üèª‚Äçüíª &lt;a href="https://www.suprabha.me/"&gt; suprabha.me&lt;/a&gt;
      &lt;/td&gt;
&lt;td&gt;
        üåü &lt;a href="https://www.instagram.com/suprabhasupi/"&gt; Instagram&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Setting up a CI-CD Pipeline Using Azure DevOps</title>
      <author>Elegberun Olugbenga</author>
      <pubDate>Sun, 11 Apr 2021 18:52:04 +0000</pubDate>
      <link>https://dev.to/gbengelebs/setting-up-a-ci-cd-pipeline-using-azure-devops-4gb</link>
      <guid>https://dev.to/gbengelebs/setting-up-a-ci-cd-pipeline-using-azure-devops-4gb</guid>
      <description>&lt;p&gt;Continuous Integration is the process of merging all code changes into a central repository. Continuous Deployment on the other hand is the practice of automatically deploying code changes that have passed predefined checks to a specified environment. It uses a set of automated tools to run tests that ensure the codebase is stable and deployable. This approach helps deliver faster and efficient deployments.&lt;/p&gt;

&lt;p&gt;An azure pipeline is a fantastic tool for setting up CICD pipelines; in this article, I am going to be walking through how to set up a CI-CD pipeline using Azure DevOps Pipelines. This is a follow-up to my previous article on &lt;a href="https://dev.to/gbengelebs/deploying-an-asp-net-webapi-and-mysql-database-container-to-azure-kubernetes-service-3ca"&gt;Deploying An Asp.Net WebApi and MySql DataBase Container to Azure Kubernetes Service&lt;/a&gt;. I will be referring to some information discussed in that article. If you are already familiar with Azure Kubernetes deployments you can continue.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequsites"&gt;
  &lt;/a&gt;
  Prerequsites
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;VSCODE. Download &lt;a href="https://azure.microsoft.com/en-us/services/devops/pipelines/"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Azure DevOps &lt;a href="https://azure.microsoft.com/en-us/services/devops/pipelines/"&gt;Login&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;An Azure account. You can create it for free &lt;a href="https://portal.azure.com/free"&gt;here&lt;/a&gt;. 
&lt;em&gt;Ps you get 200dollars free Azure credits and 12month's pay as you go.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Docker &lt;a href="https://docs.docker.com/get-docker/"&gt;docker&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;VSCODE &lt;a href="https://code.visualstudio.com/download"&gt;vscode&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In my previous article, I discussed how to deploy a.NetCore web API and MySQL DB to azure Kubernetes service. I will be going one step further by automating the deployment process using an azure pipeline. The tool checks for changes in the git repository and automates the build and deployment process. I could also add a series of checks within the pipelines like approvals and tests. But for this article,I will just be setting up a basic build and deploy CI-CD pipeline.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Wc7E8yi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/or4tcgop7thnru2mz5e6.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Wc7E8yi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/or4tcgop7thnru2mz5e6.jpeg" alt="Azure Pipeline"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Download the source code from GitHub&lt;/strong&gt; &lt;a href="https://github.com/GbengaElebsDev/AksTutorial.git"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;2. Create a repository for the project and push your code to GitHub&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;3. If you followed the previous article revert the manual steps we did in the previous article by deleting the services and pod deployments and the images we pushed to Azure container registry.&lt;/strong&gt;. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Deleting Container Images
To delete a container image login to Azure portal- &amp;gt; container registry -&amp;gt; repositories click on the three ellipses.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RGUkRoDk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jfb23omg3daq7kb1ohk.png" alt="Deleting Images"&gt;
&lt;/li&gt;
&lt;li&gt;Deleting Kubernetes Services and Pods
Run this command to get your current Kubernetes context
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl config get-contexts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Ensure you are in your azure Kubernetes context&lt;br&gt;
Delete all the resources in that context&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl delete daemonsets,replicasets,services,deployments,pods,rc,pv,pvc --all
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Check if it has been deleted&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl get pods

No resources found in the default namespace.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;4. The deployment YAML files are in a folder called manifest&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This is to ensure that the pipeline can refer to all the deployments in one folder.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;5. Login to Azure Pipelines&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://azure.microsoft.com/en-us/services/devops/pipelines/"&gt;Azure Pipelines&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go to pipelines -&amp;gt; Create Pipeline
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vS1xIUMQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b5n4o5ofzli3ggudlpt8.png" alt="Azure Pipelines"&gt;
&lt;/li&gt;
&lt;li&gt;Connect to your GitHub and Authenticate&lt;/li&gt;
&lt;li&gt;Select your GitHub Project&lt;/li&gt;
&lt;li&gt;Select Deploy to Azure Kubernetes Service&lt;/li&gt;
&lt;li&gt;Login to your azure portal from the app&lt;/li&gt;
&lt;li&gt;Fill in your details like container registry and image name
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0e7kaqh7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aievc8253o2oza72zzp7.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;A YAML file will be automatically generated.&lt;/li&gt;
&lt;li&gt;Edit the contents of the YAML file with this gist
&lt;strong&gt;Remember to replace the environment variables with your own details and credentials&lt;/strong&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#reviewing-the-yaml-file"&gt;
  &lt;/a&gt;
  Reviewing the YAML file
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;trigger&lt;/strong&gt;: This command tells the pipeline to listen to changes pushed to the main branch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;variables&lt;/strong&gt;: To store reusable entries things like the &lt;strong&gt;containerRegistry&lt;/strong&gt; and secrets that you want to reuse in multiple places in the pipeline.&lt;br&gt;
I define a &lt;strong&gt;mysqltag&lt;/strong&gt; to specify the MySQL version I want to be created.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#build-stage"&gt;
  &lt;/a&gt;
  Build Stage
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Stages&lt;/strong&gt;: are the major divisions in a pipeline: "build this app", "run these tests", and "deploy to pre-production" are good examples of stages. In our case, we have only "build" and "deploy".&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Job&lt;/strong&gt;: A deployment job is a collection of steps that are run sequentially against the environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;pool&lt;/strong&gt;- is the server that your azure pipeline would be carrying out the operation. By default Azure assigns an agent for each pipeline. But you can create yours. In my case I created an agent called "ubuntu-latest".&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;steps&lt;/strong&gt;- The build stage has a task of &lt;strong&gt;Docker@2&lt;/strong&gt; which will perform 2 tasks (Build &amp;amp; Push).&lt;br&gt;
This will build the service and then push it to my Azure container registry using the environment variables as defined. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We add two builds and deploy steps because we have two images we will like to build. The SQL and the API image&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;stages have jobs-&amp;gt; each job has a step -&amp;gt; each step has a task assigned to it&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;publish&lt;/strong&gt;. This command tells the pipeline to find the manifest folder, create an artifact in the pipeline called manifest using the resources in the folder.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#deploy-stage"&gt;
  &lt;/a&gt;
  Deploy Stage
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;depends on&lt;/strong&gt; -It depends on the build stage. This means the build stage has to be completed before this can run.&lt;br&gt;
&lt;strong&gt;strategy&lt;/strong&gt; - How you want to deploy. &lt;strong&gt;Run once&lt;/strong&gt; means all the steps run sequentially. &lt;/p&gt;

&lt;p&gt;In the task section, there is a task: &lt;strong&gt;KubernetesManifest@0&lt;/strong&gt;&lt;br&gt;
Kubernetes manifest task command tells the pipeline:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To download the files from the manifest artifact
&lt;/li&gt;
&lt;li&gt;Apply the manifest artifact to the Kubernetes cluster&lt;/li&gt;
&lt;li&gt;Deploy the artifact to the Kubernetes cluster&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As with the build section, we define two deployment tasks because we have two images.&lt;/p&gt;

&lt;p&gt;Hit save and run and commit directly to the master branch. This will store your YAML file in your GitHub repo and it can be modified as needed.&lt;/p&gt;

&lt;p&gt;You should see this stage stating that the build has begun&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1QhC0CxB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/os6hrnbw2vg305lfl7z3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1QhC0CxB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/os6hrnbw2vg305lfl7z3.png" alt="BuildStage"&gt;&lt;/a&gt;&lt;br&gt;
-------------------------ERROR---------------------------&lt;br&gt;
&lt;strong&gt;This agent request is not running because you have reached the maximum number of requests that can run for parallelism type 'Microsoft-hosted Private'. Current position in queue: 1&lt;/strong&gt;&lt;br&gt;
-------------------------ERROR---------------------------&lt;br&gt;
You will probably run into this error and the root cause of the issue is that the pipeline Microsoft-hosted agent for public and private projects in new organizations on Azure DevOps has been restricted in the latest update. The summary of this is that Microsoft has temporarily restricted agents from running your jobs.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#to-resolve-this-for-a-private-project"&gt;
  &lt;/a&gt;
  To resolve this for a private project
&lt;/h3&gt;

&lt;p&gt;Private Project:&lt;/p&gt;

&lt;p&gt;You could send an email to &lt;a href="mailto:azpipelines-freetier@microsoft.com"&gt;azpipelines-freetier@microsoft.com&lt;/a&gt; in order to get your free tier.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your name&lt;/li&gt;
&lt;li&gt;Name of the Azure DevOps organization&lt;/li&gt;
&lt;li&gt;Private Project:&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#to-resolve-this-for-a-public-project"&gt;
  &lt;/a&gt;
  To resolve this for a public project
&lt;/h3&gt;

&lt;p&gt;You could send an email to &lt;a href="mailto:azpipelines-ossgrant@microsoft.com"&gt;azpipelines-ossgrant@microsoft.com&lt;/a&gt; in order to get your free tier.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your name&lt;/li&gt;
&lt;li&gt;Azure DevOps organization for which you are requesting the free grant&lt;/li&gt;
&lt;li&gt;Links to the repositories that you plan to build&lt;/li&gt;
&lt;li&gt;Brief description of your project.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are impatient like moi. Watch this&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/psa8xfJ0-zI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Self Hosted private Agent on Linux (Ubuntu) for Azure Pipelines on how to create your own self-hosted agents and link them to run your pipelines.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After you create the agent. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add it to the project&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Y5-4rPH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sp4b6vdkcth945ntdzr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Y5-4rPH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sp4b6vdkcth945ntdzr.png" alt="Create Agent"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Copy the name and edit this section with your pool name so that agent runs it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z0uTuzHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e85rbnvqasofcazfmp4o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z0uTuzHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e85rbnvqasofcazfmp4o.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install docker on your self hosted agent using this the first step in this &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-18-04"&gt;How To Install and Use Docker on Ubuntu 18.04&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cd into your agent and restart the agent.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see all our Build processes are running similar to what we did before. But right now everything is running automatically in the Pipeline. Once there is a push to the main branch the pipeline triggers a build and it is deployed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1QhC0CxB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/os6hrnbw2vg305lfl7z3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1QhC0CxB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/os6hrnbw2vg305lfl7z3.png" alt="BuildStage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QTFnwFrC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3aukzi4ei2c6uu3bsxlm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QTFnwFrC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3aukzi4ei2c6uu3bsxlm.png" alt="Deploy Stage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The build and deploy stages have been completed.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LnS2JNK_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rzfrfvavoyp6g91en28q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LnS2JNK_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rzfrfvavoyp6g91en28q.png" alt="build and Deploy Completed"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Go to pipelines -&amp;gt; Runs -&amp;gt; View Environment -&amp;gt; Resources -&amp;gt;Services&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--APZc1vSJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvzrv33jg73nn8lljanp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--APZc1vSJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvzrv33jg73nn8lljanp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kDyKizg9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ashxx9m4dvkk20oxmgsq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kDyKizg9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ashxx9m4dvkk20oxmgsq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Navigate through the deployment and explore the resources created.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select the Test-API service External IP&lt;br&gt;
Copy the external IP and navigate to the URL**&lt;br&gt;
(&lt;a href="http://external-ip:8080/swagger/index.html"&gt;http://external-ip:8080/swagger/index.html&lt;/a&gt;)&lt;br&gt;
Mine is (&lt;a href="http://20.62.158.83:8080/swagger/index.html"&gt;http://20.62.158.83:8080/swagger/index.html&lt;/a&gt;). Test the API deployment using the swagger page as shown. Our containerized API is now running inside the Azure Kubernetes service and exposed to the internet via the Load Balancer Service. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yZJsN8eN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujvq49qqnzfzvhtzo7cc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yZJsN8eN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujvq49qqnzfzvhtzo7cc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We have successfully set up an azure pipeline to build and deploy our containerized application to both Azure Container Registry and Azure Kubernetes Service.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#add-the-azure-pipeline-built-successfully-badge-to-the-git-repo"&gt;
  &lt;/a&gt;
  Add The Azure Pipeline built successfully badge to the git repo
&lt;/h2&gt;

&lt;p&gt;-In your Azure DevOps. Select the pipeline -&amp;gt; Runs -&amp;gt; Click on the 3 Elipses&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ttCwtZKm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zlpltf373qbuud584q1w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ttCwtZKm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zlpltf373qbuud584q1w.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Select Status Badge -&amp;gt; Copy the Sample markdown.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cfroXjEI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zb4w9qgpixupa0a9stwg.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Create a README.md file in your GitHub repo and paste the markdown there.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dVGj3Aob--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvw3g42jfolueopviav1.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>azureapril</category>
      <category>kubernetes</category>
      <category>docker</category>
      <category>devops</category>
    </item>
    <item>
      <title>We're going to üíïtranscribeüíï and post each 'Privilege in Tech'üéôÔ∏è episode</title>
      <author>Alejandra Quetzalli üêæ</author>
      <pubDate>Sun, 11 Apr 2021 18:26:01 +0000</pubDate>
      <link>https://dev.to/privilegeintech/we-re-going-to-transcribe-and-post-each-privilege-in-tech-episode-3e8h</link>
      <guid>https://dev.to/privilegeintech/we-re-going-to-transcribe-and-post-each-privilege-in-tech-episode-3e8h</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p27PFqh5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/puunkrwtqbo7k0jmdkya.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p27PFqh5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/puunkrwtqbo7k0jmdkya.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;‚ú®Announcement‚ú® &lt;/p&gt;

&lt;p&gt;We've created an organization on the DEV.to platform so that we can üíïtranscribeüíï and post each episode! &lt;/p&gt;

&lt;p&gt;Alejandra created the #TechPrivilege podcastüéô under her @sheCodesNow organization in an effort to help the most vulnerable in tech not feel erased. We'll discuss tech media stories and how to support diverse teammates with less privilege. &lt;/p&gt;

&lt;p&gt;Our co-hosts &lt;a class="comment-mentioned-user" href="https://dev.to/alejandra_quetzalli"&gt;@alejandra_quetzalli&lt;/a&gt;
, Maggie, &lt;a class="comment-mentioned-user" href="https://dev.to/devpato"&gt;@devpato&lt;/a&gt;
, and Lisa Chuang are excited to talk tech privilege.&lt;/p&gt;

&lt;p&gt;We're also excited to let you know that we recently became a üü£Twitter Spaces host, and we'll continue to host safe rooms for people to talk about what it feels like to be less privileged in tech. &lt;/p&gt;

&lt;p&gt;p.s. Give us a holler if you'd like to be a guest on the podcast!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Why start using TailwindCss in 2021</title>
      <author>Leonardo Tononi</author>
      <pubDate>Sun, 11 Apr 2021 18:00:13 +0000</pubDate>
      <link>https://dev.to/easaaa/why-start-using-tailwindcss-in-2021-e5n</link>
      <guid>https://dev.to/easaaa/why-start-using-tailwindcss-in-2021-e5n</guid>
      <description>&lt;p&gt;Hi, this is Leonardo.&lt;/p&gt;

&lt;p&gt;I'm a simple human that tries to improve day by day, step by step. If it‚Äôs your first time here you can read who I am in this blog post &lt;a href="https://www.leonardotononi.com/blog/nice-to-meet-you"&gt;‚ÄúWho am I‚Äù&lt;/a&gt;, &lt;strong&gt;otherwise skip this part.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;From their website we understand that TailwindCss is a utility first css framework. It allows us to write our style directly in the html. ‚ÄúYes OK‚Äù you will say ‚Äúbut I have a thousand of questions!‚Äù Don‚Äôt worry, in the article I will try to answer everything you should evaluate to see if it is a right fit for your needs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-it-is-and-what-are-the-advantages"&gt;
  &lt;/a&gt;
  What it is and what are the advantages?
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs get straight to the point. Why bother learning this new way of writing CSS? Well I‚Äôd start by saying it‚Äôs fucking fast! What do I mean by fast? Imagine no longer having to create separate files for component markups and its styles. Imagine no longer having to think of names for ‚ÄúWrapper‚Äù or ‚ÄúWrapperOfWrapperOfWrapper‚Äù. Not having to continually import or export css variables. Imagine you can do it all in one line.&lt;/p&gt;

&lt;p&gt;Imagine being able to copy and paste entire structures of components already created by someone else, where you can apply your personal style in the blink of an eye. Imagine being able to focus primarily on creating the logic of your application.&lt;br&gt;
That is Tailwind.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-is-it-better-than-others"&gt;
  &lt;/a&gt;
  Why is it better than others?
&lt;/h2&gt;

&lt;p&gt;I have never really tried other css frameworks in the same way I tried Tailwind. But what I can tell you is that while others have a more defined and less easily customizable style, with tailwind everything remains in our hands, but at the same time it allows you to have a good level of predefined style guidelines.&lt;br&gt;
So if you are like me, you don‚Äôt have a strong knowledge of design, you can still create beautiful applications or web pages without compromise the unicity of your style.&lt;/p&gt;

&lt;p&gt;A site created with tailwind is difficult to detect at first sight, on the contrary the sites created with other frameworks have a more marked and recognizable imprint.&lt;/p&gt;

&lt;p&gt;I want to show you some example of what triggered my curiosity. &lt;br&gt;
Below an example of an easily integrated dark mode:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// tailwind.config.js
module.exports = {
  darkMode: ‚Äòmedium‚Äô,
  // ‚Ä¶
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div className=‚Äúbg-white dark:bg-gray-800‚Äù&amp;gt;
  // .....
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not to mention the media query, which can be integrated with a simple "md: text-white" to say "@media (min-width: 768px) {‚Ä¶}".&lt;br&gt;
In my humble opinion this is really cool and everything is so easily customizable.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Also, most Tailwind projects ship less than 10KB of CSS to the client.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#why-not-just-use-css"&gt;
  &lt;/a&gt;
  Why not just use CSS?
&lt;/h2&gt;

&lt;p&gt;Because Tailwind requires a minimal learning curve and  the documentation it‚Äôs really well done. Over time, it will make the creation of projects much easier and faster, without having to leave behind the flexibility of pure css.&lt;/p&gt;

&lt;p&gt;Furthermore, once you have decided to create a project with tailwind, it will always be possible to apply other types of css, like styled components.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recap"&gt;
  &lt;/a&gt;
  Recap
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Speed  up the creation and the design of any project&lt;/li&gt;
&lt;li&gt;Allows you to raise the bar of your style&lt;/li&gt;
&lt;li&gt;You can say goodbye to having to create fancy names for your components or Css variables = Easy &lt;/li&gt;
&lt;li&gt;Highly customizable&lt;/li&gt;
&lt;li&gt;Dev friendly, covers the real needs that a developer may have in 2021&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#extra-some-useful-free-resources"&gt;
  &lt;/a&gt;
  EXTRA: some useful FREE resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tailwindcomponents.com/"&gt;Tailwind CSS Components. Examples and templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailblocks.cc/"&gt;Tailblocks ‚Äî Ready-to-use Tailwind CSS blocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://merakiui.com/"&gt;Meraki UI Tailwindcss Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tailwind-kit.com/"&gt;Tailwind UI KIT ‚Äì 250 components and templates for React, VueJS and Angular.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>codenewbie</category>
      <category>tailwindcss</category>
      <category>webdev</category>
      <category>css</category>
    </item>
  </channel>
</rss>
