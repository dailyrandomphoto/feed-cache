<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Welcome Thread - v144</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 29 Sep 2021 19:49:08 +0000</pubDate>
      <link>https://dev.to/thepracticaldev/welcome-thread-v144-287</link>
      <guid>https://dev.to/thepracticaldev/welcome-thread-v144-287</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ITXtM_I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/OJqimXwqG7CQE/giphy.gif%3Fcid%3Decf05e47phjd4n8s48dw6z2to68w2n5km6609s75lh8pdrer%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ITXtM_I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/OJqimXwqG7CQE/giphy.gif%3Fcid%3Decf05e47phjd4n8s48dw6z2to68w2n5km6609s75lh8pdrer%26rid%3Dgiphy.gif%26ct%3Dg" alt="Willy Wonka Welcome"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#welcome-to-dev"&gt;
  &lt;/a&gt;
  Welcome to DEV!
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Leave a comment below to introduce yourself! You can talk about what brought you here, what you're learning, or just a fun fact about yourself.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reply to someone's comment, either with a question or just a hello. 👋 &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Great to have you in the community!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>welcome</category>
    </item>
    <item>
      <title>What do you want to know about Vue.js and its creation? Answer to be featured on our podcast 🎧  </title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Wed, 29 Sep 2021 19:43:22 +0000</pubDate>
      <link>https://dev.to/devteam/what-do-you-want-to-know-about-vue-js-and-its-creation-answer-to-be-featured-on-our-podcast-3b96</link>
      <guid>https://dev.to/devteam/what-do-you-want-to-know-about-vue-js-and-its-creation-answer-to-be-featured-on-our-podcast-3b96</guid>
      <description>&lt;p&gt;The &lt;a href="//dev.to/devdiscuss"&gt;DevDiscuss Podcast&lt;/a&gt; begins with an interview and ends with commentary from listeners — and we like to feature the &lt;em&gt;actual&lt;/em&gt; voices from our community!&lt;/p&gt;

&lt;p&gt;To inform an upcoming episode of the show, we'd like to know...&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#what-do-you-want-to-know-about-vuejs-and-its-creation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What do you want to know about Vue.js and its creation?&lt;/strong&gt;
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;For your chance to hear your actual comments on an upcoming episode, answer the question above by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Calling our Google Voice at +1 (929)500-1513 and leave a message 📞&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sending a voice memo to &lt;a href="mailto:pod@dev.to"&gt;pod@dev.to&lt;/a&gt; 🎙&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OR, leaving a comment here (we'll read your response aloud for you) 🗣&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please send in your recordings by TOMORROW Thursday, September 30th at 9 AM, ET (1 PM UTC, 6 AM PT)&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#voice-recordings-will-be-given-priority-placement"&gt;
  &lt;/a&gt;
  Voice recordings will be given priority placement 😉
&lt;/h4&gt;

&lt;p&gt;Catch up on recent episodes of the show &lt;a href="https://dev.to/devdiscuss"&gt;here&lt;/a&gt; 👀  &lt;/p&gt;

</description>
      <category>podcast</category>
      <category>discuss</category>
      <category>vue</category>
    </item>
    <item>
      <title>Java: Convert String to a Number</title>
      <author>haytam_7</author>
      <pubDate>Wed, 29 Sep 2021 19:21:50 +0000</pubDate>
      <link>https://dev.to/haytamkh7/java-convert-string-to-a-number-28jn</link>
      <guid>https://dev.to/haytamkh7/java-convert-string-to-a-number-28jn</guid>
      <description>&lt;p&gt;When it comes to converting a string of numbers, like: "1234" into a number the first question that jumps to your mind is:&lt;br&gt;
"They look like a number! why do I need to convert a number to a number?!"&lt;/p&gt;

&lt;p&gt;Well, the computer doesn't see things the way we see them, a &lt;strong&gt;&lt;em&gt;string&lt;/em&gt;&lt;/strong&gt; consists of numbers is not a number! or at least according to the computer.&lt;/p&gt;

&lt;p&gt;A string of numbers is a bunch of characters and they do not present a numeric value.&lt;/p&gt;

&lt;p&gt;So in Java we have two ways to convert a string of 'numbers' to a real number, and here is how this could be done:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In this post I'm going to talk about converting string to int&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#using-integerparseint"&gt;
  &lt;/a&gt;
  Using Integer.parseInt()
&lt;/h3&gt;

&lt;p&gt;This method will return the primitive numeric value of a string that contains &lt;strong&gt;only&lt;/strong&gt; numbers, otherwise it will throw an error (NumberFormatException)&lt;/p&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;String testStr = "150";
        try{
            System.out.println(Integer.parseInt(testStr));
        } catch (NumberFormatException e) {
            System.out.print("Error: String doesn't contain a valid integer. " + e.getMessage());
        }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#using-integervalueof"&gt;
  &lt;/a&gt;
  Using Integer.valueOf()
&lt;/h3&gt;

&lt;p&gt;This method will return an integer object of the passed parameter,&lt;br&gt;
if the passed parameter isn't valid it will throw an error.&lt;br&gt;
For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;String testStr = "200";
        try{
            System.out.println(Integer.valueOf(testStr));
        } catch (NumberFormatException e) {
            System.out.print("Error: String doesn't contain a valid integer. " + e.getMessage());
        }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>java</category>
      <category>programming</category>
      <category>coding</category>
      <category>oop</category>
    </item>
    <item>
      <title>5 Basic linux commands with detailed explanation and their resemblance to windows.</title>
      <author>Shubham Tyagi</author>
      <pubDate>Wed, 29 Sep 2021 19:15:37 +0000</pubDate>
      <link>https://dev.to/shubhamtyagi/5-basic-linux-commands-detailed-explanation-to-start-with-your-linux-journey-443f</link>
      <guid>https://dev.to/shubhamtyagi/5-basic-linux-commands-detailed-explanation-to-start-with-your-linux-journey-443f</guid>
      <description>&lt;p&gt;Linux sometimes seems to be very difficult from the outside but once you get a head start there are a ton of possibilities with linux which are not available with windows. Obviously you may not get as attractive and beginner friendly interface as windows does but everything comes with a price doesn't it.&lt;/p&gt;

&lt;p&gt;Here I will list 10 commands and explain them which you could try out yourself on your linux OS right away and experience it yourselves. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;df&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
this command will show the amount of available disk space and used disk space for file system to which you as a user currently has access to. For eg : if you have a dual boot system established in your pc and your linux OS doesn't have access to the D folder.If you run this command on your linux terminal then you wont be able to see the partiton of used and unused space of D folder. this command is same as when you open the disk management tool in windows.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iqX86Z_R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/9ds5e0B.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iqX86Z_R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/9ds5e0B.png" alt="df command"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;top&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
This command when you type in your terminal it will show the active linux processes which are managed by your linux kernel. This command is used like how you would use task manager in windows, the difference being , it shows the details of all the processes in far more depth than windows does.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it will look something like this when you type the command.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9bppXCcI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/ULJ9dee.png" alt=""&gt;
&lt;/li&gt;
&lt;li&gt;this is what is meant by each column head.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_jFd628u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/qTZSL7Z.png" alt=""&gt;
you can press 'q' to exit this window in your termial.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ls&lt;/strong&gt;&lt;br&gt;
This command list all the files and directory present in the location of where you are in your system. for example if you are in a directory games which has 3 sub-directory. then this command will list those 3 sub-directory.&lt;br&gt;
observe in the below image how the directories are highlighted in the terminal.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tkY-r4Hy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/3QKd57l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tkY-r4Hy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/3QKd57l.png" alt=""&gt;&lt;/a&gt;  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cd&lt;/strong&gt;&lt;br&gt;
This command is a fairly self explanatory command,'''cd''' is a change directory command when you type&lt;br&gt;
&lt;br&gt;
&lt;code&gt;cd [directory name]&lt;/code&gt;&lt;br&gt;
&lt;br&gt;
then you will be in that particular directory. If you type&lt;br&gt;
&lt;br&gt;
&lt;code&gt;cd ..&lt;/code&gt;&lt;br&gt;
&lt;br&gt;
you will go in the root directory of current directory.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;touch&lt;/strong&gt;&lt;br&gt;
This command is used to create a file. This works like when you right click and create a new document in windows. You have to type&lt;br&gt;
&lt;br&gt;
&lt;code&gt;touch [filename.extension]&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>linux</category>
      <category>linuxcommands</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Easy way to integrate Google Maps in React</title>
      <author>Thomas Ledoux</author>
      <pubDate>Wed, 29 Sep 2021 18:56:32 +0000</pubDate>
      <link>https://dev.to/thomasledoux1/easy-way-to-integrate-google-maps-in-react-1j6j</link>
      <guid>https://dev.to/thomasledoux1/easy-way-to-integrate-google-maps-in-react-1j6j</guid>
      <description>&lt;p&gt;More often than not, you will be asked to add a map coming from Google Maps to websites you are developing.&lt;br&gt;
This might seem like a pain to integrate in your React application, but luckily Alexey Lyakhov created a package to make it all a bit easier: &lt;a href="https://github.com/JustFly1984/react-google-maps-api"&gt;React Google Maps API&lt;/a&gt;.&lt;br&gt;
It's &lt;a href="https://react-google-maps-api-docs.netlify.app/"&gt;well documented&lt;/a&gt; too!&lt;/p&gt;

&lt;p&gt;Now, let's dive into the actual code to create a component using this package!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;GoogleMap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;useJsApiLoader&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Marker&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;InfoWindow&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@react-google-maps/api&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;OfficeNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;field_address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;locality&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;postal_code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;address_line1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;address_line2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;offices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;field_address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;locality&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Gent&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;postal_code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;9000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;address_line1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Veldstraat 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;address_line2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;51.053589&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.72242&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;field_address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;locality&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Brussel&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;postal_code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;address_line1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Nieuwstraat 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;address_line2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;50.85061&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.35403&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;field_address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;locality&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Antwerpen&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;postal_code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;address_line1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Meir 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;address_line2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;51.21878&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.40559&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mapRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;selectedOffice&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setSelectedOffice&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
    &lt;span class="nx"&gt;OfficeNode&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
  &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isLoaded&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useJsApiLoader&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;google-map-script&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;googleMapsApiKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ENTER-YOUR-API-KEY-HERE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onLoad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mapInstance&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bounds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LatLngBounds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="nx"&gt;offices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;office&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LatLng&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nx"&gt;office&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;field_address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;office&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;field_address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;longitude&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="nx"&gt;mapRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mapInstance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;mapInstance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fitBounds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;offices&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onClickMarker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;officeId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setSelectedOffice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;offices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;office&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;office&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;officeId&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Google maps + React&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isLoaded&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GoogleMap&lt;/span&gt;
            &lt;span class="na"&gt;mapContainerClassName&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"c-office-overview__map"&lt;/span&gt;
            &lt;span class="na"&gt;onLoad&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onLoad&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;offices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;office&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
              &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Marker&lt;/span&gt;
                &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;office&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;onClickMarker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;office&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                  &lt;span class="na"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;office&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;field_address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="na"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;office&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;field_address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;longitude&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
              &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;selectedOffice&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
              &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;InfoWindow&lt;/span&gt;
                &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                  &lt;span class="na"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;selectedOffice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;field_address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="na"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;selectedOffice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;field_address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;longitude&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="na"&gt;onCloseClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setSelectedOffice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
              &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;selectedOffice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;field_address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;address_line1&lt;/span&gt;&lt;span class="si"&gt;}{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                  &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;selectedOffice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;field_address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;address_line2&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; -&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                  &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;selectedOffice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;field_address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postal_code&lt;/span&gt;&lt;span class="si"&gt;}{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                  &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;selectedOffice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;field_address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locality&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;InfoWindow&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;GoogleMap&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So let's see what's going on here.&lt;br&gt;
We import the different needed components from the library and we select the needed library (only places needed for this demo). &lt;br&gt;
After this is done, we can create a Ref with the useRef hook, this will be used to store the reference to the Google Maps map. &lt;/p&gt;

&lt;p&gt;We then use the &lt;code&gt;useJsApiLoader&lt;/code&gt; hook to initialise the Google Maps API, passing the API key. &lt;br&gt;
From the response of this hook, we can get the &lt;code&gt;isLoaded&lt;/code&gt; boolean back, this will be used to show/hide the map in our rendering.&lt;br&gt;
We also need to create an &lt;code&gt;onLoad&lt;/code&gt; function (wrapped in a useCallback hook), this will be called by the Google Maps API once it's done initialising. &lt;br&gt;
In this function we'll loop over our offices, and add positions to the bounds of our Google Map, so the map is correctly centered, and we'll assign the Google Maps instance to our Ref we created earlier. &lt;/p&gt;

&lt;p&gt;In our rendering, it's all pretty straightforward. We render our map once the &lt;code&gt;isLoaded&lt;/code&gt; boolean is true. &lt;br&gt;
We render a marker for every office, and add an onClick listener to select the office when the marker is clicked. &lt;/p&gt;

&lt;p&gt;We also have a check in the code to see if &lt;code&gt;selectedOffice&lt;/code&gt;, when an office is selected we want to use the InfoWindow from Google Maps to show some details of the office.&lt;br&gt;
When the close button is clicked, the &lt;code&gt;selectedOffice&lt;/code&gt; will be cleared.&lt;/p&gt;

&lt;p&gt;And that's it!&lt;br&gt;
I hope this was helpful.&lt;br&gt;
I might write a follow-up article where I explain how to search for addresses with Google Maps Places, and how to search the closest office to the address. This would also include working with the built-in geolocation API in the browsers. &lt;br&gt;
If you'd be interested in this, leave a comment :-)&lt;/p&gt;

&lt;p&gt;Source code can be found on &lt;a href="https://codesandbox.io/s/gracious-hypatia-fowlq"&gt;Codesandbox&lt;/a&gt; (you still need to enter a Google Maps API key, I can't give out mine since I'd get charged :D)&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>html</category>
    </item>
    <item>
      <title>Arquitetura Evolutiva: a chave para o sucesso da Agilidade</title>
      <author>Andre Racz</author>
      <pubDate>Wed, 29 Sep 2021 18:45:52 +0000</pubDate>
      <link>https://dev.to/andreracz/arquitetura-evolutiva-a-chave-para-o-sucesso-da-agilidade-51a4</link>
      <guid>https://dev.to/andreracz/arquitetura-evolutiva-a-chave-para-o-sucesso-da-agilidade-51a4</guid>
      <description>&lt;p&gt;Como tratar atividades de arquitetura em projetos Ágeis? Tradicionalmente, em metodologias Waterfall, conforme imagem abaixo, as atividades de arquitetura se concentram até a fase de design. É o que é tradicionalmente chamado de BDUF (Big Design Up Front).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3TxA10p9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4g78qocbcb7hymz2m02t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3TxA10p9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4g78qocbcb7hymz2m02t.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Metodologia Waterfall - fonte: &lt;a href="https://martinfowler.com/bliki/WaterfallProcess.html"&gt;Martin Fowler - Waterfall process&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nesse tipo de metodologia, temos todo o desenho funcional e de arquitetura sendo feito antes de se iniciar o desenvolvimento e é fácil ver como as atividades de arquitetura se encaixam no projeto.&lt;/p&gt;

&lt;p&gt;Contudo, hoje a maior parte das organizações já está adotando metodologias ágeis, em grande parte pois perceberam que as metodologias em cascatas demoram muito para entregar valor às organizações, gasta-se um grande tempo em desenho de uma solução, que quando fica pronta, normalmente não atende às novas demandas do mercado, que evolui muito rápido.&lt;/p&gt;

&lt;p&gt;Isso nos deixa com a pergunta que abre esse artigo: como tratar as atividades de arquitetura em metodologias ágeis? &lt;/p&gt;

&lt;p&gt;E complemento: Como tratar as atividades de arquitetura em metodologias ágeis se o foco é na entrega de valor e o backlog é determinado por um product owner com uma visão excelente de negócio, mas com pouca visão técnica?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#abordagens"&gt;
  &lt;/a&gt;
  Abordagens
&lt;/h1&gt;

&lt;p&gt;O mercado tem adotado duas abordagens principais quando fala de arquitetura em projetos Ágeis:&lt;/p&gt;

&lt;p&gt;A primeira abordagem, vinda da metodologia SAFE (Scaled Agile Framework que é voltada para iniciativas de maior porte e com múltiplos times colaborando), ela é chamada de &lt;a href="https://www.scaledagileframework.com/architectural-runway/"&gt;Architecture Runway&lt;/a&gt;, que pode ser traduzida como "Pista de arquitetura" ou "Passarela de Arquitetura". &lt;/p&gt;

&lt;p&gt;Nesta abordagem, é montada uma equipe de arquitetura com um Arquiteto como Product Owner. Este time trabalha em funcionalidades que habilitam os outros times a entregarem valor para o negócio.&lt;/p&gt;

&lt;p&gt;A segunda abordagem mais utilizada é dar autonomia completa às equipes para tomada de decisão, e deixar as atividades de arquitetura como parte das sprints. Para essa abordagem ser bem sucedida é necessário um time com maior senioridade e um PO que consiga ver valor em atividades mais técnicas, visto que em geral essa abordagem tente a gerar necessidades mais frequentes de refatoração.&lt;/p&gt;

&lt;p&gt;Ambas as abordagens tem benefícios e desafios, e irei no futuro fazer um artigo sobre elas, mas como bom Arquiteto, não poderia deixar de falar da parte técnica. Qual a chave para fazer uma arquitetura evolutiva?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#a-chave-da-arquitetura-evolutiva"&gt;
  &lt;/a&gt;
  A chave da Arquitetura Evolutiva
&lt;/h1&gt;

&lt;p&gt;Independente da abordagem, a chave para obter uma arquitetura evolutiva é diminuir o acoplamento nos sistemas. Pensando em um cenário padrão de aplicações, como visto abaixo, o desacoplamento deve ser feito em vários níveis. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aYHuqF2B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9lfbdxeqaxoif1fygcf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aYHuqF2B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9lfbdxeqaxoif1fygcf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tipos de desacoplamento&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Desacoplamento dentro de um módulo: Desacoplar as funcionalidades dentro de um módulo do sistema&lt;/li&gt;
&lt;li&gt;Desacoplamento dentro de um sistema: Desacoplar os diversos módulos dos sistemas&lt;/li&gt;
&lt;li&gt;Desacoplamento entre sistemas: Desacoplar os diversos sistemas dentro da empresa&lt;/li&gt;
&lt;li&gt;Desacoplamento com entes externos: Desacoplar sistemas externos á nossa empresa&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para cada um desses níveis, existem técnicas para obter o desacoplamento, irei criar uma série de artigos abordando individualmente esses tipos de desacoplamento, então fique de olho!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>16 must-have Figma Plugins for UI/UX Designers</title>
      <author>Savio Martin</author>
      <pubDate>Wed, 29 Sep 2021 18:21:39 +0000</pubDate>
      <link>https://dev.to/saviomartin/16-must-have-figma-plugins-for-ui-ux-designers-4ffm</link>
      <guid>https://dev.to/saviomartin/16-must-have-figma-plugins-for-ui-ux-designers-4ffm</guid>
      <description>&lt;p&gt;Hey there, I'm Savio Martin, A 14-year-old boy on an intention to enhance as a successful full-stack web developer. I love building full-stack web applications and mobile apps. I have proved my superiority in frontend technologies. I love to share my resources and expertise with the dev community. I regularly write articles on &lt;a class="mentioned-user" href="https://dev.to/hashnode"&gt;@hashnode&lt;/a&gt;
.&lt;/p&gt;

&lt;p&gt;Today, I'm gonna share 16 must-have Figma Plugins for UI/UX Designers. These plugins are really helpful to UI/UX designers and fasten our job. So, consider installing these plugins. Those are the plugins I could not live with, huh!! So, let's get started&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#color-palettes"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.figma.com/community/plugin/740832935938649295/Color-Palettes"&gt;Color Palettes&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;With Color Palettes for Figma, you can search for your favourite colour code, palette number or name that you remember from Color Palettes plugin and apply it on your design and make it awesome&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hmentrQs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/740832935938649295/thumbnail" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hmentrQs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/740832935938649295/thumbnail" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;## &lt;a href="https://www.figma.com/community/plugin/733902567457592893/Autoflow"&gt;Autoflow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Autoflow makes it easy to draw flows. Simply select 2 objects and a line will be magically drawn between them.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run Autoflow&lt;/li&gt;
&lt;li&gt;Select any 2 shapes while holding down ⇧SHIFT and a line will be drawn&lt;/li&gt;
&lt;li&gt;Keep selecting until you're all wired up!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n_cOCzhF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/733902567457592893/thumbnail" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n_cOCzhF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/733902567457592893/thumbnail" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;## &lt;a href="https://www.figma.com/community/plugin/766652281834442616/Product-Planner"&gt;Product Planner &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Product Planner makes the process more comfortable to get started, product planning, product insights, identifying risks, setting goals and identifying and solving problems. Use the prebuilt template relevant to your tasks.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OxSO9Rth--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/766652281834442616/thumbnail" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OxSO9Rth--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/766652281834442616/thumbnail" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;## &lt;a href="https://www.figma.com/community/plugin/738992712906748191/Remove-BG"&gt;Remove BG &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remove the background of images automatically with just a single click - using the remove.bg API.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bw7iCvTc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/738992712906748191/thumbnail" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bw7iCvTc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/738992712906748191/thumbnail" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;## &lt;a href="https://www.figma.com/community/plugin/733025261168520714/Figmotion"&gt;Figmotion&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figmotion is an animation tool built right in Figma. This makes the entry into animation easier and more convenient as there is no need to switch to a completely separate motion tool such as Principle, Haiku or After Effects. Figmotion makes the animation hand-off to developers more manageable as well as it is built with web technologies in mind.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dLuX_PKM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/733025261168520714/thumbnail" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dLuX_PKM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/733025261168520714/thumbnail" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;## &lt;a href="https://www.figma.com/community/plugin/740232388085828578/Brands-Colors"&gt;Brands Colors &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With Brands Colors for Figma, you can search for your favorite brand's colors or app's colors and apply it on your design and make it awesome&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GSI5Axmk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/740232388085828578/thumbnail" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GSI5Axmk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/740232388085828578/thumbnail" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;## &lt;a href="https://www.figma.com/community/plugin/738454987945972471/Unsplash"&gt;Unsplash  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Insert beautiful images from Unsplash straight into your designs.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LYqMxP0N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/738454987945972471/thumbnail" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LYqMxP0N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/738454987945972471/thumbnail" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;## &lt;a href="https://www.figma.com/community/plugin/736458162635847353/Mapsicle"&gt;Mapsicle&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Never take a screenshot of a map again! With Mapsicle, you can quickly and seamlessly place maps in your mockups. An interactive map lets you pan to the perfect location, or you can search for a place anywhere in the world. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xSO6IEv8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/736458162635847353/thumbnail" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xSO6IEv8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/736458162635847353/thumbnail" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;## &lt;a href="https://www.figma.com/community/plugin/731176732337510831/Themer"&gt;Themer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Themer enables you to create and swap themes from your &lt;em&gt;published&lt;/em&gt; styles in your team library. Use it for color, text and effect styles.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UcQHe6Vd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/731176732337510831/thumbnail" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UcQHe6Vd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/731176732337510831/thumbnail" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;## &lt;a href="https://www.figma.com/community/plugin/743654854885744527/Responsify-%E2%9A%A1%EF%B8%8F"&gt;Responsify&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A Figma plugin to quickly test your designs across multiple device sizes.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select any frame, component, or instance&lt;/li&gt;
&lt;li&gt;Menu &amp;gt; Responsify️️ ⚡️ &amp;gt; Select device sizes to test&lt;/li&gt;
&lt;li&gt;Command + Shift + P to re-run
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--67iNtcle--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/743654854885744527/thumbnail" alt=""&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;## &lt;a href="https://www.figma.com/community/plugin/739208439270091369/Blobs"&gt;Blobs  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create organic blob shapes with the click of a button. Every shape that is generated is unique to the last. You can control how unique a shape is  along with how many points it has.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pMDsv-sz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/739208439270091369/thumbnail" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pMDsv-sz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/739208439270091369/thumbnail" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;## &lt;a href="https://www.figma.com/community/plugin/740832935938649295/Color-Palettes"&gt;SmoothShadow  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create really smooth, layered shadows&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8xbjJfCF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/788830704169694737/thumbnail" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8xbjJfCF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/788830704169694737/thumbnail" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;## &lt;a href="https://www.figma.com/community/plugin/741184519069077841/Isometric"&gt;Isometric  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Isometric allows you to create isometric layers without manually having to set them up.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V0loJNwN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/741184519069077841/thumbnail" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V0loJNwN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/741184519069077841/thumbnail" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;## &lt;a href="https://www.figma.com/community/plugin/731627216655469013/Content-Reel"&gt;Content Reel  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Design layouts more efficiently by pulling text strings, images and icons from one palette. Content Reel lets you create custom content and share it with other Figma users. Collaboration has never been easier!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OiZpVn-q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/731627216655469013/thumbnail" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OiZpVn-q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/731627216655469013/thumbnail" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;## &lt;a href="https://www.figma.com/community/plugin/802147585857776440/Webgradients"&gt;Webgradients  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Meet the easy-to-use and powerful functional gradient plugin that you can use as content backdrops in any part of your website it in a moment! &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7pFtYdk5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/802147585857776440/thumbnail" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7pFtYdk5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/802147585857776440/thumbnail" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;## &lt;a href="https://www.figma.com/community/plugin/734590934750866002/Chart"&gt;Chart &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chart is a plugin for Figma that uses real or random data to create the most popular charts. Chart supports copy-paste from editors like Excel, Numbers, Google Sheets, live connection with Google Sheets and remote JSON (REST API), local CSV and JSON files.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mOSx5nDF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/734590934750866002/thumbnail" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mOSx5nDF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.figma.com/community/plugin/734590934750866002/thumbnail" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope you all loved this article. If you have any doubts or queries, write it up in the comments below. Also, do reactions in this article. Thanks for your time. 🙏&lt;/p&gt;

&lt;p&gt;Don't forget to follow me on &lt;a href="https://github.com/saviomartin"&gt;Github&lt;/a&gt; and &lt;a href="https://www.instagram.com/teen_developer/"&gt;Instagram&lt;/a&gt;&lt;br&gt;
%[&lt;a href="https://github.com/saviomartin/"&gt;https://github.com/saviomartin/&lt;/a&gt;]&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wishing-you-a-good-day-happy-hacking"&gt;
  &lt;/a&gt;
  Wishing You A Good Day! Happy Hacking! 💻⚡
&lt;/h3&gt;

</description>
      <category>productivity</category>
      <category>design</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Listen to the Ruby and Rails-Themed Season 6 Finale of DevDiscuss — with Richard Schneeman &amp; Penelope Phippen!</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 29 Sep 2021 18:19:23 +0000</pubDate>
      <link>https://dev.to/devteam/listen-to-the-ruby-and-rails-themed-season-6-finale-of-devdiscuss-with-richard-schneeman-penelope-phippen-33d7</link>
      <guid>https://dev.to/devteam/listen-to-the-ruby-and-rails-themed-season-6-finale-of-devdiscuss-with-richard-schneeman-penelope-phippen-33d7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-season-6-finale-of-devdiscuss-is-here-already"&gt;
  &lt;/a&gt;
  The Season 6 Finale of DevDiscuss is here (already!):
&lt;/h2&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devdiscuss/s6-e8-ruby-and-rails-from-features-to-governance"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S6:E8 - Ruby and Rails: From Features to Governance&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devdiscuss"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevDiscuss
      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s6-e8-ruby-and-rails-from-features-to-governance" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s6-e8-ruby-and-rails-from-features-to-governance" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s6-e8-ruby-and-rails-from-features-to-governance" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s6-e8-ruby-and-rails-from-features-to-governance" alt="DevDiscuss" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZtvK04RF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j-SdIkjZ--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s6-e8-ruby-and-rails-from-features-to-governance"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devdiscuss/s6-e8-ruby-and-rails-from-features-to-governance"&gt;
      &lt;img id="episode-profile-image" alt="S6:E8 - Ruby and Rails: From Features to Governance" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--zTELFWpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--otY2jCJh--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;×&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;p&gt;&lt;em&gt;DevDiscuss is the first original podcast from DEV all about the burning topics that impact all our lives as developers.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In this final episode of S6, we talked about Ruby and Rails (one of our favorite topics, as a Rails shop ourselves) with some truly phenomenal guests&lt;/strong&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#host"&gt;
  &lt;/a&gt;
  Host:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/ben"&gt;@ben&lt;/a&gt;
 — Creator of DEV &amp;amp; Co-Founder of Forem&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#guests"&gt;
  &lt;/a&gt;
  Guests:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/penelope_zone"&gt;@penelope_zone&lt;/a&gt;
, is a multifaceted Rubyist who works as a Director at Ruby Central, is the creator of Rubyfmt, and was formerly a lead maintainer of the RSpec project. She frequently writes and speaks about about complex aspects of the Ruby grammar, and issues of social justice for trans people in computer science. She’s sad that she can’t hug every cat.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://twitter.com/@schneems"&gt;Richard Schneeman&lt;/a&gt; is a Principal Software Engineer at Heroku who also created and maintains CodeTriage.com, a tool for helping people contribute to open-source. When he isn’t obsessively compulsively refactoring code he spends his time reminding his kids to wash their hands. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you so much for listening to this past season of DevDiscuss! We hope you enjoyed listening to it as much as we enjoyed creating it for you. Let us know your thoughts in the comments below — or on Twitter (&lt;a href="https://twitter.com/thepracticaldev"&gt;@thepracticaldev&lt;/a&gt; ).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p_QWS1v_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/vxNCVEe0PI9A3YVJEX/giphy.gif%3Fcid%3Decf05e47t5edcjl7ywl6wlc81vu3j783tuuf1hdkct22rpuw%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p_QWS1v_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/vxNCVEe0PI9A3YVJEX/giphy.gif%3Fcid%3Decf05e47t5edcjl7ywl6wlc81vu3j783tuuf1hdkct22rpuw%26rid%3Dgiphy.gif%26ct%3Dg" alt="Goodbye"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devdiscuss"&gt;follow DevDiscuss&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; — or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  Quick Listening Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s6-e8-ruby-and-rails-from-features-to-governance/id1513053883?i=1000536970982"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/138ihHs8lZHTUChPPPvNi3"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cHM6Ly9mZWVkcy5kZXZwb2RzLmRldi9kZXZkaXNjdXNzX3BvZGNhc3QueG1s/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZkaXNjdXNzLzQ5?sa=X&amp;amp;ved=0CAQQkfYCahcKEwjQ2vq55aTzAhUAAAAAHQAAAAAQCg"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devdiscuss/s6e8-ruby-and-rails-from-qUMNc3mfBDg/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevDiscuss-p1324596/?topicId=166134093"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://devpods.herokuapp.com/podcasts/devdiscuss/episodes/225"&gt;DEV Pods Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;em&gt;Acknowledgements&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Our season six sponsors: &lt;a href="//cockroachlabs.com/devdiscuss"&gt;CockroachDB&lt;/a&gt; &amp;amp; &lt;a href="https://www.scoutapm.com/devdiscuss"&gt;Scout APM&lt;/a&gt;!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#see-you-soon-for-another-season-of-devdiscuss"&gt;
  &lt;/a&gt;
  See you soon for another season of DevDiscuss ❤️
&lt;/h3&gt;

</description>
      <category>discuss</category>
      <category>podcast</category>
    </item>
    <item>
      <title>Algorithmic Approach to Problem Solving</title>
      <author>Pratyaksh_Khurana</author>
      <pubDate>Wed, 29 Sep 2021 18:06:05 +0000</pubDate>
      <link>https://dev.to/pratyaksh1610/algorithmic-approach-to-problem-solving-2f0</link>
      <guid>https://dev.to/pratyaksh1610/algorithmic-approach-to-problem-solving-2f0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#pointright-searching-algorithms"&gt;
  &lt;/a&gt;
  👉 Searching Algorithms
&lt;/h2&gt;

&lt;p&gt;Searching is an algorithm which is widely used in programming.&lt;/p&gt;

&lt;p&gt;It is a type of algorithm which is used to check for an element or get some information about the element in a particular data structure like arrays or linked list.&lt;/p&gt;

&lt;p&gt;The region where we need to look for a particular element ( i.e whether an element is present or not ) is called the search space. For instance,  in case of an array the search space is defined as the entire array or the two indices of the array within which searching needs to take place.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-searching-algorithms"&gt;
  &lt;/a&gt;
  Types of Searching Algorithms
&lt;/h2&gt;

&lt;p&gt;There are various types of algorithms but we will stick to the most commonly used searching techniques and we will find out the most optimised way of searching in terms of time complexity. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scroll-linear-search"&gt;
  &lt;/a&gt;
  📜 Linear Search
&lt;/h2&gt;

&lt;p&gt;Linear Search or Sequential search as the name suggests is a type of searching algorithm where we look for an element in a sequential manner by traversing the search space &lt;b&gt;&lt;b&gt;i.e&lt;/b&gt;&lt;/b&gt; in a particular order.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#approach-to-the-above-algorithm"&gt;
  &lt;/a&gt;
  Approach to the above algorithm
&lt;/h3&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  1. Given an array (for simplicity) and a target element. 
  2. Traverse the entire array starting from the left most index till the end and check whether the target element matches
     with the current element at a particular index of an array.
  3. Return the index of the element if found in the array otherwise return -1 .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yv8x79mK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.tutorialspoint.com/data_structures_algorithms/images/linear_search.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yv8x79mK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.tutorialspoint.com/data_structures_algorithms/images/linear_search.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#earthasia-source-httpswwwtutorialspointcomdatastructuresalgorithmslinearsearchalgorithmhtm"&gt;
  &lt;/a&gt;
  🌏 Source - &lt;a href="https://www.tutorialspoint.com/data_structures_algorithms/linear_search_algorithm.htm"&gt;https://www.tutorialspoint.com/data_structures_algorithms/linear_search_algorithm.htm&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#code-sample-in-c"&gt;
  &lt;/a&gt;
  Code sample in C++
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Implementation of Linear Search&lt;/span&gt;
&lt;span class="cm"&gt;/*By Pratyaksh Khurana GWOC'21 Contributor*/&lt;/span&gt;
&lt;span class="cp"&gt;#include&amp;lt;bits/stdc++.h&amp;gt;
&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// if the size of the array is 0, means array does not exist and straight away return -1&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;         
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// traversing the entire array by placing a check and comparing with the key (i.e target)&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// returns the index of the element if found &lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;// means element not found so return -1&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;cin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// taking input from the user, size of the array and the target element&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="c1"&gt;// inserting elements in the array&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// function call that returns the index of the element &lt;/span&gt;
                              &lt;span class="c1"&gt;// if not found returns -1 &lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s"&gt;"Element not found"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt; 
   &lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s"&gt;"Element is found at index "&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#test-case-1"&gt;
  &lt;/a&gt;
  Test case 1
&lt;/h5&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  Input

  5 23
  9 20 65 23 32

  Output

  Element is found at index 3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h5&gt;
  &lt;a href="#test-case-2"&gt;
  &lt;/a&gt;
  Test case 2
&lt;/h5&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  Input

  7 1011
  77 65 98 12 32 44 951

  Output

  Element not found
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
  &lt;a href="#timerclock-time-complexity-analysis-in-case-of-linear-search"&gt;
  &lt;/a&gt;
  ⏲️ Time Complexity Analysis in case of Linear Search
&lt;/h3&gt;

&lt;p&gt;Time complexity is the time taken by an algorithm as a function of length of input.&lt;/p&gt;

&lt;p&gt;In simple words it is the number of comparisons that we need to make.&lt;/p&gt;

&lt;p&gt;In the worst case the time complexity of the above algorithm is O(n) , where n is the size of the search space &lt;br&gt;
   ( i.e in our case it is the size of the array).&lt;/p&gt;

&lt;p&gt;In the best case the time complexity of the above algorithm is O(1) , in this case the element will be present at the 0th index of&lt;br&gt;
   the array.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#scroll-binary-search"&gt;
  &lt;/a&gt;
  📜 Binary Search
&lt;/h2&gt;

&lt;p&gt;Binary Search algorithm deals with the intervals and it divides the search space in two parts, and it must fufill the condition that the search space must be sorted&lt;br&gt;
  (i.e in increasing or decreasing order).&lt;/p&gt;

&lt;p&gt;In this case start from the whole search space (sorted array for simplicity) and find the middle element of the search space and then compare whether the target element&lt;br&gt;
  is equal to middle element or not, if the target element is less than the middle element then reduce the search space to the left else shift it to the right and if the &lt;br&gt;
  target element matches with the middle element then return the index of the element.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#approach-to-the-above-algorithm"&gt;
  &lt;/a&gt;
  Approach to the above algorithm
&lt;/h3&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  1. Given an array (must be sorted in increasing order) and a target element.
  2. Take two pointers (say start and end) where start pointer is at the 0th index of the array and the end pointer is at the
     last index of the array. 
  3. Find the middle element of the array (say mid), and compare it with the target element.
  4. If the target element = middle element, return the index.
  5. If the target element &amp;gt; middle element, shift the start pointer to (start = mid + 1).  
  6. If the target element &amp;lt; middle element shift the end pointer to (end = mid - 1).

In case of decreasing order manipulate the pointers accordingly.  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NZZFnROX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://d18l82el6cdm1i.cloudfront.net/uploads/bePceUMnSG-binary_search_gif.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NZZFnROX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://d18l82el6cdm1i.cloudfront.net/uploads/bePceUMnSG-binary_search_gif.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#earthasia-source-httpsbrilliantorgwikibinarysearch"&gt;
  &lt;/a&gt;
  🌏 Source - &lt;a href="https://brilliant.org/wiki/binary-search/"&gt;https://brilliant.org/wiki/binary-search/&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#code-sample-in-c"&gt;
  &lt;/a&gt;
  Code sample in C++
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Implementation of Binary Search&lt;/span&gt;
&lt;span class="cm"&gt;/*By Pratyaksh Khurana GWOC'21 Contributor*/&lt;/span&gt;
&lt;span class="cp"&gt;#include&amp;lt;bits/stdc++.h&amp;gt;
&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//If the search space is sorted in increasing order&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;IncreasingBinary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="c1"&gt;// the above mentioned formula is used so that (start + end) does'nt overflows the range of int datatype&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="n"&gt;start&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//if not found return -1&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//If the search space is sorted in decreasing order&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;DecreasingBinary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// the above mentioned formula is used so that (start + end) does'nt overflows the range of int datatype&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
     &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;//if not found return -1&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//size of the array and the target element&lt;/span&gt;
  &lt;span class="n"&gt;cin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;   &lt;span class="c1"&gt;//declaring the array&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="c1"&gt;//to check whether the array is sorted in increasing / decreasing order&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;idx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;IncreasingBinary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="c1"&gt;// index of the element &lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;idx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DecreasingBinary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; 
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#test-case-1"&gt;
  &lt;/a&gt;
  Test case 1
&lt;/h5&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  Input

&lt;p&gt;5 3&lt;br&gt;
  2 3 4 7 10&lt;/p&gt;

&lt;p&gt;Output&lt;/p&gt;

&lt;p&gt;1&lt;br&gt;
&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h5&gt;
&lt;br&gt;
  &lt;a href="#test-case-2"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  Test case 2&lt;br&gt;
&lt;/h5&gt;
&lt;br&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  Input

&lt;p&gt;7 88&lt;br&gt;
  130 99 89 88 56 12 2&lt;/p&gt;

&lt;p&gt;Output&lt;/p&gt;

&lt;p&gt;3&lt;br&gt;
&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h5&gt;
&lt;br&gt;
  &lt;a href="#test-case-3"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  Test case 3&lt;br&gt;
&lt;/h5&gt;
&lt;br&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  Input

&lt;p&gt;6 34&lt;br&gt;
  12 44 98 103 540 900&lt;/p&gt;

&lt;p&gt;Output&lt;/p&gt;

&lt;p&gt;-1&lt;br&gt;
&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;br&gt;
  &lt;a href="#timerclock-time-complexity-analysis-in-case-of-binary-search"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  ⏲️ Time Complexity Analysis in case of Binary Search&lt;br&gt;
&lt;/h3&gt;

&lt;p&gt;The time complexity of the above algorithm is O(log(n)), where n is the size of the search space (say array of size n).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comparison-between-linear-search-and-binary-search-algorithm"&gt;
  &lt;/a&gt;
  Comparison between Linear Search and Binary Search Algorithm
&lt;/h2&gt;

&lt;p&gt;Time complexity in case of Linear Search (talking about the worst case) is O(n).&lt;/p&gt;

&lt;p&gt;Time complexity in case of Binary Search (talking about the worst case) is O(log(n)) which is far more optimised as compared to linear search and it can reduce the &lt;br&gt;
   comparisons at a faster rate as it is a logarithmic time complexity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#practice-problems-on-the-above-mentioned-algorithms"&gt;
  &lt;/a&gt;
  Practice Problems on the above mentioned algorithms
&lt;/h2&gt;

&lt;p&gt;Practice problems on various coding platforms like HackerRank, HackerEarth, and Leetcode to get comfortable with the application part.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#problemset-on-searching-algorithms"&gt;
  &lt;/a&gt;
  ProblemSet on Searching Algorithms
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; &lt;a href="https://www.hackerearth.com/practice/algorithms/searching/linear-search/practice-problems/"&gt;https://www.hackerearth.com/practice/algorithms/searching/linear-search/practice-problems/&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://www.hackerearth.com/practice/algorithms/searching/binary-search/practice-problems/"&gt;https://www.hackerearth.com/practice/algorithms/searching/binary-search/practice-problems/&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://leetcode.com/tag/binary-search/"&gt;https://leetcode.com/tag/binary-search/&lt;/a&gt;&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
&lt;br&gt;
  &lt;a href="#happy-coding-smile"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  Happy Coding !!  😄&lt;br&gt;
&lt;/h2&gt;

</description>
      <category>algorithms</category>
      <category>programming</category>
      <category>firstpost</category>
    </item>
    <item>
      <title>Best Visual Studio Code themes</title>
      <author>Gustavo</author>
      <pubDate>Wed, 29 Sep 2021 18:02:51 +0000</pubDate>
      <link>https://dev.to/gustavosrr/best-visual-studio-code-themes-5785</link>
      <guid>https://dev.to/gustavosrr/best-visual-studio-code-themes-5785</guid>
      <description>&lt;h2&gt;
  &lt;a href="#dracula-official"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=dracula-theme.theme-dracula"&gt;Dracula Official&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c2v0rPPY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i7xumjw29oj8nwk0ih3h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c2v0rPPY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i7xumjw29oj8nwk0ih3h.png" alt="Dracula Official"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-theme"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.github-vscode-theme"&gt;GitHub Theme&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dROpCyzr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jmtaj072oeb1lzjt9g0t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dROpCyzr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jmtaj072oeb1lzjt9g0t.png" alt="GitHub Theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nord"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=arcticicestudio.nord-visual-studio-code"&gt;Nord&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OvyOB80f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rshq0ouduow0r5yat212.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OvyOB80f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rshq0ouduow0r5yat212.png" alt="Nord Theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#arkademy"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=arkademy.arkademy-training"&gt;Arkademy&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TFxdaN8L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10g4b2z92xngwuhq7usz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TFxdaN8L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10g4b2z92xngwuhq7usz.png" alt="Arkademy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#eva-theme"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=fisheva.eva-theme"&gt;Eva Theme&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L3gks9CE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6uzlib6z8mffpvayu9yx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L3gks9CE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6uzlib6z8mffpvayu9yx.png" alt="Eva Theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#horizon-theme"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=Bauke.horizon-vscode"&gt;Horizon Theme&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9ku3cczB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cljgki9rtfottb09259z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ku3cczB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cljgki9rtfottb09259z.png" alt="Horizon Theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#palenight-theme"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=whizkydee.material-palenight-theme"&gt;Palenight Theme&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GxCpYQ3i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvesyunk43l43zxtt1w7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GxCpYQ3i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvesyunk43l43zxtt1w7.png" alt="Palenight"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#one-dark-pro"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme"&gt;One Dark Pro&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--syGp0ucB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eyx9peon6yigt5zk9lqt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--syGp0ucB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eyx9peon6yigt5zk9lqt.png" alt="One Dark Pro"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tokyo-night"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=enkia.tokyo-night"&gt;Tokyo Night&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nWrBjJw---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpcs0go26di7gpn1anp5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nWrBjJw---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpcs0go26di7gpn1anp5.png" alt="Tokyo Night"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#omni-theme"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=rocketseat.theme-omni"&gt;Omni Theme&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1WEVh-Dk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3s0i8bqb1wzxgd4krke.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1WEVh-Dk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3s0i8bqb1wzxgd4krke.png" alt="Omni Theme"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vscode</category>
    </item>
    <item>
      <title>Print images to console using Python</title>
      <author>Pranav Baburaj</author>
      <pubDate>Wed, 29 Sep 2021 17:40:12 +0000</pubDate>
      <link>https://dev.to/pranavbaburaj/print-images-to-console-using-python-23k6</link>
      <guid>https://dev.to/pranavbaburaj/print-images-to-console-using-python-23k6</guid>
      <description>&lt;p&gt;Hello everyone, hope you all are doing good. I would like to show you how to print images onto the console using Python. So, let's get started.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Before getting started, make sure to have pip and python installed in your system&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h2&gt;

&lt;p&gt;Install required packages&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;pillow colr
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, you have setup the development environment. Let's get into the code&lt;/p&gt;

&lt;p&gt;First, import the necessary libraries. The script uses the &lt;code&gt;pillow&lt;/code&gt; library for Image processing&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;colr&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Colr&lt;/span&gt;

&lt;span class="c1"&gt;# Ask the user for image filename
&lt;/span&gt;&lt;span class="n"&gt;image_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Image:"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In this example, I am prompting the user to enter the filename for the image and collect it in the &lt;code&gt;image_path&lt;/code&gt; variable.&lt;/p&gt;

&lt;p&gt;Next, open the image&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now that we have opened the image. we need to read the image and get the colors. For that, use&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pixel_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getdata&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;image.getdata()&lt;/code&gt; function returns a list of RGB or RGBA values.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, lets print the image&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;character&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pixel_values&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;character&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="k"&gt;continue&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;character&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Colr&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\u2584&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Wait, let me explain.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This &lt;code&gt;image.size&lt;/code&gt; property is a tuple containing the width and the height of the image.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;character&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pixel_values&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;character&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="k"&gt;continue&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We loop through the list of rgb colors and make sure that all the values are either in the form of tuple or list.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;character&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This line unpacks the tuple into variables for red(&lt;code&gt;r&lt;/code&gt;), green(&lt;code&gt;g&lt;/code&gt;) and blue(&lt;code&gt;b&lt;/code&gt;)&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Colr&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\u2584&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This line prints a pixel onto the screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u7ba3EgM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.discordapp.com/attachments/875983412639436850/891594483626573844/unknown.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u7ba3EgM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.discordapp.com/attachments/875983412639436850/891594483626573844/unknown.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have created a python library for printing images onto the console. Check out the GitHub repository &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pranavbaburaj"&gt;
        pranavbaburaj
      &lt;/a&gt; / &lt;a href="https://github.com/pranavbaburaj/img"&gt;
        img
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A python library to display images in the terminal
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
&lt;h1&gt;
&lt;b&gt;&lt;code&gt;Img&lt;/code&gt;&lt;/b&gt;
&lt;/h1&gt;
Display Images in your terminal with python
&lt;br&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/ab5e4cec72c29499ba1c307c232cd0c98fb9e5e80747eb0dd1397949e5fddcb6/68747470733a2f2f692e696d6775722e636f6d2f4f317a496763612e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/ab5e4cec72c29499ba1c307c232cd0c98fb9e5e80747eb0dd1397949e5fddcb6/68747470733a2f2f692e696d6775722e636f6d2f4f317a496763612e706e67" height="250"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e58b24f47a3560d1b56b01b50bfea0bab1b7c0a5bd4d2ff668045dd7c40eb0a4/68747470733a2f2f7374617469632e706570792e746563682f62616467652f7465726d696e616c2d696d67"&gt;&lt;img src="https://camo.githubusercontent.com/e58b24f47a3560d1b56b01b50bfea0bab1b7c0a5bd4d2ff668045dd7c40eb0a4/68747470733a2f2f7374617469632e706570792e746563682f62616467652f7465726d696e616c2d696d67"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/97d4586afa582b2dcec2fa8ed7c84d02977a21c2dd1578ade6d48ed82296eb10/68747470733a2f2f6261646765732e66726170736f66742e636f6d2f6f732f76312f6f70656e2d736f757263652e7376673f763d313033"&gt;&lt;img src="https://camo.githubusercontent.com/97d4586afa582b2dcec2fa8ed7c84d02977a21c2dd1578ade6d48ed82296eb10/68747470733a2f2f6261646765732e66726170736f66742e636f6d2f6f732f76312f6f70656e2d736f757263652e7376673f763d313033"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/2e520446caefbefbc3161e4e2ec351e39dbd6f5b55c9020fc466e335ee49b07d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f7072616e61766261627572616a2f696d67"&gt;&lt;img src="https://camo.githubusercontent.com/2e520446caefbefbc3161e4e2ec351e39dbd6f5b55c9020fc466e335ee49b07d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f7072616e61766261627572616a2f696d67"&gt;&lt;/a&gt;
    &lt;a href="https://twitter.com/intent/tweet?text=Display%20images%20in%20the%20the%20terminal%20using%20python&amp;amp;url=https://github.com/pranavbaburaj/img&amp;amp;via=_pranavbaburaj&amp;amp;hashtags=developers,images,terminal" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;

&lt;h2&gt;
Installation&lt;/h2&gt;

&lt;p&gt;The package can be installed via &lt;code&gt;pip&lt;/code&gt;&lt;/p&gt;

&lt;div class="highlight highlight-source-python position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-s1"&gt;pip&lt;/span&gt; &lt;span class="pl-s1"&gt;install&lt;/span&gt; &lt;span class="pl-s1"&gt;terminal&lt;/span&gt;&lt;span class="pl-c1"&gt;-&lt;/span&gt;&lt;span class="pl-s1"&gt;img&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Quick Start&lt;/h2&gt;
&lt;p&gt;The library is really simple to get started with. Here's is an example of how you display an image&lt;/p&gt;
&lt;div class="highlight highlight-source-python position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s1"&gt;image&lt;/span&gt; &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;DrawImage&lt;/span&gt;
&lt;span class="pl-s1"&gt;image&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-v"&gt;DrawImage&lt;/span&gt;(&lt;span class="pl-s"&gt;"image.png"&lt;/span&gt;)&lt;/pre&gt;

&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;You can also use a url if you dont have the file locally stored&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-python position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-s1"&gt;image&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-v"&gt;DrawImage&lt;/span&gt;.&lt;span class="pl-en"&gt;from_url&lt;/span&gt;(&lt;span class="pl-s"&gt;"url"&lt;/span&gt;)&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Methods&lt;/h2&gt;
&lt;h4&gt;
&lt;code&gt;image.DrawImage&lt;/code&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;filename&lt;/code&gt;: The name of the file containing the image&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;size&lt;/code&gt;(&lt;em&gt;&lt;code&gt;Optional[Tuple]&lt;/code&gt;&lt;/em&gt;) : The size of the image to be displayed. Default: 24, 24&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;draw&lt;/code&gt;: Whether to draw on creating an instance or wait for the user to call the function&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
&lt;code&gt;image.DrawImage.from_url&lt;/code&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;url&lt;/code&gt; : The url of the image&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;size&lt;/code&gt;(&lt;em&gt;&lt;code&gt;Optional[Tuple]&lt;/code&gt;&lt;/em&gt;) : The size of the image to be displayed. Default: 24, 24&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;draw&lt;/code&gt;: Whether to draw on…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pranavbaburaj/img"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Please let me know what you thing. Hope you learned something new today. Thank you for reading :)&lt;/p&gt;

</description>
      <category>python</category>
      <category>images</category>
      <category>console</category>
      <category>terminal</category>
    </item>
    <item>
      <title>Javascript Security Checklist</title>
      <author>Bour Abdelhadi</author>
      <pubDate>Wed, 29 Sep 2021 17:38:18 +0000</pubDate>
      <link>https://dev.to/bscript/javascript-security-checklist-af</link>
      <guid>https://dev.to/bscript/javascript-security-checklist-af</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#1-code-linting---sast"&gt;1. Code Linting &amp;amp; SAST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-running-a-security-audit-with-npm-audit"&gt;2. Running a security audit with npm audit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#3-integrity-checking-for-javascript--sri-"&gt;3. Integrity checking for JavaScript (SRI)&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#how-does-it-work-"&gt;How does it work?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#4-validations--validations--validations-"&gt;4. Validations, Validations, Validations!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5-minify-and-obfuscate-your-javascript"&gt;5. Minify and obfuscate your Javascript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Javascript is everywhere, It runs inside your browser, &lt;a href="https://openjsf.org/wp-content/uploads/sites/84/2020/02/Case_Study-Node.js-NASA.pdf"&gt;astronaut spacesuit&lt;/a&gt;, and most developers use it as a client-side and server-side programming language to allow them to create interactive web pages.&lt;/p&gt;

&lt;p&gt;Javascript is a lightweight, interpreted programming language with first-class functions.&lt;/p&gt;

&lt;p&gt;In addition, the Javascript ecosystem relies heavily on &lt;a href="https://npm.anvaka.com/"&gt;third-party libraries&lt;/a&gt;; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V3XJslgn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r5og8qisjk67p9er2kl4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V3XJslgn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r5og8qisjk67p9er2kl4.png" alt="Visualization of npm shows dependency graph of an npm package."&gt;&lt;/a&gt;&lt;br&gt;
Therefore, ensuring the security of JavaScript requires following security best practices to reduce attack surfaces. But how do we keep JavaScript applications safe?&lt;/p&gt;

&lt;p&gt;I will be sharing with you in this article some helpful tips I use every day as a security engineer so you can start thinking more about security before deploying your code to production.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-code-linting-amp-sast"&gt;
  &lt;/a&gt;
  1. Code Linting &amp;amp; SAST
&lt;/h2&gt;

&lt;p&gt;Seeing real-time feedback through linting while you're coding inside your IDE can help you accelerate development and reduce costs by finding errors and security issues earlier.&lt;/p&gt;

&lt;p&gt;You can use: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.jslint.com/"&gt;JSLint&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://jshint.com/"&gt;JSHint&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://standardjs.com/"&gt;Standard JS&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eslint.org/"&gt;ESLint﻿&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most SAST tools like &lt;a href="https://www.sonarlint.org/"&gt;SonarQube&lt;/a&gt; provide more features to identify code smells and known security vulnerabilities.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wJA-O44H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dvs53105myrcfvaas7m2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wJA-O44H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dvs53105myrcfvaas7m2.png" alt="SonarQube"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2-running-a-security-audit-with-npm-audit"&gt;
  &lt;/a&gt;
  2. Running a security audit with npm audit
&lt;/h2&gt;

&lt;p&gt;Most of the developers are using &lt;a href="https://docs.npmjs.com/"&gt;NPM(&lt;em&gt;node package manager&lt;/em&gt;)&lt;/a&gt;, which is a tool that helps you to install other people's code packages into your Javascript project.&lt;/p&gt;

&lt;p&gt;When it comes to security, the first thing we will consider is &lt;a href="https://docs.npmjs.com/packages-and-modules/securing-your-code"&gt;NPM audit tool&lt;/a&gt;. This tool will help you detect vulnerabilities in all your installed dependencies and help you fix them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eWniHNzr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b48wjp5mo23p1lo8wgj5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eWniHNzr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b48wjp5mo23p1lo8wgj5.png" alt="npm audit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Suppose you are using &lt;a href="https://github.com/"&gt;Github&lt;/a&gt; as a source control management system. In that case, they have a tool called &lt;a href="https://github.com/dependabot"&gt;Dependabot&lt;/a&gt;, which automatically scans the dependencies of &lt;a href="https://docs.npmjs.com/"&gt;NPM&lt;/a&gt; and informs you via email to clarify the risks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3ozn23Q8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07imwj9p7x0puokzo3nr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3ozn23Q8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07imwj9p7x0puokzo3nr.png" alt="Dependabot"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;If you're working on a big project, you should consider automating this job instead of doing it manually each time by yourself. Thus, we can create a Cron Jobs to set recurring tasks (Choose your preferable CI tool).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KqoqD5_I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cdm7f3jm70hrtsv0huy9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KqoqD5_I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cdm7f3jm70hrtsv0huy9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#3-integrity-checking-for-javascript-sri"&gt;
  &lt;/a&gt;
  3. Integrity checking for JavaScript (SRI)
&lt;/h2&gt;

&lt;p&gt;If you're a developer, I'm sure you used before the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag to import third-party libraries inside your code, but did you ever think about the possibility of manipulating the source code of those imported scripts?&lt;/p&gt;

&lt;p&gt;Yes, It can happen, especially when you render external resources on your website. Therefore, your website may face a security breach.&lt;/p&gt;

&lt;p&gt;You can use the &lt;em&gt;SRI&lt;/em&gt; feature to enable browsers to verify the resources they fetch as a security measure.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script src="https://example.com/example-framework.js"
        integrity="sha384-oqVuAfXRKap7fdgcCY5uykM6+R9GqQ8K/uxy9rx7HNQlGYl1kPzQho1wx4JwY8wC"
        crossorigin="anonymous"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-does-it-work"&gt;
  &lt;/a&gt;
  How does it work?
&lt;/h3&gt;

&lt;p&gt;Let's say we'd like to add JQuery to our code.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Download the minimized version of &lt;a href="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"&gt;JQuery&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Calculate the SHA256 hash of JQuery version 3.5.1 hosted by Cloudflare&lt;/li&gt;
&lt;li&gt;Run it twice through OpenSSL to generate the checksum.&lt;/li&gt;
&lt;li&gt;Encode the result in base64 format.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl -s https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js | openssl dgst -sha256 -binary | openssl enc -base64 -A

9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have the hash, we can add the &lt;code&gt;integrity&lt;/code&gt; attribute to the script tag and the prefix &lt;code&gt;sha256-&lt;/code&gt; to the hash to indicate the hashing algorithm used. Starting from now, any browser that supports &lt;em&gt;SRI&lt;/em&gt; will require that the provided hash matches the calculated hash of the downloaded file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"
        integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
        crossorigin="anonymous"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Browser compatibility (SRI)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nXz7nNYl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pg6oyn54jy00wphuxvet.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nXz7nNYl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pg6oyn54jy00wphuxvet.png" alt="Browser compatibility SRI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-validations-validations-validations"&gt;
  &lt;/a&gt;
  4. Validations, Validations, Validations!
&lt;/h2&gt;

&lt;p&gt;Client-side validation is not enough, and you should never rely on it when you write your code.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Don't trust user inputs.&lt;/li&gt;
&lt;li&gt;Use proper methodologies for encoding/escaping&lt;/li&gt;
&lt;li&gt;Sanitize and clean your user inputs&lt;/li&gt;
&lt;li&gt;Set secure cookies&lt;/li&gt;
&lt;li&gt;Establish a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP"&gt;secure content security policy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Encrypt data transmissions between client-side and server-side&lt;/li&gt;
&lt;li&gt;Use updated libraries and frameworks&lt;/li&gt;
&lt;li&gt;Perform regular scans on your underlying databases and codebases&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Read: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://portswigger.net/web-security"&gt;https://portswigger.net/web-security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://snyk.io/blog/5-ways-to-prevent-code-injection-in-javascript-and-node-js/"&gt;https://snyk.io/blog/5-ways-to-prevent-code-injection-in-javascript-and-node-js/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-minify-and-obfuscate-your-javascript"&gt;
  &lt;/a&gt;
  5. Minify and obfuscate your Javascript
&lt;/h2&gt;

&lt;p&gt;As an attacker, I will try my best to understand the business logic behind the application, and if I do so, I can find my way through.&lt;/p&gt;

&lt;p&gt;It's crucial to minify &amp;amp; obfuscate your Javascript to make it more difficult for the attacker to understand your code and decrease the attack surface.&lt;/p&gt;




&lt;p&gt;To Be Continued...!&lt;/p&gt;

&lt;p&gt;You can reach me out on LinkedIn if you have questions &lt;a href="https://www.linkedin.com/in/bohr/"&gt;@Bour Abdelhadi&lt;/a&gt;&lt;/p&gt;

</description>
      <category>security</category>
      <category>javascript</category>
      <category>codereview</category>
    </item>
  </channel>
</rss>
