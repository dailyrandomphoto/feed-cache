<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What is Virtual DOM and how it works?</title>
      <author>Aulad Himel</author>
      <pubDate>Wed, 22 Dec 2021 17:25:04 +0000</pubDate>
      <link>https://dev.to/auladhimel/what-is-virtual-dom-and-how-it-works-3fjn</link>
      <guid>https://dev.to/auladhimel/what-is-virtual-dom-and-how-it-works-3fjn</guid>
      <description>&lt;p&gt;React is a very popular JavaScript library for its performance. It smartly does the work when it comes to handling page updates and data binding. But there are many scenarios behind that performance. Virtual DOM is one of them. When there is a change in UI then the DOM updates and the UI must be re-render. &lt;/p&gt;

&lt;p&gt;This re-rendering is a slow process because CSS is also re-calculated at that time, then the layout must be re-computed, and at the last browser must paint the elements on the screen. For that reason, the concept of Virtual DOM appeared.  Let's understand what is actually Virtual DOM.&lt;/p&gt;

&lt;p&gt;Virtual DOM is something that represents a copy of the actual DOM. React creates a copy of DOM and renders the UI depending on that  DOM. React observes all the changes made in the actual DOM and modifies the virtual DOM only where the changes happened. Then it renders the UI only where the changes happened in the virtual DOM. And the name of this process is diffing. Since the virtual DOM tree is just a JavaScript object that’s why this process is fast.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qD9Gw-jp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0yy2kq4xemtb26zwcac.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qD9Gw-jp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0yy2kq4xemtb26zwcac.png" alt="Image description" width="880" height="589"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure-01: Virtual DOM and Diff Algorithm.&lt;/p&gt;

&lt;p&gt;For doing this comparison React uses the "Diff" algorithm. With this algorithm React can understand where changes have occurred. Then React changes only that part of the DOM where the change was made. In the next step when the real DOM is updated then the updated virtual DOM becomes pre-updated virtual DOM for the next DOM change.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How rendering components work with Virtual DOM?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If we want to do DOM manipulation for simple event like click event at that time we will access the element by using getElementByID(‘id’) method. Here the method will find the element with specific id then it will perform the DOM manipulation. And this is very simple process. But if we have many components in our application and data inside them can be change within couple of seconds then it will be difficult to handle and also it will be time taking task. For overcoming this problem React uses Virtual DOM for DOM manipulation process.&lt;/p&gt;

&lt;p&gt;The whole process of rendering are explained below:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;At first, React will store in the memory the actual DOM before the re-render happens. Here we can call it Real Virtual DOM.&lt;/li&gt;
&lt;li&gt;Then, React will create a new Virtual DOM which will have all the old components and the new changes. React will consider those components as new. Then the new Virtual DOM will be kept separate from the old one and it will change anything of actual DOM.&lt;/li&gt;
&lt;li&gt;In the third stage, it will compare both Virtual DOMs and will find the new change that has to be implemented and the position. And it will happen by using the "Diffing Algorithm" . &lt;/li&gt;
&lt;li&gt;When the change has been noticed then React will remove the old component from the actual DOM. And will set the new component onto the actual DOM. At first the removed component takes &lt;strong&gt;componentWillUnmount()&lt;/strong&gt; lifecycle method which removes it. After that the new component that will be set takes &lt;strong&gt;componentWillMount()&lt;/strong&gt; and &lt;strong&gt;componentDidMount()&lt;/strong&gt; that will bring the component to the UI.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is the process how Virtual DOM works. Since it is taking some crucial steps so it can be time taking process but most of the steps happening regarding Virtual DOM which is mainly objects stored in the memory till last step. So, this is the whole scenario of Virtual DOM and how it helps React in rendering components.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>react</category>
    </item>
    <item>
      <title>Custom domain for your images with ShareX</title>
      <author>Thomas Bnt</author>
      <pubDate>Wed, 22 Dec 2021 17:18:55 +0000</pubDate>
      <link>https://dev.to/thomasbnt/custom-domain-for-your-images-with-sharex-3bmi</link>
      <guid>https://dev.to/thomasbnt/custom-domain-for-your-images-with-sharex-3bmi</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-sharex"&gt;
  &lt;/a&gt;
  What is ShareX?
&lt;/h2&gt;

&lt;p&gt;First, &lt;a href="https://getsharex.com/"&gt;&lt;strong&gt;ShareX&lt;/strong&gt;&lt;/a&gt; is an application available only on Windows.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vyPSV_S5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cm9s4zq6zjmn8u7i3xxe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vyPSV_S5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cm9s4zq6zjmn8u7i3xxe.png" alt="ShareX application on Windows" width="880" height="401"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It allows you to &lt;strong&gt;take screenshots&lt;/strong&gt; and do whatever you want with them afterwards, for example copy the image to the clipboard, upload it to a remote server, or recognize text in the image (OCR).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://getsharex.com/screenshots/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hTQy76gB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4k2damklbaqeg0qjl44m.png" alt="ShareX application on Windows" width="846" height="503"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#server-side"&gt;
  &lt;/a&gt;
  Server side
&lt;/h2&gt;

&lt;p&gt;To upload your images, you need to make it request on your server and especially on a file. There are many ways to do this, I opted for a PHP file.&lt;/p&gt;

&lt;p&gt;In my &lt;strong&gt;upload.php&lt;/strong&gt; file, I set the public URLs to &lt;a href="https://i.thomasbnt.dev/i/"&gt;https://i.thomasbnt.dev/i/&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$secret_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"VotreTouteBelleCléPrivéePourUpload"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// The beautiful private key&lt;/span&gt;
&lt;span class="nv"&gt;$sharexdir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"i/"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Your folder&lt;/span&gt;
&lt;span class="nv"&gt;$domain_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'https://i.thomasbnt.dev/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Your domain name&lt;/span&gt;
&lt;span class="nv"&gt;$lengthofstring&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Width of your output file name. Example : ek6po.png&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;RandomString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;array_merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'z'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;$length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$keys&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;mt_rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$keys&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'secret'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'secret'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;$secret_key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;RandomString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$lengthofstring&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$target_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_FILES&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"sharex"&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="nv"&gt;$fileType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;pathinfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$target_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;PATHINFO_EXTENSION&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;move_uploaded_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_FILES&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"sharex"&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;"tmp_name"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$sharexdir&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$filename&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;'.'&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$fileType&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$domain_url&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$sharexdir&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$filename&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;'.'&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$fileType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'File upload failed - CHMOD/Folder doesn\'t exist?'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'Invalid Secret Key'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'No post data recieved'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So I'm no good at PHP, I got this piece of code from the Internet (I don't know where exactly, so no source) and it works great. Be &lt;strong&gt;careful with the permissions of your folder&lt;/strong&gt;. Make sure that it can be read and that the folder in question really exists.&lt;/p&gt;

&lt;p&gt;You can read that &lt;strong&gt;you need a key&lt;/strong&gt;, it acts as a password so that only you can upload to your server. If you don't want it, don't put anything.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#client-side-sharex"&gt;
  &lt;/a&gt;
  Client side (ShareX)
&lt;/h2&gt;

&lt;p&gt;On this side, after having correctly installed the application, you must make sure that when you make the screen, it is uploaded to the &lt;strong&gt;remote server&lt;/strong&gt;. This option can be found in &lt;strong&gt;Destinations &amp;gt; Custom upload service settings...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YVCPQIhE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3sbsyb55o2k3scr0ktik.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YVCPQIhE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3sbsyb55o2k3scr0ktik.png" alt="Destinations &amp;gt; Custom upload service setting in ShareX" width="880" height="403"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then enter your values, like the &lt;strong&gt;domain name + folder in POST&lt;/strong&gt;, your &lt;strong&gt;secret key&lt;/strong&gt;, and don't forget to put 'sharex' for the name of the form file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ikpqngHM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pdi3kp3vz0xaj742flsq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ikpqngHM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pdi3kp3vz0xaj742flsq.png" alt="Custom upload service setting in ShareX" width="847" height="566"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Test the settings, and if everything is good, congratulations! You now have your own image host.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;☕&lt;/th&gt;
&lt;th&gt;Check my &lt;a href="https://twitter.com/thomasbnt_"&gt;Twitter account&lt;/a&gt;. You can see many projects and updates. You can also &lt;a href="https://www.buymeacoffee.com/thomasbnt/?via=thomasbnt"&gt;support me on Buy Me a Coffee&lt;/a&gt;.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>sharex</category>
      <category>php</category>
    </item>
    <item>
      <title>Why is PHP's popularity decreasing?</title>
      <author>Logan Lindquist</author>
      <pubDate>Wed, 22 Dec 2021 17:16:20 +0000</pubDate>
      <link>https://dev.to/llbbl/why-is-phps-popularity-decreasing-51oc</link>
      <guid>https://dev.to/llbbl/why-is-phps-popularity-decreasing-51oc</guid>
      <description>&lt;h2&gt;
  &lt;a href="#five-reasons-from-my-perspective"&gt;
  &lt;/a&gt;
  Five reasons from my perspective
&lt;/h2&gt;

&lt;p&gt;Here is my attempt at answering this question that was posted on &lt;a href="https://www.quora.com/Why-is-PHPs-popularity-decreasing/answer/Logan-Lindquist"&gt;Quora&lt;/a&gt;. If you want a much more in-depth answer; the full details are available via post on &lt;a href="https://blog.llbbl.com/why-is-phps-popularity-decreasing-ec13c68202e5"&gt;Medium&lt;/a&gt;. Here I will answer the question using Memes because let's be honest that is the content we are really after. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A choice in languages&lt;/li&gt;
&lt;li&gt;The prevalence of Software Platforms as a Service&lt;/li&gt;
&lt;li&gt;The increase in importance of First Contentful Paint in SEO&lt;/li&gt;
&lt;li&gt;Maintenance is expensive&lt;/li&gt;
&lt;li&gt;An abundance of entry level developers&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#a-choice-in-languages"&gt;
  &lt;/a&gt;
  A Choice in Languages
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1Dr1q0dp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oi72i8ms1tkhtrecjpm9.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Dr1q0dp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oi72i8ms1tkhtrecjpm9.jpeg" alt="a choice" width="500" height="649"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9ZUgIPgq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18aoklcc8m0lcfnx4fbn.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ZUgIPgq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18aoklcc8m0lcfnx4fbn.jpeg" alt="in languages" width="640" height="1199"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-prevalence-of-software-platforms-as-a-service"&gt;
  &lt;/a&gt;
  The Prevalence of Software Platforms as a Service
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--liFcvSso--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yn03d8jtwpomlmnzssp9.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--liFcvSso--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yn03d8jtwpomlmnzssp9.jpeg" alt="no software was the answer" width="675" height="900"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o49wPS6x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gg0gaomx4v8w03jracae.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o49wPS6x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gg0gaomx4v8w03jracae.jpg" alt="so much sass" width="600" height="327"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-increase-in-importance-of-first-contentful-paint-in%C2%A0seo"&gt;
  &lt;/a&gt;
  The Increase in Importance of First Contentful Paint in SEO
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---vtarQTA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eao373w4ow9zcwki8dgi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---vtarQTA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eao373w4ow9zcwki8dgi.jpg" alt="seo" width="534" height="467"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p0TobRPr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qfd8zgxtc7yl62buqvkn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p0TobRPr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qfd8zgxtc7yl62buqvkn.jpg" alt="who knows seo" width="233" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#maintenance-is-expensive"&gt;
  &lt;/a&gt;
  Maintenance is Expensive
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IqjBDK63--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aof627ps6qfost7jxfao.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IqjBDK63--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aof627ps6qfost7jxfao.jpg" alt="it takes a team" width="700" height="700"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QxWXCQlx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/86ws1dsj4syzn2qltotn.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QxWXCQlx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/86ws1dsj4syzn2qltotn.jpeg" alt="business calls the shots" width="500" height="675"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#an-abundance-of-entry-level-developers"&gt;
  &lt;/a&gt;
  An Abundance of Entry Level Developers
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9131OwSc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/958l489lazcpm8ts4g0g.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9131OwSc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/958l489lazcpm8ts4g0g.jpg" alt="entry devs unit tests" width="702" height="395"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oS_hGuH7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fdhypantb79icubf1np.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oS_hGuH7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fdhypantb79icubf1np.jpg" alt="sigh" width="700" height="477"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>php</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>discuss</category>
    </item>
    <item>
      <title>HTML Global Attributes</title>
      <author>elinabey</author>
      <pubDate>Wed, 22 Dec 2021 16:55:37 +0000</pubDate>
      <link>https://dev.to/elinabey/html-global-attributes-1b1d</link>
      <guid>https://dev.to/elinabey/html-global-attributes-1b1d</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VrrS90Uo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5fehx145ua537w94aw0b.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VrrS90Uo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5fehx145ua537w94aw0b.jpg" alt="HTML Global Attributes" width="880" height="440"&gt;&lt;/a&gt;In this tutorial, you will learn Global Attributes which are common for all HTML elements. The global attributes assist by both standard and non-standard elements.&lt;br&gt;
The global attributes can be use with all elements, even it may not have any effect on many elements.&lt;/p&gt;

&lt;p&gt;HTML defines many attributes that are common to all elements. These attributes may be specified on all elements, with some exceptions where it is not suitable. Like &lt;/p&gt; section of the document E.g , &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; etc.
&lt;h2&gt;
  &lt;a href="#html-global-attributes-are"&gt;
  &lt;/a&gt;
  HTML Global Attributes are:
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Attributes&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Contenteditable&lt;/td&gt;
&lt;td&gt;true/false&lt;/td&gt;
&lt;td&gt;It confirm whether the content within an element is editable.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;class&lt;/td&gt;
&lt;td&gt;classname&lt;/td&gt;
&lt;td&gt;It is used to give the class name for the element. It is mostly use with the CSS stylesheet.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;accesskey&lt;/td&gt;
&lt;td&gt;character&lt;/td&gt;
&lt;td&gt;It is used to create keyboard shortcuts for the element.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data-*&lt;/td&gt;
&lt;td&gt;somevalue&lt;/td&gt;
&lt;td&gt;It is used to save element-specific private data that can be retrieve by Javascript.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;contextmenu&lt;/td&gt;
&lt;td&gt;menu_id&lt;/td&gt;
&lt;td&gt;It describe the id for the  element that is used as a context menu  for an element.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;draggable&lt;/td&gt;
&lt;td&gt;true/false/auto&lt;/td&gt;
&lt;td&gt;It defines either the content within an element is portable or not using Drag and Drop API.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dropzone&lt;/td&gt;
&lt;td&gt;copy/move/link&lt;/td&gt;
&lt;td&gt;It defines the action is taken on the dragged element when it is dropped, ¬¬ such as whether it is copied, moved or linked.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;It defines a unique id for the element. It can be use with CSS and JavaScript.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;style&lt;/td&gt;
&lt;td&gt;style&lt;/td&gt;
&lt;td&gt;It is used to apply inline CSS to the element.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;spellcheck&lt;/td&gt;
&lt;td&gt;true false&lt;/td&gt;
&lt;td&gt;It defines either the content should be checked for spelling errors or not.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;title&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;It is used to give the title, or some extra information about the element.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;translate&lt;/td&gt;
&lt;td&gt;yes/no&lt;/td&gt;
&lt;td&gt;It defines whether the content of the element should be translated when the web  page is localized or not.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;I shared this post from &lt;a href="https://softcodeon.com/html/html-global-attributes.htm"&gt;HTML Global Attributes&lt;/a&gt; you can read in detail from there.&lt;/p&gt;

&lt;p&gt;If you have any question please discuss below help to improve. Thank you.&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>You're using too much JavaScript</title>
      <author>Nico Zerpa (he/him)</author>
      <pubDate>Wed, 22 Dec 2021 16:47:08 +0000</pubDate>
      <link>https://dev.to/nicozerpa/youre-using-too-much-javascript-4k1b</link>
      <guid>https://dev.to/nicozerpa/youre-using-too-much-javascript-4k1b</guid>
      <description>&lt;p&gt;JavaScript Libraries (or frameworks) like React, Angular or Vue.js have been the main protagonists of web development in recent years. While they are all great pieces of software and solve real problems, we've been relying on them too much, and &lt;strong&gt;we've made the web worse as a result.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The problem is to use too much JavaScript. Of the three core languages on the web (HTML, CSS, and JavaScript), JS might be the most versatile, but it's also &lt;strong&gt;the most expensive for the user, and the most fragile.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A big advantage of HTML and CSS is that they are very tolerant to errors.&lt;/strong&gt; In many cases, when the browser finds errors in HTML or CSS, it can just ignore them and keep displaying the web page. For example, let's see this HTML snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;My name is &lt;span class="nt"&gt;&amp;lt;stronk&amp;gt;&lt;/span&gt;Nico Zerpa&lt;span class="nt"&gt;&amp;lt;/stronk&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, I misspelt the tag name (it should be &lt;code&gt;strong&lt;/code&gt;, not &lt;code&gt;stronk&lt;/code&gt;). However, when I open the page in a browser, the content will appear just fine. Yes, my name won't appear in bold, but the site won't break.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JavaScript doesn't work like that, it's less forgiving when an error occurs.&lt;/strong&gt; And if most of our websites rely heavily on it, an error might mean that the page doesn't work at all.&lt;/p&gt;

&lt;p&gt;Another drawback is that &lt;strong&gt;JavaScript may be slower, especially when the user is using an old or low-range device.&lt;/strong&gt; That's especially true when people try to replicate with JavaScript some functionality that HTML can already do on its own (something that sometimes happens on UI frameworks.)&lt;/p&gt;

&lt;p&gt;When using large libraries, you also have the problem of load times, making the website even slower.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;However, it doesn't mean that you shouldn't use JavaScript at all.&lt;/strong&gt; JavaScript does play an important role in web development.&lt;/p&gt;

&lt;p&gt;Every time you add a new JS library or functionality, think first if it will really improve the user experience. Also, look if there's a way to implement what you want to do with HTML and CSS. Quite often, there are JS-free alternatives.&lt;/p&gt;




&lt;p&gt;If you liked this article, you'll love my JavaScript Newsletter.&lt;br&gt;
Every other Monday, I'll send you easy and actionable steps to level up your JavaScript skills. Check it out: &lt;a href="https://nicozerpa.com/newsletter"&gt;https://nicozerpa.com/newsletter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>My first contribution to prometheus</title>
      <author>Matthew Foley</author>
      <pubDate>Wed, 22 Dec 2021 16:41:41 +0000</pubDate>
      <link>https://dev.to/mtfoley/my-first-contribution-to-prometheus-np1</link>
      <guid>https://dev.to/mtfoley/my-first-contribution-to-prometheus-np1</guid>
      <description>&lt;p&gt;Several weeks ago I joined &lt;a href="https://virtualcoffee.io"&gt;Virtual Coffee&lt;/a&gt;, and I really love that community.  I shared during one of the weekly sessions that I was hoping to learn some more about backend by contributing to open source software.  One of the more seasoned members suggested that I try contributing to &lt;a href="https://github.com/prometheus/prometheus"&gt;prometheus/prometheus&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Taken from the description on the repo:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Prometheus, a Cloud Native Computing Foundation project, is a systems and service monitoring system. It collects metrics from configured targets at given intervals, evaluates rule expressions, displays the results, and can trigger alerts when specified conditions are observed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As I started looking at the project issues, I didn't find many good first issues that I personally felt comfortable with, so I decided to take advantage that I had a completely fresh set of eyes on the project! As I followed along with the &lt;a href="https://prometheus.io/docs/prometheus/latest/getting_started/"&gt;Getting Started guide&lt;/a&gt;, something immediately jumped out at me! When opening &lt;code&gt;http://localhost:9090/metrics&lt;/code&gt; and opening the Metrics Explorer, I was presented with a really long list of metrics that I could view the time series data for.  I thought to myself "with such a long list, it would be nice if there was a search field!" I opened an &lt;a href="https://github.com/prometheus/prometheus/issues/9628"&gt;issue&lt;/a&gt; about this, and then a subsequent &lt;a href="https://github.com/prometheus/prometheus/pull/9629"&gt;pull request&lt;/a&gt;. Here's a screenshot of at least the first iteration of what I implemented:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gbRghfZU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tvc2khzvdo56jql7xv9f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gbRghfZU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tvc2khzvdo56jql7xv9f.png" alt="screenshot of metrics search feature" width="880" height="283"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This project uses &lt;a href="https://probot.github.io/apps/dco/"&gt;Developer Certificate of Origin (DCO)&lt;/a&gt; as one of the checks it does for PR. This makes sure that all commits are signed off to include the contributors name and email address. I learned the hard way about amending commits and using &lt;code&gt;git commit -s&lt;/code&gt; to sign off commits.&lt;/p&gt;

&lt;p&gt;Beyond that, the reviewer GitHub user @juliusv was very friendly and engaging and asked me to implement the use of Fuzzy search with &lt;a href="https://www.npmjs.com/package/@nexucis/fuzzy"&gt;@nexucis/fuzzy&lt;/a&gt;, which had been used on an adjacent component.  I was also able to add appropriate tests for the new component! &lt;/p&gt;

&lt;p&gt;Since this PR, I've gotten a couple more merged to the project, including some contribution to the &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt; codebase, so I'm starting to dig into the backend side which is what I had wanted to do!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Cover image by &lt;a href="https://unsplash.com/@77timon"&gt;Timon Wanner&lt;/a&gt;. Picked it on account of the story of &lt;a href="https://en.wikipedia.org/wiki/Prometheushttps://en.wikipedia.org/wiki/Prometheus"&gt;Prometheus&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>go</category>
      <category>javascript</category>
      <category>react</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Let’s Give Your Realm-Powered Ionic Web App the Native Treatment on iOS and Android!</title>
      <author>Diego Freniche</author>
      <pubDate>Wed, 22 Dec 2021 16:40:34 +0000</pubDate>
      <link>https://dev.to/dfreniche/lets-give-your-realm-powered-ionic-web-app-the-native-treatment-on-ios-and-android-12ln</link>
      <guid>https://dev.to/dfreniche/lets-give-your-realm-powered-ionic-web-app-the-native-treatment-on-ios-and-android-12ln</guid>
      <description>&lt;p&gt;&lt;a href="https://realm.io/"&gt;Realm&lt;/a&gt; is an open-source, easy-to-use local database that helps mobile developers to build better apps, faster. It offers a data synchronization service—MongoDB Realm Sync—that makes it simple to move data between the client and MongoDB Atlas on the back end. Using Realm can save you from writing thousands of lines of code, and offers an intuitive way to work with your data.&lt;/p&gt;

&lt;p&gt;The Ionic team posted a fantastic article on how you can &lt;a href="https://ionicframework.com/blog/ionic-react-and-realm/"&gt;use Ionic with Realm to build a React Web app&lt;/a&gt; quickly, taking advantage of Realm to easily persist your data in a MongoDB Atlas Database.&lt;/p&gt;

&lt;p&gt;After &lt;a href="https://github.com/mhartington/ionic-realm-demo"&gt;cloning the repo&lt;/a&gt; and running &lt;code&gt;ionic serve&lt;/code&gt;, you'll have a really simple task management web application. You can register (using any user/password combination, Realm takes care of your onboarding needs). You can log in, have a look at your tasks, and add new tasks.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Login in the Web App&lt;/th&gt;
&lt;th&gt;Browsing Tasks&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KAp3EnB3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_login_web_44095db30a.png" alt="Login window asking for user and password running in a browser. There’s a Login and Register button." width="857" height="1003"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Xj20MUk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_tasks_web_98bd9784b2.png" alt="Tasks already entered in the app, one for “Do the dishes”, another for “Finish post about Ionic / Realm” and last one “Install Ionic app running Realm in iOS”" width="857" height="1003"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Let’s build on what the Ionic team created for the web, and expand it by building a mobile app for iOS and Android using one of the best features Ionic has: the &lt;em&gt;“Write Once, Run Anywhere”&lt;/em&gt; approach to coding. I’ll start with an iOS app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;To follow along this post, you’ll need five things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A macOS-powered computer running Xcode (to develop for iOS). I’m using Xcode 13 Beta. You don’t have to risk your sanity.&lt;/li&gt;
&lt;li&gt;Ionic installed. You can follow the instructions &lt;a href="https://ionicframework.com/docs/intro/cli"&gt;here&lt;/a&gt;, but TL;DR it’s &lt;code&gt;npm install -g @ionic/cli&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Clone the &lt;a href="https://docs.mongodb.com/realm/tutorial/realm-app/"&gt;repo with the Ionic React Web App&lt;/a&gt; that we’ll turn into mobile.&lt;/li&gt;
&lt;li&gt;As we need an Atlas Database to store our data in the cloud, and a Realm app to make it easy to work with Atlas from mobile, set up a Free Forever MongoDB cluster and &lt;a href="https://docs.mongodb.com/realm/tutorial/realm-app/"&gt;create and import a Realm app schema&lt;/a&gt; so everything is ready server-side.&lt;/li&gt;
&lt;li&gt;Once you have your Realm app created, copy the Realm app ID from the MongoDB admin interface for Realm, and paste it into &lt;code&gt;src/App.tsx&lt;/code&gt;, in the line:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;export const APP_ID = '&amp;lt;Put your Realm App Id here&amp;gt;';&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once your &lt;code&gt;APP_ID&lt;/code&gt; is set, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm run build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-ios-app"&gt;
  &lt;/a&gt;
  The iOS app
&lt;/h2&gt;

&lt;p&gt;To add iOS capabilities to our existing app, we need to open a terminal and run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ionic cap add ios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create the iOS Xcode Project native developers know and love, with the code from our Ionic app. I ran into a problem doing that and it was that the version of Capacitor used in the repo was 3.1.2, but for iOS, I needed at least 3.2.0. So, I just changed &lt;code&gt;package.json&lt;/code&gt; and ran &lt;code&gt;npm install&lt;/code&gt; to update Capacitor.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;package.json&lt;/code&gt; fragment:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
"dependencies": {

    "@apollo/client": "^3.4.5",
    "@capacitor/android": "3.2.2",
    "@capacitor/app": "1.0.2",
    "@capacitor/core": "3.2.0",
    "@capacitor/haptics": "1.0.2",
    "@capacitor/ios": "3.2.2",
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have a new &lt;code&gt;ios&lt;/code&gt; directory. If we enter that folder, we’ll see an &lt;code&gt;App&lt;/code&gt; directory that has a CocoaPods-powered iOS app. To run this iOS app, we need to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Change to that directory with &lt;code&gt;cd ios&lt;/code&gt;. You’ll find an &lt;code&gt;App&lt;/code&gt; directory. &lt;code&gt;cd App&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Install all CocoaPods with &lt;code&gt;pod repo update &amp;amp;&amp;amp; pod install&lt;/code&gt;, as usual in a native iOS project. This updates all libraries’ caches for CocoaPods and then installs the required libraries and dependencies in your project.&lt;/li&gt;
&lt;li&gt;Open the generated &lt;code&gt;App.xcworkspace&lt;/code&gt; file with Xcode. From Terminal, you can just type &lt;code&gt;open App.xcworkspace&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Run the app from Xcode.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Login in the iOS App&lt;/th&gt;
&lt;th&gt;Browsing Tasks&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a6sfiFJ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_login_ios_21fa1f7446.png" alt="Login screen in iOS asking for user and password running in a browser. There’s a Login and Register button." width="880" height="1904"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fP6L1NOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_tasks_ios_04d29ff898.png" alt="Tasks already entered in the iOS app, one for “Do the dishes”, another for “Finish post about Ionic / Realm” and last one “Install Ionic app running Realm in iOS”" width="880" height="1904"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;That’s it. Apart from updating Capacitor, we only needed to run one command to get our Ionic web project running on iOS!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-android-app"&gt;
  &lt;/a&gt;
  The Android App
&lt;/h2&gt;

&lt;p&gt;How hard can it be to build our Ionic app for Android now that we have done it for iOS? Well, it turns out to be super-simple. Just &lt;code&gt;cd&lt;/code&gt; back to the root of the project and type in a terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; ionic cap android
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create the Android project. Once has finished, launch your app using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ionic capacitor run android -l --host=10.0.1.81
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case, &lt;code&gt;10.0.1.81&lt;/code&gt; is my own IP address. As you can see, if you have more than one Emulator or even a plugged-in Android phone, you can select where you want to run the Ionic app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SMyBFSAx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_terminal_f3e08bace5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SMyBFSAx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_terminal_f3e08bace5.png" alt="before running the Android App we can choose the Emulator where it will run." width="880" height="251"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once running, you can register, log in, and add tasks in Android, just like you can do in the web and iOS apps.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Adding a task in Android&lt;/th&gt;
&lt;th&gt;Browsing Tasks in Android&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OxuKkLjL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_android_add_7040b32898.png" alt="Adding a new task screen from Android, with “New Task from Android” typed in." width="880" height="1809"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2oCgRnTw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_android_tasks_7ee2c9c1bc.png" alt="Tasks already entered in the Android app, one for “Do the dishes”, another for “Finish post about Ionic / Realm”, “Install Ionic app running Realm in iOS” and “New Task from Android”" width="880" height="1809"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;The best part is that thanks to the synchronization happening in the MongoDB Realm app, every time we add a new task locally, it gets uploaded to the cloud to a MongoDB Atlas database behind the scenes. And &lt;strong&gt;all other apps accessing the same MongoDB Realm app can show that data&lt;/strong&gt;! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L3LeyMU3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_three_apps_1a7dbfbd05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L3LeyMU3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_three_apps_1a7dbfbd05.png" alt="thanks to Ionic and Realm, Web, iOS and Android access the same data using the same code base." width="880" height="633"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#automatically-refreshing-tasks"&gt;
  &lt;/a&gt;
  Automatically refreshing tasks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://docs.mongodb.com/realm/sdk/"&gt;Realm SDKs&lt;/a&gt; are well known for their syncing capabilities. You change something in the server, or in one app, and other users with access to the same data will see the changes almost immediately. You don’t have to worry about invalidating caches, writing complex networking/multithreading code that runs in the background, listening to silent push notifications, etc. MongoDB Realm takes care of all that for you.&lt;/p&gt;

&lt;p&gt;But in this example, we access data using the &lt;a href="https://docs.mongodb.com/realm/web/graphql-apollo-react/"&gt;Apollo GraphQL Client&lt;/a&gt; for React. Using this client, we can log into our Realm app and run GraphQL Queries—although as designed for the web, we don’t have access to the hard drive to store a .realm file. It’s just a simpler way to use the otherwise awesome &lt;a href="https://www.apollographql.com/docs/react/"&gt;Apollo GraphQL Client&lt;/a&gt; with Realm, so we don’t have synchronization implemented. But luckily, Apollo GraphQL queries can automatically refresh themselves just passing a &lt;code&gt;pollInterval&lt;/code&gt; argument. I told you it was awesome. You set the time interval in milliseconds to refresh the data.&lt;/p&gt;

&lt;p&gt;So, in &lt;code&gt;useTasks.ts&lt;/code&gt;, our function to get all tasks will look like this, auto-refreshing our data every half second.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;useAllTasksInProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="nx"&gt;gql&lt;/span&gt;&lt;span class="s2"&gt;`
     query GetAllTasksForProject($partition: String!) {
       tasks(query: { _partition: $partition }) {
         _id
         name
         status
       }
     }
   `&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;partition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;partition&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="na"&gt;pollInterval&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Failed to fetch tasks: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="c1"&gt;// If the query has finished, return the tasks from the result data&lt;/span&gt;
 &lt;span class="c1"&gt;// Otherwise, return an empty list&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tasks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;tasks&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---zSnHp-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_sync_add_task_cd8ec70ccc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---zSnHp-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_sync_add_task_cd8ec70ccc.gif" alt="Now we can sync our actions. Adding a task in the Android Emulator gets propagated to the iOS and Web versions" width="640" height="391"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pull-to-refresh"&gt;
  &lt;/a&gt;
  Pull to refresh
&lt;/h2&gt;

&lt;p&gt;Adding automatic refresh is nice, but in mobile apps, we’re used to also refreshing lists of data just by pulling them. To get this, we’ll need to add the Ionic component &lt;code&gt;IonRefresher&lt;/code&gt; to our Home component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;IonPage&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;IonHeader&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;IonToolbar&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;IonTitle&amp;gt;&lt;/span&gt;Tasks&lt;span class="nt"&gt;&amp;lt;/IonTitle&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;IonButtons&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"end"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;IonButton&lt;/span&gt; &lt;span class="na"&gt;onClick=&lt;/span&gt;&lt;span class="s"&gt;{addNewTask}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
             &lt;span class="nt"&gt;&amp;lt;IonIcon&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"icon-only"&lt;/span&gt; &lt;span class="na"&gt;icon=&lt;/span&gt;&lt;span class="s"&gt;{add}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/IonIcon&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;/IonButton&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;/IonButtons&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/IonToolbar&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/IonHeader&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;IonContent&lt;/span&gt; &lt;span class="na"&gt;fullscreen&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;IonRefresher&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"fixed"&lt;/span&gt; &lt;span class="na"&gt;onIonRefresh=&lt;/span&gt;&lt;span class="s"&gt;{doRefresh}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;IonRefresherContent&amp;gt;&amp;lt;/IonRefresherContent&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/IonRefresher&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;IonHeader&lt;/span&gt; &lt;span class="na"&gt;collapse=&lt;/span&gt;&lt;span class="s"&gt;"condense"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;IonToolbar&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;IonTitle&lt;/span&gt; &lt;span class="na"&gt;size=&lt;/span&gt;&lt;span class="s"&gt;"large"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Tasks&lt;span class="nt"&gt;&amp;lt;/IonTitle&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;/IonToolbar&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/IonHeader&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;IonList&amp;gt;&lt;/span&gt;
         {loading ? &lt;span class="nt"&gt;&amp;lt;IonLoading&lt;/span&gt; &lt;span class="na"&gt;isOpen=&lt;/span&gt;&lt;span class="s"&gt;{loading}&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; : null}
         {tasks.map((task: any) =&amp;gt; (
           &lt;span class="nt"&gt;&amp;lt;TaskItem&lt;/span&gt; &lt;span class="na"&gt;key=&lt;/span&gt;&lt;span class="s"&gt;{parseInt(task._id)}&lt;/span&gt; &lt;span class="err"&gt;{...&lt;/span&gt;&lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/TaskItem&amp;gt;&lt;/span&gt;
         ))}
       &lt;span class="nt"&gt;&amp;lt;/IonList&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/IonContent&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/IonPage&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we can see, an &lt;code&gt;IonRefresher&lt;/code&gt; component will add the pull-to-refresh functionality with an included loading indicator tailored for each platform.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;IonRefresher&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"fixed"&lt;/span&gt; &lt;span class="na"&gt;onIonRefresh=&lt;/span&gt;&lt;span class="s"&gt;{doRefresh}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;IonRefresherContent&amp;gt;&amp;lt;/IonRefresherContent&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/IonRefresher&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To refresh, we call &lt;code&gt;doRefresh&lt;/code&gt; and there, we just reload the whole page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doRefresh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;CustomEvent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;RefresherEventDetail&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reload&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// reload the whole page&lt;/span&gt;
   &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;// we signal the loading indicator to hide&lt;/span&gt;
 &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#deleting-tasks"&gt;
  &lt;/a&gt;
  Deleting tasks
&lt;/h2&gt;

&lt;p&gt;Right now, we can swipe tasks from right to left to change the status of our tasks. But I wanted to also add a left to right swipe so we can delete tasks. We just need to add the swiping control to the already existing &lt;code&gt;IonItemSliding&lt;/code&gt; control. In this case, we want a swipe from the &lt;em&gt;start&lt;/em&gt; of the control. This way, we avoid any ambiguities with right-to-left vs. left-to-right languages. When the user taps on the new “Delete” button (which will appear red as we’re using the &lt;em&gt;danger&lt;/em&gt; color), &lt;code&gt;deleteTaskSelected&lt;/code&gt; is called.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;IonItemSliding&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;{slidingRef}&lt;/span&gt; &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;{'status-'&lt;/span&gt; &lt;span class="err"&gt;+&lt;/span&gt; &lt;span class="na"&gt;task.status&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;IonItem&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;IonLabel&amp;gt;&lt;/span&gt;{task.name}&lt;span class="nt"&gt;&amp;lt;/IonLabel&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/IonItem&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;IonItemOptions&lt;/span&gt; &lt;span class="na"&gt;side=&lt;/span&gt;&lt;span class="s"&gt;"end"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;IonItemOption&lt;/span&gt; &lt;span class="na"&gt;onClick=&lt;/span&gt;&lt;span class="s"&gt;{toggleStatus}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Status&lt;span class="nt"&gt;&amp;lt;/IonItemOption&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/IonItemOptions&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;IonItemOptions&lt;/span&gt; &lt;span class="na"&gt;side=&lt;/span&gt;&lt;span class="s"&gt;"start"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;IonItemOption&lt;/span&gt; &lt;span class="na"&gt;onClick=&lt;/span&gt;&lt;span class="s"&gt;{deleteTaskSelected}&lt;/span&gt; &lt;span class="na"&gt;color=&lt;/span&gt;&lt;span class="s"&gt;"danger"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Delete&lt;span class="nt"&gt;&amp;lt;/IonItemOption&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/IonItemOptions&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/IonItemSliding&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To delete the task, we use a GraphQL mutation defined in &lt;code&gt;useTaskMutations.ts&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;deleteTaskSelected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;slidingRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;// close sliding menu&lt;/span&gt;
   &lt;span class="nx"&gt;deleteTask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;             &lt;span class="c1"&gt;// delete task&lt;/span&gt;
 &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pAy9H8tn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_delete_184d02206d.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pAy9H8tn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://mongodb-devhub-cms.s3.us-west-1.amazonaws.com/ionic_native_delete_184d02206d.gif" alt="Deleting can be done with a Swipe. Here we show how it's been done in the Android Emulator and changes appear in the iOS Simulator and Web page" width="640" height="377"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recap"&gt;
  &lt;/a&gt;
  Recap
&lt;/h2&gt;

&lt;p&gt;In this post, we’ve seen how easy it is to start with an Ionic React web application and, with only a few lines of code, turn it into a mobile app running on iOS and Android. Then, we easily added some functionality to the three apps at the same time. Ionic makes it super simple to run your Realm-powered apps everywhere!&lt;/p&gt;

&lt;p&gt;You can check out the code from this post &lt;a href="https://github.com/mongodb-developer/ionic-realm-demo/tree/observe-changes"&gt;in this branch&lt;/a&gt; of the &lt;a href="https://github.com/mongodb-developer/ionic-realm-demo"&gt;repo&lt;/a&gt;, just by typing:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git clone https://github.com/mongodb-developer/ionic-realm-demo
$ git checkout observe-changes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But this is not the only way to integrate Realm in your Ionic apps. Using Capacitor and our native SDKs, we’ll show you how to use Realm from Ionic in a future follow-up post. &lt;/p&gt;

</description>
      <category>ionic</category>
      <category>realm</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Unicode</title>
      <author>Zoran Luledzija</author>
      <pubDate>Wed, 22 Dec 2021 16:37:26 +0000</pubDate>
      <link>https://dev.to/localizely/unicode-3kp7</link>
      <guid>https://dev.to/localizely/unicode-3kp7</guid>
      <description>&lt;p&gt;&lt;a href="https://home.unicode.org/"&gt;Unicode&lt;/a&gt; is an international character encoding standard. It provides a unique number (code point) for every character, no matter what the platform, program, or language is. Furthermore, it represents the most commonly used encoding today.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ascii"&gt;
  &lt;/a&gt;
  ASCII
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;ASCII&lt;/strong&gt; (American Standard Code for Information Interchange) is one of the first widely used character encoding standards. People from the telecommunication and computing industries in America created it during the 1960s. As a 7-bit coding system, it supported 128 (i.e. 2⁷) characters, 96 printing characters, and 32 control characters. That was sufficient to encode numbers, some special characters, and the letters of the English alphabet.&lt;/p&gt;

&lt;p&gt;However, the spread of computing and the Internet has created a need for other characters as well. As computers used 8-bit bytes, some manufacturers decided to use the remaining 8th bit in the ASCII code and thus expand the number of characters to 256. This 8-bit encoding is often referred to as “&lt;strong&gt;Extended ASCII&lt;/strong&gt;” or “&lt;strong&gt;8-bit ASCII&lt;/strong&gt;“. With the growth of different 8-bit encoders, data exchange became complicated and error-prone. That was a sign that it was necessary to find some universal solution that would work for all languages and cover all the special characters.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unicode"&gt;
  &lt;/a&gt;
  Unicode
&lt;/h2&gt;

&lt;p&gt;Unicode provides a unique code for every character, in every language, in every program, on every platform. It enables a single document to contain text from different writing systems, which was nearly impossible with earlier native encodings. Moreover, Unicode supports emojis, which are an indispensable part of communication today.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unicode-transformation-formats"&gt;
  &lt;/a&gt;
  Unicode Transformation Formats
&lt;/h3&gt;

&lt;p&gt;Unicode defines several transformation formats, also known as &lt;strong&gt;UTF&lt;/strong&gt;s (Unicode Transformation Formats). These transformation formats define how each code is represented in bits in memory. Below is a brief overview of the three UTFs that Unicode Standard provides.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;UTF-8

&lt;ul&gt;
&lt;li&gt;variable-length character encoding that uses from 1 to 4 bytes (from 8 to 32 bits)&lt;/li&gt;
&lt;li&gt;backward compatible with ASCII&lt;/li&gt;
&lt;li&gt;the most common encoding on the web (~98% of all web pages)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;UTF-16

&lt;ul&gt;
&lt;li&gt;variable-length character encoding that uses 2 or 4 bytes (16 or 32 bits)&lt;/li&gt;
&lt;li&gt;internally used by Microsoft Windows, Java, JavaScript, etc.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;UTF-32

&lt;ul&gt;
&lt;li&gt;fixed length character encoding that uses 4 bytes (32 bits)&lt;/li&gt;
&lt;li&gt;faster to operate but uses more memory and wastes a lot of bandwidth&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h2&gt;

&lt;p&gt;Thanks to Unicode, today's software runs on a variety of languages and platforms. That was hard to imagine a few decades ago. In other words, today's software localization would be impossible without such an encoding standard.&lt;/p&gt;

&lt;p&gt;More details regarding Unicode you can find in the &lt;a href="https://localizely.com/blog/unicode/"&gt;original post&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>software</category>
      <category>encoding</category>
      <category>i18n</category>
    </item>
    <item>
      <title>PropTypes in JavaScript.</title>
      <author>fardinh136</author>
      <pubDate>Wed, 22 Dec 2021 16:31:24 +0000</pubDate>
      <link>https://dev.to/fardinh1361/proptypes-in-javascript-4l63</link>
      <guid>https://dev.to/fardinh1361/proptypes-in-javascript-4l63</guid>
      <description>&lt;p&gt;PropTypes exports a range of validators that can be used to make sure the data we receive is valid. PropTypes are a mechanism to ensure that components use the correct data type and pass the right data, and that components use the right type of props, and that receiving components receive the right type of props.&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Spark for beginners - and you</title>
      <author>Barbara</author>
      <pubDate>Wed, 22 Dec 2021 16:24:43 +0000</pubDate>
      <link>https://dev.to/barbara/spark-for-beginners-and-you-24ea</link>
      <guid>https://dev.to/barbara/spark-for-beginners-and-you-24ea</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-do-we-need-distributed-data-technologies"&gt;
  &lt;/a&gt;
  Why do we need distributed data technologies
&lt;/h2&gt;

&lt;p&gt;If the dataset is larger than our memory, the program won't work. &lt;br&gt;
We could fiddle around with data compression or read in the file in smaller chunks - &lt;a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-chunking"&gt;io-chunking&lt;/a&gt; when using python  pandas library. &lt;br&gt;
But if we have to handle big amounts of data we need a different solution. &lt;/p&gt;

&lt;p&gt;For most of the use cases the &lt;a href="https://en.wikipedia.org/wiki/Random-access_memory"&gt;memory&lt;/a&gt;  and the &lt;a href="https://en.wikipedia.org/wiki/Central_processing_unit#:~:text=A%20central%20processing%20unit%20"&gt;CPU&lt;/a&gt; are not the bottleneck, but the &lt;a href="https://en.wikipedia.org/wiki/Solid-state_drive"&gt;storage&lt;/a&gt; and the &lt;a href="https://en.wikipedia.org/wiki/Computer_network"&gt;network&lt;/a&gt; is. Meaning getting the data out of the storage into the memory so that the CPU can process it. Loading data from a storage it is 300 times slower than reading it in the CPU. And we would have to move data all the time in and out of the memory to pass it to the CPU for the calculation. This is called &lt;em&gt;trashing&lt;/em&gt; and is very slow. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UMe3fXPU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w2pz6r7fdllr1po3w556.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UMe3fXPU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w2pz6r7fdllr1po3w556.jpg" alt="Sketch speed of hardware" width="880" height="393"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So we need a special system to distribute the data on several machines and process it in parallel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kQrYQbvF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tk3bqdclo82kd4ystwq1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kQrYQbvF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tk3bqdclo82kd4ystwq1.jpg" alt="Sketch distributed computing" width="880" height="519"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#hadoop-framework"&gt;
  &lt;/a&gt;
  Hadoop Framework
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://hadoop.apache.org/"&gt;Hadoop&lt;/a&gt; is an ecosystem of tools for big data storage and data analysis. It is older than Spark and writes intermediate results to disk whereas Spark tires to keep data in memory whenever possible, so this is faster in many use cases.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#hadoop-mapreduce-data-processing"&gt;
  &lt;/a&gt;
  Hadoop MapReduce - Data Processing
&lt;/h3&gt;

&lt;p&gt;This is a system for processing and analysing large data sets in parallel. MapReduce is a programming technique for manipulation large data sets:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Divide and distribute: In the first step a large dataset is divided and distributed across a cluster.&lt;/li&gt;
&lt;li&gt;Map: Each data is analysed and converted into a key-value pair.&lt;/li&gt;
&lt;li&gt;Shuffle: Those key-value pairs are shuffled across the cluster so that all keys are on the same machine.&lt;/li&gt;
&lt;li&gt;Reduce: All of those data points with the same key are brought into the same network node for further analysis&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#hadoop-yarn-resource-manager"&gt;
  &lt;/a&gt;
  Hadoop YARN - Resource Manager
&lt;/h3&gt;

&lt;p&gt;a resource manager, that schedules jobs across a cluster. The manager keeps track of what computer resources are available and then assigns those resources to specific tasks.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#hdfs-hadoop-distributed-file-system-data-storage"&gt;
  &lt;/a&gt;
  HDFS - Hadoop Distributed File System - Data Storage
&lt;/h3&gt;

&lt;p&gt;This is a big data storage data system that splits data into chunks and stores the chunks across a cluster of computers.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#spark"&gt;
  &lt;/a&gt;
  &lt;a href="https://spark.apache.org/"&gt;Spark&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Is a big data framework and currently one of the most popular tools for big data analytics. &lt;br&gt;
It contains libraries for data analysis, machine learning, graph analysis and streaming live data. In general Spark is faster than Hadoop, as it does not write intermediate results to disk. It is &lt;em&gt;not&lt;/em&gt; a data storage system.&lt;br&gt;
We can use Spark on top of HDFS or read data from other sources like Amazon S3.&lt;br&gt;
It is the designed for &lt;a href="http://spark.apache.org/sql/"&gt;Data Analytics&lt;/a&gt;, &lt;a href="http://spark.apache.org/mllib/"&gt;Machine Learning&lt;/a&gt;, &lt;a href="http://spark.apache.org/streaming/"&gt;Streaming&lt;/a&gt; and &lt;a href="http://spark.apache.org/graphx/"&gt;Graph Analytics&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Limitations of Spark&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Streaming: Sparks Streamings's latency is at least 500ms, since it operates on micro-batches of records, instead of processing one record at a time. Native streaming tools like &lt;a href="http://storm.apache.org/"&gt;Storm&lt;/a&gt;, &lt;a href="https://apex.apache.org/"&gt;Apex&lt;/a&gt; or &lt;a href="https://flink.apache.org/"&gt;Flink&lt;/a&gt; might be better for low-latency applications. &lt;/li&gt;
&lt;li&gt;Machine Learning:  Currently it only supports algorithms that scale linearly with the input data size and deep learning is not available. If this is a use case, we can use Tensorflow for deep learning.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Spark Modes&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Local Mode: useful to learn the syntax and prototype a project&lt;/li&gt;
&lt;li&gt;Cluster Modes:
We can use a cluster in Standalone version or via a clustermanager either &lt;a href="https://hadoop.apache.org/docs/stable/hadoop-yarn/hadoop-yarn-site/YARN.html"&gt;YARN&lt;/a&gt; or &lt;a href="https://mesos.apache.org/"&gt;Mesos&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0_BEpXqB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/du130joh5yhijbj2bihn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0_BEpXqB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/du130joh5yhijbj2bihn.jpg" alt="sketch spark modes" width="880" height="332"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#programming"&gt;
  &lt;/a&gt;
  Programming
&lt;/h3&gt;

&lt;p&gt;It is written in Scala and provides APIs in Java, R and Python, called Pyspark. Under the hood Pyspark uses py4j to make calls to the JVM - Java Virtual Machine. The best way to run Spark on your computer is in a Docker container. Check out &lt;a href="https://towardsdatascience.com/diy-apache-spark-docker-bb4f11c10d24"&gt;this tutorial&lt;/a&gt; to see how.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#pure-functions"&gt;
  &lt;/a&gt;
  Pure functions
&lt;/h4&gt;

&lt;p&gt;As we work with a distributed system we want to avoid side effects. As we don't want to trigger effects on variables outside a function scope. This functions are called pure functions.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#dag-directed-acyclic-graph"&gt;
  &lt;/a&gt;
  DAG - Directed Acyclic Graph
&lt;/h4&gt;

&lt;p&gt;Every Spark function makes a copy of its input data, because it does not want to mutate the input data. This is called immutable and makes sense when you have a single function. As  we often have a function that is composed of a lot of subfunctions, we would run out of memory very fast. Thats why Spark uses lazy evaluation.&lt;/p&gt;

&lt;p&gt;First step by step directions of what functions and data are needed. You can compare those directions to the steps of a recipe. In Spark this is called DAG. Spark always waits as long as possible to see if it can streamline the work. This is called &lt;em&gt;Lazy Evaluation&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eIt19e3y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v7ibbnp490fkqpe39aaf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eIt19e3y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v7ibbnp490fkqpe39aaf.jpg" alt="Sketch lazy evaluation" width="880" height="606"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If Spark would not do this, the system would end up doing something called &lt;strong&gt;trashing&lt;/strong&gt;. As if you had to go for every single ingredient you need for your recipe to the supermarket instead of using a shopping list and pick up everything at one time at the supermarket. &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#run-spark"&gt;
  &lt;/a&gt;
  Run Spark
&lt;/h4&gt;

&lt;p&gt;Spark Context: Main entry point for Spark functionality. This connects the cluster with the application.&lt;br&gt;
We can create objects within a SparkContext to create lower level of abstractions. &lt;br&gt;
We need to create a Sparksession to read the dataframes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from pyspark import SparkContext, SparkConf
from pyspark import SparkSession

configure = SparkConf().setAppName("yourAppName").setMaster("IP Adress")

sc = SparkContext(conf=configure)

spark = SparkSession.builder.appName('yourAppName').getOrCreate()

// takes in the log object and distributes the object across the machines of the cluster
distributed_data = sc.parallelize(your_data)

// will return the original dataset. As Spark is uses lazy evaluation we have to call the collect() method to get the results from all of the clusters and "collect" them into a single list on the master node.
distributed_data.collect()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#rdds-resilient-distributed-data-set"&gt;
  &lt;/a&gt;
  &lt;a href="https://spark.apache.org/docs/latest/rdd-programming-guide.html"&gt;RDDs - Resilient Distributed Data Set&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;They are fault-tolerant datasets distributed across a cluster. This is how Spark stores the data. In the first version of Spark we had to work directly with RDDs. &lt;br&gt;
We can still use RDDs as part of our Spark code as we might need it in some &lt;a href="https://databricks.com/blog/2016/07/14/a-tale-of-three-apache-spark-apis-rdds-dataframes-and-datasets.html"&gt;cases&lt;/a&gt;. When working with RDDs we have to use imperative programming, this means we have to be very detailed with the programming instructions, therefore using Datasets API available since Spark Version 2.0 is much easier. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#spark-sql-and-dataframe"&gt;
  &lt;/a&gt;
  &lt;a href="https://spark.apache.org/docs/latest/sql-programming-guide.html"&gt;SPARK SQL and Dataframe&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WyrJE40k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ad5119tce65sfuihwp5z.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WyrJE40k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ad5119tce65sfuihwp5z.jpg" alt="sketch declarative and imperative programming" width="880" height="597"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Spark dataframe offers methods that are quite similar to pandas dataframe&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;General Functions&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;returns a new DataFrame with the selected clolumns&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;filters rows using the given condition&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;where()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;alias for &lt;code&gt;filter&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;groupBy()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;groups the DataFrame using the specified columns, so we can run aggregation on them&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;returns a new DataFrame sorted by the specified column(s). By default the second parameter 'ascending' is True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dropDuplicates()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;returns a new DataFrame with unique rows based on all or just a subset of columns&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;withColumn()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;return as a new DataFrame by adding a column or replacing the existing column that has the same name.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;When using Spark SQL we can query data with a declarative approach. Declarative programming is more concerned about the &lt;em&gt;what&lt;/em&gt; than about the &lt;em&gt;how&lt;/em&gt;. In most cases this systems are an abstraction layer over an imperative system, that takes care of the &lt;em&gt;how&lt;/em&gt;.&lt;br&gt;
As a lot of people can read and write SQL. Spark will automise the SQL Code out of the box (Spark magic alarm) and this will speed up the process of manipulating and retrieving data.&lt;br&gt;
ACHTUNG: Unlike a database table, the view in Spark is temporary&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Aggregate Functions&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;like: &lt;code&gt;count()&lt;/code&gt;,  &lt;code&gt;countDistinct()&lt;/code&gt;, &lt;code&gt;avg()&lt;/code&gt;, &lt;code&gt;max()&lt;/code&gt;,&lt;code&gt;min()&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;You can find out all available aggregate functions in the &lt;a href="https://spark.apache.org/docs/2.4.0/api/python/pyspark.sql.html"&gt;pyspark.sql.functions module&lt;/a&gt;. Make sure not to confuse those methods with the built-in methods of the Python Standard Library.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;UDF - User Defined Functions&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;spark.udf.register("yourFunctionName", yourFunctionCode)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;In Spark SQL we can define our own functions with the udf module. But you can also use Lambda functions or build-in Python functions if needed like &lt;code&gt;distributed_data_log.map(lambda lower_data: data.lower()).collect()&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Window Functions&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Window functions are a way of combining the values of ranges of rows in a DataFrame. When defining the window we can choose how to sort and group (with the &lt;code&gt;partitionBy&lt;/code&gt; method) the rows and how wide of a window we'd like to use (described by &lt;code&gt;rangeBetween&lt;/code&gt; or &lt;code&gt;rowsBetween&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#coding-examples-here"&gt;
  &lt;/a&gt;
  Coding examples &lt;a href="https://github.com/BarbaraJoebstl/data-engineering-nd/tree/master/data-lakes/spark_data-wrangling"&gt;here&lt;/a&gt;.
&lt;/h4&gt;

</description>
      <category>bigdata</category>
      <category>beginners</category>
      <category>distributedsystems</category>
      <category>programming</category>
    </item>
    <item>
      <title>Important array methods</title>
      <author>Pritom Deb</author>
      <pubDate>Wed, 22 Dec 2021 16:24:26 +0000</pubDate>
      <link>https://dev.to/pritomdbhaskar/important-array-methods-2dja</link>
      <guid>https://dev.to/pritomdbhaskar/important-array-methods-2dja</guid>
      <description>&lt;p&gt;&lt;strong&gt;1. &lt;u&gt;concat&lt;/u&gt;()&lt;/strong&gt;&lt;br&gt;
Joins two or more arrays, and returns a copy of the joined arrays&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yWCYTwPN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2qja8i05g2e0r1jx2yi0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yWCYTwPN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2qja8i05g2e0r1jx2yi0.png" alt="Image description" width="880" height="487"&gt;&lt;/a&gt;&lt;br&gt;
the fullName will show Pritom Deb&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. &lt;u&gt;every&lt;/u&gt;()&lt;/strong&gt;&lt;br&gt;
Checks if every element in an array pass a test&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cTchVnt7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/brkm560g0t3t4cj1ppbc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cTchVnt7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/brkm560g0t3t4cj1ppbc.png" alt="Image description" width="880" height="709"&gt;&lt;/a&gt;&lt;br&gt;
teenager will reply true while adult while reply false. every() method only returns true or false.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. &lt;u&gt;filter&lt;/u&gt;()&lt;/strong&gt;&lt;br&gt;
Creates a new array with every element in an array that pass a test&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EtnEijBA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kg9l5d55s1s56tl2qobb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EtnEijBA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kg9l5d55s1s56tl2qobb.png" alt="Image description" width="874" height="632"&gt;&lt;/a&gt;&lt;br&gt;
adult will return a new array ["18","19","20"]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. &lt;u&gt;find&lt;/u&gt;()&lt;/strong&gt;&lt;br&gt;
Returns the value of the first element in an array that pass a test&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nyZSLi5M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sge0hcz5tk6t5bxhrycc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nyZSLi5M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sge0hcz5tk6t5bxhrycc.png" alt="Image description" width="856" height="632"&gt;&lt;/a&gt;&lt;br&gt;
adult will return 18.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. &lt;u&gt;findIndex&lt;/u&gt;()&lt;/strong&gt;&lt;br&gt;
Returns the index of the first element in an array that pass a test&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RKJ1-ysD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mwr02mdjx43cjh2t8ag6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RKJ1-ysD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mwr02mdjx43cjh2t8ag6.png" alt="Image description" width="880" height="602"&gt;&lt;/a&gt;&lt;br&gt;
adult will return 3.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Use this mnemonic to catch bugs in your code.</title>
      <author>Jay Clark</author>
      <pubDate>Wed, 22 Dec 2021 16:14:43 +0000</pubDate>
      <link>https://dev.to/jayeclark/use-this-mnemonic-to-catch-bugs-in-your-code-14e1</link>
      <guid>https://dev.to/jayeclark/use-this-mnemonic-to-catch-bugs-in-your-code-14e1</guid>
      <description>&lt;p&gt;I wasn't joking when I said I nerd out on mnemonic devices. If a checklist can be turned into an acronym, I will find a way. Having ready-to-go lists of things to do to get back on track when I hit a challenge is one of the best ways I've found to boost my productivity.&lt;/p&gt;

&lt;p&gt;Today the mnemonic I'd like to share is one for beginners. It will help you identify what's going wrong with your code when here aren't helpful enough cues from the console, your IDE, or the test suite.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scruples"&gt;
  &lt;/a&gt;
  SCRUPLES
&lt;/h2&gt;

&lt;p&gt;Is your &lt;strong&gt;syntax&lt;/strong&gt; right?&lt;br&gt;
Did you &lt;strong&gt;call&lt;/strong&gt; the function you need, or just declare it?&lt;br&gt;
Does the function &lt;strong&gt;return&lt;/strong&gt; what it needs to?&lt;br&gt;
Could there be &lt;strong&gt;unintended&lt;/strong&gt; consequences to your code?&lt;br&gt;
Did you &lt;strong&gt;put&lt;/strong&gt; things in the right order?&lt;br&gt;
Do your &lt;strong&gt;loops&lt;/strong&gt; increment correctly?&lt;br&gt;
Is there a way for your loops to &lt;strong&gt;end&lt;/strong&gt;?&lt;br&gt;
Are there issues with &lt;strong&gt;scope&lt;/strong&gt;?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;

&lt;p&gt;When you're starting out, 99% of your problems are going to be solved right here. The browser console &amp;amp; your IDE provide error messages about syntax, but they aren't always clear and sometimes can be misleading. Make sure there isn't a &lt;code&gt;,&lt;/code&gt; where there should be a &lt;code&gt;;&lt;/code&gt;, and that your &lt;code&gt;{}&lt;/code&gt; and &lt;code&gt;[]&lt;/code&gt; are nested correctly. Little things like inconsistent capitalization of variables, plural/singular typos, or incorrect formatting of fat arrow callback functions can also cause issues that can be hard to locate. If you're doing web development and setting styles, check that the values you're passing are modified with the right units (&lt;code&gt;px&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;vw&lt;/code&gt;, etc.)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#call-your-functions"&gt;
  &lt;/a&gt;
  Call Your Functions
&lt;/h3&gt;

&lt;p&gt;I still make this mistake more than I'd like to admit. I'll write an incredibly complicated function, then fail to ever actually call it in the code. Think of the function declaration like a recipe - you can write down the recipe for grandma's peanut butter fudge, but writing down the recipe (declaring the function) is not the same as actually making the fudge (calling the function.)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#return-something-from-the-function"&gt;
  &lt;/a&gt;
  Return something from the function
&lt;/h3&gt;

&lt;p&gt;If you need a function to return something, make sure it actually returns that thing. Setting the variable &lt;code&gt;result = true;&lt;/code&gt; inside your &lt;code&gt;isUserLoggedIn()&lt;/code&gt; function does you no good unless &lt;code&gt;isUserLoggedIn()&lt;/code&gt; actually returns that value!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unintended-consequences"&gt;
  &lt;/a&gt;
  Unintended consequences
&lt;/h3&gt;

&lt;p&gt;Watch out for unintended consequences. Certain methods mutate the original variable while others return a copy. If you have a function that increases a counter or increases the value of a variable, that effect will take place even if you are just logging the result of the function to the console. You'll learn over time, with practice, what to look out for. I had to learn a hard lesson about &lt;code&gt;Array.forEach()&lt;/code&gt; and splicing/deleting array elements. I still forget that String.replace() needs to be assigned to a variable and doesn't mutate the original string. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#put-things-in-the-right-order"&gt;
  &lt;/a&gt;
  Put things in the right order
&lt;/h3&gt;

&lt;p&gt;Function declarations can appear later in the code than where they are called, but fat arrow function expressions must appear before they are called. Variables need to be declared earlier in the code than when they are used or mutated. Beyond these functional issues, consider trying to write your code like a story so that when you return to it in the future you have an easier time figuring out what you were trying to do and how.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#loops"&gt;
  &lt;/a&gt;
  Loops
&lt;/h3&gt;

&lt;p&gt;Make sure your loops increment the way they're supposed to. This is especially important for while loops - if a counter isn't increasing or something isn't being mutated each loop, you're unlikely to ever hit the condition to exit the while loop.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#end-your-loops"&gt;
  &lt;/a&gt;
  End your loops
&lt;/h3&gt;

&lt;p&gt;Somewhat related to the last one - make sure your loops have a way to exit. Don't be me and start a for loop with for (let i = arr.length - 1; i &amp;gt;= 0; i++). If your loop is taking a very long time to run, check whether you can add in a way for it to end early (if you're searching a 20,000 element array for the first index of a specific value, and you find that at &lt;code&gt;i = 2&lt;/code&gt;, make sure you're not iterating through the entire remaining 19,997 values before ending the loop.)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scope"&gt;
  &lt;/a&gt;
  Scope
&lt;/h3&gt;

&lt;p&gt;Check that the scope of your variables and functions works for where you are trying to use them. If you define a helper function inside of a function declaration, that helper function is not going to be available outside of that declaration. If you're looking for the highest value in an array, but declare the variable &lt;code&gt;highestValue&lt;/code&gt; inside the for loop you're using to scan the array, that variable will get torn down and rebuilt with each loop.&lt;/p&gt;

&lt;p&gt;Above all, be kind to yourself. Don't beat yourself up over any of these mistakes. As I've interacted with more and more senior people in the industry, I've learned that everyone makes these mistakes. You'll be much more successful at learning to quickly identify and correct mistakes like these, than you will at training yourself not to make these mistakes at all, so focus your effort where it will make the most impact.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#but-my-code-still-doesnt-work"&gt;
  &lt;/a&gt;
  But my code still doesn't work!
&lt;/h2&gt;

&lt;p&gt;This list isn't comprehensive. It's a checklist of the most common errors I had to train myself not to make when starting out. Your mileage may vary. You might also be less of a beginner than you think (and are encountering more complex issues.) &lt;/p&gt;

&lt;p&gt;Think of it as a way to organize your thoughts &amp;amp; analysis. Especially in moments of frustration, I find it helpful to have a plan of attack.&lt;/p&gt;

&lt;p&gt;What do you think - are there common errors I missed? Do you have your own version of 'scruples' that you use?&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
