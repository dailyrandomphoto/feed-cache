<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Welcome Thread - v155</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 15 Dec 2021 19:23:59 +0000</pubDate>
      <link>https://dev.to/thepracticaldev/welcome-thread-v155-37jb</link>
      <guid>https://dev.to/thepracticaldev/welcome-thread-v155-37jb</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/13zdDToM7Hi8eY/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/13zdDToM7Hi8eY/giphy.gif" alt="Comedian waving" width="245" height="194"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#welcome-to-dev"&gt;
  &lt;/a&gt;
  Welcome to DEV!
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Leave a comment below to introduce yourself! You can talk about what brought you here, what you're learning, or just a fun fact about yourself.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reply to someone's comment, either with a question or just a hello. üëã &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Great to have you in the community!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>welcome</category>
    </item>
    <item>
      <title>How to build a secure crypto wallet</title>
      <author>Cossack Labs</author>
      <pubDate>Wed, 15 Dec 2021 18:47:55 +0000</pubDate>
      <link>https://dev.to/cossacklabs/how-to-build-a-secure-crypto-wallet-58jp</link>
      <guid>https://dev.to/cossacklabs/how-to-build-a-secure-crypto-wallet-58jp</guid>
      <description>&lt;p&gt;&lt;a href="https://www.cossacklabs.com/"&gt;Cossack Labs&lt;/a&gt; security engineers are engaged in improving the security of several large public blockchain ecosystems and their hot non-custodial crypto wallets.&lt;/p&gt;

&lt;p&gt;We gathered lots of observations about crypto wallets security: how they are different from the banking apps, what are the unique threats they face, and how novel crypto works with traditional crypto?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;From security engineers‚Äîto software developers, we‚Äôre here to share this practical security development knowledge with you. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;üí° From the defender‚Äôs point of view, the crypto wallet‚Äôs attack surface is enormous. &lt;strong&gt;But from the attacker‚Äôs point of view, it‚Äôs not so difficult to combine 3-4 flaws, especially if the crypto wallet‚Äôs code is open-sourced.&lt;/strong&gt; So, let‚Äôs explore specific security flaws and their synergies.&lt;/p&gt;

&lt;p&gt;Click on the picture below to get lots of examples and practical advice on the risks and threats of crypto wallets, design concerns, and implementation issues. ‚á≤&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.cossacklabs.com/blog/crypto-wallets-security/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NRis-rOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/64e3xqxwu2cteloeh2in.png" width="688" height="476"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Follow &lt;a href="https://twitter.com/cossacklabs"&gt;@Cossack Labs&lt;/a&gt; for more updates!üòäüîê&lt;br&gt;&lt;br&gt;
&lt;/p&gt;
&lt;br&gt;&lt;br&gt;
    &lt;br&gt;

</description>
      <category>cryptography</category>
      <category>cryptocurrency</category>
      <category>appsec</category>
      <category>datasecurity</category>
    </item>
    <item>
      <title>Manage webhooks at scale with AWS Serverless</title>
      <author>Pubudu Jayawardana</author>
      <pubDate>Wed, 15 Dec 2021 18:31:37 +0000</pubDate>
      <link>https://dev.to/aws-builders/manage-webhooks-at-scale-with-aws-serverless-fof</link>
      <guid>https://dev.to/aws-builders/manage-webhooks-at-scale-with-aws-serverless-fof</guid>
      <description>&lt;p&gt;Webhooks are still a preferred choice of many organizations to communicate with 3rd party services. Since webhook calls are event-driven, building a webhook management system with Serverless is a great choice. In this post, I am going to discuss how to build such a webhook management system with AWS Serverless.&lt;/p&gt;

&lt;p&gt;In an Application Tracking Systems (ATS), whenever a candidate related event occurs (ex: candidate created, applied for a job, candidate state changed, etc), it might need to call to a registered webhook.&lt;/p&gt;

&lt;p&gt;There are 3 parts to this implementation.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Webhook registration.&lt;/li&gt;
&lt;li&gt;Webhook call for the given candidate event.&lt;/li&gt;
&lt;li&gt;View webhook call history.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#architecture"&gt;
  &lt;/a&gt;
  Architecture
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Phx8EI-Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yx1l6s821r8zkq9ftxeq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Phx8EI-Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yx1l6s821r8zkq9ftxeq.png" alt="Architecture - Webhook Management System" width="880" height="291"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;State Machine&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8tK-gtnX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/95iuua2jeupolc4sa86e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8tK-gtnX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/95iuua2jeupolc4sa86e.png" alt="State machine - Webhook Management System" width="839" height="953"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#webhook-registration"&gt;
  &lt;/a&gt;
  Webhook Registration
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;There is an API exposed in the API gateway which proxy to a lambda function (RegisterWebhookFunction).&lt;/li&gt;
&lt;li&gt;This API accepts companyId, URL, and the eventType (ex: candidate.created).&lt;/li&gt;
&lt;li&gt;This lambda function generates a hash token which will be used to validate the incoming webhook call. These data will be saved in a DynamoDB table and the generated hash token will be returned as the response.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#call-webhook"&gt;
  &lt;/a&gt;
  Call webhook
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;To simulate 'candidate.create' event, I use an API endpoint, which accepts companyId and other candidate's profile data.&lt;/li&gt;
&lt;li&gt;This data will be received by the &lt;strong&gt;CreateCandidate&lt;/strong&gt; lambda function and data will be saved to the same DyanamoDB table.&lt;/li&gt;
&lt;li&gt;As you see, it is not required to use the API endpoint to create the candidate, but the only thing matters here is to add the candidate data to the DynamoDB table.&lt;/li&gt;
&lt;li&gt;Once the candidate data is saved in the DynamoDB table, the &lt;strong&gt;TriggerResourceCreated&lt;/strong&gt; function will be executed using DynamoDB Streams.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TriggerResourceCreated&lt;/strong&gt; function has a filter in place for the DynamoDB stream so it checks the eventName and the type of the resource. In this example, it checks if the eventName is "INSERT" and the resource type is "candidate". If so, the lambda function is executed and an event will be published to the Event Bridge Event Bus.&lt;/li&gt;
&lt;li&gt;There is a Step Function configured to be executed based on an EventBridge Rule. EventBridge event's detail object will be the input data for the Step Function execution.&lt;/li&gt;
&lt;/ol&gt;

&lt;h5&gt;
  &lt;a href="#within-the-step-function"&gt;
  &lt;/a&gt;
  Within the Step Function
&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;In the input of the step function, only the companyId, eventType and resourceType (ex: candidate) and resourceId (ex: candidateId) included.&lt;/li&gt;
&lt;li&gt;First, Step Function uses DynamoDB integration to get webhook by companyId and eventType.&lt;/li&gt;
&lt;li&gt;If the webhook exists, the data goes into a transform state, else, the execution will be skipped.&lt;/li&gt;
&lt;li&gt;Once the webhook data is transformed, the next step is to fetch resource data given the resourceId and resourceType. For that, the &lt;strong&gt;FetchResourceData&lt;/strong&gt; lambda function is used.&lt;/li&gt;
&lt;li&gt;If the resource data does not exist, execution is set as failed.&lt;/li&gt;
&lt;li&gt;If the resource data exists, the &lt;strong&gt;CreateWebhookCall&lt;/strong&gt; lambda function is triggered to prepare the webhook call. This will create a record in the DynamoDB table with the webhook payload and the validation token with the status 'pending'.&lt;/li&gt;
&lt;li&gt;Then those resource data along with the webhook data sent to an SQS queue.&lt;/li&gt;
&lt;li&gt;CallWebhook function will consume this SQS queue to call the webhooks with the resource data in the payload. Here, a verification token is also included to verify the webhook call authenticity from the external end. For this, the hash token generated when registering the webhook will be used.&lt;/li&gt;
&lt;li&gt;In the state machine, this step is set up with retries enabled, so it will retry 3 times if an error occurred. Also, there will be a 1 minute wait time between each retry.&lt;/li&gt;
&lt;li&gt;If the webhook call was unsuccessful even after all the retries, the state execution will be notified using the &lt;strong&gt;sendTaskFailure&lt;/strong&gt; callback along with some additional data about why this has failed.&lt;/li&gt;
&lt;li&gt;If the webhook call is successful, the state execution will be notified using the &lt;strong&gt;sendTaskSuccess&lt;/strong&gt; callback.&lt;/li&gt;
&lt;li&gt;In either case, in the next step, the Step function has a DynamoDB integration to update the webhook call data with its status (as the success/failed) and the additional information from the webhook call.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#get-webhook-call-history"&gt;
  &lt;/a&gt;
  Get webhook call history
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;An API endpoint is provided to proxy to a lambda function to fetch data from the DynamoDB table for a specific companyId.&lt;/li&gt;
&lt;li&gt;A list of all the webhook calls made will be returned.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#how-to-set-up"&gt;
  &lt;/a&gt;
  How to set up
&lt;/h2&gt;

&lt;p&gt;You can set this up in your own AWS account using AWS SAM. Also, to test/demo the application, I have included a single-page app built with VueJS (in the frontend directory).&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Source code for this application is available at &lt;a href="https://github.com/pubudusj/webhook_management"&gt;https://github.com/pubudusj/webhook_management&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;To set up backend, run &lt;code&gt;sam build &amp;amp;&amp;amp; sam deploy -g&lt;/code&gt; within the backend directory.&lt;/li&gt;
&lt;li&gt;Once the backend is set up, copy the ApiBaseUrl parameter and copy it to the frontend directory's .env file as the value of &lt;code&gt;VUE_APP_API_BASE_URL&lt;/code&gt; env variable.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;npm run serve&lt;/code&gt; to test this in your local machine or &lt;code&gt;run run build --production&lt;/code&gt; to output the build.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;You can see this functionality in action at &lt;a href="https://webhooks.pubudu.dev"&gt;https://webhooks.pubudu.dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can create a webhook providing a URL and a companyId. Then create a user for the same companyId. Then if you search the history with the same companyId, you will see a record with 'pending' status. If you search again, you can see the status has changed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt; Since the retry is in place for the failed webhook calls, it will take about 2,3 minutes to set the webhook call as failed. Success ones will be updated almost instantly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt; Webhook call can be verified matching the &lt;code&gt;token&lt;/code&gt; value in the payload with the output of &lt;code&gt;hmacSHA256(candidateId + createdAt, signingToken)&lt;/code&gt;. Here singingToken is the hash that generated when creating the webhook.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-pointslessons-learned"&gt;
  &lt;/a&gt;
  Key points/Lessons learned
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Here I used DynamoDB single table design. So, there will be a lot of events generated into the DynamoDB stream. Luckily, with the recent feature of filtering streaming data including the DynamoDB Streams, now lambda can only use filtered events based on a specific pattern. (Previously, this has to be handled within the Lambda function).&lt;/li&gt;
&lt;li&gt;In the step function's DynamoDB integration, GetItem integration returns data with all the data type keys. There is no way to filter them out within Step Function unless you know the exact data and object structure. So, here I had to use a lambda function to fetch data from DynamoDB instead of the direct integration.&lt;/li&gt;
&lt;li&gt;Since this system relies on the external webhook URL availability, the retries are used within the Step Function. Setting up retries and waiting time between the retries are quite easy.&lt;/li&gt;
&lt;li&gt;Here I used Step Functions Workflow Studio to create and export the state machine.&lt;/li&gt;
&lt;li&gt;For the SF-DynamoDB integrations, I used native optimized integration instead of the new SDK integration. Both should give the same performance.&lt;/li&gt;
&lt;li&gt;For demo purposes, I created the event bus within the same stack, however, in a real scenario, this can be a common event bus shared by other services.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#feedbacks-are-welcome"&gt;
  &lt;/a&gt;
  Feedbacks are welcome
&lt;/h2&gt;

&lt;p&gt;Please try this and let me know your thoughts.&lt;/p&gt;

&lt;p&gt;Keep building! Keep sharing!&lt;/p&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
      <category>showdev</category>
      <category>stepfunctions</category>
    </item>
    <item>
      <title>How to SSH Properly</title>
      <author>Halyna </author>
      <pubDate>Wed, 15 Dec 2021 18:27:03 +0000</pubDate>
      <link>https://dev.to/goteleport/how-to-ssh-properly-4eg2</link>
      <guid>https://dev.to/goteleport/how-to-ssh-properly-4eg2</guid>
      <description>&lt;p&gt;&lt;strong&gt;Gus Luxton&lt;/strong&gt; for &lt;a href="//www.goteleport.com"&gt;Teleport&lt;/a&gt;&lt;br&gt;
Originally published at &lt;a href="https://goteleport.com/?utm_campaign=eg&amp;amp;utm_medium=partner&amp;amp;utm_source=devto"&gt;goteleport.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n9t3k2dM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://goteleport.com/blog/images/2020/how-to-ssh-properly-header.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n9t3k2dM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://goteleport.com/blog/images/2020/how-to-ssh-properly-header.png" alt="SSH best practices" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#ssh-best-practices"&gt;
  &lt;/a&gt;
  SSH Best Practices
&lt;/h2&gt;

&lt;p&gt;There‚Äôs no denying that  &lt;a href="https://www.openssh.com/"&gt;SSH&lt;/a&gt;  is the  &lt;em&gt;de facto&lt;/em&gt;  tool for *nix server administration. It‚Äôs far from perfect, but it was designed with security in mind and there‚Äôs been a huge amount of tooling written over the years to make it easier to use. In addition, many popular products and just about every server deployment system integrates with SSH somehow. It is universally supported across pretty much all architectures and distributions, from Raspberry Pis all the way up to massive supercomputer clusters.&lt;/p&gt;

&lt;p&gt;SSH is a powerful tool which often grants a lot of access to anyone using it to log into a server. In this post, I‚Äôm going to talk about a few different ways that you can easily improve the security of your SSH model without needing to deploy a new application or make any huge changes to user experience.&lt;/p&gt;

&lt;p&gt;In essence, this blog post is a collection of  &lt;strong&gt;industry best practices to SSH security&lt;/strong&gt;, and it‚Äôs written with OpenSSH users in mind.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#ssh-certificates"&gt;
  &lt;/a&gt;
  SSH certificates
&lt;/h2&gt;

&lt;p&gt;Most people can agree that using public key authentication for SSH is generally better than using passwords. Nobody ever types in a private key, so it can‚Äôt be keylogged or observed over your shoulder.  &lt;a href="https://goteleport.com/blog/ssh-key-management/"&gt;SSH keys&lt;/a&gt;  have their own issues, however.&lt;/p&gt;

&lt;p&gt;The next level up from SSH keys is  &lt;a href="https://goteleport.com/blog/ssh-certificates/"&gt;SSH certificates&lt;/a&gt;. OpenSSH has supported the use of certificates since  &lt;a href="https://www.openssh.com/txt/release-5.4"&gt;OpenSSH 5.4&lt;/a&gt;  which was released back in 2010.&lt;/p&gt;

&lt;p&gt;With SSH certificates, you generate a  &lt;a href="https://goteleport.com/blog/ssh-certificates/"&gt;certificate authority (CA)&lt;/a&gt;  and then use this to issue and cryptographically sign certificates which can authenticate users to hosts, or hosts to users. You can generate a keypair using the  &lt;code&gt;ssh-keygen&lt;/code&gt;  command, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ssh-keygen -t rsa -b 4096 -f host_ca -C host_ca
Generating public/private rsa key pair.
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in host_ca.
Your public key has been saved in host_ca.pub.
The key fingerprint is:
SHA256:tltbnMalWg+skhm+VlGLd2xHiVPozyuOPl34WypdEO0 host_ca
The key's randomart image is:
+---[RSA 4096]----+
|              +o.|
|            .+..o|
|           o.o.+ |
|          o o.= E|
|        S  o o=o |
|       ....+ = +.|
|       ..=. %.o.o|
|        *o Oo=.+.|
|       .oo=ooo+..|
+----[SHA256]-----+

$ ls -l
total 8
-rw-------. 1 gus gus 3381 Mar 19 14:30 host_ca
-rw-r--r--. 1 gus gus  737 Mar 19 14:30 host_ca.pub
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The  &lt;code&gt;host_ca&lt;/code&gt;  file is the host CA‚Äôs private key and should be protected. Don‚Äôt give it out to anyone, don‚Äôt copy it anywhere, and make sure that as few people have access to it as possible. Ideally, it should live on a machine which doesn‚Äôt allow direct access and all certificates should be issued by an automated process.&lt;/p&gt;

&lt;p&gt;In addition, it‚Äôs best practice to generate and use two separate CAs - one for signing host certificates, one for signing user certificates. This is because you don‚Äôt want the same processes that add hosts to your fleet to also be able to add users (and vice versa). Using separate CAs also means that in the event of a private key being compromised, you only need to reissue the certificates for either your hosts or your users, not both at once.&lt;/p&gt;

&lt;p&gt;As such, we‚Äôll also generate a  &lt;code&gt;user_ca&lt;/code&gt;  with this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ssh-keygen -t rsa -b 4096 -f user_ca -C user_ca
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The  &lt;code&gt;user_ca&lt;/code&gt;  file is the user CA‚Äôs private key and should also be protected in the same way as the host CA‚Äôs private key.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#issuing-host-certificates-to-authenticate-hosts-to-users"&gt;
  &lt;/a&gt;
  Issuing host certificates (to authenticate hosts to users)
&lt;/h3&gt;

&lt;p&gt;In this example, we‚Äôll generate a new host key (with no passphrase), then sign it with our CA. You can also sign the existing  &lt;a href="https://goteleport.com/blog/comparing-ssh-keys/"&gt;SSH host public key&lt;/a&gt;  if you‚Äôd prefer not to regenerate a new key by copying the file (&lt;code&gt;/etc/ssh/ssh_host_rsa_key.pub&lt;/code&gt;) from the server, signing it on your CA machine, and then copying it back.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ssh-keygen -f ssh_host_rsa_key -N '' -b 4096 -t rsa

$ ls -l
-rw------- 1 ec2-user ec2-user 3247 Mar 17 14:49 ssh_host_rsa_key
-rw-r--r-- 1 ec2-user ec2-user  764 Mar 17 14:49 ssh_host_rsa_key.pub

$ ssh-keygen -s host_ca -I host.example.com -h -n host.example.com -V +52w ssh_host_rsa_key.pub
Enter passphrase: # the passphrase used for the host CA
Signed host key ssh_host_rsa_key-cert.pub: id "host.example.com" serial 0 for host.example.com valid from 2020-03-16T15:00:00 to 2021-03-15T15:01:37

$ ls -l
-rw------- 1 ec2-user ec2-user 3247 Mar 17 14:49 ssh_host_rsa_key
-rw-r--r-- 1 ec2-user ec2-user 2369 Mar 17 14:50 ssh_host_rsa_key-cert.pub
-rw-r--r-- 1 ec2-user ec2-user  764 Mar 17 14:49 ssh_host_rsa_key.pub
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;ssh_host_rsa_key-cert.pub&lt;/code&gt;  contains the signed host certificate.&lt;/p&gt;

&lt;p&gt;Here‚Äôs an explanation of the flags used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;-s host_ca&lt;/code&gt;: specifies the filename of the CA private key that should be used for signing.&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;-I host.example.com&lt;/code&gt;: the certificate‚Äôs identity - an alphanumeric string that will identify the server. I recommend using the server‚Äôs hostname. This value can also be used to revoke a certificate in future if needed.&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;-h&lt;/code&gt;: specifies that this certificate will be a host certificate rather than a user certificate.&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;-n host.example.com&lt;/code&gt;: specifies a comma-separated list of principals that the certificate will be valid for authenticating - for host certificates, this is the hostname used to connect to the server. If you have DNS set up, you should use the server‚Äôs FQDN (for example  &lt;code&gt;host.example.com&lt;/code&gt;) here. If not, use the hostname that you will be using in an  &lt;code&gt;~/.ssh/config&lt;/code&gt;  file to connect to the server.&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;-V +52w&lt;/code&gt;: specifies the validity period of the certificate, in this case 52 weeks (one year). Certificates are valid forever by default - expiry periods for host certificates are highly recommended to encourage the adoption of a process for rotating and replacing certificates when needed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#configuring-ssh-to-use-host-certificates"&gt;
  &lt;/a&gt;
  Configuring SSH to use host certificates
&lt;/h3&gt;

&lt;p&gt;You also need to tell the server to use this new host certificate. Copy the three files you just generated to the server, store them under the  &lt;code&gt;/etc/ssh&lt;/code&gt;  directory, set the permissions to match the other files there, then add this line to your&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;  file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;HostCertificate /etc/ssh/ssh_host_rsa_key-cert.pub
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once this is done, restart  &lt;code&gt;sshd&lt;/code&gt;  with  &lt;code&gt;systemctl restart sshd&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Your server is now configured to present a certificate to anyone who connects. For your local  &lt;code&gt;ssh&lt;/code&gt;  client to make use of this (and automatically trust the host based on the certificate‚Äôs identity), you will also need to add the CA‚Äôs public key to your  &lt;code&gt;known_hosts&lt;/code&gt;  file.&lt;/p&gt;

&lt;p&gt;You can do this by taking the contents of the  &lt;code&gt;host_ca.pub&lt;/code&gt;  file, adding  &lt;code&gt;@cert-authority *.example.com&lt;/code&gt;  to the beginning, then appending the contents to  &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@cert-authority *.example.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDwiOso0Q4W+KKQ4OrZZ1o1X7g3yWcmAJtySILZSwo1GXBKgurV4jmmBN5RsHetl98QiJq64e8oKX1vGR251afalWu0w/iW9jL0isZrPrmDg/p6Cb6yKnreFEaDFocDhoiIcbUiImIWcp9PJXFOK1Lu8afdeKWJA2f6cC4lnAEq4sA/Phg4xfKMQZUFG5sQ/Gj1StjIXi2RYCQBHFDzzNm0Q5uB4hUsAYNqbnaiTI/pRtuknsgl97xK9P+rQiNfBfPQhsGeyJzT6Tup/KKlxarjkMOlFX2MUMaAj/cDrBSzvSrfOwzkqyzYGHzQhST/lWQZr4OddRszGPO4W5bRQzddUG8iC7M6U4llUxrb/H5QOkVyvnx4Dw76MA97tiZItSGzRPblU4S6HMmCVpZTwva4LLmMEEIk1lW5HcbB6AWAc0dFE0KBuusgJp9MlFkt7mZkSqnim8wdQApal+E3p13d0QZSH3b6eB3cbBcbpNmYqnmBFrNSKkEpQ8OwBnFvjjdYB7AXqQqrcqHUqfwkX8B27chDn2dwyWb3AdPMg1+j3wtVrwVqO9caeeQ1310CNHIFhIRTqnp2ECFGCCy+EDSFNZM+JStQoNO5rMOvZmecbp35XH/UJ5IHOkh9wE5TBYIeFRUYoc2jHNAuP2FM4LbEagGtP8L5gSCTXNRM1EX2gQ== host_ca
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The value  &lt;code&gt;*.example.com&lt;/code&gt;  is a pattern match, indicating that this certificate should be trusted for identifying any host which you connect to that has a domain of  &lt;code&gt;*.example.com&lt;/code&gt;  - such as  &lt;code&gt;host.example.com&lt;/code&gt;  above. This is a comma-separated list of applicable hostnames for the certificate, so if you‚Äôre using IP addresses or  &lt;a href="https://goteleport.com/blog/ssh-config/"&gt;SSH config&lt;/a&gt;  entries here, you can change this to something like  &lt;code&gt;host1,host2,host3&lt;/code&gt;  or  &lt;code&gt;1.2.3.4,1.2.3.5&lt;/code&gt;  as appropriate.&lt;/p&gt;

&lt;p&gt;Once this is configured, remove any old host key entries for  &lt;code&gt;host.example.com&lt;/code&gt;  in your  &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt;  file, and start an  &lt;code&gt;ssh&lt;/code&gt;  connection. You should be connected straight to the host without needing to trust the host key. You can check that the certificate is being presented correctly with a command like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ssh -vv host.example.com 2&amp;gt;&amp;amp;1 | grep "Server host certificate"
debug1: Server host certificate: ssh-rsa-cert-v01@openssh.com SHA256:dWi6L8k3Jvf7NAtyzd9LmFuEkygWR69tZC1NaZJ3iF4, serial 0 ID "host.example.com" CA ssh-rsa SHA256:8gVhYAAW9r2BWBwh7uXsx2yHSCjY5OPo/X3erqQi6jg valid from 2020-03-17T11:49:00 to 2021-03-16T11:50:21
debug2: Server host certificate hostname: host.example.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, you could continue by issuing host certificates for all hosts in your estate using your host CA. The benefit of doing this is twofold: you no longer need to rely on the insecure  &lt;a href="https://en.wikipedia.org/wiki/Trust_on_first_use"&gt;trust on first use (TOFU)&lt;/a&gt;  model for new hosts, and if you ever redeploy a server and therefore change the host key for a certain hostname, your new host could automatically present a signed host certificate and avoid the dreaded  &lt;code&gt;WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!&lt;/code&gt;  message.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#issuing-user-certificates-to-authenticate-users-to-hosts"&gt;
  &lt;/a&gt;
  Issuing user certificates (to authenticate users to hosts)
&lt;/h3&gt;

&lt;p&gt;In this example, we‚Äôll generate a new user key and sign it with our user CA. It‚Äôs up to you whether you use a passphrase or not.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ssh-keygen -f user-key -b 4096 -t rsa

$ ls -l
-rw-r--r--. 1 gus gus  737 Mar 19 16:33 user-key.pub
-rw-------. 1 gus gus 3369 Mar 19 16:33 user-key

$ ssh-keygen -s user_ca -I gus@goteleport.com -n ec2-user,gus -V +1d user-key.pub
Enter passphrase: # the passphrase used for the user CA
Signed user key user-key-cert.pub: id "gus@goteleport.com" serial 0 for ec2-user,gus valid from 2020-03-19T16:33:00 to 2020-03-20T16:34:54

$ ls -l
-rw-------. 1 gus gus 3369 Mar 19 16:33 user-key
-rw-r--r--. 1 gus gus 2534 Mar 19 16:34 user-key-cert.pub
-rw-r--r--. 1 gus gus  737 Mar 19 16:33 user-key.pub
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;user-key-cert.pub&lt;/code&gt;  contains the signed user certificate. You‚Äôll need both this and the private key (&lt;code&gt;user-key&lt;/code&gt;) for logging in.&lt;/p&gt;

&lt;p&gt;Here‚Äôs an explanation of the flags used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;-s user_ca&lt;/code&gt;: specifies the CA private key that should be used for signing&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;-I  gus@goteleport.com&lt;/code&gt;: the certificate‚Äôs identity, an alphanumeric string that will be visible in SSH logs when the user certificate is presented. I recommend using the email address or internal username of the user that the certificate is for - something which will allow you to uniquely identify a user. This value can also be used to revoke a certificate in future if needed.&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;-n ec2-user,gus&lt;/code&gt;: specifies a comma-separated list of principals that the certificate will be valid for authenticating, i.e. the *nix users which this certificate should be allowed to log in as. In our example, we‚Äôre giving this certificate access to both  &lt;code&gt;ec2-user&lt;/code&gt;  and  &lt;code&gt;gus&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;-V +1d&lt;/code&gt;: specifies the validity period of the certificate, in this case  &lt;code&gt;+1d&lt;/code&gt;  means 1 day. Certificates are valid forever by default, so using an expiry period is a good way to limit access appropriately and ensure that certificates can‚Äôt be used for access perpetually.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you need to see the options that a given certificate was signed with, you can use  &lt;code&gt;ssh-keygen -L&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ssh-keygen -L -f user-key-cert.pub
user-key-cert.pub:
        Type: ssh-rsa-cert-v01@openssh.com user certificate
        Public key: RSA-CERT SHA256:egWNu5cUZaqwm76zoyTtktac2jxKktj30Oi/ydrOqZ8
        Signing CA: RSA SHA256:tltbnMalWg+skhm+VlGLd2xHiVPozyuOPl34WypdEO0 (using ssh-rsa)
        Key ID: "gus@goteleport.com"
        Serial: 0
        Valid: from 2020-03-19T16:33:00 to 2020-03-20T16:34:54
        Principals: 
                ec2-user
                gus
        Critical Options: (none)
        Extensions: 
                permit-X11-forwarding
                permit-agent-forwarding
                permit-port-forwarding
                permit-pty
                permit-user-rc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#configuring-ssh-for-user-certificate-authentication"&gt;
  &lt;/a&gt;
  Configuring SSH for user certificate authentication
&lt;/h3&gt;

&lt;p&gt;Once you‚Äôve signed a certificate, you also need to tell the server that it should trust certificates signed by the user CA. To do this, copy the  &lt;code&gt;user_ca.pub&lt;/code&gt;  file to the server and store it under  &lt;code&gt;/etc/ssh&lt;/code&gt;, fix the permissions to match the other public key files in the directory, then add this line to  &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;TrustedUserCAKeys /etc/ssh/user_ca.pub
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once this is done, restart  &lt;code&gt;sshd&lt;/code&gt;  with  &lt;code&gt;systemctl restart sshd&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Your server is now configured to trust anyone who presents a certificate issued by your user CA when they connect. If you have a certificate in the same directory as your private key (specified with the  &lt;code&gt;-i&lt;/code&gt;  flag, for example  &lt;code&gt;ssh -i /home/gus/user-key  ec2-user@host.example.com&lt;/code&gt;), it will automatically be used when connecting to servers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#checking-logs"&gt;
  &lt;/a&gt;
  Checking logs
&lt;/h3&gt;

&lt;p&gt;If you look in your server‚Äôs  &lt;code&gt;sshd&lt;/code&gt;  log (for example, by running  &lt;code&gt;journalctl -u sshd&lt;/code&gt;), you will see the name of the certificate being used for authentication, along with the fingerprint of the signing CA:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sshd[14543]: Accepted publickey for ec2-user from 1.2.3.4 port 53734 ssh2: RSA-CERT ID gus@goteleport.com (serial 0) CA RSA SHA256:tltbnMalWg+skhm+VlGLd2xHiVPozyuOPl34WypdEO0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the user tries to log in as a principal (user) which they do not have permission to use (for example, their certificate grants  &lt;code&gt;ec2-user&lt;/code&gt;  but they try to use  &lt;code&gt;root&lt;/code&gt;), you‚Äôll see this error in the logs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sshd[14612]: error: key_cert_check_authority: invalid certificate
sshd[14612]: error: Certificate invalid: name is not a listed principal
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the certificate being presented has expired, you‚Äôll see this error in the logs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sshd[14240]: error: key_cert_check_authority: invalid certificate
sshd[14240]: error: Certificate invalid: expired
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One way that you could make further use of user certificates is to set up a script which will use your CA to issue a certificate to log into production servers, valid only for the next two hours. Every use of this script or process could add logs as to who requested a certificate and embed their email address into the certificate. After this is done, every time the user uses that certificate to access a server (regardless of which principal they log in as), their email address will be logged. This can provide a useful part of an audit trail.&lt;/p&gt;

&lt;p&gt;There are many other useful things you can do with SSH certificates, such as forcing a specific command to be run when presenting a certain certificate, or denying the ability to forward ports, X11 traffic or SSH agents. Take a look at  &lt;code&gt;man ssh-keygen&lt;/code&gt;  for some ideas.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enforce-the-use-of-a-bastion-host"&gt;
  &lt;/a&gt;
  Enforce the use of a bastion host
&lt;/h2&gt;

&lt;p&gt;Another way to improve your SSH security is to enforce the use of a  &lt;a href="https://goteleport.com/blog/ssh-bastion-host/"&gt;bastion host&lt;/a&gt;  - a server which is specifically designed to be the only gateway for access to your infrastructure. Lessening the size of any potential attack surface through the use of firewalls enables you to keep a better eye on who is accessing what.&lt;/p&gt;

&lt;p&gt;Switching to the use of a bastion host doesn‚Äôt have to be an arduous task, especially if you‚Äôre using SSH certificates. By setting up your local  &lt;code&gt;~/.ssh/config&lt;/code&gt;  file, you can automatically configure all connections to hosts within a certain domain to go through the bastion.&lt;/p&gt;

&lt;p&gt;Here‚Äôs a very quick example of how to force SSH access to any host in the example.com domain to be routed through a bastion host,  &lt;code&gt;bastion.example.com&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Host *.example.com
    ProxyJump bastion.example.com
    IdentityFile ~/user-key

Host bastion.example.com
    ProxyJump none
    IdentityFile ~/user-key
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To make this even simpler, if you add  &lt;code&gt;user-key&lt;/code&gt;  to your local  &lt;code&gt;ssh-agent&lt;/code&gt;  with  &lt;code&gt;ssh-add user-key&lt;/code&gt;, you can also remove the  &lt;code&gt;IdentityFile&lt;/code&gt;  entries from the SSH config file.&lt;/p&gt;

&lt;p&gt;Once you‚Äôre using the bastion host for your connections, you can use  &lt;code&gt;iptables&lt;/code&gt;  (or another *nix firewall configuration tool of your choosing) on servers behind the bastion to block all other incoming SSH connections. Here‚Äôs a rough example using  &lt;code&gt;iptables&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
$ iptables -A INPUT -p tcp --dport 22 -s &amp;lt;public IP of the bastion&amp;gt; -j ACCEPT
$ iptables -A INPUT -p tcp --dport 22 -j DROP
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It‚Äôs a good idea to leave a second SSH session connected to the bastion while running these commands so that if you inadvertently input the wrong IP address or command, you should still have working access to the bastion to fix it via the already-established connection.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-2factor-authentication-to-your-ssh-logins"&gt;
  &lt;/a&gt;
  Add 2-factor authentication to your SSH logins
&lt;/h2&gt;

&lt;p&gt;2-factor authentication makes it more difficult for bad actors to log into your systems by enforcing the need for two different ‚Äúfactors‚Äù or methods to be able to successfully authenticate.&lt;/p&gt;

&lt;p&gt;This usually comes down to needing both ‚Äúsomething you know‚Äù (like a password, or SSH certificate in our example) and ‚Äúsomething you have‚Äù (like a token from an app installed on your phone, or an SMS with a unique code). One other possibility is requiring the use of ‚Äúsomething you are‚Äù - for example a fingerprint, or your voice.&lt;/p&gt;

&lt;p&gt;In this example, we‚Äôll install the  &lt;code&gt;google-authenticator&lt;/code&gt;  &lt;a href="https://en.wikipedia.org/wiki/Pluggable_authentication_module"&gt;pluggable authentication module&lt;/a&gt;, which will require users to input a code from the Google Authenticator app on their phone in order to log in successfully. You can download the app for  &lt;a href="https://apps.apple.com/us/app/google-authenticator/id388497605"&gt;iOS here&lt;/a&gt;  and  &lt;a href="https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2"&gt;Android here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As a general note, it‚Äôs always important to consider the user experience when enforcing security measures. If your measures are too draconian then users may attempt to find ways to defeat and work around them, which will eventually reduce the overall security of your systems and lead to the creation of back doors. To give our users a reasonable experience in this example, we are only going to require 2-factor authentication to be able to log into our bastion host. Once authenticated there, users should be able to log into other hosts simply by using their valid SSH certificate. This combination should give an acceptable level of security without interfering too much with user workflows. With this in mind, however, it is always prudent and appropriate to enforce extra security measures in specific environments which contain critical production data or sensitive information.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-googleauthenticator"&gt;
  &lt;/a&gt;
  Install google-authenticator
&lt;/h3&gt;

&lt;p&gt;On RHEL/CentOS based systems, you can install the  &lt;code&gt;google-authenticator&lt;/code&gt;  module from the EPEL repository:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm # for RHEL/CentOS 7, change for other versions
$ sudo yum install google-authenticator
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For Debian/Ubuntu-based systems, this is available as the  &lt;code&gt;libpam-google-authenticator&lt;/code&gt;  package:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo apt-get install libpam-google-authenticator
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The  &lt;code&gt;google-authenticator&lt;/code&gt;  module has many options you can set  &lt;a href="https://github.com/google/google-authenticator-libpam/blob/master/man/google-authenticator.1.md"&gt;which are documented here&lt;/a&gt;. In the interest of saving time, we are going to use some sane defaults in this example: disallow reuse of the same token twice, issue time-based rather than counter-based codes, and limit the user to a maximum of three logins every 30 seconds. To set up Google 2-factor authentication with these settings, a user should run this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ google-authenticator -d -f -t -r 3 -R 30 -W
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also run  &lt;code&gt;google-authenticator&lt;/code&gt;  with no flags and answer some prompts to set up interactively if you prefer.&lt;/p&gt;

&lt;p&gt;This will output a QR code that the user can scan with the app on their phone, plus some backup codes which they can use if they lose access to the app. These codes should be stored offline in a secure location.&lt;/p&gt;

&lt;p&gt;Scan the generated QR code for your user now with the Google Authenticator app and make sure that you have a 6-digit code displayed. If you need to edit or change any settings in future, or remove the functionality completely, the configuration will be stored under  &lt;code&gt;~/.google_authenticator&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-pam-for-2factor-authentication"&gt;
  &lt;/a&gt;
  Configure PAM for 2-factor authentication
&lt;/h3&gt;

&lt;p&gt;To make the system enforce the use of these OTP (one-time password) codes, we‚Äôll first need to edit the PAM configuration for the  &lt;code&gt;sshd&lt;/code&gt;  service (&lt;code&gt;/etc/pam.d/sshd&lt;/code&gt;) and add this line to the end of the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;auth required pam_google_authenticator.so nullok
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The  &lt;code&gt;nullok&lt;/code&gt;  at the end of this line means that users who don‚Äôt have a second factor configured yet will still be allowed to log in so that they can set one up. Once you have 2-factor set up for all your users, you should remove  &lt;code&gt;nullok&lt;/code&gt;  from this line to properly enforce the use of a second factor.&lt;/p&gt;

&lt;p&gt;We also need to change the default authentication methods so that SSH won‚Äôt prompt users for a password if they don‚Äôt present a 2-factor token. These changes are also made in the  &lt;code&gt;/etc/pam.d/sshd&lt;/code&gt;  file:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  On RHEL/CentOS-based systems, comment out  &lt;code&gt;auth substack password-auth&lt;/code&gt;  by adding a  &lt;code&gt;#&lt;/code&gt;  to the beginning of the line:  &lt;code&gt;#auth substack password-auth&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  On Debian/Ubuntu-based systems, comment out  &lt;code&gt;@include common-auth&lt;/code&gt;  by adding a  &lt;code&gt;#&lt;/code&gt;  to the beginning of the line:  &lt;code&gt;#@include common-auth&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Save the  &lt;code&gt;/etc/pam.d/sshd&lt;/code&gt;  file once you‚Äôre done.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-ssh-for-2factor-authentication"&gt;
  &lt;/a&gt;
  Configure SSH for 2-factor authentication
&lt;/h3&gt;

&lt;p&gt;We also need to tell SSH to require the use of 2-factor authentication. To do this, we make a couple of changes to the  &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;  file.&lt;/p&gt;

&lt;p&gt;Firstly, we need to change  &lt;code&gt;ChallengeResponseAuthentication no&lt;/code&gt;  to  &lt;code&gt;ChallengeResponseAuthentication yes&lt;/code&gt;  to allow the use of PAM for credentials.&lt;/p&gt;

&lt;p&gt;We also need to set the list of acceptable methods for authentication by adding this line to the end of the file (or editing the line if it already exists):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;AuthenticationMethods publickey,keyboard-interactive
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This tells SSH that it should require both a public key (which we are going to be satisfying using an SSH certificate) and a keyboard-interactive authentication (which will be provided and satisfied by the  &lt;code&gt;sshd&lt;/code&gt;  PAM stack). Save the  &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;  file once you‚Äôre done.&lt;/p&gt;

&lt;p&gt;At this point, you should restart  &lt;code&gt;sshd&lt;/code&gt;  with  &lt;code&gt;systemctl restart sshd&lt;/code&gt;. Make sure to leave an SSH connection open so that you can fix any errors if you need to. Restarting SSH will leave existing connections active, but new connections may not be allowed if there is a configuration problem.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#test-it-out"&gt;
  &lt;/a&gt;
  Test it out
&lt;/h3&gt;

&lt;p&gt;Connect to your bastion host directly and you should see a prompt asking you for your 2-factor code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ssh bastion.example.com
Verification code: 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Type the code presented by your Google Authenticator app and your login should proceed normally.&lt;/p&gt;

&lt;p&gt;If you check the  &lt;code&gt;sshd&lt;/code&gt;  log with  &lt;code&gt;journalctl -u sshd&lt;/code&gt;, you should see a line indicating that your login succeeded:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Mar 23 16:51:13 ip-172-31-33-142.ec2.internal sshd[29340]: Accepted keyboard-interactive/pam for gus from 1.2.3.4 port 42622 ssh2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In conclusion, the recommended industry best practices for SSH security are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Use SSH certificates&lt;/li&gt;
&lt;li&gt;  Enforce the use of bastion hosts&lt;/li&gt;
&lt;li&gt;  Add 2-factor authentication to your SSH logins&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The methods above give practical examples of several ways in which you can improve the security of your SSH infrastructure, all while giving users the flexibility to keep using the tools they‚Äôre familiar with.&lt;/p&gt;

&lt;p&gt;This blog post was written by Gus, who works on  &lt;a href="https://goteleport.com/teleport/how-it-works/"&gt;Teleport&lt;/a&gt;, the open-source SSH access tool which implements the industry-best practices for SSH access by default, and requires minimal configuration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Related Posts&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://goteleport.com/blog/ssh-handshake-explained/"&gt;SSH Handshake Explained | What is SSH Handshake?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://goteleport.com/blog/ssh-restricted-shells/"&gt;Restricted Shell | Restricted commands for SSH&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://goteleport.com/tags/ssh/"&gt;&lt;br&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ssh</category>
      <category>opensource</category>
      <category>security</category>
    </item>
    <item>
      <title>Advent of Code 2021 Python Solution: Day 15</title>
      <author>Viper</author>
      <pubDate>Wed, 15 Dec 2021 18:16:03 +0000</pubDate>
      <link>https://dev.to/qviper/advent-of-code-2021-python-solution-day-15-1834</link>
      <guid>https://dev.to/qviper/advent-of-code-2021-python-solution-day-15-1834</guid>
      <description>&lt;p&gt;Once I failed DSA in my bachelor's degree and I never really understood Graphs and Path Finding but each year Advent of Code makes me try it once. Instead I used something easier than Dijkastra from scratch. Skimage have a way to find Minimum Cost Path&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;skimage&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;graph&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;data1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt;
&lt;span class="n"&gt;data1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data1&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;

&lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;

&lt;span class="n"&gt;cost&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MCP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fully_connected&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_costs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;starts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;

&lt;span class="n"&gt;journey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt;  &lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;traceback&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Part1: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;journey&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 5times bigger
&lt;/span&gt;&lt;span class="n"&gt;new_window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;nrow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hstack&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;new_window&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_window&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_window&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_window&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_window&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;new_window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vstack&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;nrow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nrow&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nrow&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nrow&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nrow&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new_window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;

&lt;span class="n"&gt;new_window&lt;/span&gt;&lt;span class="o"&gt;%=&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="n"&gt;new_window&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;new_window&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;

&lt;span class="n"&gt;cost&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MCP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_window&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fully_connected&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_costs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;starts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;

&lt;span class="n"&gt;journey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;new_window&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt;  &lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;traceback&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Part2: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;journey&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#why-not-read-more"&gt;
  &lt;/a&gt;
  Why not read more?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/08/01/gesture-based-visually-writing-system-using-opencv-and-python/"&gt;Gesture Based Visually Writing System Using OpenCV and Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/08/11/gesture-based-visually-writing-system-make-a-visual-user-interface/"&gt;Gesture Based Visually Writing System: Adding Visual User Interface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/08/14/gesture-based-visually-writing-system-adding-virtual-animation-new-mode-and-new-vui/"&gt;Gesture Based Visually Writing System: Adding Virtual Animationn, New Mode and New VUI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/08/21/gesture-based-visually-writing-system-add-slider-more-colors-and-optimized-code/"&gt;Gesture Based Visually Writing System: Add Slider, More Colors and Optimized OOP code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/08/29/gesture-based-visually-writing-system-web-app/"&gt;Gesture Based Visually Writing System: A Web App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/08/16/contour-based-game-break-the-bricks/"&gt;Contour Based Game: Break The Bricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/08/07/writing-a-linear-regression-class-from-scratch-using-python/"&gt;Linear Regression from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/06/05/writing-popular-machine-learning-optimizers-from-scratch-on-python/"&gt;Writing Popular ML Optimizers from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/05/30/writing-a-deep-neural-network-from-scratch-on-python/"&gt;Feed Forward Neural Network from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/06/05/convolutional-neural-networks-from-scratch-on-python/"&gt;Convolutional Neural Networks from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/05/30/image-processing-class-from-scratch-on-python/"&gt;Writing a Simple Image Processing Class from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/08/04/deploying-a-simple-rasa-chatbot-on-unity3d-project-to-make-a-chatbot-for-android-devices/"&gt;Deploying a RASA Chatbot on Android using Unity3d&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/03/04/text-classification-using-naive-bayes-scratch-to-the-framework/"&gt;Naive Bayes for text classifications: Scratch to Framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/02/25/building-ocr-for-devanagari-handwritten-character/"&gt;Simple OCR for Devanagari Handwritten Text&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>adventofcode</category>
      <category>python</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>Collective Community: How we empower developers</title>
      <author>Conor Bronsdon</author>
      <pubDate>Wed, 15 Dec 2021 18:10:22 +0000</pubDate>
      <link>https://dev.to/linearb/collective-community-how-we-empower-developers-1noc</link>
      <guid>https://dev.to/linearb/collective-community-how-we-empower-developers-1noc</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was written exclusively for &lt;a href="https://devinterrupted.com/collective-community-how-we-empower-developers/"&gt;devinterrupted.com&lt;/a&gt; by Ben Matthews&lt;/em&gt;&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
Putting employees and your community first should be a crucial priority for every organization, and it shouldn‚Äôt exist only in principle - it must exist as an actionable goal. Fostering a community within your team creates a foundation for high-performance, but it only works if you lead people-first.&lt;/p&gt;

&lt;p&gt;At Stack Overflow, the level of collaboration between engineers is a step above any other organization I have seen. It takes conscious effort on the part of leadership to foster a work environment that puts employees first. Managers should choose to put people first, because it‚Äôs the right thing to do, not just a vague claim to a cliche. &lt;/p&gt;

&lt;p&gt;Thankfully, we live in a world where the data demonstrates that caring for people first is also the economic thing to do. No one has ever done a better job because they were scared, stressed, or worried about their future; especially in jobs centered around creativity and problem solving such as software development.&lt;/p&gt;

&lt;p&gt;This commitment to people is the leadership philosophy behind Stack and helps guide our decision-making and our workplace culture. It also helped us to create Collectives‚Ñ¢ on Stack Overflow. To get there, we needed a successful engineering team and culture - here‚Äôs how we built it. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/54GeeR80VdGjiXwenLnDzc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#indicators-of-team-health"&gt;
  &lt;/a&gt;
  Indicators of team health
&lt;/h2&gt;

&lt;p&gt;Common metrics that organizations tend to follow are often a symptom of a team‚Äôs performance, but not necessarily the whole story. Velocity, predictability, bug rate, etc should be viewed as an indicator of team health, not as a goal to be achieved; sometimes the best indicators to follow are subjective, and relative to the people and teams. &lt;/p&gt;

&lt;p&gt;After all, what does success look like? If people are getting what they need, agreed upon expectations are being met, and team morale is high, that‚Äôs real success. If this kind of people-driven success is occurring, you‚Äôll start to notice that things like velocity time and predictability will naturally improve and not the other way around.&lt;/p&gt;

&lt;p&gt;For the record, predictability should never be the goal. The end goal should always be to create value for your customers and/or your community. Any team - or manager for that matter - can make predictability look good if they are making sure that they never fail a given estimate on paper, but that‚Äôs not an indicator of good product creation.&lt;/p&gt;

&lt;p&gt;If you're actually producing value, and you have a well run team, predictability will follow. It's a side effect, a symptom of good team health.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/eIkU4QOxthQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#servant-leadership"&gt;
  &lt;/a&gt;
  Servant Leadership
&lt;/h2&gt;

&lt;p&gt;At Stack Overflow, we‚Äôve had long talks about what metrics we feel provide valuable feedback and those we believe are valuable to track. Numbers are important and should not be ignored, but again, they should not be the standalone goal. Tracking the right metrics should facilitate introspection for your organization and leaders would do well to keep this in mind. If we have a bad sprint, it tends to trigger us to think, ‚Äúwhat went wrong?‚Äù and ‚Äúhow can we improve this for next time?‚Äù instead of thinking this was a failure of certain individuals.&lt;/p&gt;

&lt;p&gt;For instance, if you had a sprint where you achieved a really high velocity, you should celebrate that success. But at the same time, you should be asking yourself what led to that success. Was there a behavior that changed? Not everything is internal. Sometimes external factors, a pandemic as an apropos example, influence successful team metrics just as much as internal ones do. Remember to &lt;a href="https://devinterrupted.com/adhd-in-the-workplace-3-ways-you-can-help/"&gt;look behind the metrics to see what‚Äôs impacting team members.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As far as following specific methodologies is concerned, try not to get hung up on the little things; analysis paralysis occurs is often a huge drain on performance and focus of the team. Time spent sitting around and arguing about whether something is a three point or a four point story is not productive. Call it a four and keep moving. Good leaders should keep their developers developing, while removing any hindrances to their performance, ideally before it is even on their radar.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-a-team-and-your-product"&gt;
  &lt;/a&gt;
  Building a team &lt;em&gt;and&lt;/em&gt; your product
&lt;/h2&gt;

&lt;p&gt;If you‚Äôve been around software development long enough, I‚Äôm sure you‚Äôve had the experience of joining an organization where everything is dictated in a top-down approach. This kind of ‚Äúmy way or the highway‚Äù thinking ultimately undermines your teams and makes your organization rigid in an industry that is far more creative than some like to admit. &lt;/p&gt;

&lt;p&gt;A good manager will do their best to accommodate their teams, even if that means allowing a team to communicate or operate in a way that is not established within an organization. Recently, one of my most productive teams started to struggle after the project we were working on started to shift. A lot of the QA and code review work associated with the stories became large and unwieldy and the common practice was to have that wrapped in with the dev story. That makes sense after all, the former can‚Äôt ship without the later. Eventually we just tried separating out the more cumbersome tasks into their own stories. The immediate and biggest reaction was from folks overly invested in the metrics: we just doubled our stories and made it appear that story cycle time virtually doubled. The instinct was to say ‚Äúthis is a step backward. Undo it all,‚Äù but that would be ignoring what's going on behind the metrics: more work was getting done, and the bug count dropped. As those were saying we need to go back because the metrics showed team health was bad, my response was to just change the metrics to accurately reflect our healthier team that chose their own workflow.&lt;/p&gt;

&lt;p&gt;Adopting this mindset as a manager provides huge returns for your organization. People are happier when they are not being forced into something that doesn't fit. With team members that control how they work, on their own and especially with each other, comes higher value creation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#worklife-balance"&gt;
  &lt;/a&gt;
  Work-life Balance
&lt;/h2&gt;

&lt;p&gt;I have never met anyone that works better when they‚Äôre worried about what‚Äôs going on in their personal life. I‚Äôve found this over and over in my career as a developer and eventually a manager inspired me to &lt;a href="https://stackoverflow.blog/2020/07/01/nobody-has-to-lose-in-work-life-balance/"&gt;write about it.&lt;/a&gt; People who are under stress feel strained to come up with strong solutions and tend to generate less errors. Those people who say ‚Äúthis person just works well under pressure‚Äù are really just saying ‚ÄúThis person's performance doesn‚Äôt fold as much as others once emergencies happen.‚Äù That's a good quality for them, sure, but nothing an team should brag about; that should be embarrassing that it happened enough that some people have reputations around crises.&lt;/p&gt;

&lt;p&gt;Work-life balance is not something a company sacrifices, that‚Äôs zero sum thinking. It‚Äôs been shown time and again that the opposite is true. Providing people with things like  leave, and an investment in their mental health has more for an organization‚Äôs productivity than filling out timesheets ever will. At Stack we have a policy of unlimited sick days, no questions asked. If you need a day, we trust you to be able to take care of yourself. &lt;/p&gt;

&lt;p&gt;When you take care of people they will work better and faster - that‚Äôs also what they want to do. Regardless of the stereotypes people will often hear from naysayers who balk at the idea of unlimited sick time, the folks who just want to phone it in and game the system are the minority. So much so, that spending the effort considering how to manage the time a person takes a sick day when they aren‚Äôt sick is probably more of a time sink than how much it will happen. &lt;/p&gt;

&lt;p&gt;By choosing to be invested in your people‚Äôs health, an organization chooses to be a place that values its employees. When you avoid zero sum thinking, getting trapped in the idea that if employees are benefiting the company must be losing, you begin to realize that working with, instead of against, those you represent leads to happier people and a better bottom line. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/O873vxozamw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#we-took-all-these-leadership-principles-and-applied-them-to-collectives"&gt;
  &lt;/a&gt;
  We took all these leadership principles and applied them to Collectives
&lt;/h2&gt;

&lt;p&gt;At Stack Overflow, we‚Äôre quite a flat company. And I don‚Äôt mean this by measuring the number of levels between an engineer and the CEO (it‚Äôs 4, for the record), but people of all levels have a voice in product decisions. Engineers are heavily involved in what we build and how it is built. Being a company built for engineers and driven by engineers is a huge part of why Stack Overflow is successful. &lt;/p&gt;

&lt;p&gt;This success has allowed a beautiful community to thrive on our public platform, but we are always looking at how best we can give back to that community. How do we help our community grow? How do we make those experiences more meaningful? Those are the questions that guide us at Stack. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ÄúAnything that fosters our users‚Äô ability to help each other and to benefit from it. That's always a homerun.‚Äù - &lt;a href="https://devinterrupted.com/podcast/developer-first-culture-and-collectives-at-stack-overflow/"&gt;from the Dev Interrupted Podcast at 34:54&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With that in mind, we‚Äôve launched &lt;a href="https://stackoverflow.com/collectives-on-stack-overflow"&gt;Collectives&lt;/a&gt;, a new way for the community to interact with the maintainers of the technology they use most. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/5rRsbb75Oqg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;As &lt;a href="https://devinterrupted.com/podcast/developer-first-culture-and-collectives-at-stack-overflow/"&gt;I discussed on the Dev Interrupted Podcast&lt;/a&gt;, Collectives are dedicated spaces on Stack Overflow where you can find the resources (including questions and technical articles) and trusted answers you need, faster, by centralizing that content and connecting you with the product experts and trusted users. For instance, if you have questions about Google Go, you can get answers directly from those who help maintain the language.&lt;/p&gt;

&lt;p&gt;I am extremely proud of the work that went into this, and the work that we continue to do to make it something our users can enjoy. Like all new adventures, there is a constant feedback loop we work through to try and keep making Collectives, and Stack Overflow, a better and more welcoming place. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#it-is-still-the-stack-overflow-you-know-and-love"&gt;
  &lt;/a&gt;
  It is still the Stack Overflow you know and love
&lt;/h2&gt;

&lt;p&gt;The Beta release of Collectives was a huge success. We‚Äôve seen over 20,000 users join Collectives on Stack Overflow and start collaborating since the launch in June. That said, we know we don‚Äôt have a Collective for everyone (yet). For users that don't want to take part, or haven't found a Collective that they're excited about yet, their Stack Overflow experience is not going to change.&lt;/p&gt;

&lt;p&gt;For instance, we're not changing accepted answers, whether it comes from Google (our new partner) or not. If people don't vote for an answer, it doesn't get accepted. Content moderation will be treated the same way. Moderators will interact with content from sponsored users just like they would anyone else. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ÄúI think the most positive thing about it is that people aren't losing the site that they love, and that we're really proud of.‚Äù - &lt;a href="https://devinterrupted.com/podcast/developer-first-culture-and-collectives-at-stack-overflow/"&gt;from the Dev Interrupted Podcast at 33:22&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With our community update, organizations will be able to improve the visibility and detail of content being created around their technologies, and users will be able to find more relevant and accurate answers they can put to use solving problems while being better recognized for their contributions. Ultimately providing both organizations and users with more actionable insights. &lt;/p&gt;

&lt;p&gt;These efforts allow Slack to build better communities because after all that‚Äôs really what we do: we are in the business of building communities. &lt;/p&gt;

&lt;p&gt;Collectives do just that.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;&lt;em&gt;Starved for top-level software engineering content? Need some good tips on how to manage your team? This article is based on an episode of &lt;a href="https://devinterrupted.com/podcasts/"&gt;Dev Interrupted&lt;/a&gt; - the go-to podcast for engineering leaders.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Dev Interrupted features expert guests from around the world to explore strategy and day-to-day topics ranging from dev team metrics to accelerating delivery. With new guests every week from Google to small startups, the Dev Interrupted Podcast is a fresh look at the world of software engineering and engineering management.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devinterrupted.com/podcasts/"&gt;&lt;strong&gt;&lt;em&gt;Listen and subscribe on your streaming service of choice today.&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QHYGo-8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o8c4wxxwj3jki3xpqq2z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QHYGo-8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o8c4wxxwj3jki3xpqq2z.png" alt="https://devinterrupted.com/podcasts/" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>management</category>
      <category>leadership</category>
      <category>career</category>
    </item>
    <item>
      <title>Colorful Rain with JS</title>
      <author>Jatin Sharma</author>
      <pubDate>Wed, 15 Dec 2021 17:43:14 +0000</pubDate>
      <link>https://dev.to/j471n/colorful-rain-with-js-514j</link>
      <guid>https://dev.to/j471n/colorful-rain-with-js-514j</guid>
      <description>&lt;p&gt;In this article, we are going to build a container that generates rain by using JS. And it is a colorful rain with random colors. You can play with colors however you want. So first, let's see what are we building.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#preview"&gt;
  &lt;/a&gt;
  Preview
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p65PpJxD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/pt4KC8x.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p65PpJxD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/pt4KC8x.gif" alt="preview" width="809" height="351"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's look at the code, how we can make that work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"rain-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.rain-container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;i&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;120px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;999px&lt;/span&gt; &lt;span class="m"&gt;999px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;animate&lt;/span&gt; &lt;span class="m"&gt;5s&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;animate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-120px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100vh&lt;/span&gt; &lt;span class="err"&gt;+&lt;/span&gt; &lt;span class="m"&gt;120px&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  Javascript
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rainContainer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.rain-container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// background Colors for the raindrop&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;background&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;linear-gradient(transparent, aqua)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;linear-gradient(transparent, red)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;linear-gradient(transparent, limegreen)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;linear-gradient(transparent, white)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;linear-gradient(transparent, yellow)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// amount of raindops&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Looping and creating the raindrop then adding to the rainContainer&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//  Creating and Element&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;drop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;i&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;//   CSS Properties for raindrop&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;raindropProperties&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;positionX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;s&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;s&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
    &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="c1"&gt;//   Setting Styles for raindrop&lt;/span&gt;
  &lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;raindropProperties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;raindropProperties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;positionX&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;animationDelay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;raindropProperties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;animationDuration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;raindropProperties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;raindropProperties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;opacity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;raindropProperties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;//   Appending the raindrop in the raindrop container&lt;/span&gt;
  &lt;span class="nx"&gt;rainContainer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/j471n/embed/GRMNeZG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/j471n/pen/GRMNeZG"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--601Kx282--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://svgshare.com/i/cqh.svg" alt="codepen" width="300" height="66"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h3&gt;

&lt;p&gt;This is it. You can simply do that with this and you can also take this to the next level. If you enjoyed this article then don't forget to press ‚ù§Ô∏è. If you have any queries or suggestions don't hesitate to drop them. See you. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can extend your support by buying me a Coffee.üòäüëá&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/j471n"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GUX4imFy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/2QWo3cm.png" alt="buymecoffee" width="374" height="88"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#you-might-be-interested-in-"&gt;
  &lt;/a&gt;
  You might be interested in -
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/creative-hover-menu-with-css-513c"&gt;Creative Hover Menu with CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/typing-effect-by-using-css-50p"&gt;Typing Effect by using CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/curved-css-timeline-5ab3"&gt;Curved Timeline in CSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>The most important use Websites &amp; Tools &amp; communities for Web Developers</title>
      <author>Mahmoud EL-kariouny</author>
      <pubDate>Wed, 15 Dec 2021 17:34:28 +0000</pubDate>
      <link>https://dev.to/mahmoudessam/the-most-important-use-websites-tools-communities-for-web-developers-680</link>
      <guid>https://dev.to/mahmoudessam/the-most-important-use-websites-tools-communities-for-web-developers-680</guid>
      <description>&lt;h4&gt;
  &lt;a href="#hosting-amp-deployment"&gt;
  &lt;/a&gt;
  Hosting &amp;amp; Deployment
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Netlify &lt;/li&gt;
&lt;li&gt;Heroku&lt;/li&gt;
&lt;li&gt;Google Cloud Platform&lt;/li&gt;
&lt;li&gt;Amazon Web Services&lt;/li&gt;
&lt;li&gt;Microsoft Azure&lt;/li&gt;
&lt;li&gt;Oracle Cloud&lt;/li&gt;
&lt;li&gt;IBM Cloud&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#royaltyfree-images-amp-video"&gt;
  &lt;/a&gt;
  Royalty-Free Images &amp;amp; Video
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Unsplash&lt;/li&gt;
&lt;li&gt;Pexels&lt;/li&gt;
&lt;li&gt;Coverr&lt;/li&gt;
&lt;li&gt;Undraw&lt;/li&gt;
&lt;li&gt;Storyset&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#icons-amp-fonts"&gt;
  &lt;/a&gt;
  Icons &amp;amp; Fonts
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Google Fonts&lt;/li&gt;
&lt;li&gt;Flaticon&lt;/li&gt;
&lt;li&gt;Font Awesome&lt;/li&gt;
&lt;li&gt;Animated icons8.com&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#learning"&gt;
  &lt;/a&gt;
  Learning
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Freecodecamp&lt;/li&gt;
&lt;li&gt;Theodinproject&lt;/li&gt;
&lt;li&gt;Mem.dev&lt;/li&gt;
&lt;li&gt;smashingmagazine&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#mockup-tools"&gt;
  &lt;/a&gt;
  Mockup Tools
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Figma&lt;/li&gt;
&lt;li&gt;Zeplin&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#freelancing"&gt;
  &lt;/a&gt;
  Freelancing
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Upwork&lt;/li&gt;
&lt;li&gt;freelancer&lt;/li&gt;
&lt;li&gt;Fiverr&lt;/li&gt;
&lt;li&gt;PeoplePerHour&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#project-design-ideas"&gt;
  &lt;/a&gt;
  Project Design Ideas
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Awwwards&lt;/li&gt;
&lt;li&gt;Dribbble&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#exercises-amp-algorithms"&gt;
  &lt;/a&gt;
  Exercises &amp;amp; Algorithms
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Leetcode&lt;/li&gt;
&lt;li&gt;Exercism&lt;/li&gt;
&lt;li&gt;Codewars&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#general-tools"&gt;
  &lt;/a&gt;
  General Tools
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Emailjs&lt;/li&gt;
&lt;li&gt;Caniuse&lt;/li&gt;
&lt;li&gt;Image compressor&lt;/li&gt;
&lt;li&gt;Css-tricks&lt;/li&gt;
&lt;li&gt;free-for.dev&lt;/li&gt;
&lt;li&gt;mytemplate.xyz&lt;/li&gt;
&lt;li&gt;getavataaars.com&lt;/li&gt;
&lt;li&gt;devdocs.io&lt;/li&gt;
&lt;li&gt;drawsql.app&lt;/li&gt;
&lt;li&gt;mockaroo&lt;/li&gt;
&lt;li&gt;jsonplaceholder.typicode&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#communities"&gt;
  &lt;/a&gt;
  Communities
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;dev.to&lt;/li&gt;
&lt;li&gt;indiehackers&lt;/li&gt;
&lt;li&gt;hackernoon&lt;/li&gt;
&lt;li&gt;quora&lt;/li&gt;
&lt;li&gt;codeproject&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All the best for you :)&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Exploratory Data Analysis with Python for Beginner</title>
      <author>Danang Haris Setiawan</author>
      <pubDate>Wed, 15 Dec 2021 17:19:02 +0000</pubDate>
      <link>https://dev.to/danangharissetiawan/exploratory-data-analysis-with-python-for-beginner-13kf</link>
      <guid>https://dev.to/danangharissetiawan/exploratory-data-analysis-with-python-for-beginner-13kf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#pengenalan-library-dalam-pyhton"&gt;
  &lt;/a&gt;
  Pengenalan Library dalam Pyhton
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Memanggil library di Python&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;library_name&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;alias&lt;/span&gt;

&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt; &lt;span class="c1"&gt;# memanggil library numpy sebagai np
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Exploratory Data Analysis dengan Pandas - Part 1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Salah satu fungsi Pandas yaitu melakukan load data dari CSV atau Excel file. Syntax yang digunakan untuk melakukan operasi tersebut, yaitu:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;

&lt;span class="c1"&gt;# Membaca file CSV
&lt;/span&gt;&lt;span class="n"&gt;variable_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"file_name.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Membaca file Excel
&lt;/span&gt;&lt;span class="n"&gt;variable_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_excel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"file_name.xlsx"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Tugas Praktek 1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mengimport dataset marketplace ABC Dari order.csv dan disimpan ke dalam dataframe Bernama order_df.&lt;/p&gt;

&lt;p&gt;NOTE: dataset ‚Üí&lt;a href="https://storage.googleapis.com/dqlab-dataset/order.csv"&gt;https://storage.googleapis.com/dqlab-dataset/order.csv&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;

&lt;span class="n"&gt;order_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://storage.googleapis.com/dqlab-dataset/order.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#inspeksi-struktur-data-frame"&gt;
  &lt;/a&gt;
  Inspeksi struktur data frame
&lt;/h3&gt;

&lt;p&gt;Setelah melakukan proses loading dataframe ke dalam Python. Hal selanjutnya sebelum memulai analisis tentunya mengerti struktur data set tersebut. Sehingga langkah selanjutnya dari pre - analisis biasanya dilakukan untuk:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Melihat struktur dataframe&lt;/li&gt;
&lt;li&gt;Melihat preview data dari dataframe tersebut&lt;/li&gt;
&lt;li&gt;Membuat summary data sederhana dari dataset.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Melihat struktur kolom dan baris dari data frame&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hal pertama dalam mengerti struktur dari data frame adalah informasi mengenai beberapa size dari data frame yang akan digunakan termasuk berapa jumlah kolom dan jumlah baris data frame tersebut.&lt;/p&gt;

&lt;p&gt;untuk mengatasi hal tersebut bisa menggunakan fungsi berikut:&lt;/p&gt;

&lt;p&gt;Mengembalikan tuple yang mewakili dimensi dataframe.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;nama_dataframe&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; pd.DataFrame&lt;span class="o"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;'col1'&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;1, 2], &lt;span class="s1"&gt;'col2'&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;3, 4]&lt;span class="o"&gt;})&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; df.shape
&lt;span class="o"&gt;(&lt;/span&gt;2, 2&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; pd.DataFrame&lt;span class="o"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;'col1'&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;1, 2], &lt;span class="s1"&gt;'col2'&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;3, 4],
...                    &lt;span class="s1"&gt;'col3'&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;5, 6]&lt;span class="o"&gt;})&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; df.shape
&lt;span class="o"&gt;(&lt;/span&gt;2, 3&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;[x]  &lt;strong&gt;Tugas praktek 2&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;order dataframe dengan menuliskan sintax python untuk melihat struktur dari order_df dengan menggunakan fungsi shape&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;

&lt;span class="n"&gt;order_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://storage.googleapis.com/dqlab-dataset/order.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Melihat preview data dari dataframe&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Untuk mendapatkan gambaran dari konten dataframe tersebut. Kita dapat menggunakan fungsi head dan tail, dengan syntax:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;head()&lt;/code&gt; ‚áí mengembalikan &lt;strong&gt;&lt;em&gt;n&lt;/em&gt;&lt;/strong&gt; baris pertama untuk objek berdasarkan posisi. Ini berguna untuk menguji dengan cepat apakah objek anda memiliki tipe data yang tepat di dalamnya. default 5 baris.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tail()&lt;/code&gt; ‚áí mengembalikan &lt;strong&gt;&lt;em&gt;n&lt;/em&gt;&lt;/strong&gt; baris terakhir dari objek berdasarkan posisi. Ini berguna untuk memverifikasi data dengan cepet, misalnya, setelah menyortir atau menambahkan baris. default 5 baris.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Menampilkan konten teratas dari [nama_dataframe]
# untuk sejumlah bilangan bulat [jumlah_data]
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;name_dataframe&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jumlah_data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# Menampilkan konten terbawah dari [nama_dataframe]
# untuk sejumlah bilangan bulat [jumlah_baris]
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;name_dataframe&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jumlah_data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;[x]  &lt;strong&gt;Tugas praktek 3&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cek bagaimana contoh data dari dataframe tersebut, dengan fungsi &lt;code&gt;head()&lt;/code&gt; dengan &lt;strong&gt;limit 10 baris&lt;/strong&gt;!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;

&lt;span class="n"&gt;order_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://storage.googleapis.com/dqlab-dataset/order.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Statistik Deskriptif dari DataFrame - part 1&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Statistik deskriptif atau summary dalam Python - Pandas, dapat diperoleh dengan menggunakan fungsi &lt;code&gt;describe()&lt;/code&gt;, yaitu:&lt;/p&gt;

&lt;p&gt;ref: &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.describe.html"&gt;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.describe.html&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;name_dataframe&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; data_df.describe&lt;span class="o"&gt;()&lt;/span&gt;

data_df.describe&lt;span class="o"&gt;()&lt;/span&gt;
CustomerID         Age  Annual Income &lt;span class="o"&gt;(&lt;/span&gt;k&lt;span class="nv"&gt;$)&lt;/span&gt;  Spending Score &lt;span class="o"&gt;(&lt;/span&gt;1-100&lt;span class="o"&gt;)&lt;/span&gt;
count  200.000000  200.000000          200.000000              200.000000
mean   100.500000   38.850000           60.560000               50.200000
std     57.879185   13.969007           26.264721               25.823522
min      1.000000   18.000000           15.000000                1.000000
25%     50.750000   28.750000           41.500000               34.750000
50%    100.500000   36.000000           61.500000               50.000000
75%    150.250000   49.000000           78.000000               73.000000
max    200.000000   70.000000          137.000000               99.000000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fungsi &lt;em&gt;describe&lt;/em&gt; dapat memberikan informasi mengenai &lt;a href="https://en.wikipedia.org/wiki/Expected_value"&gt;nilai rataan,&lt;/a&gt; &lt;a href="https://id.wikipedia.org/wiki/Simpangan_baku"&gt;standar deviasi&lt;/a&gt; dan &lt;a href="https://id.wikipedia.org/wiki/Jangkauan_interkuartil"&gt;IQR (interquartile range)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ketentuan umum:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Secara umum fungsi &lt;code&gt;describe()&lt;/code&gt; akan secara otomatis mengabaikan kolom &lt;em&gt;category&lt;/em&gt; dan hanya memberikan summary statistik untuk kolom berjenis numerik.&lt;/li&gt;
&lt;li&gt;Kita perlu menambahkan argument bernama &lt;code&gt;include="all"&lt;/code&gt; untuk mendapatkan summary statistik atau statistik deskriptif dari kolom numerik dan karakter.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;contoh:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;name_dataframe&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"all"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; data_df.describe&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;include&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'all'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
CustomerID   Genre         Age  Annual Income &lt;span class="o"&gt;(&lt;/span&gt;k&lt;span class="nv"&gt;$)&lt;/span&gt;  Spending Score &lt;span class="o"&gt;(&lt;/span&gt;1-100&lt;span class="o"&gt;)&lt;/span&gt;
count   200.000000     200  200.000000          200.000000              200.000000
unique         NaN       2         NaN                 NaN                     NaN
top            NaN  Female         NaN                 NaN                     NaN
freq           NaN     112         NaN                 NaN                     NaN
mean    100.500000     NaN   38.850000           60.560000               50.200000
std      57.879185     NaN   13.969007           26.264721               25.823522
min       1.000000     NaN   18.000000           15.000000                1.000000
25%      50.750000     NaN   28.750000           41.500000               34.750000
50%     100.500000     NaN   36.000000           61.500000               50.000000
75%     150.250000     NaN   49.000000           78.000000               73.000000
max     200.000000     NaN   70.000000          137.000000               99.000000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Statistik Deskriptif dari DataFrame - part 2&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jika ingin mendapatkan summary dari kolom yang tidak benilai angka, maka dapat menambahkan command &lt;code&gt;include=['object']&lt;/code&gt;pada &lt;code&gt;describe()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nilai_skor_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'object'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; data_df.describe&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;include&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="s1"&gt;'object'&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt;
Genre
count      200
unique       2
top     Female
freq       112
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Statistik Deskriptif dari DataFrame - part 3&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Selanjutnya, untuk mencari rataan dari suatu data dari dataframe, dapat menggunakan syntax &lt;code&gt;[mean]&lt;/code&gt;[&lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.mean.html"&gt;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.mean.html&lt;/a&gt;], &lt;code&gt;[median]&lt;/code&gt;[&lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.median.html"&gt;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.median.html&lt;/a&gt;], dan &lt;code&gt;[mode]&lt;/code&gt;[&lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.mode.html"&gt;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.mode.html&lt;/a&gt;] dari Pandas.&lt;/p&gt;

&lt;p&gt;wikipedia:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;mean ‚Üí &lt;a href="https://en.wikipedia.org/wiki/Mean"&gt;https://en.wikipedia.org/wiki/Mean&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;median ‚Üí &lt;a href="https://id.wikipedia.org/wiki/Median"&gt;https://id.wikipedia.org/wiki/Median&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;mode ‚Üí &lt;a href="https://id.wikipedia.org/wiki/Modus_(statistika)"&gt;https://id.wikipedia.org/wiki/Modus_(statistika)&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;nama_dataframe&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="s"&gt;"nama_kolom"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;nama_dataframe&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="s"&gt;"nama_kolom"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;nama_dataframe&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="s"&gt;"nama_kolom"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; data_df.loc[:, &lt;span class="s2"&gt;"Age"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.mean&lt;span class="o"&gt;()&lt;/span&gt;
38.85
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; data_df.loc[:, &lt;span class="s2"&gt;"Age"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.median&lt;span class="o"&gt;()&lt;/span&gt;
36.0
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; data_df.loc[:, &lt;span class="s2"&gt;"Age"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.mode&lt;span class="o"&gt;()&lt;/span&gt;
0    32
dtype: int64
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;[x]  &lt;strong&gt;Tugas praktek 4&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;NOTE: dataset ‚Üí &lt;a href="https://storage.googleapis.com/dqlab-dataset/order.csv"&gt;https://storage.googleapis.com/dqlab-dataset/order.csv&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;summary bulanan dari segi kuantitas, harga, freight value, dan weight&lt;/li&gt;
&lt;li&gt;Medain dari total pembelian konsumen per transaksi kolom price
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;

&lt;span class="n"&gt;order_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://storage.googleapis.com/dqlab-dataset/order.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# summary bulanan dari segi kuantitas, harga frright value, dan weight
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="c1"&gt;# Median dari total pembelian konsumen per transaksi kolom price
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="s"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Exploratory Data Analysis dengan Pandas - Part 2&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mengenal dan membuat distribusi data dengan Histogram&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Histogram merupakan salah satu cara untuk mengidentifikasi sebaran distribusi dari data. Histogram adalah grafik yang berisi ringkasan dari sebaran (dispersi atau variasi) suatu data. Pada histogram, tidak ada jarak antara batang/bar dari grafik. Hal ini dikarenakan bahwa titik data kelas bisa muncul dimana saja didaerah cakupan grafik. Sedangkan ketinggian bar sesuai dengan frekuensi atau frekuensi relatif jumlah data di kelas. Semakin tinggi bar, semakin tinggi frekuensi data. Semakin rendah bar, semakin rendah frekuensi data.&lt;/p&gt;

&lt;p&gt;syntax umum:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;nama_dataframe&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="s"&gt;"nama_kolom"&lt;/span&gt;&lt;span class="p"&gt;]].&lt;/span&gt;&lt;span class="n"&gt;hist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;bins&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;jumlah_bin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nama_kolom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nilai_alpha&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tuple_ukuran_gambar&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;bins&lt;/strong&gt;: jumlah bins dalam histogram yang akan digunakan. Jika tidak didefinisikan jumlahbins, maka fungsi akan secara default menentukan jumlah bins sebanya 10.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;by&lt;/strong&gt;: nama kolom di DataFrame untuk di groub by. (valuenya berupa nama column di dataframe tersebut)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;alpha&lt;/strong&gt;: nilai_alpha untuk menentukan opacity dari plot di histogram. (value berupa range 0.0 - 1.0, dimana semakin kecil akan semakin kecil opacitynya)&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;figsize&lt;/strong&gt;: tuple_ukuran_gambar yang digunakan untuk menentukan ukuran dari plot histogram. Contoh: &lt;code&gt;figsize=(10, 12)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[x]  &lt;strong&gt;Tugas praktek 5&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Buat histogram &lt;strong&gt;price&lt;/strong&gt; dengan &lt;strong&gt;bins=10.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;

&lt;span class="n"&gt;order_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"order.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="s"&gt;'price'&lt;/span&gt;&lt;span class="p"&gt;]].&lt;/span&gt;&lt;span class="n"&gt;hist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;bins&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xlabelsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ylabelsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Standar Deviasi dan Varians pada Pandas&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Varians dan standar deviasi juga merupakan suatu ukuran dispersi atau variasi. Standar deviasi merupakan ukuran dispersi yang paling banyak dipakai. Hal ini mungkin karena standar deviasi merupakan suatu ukuran yang sama dengan satuan ukuran data asalnya. Sedangkan varians memiliki satuan kuadrat dari data asalnya (misalnya cm^2).&lt;/p&gt;

&lt;p&gt;Syntaz dari standar deviasi dan varians pada Pandas:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;name_dataframe&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="s"&gt;"nama_kolom"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;nama_dataframe&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="s"&gt;"nama_kolom"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Contoh:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; shop_df.loc[:, &lt;span class="s2"&gt;"Annual Income (k&lt;/span&gt;&lt;span class="nv"&gt;$)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.std&lt;span class="o"&gt;()&lt;/span&gt;
26.264721165271244
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; shop_df.loc[:, &lt;span class="s2"&gt;"Annual Income (k&lt;/span&gt;&lt;span class="nv"&gt;$)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.var&lt;span class="o"&gt;()&lt;/span&gt;
689.8355778894472
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;[x]  &lt;strong&gt;Tugas praktek 6&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tampilkan data persebaran dari product_weight_gram!&lt;/p&gt;

&lt;p&gt;NOTE: data ‚Üí &lt;a href="https://storage.googleapis.com/dqlab-dataset/order.csv"&gt;https://storage.googleapis.com/dqlab-dataset/order.csv&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;
&lt;span class="n"&gt;order_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://storage.googleapis.com/dqlab-dataset/order.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Standar variasi kolom product_weight_gram
&lt;/span&gt;&lt;span class="n"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="s"&gt;"product_weight_gram"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# Varians kolom product_weight_gram
&lt;/span&gt;&lt;span class="n"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="s"&gt;"product_weight_gram"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Menemukan Outliers Menggunakan Pandas&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Outliers merupakan data observasi yang muncul dengan nilai-nilai ekstrim. Yang dimaksud dengan nilai-nilai ekstrim dalam observasi adalah nilai yang jauh atau beda sama sekali dengan sebagian besar nilai lain dalam kelompoknya.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2ie5PIkx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/v1/3%201%20Exploratory%20Data%20Analysis%20with%20Python%20for%20Begi%20e4b182c396c34c00ad247083a0d0fe19/outlier.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2ie5PIkx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/v1/3%201%20Exploratory%20Data%20Analysis%20with%20Python%20for%20Begi%20e4b182c396c34c00ad247083a0d0fe19/outlier.png" alt="3%201%20Exploratory%20Data%20Analysis%20with%20Python%20for%20Begi%20e4b182c396c34c00ad247083a0d0fe19/outlier.png" width="" height=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pada umumnya, outliers dapat ditentukan dengan metric IQR (interquartile range).&lt;/p&gt;

&lt;p&gt;Rumus dasar dari IQR: Q3 - Q1. Dan data suatu observasi dapat dikatakan outliers jika memenuhi kedua syarat dibawah ini:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data &amp;lt; Q1 - 1.5 * IQR&lt;/li&gt;
&lt;li&gt;data &amp;gt; Q3 + 1.5 * IQR&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Syntax python:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;Q1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nama_dataframe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;quartile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Q3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nama_dataframe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;quartile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.75&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;IQR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Q3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Q1&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IQR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Contoh:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Q1 &lt;span class="o"&gt;=&lt;/span&gt; shopping_df[[&lt;span class="s2"&gt;"Annual Income (k&lt;/span&gt;&lt;span class="nv"&gt;$)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;.quantile&lt;span class="o"&gt;(&lt;/span&gt;0.25&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Q3 &lt;span class="o"&gt;=&lt;/span&gt; shopping_df[[&lt;span class="s2"&gt;"Annual Income (k&lt;/span&gt;&lt;span class="nv"&gt;$)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;.quantile&lt;span class="o"&gt;(&lt;/span&gt;0.75&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; IQR &lt;span class="o"&gt;=&lt;/span&gt; Q3 - Q1
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; IQR
Annual Income &lt;span class="o"&gt;(&lt;/span&gt;k&lt;span class="nv"&gt;$)&lt;/span&gt;    36.5
dtype: float64
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;jika sudah memiliki skor IQR, selanjutnya menentukan Outliers. Kode di bawah in akan memberikan output dengan beberapa nilai True atau False. Titik data di mana terdapat False yang berarti nilai-nilai ini valid sendagkan True menunjukkan adanya Ourtliers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;shopping_df &amp;lt; &lt;span class="o"&gt;(&lt;/span&gt;Q1 - 1.5 &lt;span class="k"&gt;*&lt;/span&gt; IQR&lt;span class="o"&gt;))&lt;/span&gt; | &lt;span class="o"&gt;(&lt;/span&gt;shopping_df &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;Q3 + 1.5 &lt;span class="k"&gt;*&lt;/span&gt; IQR&lt;span class="o"&gt;))&lt;/span&gt;

&amp;lt;stdin&amp;gt;:1: FutureWarning: Automatic reindexing on DataFrame vs Series comparisons is deprecated and will raise ValueError &lt;span class="k"&gt;in &lt;/span&gt;a future version.  Do &lt;span class="sb"&gt;`&lt;/span&gt;left, right &lt;span class="o"&gt;=&lt;/span&gt; left.align&lt;span class="o"&gt;(&lt;/span&gt;right, &lt;span class="nv"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1, &lt;span class="nv"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;False&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt; before e.g. &lt;span class="sb"&gt;`&lt;/span&gt;left &lt;span class="o"&gt;==&lt;/span&gt; right&lt;span class="sb"&gt;`&lt;/span&gt;
&amp;lt;stdin&amp;gt;:1: FutureWarning: Automatic reindexing on DataFrame vs Series comparisons is deprecated and will raise ValueError &lt;span class="k"&gt;in &lt;/span&gt;a future version.  Do &lt;span class="sb"&gt;`&lt;/span&gt;left, right &lt;span class="o"&gt;=&lt;/span&gt; left.align&lt;span class="o"&gt;(&lt;/span&gt;right, &lt;span class="nv"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1, &lt;span class="nv"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;False&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt; before e.g. &lt;span class="sb"&gt;`&lt;/span&gt;left &lt;span class="o"&gt;==&lt;/span&gt; right&lt;span class="sb"&gt;`&lt;/span&gt;

Age  Annual Income &lt;span class="o"&gt;(&lt;/span&gt;k&lt;span class="nv"&gt;$)&lt;/span&gt;  CustomerID  Genre  Spending Score &lt;span class="o"&gt;(&lt;/span&gt;1-100&lt;span class="o"&gt;)&lt;/span&gt;
0    False               False       False  False                   False
1    False               False       False  False                   False
2    False               False       False  False                   False
3    False               False       False  False                   False
4    False               False       False  False                   False
..     ...                 ...         ...    ...                     ...
195  False               False       False  False                   False
196  False               False       False  False                   False
197  False               False       False  False                   False
198  False                True       False  False                   False
199  False                True       False  False                   False
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;[x]  &lt;strong&gt;Tugas Praktek 7&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Menentukan batas IQR untuk menentukan outliers pada kolom &lt;strong&gt;product_weight_gram&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;NOTE: data ‚Üí &lt;a href="https://storage.googleapis.com/dqlab-dataset/order.csv"&gt;https://storage.googleapis.com/dqlab-dataset/order.csv&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;import pandas as pd
order_df &lt;span class="o"&gt;=&lt;/span&gt; pd.read_csv&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"https://storage.googleapis.com/dqlab-dataset/order.csv"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# Hitung quartile 1&lt;/span&gt;
Q1 &lt;span class="o"&gt;=&lt;/span&gt; order_df[[&lt;span class="s2"&gt;"product_weight_gram"&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;.quantile&lt;span class="o"&gt;(&lt;/span&gt;0.25&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# Hitung quartile 3&lt;/span&gt;
Q3 &lt;span class="o"&gt;=&lt;/span&gt; order_df[[&lt;span class="s2"&gt;"product_weight_gram"&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;.quantile&lt;span class="o"&gt;(&lt;/span&gt;0.75&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# Hitung inter quartile range dan cetak ke console&lt;/span&gt;
IQR &lt;span class="o"&gt;=&lt;/span&gt; Q3 - Q1
print&lt;span class="o"&gt;(&lt;/span&gt;IQR&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Rename Kolom Data Frame&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mengganti nama kolom pada Pandas dapat dilakukan dengan 2 cara:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Menggunakan nama kolom
2. Menggunakan indeks kolom
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Rename menggunakan nama kolom&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;nama_dataframe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"column_name_before"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"column_name_after"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;contoh penggunaan:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;nilai_skor_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"Age"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Umur"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="sb"&gt;``&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endraw&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;Rename&lt;/span&gt; &lt;span class="n"&gt;menggunakan&lt;/span&gt; &lt;span class="n"&gt;indeks&lt;/span&gt; &lt;span class="n"&gt;kolom&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;

&lt;span class="n"&gt;syntax&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;raw&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="sb"&gt;``&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="n"&gt;nama_dataframe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;no_of_column&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"column_name_after"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;contoh penggunaan:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;nilai_skor_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Umur"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;[x]  &lt;strong&gt;Tugas praktek 8&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cobalah untuk mengubah kolom freight_value menjadi shipping_cost dalam data frame order_df, dengan menggunakan fungsi &lt;code&gt;rename()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;DataFrame = &lt;a href="https://storage.googleapis.com/dqlab-dataset/order.csv"&gt;https://storage.googleapis.com/dqlab-dataset/order.csv&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;
&lt;span class="n"&gt;order_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://storage.googleapis.com/dqlab-dataset/order.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Ganti nama kolom freight_value menjadi shipping_cost
&lt;/span&gt;&lt;span class="n"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"freight_value"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"shipping_cost"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;.groupby menggunakan Pandas&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kegunaan &lt;code&gt;.groupby&lt;/code&gt; adalah mencari summary dari data frame dengan menggunakan &lt;strong&gt;aggregate&lt;/strong&gt; dari kolom tertentu.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;contoh penggunaan:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Diberikan dataset bernama &lt;strong&gt;df&lt;/strong&gt; seperti gambar di bawah ini!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xByae0nZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/v1/3%201%20Exploratory%20Data%20Analysis%20with%20Python%20for%20Begi%20e4b182c396c34c00ad247083a0d0fe19/contoh_df.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xByae0nZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/v1/3%201%20Exploratory%20Data%20Analysis%20with%20Python%20for%20Begi%20e4b182c396c34c00ad247083a0d0fe19/contoh_df.png" alt="3%201%20Exploratory%20Data%20Analysis%20with%20Python%20for%20Begi%20e4b182c396c34c00ad247083a0d0fe19/contoh_df.png" width="" height=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Penggunaan groupby:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; shopping_data[&lt;span class="s2"&gt;"Age"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.groupby&lt;span class="o"&gt;([&lt;/span&gt;shopping_data[&lt;span class="s2"&gt;"Genre"&lt;/span&gt;&lt;span class="o"&gt;]])&lt;/span&gt;.mean&lt;span class="o"&gt;()&lt;/span&gt;
Genre
Female    38.098214
Male      39.806818
Name: Age, dtype: float64
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Penjelasan: Komputasi di atas menggunakan kolom "&lt;strong&gt;Genre&lt;/strong&gt;" sebagai &lt;em&gt;aggregate&lt;/em&gt; dan kemudian menghitung mean dari kolom "&lt;strong&gt;Age&lt;/strong&gt;" pada tiap-tiap aggregate tersebut.&lt;/p&gt;

&lt;p&gt;Contoh lainnya:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; order_df[&lt;span class="s2"&gt;"freight_value"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.groupby&lt;span class="o"&gt;([&lt;/span&gt;order_df[&lt;span class="s2"&gt;"product_category_name"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;, order_df[&lt;span class="s2"&gt;"order_status"&lt;/span&gt;&lt;span class="o"&gt;]])&lt;/span&gt;.sum&lt;span class="o"&gt;()&lt;/span&gt;
product_category_name  order_status
    automotive             canceled          2212000
                           delivered       640559000
                           invoiced          2909000
                           processing        4152000
                           shipped           9012000
    beauty                 canceled          4089000
                           delivered       626722000
                           invoiced          3132000
                           processing        3016000
                           shipped           7613000
                           unavailable        186000
    electronics            approved            10000
                           canceled          3993000
                           delivered       638651000
                           invoiced          3823000
                           processing        3462000
                           shipped           8280000
                           unavailable        194000
    fashion                canceled          3582000
                           delivered       635846000
                           invoiced          3951000
                           processing        3434000
                           shipped           7192000
                           unavailable         53000
    gadget                 approved            53000
                           canceled          3294000
                           delivered       634502000
                           invoiced          1787000
                           processing        4236000
                           shipped           6386000
    sports                 canceled          3634000
                           delivered       633185000
                           invoiced          2652000
                           processing        3396000
                           shipped           6758000
                           unavailable        207000
    toys                   canceled          3381000
                           delivered       645547000
                           invoiced          3584000
                           processing        3518000
                           shipped           6627000
    utilities              approved            39000
                           canceled          2537000
                           delivered       633463000
                           invoiced          1494000
                           processing        3544000
                           shipped           6068000
Name: freight_value, dtype: int64
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Penjelasan: Komputasi di atas menggunakan kolom '&lt;strong&gt;product_category_name&lt;/strong&gt;', dan '&lt;strong&gt;order_status&lt;/strong&gt;' sebagai &lt;em&gt;aggregate&lt;/em&gt; dan kemudian menggunakan menghitung sum dari kolom "&lt;strong&gt;freight_value&lt;/strong&gt;" pada tiap-tiap aggregate tersebut.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[x]  &lt;strong&gt;Tugas praktek 9&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cobalah untuk mencari rata rata dari &lt;strong&gt;price&lt;/strong&gt; per &lt;strong&gt;payment_type&lt;/strong&gt; dari dataset &lt;strong&gt;order_df!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;NOTE: dataset ‚Üí &lt;a href="https://storage.googleapis.com/dqlab-dataset/order.csv"&gt;https://storage.googleapis.com/dqlab-dataset/order.csv&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;

&lt;span class="n"&gt;order_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"[https://storage.googleapis.com/dqlab-dataset/order.csv](https://storage.googleapis.com/dqlab-dataset/order.csv)"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;rata_rata&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"payment_type"&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rata_rata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Sorting Menggunakan Pandas&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sorting adalah sebuah metode mengurutkan data berdasarkan syarat kolom tertentu, dan biasanya digunakan untuk melihat nilai maximum dan minimum dari dataset. Library Pandas sendiri menyediakan fungsi sorting sebagai fundamental dari exploratory data analysis.&lt;/p&gt;

&lt;p&gt;Syntax untuk operasi sorting pada Pandas:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;nama_dataframe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"nama_kolom"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Contoh:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; shopping_data.sort_values&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Age"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
         CustomerID   Genre  Age  Annual Income &lt;span class="o"&gt;(&lt;/span&gt;k&lt;span class="nv"&gt;$)&lt;/span&gt;  Spending Score &lt;span class="o"&gt;(&lt;/span&gt;1-100&lt;span class="o"&gt;)&lt;/span&gt;
    114         115  Female   18                  65                      48
    91           92    Male   18                  59                      41
    65           66    Male   18                  48                      59
    33           34    Male   18                  33                      92
    0             1    Male   19                  15                      39
    ..          ...     ...  ...                 ...                     ...
    90           91  Female   68                  59                      55
    108         109    Male   68                  63                      43
    57           58    Male   69                  44                      46
    70           71    Male   70                  49                      55
    60           61    Male   70                  46                      56
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fungsi tersebut akan secara default mengurutkan secara ascending (dimulai dari nilai terkecil). Untuk dapat mengurutkan secara descending (dimulai dari nilai terbesar). dapat menggunakan properti tambahan:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;nama_dataframe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"nama_kolom"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ascending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Contoh:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; shopping_data.sort_values&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Age"&lt;/span&gt;, &lt;span class="nv"&gt;ascending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;False&lt;span class="o"&gt;)&lt;/span&gt;
         CustomerID   Genre  Age  Annual Income &lt;span class="o"&gt;(&lt;/span&gt;k&lt;span class="nv"&gt;$)&lt;/span&gt;  Spending Score &lt;span class="o"&gt;(&lt;/span&gt;1-100&lt;span class="o"&gt;)&lt;/span&gt;
    70           71    Male   70                  49                      55
    60           61    Male   70                  46                      56
    57           58    Male   69                  44                      46
    90           91  Female   68                  59                      55
    67           68  Female   68                  48                      48
    ..          ...     ...  ...                 ...                     ...
    0             1    Male   19                  15                      39
    33           34    Male   18                  33                      92
    65           66    Male   18                  48                      59
    91           92    Male   18                  59                      41
    114         115  Female   18                  65                      48
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fungsi sorting di Pandas juga dapat dilakukan menggunakan lebih dari satu kolom sebagai syarat. Contohnya pada skenario dibawah, akan mencoba mengaplikasikan fungsi Sorting menggunakan Age dan Score sekaligus:&lt;/p&gt;

&lt;p&gt;Syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;nama_dataframe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"nama_kolom1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"nama_kolom2"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;ascending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Contoh penggunaan:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; shopping_data.sort_values&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="s2"&gt;"Age"&lt;/span&gt;, &lt;span class="s2"&gt;"Spending Score (1-100)"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;, &lt;span class="nv"&gt;ascending&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;False, True]&lt;span class="o"&gt;)&lt;/span&gt;
         CustomerID   Genre  Age  Annual Income &lt;span class="o"&gt;(&lt;/span&gt;k&lt;span class="nv"&gt;$)&lt;/span&gt;  Spending Score &lt;span class="o"&gt;(&lt;/span&gt;1-100&lt;span class="o"&gt;)&lt;/span&gt;
    70           71    Male   70                  49                      55
    60           61    Male   70                  46                      56
    57           58    Male   69                  44                      46
    108         109    Male   68                  63                      43
    67           68  Female   68                  48                      48
    ..          ...     ...  ...                 ...                     ...
    68           69    Male   19                  48                      59
    91           92    Male   18                  59                      41
    114         115  Female   18                  65                      48
    65           66    Male   18                  48                      59
    33           34    Male   18                  33                      92

&lt;span class="o"&gt;[&lt;/span&gt;200 rows x 5 columns]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;[x]  &lt;strong&gt;Tugas Praktek 10&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cari berapa harga maximum pembelian customer di dataset &lt;strong&gt;order_df&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;NOTE: dataset ‚Üí &lt;a href="https://storage.googleapis.com/dqlab-dataset/order.csv"&gt;https://storage.googleapis.com/dqlab-dataset/order.csv&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;
&lt;span class="n"&gt;order_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://storage.googleapis.com/dqlab-dataset/order.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Hitung harga maksimum pembelian customer
&lt;/span&gt;&lt;span class="n"&gt;sort_harga&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ascending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sort_harga&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;[x]  &lt;strong&gt;Tugas Proyek Mini&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mengolah beberapa data penjualan dari dataset order.csv?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Median price yang dibayar customer dari masing-masing metode pembayaran.&lt;/li&gt;
&lt;li&gt;Tentukan metode pembayaran yang memiliki basket size (rataan median price) terbesar.&lt;/li&gt;
&lt;li&gt;Ubah freight_value menjadi shipping_cost dan cari shipping_cost termahal dari data penjualan tersebut menggunakan sort.&lt;/li&gt;
&lt;li&gt;Untuk product_category_name, berapa rata-rata weight produk tersebut dan standar deviasi mana yang terkecil dari weight tersebut,&lt;/li&gt;
&lt;li&gt;Buat histogram quantity penjualan dari dataset tersebut untuk melihat persebaran quantity penjualan tersebut dengan bins = 5 dan figsize= (4,5)
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;pd&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;matplotlib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;plt&lt;/span&gt;

&lt;span class="nx"&gt;order_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://storage.googleapis.com/dqlab-dataset/order.csv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;Median&lt;/span&gt; &lt;span class="nx"&gt;price&lt;/span&gt; &lt;span class="nx"&gt;yang&lt;/span&gt; &lt;span class="nx"&gt;dibayar&lt;/span&gt; &lt;span class="nx"&gt;customer&lt;/span&gt; &lt;span class="nx"&gt;dari&lt;/span&gt; &lt;span class="nx"&gt;masing&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;masing&lt;/span&gt; &lt;span class="nx"&gt;metode&lt;/span&gt; &lt;span class="nx"&gt;pembayaran&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 
&lt;span class="nx"&gt;median_price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;price&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;payment_type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="nx"&gt;median&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;median_price&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;Ubah&lt;/span&gt; &lt;span class="nx"&gt;freight_value&lt;/span&gt; &lt;span class="nx"&gt;menjadi&lt;/span&gt; &lt;span class="nx"&gt;shipping_cost&lt;/span&gt; &lt;span class="nx"&gt;dan&lt;/span&gt; &lt;span class="nx"&gt;cari&lt;/span&gt; &lt;span class="nx"&gt;shipping_cost&lt;/span&gt; 
&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;termahal&lt;/span&gt; &lt;span class="nx"&gt;dari&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="nx"&gt;penjualan&lt;/span&gt; &lt;span class="nx"&gt;tersebut&lt;/span&gt; &lt;span class="nx"&gt;menggunakan&lt;/span&gt; &lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;freight_value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;shipping_cost&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;sort_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;shipping_cost&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ascending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sort_value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;Untuk&lt;/span&gt; &lt;span class="nx"&gt;product_category_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;berapa&lt;/span&gt;  &lt;span class="nx"&gt;rata&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;rata&lt;/span&gt; &lt;span class="nx"&gt;weight&lt;/span&gt; &lt;span class="nx"&gt;produk&lt;/span&gt; &lt;span class="nx"&gt;tersebut&lt;/span&gt; 
&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;dan&lt;/span&gt; &lt;span class="nx"&gt;standar&lt;/span&gt; &lt;span class="nx"&gt;deviasi&lt;/span&gt; &lt;span class="nx"&gt;mana&lt;/span&gt; &lt;span class="nx"&gt;yang&lt;/span&gt; &lt;span class="nx"&gt;terkecil&lt;/span&gt; &lt;span class="nx"&gt;dari&lt;/span&gt; &lt;span class="nx"&gt;weight&lt;/span&gt; &lt;span class="nx"&gt;tersebut&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="nx"&gt;mean_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;product_weight_gram&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;product_category_name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="nx"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mean_value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="nx"&gt;std_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;product_weight_gram&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;product_category_name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="nx"&gt;std&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;std_value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;Buat&lt;/span&gt; &lt;span class="nx"&gt;histogram&lt;/span&gt; &lt;span class="nx"&gt;quantity&lt;/span&gt; &lt;span class="nx"&gt;penjualan&lt;/span&gt; &lt;span class="nx"&gt;dari&lt;/span&gt; &lt;span class="nx"&gt;dataset&lt;/span&gt; &lt;span class="nx"&gt;tersebutuntuk&lt;/span&gt; &lt;span class="nx"&gt;melihat&lt;/span&gt; &lt;span class="nx"&gt;persebaran&lt;/span&gt; &lt;span class="nx"&gt;quantity&lt;/span&gt; 
&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;penjualan&lt;/span&gt; &lt;span class="nx"&gt;tersebut&lt;/span&gt; &lt;span class="nx"&gt;dengan&lt;/span&gt; &lt;span class="nx"&gt;bins&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="nx"&gt;dan&lt;/span&gt; &lt;span class="nx"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;order_df&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;quantity&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]].&lt;/span&gt;&lt;span class="nx"&gt;hist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;bins&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>python</category>
      <category>datascience</category>
      <category>analyst</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The many meanings of $ in Svelte</title>
      <author>Geoff Rich</author>
      <pubDate>Wed, 15 Dec 2021 17:18:16 +0000</pubDate>
      <link>https://dev.to/geoffrich/the-many-meanings-of-in-svelte-1k8l</link>
      <guid>https://dev.to/geoffrich/the-many-meanings-of-in-svelte-1k8l</guid>
      <description>&lt;p&gt;If you're writing Svelte code, you'll notice that &lt;code&gt;$&lt;/code&gt; can have multiple different meanings, depending on the context. For example, look at this code snippet ‚Äî &lt;code&gt;$&lt;/code&gt; is used in three different ways! If you're new to Svelte, or to JavaScript in general, it can be confusing to keep them all straight.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Total: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;$count&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this post, I'll show all the different meanings that &lt;code&gt;$&lt;/code&gt; can have in Svelte.&lt;/p&gt;

&lt;p&gt;First, let's start with the primary uses of &lt;code&gt;$&lt;/code&gt; in Svelte: reactive statements and reactive stores.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reactive-statements"&gt;
  &lt;/a&gt;
  Reactive statements
&lt;/h2&gt;

&lt;p&gt;In a Svelte component, prefixing a statement with &lt;code&gt;$:&lt;/code&gt; marks the statement as &lt;em&gt;reactive&lt;/em&gt; ‚Äî it will run whenever the variables referenced in that statement change. Here's a classic example. Whenever &lt;code&gt;num&lt;/code&gt; changes, &lt;code&gt;doubled&lt;/code&gt; is automatically set to the correct value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;doubled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Num: {num}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Doubled: {doubled}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;on:click=&lt;/span&gt;&lt;span class="s"&gt;{()&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; num++}&amp;gt;
    Increment
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's also possible to have an entire reactive block that runs when the variables referenced inside it change.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;doubled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;doubled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;doubled&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a core concept of Svelte. If you're not familiar with it, go review the section of the Svelte tutorial on &lt;a href="https://svelte.dev/tutorial/reactive-declarations"&gt;reactivity&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is valid JavaScript, since it uses the obscure &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label"&gt;label&lt;/a&gt; syntax. However, its reactive properties are unique to Svelte, and specifically to Svelte components. Using this syntax inside a regular &lt;code&gt;.js&lt;/code&gt; file will not make a statement reactive.&lt;/p&gt;

&lt;p&gt;Since this is a valid label, you can exit a reactive block early the same way you'd &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label#using_a_labeled_break_statement"&gt;break out of a regular label&lt;/a&gt;. This example will keep track of the number of evens, but only until the counter reaches 10. At that point, &lt;code&gt;break $&lt;/code&gt; will exit the block early.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;evens&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nl"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;evens&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;on:click=&lt;/span&gt;&lt;span class="s"&gt;{()&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; (counter++)}&amp;gt;
    Increment
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
    Counter: {counter}, evens before 10: {evens}
&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You won't need to use this very often, but it's useful to know about.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#accessing-store-values"&gt;
  &lt;/a&gt;
  Accessing store values
&lt;/h2&gt;

&lt;p&gt;The other primary use of &lt;code&gt;$&lt;/code&gt; you'll see in a Svelte component is when referencing the current value of a store. In Svelte, a &lt;a href="https://svelte.dev/tutorial/writable-stores"&gt;store&lt;/a&gt; is any object with a &lt;code&gt;subscribe&lt;/code&gt; method that allows you to be notified when the value of the store changes. It's especially useful when you want a reactive value to be accessible from muliple components in your application, since the store can live outside of a Svelte component.&lt;/p&gt;

&lt;p&gt;If you wanted to get the current value of a store in a Svelte component and have it automatically update when the store changes, you could do something like the following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./count&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onDestroy&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;_count&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;unsubscribe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="nx"&gt;onDestroy&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;unsubscribe&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code subscribes to the &lt;code&gt;count&lt;/code&gt; store, updates the local &lt;code&gt;_count&lt;/code&gt; variable when the store changes, and unsubscribe from the store when the component is destroyed. However, this is a lot of boilerplate.&lt;/p&gt;

&lt;p&gt;Thankfully, Svelte has a special syntax to make this sort of thing easy. Inside a Svelte component, we can reference the current value of the &lt;code&gt;count&lt;/code&gt; store with the variable &lt;code&gt;$count&lt;/code&gt;. By using this syntax, Svelte will take care of subscribing and unsubscribing to the store for us.&lt;/p&gt;

&lt;p&gt;As with reactive declarations, this syntax only works inside a Svelte component. In regular JS files, you'll need to subscribe to the store manually.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#comparing-reactive-statements-and-reactive-stores"&gt;
  &lt;/a&gt;
  Comparing reactive statements and reactive stores
&lt;/h3&gt;

&lt;p&gt;Those are the two primary ways &lt;code&gt;$&lt;/code&gt; is used inside Svelte. If the dollar sign has a colon after it (&lt;code&gt;$:&lt;/code&gt;), then it indicates a &lt;a href="https://svelte.dev/docs#3_%24_marks_a_statement_as_reactive"&gt;reactive statement&lt;/a&gt;. If it is at the start of a variable name inside a Svelte component, then it's &lt;a href="https://svelte.dev/docs#4_Prefix_stores_with_%24_to_access_their_values"&gt;accessing a reactive store value&lt;/a&gt;. In general, when you see &lt;code&gt;$&lt;/code&gt; in a Svelte component, you should think &lt;em&gt;reactivity&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Note that there are often times where you'll want to combine the two. Referencing a store value in the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; block with &lt;code&gt;$&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; mean that value will automatically be updated when the store changes. In the following example, &lt;code&gt;doubledCount&lt;/code&gt; will not be automatically updated unless you mark that assignment as reactive with &lt;code&gt;$:&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="c1"&gt;// count is a store&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./count&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// doesn't keep value updated&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;doubledCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$count&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// keeps value updated&lt;/span&gt;
    &lt;span class="nl"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;doubledCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$count&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This could seem unintuitive ‚Äî didn't I just say that a store is reactive? Yes, but it's only reactive in that &lt;em&gt;we can be notified any time the value changes&lt;/em&gt;. If we want to derive a value from it, we still need to mark that statement as reactive as well.&lt;/p&gt;

&lt;p&gt;This is a little difficult to wrap your head around, so see this alternate explanation in &lt;a href="https://www.reddit.com/r/sveltejs/comments/r6j9r4/i_still_dont_get_this_and_need_an_eli5/hmy13ud/"&gt;r/sveltejs&lt;/a&gt; if you're still having trouble.&lt;/p&gt;

&lt;p&gt;However, those are not the only times you'll see &lt;code&gt;$&lt;/code&gt; in a Svelte component. &lt;code&gt;$&lt;/code&gt; is used in other ways, both in Svelte and in vanilla JavaScript in general. Let's go over a few more examples.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#template-literals"&gt;
  &lt;/a&gt;
  Template literals
&lt;/h2&gt;

&lt;p&gt;This is not Svelte-specific, but is worth mentioning, since it's a common technique in modern JavaScript. When writing &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals"&gt;template literals&lt;/a&gt; in JavaScript, you can use &lt;code&gt;${var}&lt;/code&gt; to insert the value of a variable into the template string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;running&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;walking&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// both output "running and walking"&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; and &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// without template literals&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; and &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// with template literals&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Where this could get confusing is if you combine template literals with reactive statements and stores! Make sure you can pick out what each &lt;code&gt;$&lt;/code&gt; means in the below example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;writable&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;svelte/store&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;writable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nl"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`num is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; and the store is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;$count&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#props-restprops-and-slots"&gt;
  &lt;/a&gt;
  $$props, $$restProps, and $$slots
&lt;/h2&gt;

&lt;p&gt;These are globally-available variables inside a Svelte component. &lt;code&gt;$$props&lt;/code&gt; contains all the props passed to the component, &lt;code&gt;$$restProps&lt;/code&gt; contains all the props that were not explicitly exported by the component (which useful for wrapping native HTML elements like &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;), and &lt;code&gt;$$slots&lt;/code&gt; contains the slots passed to the component. Here, \$\$ doesn't indicate that this is a store value; it's just a naming convention.&lt;/p&gt;

&lt;p&gt;In fact, their naming mirrors how Svelte names things internally. For example, if you look at the code Svelte generates, you'll see reference to similarly-named variables like &lt;code&gt;$$self&lt;/code&gt; and &lt;code&gt;$$invalidate&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$$self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$$props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$$invalidate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;click_handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;$$invalidate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;click_handler&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;a href="https://svelte.dev/docs#Client-side_component_API"&gt;client-side component API&lt;/a&gt; also prefixes its methods with &lt;code&gt;$&lt;/code&gt; to avoid colliding with methods defined on the component instance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-derived-store"&gt;
  &lt;/a&gt;
  Creating a derived store
&lt;/h2&gt;

&lt;p&gt;When creating a &lt;a href="https://svelte.dev/docs#derived"&gt;derived store&lt;/a&gt;, it is common to prefix the values of the store in the derived callback with &lt;code&gt;$&lt;/code&gt;. You'll see this in the derived store examples in the Svelte docs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;derived&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;svelte/store&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doubled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;derived&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$a&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;$a&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is not required and does not indicate anything special ‚Äî it works the same in and out of Svelte components. It just provides an easy way to distinguish the variable in the callback (which has the updated value of the store) and the reference to the store itself.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up
&lt;/h2&gt;

&lt;p&gt;While it might seem difficult to keep track of all these at first, given enough experience you'll get the hang of it. It's most important to understand the difference between the first three examples. You're less likely to encounter the others until you reach more advanced scenarios.&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Dockside (Open Source) - Provision dev containers and staging environments with IDEs</title>
      <author>Ashley</author>
      <pubDate>Wed, 15 Dec 2021 17:03:45 +0000</pubDate>
      <link>https://dev.to/awilliams/dockside-open-source-provision-dev-containers-and-staging-environments-with-ides-2721</link>
      <guid>https://dev.to/awilliams/dockside-open-source-provision-dev-containers-and-staging-environments-with-ides-2721</guid>
      <description>&lt;p&gt;We're excited to announce the open-source release of Dockside, a development tool for provisioning lightweight access-controlled development containers, staging environments and sandboxes - aka ‚Äòdevtainers‚Äô - on local machines, on-premises (raw metal or VM) or in the cloud.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href="https://github.com/newsnowlabs/dockside"&gt;https://github.com/newsnowlabs/dockside&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dockside is a tool for provisioning lightweight access-controlled IDEs, staging environments and sandboxes - aka ‚Äòdevtainers‚Äô - on local machines, on-premises (raw metal or VM) or in the cloud.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who is Dockside for?&lt;/strong&gt;&lt;br&gt;
‚Üí Developers: Work from anywhere (it is browser-based) in a clone of your production environment. Switch between/hand over tasks instantly. No more laborious branch switching, or committing code before it‚Äôs ready. ‚Äògit stash‚Äô will be a thing of the past!&lt;/p&gt;

&lt;p&gt;‚Üí Code Reviewers: Access your colleagues‚Äô devtainers directly. No longer must you stare at their code wondering what it does, or waste time on setup, when their code is already running. Comment on and correct code in-place.&lt;/p&gt;

&lt;p&gt;‚Üí Product Managers, Stakeholders &amp;amp; Clients: Access always-on but secure staged versions of the dev team‚Äôs work and works-in-progress, from wherever you are in the world.&lt;/p&gt;

&lt;p&gt;Dockside has been built in-house by the team at NewsNow - one of the most popular news websites in the UK - and has been relied upon over the past few years for all our daily development, product review, staging and testing needs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To learn more and try Dockside, check out&lt;/strong&gt; &lt;a href="https://github.com/newsnowlabs/dockside"&gt;https://github.com/newsnowlabs/dockside&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dockside is stable, but under active development, so any ideas, suggestions, or feedback would be gratefully appreciated. Also, if you‚Äôd like to be paid to work on Dockside, among our other projects, we‚Äôre hiring: &lt;a href="https://www.newsnow.co.uk/careers/"&gt;https://www.newsnow.co.uk/careers/&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>opensource</category>
      <category>docker</category>
      <category>ide</category>
    </item>
    <item>
      <title>What is the difference between Amazon RDS Read Replicas vs Multi AZ</title>
      <author>Vijay Patel</author>
      <pubDate>Wed, 15 Dec 2021 16:16:52 +0000</pubDate>
      <link>https://dev.to/easyawslearn/what-is-the-difference-between-amazon-rds-read-replicas-vs-multi-az-350</link>
      <guid>https://dev.to/easyawslearn/what-is-the-difference-between-amazon-rds-read-replicas-vs-multi-az-350</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-relational-database-service-rds"&gt;
  &lt;/a&gt;
  What is Relational Database Service (RDS)
&lt;/h2&gt;

&lt;p&gt;Amazon Relational Database Service (Amazon RDS) makes it easy to set up, operate, and scale a relational database in the cloud. &lt;br&gt;
It provides cost-efficient and resizable capacity while automating time-consuming administration tasks such as hardware provisioning, database setup, patching and backups. &lt;br&gt;
It frees you to focus on your applications so you can give them the fast performance, high availability, security, and compatibility they need.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Here is the full dedicated video on this topicüëáüëá&lt;/code&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=70EJ-qSBBXQ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ftvtuyYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2qljo37ti42q0k7at1ni.png" alt="Image description" width="480" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-amazon-rds-read-replicas"&gt;
  &lt;/a&gt;
  What is Amazon RDS Read Replicas?
&lt;/h2&gt;

&lt;p&gt;The read replica operates as a DB instance that allows only read-only connections. Applications connect to a read replica the same way they do to any DB instance. Amazon RDS replicates all databases in the source DB instance. The Oracle DB engine supports replica databases in mounted mode.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-amazon-rds-multi-az"&gt;
  &lt;/a&gt;
  What is Amazon RDS Multi AZ?
&lt;/h2&gt;

&lt;p&gt;RDS Multi-AZ. Amazon RDS Multi-AZ deployments provide enhanced availability for database instances within a single AWS Region. With Multi-AZ, your data is synchronously replicated to a standby instance in a different AZ.&lt;/p&gt;




&lt;p&gt;‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨ WANT TO LEARN MORE? ‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨&lt;br&gt;
Full Terraform tutorial ‚ñ∫ &lt;a href="https://bit.ly/2GwK8V2"&gt;https://bit.ly/2GwK8V2&lt;/a&gt;&lt;br&gt;
DevOps Tools, like Ansible ‚ñ∫ &lt;a href="https://bit.ly/3iASHuP"&gt;https://bit.ly/3iASHuP&lt;/a&gt;&lt;br&gt;
Docker Tutorial ‚ñ∫ &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;br&gt;
AWS Tutorial ‚ñ∫ &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;br&gt;
GCP Tutorial ‚ñ∫ &lt;a href="https://bit.ly/3mwh412"&gt;https://bit.ly/3mwh412&lt;/a&gt;&lt;br&gt;
Jenkins Tutorials ‚ñ∫ [&lt;a href="https://bit.ly/3iHnfv4"&gt;https://bit.ly/3iHnfv4&lt;/a&gt;]&lt;/p&gt;

</description>
      <category>aws</category>
      <category>database</category>
      <category>readreplica</category>
      <category>multiaz</category>
    </item>
  </channel>
</rss>
