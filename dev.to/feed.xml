<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Single Sign-on Implementation for Enterprise Applications</title>
      <author>Andrii Sulymka</author>
      <pubDate>Fri, 24 Dec 2021 15:43:30 +0000</pubDate>
      <link>https://dev.to/andriisulymka/single-sign-on-implementation-for-enterprise-applications-m5i</link>
      <guid>https://dev.to/andriisulymka/single-sign-on-implementation-for-enterprise-applications-m5i</guid>
      <description>&lt;p&gt;Companies often face difficulties while moving toward Single Sign-on (SSO) implementation. Many of them are stuck at step one, trying to figure out SSO benefits, best practices of implementation, types, protocols, and other basic stuff. I decided to clarify the meaning of Single Sign-on, share MobiDev’s experience, and even reinvent the wheel for using SSO between mobile applications in the most convenient way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Single Sign-on (SSO)&lt;/strong&gt; is a technical approach to authentication that enables a user to log in with one set of credentials to several applications and websites. The technology is based on setting up a reliable relationship between an application, known as a service provider, and an access management system. A service provider and an access management system share a certificate with identification data, which, in the case of SSO, takes the form of tokens that include email, username, or other data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In simple terms, with SSO, users don’t need to retype name and password when switching between applications.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-types-of-sso"&gt;
  &lt;/a&gt;
  WHAT ARE TYPES OF SSO?
&lt;/h2&gt;

&lt;p&gt;SSO is part of &lt;a href="https://www.techtarget.com/searchsecurity/definition/federated-identity-management"&gt;Federated Identity Management&lt;/a&gt;(FIM) architecture.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yb92pnRP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3qd4o34m5l7vse5uca1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yb92pnRP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3qd4o34m5l7vse5uca1.jpeg" alt="SSO is a Part of Federated Identity Management Architecture" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-protocols-used-for-sso"&gt;
  &lt;/a&gt;
  WHAT ARE PROTOCOLS USED FOR SSO?
&lt;/h2&gt;

&lt;p&gt;Protocols used for SSO implementation are Security Assertion Markup Language (SAML), Web Services Federation (WS-Fed), OpenID Connect (OIDC), Lightweight Directory Access Protocol (LDAP), and Kerberos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sso-benefits"&gt;
  &lt;/a&gt;
  SSO benefits
&lt;/h2&gt;

&lt;p&gt;According to Research and Markets, the global Single Sign-on Market is predicted to reach $2.2 Billion by 2027. However, companies are concerned about potential security threats associated with one click access, and they consider SSO implementation as a means to simplify access to their applications and improve user experience.&lt;/p&gt;

&lt;p&gt;SSO benefits do not end here and include the following points:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reduced password fatigue – users only have to contend with memorizing one password&lt;/li&gt;
&lt;li&gt;Efficient B2B collaboration – B2B partnerships prosper with &lt;a href="https://www.ibm.com/docs/sk/cip?topic=access-federated-sso-overview"&gt;Federated SSO&lt;/a&gt; because users easily access services provided by different companies&lt;/li&gt;
&lt;li&gt;Boosted productivity that’s formed by the means of faster log-ins&lt;/li&gt;
&lt;li&gt;High adoption rates – SSO increases the probability that users will open an app more frequently&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;strong&gt;main disadvantage&lt;/strong&gt; is that if SSO fails, users can’t access any of the related systems. As for complexity, it is considered to be a conditional downside.&lt;/p&gt;

&lt;p&gt;Security can be listed separately.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On the one hand&lt;/strong&gt;, SSO with one set of credentials means that in case of a security breach, attackers have access to the account and linked systems, applications, and data – and the attackers’ footprint within the company increases.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On the other hand&lt;/strong&gt;, SSO reduces the number of attack surfaces because users log in once each day and only use one set of credentials. A higher level of security may be achieved if you combine SSO with risk-based authentication (RBA), identify unusual behavior, and require users to pass additional verification.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sso-implementation-best-practices-for-enterprise-applications"&gt;
  &lt;/a&gt;
  SSO Implementation Best Practices for Enterprise Applications
&lt;/h2&gt;

&lt;p&gt;Is SSO hard to implement? The generalized vision of the problem is this: SSO deployment is a complex and time-consuming task for legacy solutions, but cloud-based SSO is different. Let me share our experience which will shed light on SSO in enterprise applications.&lt;/p&gt;

&lt;p&gt;Until quite recently, setting up federated SSO for native applications was a complex challenge. There were two options available for developers to display content in the apps with SSO: switch the user from an app to the system browser and then back or display an in-app webview for rendering html content directly in the app. These options are inconvenient for the user or they have security and privacy issues.&lt;/p&gt;

&lt;p&gt;The emergence of the third option – SFSafariViewController (iOS9+) and Chrome Custom Tabs (Android) add a web controller to provide all the advantages of the native system browser – this benefited developers.&lt;/p&gt;

&lt;p&gt;Our experience is related to the SSO implementation between two mobile applications built with different versions of NativeScript – &lt;strong&gt;app1&lt;/strong&gt; and &lt;strong&gt;app2&lt;/strong&gt;. But in fact, the described approach to SSO is identical for both native and cross-platform applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;App1&lt;/strong&gt; is mobile, while &lt;strong&gt;app2&lt;/strong&gt; implies the combination of mobile and web, where problems with the transition to the new version are expected to arise. The identity provider for authorization through OpenID Connect (OIDC) Client is common within applications, which facilitates the start. We have three options to choose from: WebView, System browser, and InAppBrowser.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-sso-implementation-approach-webview-with-cookie-sharing"&gt;
  &lt;/a&gt;
  1. SSO IMPLEMENTATION APPROACH: WEBVIEW WITH COOKIE SHARING
&lt;/h2&gt;

&lt;p&gt;Log in to the first application is based on &lt;a href="https://developer.android.com/reference/android/webkit/WebView"&gt;WebView&lt;/a&gt;, whereas log in the second app uses well-known – in the world of hybrid applications – &lt;a href="https://cordova.apache.org/docs/en/3.1.0/cordova/inappbrowser/inappbrowser.html"&gt;InAppBrowser&lt;/a&gt;, with Chrome Custom Tabs for Android and SafariServices/AuthenticationServices for iOS under the hood.&lt;/p&gt;

&lt;p&gt;The research revealed three accessible options to implement SSO within the prescribed conditions, though they imply the same thing for logging – WebView (sharing cookies should be envisaged).&lt;/p&gt;

&lt;p&gt;WebView is embedded in the native screen of the application (like it is an iFrame in the web), which can be perceived as the advantage of the method since the navigation during logging looks natural for the user. Animations and styles don’t stand out from the overall picture.&lt;/p&gt;

&lt;p&gt;The major issue of using WebView for logging is the delay in the callback related to the page loading. To get around that issue, developers come up with their own ideas on how to understand exactly when the login form (the web page) has been loaded and they may hide the indicator. Otherwise, it will be shown over the already loaded login screen or be hidden before the screen is loaded. The glitch can lead to problems with the review of the app submitted to the App Store. There are also problems with accessing cookies on Android, and it’s difficult to set up a common login without opening external links that use SSO.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-sso-implementation-approach-system-browser"&gt;
  &lt;/a&gt;
  2. SSO IMPLEMENTATION APPROACH: SYSTEM BROWSER
&lt;/h2&gt;

&lt;p&gt;Using a system browser may be a reliable solution, yet it implies leaving an application and opening the browser to fill out the login form. Tabs with logins remain unclosed in the browser and accumulate. However, such an approach is easy to implement because everything works the same way as on the web, and both applications will open a login form in the same environment with the same cookies that the OIDC client applies to verify the user, and with the correct setting of the server identity for both applications. In the case of the system browser, everything runs smoothly and without a delay, but isn’t comfortable for the user.&lt;/p&gt;

&lt;p&gt;Microsoft Authenticator wasn’t considered as an SSO implementation solution, since to log in, a user is supposed to leave an application, authorize in the second one, then confirm the authorization in the first application, and so on. To put it mildly, it isn’t convenient for the user, and is even worse than a system browser.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-sso-implementation-approach-inappbrowser"&gt;
  &lt;/a&gt;
  3. SSO IMPLEMENTATION APPROACH: INAPPBROWSER
&lt;/h2&gt;

&lt;p&gt;Tabs in Android and services in iOS could be customized in systems as native pop-ups with platform animations and appearance. They track redirects and are being closed if a login is entered correctly. There isn’t a problem as in the case of WebView, though the login form looks detached from the application if the design differs from the native platforms’ components. This is a recommended and safe approach to SSO implementation in mobile applications.&lt;/p&gt;

&lt;p&gt;After trial and error, we decided to opt for InAppBrowser. It has a common sandbox with cookies inside one application, so if you apply it and then open other web links in it that should login the user via SSO, which means that problems do not arise at all. But in 2 different applications, these sandboxes will be different and you need to somehow take information from one and put it in another to implement SSO between applications.&lt;/p&gt;

&lt;p&gt;For such a sharing process, we applied Keychain storage in iOS and Secure storage in Android since both of them securely store data on the device. They can isolate the store for one application or several trusted applications, yet this requires additional configuration steps in each of the mobile applications.&lt;/p&gt;

&lt;p&gt;Having configured the shared storage, we enabled data interchange between the two applications. An additional wrapper that reproduces methods of input-output in localStorage api allowed us to introduce common local storage for OIDC Client UserManager.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mobidevs-approach-to-sso-implementation"&gt;
  &lt;/a&gt;
  MobiDev’s Approach to SSO Implementation
&lt;/h2&gt;

&lt;p&gt;Implementation of these steps is enough for most applications, in which the identity provider is initially configured for SSO between applications, but since there are some difficulties with this, we had to go further to “reinvent the wheel”.&lt;/p&gt;

&lt;p&gt;Coming back to OIDC Client, I should mention that it has several different flows for login with name and password, two-factor authentication, and other things. However, SSO and session updating require the so-called code flow, which, after the user enters the credentials, returns not the session token, but the code that must be exchanged for the object with session data, namely:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Session token (sessionToken is used to access the application API)&lt;/li&gt;
&lt;li&gt;Lifetime of the token&lt;/li&gt;
&lt;li&gt;The token for refreshing the session (refreshToken for refreshing the sessionToken)&lt;/li&gt;
&lt;li&gt;Lifetime of the token&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To configure token lifetime, an identity server should be used. As usual, sessionToken lasts hours or days, and refreshToken lasts weeks or months. Long-lived refreshToken may serve for login with biometrics in the mobile app. An algorithm is as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Reading of biometrics&lt;/li&gt;
&lt;li&gt;Taking a refreshToken&lt;/li&gt;
&lt;li&gt;Obtaining of the new sessionToken&lt;/li&gt;
&lt;li&gt;Letting the user to access an application&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This token update isn’t noticed by the app user, because it doesn’t imply opening of the browser, WebView, or InAppBrowser windows – a simple update of the token is granting the user access to the application. The described method makes the login run smoothly and is used in both applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;According to the documentation, using SSO between mobile applications, either way, requires opening the browser, WebView, InAppBrowser, which will log in and, after closing, open a second application. We strived to create something more convenient and found the solution that suited everyone.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--czxVT9Jr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i8paezw3pb55t36diz62.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--czxVT9Jr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i8paezw3pb55t36diz62.jpeg" alt="MobiDev's Approach to SSO Implementation" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deep-links-and-further-actions"&gt;
  &lt;/a&gt;
  DEEP LINKS AND FURTHER ACTIONS
&lt;/h2&gt;

&lt;p&gt;The solution lies in opening one application from another via the deep link functionality (deep links send the user directly to the specific in-app location) – and then the magic happens.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;App1&lt;/strong&gt; opens the deep link, &lt;strong&gt;app2&lt;/strong&gt; is opened by using the deep link. Before opening a deep link when clicking, &lt;strong&gt;app1&lt;/strong&gt; generates a unique token and stores it in a common for both apps storage, and then inserts the same token into the deep link as a parameter and processes the click. This approach is implemented for security purposes. No one else has access to this shared storage, and it’s impossible to log in and automatically go inside another application by using a deep link from outside.&lt;/p&gt;

&lt;p&gt;A unique token that was generated includes a timestamp, which defines a period during which it is valid, username, data needed for security and verification of user data, and random things to prevent guessing.&lt;/p&gt;

&lt;p&gt;Obtaining a deep link with the token, &lt;strong&gt;app2&lt;/strong&gt; parses the token, compares it to the one in the shared storage, and then checks the user identity. The time from the creation of the token should be approximately one second. Only after this, &lt;strong&gt;app2&lt;/strong&gt; obtains a new token via refreshToken that uses biometric login of the app under the hood and redirects a user on the screen added in the deep link.&lt;/p&gt;

&lt;p&gt;This works only if &lt;strong&gt;app2&lt;/strong&gt; has a valid (not expired) refresh token and biometric login is enabled. Otherwise, users still have to enter their data manually, as if the token or the username does not match. Default SSO process with opening browser or WebView will have the same downsides. After logging in, it is still possible to send the user directly to the needed application screen.&lt;/p&gt;

&lt;p&gt;Each application will have its own settings and IDs that are unique in the system of the identity server. All changes will be made only by UI teams, and the solution will work with any identity providers that have code flow.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summing-up"&gt;
  &lt;/a&gt;
  Summing Up
&lt;/h2&gt;

&lt;p&gt;To sum up, companies are intensively investing in setting up SSO, while implementation approaches are driven by their needs. At MobiDev, we have relevant expertise and see good prospects for Single Sign-On, as even Google offers pre-integrated SSO with over 200 popular cloud applications. We have also invested time to come up with our own approach to using SSO between mobile applications.&lt;/p&gt;

&lt;p&gt;If you have any specific question regarding SSO implementation in your own project, feel free to ask!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>mobile</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to connect your Dapps to Metamask extension</title>
      <author>NerdyDave2017</author>
      <pubDate>Fri, 24 Dec 2021 15:28:18 +0000</pubDate>
      <link>https://dev.to/nerdydave2017/how-to-connect-your-dapps-to-metamask-extension-137f</link>
      <guid>https://dev.to/nerdydave2017/how-to-connect-your-dapps-to-metamask-extension-137f</guid>
      <description>&lt;p&gt;One of the most in demand technology today is blockchain technology and I will be showing an example of how to connect your frontend app to Metamask browser extension. I noticed the lack of adequate information for developers on blockchain technology as it's a relatively new space.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-metamask"&gt;
  &lt;/a&gt;
  What is Metamask
&lt;/h2&gt;

&lt;p&gt;MetaMask is a software cryptocurrency wallet used to interact with the Ethereum blockchain. It allows users to access their Ethereum wallet through a browser extension or mobile app, which can then be used to interact with decentralized applications.&lt;br&gt;
reference: &lt;a href="https://en.wikipedia.org/wiki/MetaMask"&gt;https://en.wikipedia.org/wiki/MetaMask&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#decentralized-applicationsdapps"&gt;
  &lt;/a&gt;
  Decentralized Applications(Dapps)
&lt;/h2&gt;

&lt;p&gt;A Dapp in simple language is an application that interacts with and leverages on a decentralized network such as Ethereum, Solana etc. A decentralized application (dapp) is an application built on a decentralized network that combines a smart contract and a frontend user interface. On Ethereum, smart contracts are accessible and transparent; Dapp = frontend + smart contract backend.&lt;br&gt;
reference: &lt;a href="https://ethereum.org/en/developers/docs/dapps/"&gt;https://ethereum.org/en/developers/docs/dapps/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;br&gt;
Some of the requirements include:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;HTML&lt;/li&gt;
&lt;li&gt;Some CSS(we'll be using TailwindCss)&lt;/li&gt;
&lt;li&gt;Knowledge of JavaScript&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Editor/ IDE&lt;/li&gt;
&lt;li&gt;Install Metamask browser extension&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Getting Started&lt;/strong&gt;&lt;br&gt;
Let's get going 🚀🚀🚀.&lt;br&gt;
First we create an Html file and let's name it Connect.html. Since we'll be using TailwindCss, let's head to &lt;a href="https://cdnjs.com/libraries/tailwindcss"&gt;https://cdnjs.com/libraries/tailwindcss&lt;/a&gt; and copy the very first tag and add it to our Html header. &lt;br&gt;
To make this short, we'll be writing the Javascript code in the Html file  😅😉. Bellow is the code snippet of what we'll be doing.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Web3 Metamask Login&amp;lt;/title&amp;gt;
    &amp;lt;link
      href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css"
      rel="stylesheet"
    /&amp;gt;
  &amp;lt;/head&amp;gt;

  &amp;lt;body class="flex w-screen h-screen justify-center items-center"&amp;gt;
    &amp;lt;div class="flex-col space-y-2 justify-center items-center"&amp;gt;
      &amp;lt;button
        id="loginButton"
        onclick=""
        class="mx-auto rounded-md p-2 bg-green-500 text-white"
      &amp;gt;
        Login with MetaMask
      &amp;lt;/button&amp;gt;
      &amp;lt;p id="userWallet" class="text-lg text-gray-600 my-2"&amp;gt;&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;script&amp;gt;
      window.userWalletAddress = null;
      const loginButton = document.getElementById("loginButton");
      const userWallet = document.getElementById("userWallet");

      function toggleButton() {
        if (!window.ethereum) {
          loginButton.innerText = "MetaMask is not installed";
          loginButton.classList.remove("bg-purple-500", "text-white");
          loginButton.classList.add(
            "bg-gray-500",
            "text-gray-100",
            "cursor-not-allowed"
          );
          return false;
        }

        loginButton.addEventListener("click", loginWithMetaMask);
      }

      async function loginWithMetaMask() {
        const accounts = await window.ethereum
          .request({ method: "eth_requestAccounts" })
          .catch((e) =&amp;gt; {
            console.error(e.message);
            return;
          });
        if (!accounts) {
          return;
        }

        window.userWalletAddress = accounts[0];
        userWallet.innerText = window.userWalletAddress;
        loginButton.innerText = "Sign out of MetaMask";

        loginButton.removeEventListener("click", loginWithMetaMask);
        setTimeout(() =&amp;gt; {
          loginButton.addEventListener("click", signOutOfMetaMask);
        }, 200);
      }

      function signOutOfMetaMask() {
        window.userWalletAddress = null;
        userWallet.innerText = "";
        loginButton.innerText = "Sign in with MetaMask";

        loginButton.removeEventListener("click", signOutOfMetaMask);
        setTimeout(() =&amp;gt; {
          loginButton.addEventListener("click", loginWithMetaMask);
        }, 200);
      }

      window.addEventListener("DOMContentLoaded", () =&amp;gt; {
        toggleButton();
      });
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So let's test our code. Open your html file in your browser(make sure you have Metamask extension installed).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OMEKCtQr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lffznc8ex4iqhg4zur0l.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OMEKCtQr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lffznc8ex4iqhg4zur0l.jpg" alt="connect" width="880" height="437"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After clicking the button, the Metamask window pops up;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AUNVIdiv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t59u3l7j7hpofae3krz1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AUNVIdiv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t59u3l7j7hpofae3krz1.jpg" alt="popup" width="880" height="446"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On granting permision to connect, we display the wallet address, we also replace the "Signin with Metamask" to a "Sign out of Metamask" button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w6fBM8d9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/albszxjcacab1kff55tq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w6fBM8d9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/albszxjcacab1kff55tq.jpg" alt="display address" width="880" height="439"&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This explanation above is just a simple way of connecting your frontend to Metamask 😀😁. Thanks!!! more content about blockchain coming up so click the follow button.....&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>metamask</category>
      <category>javascript</category>
      <category>dapps</category>
    </item>
    <item>
      <title>A complete AWS Architecture for Module-federated micro-frontends</title>
      <author>Antonio Lagrotteria</author>
      <pubDate>Fri, 24 Dec 2021 15:21:52 +0000</pubDate>
      <link>https://dev.to/aws-builders/a-complete-aws-architecture-for-module-federated-micro-frontends-2meg</link>
      <guid>https://dev.to/aws-builders/a-complete-aws-architecture-for-module-federated-micro-frontends-2meg</guid>
      <description>&lt;p&gt;&lt;strong&gt;Follow me on Medium to stay tuned for more articles in this area ;)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Original article: &lt;a href="https://levelup.gitconnected.com/a-complete-aws-architecture-for-module-federated-micro-frontends-a0306ba466e3"&gt;https://levelup.gitconnected.com/a-complete-aws-architecture-for-module-federated-micro-frontends-a0306ba466e3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My next series of articles presents a complete server-less architecture aiming at deploying and hosting client-side mono-repo micro-frontends on AWS, based on &lt;a href="https://webpack.js.org/concepts/module-federation/"&gt;Webpack Module Federation&lt;/a&gt; plugin and &lt;a href="https://github.com/lerna/lerna"&gt;Lerna&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All AWS resources will be provisioned via CDK, meaning that in a matter of minutes, you will get a production-ready, reliable, and scalable infrastructure deployed to your AWS account, allowing your teams to scale independently and deliver fast business iterations via their independent micro-frontends.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-architecture"&gt;
  &lt;/a&gt;
  The Architecture
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--00PwjEPH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3342/1%2AT_OrAE8h81-7u_2x5DWJIw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--00PwjEPH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3342/1%2AT_OrAE8h81-7u_2x5DWJIw.png" alt="High level architecture" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The architecture consists of 3 main parts:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Mono-repo code changes triggering specific deployment pipelines.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Deployment pipelines building and deploying bundle artifacts to target AWS resources.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Globally scalable hosting infrastructure tailored for client-side micro-frontends.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#a-bit-on-monorepo-setup"&gt;
  &lt;/a&gt;
  A bit on Mono-repo setup
&lt;/h2&gt;

&lt;p&gt;Micro-frontends are part of a mono-repo setup, aka a single repository with sub folders including independent web apps, glued together through the Webpack Module Federation plugin and Lerna. A sneak peek of repo structure can be seen below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r0VZWW2b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AWJ7j1CvzaZ9Dn5CNY4doPQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r0VZWW2b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AWJ7j1CvzaZ9Dn5CNY4doPQ.png" alt="Mono-repo structure" width="226" height="276"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are impatient, you can see how micro-frontends are represented via Module Federation systems in the below gist, which will be discussed in detail in near future.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
In a nutshell, the above code allows us to model micro-frontends as systems which can be lazily loaded as Web components in your app. The trick is to dynamically inject each micro-frontend script in the app page so that they can be remotely loaded by the host /shell app. As said, more to come in the upcoming article. For now, we will look at the 3 sub-architectures mentioned early.

&lt;h2&gt;
  &lt;a href="#monorepo-triggers"&gt;
  &lt;/a&gt;
  Mono-repo triggers
&lt;/h2&gt;

&lt;p&gt;The goal of this first step is to capture individual micro-frontend repos changes and trigger them for later use by server-less components.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NJx_SzcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A8bLIHFGWteY4F7u_OJsafA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NJx_SzcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A8bLIHFGWteY4F7u_OJsafA.png" alt="Mono-repo triggers from GitHub" width="501" height="385"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Developers push the changes to their belonging micro-frontend via Github, though the same can be accomplished for other well known versioning source platforms such as BitBucket. Via a &lt;a href="https://docs.github.com/en/developers/webhooks-and-events/webhooks/about-webhooks"&gt;Github webhook&lt;/a&gt;, changes are handled by a Lambda function exposed as Restful api via an ApiGateway. Main goal of Lambda is to associate the micro-frontend code change with their destination pipeline. A manual walkthrough of this approach can be appreciated &lt;a href="https://levelup.gitconnected.com/a-server-less-ci-cd-approach-for-mono-rep-micro-frontends-e91261bbdf69"&gt;here&lt;/a&gt;, while its CDK implementation will be part of the next article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deployment-pipeline"&gt;
  &lt;/a&gt;
  Deployment pipeline
&lt;/h2&gt;

&lt;p&gt;The goal of the second step is to make sure that individual micro-frontend repo changes trigger individual code pipelines. This encourages team independence as if only a micro-frontend is modified (e.g.: mfe-app1), we only want to trigger its related pipeline, and not all the others.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zvYLf2s1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AvQTICQ0SDtJg4VKNL4PAeg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zvYLf2s1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AvQTICQ0SDtJg4VKNL4PAeg.png" alt="Deployment CI/CD" width="656" height="592"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once a code change is associated, an AWS Code Pipeline gets started. This includes four main steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The &lt;em&gt;Code Pipeline&lt;/em&gt; itself, which manages the GitHub connection and fetches the associated GitHub source code&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;em&gt;Code Build&lt;/em&gt;, which builds the receiving source code into a build artifact. As micro-frontends are JavaScript based, they will leverage yarn to build them into a set of bundles to be used in the next step.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;em&gt;Code Deploy&lt;/em&gt;. This step takes the built bundled files from previous steps and deploys them to a single Simple Storage Service (S3). Each micro-frontend will be stored in an independent “folder” (or key), so that they can be deployed individually.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;em&gt;Code Build Cache Invalidation&lt;/em&gt;. The last step is yet another Code Build step which ensures that CloudFront cache gets invalidated every time we publish and deploy new artifacts on S3.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#hosting-infrastructure"&gt;
  &lt;/a&gt;
  Hosting infrastructure
&lt;/h2&gt;

&lt;p&gt;Last but not least, foundational AWS resources need to be provisioned. The goal of this last step is to make sure this happens with a scalable, simple yet smart and reliable architecture.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OD9y3zsJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AzK1QOLn0giIQ_85rkUEUAw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OD9y3zsJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AzK1QOLn0giIQ_85rkUEUAw.png" alt="Hosting infrastructure with S3 and Cloudfront" width="601" height="502"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With above sub-architecture, end-users will access the web application via a CloudFront distribution &lt;a href="https://aws.amazon.com/waf/"&gt;protected by WAF&lt;/a&gt; , given the micro-frontends are customer-facing optimized applications. CloudFront connects to the private S3 bucket via an &lt;a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html"&gt;OAI &lt;/a&gt;identity, ensuring data is publicly accessible only via the CDN and not directly from the bucket. CloudFront uses a &lt;a href="https://aws.amazon.com/lambda/edge/"&gt;Lambda@Edge&lt;/a&gt; function for proper dispatching towards different origins coming from the single bucket.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cdk-to-rule-them-all"&gt;
  &lt;/a&gt;
  CDK to rule them all
&lt;/h2&gt;

&lt;p&gt;All above will be provisioned via a CDK application which includes three stacks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The foundation stack. This provisions the foundational AWS resources used to host the app including S3 bucket, a Lambda@Edge function, a CloudFront distribution and various IAM policies, roles and OAI to support correct privacy and security.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The second stack is an implicit one because it gets created when provisioning the Lambda@Edge function via the CDK Experimental CloudFront API, as it has to deploy the Lambda@Edge on a specific AWS region (us-east-1 is used by default for all edge functions).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The ci/cd deploymemt stack. Its job is to provision all AWS resources associated to ApiGateway and the Code Pipeline.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;This article leaves intentionally a cliffhanger feeling as there is a lot to cover. It gives an high level overview of a de-facto server-less AWS architecture for hosting and deploying mono-repo micro-frontends based on Module Federation Webpack plugin. Following articles will deep dive in how this was achieved, so better stay tuned ;)&lt;/p&gt;

</description>
      <category>aws</category>
      <category>microfrontends</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Configuration As Code Using Amazon EC2 Systems Manager</title>
      <author>Swapnil Pawar</author>
      <pubDate>Fri, 24 Dec 2021 15:19:15 +0000</pubDate>
      <link>https://dev.to/spawar1991/configuration-as-code-using-amazon-ec2-systems-manager-3iej</link>
      <guid>https://dev.to/spawar1991/configuration-as-code-using-amazon-ec2-systems-manager-3iej</guid>
      <description>&lt;p&gt;Amazon EC2 Systems Manager (SSM) lets you configure, manage and automate your AWS and on-premises resources at scale. You can perform safe and secure operations without SSH access or bastion hosts using Systems Manager Run Command, mitigate configuration drift using Systems Manager State Manager, and create an access-controlled environment with full auditing. &lt;/p&gt;

&lt;p&gt;With SSM Documents, you can author your configurations as code and enable centralized management across accounts, enforcing best practices. Systems Manager provides a number of public documents for common management scenarios, or you can create your own document for deployment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-configuration-as-code"&gt;
  &lt;/a&gt;
  What Is Configuration as Code?
&lt;/h2&gt;

&lt;p&gt;Configuration as code is the practice of managing configuration files in a repository. Config files establish the parameters and settings for applications, operating systems, etc. By managing your config files alongside your code, you can help streamline your release pipeline.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-using-configuration-as-code"&gt;
  &lt;/a&gt;
  Benefits of Using Configuration as Code?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Scalability&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Maintaining configuration changes as code allows to edit, update and create from the central location using a consistent deployment strategy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Standardization&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When you write configuration as code, you can implement other operations like testing, scanning, and linting. Having config files reviewed and tested before they are committed ensures that changes follow your team’s standards. If you have a complex microservices architecture, this can keep your configurations stable and consistent. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Traceability&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By storing configuration as code in the repository, we get the benefit of tracking changes in code and config files. If a bug does slip in, you have the ability to trace the source of the problem. You can diff the versioned config files to see what went wrong and fix it quickly.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Configuration As Code acts as a Single Source of Truth for your build pipeline.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#other-things-you-can-do-"&gt;
  &lt;/a&gt;
  Other things you can do :
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Execute various types of scripts&lt;/em&gt; written in Python, Ruby, or PowerShell. You can also run configurations such as Ansible playbooks. You can pretty much-run anything on your instances as long as the software (e.g., Python 3.8 or Ansible) is installed on your instance and recognized by Shell on Linux and PowerShell on Windows.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Download scripts&lt;/em&gt; stored in private or public GitHub repositories, or on Amazon S3 onto your instances for execution.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Run multiple files&lt;/em&gt; by downloading a complete GitHub directory or an S3 bucket.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#use-case"&gt;
  &lt;/a&gt;
  Use Case:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Find the AWS-RunRemoteScript document for execution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On the AWS SSM console, on the navigation pane at the left, under Node Management Services, choose Run Command. Choose Run a Command, and then select the &lt;em&gt;AWS-RunRemoteScript&lt;/em&gt; document and the instances you want to execute this document on (whether a list of instances or tag-queries).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reference-the-python-playbook-located-on-github"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Reference the python playbook located on GitHub&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Enter the parameters for the &lt;em&gt;AWS-RunRemoteScript&lt;/em&gt; Document to reference the Ansible playbook.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Source Type: Location of the script – GitHub, S3. In this case, choose GitHub.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Source Info: Provides location information for accessing the content.  In this example, since the repository is private, you need to provide an access token from GitHub, the owner, repository, and the path to the python script. So we’ll download the script, which includes an example.py script file.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#run-python-script-from-private-github-repository"&gt;
  &lt;/a&gt;
  Run Python Script from private GitHub repository
&lt;/h2&gt;

&lt;p&gt;Now, I’ll show you how to execute scripts from private GitHub repositories. Let’s assume that the custom python script in this example is stored in a private GitHub repository. To access this script, you need to create a private access token on GitHub and store it in Amazon EC2 Systems Manager Parameter Store.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-create-your-github-personal-access-token"&gt;
  &lt;/a&gt;
  Step 1: Create your GitHub personal access token
&lt;/h3&gt;

&lt;p&gt;Create a personal access token for your private GitHub repo to give the Systems Manager access to the playbook. Personal API tokens are a way to provide access to systems to access information from your private GitHub repository. These tokens provide limited access to a subset of repository data as well as the ability to revoke access when needed. You can create a personal access token from the information provided here and then save the token value.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-store-the-tokens-in-parameter-store"&gt;
  &lt;/a&gt;
  Step 2: Store the tokens in Parameter Store
&lt;/h3&gt;

&lt;p&gt;After creating the personal access token, go to Parameter Store on the SSM console. On the Parameter Store page (Under Application Management), create a parameter and add the token you created on GitHub here, in the Value text box.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HfkcrL13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5olkxaflbzbmyc4f31gs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HfkcrL13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5olkxaflbzbmyc4f31gs.png" alt="AWS SSM Parameter Store" width="880" height="323"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-reference-the-python-script-located-on-github"&gt;
  &lt;/a&gt;
  Step 3: Reference the Python script located on GitHub
&lt;/h3&gt;

&lt;p&gt;Along with owner, repository, and path, we will add “tokenInfo” which refers to the example-token secure string parameter that we just created. The reference is made using the ssm-secure prefix.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e4qBWSdB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vi0ahyt0t04moc5zvlzn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e4qBWSdB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vi0ahyt0t04moc5zvlzn.png" alt="SSM GitHub Source Config" width="790" height="489"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;{&lt;br&gt;
    "owner": "spawar1991",&lt;br&gt;
    "repository": "AWS-SSM-Demos",&lt;br&gt;
    "getOptions": "branch:dev",&lt;br&gt;
    "path": "scripts/python",&lt;br&gt;
    "tokenInfo": "{{ssm-secure:&amp;lt;Parameter-Store-Parameter-Name&amp;gt;}}"&lt;br&gt;
}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Select the targets where you want to execute the script and click on the run command.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jLSfueuZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gxx066e7d46qqjccybs7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jLSfueuZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gxx066e7d46qqjccybs7.png" alt="Create Run Command Operation" width="880" height="452"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ENhhfHnK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1515ibb54uq7s0pji1l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ENhhfHnK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1515ibb54uq7s0pji1l.png" alt="Create Run Command Operation" width="880" height="472"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to write command output to the S3 bucket or Cloudwatch Logs, under the Output options section, you can mention the log group.&lt;/p&gt;

&lt;p&gt;You can also view the Run command output in the SSM console. Go to Systems Manager → NOde Management → Run Command&lt;/p&gt;

&lt;p&gt;Click on the “Command history” Tab. Open the last run command → check Targets &amp;amp; output section&lt;/p&gt;

&lt;p&gt;Now, Click on Instance Id column and you’ll be able to see the execution steps with output and error section. You can expand each section to see the output.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i2zj6hMs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yltvl3xcffkaoxmg09r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i2zj6hMs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yltvl3xcffkaoxmg09r.png" alt="Run Command History Output" width="880" height="509"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;In this, I showed you how AWS Systems Manager is a management platform that lets you use your existing tools to manage your AWS resources and environments. I showed you how to use Systems Manager to run a Python Script on your EC2 instances from a public and private GitHub repository. Using the AWS-RunRemoteScript public document and aws:runShellScript plugins, you can run any script such as Python, Ruby, or even PowerShell scripts or modules.  &lt;/p&gt;

</description>
      <category>cloudnative</category>
      <category>devops</category>
      <category>aws</category>
      <category>github</category>
    </item>
    <item>
      <title>Log Container image scan from Amazon ECR in CloudWatch</title>
      <author>Learn2Skills</author>
      <pubDate>Fri, 24 Dec 2021 14:58:32 +0000</pubDate>
      <link>https://dev.to/aws-builders/log-container-image-scan-from-amazon-ecr-in-cloudwatch-5133</link>
      <guid>https://dev.to/aws-builders/log-container-image-scan-from-amazon-ecr-in-cloudwatch-5133</guid>
      <description>&lt;p&gt;In order to pull the scan findings from ECR, a DescribeImageScanFindings API call is used by the AWS Lambda function, which will be triggered each time a scan is completed by ECR. A log group is created for each repository with the name format ‘/aws/ecr/image-scan-findings/repo-name’. Then, the findings for each image inside the repository will be sorted by severity. A log stream will be created for each severity found on this image (‘LOW’, ‘MEDIUM’, etc.), in addition to a summary log stream for all of the findings count. The Lambda function finally puts the sorted findings to the corresponding log stream.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution overview:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A client (could be a user or machine) triggers a scan for an image. This can be done manually (using the AWS Management Console, CLI, or SDK), or after the push of an image to the repository that has scan on push enabled.&lt;/li&gt;
&lt;li&gt;Amazon ECR scans the image. After the scan is complete, an event is sent to Amazon EventBridge confirming the completion of the scan.&lt;/li&gt;
&lt;li&gt;An EventBridge rule triggers a Lambda function based on matching the previous event with an expression.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Lambda function will:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Analyze the event. The function fetches the account ID, image details (digest and tag), and repository name.
2. Use fetched information to request a DescribeImageScanFindings API call.
3. Create a log group for the corresponding repository, if one does not exist already.
4. Create log streams for each severity found in the findings, and puts each finding in the related log stream, in addition to a summary log stream.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After a successful scan and logging attempt by the solution, you can view all image scan findings from CloudWatch logs &amp;gt; the corresponding log group ‘/aws/ecr/image-scan-findings/repo-name’, with the ability to search for a specific vulnerability in all of the images associated with this repository.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Optional steps include:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Create CloudWatch alarms based on string matching to a vulnerability name, or a specific severity.
2. Create subscription filters for the log group such as Elasticsearch, Kinesis, and Lambda.
3. Archive the findings in S3.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wTrQFmGD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/crmhqorycpxymclfpptb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wTrQFmGD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/crmhqorycpxymclfpptb.png" alt="Image description" width="880" height="350"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;br&gt;
The provided CloudFormation template will need the following permissions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a CloudFormation stack.&lt;/li&gt;
&lt;li&gt;Create an IAM execution role for the Lambda function that has the following actions:
ecr:DescribeImageScanFindings
logs:CreateLogStream
logs:GetLogEvents
logs:PutLogEvents
logs:CreateLogGroup&lt;/li&gt;
&lt;li&gt;Create a Lambda function and resource-based permission to allow EventBridge to trigger this Lambda function.&lt;/li&gt;
&lt;li&gt;Create an EventBridge rule and set the trigger to be the Lambda function.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#deploying-the-solution-using-the-cloudformation-template"&gt;
  &lt;/a&gt;
  Deploying the solution using the CloudFormation template:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Download the &lt;a href="https://github.com/aws-samples/ecr-image-scan-findings-logger"&gt;CloudFormation template&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;With the required permissions listed above, upload the CloudFormation template and create a stack.&lt;/li&gt;
&lt;li&gt;Test the solution by scanning an image on ECR. Then, go to CloudWatch and check log groups starting with ‘/aws/ecr/image-scan-findings/repository name’.&lt;/li&gt;
&lt;li&gt;Feel free to modify the Lambda function code within the template and/or create the resources manually.&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>aws</category>
      <category>docker</category>
      <category>cloud</category>
    </item>
    <item>
      <title>What is Log4j Vulnerability and how dangerous is it</title>
      <author>Vijay Patel</author>
      <pubDate>Fri, 24 Dec 2021 14:44:44 +0000</pubDate>
      <link>https://dev.to/easyawslearn/what-is-log4j-vulnerability-and-how-dangerous-is-it-3194</link>
      <guid>https://dev.to/easyawslearn/what-is-log4j-vulnerability-and-how-dangerous-is-it-3194</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-a-software-vulnerability"&gt;
  &lt;/a&gt;
  What is a Software Vulnerability?
&lt;/h2&gt;

&lt;p&gt;A software vulnerability is a defect in software that could allow an attacker to gain control of a system. These defects can be because of the way the software is designed, or because of a flaw in the way that it’s coded.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-a-software-vulnerability-work"&gt;
  &lt;/a&gt;
  How Does a Software Vulnerability Work?
&lt;/h2&gt;

&lt;p&gt;An attacker first finds out if a system has a software vulnerability by scanning it.  The scan can tell the attacker what types of software are on the system, are they up to date, and whether any of the software packages are vulnerable.  When the attacker finds that out, he or she will have a better idea of what types of attacks to launch against the system.  A successful attack would result in the attacker being able to run malicious commands on the target system.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-can-an-attacker-do-with-a-software-vulnerability"&gt;
  &lt;/a&gt;
  What Can an Attacker Do with a Software Vulnerability?
&lt;/h2&gt;

&lt;p&gt;An attacker can exploit a software vulnerability to steal or manipulate sensitive data, join a system to a botnet, install a backdoor, or plant other types of malware.  Also, after penetrating into one network host, the attacker could use that host to break into other hosts on the same network.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Here is a full video which based on Log4J👇👇&lt;/code&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=2kBCbubSrvQ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X-qPslPM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wx5uldiarqtvll297dao.png" alt="Image description" width="600" height="320"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-log4j"&gt;
  &lt;/a&gt;
  What is Log4j?
&lt;/h2&gt;

&lt;p&gt;Modern software can be large, powerful, and complex. Rather than a single author writing all the code themselves as was common decades ago, modern software creation will have large teams, and that software is increasingly made out of ‘building blocks’ pulled together by the team rather than entirely written from scratch.&lt;/p&gt;

&lt;p&gt;A team is unlikely to spend weeks writing new code when they can use existing code immediately.&lt;/p&gt;

&lt;p&gt;Log4j is one of the many building blocks that are used in the creation of modern software. It is used by many organizations to do a common but vital job. We call this a ‘software library’.&lt;/p&gt;

&lt;p&gt;Log4j is used by developers to keep track of what happens in their software applications or online services. It’s basically a huge journal of the activity of a system or application. This activity is called ‘logging’ and it’s used by developers to keep an eye out for problems for users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-the-issue"&gt;
  &lt;/a&gt;
  What’s the issue?
&lt;/h2&gt;

&lt;p&gt;Last week, a vulnerability was found in Log4j, an open-source logging library commonly used by apps and services across the internet. If left unfixed, attackers can break into systems, steal passwords and logins, extract data, and infect networks with malicious software.&lt;br&gt;
Log4j is used worldwide across software applications and online services, and the vulnerability requires very little expertise to exploit. This makes Log4shell potentially the most severe computer vulnerability in years.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-is-affected-by-this"&gt;
  &lt;/a&gt;
  Who is affected by this?
&lt;/h2&gt;

&lt;p&gt;Almost all software will have some form of ability to log (for development, operational and security purposes), and Log4j is a very common component used for this.&lt;br&gt;
For individuals, Log4j is almost certainly part of the devices and services you use online every day. The best thing you can do to protect yourself is make sure your devices and apps are as up to date as possible and continue to update them regularly, particularly over the next few weeks.&lt;br&gt;
For organizations, it may not be immediately clear that your web servers, web applications, network devices and other software and hardware use Log4j. This makes it all the more critical for every organization to pay attention to our advice, and that of your software vendors, and make necessary mitigations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-else-can-we-do"&gt;
  &lt;/a&gt;
  What else can we do?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Check your systems for the use of Log4j&lt;/li&gt;
&lt;li&gt;Check the list of the vulnerable software&lt;/li&gt;
&lt;li&gt;Contact software vendors&lt;/li&gt;
&lt;li&gt;Set Web Application Firewall rules&lt;/li&gt;
&lt;li&gt;Check for scanning activity&lt;/li&gt;
&lt;li&gt;Check for exploitation&lt;/li&gt;
&lt;li&gt;Sign up for the NCSC’s Early Warning&lt;/li&gt;
&lt;li&gt;See the vulnerability alert for more technical detail on these steps.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;▬▬▬▬▬▬ WANT TO LEARN MORE? ▬▬▬▬▬▬&lt;br&gt;
Full Terraform tutorial ► &lt;a href="https://bit.ly/2GwK8V2"&gt;https://bit.ly/2GwK8V2&lt;/a&gt;&lt;br&gt;
DevOps Tools, like Ansible ► &lt;a href="https://bit.ly/3iASHuP"&gt;https://bit.ly/3iASHuP&lt;/a&gt;&lt;br&gt;
Docker Tutorial ► &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;br&gt;
AWS Tutorial ► &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>log4j</category>
      <category>log4shell</category>
      <category>vulnerability</category>
    </item>
    <item>
      <title>What is Next.js and Top Next.js Templates</title>
      <author>Katarina Harbuzava</author>
      <pubDate>Fri, 24 Dec 2021 14:40:13 +0000</pubDate>
      <link>https://dev.to/anaflatlogic/what-is-nextjs-and-top-nextjs-templates-1c4g</link>
      <guid>https://dev.to/anaflatlogic/what-is-nextjs-and-top-nextjs-templates-1c4g</guid>
      <description>&lt;p&gt;Modern web application development involves rapid testing of hypotheses, building MVPs, and testing them, which requires appropriate tools. Accordingly, now we have a variety of different tools and frameworks for building web applications.&lt;/p&gt;

&lt;p&gt;Another requirement that has become widespread in the development of web applications is the speed of work and the speed of loading pages. That creates a perfect opportunity for companies that decided to trust modern technologies, like React.js, or have chosen the way of the Jamstack approach.&lt;/p&gt;

&lt;p&gt;In the modern world of web development, what you just can’t find, for example, frameworks for frameworks or the so-called meta frameworks. In this article, we will talk about just such a meta-framework – next js, which is built on without React.&lt;/p&gt;

&lt;p&gt;Most of the reason why companies and developers choose next js is that it is a full-stack framework (as in, it handles both the frontend and backend of your application) and offers support for a variety of rendering methods — even mixing and matching those methods as needed.&lt;/p&gt;

&lt;p&gt;We will find out what next js is, why to use it, its disadvantages and advantages, and for the first time, we will write about the best templates for next js.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-nextjs"&gt;
  &lt;/a&gt;
  What is Next.js
&lt;/h2&gt;

&lt;p&gt;Next.js is a JavaScript framework that enables you to build superfast and extremely user-friendly static websites, as well as web applications using React. Next.js allows the building of hybrid applications that contain both server-rendered and statically generated pages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-nextjs"&gt;
  &lt;/a&gt;
  Why use Next.js
&lt;/h2&gt;

&lt;p&gt;Let’s list the main features that make next.js so popular and why many developers consider it the best library right now.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#different-render-options-outofthebox"&gt;
  &lt;/a&gt;
  Different render options out-of-the-box
&lt;/h3&gt;

&lt;p&gt;One of the most important, if not the most important, next.js feature is the different types of rendering that you can do in your application.&lt;/p&gt;

&lt;p&gt;By default, next js is using Server-Side Rendering (SSR) and at the same time is can be also a great Static Site Generator (SSG).&lt;/p&gt;

&lt;p&gt;Next.js provides an out-of-the-box solution for server-side rendering (SSR) of React components. With Next.js, developers can render the JavaScript code on the server and send simple indexable HTML to the user. Before that, this could also be done manually, but it required a lot of work with caching server load, on-demand content, or the architecture of the application itself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#incremental-serverside-rendering"&gt;
  &lt;/a&gt;
  Incremental server-side rendering
&lt;/h3&gt;

&lt;p&gt;Next.js allows you to create or update static pages after the site has been built. Incremental static site regeneration will allow developers and editors to use the static site generation mechanisms applied to individual pages, without having to rebuild the entire site. The use of ISR allows you to maintain the strengths of SSG on a project scale of millions of pages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#improved-search-engine-optimization"&gt;
  &lt;/a&gt;
  Improved Search Engine Optimization
&lt;/h3&gt;

&lt;p&gt;Next.js allows you to build web applications with full functionality and interactivity of SPA without losing the SEO aspect but even adding. With this, developers do not even need to think about how to make an SEO-optimized project, because it will be like this by default.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#enhanced-performance"&gt;
  &lt;/a&gt;
  Enhanced performance
&lt;/h3&gt;

&lt;p&gt;Next.js frees the browser from loading and working with all the Javascript code at once, thus increasing such a metric as a time to first draw (TTFD). It measures the amount of time needed for the user to see the very first content on their screen and should ideally be below 1 second. This factor will improve both User Experience and SEO.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#part-of-the-react-ecosystem"&gt;
  &lt;/a&gt;
  Part of the React ecosystem
&lt;/h3&gt;

&lt;p&gt;Next.js is part of a large React ecosystem, with all its benefits in the form of several best practitioners, community help, useful libraries, and already solved corner cases. Next.js was also developed specifically for React, so it will be easy for you to embed this framework into your existing application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#great-user-experience"&gt;
  &lt;/a&gt;
  Great User Experience
&lt;/h3&gt;

&lt;p&gt;Thanks to Next.js you can build a fully customized user experience. Let’s see what it means.&lt;br&gt;
-- Fully customizable – you can customize the look of your application anyhow you need or want. It also allows you to make changes without any limitations.&lt;br&gt;
-- Adaptability and responsiveness – sites and applications built on Next.js are responsive out of the box and look good on mobile devices.&lt;br&gt;
-- Speed – Next.js websites can be super-fast because they are static so visitors will be more than satisfied with the performance.&lt;br&gt;
-- Data security – in the case of Next.js, the data on the site is not directly linked to the site, so it is more difficult for an attacker to get it.&lt;/p&gt;

&lt;p&gt;All of these things mentioned above make the user experience as great as it can be.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#developer-experience"&gt;
  &lt;/a&gt;
  Developer Experience
&lt;/h3&gt;

&lt;p&gt;It is worth stopping a little here and noting how much the next values development experience. This thread stretches from the very origins of the framework – ease of development and implementation, clear documentation, examples, easy transition to new versions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#great-work-with-images"&gt;
  &lt;/a&gt;
  Great work with images
&lt;/h3&gt;

&lt;p&gt;Images take up a significant part of the site not only in terms of page size but also in terms of page weight. Since version 10, next js can automatically compress all images, a little later the ability to compress them with any library you like was added. Also, the  component automatically adds width and height attributes. However, even optimized images can spoil the metrics if they are on the first screen. Therefore, next js has a built-in placeholder option for images.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#easy-to-learn-for-react-developers"&gt;
  &lt;/a&gt;
  Easy to learn for React Developers
&lt;/h3&gt;

&lt;p&gt;If you’ve written any React application at all, you’d find yourself very familiar with Next.js.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#out-of-the-box-support-for-sass-modules-and-typescript"&gt;
  &lt;/a&gt;
  Out of the box support for Sass Modules and TypeScript
&lt;/h3&gt;

&lt;p&gt;Next.js has great support for TypeScript out of the box. Recently they also added module-based support for Sass as well. This means that your styles can now be written in Sass, local to your modules, with caching and revalidation – all managed by Next.js internally.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#filesystem-routing"&gt;
  &lt;/a&gt;
  File-system routing
&lt;/h3&gt;

&lt;p&gt;You don’t need to use any third-party libraries to handle and configure routing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#persistent-caching-for-page-bundles"&gt;
  &lt;/a&gt;
  Persistent Caching for Page Bundles
&lt;/h3&gt;

&lt;p&gt;Next.js also supports persistent caches for pages that are not changed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#internationalized-routing"&gt;
  &lt;/a&gt;
  Internationalized Routing
&lt;/h3&gt;

&lt;p&gt;Next.js has built-in support for internationalized (i18n) routing. It is the feature that automatically sets the language for the user.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-splitting"&gt;
  &lt;/a&gt;
  Code Splitting
&lt;/h3&gt;

&lt;p&gt;Next.js has Code splitting feature out of the box. It simply splits the code into separate bundles to make the load faster.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-can-you-build-with-nextjs-and-when-to-use-nextjs"&gt;
  &lt;/a&gt;
  What can you build with Next.js and when to use Next.js
&lt;/h2&gt;

&lt;p&gt;With Next.js you can build several apps and websites like:&lt;/p&gt;

&lt;p&gt;-- Dashboards;&lt;br&gt;
-- Admin panels;&lt;br&gt;
-- MVP (Minimum Viable Product);&lt;br&gt;
-- Jamstack websites;&lt;br&gt;
-- Web Portals;&lt;br&gt;
-- Single web pages;&lt;br&gt;
-- Static websites;&lt;br&gt;
-- SaaS products;&lt;br&gt;
-- eCommerce and retail websites;&lt;br&gt;
-- Complex and demanding web applications;&lt;br&gt;
-- Interactive user interfaces;&lt;br&gt;
-- Blog.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-projects-are-most-suitable-for-nextjs"&gt;
  &lt;/a&gt;
  What projects are most suitable for Next.js?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#when-creating-a-landing-page"&gt;
  &lt;/a&gt;
  When creating a landing page
&lt;/h3&gt;

&lt;p&gt;Next.js is great for creating landing pages and other marketing tasks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-seo-matters"&gt;
  &lt;/a&gt;
  When SEO Matters
&lt;/h3&gt;

&lt;p&gt;When building e-commerce sites, search engine optimization is more important than ever. With server-side rendering, Next js excels in this regard as well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-creating-websites"&gt;
  &lt;/a&gt;
  When creating websites
&lt;/h3&gt;

&lt;p&gt;Server-side rendering of the application removes the need for clients to render on their devices. For users of slower devices, this can result in faster boot times.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros-and-cons-of-nextjs"&gt;
  &lt;/a&gt;
  Pros and Cons of Next.js
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h3&gt;

&lt;p&gt;-- Steep learning curve because of good and short documentation;&lt;br&gt;
-- Built-in support for TypeScript;&lt;br&gt;
-- In Next js, the developer can choose which page to render on the server and which to render during the build. This is the most flexible and optimal approach possible in principle;&lt;br&gt;
-- Big community;&lt;br&gt;
-- Great for SEO;&lt;br&gt;
-- Zero Config – next js allows you to focus on the business logic of your application instead of the application logic. And to help you, it provides automatic compilation and bundling; In other words, Next is optimized for production right from the start;&lt;br&gt;
-- Fast Refresh – fast, live-editing experience;&lt;br&gt;
-- Built-in CSS support – possibility to import CSS files from a JavaScript file;&lt;br&gt;
-- Next js Provides Routing – NextJS provides a quick and easy way to create APIs in applications. If your application uses third-party APIs, then you often need your API for proxy requests and token storage. Next.js routing is perfect for this.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h3&gt;

&lt;p&gt;-- Cost of development – since Next.js does not provide many built-in front pages, you have to create your front-end, which will require changes from time to time. It means that you will have to pay a developer to get the job done;&lt;br&gt;
-- Bad integration with state management libraries – so if you need a state manager in your app, you have to add Redux, MobX, or something else;&lt;br&gt;
-- The low number of easy to use plugins plug-ins;&lt;br&gt;
-- Next js – opinionated framework;&lt;br&gt;
-- There is only one way to work with routes in NextJS, and you cannot customize it for yourself. Next.js is limited to its file-based route, and dynamic routes are only possible when using a NodeJS server.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#top-nextjs-templates"&gt;
  &lt;/a&gt;
  Top next.js templates
&lt;/h2&gt;

&lt;p&gt;Before we start listing the best templates, we must identify the criteria by which we will describe them:&lt;/p&gt;

&lt;p&gt;-- Which rendering method is used&lt;br&gt;
-- Next.js version&lt;br&gt;
-- Is typescript supported&lt;br&gt;
-- Price&lt;br&gt;
-- Is there a live demo&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ecommerce-react-template"&gt;
  &lt;/a&gt;
  Ecommerce React Template
&lt;/h3&gt;

&lt;p&gt;Demo: &lt;a href="https://flatlogic.com/templates/ecommerce-react-template/demo"&gt;https://flatlogic.com/templates/ecommerce-react-template/demo&lt;/a&gt;&lt;br&gt;
Price: From $149 to $699, one-time payment&lt;br&gt;
Typescript: Yes&lt;br&gt;
Rendering methods: Server-Side Rendering&lt;br&gt;
Next.js version: 10.0.6&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wj1TnoFP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uyoxqrkmats33qfuecni.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wj1TnoFP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uyoxqrkmats33qfuecni.png" alt="Image description" width="590" height="368"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This template is a fully developed e-commerce store based on next js, node js, and react. Product pages and other pages use server-side rendering for SEO purposes.&lt;/p&gt;

&lt;p&gt;The template is not free – its cost is $ 149, but for this money, you will get a fully working store, which you will need to fill with goods and place on the hosting.&lt;/p&gt;

&lt;p&gt;In the front-end part of our eCommerce template, you will find such features as the product descriptions page, landing page, categories pages, all support pages (contact, FAQ, about, etc.), and blog. The back-end part consists of CMS for blog, authentication, CMS for the store with an analytics dashboard, user management, and product management. We have also integrated payment systems in our eCommerce react template.&lt;/p&gt;

&lt;p&gt;To start a template you just need to type 2 commands and that is all – you can start to develop your store.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#notable-features"&gt;
  &lt;/a&gt;
  Notable Features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Products listing&lt;/li&gt;
&lt;li&gt;Product filter&lt;/li&gt;
&lt;li&gt;Server-side rendering&lt;/li&gt;
&lt;li&gt;SEO module&lt;/li&gt;
&lt;li&gt;Blog and CMS for it&lt;/li&gt;
&lt;li&gt;Registration with email/password/name&lt;/li&gt;
&lt;li&gt;Stripe integration&lt;/li&gt;
&lt;li&gt;Node.js &amp;amp; PostgreSQL integrated&lt;/li&gt;
&lt;li&gt;Sequilize ORM&lt;/li&gt;
&lt;li&gt;React 16&lt;/li&gt;
&lt;li&gt;Responsive layout&lt;/li&gt;
&lt;li&gt;Checkout page&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#tokyo-black-nextjs-typescript-dashboard"&gt;
  &lt;/a&gt;
  Tokyo Black NextJS Typescript Dashboard
&lt;/h3&gt;

&lt;p&gt;Demo: &lt;a href="https://tokyo-black-nextjs.bloomui.com/"&gt;https://tokyo-black-nextjs.bloomui.com/&lt;/a&gt;&lt;br&gt;
Price: From $49 to $499, one-time payment&lt;br&gt;
Typescript: Yes&lt;br&gt;
Rendering methods: –&lt;br&gt;
Next.js version: –&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D4npzf85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wcxu1br6symrnxwupq78.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D4npzf85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wcxu1br6symrnxwupq78.png" alt="Image description" width="600" height="468"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tokyo Black NextJS is a classical dashboard template with the admin panel, several reports templates, pre-built forms, and tables. The specific thing about this template is that it uses with next.js Material UI.&lt;/p&gt;

&lt;p&gt;This admin dashboard contains examples of fully working management sections complete with search and filter functionality, bulk operations. The forms are written using the Formik library.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#notable-features"&gt;
  &lt;/a&gt;
  Notable features:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;6 Layout Blueprints&lt;/li&gt;
&lt;li&gt;React + Typescript&lt;/li&gt;
&lt;li&gt;Multiple Dark Colors Schemes&lt;/li&gt;
&lt;li&gt;Axios API Calls&lt;/li&gt;
&lt;li&gt;Right-To-Left Layouts&lt;/li&gt;
&lt;li&gt;150+ Components&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#pickbazar-react-ecommerce-template"&gt;
  &lt;/a&gt;
  PickBazar – React Ecommerce Template
&lt;/h3&gt;

&lt;p&gt;Demo: &lt;a href="https://pickbazar-react.vercel.app/"&gt;https://pickbazar-react.vercel.app/&lt;/a&gt;&lt;br&gt;
Price: From $29 to $1200, one-time payment&lt;br&gt;
Typescript: Yes&lt;br&gt;
Rendering methods: –&lt;br&gt;
Next.js version: 9.5&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pUMrR-nc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bec72scncux60dp6c30k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pUMrR-nc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bec72scncux60dp6c30k.png" alt="Image description" width="510" height="600"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;If you are looking for a template for an e-commerce project, then Pickbazar can be an excellent choice due to the wide use of various technologies besides next.js and react, such as Nest, GraphQL, and Tailwind. Another advantage of this template is its speed and SEO focus, which are key characteristics for an e-commerce project.&lt;/p&gt;

&lt;p&gt;PickBazar also includes internal page layouts, a checkout system, and all these other specialties that will do you well. The design is also clean and minimal, making sure all the items come into view stunningly. There is also REST API integration with React Query for the customers who had already a REST-based backend for remote data fetching.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#notable-features"&gt;
  &lt;/a&gt;
  Notable Features:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Monorepo&lt;/li&gt;
&lt;li&gt;Built with Tailwind CSS&lt;/li&gt;
&lt;li&gt;React Hooks&lt;/li&gt;
&lt;li&gt;GraphQL&lt;/li&gt;
&lt;li&gt;Stripe integration&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#crema-react-admin-template"&gt;
  &lt;/a&gt;
  Crema – React Admin Template
&lt;/h3&gt;

&lt;p&gt;Demo: &lt;a href="https://cremawork.com/mui/"&gt;https://cremawork.com/mui/&lt;/a&gt;&lt;br&gt;
Price: From $24 to $900, one-time payment&lt;br&gt;
Typescript: Yes&lt;br&gt;
Rendering methods: –&lt;br&gt;
Next.js version: –&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dYMdfn3T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zc44etffimegdqhrb9t0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dYMdfn3T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zc44etffimegdqhrb9t0.png" alt="Image description" width="600" height="283"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Crema next.js templates have ten navigation styles, five built-in apps, various color combinations, more than one hundred widgets, and code splitting. With the three ready for use dashboards, Crema takes care of CRM, crypto, and analytics. Crema can be based on Material UI components or Ant Design. Crema is integrated with Redux and Context API for state management hence making it fast and reliable.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#notable-features"&gt;
  &lt;/a&gt;
  Notable Features:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Built-in internazialization&lt;/li&gt;
&lt;li&gt;RTL support&lt;/li&gt;
&lt;li&gt;3 back-end types&lt;/li&gt;
&lt;li&gt;Authorization Support&lt;/li&gt;
&lt;li&gt;Material UI or Ant.design for UI purposes&lt;/li&gt;
&lt;li&gt;Code splitting&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#nextjs-material-dashboard-pro"&gt;
  &lt;/a&gt;
  NextJS Material Dashboard PRO
&lt;/h3&gt;

&lt;p&gt;Demo: &lt;a href="https://demos.creative-tim.com/nextjs-material-dashboard-pro/admin/dashboard"&gt;https://demos.creative-tim.com/nextjs-material-dashboard-pro/admin/dashboard&lt;/a&gt;&lt;br&gt;
Price: From $99 to $349, one time payment&lt;br&gt;
Typescript: No&lt;br&gt;
Rendering methods: –&lt;br&gt;
Next.js version: 10.0.5&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RPnMlFps--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o1zqbmmeqob4u2f25ap0.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RPnMlFps--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o1zqbmmeqob4u2f25ap0.jpeg" alt="Image description" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;NextJS Material Dashboard PRO is a premium React and NextJS admin template based on Material UI. The template comes with 7 color filter choices for the links of the Sidebar (blue, green, orange, red, purple, rose, white), 3 filter color choices for the background of the Sidebar (white, blue, black), an option to have a background image on the Sidebar and 6 color filter choices the card headers (blue, green, orange, red, purple, rose).&lt;/p&gt;

&lt;p&gt;This template is sharpened more in order to help you with the UI part since technically there are more advanced products in our selection. But the number of components is also non-flexible.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nextkit-nextjs-free-ui-kit"&gt;
  &lt;/a&gt;
  Nextkit – Nextjs Free UI Kit
&lt;/h3&gt;

&lt;p&gt;Demo: &lt;a href="https://next-kit-free.vercel.app/"&gt;https://next-kit-free.vercel.app/&lt;/a&gt;&lt;br&gt;
Price: Free&lt;br&gt;
Typescript: No&lt;br&gt;
Rendering methods: SSG&lt;br&gt;
Next.js version: –&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ao9rTzAO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8bkrtmlcxe2bmmiqyyq4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ao9rTzAO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8bkrtmlcxe2bmmiqyyq4.png" alt="Image description" width="600" height="247"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next Kit React is more like a landing page template. It allows you to create static websites, landing pages, coming soon pages, homepages. Next Kit is built on Reactstrap, which is a responsive React Framework.&lt;/p&gt;

&lt;p&gt;The free version comes with a grid design that helps you play around with the look and feel of the web app the way you want.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#notable-features"&gt;
  &lt;/a&gt;
  Notable features:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Created with NextJs react framework with React strap (bootstrap)&lt;/li&gt;
&lt;li&gt;17+ readymade UI Blocks&lt;/li&gt;
&lt;li&gt;25 essential UI elements&lt;/li&gt;
&lt;li&gt;SCSS Base CSS framework&lt;/li&gt;
&lt;li&gt;One-level dropdown menus&lt;/li&gt;
&lt;li&gt;Search Engine Optimized Code&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#nextjs-dashboard-theme-with-tailwind-css"&gt;
  &lt;/a&gt;
  NextJS Dashboard Theme with Tailwind CSS
&lt;/h3&gt;

&lt;p&gt;Demo: –&lt;br&gt;
Price: From $29 to $79, one-time payment&lt;br&gt;
Typescript: Yes&lt;br&gt;
Rendering methods: –&lt;br&gt;
Next.js version: 12&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GcfPcj3b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/563p98j62m1v8bgxbizh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GcfPcj3b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/563p98j62m1v8bgxbizh.png" alt="Image description" width="880" height="492"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Indigo NextJS Admin Dashboard Theme is a template for creating a web application dashboard in NextJS, React, and Tailwind CSS. The theme was built on top of the Next.js framework and it uses our open source boilerplate code. You can run the project easily without any configuration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;There are several reusable React components in this template:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;14+ React Components using Tailwind CSS&lt;/li&gt;
&lt;li&gt;Data visualization&lt;/li&gt;
&lt;li&gt;Data tables with pagination&lt;/li&gt;
&lt;li&gt;Form components&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The download file includes the code source and documentation on how to get started. Implemented in a modular way, you can also customize the theme to meet your specific needs.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#notable-features"&gt;
  &lt;/a&gt;
  Notable Features:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Responsive design&lt;/li&gt;
&lt;li&gt;PostCSS for processing Tailwind CSS&lt;/li&gt;
&lt;li&gt;Type checking TypeScript&lt;/li&gt;
&lt;li&gt;Linter with ESLint (Default NextJS, NextJS Core Web Vitals, and Airbnb configuration)&lt;/li&gt;
&lt;li&gt;SEO metadata, JSON-LD, and Open Graph tags with Next SEO&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can also use this theme with other React frameworks like Gastby.js or any other boilerplate generator like Create React App. It’s is 100% compatible with any React-based project. But, you need to do some configuration yourself if you don’t want to use our default boilerplate code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, we examined what next js is, its advantages and disadvantages, and where it is best used. Next js has a rich history, large community, stable growth, and development. The framework has both obvious advantages in the form of different types of rendering, and disadvantages – it is very opinionated.&lt;/p&gt;

&lt;p&gt;We found out that Next js is reasonable to use for building small applications of several pages, or for medium-sized applications, with a relatively simple architecture, which seems to be possible to think through completely before you start writing it. A large project will inevitably face problems and bugs that it is not clear how to fix, and in addition, there is a risk that you will have to constantly rewrite the application so that it works normally because the practices set out in the documentation that you start to use will be changed to some new approach.&lt;/p&gt;

&lt;p&gt;And in order to speed up development on Next js, you can refer to the templates that we presented in this collection.&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>template</category>
      <category>webdev</category>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 24th December 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 24 Dec 2021 14:09:57 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-24th-december-2021-1572</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-24th-december-2021-1572</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-github-wrapped"&gt;
  &lt;/a&gt;
  1. GitHub Wrapped
&lt;/h3&gt;

&lt;p&gt;Take a look back at all the contributions you as an individual made to the open-source community&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ishandeveloper"&gt;
        ishandeveloper
      &lt;/a&gt; / &lt;a href="https://github.com/ishandeveloper/github-wrapped"&gt;
        github-wrapped
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Take a look back at all the contributions you as an individual made to the open-source community
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://github.com/ishandeveloper/github-wrapped./public/assets/images/favicon.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HuNuaEz7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ishandeveloper/github-wrapped./public/assets/images/favicon.png" width="25%"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://github.com/ishandeveloper/github-wrapped./public/assets/images/readme.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WqH2TZ96--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ishandeveloper/github-wrapped./public/assets/images/readme.png" width="75%"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://githubwrapped.tech/" rel="nofollow"&gt;Generate your report&lt;/a&gt;
&lt;/p&gt;




&lt;h4&gt;
Why do I exist?&lt;/h4&gt;
&lt;h3&gt;
2020 has been a challenging year for all of us.&lt;/h3&gt;
&lt;p&gt;As the year is ending, we thought to take a look back at all the contributions &lt;strong&gt;you&lt;/strong&gt; as an individual
made to the open-source community, during these unprecedented times.&lt;/p&gt;
&lt;p&gt;Also, since Spotify, Snapchat and other mass platforms have their own way of year wrap up, &lt;strong&gt;why not us?&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;a href="https://githubwrapped.tech" rel="nofollow"&gt;githubwrapped.tech&lt;/a&gt;&lt;/pre&gt;

&lt;h3&gt;
Reports&lt;/h3&gt;
&lt;p&gt;This web app deployed at &lt;a href="https://githubwrapped.tech" rel="nofollow"&gt;githubwrapped.tech&lt;/a&gt; will help you to generate yearly reports that contains your stats from the beginning of this year.&lt;/p&gt;
&lt;p&gt;Including number of commits, stars etc.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/ishandeveloper/github-wrapped./public/assets/images/report.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dxOVAci_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ishandeveloper/github-wrapped./public/assets/images/report.png" width="75%" alt="Sample GitHub Wrapped Report"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also save your report as an image using the 'Save Report' button and share it with the community or keep it as a memorandum :)&lt;/p&gt;

&lt;h4&gt;
Project Structure&lt;/h4&gt;
&lt;p&gt;This project uses &lt;a href="https://reactjs.org" rel="nofollow"&gt;React.Js&lt;/a&gt; and the contents are bundled using webpack.&lt;/p&gt;
&lt;p&gt;The contents in this project follow the following structure.&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;
&lt;pre&gt;&lt;code&gt;├───api
├───public
│   └───assets
└───src&lt;/code&gt;&lt;/pre&gt;…&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ishandeveloper/github-wrapped"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-vitest"&gt;
  &lt;/a&gt;
  2. Vitest
&lt;/h3&gt;

&lt;p&gt;A blazing fast unit test framework powered by Vite.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vitest-dev"&gt;
        vitest-dev
      &lt;/a&gt; / &lt;a href="https://github.com/vitest-dev/vitest"&gt;
        vitest
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A Vite-native test framework. It's fast!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/11247099/145112184-a9ff6727-661c-439d-9ada-963124a281f7.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j3s2gEE9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/11247099/145112184-a9ff6727-661c-439d-9ada-963124a281f7.png" height="200"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;
Vitest
&lt;/h1&gt;
&lt;p&gt;
A blazing fast unit test framework powered by Vite
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://www.npmjs.com/package/vitest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f250719e6a4412b140758ebb98897b69e8c0e38316bf268d30096a9132c29acf/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f7669746573743f636f6c6f723d613162383538266c6162656c3d"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h3&gt;
&lt;a href="https://chat.vitest.dev" rel="nofollow"&gt;&lt;i&gt;Get involved!&lt;/i&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;br&gt;
&lt;br&gt;
&lt;blockquote&gt;
&lt;p&gt;⚠️ &lt;strong&gt;DISCLAIMER&lt;/strong&gt;: Vitest is still in development and not stable yet. It's not recommended to use it in production.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Vitest requires Vite v2.7 and Node v14&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Follow the &lt;a href="https://vitest.dev/guide" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt; or learn &lt;a href="https://vitest.dev/guide/why" rel="nofollow"&gt;why we are building a new test runner&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;Read the &lt;a href="https://vitest.dev/" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://vitejs.dev/" rel="nofollow"&gt;Vite&lt;/a&gt;'s config, transformers, resolvers, and plugins. Use the same setup from your app!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jestjs.io/docs/snapshot-testing" rel="nofollow"&gt;Jest Snapshot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.chaijs.com/" rel="nofollow"&gt;Chai&lt;/a&gt; built-in for assertions, with &lt;a href="https://jestjs.io/docs/expect" rel="nofollow"&gt;Jest expect&lt;/a&gt; compatible APIs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vitest-dev/vitest#watch-mode"&gt;Smart &amp;amp; instant watch mode&lt;/a&gt;, like HMR for tests!&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vitest-dev/vitest#coverage"&gt;Native code coverage&lt;/a&gt; via &lt;a href="https://github.com/bcoe/c8"&gt;c8&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Aslemammad/tinyspy"&gt;Tinyspy&lt;/a&gt; built-in for mocking, stubbing, and spies.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jsdom/jsdom"&gt;JSDOM&lt;/a&gt; and &lt;a href="https://github.com/capricorn86/happy-dom"&gt;happy-dom&lt;/a&gt; for DOM and browser API mocking&lt;/li&gt;
&lt;li&gt;Components testing (&lt;a href="https://github.com/vitest-dev/vitest./test/vue"&gt;Vue&lt;/a&gt;, &lt;a href="https://github.com/vitest-dev/vitest./test/react"&gt;React&lt;/a&gt;, &lt;a href="https://github.com/vitest-dev/vitest./test/lit"&gt;Lit&lt;/a&gt;, &lt;a href="https://github.com/vitest-dev/vitest./test/vitesse"&gt;Vitesse&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Workers multi-threading via &lt;a href="https://github.com/Aslemammad/tinypool"&gt;tinypool&lt;/a&gt; (a lightweight fork of &lt;a href="https://github.com/piscinajs/piscina"&gt;Piscina&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ESM first, top level await&lt;/li&gt;
&lt;li&gt;Out-of-box TypeScript / JSX support&lt;/li&gt;
&lt;li&gt;Filtering, timeouts…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/vitest-dev/vitest"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-rakkas"&gt;
  &lt;/a&gt;
  3. Rakkas
&lt;/h3&gt;

&lt;p&gt;Rakkas is a web framework powered by React and Vite that aims to have a developer experience similar to Next.js. Many of its features are also inspired by Svelte Kit.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/rakkasjs"&gt;
        rakkasjs
      &lt;/a&gt; / &lt;a href="https://github.com/rakkasjs/rakkasjs"&gt;
        rakkasjs
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Lightning fast Next.js alternative powered by Vite
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/rakkasjs/rakkasjslogo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FRX4-jre--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/rakkasjs/rakkasjslogo.png" alt="Rakkas"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;div&gt;
&lt;p&gt;Lightning fast &lt;a href="https://nextjs.org" rel="nofollow"&gt;Next.js&lt;/a&gt; alternative powered by &lt;a href="https://vitejs.dev" rel="nofollow"&gt;Vite&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://app.travis-ci.com/rakkasjs/rakkasjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a76400c84b8ee2f76f055980f56fe9a82d7db666eafc1f672dd61b3a2a7451ae/68747470733a2f2f6170702e7472617669732d63692e636f6d2f72616b6b61736a732f72616b6b61736a732e7376673f6272616e63683d6d61696e" alt="Build Status"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1604ed58b71b4f856b76e30cd7a6fe95d6c54e4869489ca599489ee665db9c3b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f74797065732f72616b6b61736a73"&gt;&lt;img src="https://camo.githubusercontent.com/1604ed58b71b4f856b76e30cd7a6fe95d6c54e4869489ca599489ee665db9c3b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f74797065732f72616b6b61736a73" alt="npm type definitions"&gt;&lt;/a&gt;
&lt;a href="https://github.com/rakkasjs/rakkasjs/blob/main/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/39cf7f14cb2d684a24cc2fb925dc4b1fa83d2cf7726c170fb8cbf1dc1fc74e74/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f72616b6b61736a73" alt="MIT license"&gt;&lt;/a&gt;
&lt;a href="https://reactjs.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7719e4c089640a9e7399aa57e9c4528caa03d628f397a101be57d28cf910654c/68747470733a2f2f6261646765732e616c65656e34322e636f6d2f7372632f72656163742e737667" alt="React"&gt;&lt;/a&gt;
&lt;a href="https://vitejs.dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/811f5d97843f54210afa36d2622c8c5f1ca054183d43a2fd269bcdf8ed7db987/68747470733a2f2f6261646765732e616c65656e34322e636f6d2f7372632f766974656a732e737667" alt="Vite"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/intent/tweet?text=I%20gave%20%23RakkasJS%20a%20try!&amp;amp;url=https%3A%2F%2Fgithub.com%2Frakkasjs%2Frakkasjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3aff595f3e40201b5409100cf80787ab16f0625898a25ec46b6cba56242692de/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c3f7374796c653d736f6369616c2675726c3d68747470732533412532462532466769746875622e636f6d25324672616b6b61736a7325324672616b6b61736a73" alt="Tweet about Rakkas"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rakkasjs.org/guide" rel="nofollow"&gt;Read the guide&lt;/a&gt; | &lt;a href="https://stackblitz.com/edit/rakkas-demo-ts?file=src%2Fpages%2Fpage.tsx" rel="nofollow"&gt;Try it in the browser&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2&gt;
What is Rakkas?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Rakkas&lt;/strong&gt; is a web framework powered by &lt;a href="https://reactjs.org" rel="nofollow"&gt;React&lt;/a&gt; and &lt;a href="https://vitejs.dev" rel="nofollow"&gt;Vite&lt;/a&gt; that aims to have a developer experience similar to &lt;a href="https://nextjs.org" rel="nofollow"&gt;Next.js&lt;/a&gt;. Many of its features are also inspired by &lt;a href="https://kit.svelte.dev" rel="nofollow"&gt;Svelte Kit&lt;/a&gt;. Important features are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
⚡  Lightning fast development&lt;/li&gt;
&lt;li&gt;
🖥️  Hassle free server-side rendering&lt;/li&gt;
&lt;li&gt;
🚀  Support for deploying on serverless environments&lt;/li&gt;
&lt;li&gt;
📄  Static site generation&lt;/li&gt;
&lt;li&gt;
🇺🇳  Localizable URLs&lt;/li&gt;
&lt;li&gt;
🔀  Rendering modes (pre-rendering, server-side, client-side)&lt;/li&gt;
&lt;li&gt;
☸️  SPA-style client-side navigation&lt;/li&gt;
&lt;li&gt;
📁  Intuitive file system-based routing&lt;/li&gt;
&lt;li&gt;
⬇️  Simple but effective data fetching system&lt;/li&gt;
&lt;li&gt;
⚙️  API routes to build and organize your backend&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href="https://rakkasjs.org/guide/feature-comparison" rel="nofollow"&gt;feature comparison with Next.js&lt;/a&gt; for other supported and planned features.&lt;/p&gt;
&lt;h2&gt;
Is Rakkas right for you?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Although many features have been implemented, Rakkas is still in development. There &lt;em&gt;will&lt;/em&gt; be breaking changes until we hit 1.0. As such, it's &lt;strong&gt;not yet&lt;/strong&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/rakkasjs/rakkasjs"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-fuite"&gt;
  &lt;/a&gt;
  4. fuite
&lt;/h3&gt;

&lt;p&gt;A tool for finding memory leaks in web apps&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/nolanlawson"&gt;
        nolanlawson
      &lt;/a&gt; / &lt;a href="https://github.com/nolanlawson/fuite"&gt;
        fuite
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A tool for finding memory leaks in web apps
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
fuite&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;fuite&lt;/strong&gt; &lt;em&gt;/fɥit/&lt;/em&gt; French for "leak"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;fuite&lt;/code&gt; is a CLI tool for finding memory leaks in web apps.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nolanlawson.com/2021/12/17/introducing-fuite-a-tool-for-finding-memory-leaks-in-web-apps/" rel="nofollow"&gt;Introductory blog post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/H0BHL2lo89M" rel="nofollow"&gt;Tutorial video&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Usage&lt;/h1&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npx fuite https://example.com&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;This will check for leaks and print output to stdout.&lt;/p&gt;
&lt;p&gt;By default, &lt;code&gt;fuite&lt;/code&gt; will assume that the site is a client-rendered webapp, and it will search for internal links on the given page. Then for each link, it will:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click the link&lt;/li&gt;
&lt;li&gt;Press the browser back button&lt;/li&gt;
&lt;li&gt;Repeat to see if the scenario is leaking&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For other scenarios, see &lt;a href="https://github.com/nolanlawson/fuite#scenarios"&gt;scenarios&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;
How it works&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;fuite&lt;/code&gt; launches Chrome using Puppeteer, loads a web page, and runs a scenario against it. It runs the scenario some number of iterations (7 by default) and looks for objects that leaked 7 times (or 14 times, or 28 times). This might sound like a strange approach, but it's useful for &lt;a href="https://nolanlawson.com/2020/02/19/fixing-memory-leaks-in-web-applications/" rel="nofollow"&gt;cutting through the noise&lt;/a&gt; in memory analysis.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fuite&lt;/code&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/nolanlawson/fuite"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-theatrejs"&gt;
  &lt;/a&gt;
  5. Theatre.js
&lt;/h3&gt;

&lt;p&gt;Theatre.js is an animation library for high-fidelity motion graphics. It is designed to help you express detailed animation, enabling you to create intricate movement, and convey nuance.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/AriaMinaei"&gt;
        AriaMinaei
      &lt;/a&gt; / &lt;a href="https://github.com/AriaMinaei/theatre"&gt;
        theatre
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Motion design editor for the web
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Theatre.js&lt;/h1&gt;
&lt;p&gt;Theatre.js is an animation library for high-fidelity motion graphics. It is designed to help you express detailed animation, enabling you to create intricate movement, and convey nuance.&lt;/p&gt;
&lt;p&gt;Theatre can be used both programmatically &lt;em&gt;and&lt;/em&gt; visually.&lt;/p&gt;
&lt;p&gt;You can use Theatre.js to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Animate 3D objects made with THREE.js or other 3D libraries&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-3d-short.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ucXLDouA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-3d-short.gif" alt="s"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Art by &lt;a href="https://sketchfab.com/models/91964c1ce1a34c3985b6257441efa500" rel="nofollow"&gt;drei.lu&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Animate HTML/SVG via React or other libraries&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-dom.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CA_sLTTH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-dom.gif" alt="s"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Design micro-interactions&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-micro-interaction.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2i2wiumJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-micro-interaction.gif" alt="s"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choreograph generative interactive art&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-generative.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8CCOzYvU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-generative.gif" alt="s"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Or animate any other JS variable&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-console.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gGfKlYwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-console.gif" alt="s"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Documentation and Tutorials&lt;/h2&gt;
&lt;p&gt;The docs are at &lt;a href="https://docs.theatrejs.com" rel="nofollow"&gt;docs.theatrejs.com&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.theatrejs.com/getting-started/" rel="nofollow"&gt;Getting started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.theatrejs.com/in-depth/" rel="nofollow"&gt;In depth guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.theatrejs.com/api/" rel="nofollow"&gt;API docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.theatrejs.com/extensions/" rel="nofollow"&gt;Extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/channel/UCsp9XOCs8v2twyq5kMLzS2Q" rel="nofollow"&gt;Video tutorials&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=icR9EIS1q34" rel="nofollow"&gt;Crash course&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QoS4gMxwq_4" rel="nofollow"&gt;Animating with music&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/akella" rel="nofollow"&gt;Yuri Artiukh&lt;/a&gt;'s &lt;a href="https://youtu.be/qmRqgFbNprM?t=3462" rel="nofollow"&gt;stream&lt;/a&gt; with a section on using Theatre with THREE.js&lt;/li&gt;
&lt;li&gt;&amp;lt;Add your own tutorials here&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Community and support&lt;/h2&gt;
&lt;p&gt;Join our friendly community on &lt;a href="https://discord.gg/bm9f8F9Y9N" rel="nofollow"&gt;Discord&lt;/a&gt;, follow the updates on &lt;a href="https://twitter.com/AriaMinaei" rel="nofollow"&gt;twitter&lt;/a&gt; or write us an &lt;a href="https://github.com/AriaMinaei/theatremailto:hello@theatrejs.com"&gt;email&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Development and contributing&lt;/h2&gt;
&lt;p&gt;If you want to change the source of Theatre, have a look…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/AriaMinaei/theatre"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-molecule"&gt;
  &lt;/a&gt;
  6. Molecule
&lt;/h3&gt;

&lt;p&gt;Molecule is a lightweight Web IDE UI framework which is built with React.js and inspired by the VSCode.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/DTStack"&gt;
        DTStack
      &lt;/a&gt; / &lt;a href="https://github.com/DTStack/molecule"&gt;
        molecule
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🚀 A lightweight Web IDE UI framework.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
 &lt;a rel="noopener noreferrer" href="https://github.com/DTStack/molecule./website/static/img/logo@3x.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UXYTgKxU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/DTStack/molecule./website/static/img/logo%403x.png" width="20%" height="20%" alt="watchman-logo"&gt;&lt;/a&gt;
 &lt;h1&gt;
Molecule&lt;/h1&gt;
 &lt;h3&gt;
A lightweight Web IDE UI Framework&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/DTStack/molecule/actions/workflows/main.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aXOJNPHX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/DTStack/molecule/actions/workflows/main.yml/badge.svg" alt="CI"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/DTStack/molecule" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5ebed4408e3788c5539b4bae06b8ce6c3decd81051881bbfdb39e9e91389c2ea/68747470733a2f2f636f6465636f762e696f2f67682f4454537461636b2f6d6f6c6563756c652f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d50446a6243426f36717a" alt="Codecov"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@dtinsight/molecule" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/21931a1c7861bb81ed784097c761cfde381f6ea2c9da3378858ec4e408fe8109/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f406474696e73696768742f6d6f6c6563756c652e7376673f7374796c653d666c6174" alt="NPM downloads"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@dtinsight/molecule" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f33e9a7d8b004848f5db7b07da23468cbbcf302998590d8a3a1c6f5457aac663/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f406474696e73696768742f6d6f6c6563756c652e7376673f7374796c653d666c61742d737175617265" alt="NPM version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://github.com/DTStack/molecule./README-zhCN.md"&gt;中文&lt;/a&gt; | &lt;a href="https://github.com/DTStack/molecule./README.md"&gt;English&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Molecule&lt;/strong&gt; is a lightweight &lt;strong&gt;Web IDE UI&lt;/strong&gt; framework which is built with React.js and inspired by the VSCode. We have designed the Extension APIs similar to the VSCode, to help developers extend the Workbench in an easier way. It's convenient to integrate the Molecule with React.js applications. It has been applied to many products in &lt;a href="https://www.dtstack.com/" rel="nofollow"&gt;DTStack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dtstack.github.io/molecule-examples/#/" rel="nofollow"&gt;Online Preview&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Built-in the VSCode &lt;strong&gt;Workbench&lt;/strong&gt; UI&lt;/li&gt;
&lt;li&gt;Compatible with the VSCode &lt;strong&gt;ColorTheme&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Customize the Workbench via &lt;strong&gt;React Component&lt;/strong&gt; easily&lt;/li&gt;
&lt;li&gt;Built-in Monaco-Editor &lt;strong&gt;Command Palette, Keybinding&lt;/strong&gt; features&lt;/li&gt;
&lt;li&gt;Support the &lt;strong&gt;i18n&lt;/strong&gt;, built-in zhCN, and English&lt;/li&gt;
&lt;li&gt;Built-in &lt;strong&gt;Settings&lt;/strong&gt;, support to edit and extend via the Extension&lt;/li&gt;
&lt;li&gt;Built-in basic &lt;strong&gt;Explorer, Search&lt;/strong&gt; components, and support extending via the Extension&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Typescript&lt;/strong&gt; Ready&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install @dtinsight/molecule
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Or&lt;/span&gt;
yarn add @dtinsight/molecule&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Basic Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;React&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;ReactDOM&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react-dom'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;MoleculeProvider&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/DTStack/molecule"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-rfs"&gt;
  &lt;/a&gt;
  7. RFS
&lt;/h3&gt;

&lt;p&gt;RFS is a unit resizing engine which was initially developed to resize font sizes. RFS is capable of rescaling basically every value for any css property with units, like margin, padding, border-radius or even box-shadow.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/twbs"&gt;
        twbs
      &lt;/a&gt; / &lt;a href="https://github.com/twbs/rfs"&gt;
        rfs
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ✩ Automates responsive resizing ✩
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/twbs/rfs/main/rfs.svg?sanitize=true"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vT9LWwWw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/twbs/rfs/main/rfs.svg%3Fsanitize%3Dtrue" alt="RFS logo" width="99" height="108.6"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;RFS is a unit resizing engine which was initially developed to resize font sizes (hence its abbreviation for Responsive Font Sizes). Nowadays RFS is capable of rescaling basically every value for any css property with units, like &lt;code&gt;margin&lt;/code&gt;, &lt;code&gt;padding&lt;/code&gt;, &lt;code&gt;border-radius&lt;/code&gt; or even &lt;code&gt;box-shadow&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The mechanism &lt;strong&gt;automatically calculates the appropriate values&lt;/strong&gt; based on the dimensions of the browser viewport. It's available in one of your favourite preprocessors or postprocessor: &lt;a href="https://sass-lang.com/" rel="nofollow"&gt;Sass&lt;/a&gt;, &lt;a href="http://lesscss.org/" rel="nofollow"&gt;Less&lt;/a&gt;, &lt;a href="http://stylus-lang.com/" rel="nofollow"&gt;Stylus&lt;/a&gt; or &lt;a href="https://postcss.org/" rel="nofollow"&gt;PostCSS&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;
RFS&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/rfs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d46346e93dbb23fb758c8f2d7d19fa39ce2ca20996a592e8d5f1de68419c106e/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f726673" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://github.com/twbs/rfs/blob/main/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/0f941dfbce1eff53b1141bf9f97af58f4f83bbbffca238bb7cfc39c42cd0ceee/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f726673" alt="licence"&gt;&lt;/a&gt;
&lt;a href="https://github.com/twbs/rfs/actions?query=workflow%3ATests+branch%3Amain"&gt;&lt;img src="https://camo.githubusercontent.com/9fda78c6a83b81b851a8a24d759890ab7179fa2348fd43a6449740dd6af707f3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f747762732f7266732f54657374732f6d61696e3f6c6162656c3d5465737473266c6f676f3d676974687562" alt="build"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/twbs/rfs#demos"&gt;Demos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twbs/rfs#advantages"&gt;Advantages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twbs/rfs#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twbs/rfs#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twbs/rfs#visualisation"&gt;Visualisation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twbs/rfs#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twbs/rfs#creator"&gt;Creator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twbs/rfs#copyright-and-license"&gt;Copyright and license&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Demos&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codepen.io/MartijnCuppens/pen/vqaEBG?editors=0100" rel="nofollow"&gt;Card example (Sass)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codepen.io/MartijnCuppens/pen/voXLGL?editors=1100" rel="nofollow"&gt;Card example (Sass, with custom properties)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codepen.io/MartijnCuppens/pen/aeojgG?editors=0100" rel="nofollow"&gt;Card example (PostCSS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codepen.io/MartijnCuppens/pen/JgRYaw?editors=0100" rel="nofollow"&gt;Card example (PostCSS, with custom properties)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codepen.io/MartijnCuppens/pen/ZBjdMy?editors=0100" rel="nofollow"&gt;Simple font rescaling Codepen Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://project-rfs.github.io/" rel="nofollow"&gt;RFS in Bootstrap demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Advantages&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;No need to rescale paddings or margins anymore.&lt;/li&gt;
&lt;li&gt;Text won't be chopped off in smaller viewports when RFS is applied to font sizes.&lt;/li&gt;
&lt;li&gt;RFS will prevent the font size from rescaling…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/twbs/rfs"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-clipanion"&gt;
  &lt;/a&gt;
  8. Clipanion
&lt;/h3&gt;

&lt;p&gt;Type-safe CLI library / framework with no runtime dependencies&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/arcanis"&gt;
        arcanis
      &lt;/a&gt; / &lt;a href="https://github.com/arcanis/clipanion"&gt;
        clipanion
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Type-safe CLI library / framework with no runtime dependencies
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/arcanis/clipanion./logo.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1TjHRhw8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/arcanis/clipanion./logo.svg" height="25"&gt;&lt;/a&gt; Clipanion&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Type-safe CLI library with no runtime dependencies&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://yarnpkg.com/package/clipanion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fb64b0d64b18b34d016b791126cd22d26a363f4df34e2e5798424293d3912369/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f636c6970616e696f6e2e737667" alt="npm version"&gt;&lt;/a&gt; &lt;a href="https://github.com/arcanis/clipanion#license-mit"&gt;&lt;img src="https://camo.githubusercontent.com/be5c000f3f5c9433e8d8a83fda4182bcbe71c47c165c22e351a03353661f0131/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f636c6970616e696f6e2e737667" alt="Licence"&gt;&lt;/a&gt; &lt;a href="https://github.com/yarnpkg/berry"&gt;&lt;img src="https://camo.githubusercontent.com/d894b92f4de0b5d34c1469f8ebd0c405ab843d0b03afcb99080cf010f5436eed/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646576656c6f706564253230776974682d5961726e253230322d626c7565" alt="Yarn"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;yarn add clipanion&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Why&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Clipanion supports advanced typing mechanisms&lt;/li&gt;
&lt;li&gt;Clipanion supports nested commands (&lt;code&gt;yarn workspaces list&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Clipanion supports transparent option proxying without &lt;code&gt;--&lt;/code&gt; (for example &lt;code&gt;yarn dlx eslint --fix&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Clipanion supports all option types you could think of (including negations, batches, ...)&lt;/li&gt;
&lt;li&gt;Clipanion offers a &lt;a href="https://github.com/arcanis/typanion"&gt;Typanion&lt;/a&gt; integration for increased validation capabilities&lt;/li&gt;
&lt;li&gt;Clipanion generates an optimized state machine out of your commands&lt;/li&gt;
&lt;li&gt;Clipanion generates good-looking help pages out of the box&lt;/li&gt;
&lt;li&gt;Clipanion offers common optional command entries out-of-the-box (e.g. version command, help command)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Clipanion is used in &lt;a href="https://github.com/yarnpkg/berry"&gt;Yarn&lt;/a&gt; with great success.&lt;/p&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;Check the website for our documentation: &lt;a href="https://mael.dev/clipanion/" rel="nofollow"&gt;mael.dev/clipanion&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Migration&lt;/h2&gt;
&lt;p&gt;You can use &lt;a href="https://github.com/paul-soporan/clipanion-v3-codemod"&gt;&lt;code&gt;clipanion-v3-codemod&lt;/code&gt;&lt;/a&gt; to migrate a Clipanion v2 codebase to v3.&lt;/p&gt;
&lt;h2&gt;
Overview&lt;/h2&gt;
&lt;p&gt;Commands are declared by extending from the &lt;code&gt;Command&lt;/code&gt; abstract base class, and more specifically by implementing its &lt;code&gt;execute&lt;/code&gt; method which will then be called by…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/arcanis/clipanion"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#9-liqvid"&gt;
  &lt;/a&gt;
  9. liqvid
&lt;/h3&gt;

&lt;p&gt;A library for making interactive videos in React. For example an interactive coding demo inside a video.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/liqvidjs"&gt;
        liqvidjs
      &lt;/a&gt; / &lt;a href="https://github.com/liqvidjs/player"&gt;
        player
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Library for interactive videos in React
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
liqvid&lt;/h1&gt;
&lt;p&gt;This is a library for making &lt;strong&gt;interactive&lt;/strong&gt; videos in React.&lt;/p&gt;
&lt;p&gt;For example, here's an interactive coding demo inside a video:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gfycat.com/frailtemptingeyra" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3ba1e1387350c340f5ef19d76b3ac724fd955b15d4ab8f382013dbd0504724ec/68747470733a2f2f7468756d62732e6766796361742e636f6d2f467261696c54656d7074696e67457972612d73697a655f726573747269637465642e676966"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here's an interactive graph:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gfycat.com/magnificentdopeybrownbear" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/284e22d021265ca951e0875b2fc6e308a15332d4bb8fd414e0d304e9782aea49/68747470733a2f2f7468756d62732e6766796361742e636f6d2f4d61676e69666963656e74446f70657942726f776e626561722d73697a655f726573747269637465642e676966"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To get started, clone &lt;a href="https://github.com/ysulyma/rp-tutorial"&gt;https://github.com/ysulyma/rp-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For documentation, visit &lt;a href="https://liqvidjs.org/" rel="nofollow"&gt;https://liqvidjs.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For inspiration, see &lt;a href="https://epiplexis.xyz/" rel="nofollow"&gt;https://epiplexis.xyz/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/liqvidjs/player"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#10-ajqueryjs"&gt;
  &lt;/a&gt;
  10. ajquery.js
&lt;/h3&gt;

&lt;p&gt;The fastest, most lightweight, least dependency jQuery alternative.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/coolaj86"&gt;
        coolaj86
      &lt;/a&gt; / &lt;a href="https://github.com/coolaj86/ajquery.js"&gt;
        ajquery.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The fastest, most lightweight, least dependency jQuery alternative.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a href="https://git.coolaj86.com/coolaj86/ajquery.js" rel="nofollow"&gt;ajquery.js&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The fastest, most lightweight, fewest dependency jQuery alternative.&lt;/p&gt;
&lt;p&gt;Development Build: 145B (with comments) &lt;br&gt;
Production Build: 103B (min + gz)&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;div class="highlight highlight-text-html-basic position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;https://unpkg.com/ajquery&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Example Usage&lt;/h2&gt;
&lt;p&gt;Provides modern, advanced CSS4-compatible query selection:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"innerText:"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-en"&gt;$&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"p:nth-child(2"&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;innerText&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
API&lt;/h2&gt;
&lt;h3&gt;
&lt;code&gt;$(selector, [rootElement])&lt;/code&gt;
&lt;/h3&gt;
&lt;p&gt;Selects the first matching HTML element only (or &lt;code&gt;null&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;body&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;$&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"body"&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;div1&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;$&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"div"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;body&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;code&gt;$$(selector, [rootElement])&lt;/code&gt;
&lt;/h3&gt;
&lt;p&gt;Selects all matching elements (or an empty &lt;code&gt;NodeList&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;head&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;$&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"head"&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;stylesheets&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;$$&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'link[rel="stylesheet"]'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;head&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;map&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Benchmarks&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/122831/126774017-9e2a4f32-3ab8-4ba8-a7f3-290977a49cd0.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y48KnqtF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/122831/126774017-9e2a4f32-3ab8-4ba8-a7f3-290977a49cd0.png" alt="ajquery-benchmarks" title="it's over 9000"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Compatibility&lt;/h2&gt;
&lt;p&gt;Written entirely in modern ECMAScript 3, and directly transpilable into ES5, ES6
and beyond (up to ES11) via Webpack, Babel, Rollup, React Native, and AWS
InfiniDash.&lt;/p&gt;
&lt;p&gt;Works in…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/coolaj86/ajquery.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/Eugeny/tabby"&gt;Tabby&lt;/a&gt; +1,119 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +976 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/picocss/pico"&gt;Pico&lt;/a&gt; +915 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +618 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer Roadmap&lt;/a&gt; +567 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/rakkasjs/rakkasjs"&gt;Rakkas&lt;/a&gt; +74%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Aslemammad/tinyspy"&gt;TinySpy&lt;/a&gt; +63%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/picocss/pico"&gt;Pico&lt;/a&gt; +45%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vinibiavatti1/TuiCss"&gt;TuiCss&lt;/a&gt; +26%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/KATT/envsafe"&gt;envsafe&lt;/a&gt; +20%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/Eugeny/tabby"&gt;Tabby&lt;/a&gt; +5,737 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +5,312 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/remix-run/remix"&gt;Remix&lt;/a&gt; +5,199 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +4,608 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer Roadmap&lt;/a&gt; +4,602 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/picocss/pico"&gt;Pico&lt;/a&gt; +374%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/remix-run/remix"&gt;Remix&lt;/a&gt; +125%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rakkasjs/rakkasjs"&gt;Rakkas&lt;/a&gt; +100%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/NitzanHen/agrippa"&gt;Agrippa&lt;/a&gt; +86%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/eBay/nice-modal-react"&gt;Nice Modal React&lt;/a&gt; +85%&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For all for the latest rankings please checkout &lt;a href="https://stargazing.dev"&gt;Stargazing.dev&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/stargazing_dev"&gt;follow me&lt;/a&gt; on Twitter where I regularly post about HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>vite</category>
    </item>
    <item>
      <title>JavaScript is a single threaded "Synchronous", What does that mean?!</title>
      <author>Ahmad Mkahal</author>
      <pubDate>Fri, 24 Dec 2021 13:48:00 +0000</pubDate>
      <link>https://dev.to/ahmedm1999/javascript-is-a-single-threaded-synchronous-what-does-that-mean-271h</link>
      <guid>https://dev.to/ahmedm1999/javascript-is-a-single-threaded-synchronous-what-does-that-mean-271h</guid>
      <description>&lt;p&gt;Hello everyone, in this article I will give you the mean of &lt;strong&gt;single threaded javascript&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;First, let's talk about the &lt;strong&gt;JavaScript engine&lt;/strong&gt; in brief way.&lt;/p&gt;

&lt;p&gt;A &lt;code&gt;JavaScript engine&lt;/code&gt; is a software component that executes JavaScript code, Its consists of many steps and components to allow it perform it's tasks.&lt;/p&gt;

&lt;p&gt;The two main important things in this step are: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1-&lt;/strong&gt; We need to store and write information/data for our application (variables, objects, etc..).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2-&lt;/strong&gt; We need to keep track of what's happening to our code line by line.&lt;/p&gt;

&lt;p&gt;This is where a &lt;code&gt;Call stack&lt;/code&gt; and &lt;code&gt;Memory heap&lt;/code&gt; comes in.&lt;/p&gt;

&lt;p&gt;This image explain this two component in graphical way :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TJImUnvL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/766bridbz6pyjqjwr4u4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TJImUnvL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/766bridbz6pyjqjwr4u4.jpg" alt="Memory heap and call stack" width="524" height="357"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Call stack: &lt;/p&gt;

&lt;p&gt;Help to know where we are in the code and to keep track of its place in a script that calls multiple functions — what function is currently being run and what functions are called from within that function, etc.&lt;br&gt;
To know more about call stack and how it is work exactly, I recommend &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Call_stack"&gt;this tutorial&lt;/a&gt;  for you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Memory heap:&lt;/p&gt;

&lt;p&gt;The memory heap, also called the ‘heap’, is a section of unstructured memory that is used for the allocation of objects and variables, so it is where our variables and functions stores Briefly.&lt;br&gt;
To deep in heap from &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Memory_Management"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that, back to our main subject, &lt;strong&gt;"Javascript is a single threaded programming language"&lt;/strong&gt; which means it has only one call stack that is used to execute the program, so one set of instructions is executed at a time, it's not doing multiple things.&lt;br&gt;
And because of that JavaScript is &lt;strong&gt;Synchronous&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;So if you understand what is single threaded means, it's the same concept with Synchronous JavaScript &lt;strong&gt;"one thing at a time"&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This approach of programming lead to make many problems, so the direction now to use another way of JavaScript called &lt;strong&gt;"Asynchronous"&lt;/strong&gt; programming.&lt;br&gt;
I will make to it another article in the come in days.&lt;/p&gt;

&lt;p&gt;Hope you clearly understand this important concepts as a JavaScript developer! 🙌🌹 &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ahmad Mukahal&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>angular</category>
      <category>vue</category>
    </item>
    <item>
      <title>20+ Useful JavaScript Array Methods Cheatsheet</title>
      <author>Ayesha Sahar</author>
      <pubDate>Fri, 24 Dec 2021 13:34:37 +0000</pubDate>
      <link>https://dev.to/iayeshasahar/20-useful-javascript-array-methods-cheatsheet-1o94</link>
      <guid>https://dev.to/iayeshasahar/20-useful-javascript-array-methods-cheatsheet-1o94</guid>
      <description>&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Table of Contents&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="#arrays"&gt;Arrays&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#1"&gt;Array.push()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2"&gt;Array.unshift()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3"&gt;Array.pop()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4"&gt;Array.shift()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5"&gt;Array.splice()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#6"&gt;Array.concat()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#7"&gt;Array.isArray()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#8"&gt;Array.slice()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#9"&gt;Array.length&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#10"&gt;Array.includes()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#11"&gt;Array.from()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#12"&gt;Array.fill()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#13"&gt;Array.filter()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#14"&gt;Array.find()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#15"&gt;Array.forEach()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#16"&gt;Array.map()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#17"&gt;Array.flat()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#18"&gt;Array.reverse()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#19"&gt;Array.every()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#20"&gt;Array.copyWithin()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#21"&gt;Array.reduce()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#22"&gt;Array.flatMap()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#23"&gt;Array.some()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#24"&gt;Array.of()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#25"&gt;Array.sort()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#26"&gt;Array.join()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#27"&gt;Array.toLocaleString()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#28"&gt;Array.keys()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#29"&gt;Array.values()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#30"&gt;Array.entries()&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#arrays"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Arrays&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;If we talk in programming language, an array is said to be a collection of elements or items. They store data as elements and can retrieve them back whenever you need them. It is a widely used data structure in the programming languages that support it.&lt;br&gt;
In JavaScript, we can use a pair of square brackets [] to represent an array. Every single element in the array is separated by a comma(,). They can be a collection of elements of any data type, meaning that you can create an array with elements of data type String, Boolean, Number, Objects, and even other Arrays. They are used to store multiple values in a single variable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array_name = [itemA, itemB, itemC,.............];   
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const flowers = ["lily", "rose", "tulip"];
console.log(flowers);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;lily, rose, tulip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Arrays truly are a wonder in JavaScript. They have many useful built-in properties or methods that can help you resolve any task involving them. Let's discuss the most important and useful ones now.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-arraypush"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Array.push()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method adds elements at the end of an array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Declaring and initializing our number array
var number_arr = [ 1, 2, 3, 4, 5];

// Adding 6 to the end of the array
number_arr.push(6);

console.log(number_arr);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1, 2, 3, 4, 5, 6
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-arrayunshift"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. Array.unshift()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It is the opposite of array.push(). This method adds elements to the front of the array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Declaring and initializing our number array
var number_arr = [ 1, 2, 3, 4, 5];

// Now adding 6 to the front of the array
number_arr.unshift(6);

console.log(number_arr);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;6, 1, 2, 3, 4, 5, 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-arraypop"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. Array.pop()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method removes elements from the end of the array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Declaring and initializing our number array
var number_arr = [ 1, 2, 3, 4, 5];

// It will remove element from end of the array
number_arr.pop();

console.log(number_arr);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1, 2, 3, 4,  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-arrayshift"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4. Array.shift()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It is the opposite of array.pop(). It removes elements from the front of the array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Declaring and initializing our number array
var number_arr = [ 1, 2, 3, 4, 5];

// Removing element from front of the array
number_arr.shift();

console.log(number_arr);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;2, 3, 4, 5 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-arraysplice"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. Array.splice()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It is a very useful method. It can remove or add elements from or in any particular location of the array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Adding elements using splice()
const fruits = ["Banana", "Orange", "Apple", "Mango"];

// At position 2, adding 2 elements
fruits.splice(2, 0, "Lemon", "Kiwi");

console.log(fruits);

// Removing elements using splice()

const number_arr = [ 2, 3, 4, 5, 6 ];

// using splice() to delete 3 elements starting from index 1
number_arr.splice(1, 3);

console.log(number_arr);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Banana, Orange, Lemon, Kiwi, Apple, Mango
2, 6
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-arrayconcat"&gt;
  &lt;/a&gt;
  &lt;strong&gt;6. Array.concat()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method is used to join two or more arrays.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Declaring and initializing our arrays

const fruits = ["apple", "orange"];
const vegetables = ["potato", "capsicum", "carrot"];

const all = fruits.concat(vegetables);

console.log(all);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apple, orange, potato, capsicum, carrot
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-arrayisarray"&gt;
  &lt;/a&gt;
  &lt;strong&gt;7. Array.isArray()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It determines whether the value passed through it is an array or not and returns the answer in booleans (true or false).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Declaring and initializing our array

const fruits = ["apple", "orange"];
Array.isArray(fruits);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;True
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-arrayslice"&gt;
  &lt;/a&gt;
  &lt;strong&gt;8. Array.slice()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method returns selected elements from an array, as a new array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Declaring and initializing our array

const fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];
const citrus = fruits.slice(1, 3);
console.log(citrus);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Orange, Apple
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#9-arraylength"&gt;
  &lt;/a&gt;
  &lt;strong&gt;9. Array.length&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method returns or sets the number of elements in an array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Declaring and initializing our array

const fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];

// Checking the length of the array
const len = fruits.length;

// Printing the result
console.log(len);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#10-arrayincludes"&gt;
  &lt;/a&gt;
  &lt;strong&gt;10. Array.includes()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method checks if an array has a certain value among its elements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Initializing and declaring our array
let fruits = ["Banana", "Apple", "Mango", "Peach", "Orange, "Grapes"];

let check = fruits.includes("Apple");
console.log(check); // true

// This method is case sensitive

let check1 = fruits.includes("apple");
console.log(check1); // false

// The second argument here specifies position to start searching from

let check2 = fruits.includes("Apple", 2);
console.log(check2); // false

// The negative argument here starts the count from backwards
// Searching starts from third-to-last element

let check3 = fruits.includes("Apple", -3);
console.log(check3); // false

let check4 = fruits.includes("Lime");
console.log(check4); // false

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;true
false
false
false
false
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#11-arrayfrom"&gt;
  &lt;/a&gt;
  &lt;strong&gt;11. Array.from()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method creates a new but shallow-copied Array instance from an array-like or iterable object.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log(Array.from('hello'));
// output: Array ["h", "e", "l", "l", "o"]

console.log(Array.from([2, 3, 4], x =&amp;gt; x + x));
// expected output: Array [4, 6, 8]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#12-arrayfill"&gt;
  &lt;/a&gt;
  &lt;strong&gt;12. Array.fill()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method changes all elements in an array to a static value, from a start index (default 0) to an end index (default array.length). It returns the modified array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = [1, 2, 3, 4];

// fill with 1 from position 2 until position 4
console.log(arrayA.fill(0, 2, 4));
// output: [1, 2, 1, 1]

// fill with 6 from position 1
console.log(arrayA.fill(5, 1));
// output: [1, 6, 6, 6]

console.log(arrayA.fill(8));
// output: [8, 8, 8, 8]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#13-arrayfilter"&gt;
  &lt;/a&gt;
  &lt;strong&gt;13. Array.filter()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method creates a new array with all elements that pass the test implemented by the provided function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const words = ['hello', 'hi', 'elite', 'amazing', 'adios', 'present'];

const result = words.filter(word =&amp;gt; word.length &amp;gt; 6);

console.log(result);
// output: Array ["amazing", "present"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#14-arrayfind"&gt;
  &lt;/a&gt;
  &lt;strong&gt;14. Array.find()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method returns the value of the first element in the provided array that satisfies the provided testing function. If no values satisfy the testing function, undefined is returned.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = [7, 12, 8, 140, 54];

const found = arrayA.find(element =&amp;gt; element &amp;gt; 10);

console.log(found);
// output: 12

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#15-arrayforeach"&gt;
  &lt;/a&gt;
  &lt;strong&gt;15. Array.forEach()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method executes a provided function once for each array element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = ['c', 'd', 'e'];

arrayA.forEach(element =&amp;gt; console.log(element));

// output: "c"
// output: "d"
// output: "e"

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#16-arraymap"&gt;
  &lt;/a&gt;
  &lt;strong&gt;16. Array.map()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method creates a new array populated with the results of calling a provided function on every element in the calling array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = [3, 4, 7, 16];

// pass a function to map
const map1 = arrayA.map(x =&amp;gt; x * 2);

console.log(map1);
// output: Array [6, 8, 14, 32]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#17-arrayflat"&gt;
  &lt;/a&gt;
  &lt;strong&gt;17. Array.flat()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method creates a new array with all sub-array elements concatenated into it recursively up to the specified depth.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrA = [0, 1, 2, [5, 7]];

console.log(arrA.flat());
// output: [0, 1, 2, 5, 7]

const arrB = [0, 1, 2, [[[5, 7]]]];

console.log(arrB.flat(2));
// output: [0, 1, 2, [5, 7]]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#18-arrayreverse"&gt;
  &lt;/a&gt;
  &lt;strong&gt;18. Array.reverse()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method reverses an array in place. The first array element becomes the last, and the last array element becomes the first.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = ['A', 'B', 'C'];
console.log('arrayA:', arrayA);
// output: "arrayA:" Array ["A", "B", "C"]

const reversed = arrayA.reverse();
console.log('reversed:', reversed);
// output: "reversed:" Array ["C", "B", "A"]

console.log('arrayA:', arrayA);
// output: "arrayA:" Array ["C", "B", "A"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#19-arrayevery"&gt;
  &lt;/a&gt;
  &lt;strong&gt;19. Array.every()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method tests whether all elements in the array pass the test implemented by the provided function. It returns a Boolean value.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const isBelow = (currentValue) =&amp;gt; currentValue &amp;lt; 50;

const arrayA = [3, 0, 39, 19, 40,45];

console.log(arrayA.every(isBelow));
// output: true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#20-arraycopywithin"&gt;
  &lt;/a&gt;
  &lt;strong&gt;20. Array.copyWithin()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method shallow copies part of an array to another location in the same array and returns it without modifying its length.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = ['A', 'B', 'C', 'D', 'E'];

// copy to index 0 the element at index 3
console.log(arrayA.copyWithin(0, 3, 4));
// output: Array ["D", "B", "C", "D", "E"]

// copy to index 1 all elements from index 3 to the end
console.log(arrayA.copyWithin(1, 3));
// output: Array ["D", "D", "E", "D", "E"]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#21-arrayreduce"&gt;
  &lt;/a&gt;
  &lt;strong&gt;21. Array.reduce()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The easiest-to-understand explanation for reduce() is that it returns the sum of all the elements in an array. It walks through the array element-by-element and at each step, it adds the current array value to the result from the previous step until there are no more elements to add.&lt;/p&gt;

&lt;p&gt;Moreover, it can also apply any callback function such as mean, median, count, etc. The sum is the simplest and easiest to understand use case!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = [3, 2, 8, 4];
const reducer = (previousValue, currentValue) =&amp;gt; previousValue + currentValue;

// 3 + 2 + 8 + 4
console.log(arrayA.reduce(reducer));
// output: 17

// 5 + 3 + 2 + 8 + 4
console.log(arrayA.reduce(reducer, 5));
// output: 22
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#22-arrayflatmap"&gt;
  &lt;/a&gt;
  &lt;strong&gt;22. Array.flatMap()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method returns a new array that is basically formed by applying a given callback function to each element of the array, and then flattening the result by one level. It is identical to a map() followed by a flat() of depth 1. But it is slightly more efficient and time-saving than calling those two methods separately.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arrA = [3, 2, 9, 4];

arrA.flatMap(x =&amp;gt; [x * 2]);
// [6, 4, 18, 8]

// only one level is flattened
arrA.flatMap(x =&amp;gt; [[x * 2]]);
// [[3], [4], [9], [8]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#23-arraysome"&gt;
  &lt;/a&gt;
  &lt;strong&gt;23. Array.some()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method checks to see if at least one of array’s item passed a certain pre-defined condition. If passed, it return "true" otherwise "false".&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   const arrayA = [1, 2, 3, 4, 5, 6];

  // at least one element is greater than 3?
  const largeNum = arr.some(num =&amp;gt; num &amp;gt; 3);
  console.log(largeNum); 
  // output: true

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#24-arrayof"&gt;
  &lt;/a&gt;
  &lt;strong&gt;24.  Array.of()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method create array from every arguments passed into it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  const alphabets = Array.of(a, b, c, d, e, f);
  console.log(alphabets); 
  // output: [a, b, c, d, e, f]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#25-arraysort"&gt;
  &lt;/a&gt;
  &lt;strong&gt;25. Array.sort()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method is used to sort any array’s items either in ascending or descending order.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  const numbers = [1, 2, 3, 4, 5, 6];
  const alphabets = ['d', 'a', 'c', 't', 'z'];

  //sort in descending order
  descOrder = numbers.sort((a, b) =&amp;gt; a &amp;gt; b ? -1 : 1);
  console.log(descOrder); 
  //output: [6, 5, 4, 3, 2, 1]

  //sort in ascending order
  ascOrder = alphabets.sort((a, b) =&amp;gt; a &amp;gt; b ? 1 : -1);
  console.log(ascOrder); 
  //output: ['a', 'c', 'd', 't', 'z']

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#26-arrayjoin"&gt;
  &lt;/a&gt;
  &lt;strong&gt;26. Array.join()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It creates and returns a new string by concatenating all of the elements in an array separated by commas or a specified separator string. But if the array consists of one item, then that item will be returned without using the separator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const elements = ['Hi', 'Hello', 'Bye'];

console.log(elements.join());
// output: "Hi,Hello,Bye"

console.log(elements.join(''));
// output: "HiHelloBye"

console.log(elements.join('-'));
// output: "Hi-Hello-Bye"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#27-arraytolocalestring"&gt;
  &lt;/a&gt;
  &lt;strong&gt;27. Array.toLocaleString()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method returns a string representing the elements of the array. The elements are converted to Strings using their toLocaleString methods. Then those Strings are separated by a locale-specific String (such as a comma “,”).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array1 = [1, 'a', new Date('29 Dec 2002 16:12:00 UTC')];
const localeString = array1.toLocaleString('en', { timeZone: 'UTC' });

console.log(localeString);
// output: "1,a,12/29/2002, 4:12:00 PM",
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#28-arraykeys"&gt;
  &lt;/a&gt;
  &lt;strong&gt;28. Array.keys()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method returns a new Array Iterator object that contains the keys for each index in the array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = ['A', 'B', 'C', 'D'];
const iterator = arrayA.keys();

for (const key of iterator) {
  console.log(key);
}

// output: 0
// output: 1
// output: 2
// output: 3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#29-arrayvalues"&gt;
  &lt;/a&gt;
  &lt;strong&gt;29. Array.values()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method returns a new array iterator object that contains the values for each index in the array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = ['A', 'B', 'C', 'D'];
const iterator = arrayA.keys();

for (const value of iterator) {
  console.log(value);
}

// output: A
// output: B
// output: C
// output: D
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#30-arrayentries"&gt;
  &lt;/a&gt;
  &lt;strong&gt;30. Array.entries()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method returns a new Array Iterator object that contains the key/value pairs for each index in the array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = ['A', 'B', 'C'];

const iterator1 = arrayA.entries();

console.log(iterator1.next().value);
// output: Array [0, "A"]

console.log(iterator1.next().value);
// output: Array [1, "B"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;JavaScript arrays have quite a lot of useful methods that can simplify our development efforts. Knowing these methods can save us time and can even boost the performance of our code. I truly hoped that today you all learned something today, whether it was new array methods or refreshing your old concepts which you can use for your next project ^_^&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let's connect!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;✨ &lt;a href="https://twitter.com/IAyeshaSahar"&gt;Twitter&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;✨ &lt;a href="https://github.com/AyeshaSahar"&gt;Github&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Taiga UI: A year in Open Source</title>
      <author>Alex Inkin</author>
      <pubDate>Fri, 24 Dec 2021 13:28:19 +0000</pubDate>
      <link>https://dev.to/angular/taiga-ui-a-year-in-open-source-416l</link>
      <guid>https://dev.to/angular/taiga-ui-a-year-in-open-source-416l</guid>
      <description>&lt;p&gt;&lt;a href="https://taiga-ui.dev"&gt;Taiga UI&lt;/a&gt; is a huge Angular components library. We at &lt;a href="https://www.tinkoff.ru/eng"&gt;Tinkoff&lt;/a&gt; were developing it closed-source for a couple of years before finally going public with a second major version. It’s been a year since our open source release and today I want to look back at this part of our journey and lay down some plans for 2022. Let’s go!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#open-source"&gt;
  &lt;/a&gt;
  Open source
&lt;/h1&gt;

&lt;p&gt;Over this time the community started to build up. One benefit for going &lt;a href="https://github.com/TinkoffCreditSystems/taiga-ui"&gt;open source on GitHub&lt;/a&gt; is contribution made simpler even for colleagues from different projects. The environment is familiar, no extra authentication or VPN required and the pipeline is clear. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ss-qtFzb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/54ae293y2mv6yqvz1671.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ss-qtFzb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/54ae293y2mv6yqvz1671.png" alt="Image description" width="512" height="318"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We also spent quite some time to improve our processes utilizing many different tools to help us ship new versions safer and faster. &lt;/p&gt;

&lt;p&gt;Taiga UI is a monorepo that includes several libraries and a demo application. Now it is managed by &lt;a href="https://nx.dev/"&gt;NX tools&lt;/a&gt; that provide a lot of useful commands and increase speed of building and testing at both local development and CI/CD pipelines. If you plan on working with monorepos you should definitely try NX!&lt;/p&gt;

&lt;p&gt;Whenever a Pull Request is created we need to be able to quickly checkout the changes. Reading code diff is great, but sometimes you just need to tinker with the new version, test it on mobile, different browsers and OS. Cloud services are perfect for this case, they allow you to deploy the code temporarily and access it with a link from any device. We chose &lt;a href="https://firebase.google.com/"&gt;Firebase&lt;/a&gt; to host it for us and a Github action posts a link to the deployment as a comment in the Pull Request. It works like a charm and speeds up code reviews a lot. Read &lt;a href="https://firebase.google.com/docs/hosting/github-integration"&gt;this article&lt;/a&gt; to set it up on your repository!&lt;/p&gt;

&lt;p&gt;Moreover, every PR runs a set of &lt;a href="https://www.cypress.io/"&gt;Cypress&lt;/a&gt; screenshot tests that iterates over the demo portal and compares current components with their reference from the main branch. Cypress has a commercial solution where you can easily access failed screenshots through a dashboard. But we created a little &lt;a href="https://github.com/TinkoffCreditSystems/argus"&gt;Github bot&lt;/a&gt; that stores failed screenshots in a temporary branch and posts them to the PR as a comment, updating it on every push. This makes identifying problems with the UI library fast and easy. We opensourced this bot so you can use it too, read &lt;a href="https://medium.com/its-tinkoff/bots-should-work-developers-should-think-writing-github-app-with-node-js-2e8eb049d7e4"&gt;this article&lt;/a&gt; going over it in detail!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CZa2NyPs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/delq3c2gp2joqbe69yaj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CZa2NyPs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/delq3c2gp2joqbe69yaj.png" alt="Image description" width="512" height="239"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There’s also a &lt;a href="https://github.com/typicode/husky"&gt;husky&lt;/a&gt; precommit hook with &lt;a href="https://github.com/eslint/eslint"&gt;ESlint&lt;/a&gt; and &lt;a href="https://github.com/prettier/prettier"&gt;Prettier&lt;/a&gt; fixing and formatting changed code on every commit with &lt;a href="https://github.com/okonet/lint-staged"&gt;lint-staged&lt;/a&gt; which makes sure malformed code doesn't even make it to the Pull Request. Combined with &lt;a href="https://github.com/conventional-changelog/standard-version"&gt;standard-version&lt;/a&gt; and strict commit messages it makes releasing and changelog generation a breeze. For a contributor the workflow is as smooth as:&lt;/p&gt;

&lt;p&gt;fork → npm ci → npm start → code → commit → push&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-new"&gt;
  &lt;/a&gt;
  What’s new?
&lt;/h1&gt;

&lt;p&gt;When 2.0 went public it already was pretty big. But over the course of 2021 we added and improved a lot of things. With ideas and help from the community we significantly expanded customization and localization capabilities. This would be very helpful for our own international projects too. Taiga UI today has over 10 languages for built-in texts, RTL support for most of the components and various formats for money and dates. We also provide “ng add” schematic to get you started smoothly with Taiga UI. Let’s look at the most notable additions to our 150+ components base this year!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-components"&gt;
  &lt;/a&gt;
  New components
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://taiga-ui.dev/components/sheet"&gt;Sheet&lt;/a&gt;&lt;/strong&gt; — mobile sliding dialog&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yIgH8GDq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmrmtd9tqoyi7j1qgtnp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yIgH8GDq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmrmtd9tqoyi7j1qgtnp.png" alt="Image description" width="333" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://taiga-ui.dev/components/tree"&gt;Tree&lt;/a&gt;&lt;/strong&gt; — a flexible component to display tree-like data structures&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xpQumlIL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hmdc5346q5tefw14kiif.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xpQumlIL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hmdc5346q5tefw14kiif.png" alt="Image description" width="496" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://taiga-ui.dev/components/pdf-viewer"&gt;PdfViewer&lt;/a&gt;&lt;/strong&gt; — a custom dialog to preview PDFs in iframe&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2ldUsFKW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpnrss9fhyq5bjayazgi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2ldUsFKW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpnrss9fhyq5bjayazgi.png" alt="Image description" width="512" height="431"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://taiga-ui.dev/components/carousel"&gt;Carousel&lt;/a&gt;&lt;/strong&gt; — a common UI pattern for slider of images&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LvEBgQhv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1rmy7sguc6tpi29uiwj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LvEBgQhv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1rmy7sguc6tpi29uiwj.png" alt="Image description" width="512" height="250"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://taiga-ui.dev/components/arc-chart"&gt;ArcChart&lt;/a&gt;&lt;/strong&gt; — a new way to display numerical data&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7s14TVWx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l2xr0u9vmcpm9ic5j335.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7s14TVWx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l2xr0u9vmcpm9ic5j335.png" alt="Image description" width="512" height="207"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-addon-packages"&gt;
  &lt;/a&gt;
  New add-on packages
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://taiga-ui.dev/components/table"&gt;Table&lt;/a&gt;&lt;/strong&gt; — an interactive table component and related utilities&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6U4tTI8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rlyh5dfe2wz4jqtd9rp5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6U4tTI8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rlyh5dfe2wz4jqtd9rp5.png" alt="Image description" width="512" height="258"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://taiga-ui.dev/components/editor-new"&gt;Editor&lt;/a&gt;&lt;/strong&gt; — a rich text editor based on &lt;a href="https://tiptap.dev/"&gt;tiptap 2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZIPi1sUP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k09jqb9rzbm2bbeldjt7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZIPi1sUP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k09jqb9rzbm2bbeldjt7.png" alt="Image description" width="512" height="243"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://taiga-ui.dev/components/preview"&gt;Preview&lt;/a&gt;&lt;/strong&gt; — a custom dialog to preview aribtrary content such as images and documents&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vrWsISQv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0alvb5kmnig0f8nx893.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vrWsISQv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0alvb5kmnig0f8nx893.png" alt="Image description" width="512" height="386"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We’ve also added a bunch of helpful utils, tokens, services and directives, such as Pan, Swipe, DropdownHover and more and a night theme for all components:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uZsLRaGl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khkbdzh9ei1jy0h9jy06.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uZsLRaGl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khkbdzh9ei1jy0h9jy06.png" alt="Image description" width="512" height="314"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-coming"&gt;
  &lt;/a&gt;
  What’s coming?
&lt;/h1&gt;

&lt;p&gt;It was a productive year. We’ve grown a lot in infratructure and content, we started to build community of user, most notably from cryptocurrency area as it seems from the screenshots that come with user questions 🙂 In the coming year we plan to exapand our localization and internationalization options so that developers from across the globe can enjoy Taiga UI and use it in whatever project they are working on. Here’s a brief overview of what we plan to focus on in 2022:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Improve and stabilize new Editor add-on package&lt;/li&gt;
&lt;li&gt;Make all native inputs accessible from the outside of Taiga UI controls so it’s easy to assign attributes and listen to native events&lt;/li&gt;
&lt;li&gt;Rework some of our internals to rely more on CSS and less on JavaScript which would reduce change detection cycles&lt;/li&gt;
&lt;li&gt;Utilize DI more for customization&lt;/li&gt;
&lt;li&gt;Drop dependency on global styles&lt;/li&gt;
&lt;li&gt;Create ComponentHarnesses for Taiga UI components so they can be easily tested&lt;/li&gt;
&lt;li&gt;Support different implementations of notifications, like we do now for dialogs&lt;/li&gt;
&lt;li&gt;Reduce tech debt such as old components waiting for refactor and outdated mask library&lt;/li&gt;
&lt;li&gt;Prepare for the next major release with Angular 13 and Ivy distribution&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope you’re happy with Taiga UI and if you didn’t try it — please give it a shot! Feel free to open &lt;a href="https://github.com/TinkoffCreditSystems/taiga-ui/discussions"&gt;GitHub discussion&lt;/a&gt; or contact us over at &lt;a href="https://discord.gg/zrB2EdJjEy"&gt;Angular Discord&lt;/a&gt;. For Russian speaking users we have a &lt;a href="https://t.me/taiga_ui"&gt;Telegram chat&lt;/a&gt;. Our issues list is open for feature requests and bug reports. And it also always has &lt;a href="https://github.com/TinkoffCreditSystems/taiga-ui/issues?q=is%3Aissue+is%3Aopen+label%3A%22contributions+welcome%22"&gt;some things for you to try and solve&lt;/a&gt; if you want to contribute! Merry Christmas and an awesome New Year to you all! 🎄&lt;/p&gt;

</description>
      <category>angular</category>
      <category>opensource</category>
      <category>typescript</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Private AI: Machine Learning on Encrypted Data</title>
      <author>Bala Priya C</author>
      <pubDate>Fri, 24 Dec 2021 13:25:03 +0000</pubDate>
      <link>https://dev.to/balapriya/private-ai-machine-learning-on-encrypted-data-3ldl</link>
      <guid>https://dev.to/balapriya/private-ai-machine-learning-on-encrypted-data-3ldl</guid>
      <description>&lt;p&gt;&lt;a href="https://scholar.google.com/citations?user=TmuUs30AAAAJ&amp;amp;hl=en"&gt;Kristin Lauter&lt;/a&gt; is currently the head of research science at Facebook AI Research (Meta), formerly the head of Cryptography and Privacy Research Group at Microsoft Research. This post is based on her talk at the OpenMined Privacy Conference.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-privacy-problem-with-ai"&gt;
  &lt;/a&gt;
  What is the privacy problem with AI?
&lt;/h2&gt;

&lt;p&gt;Let us begin by looking at a generic Machine Learning (ML) algorithm that takes in our data as input and outputs some kind of decision - a classification label, numerical value or a recommendation. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The privacy problem stems from the fact that we &lt;em&gt;have to input our data&lt;/em&gt; to get those nice and valuable predictions. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Many AI applications powered by smart agents are hosted on the cloud, and protecting privacy of user data is pivotal to building secure applications. &lt;/p&gt;

&lt;p&gt;The privacy of data can be protected through encryption. However, standard encryption methods do not allow computation on encrypted data. Here's where &lt;strong&gt;Homomorphic Encryption (HE)&lt;/strong&gt; helps.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-homomorphic-encryption"&gt;
  &lt;/a&gt;
  What is Homomorphic Encryption?
&lt;/h2&gt;

&lt;p&gt;In simple terms, Homomorphic Encryption is a mathematical tool:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;that allows for encryption of data, &lt;/li&gt;
&lt;li&gt;ensuring privacy while at the same time, allowing computations to be performed on the encrypted data. &lt;/li&gt;
&lt;li&gt;The result of computation can then be decrypted to get the results.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As shown in the figure below, with Homomorphic Encryption (HE), the order of encryption and computation can be interchanged.&lt;/p&gt;

&lt;p&gt;Suppose you have data &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. You can perform computation on the data and then encrypt the result, denoted by &lt;code&gt;E(a*b)&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Alternatively, you could encrypt the data and then perform computation, denoted by &lt;code&gt;E(a) * E(b)&lt;/code&gt; in the figure below. If the encryption is homomorphic, then these two values, &lt;code&gt;E(a*b)&lt;/code&gt; and &lt;code&gt;E(a) * E(b)&lt;/code&gt; decrypt to the same value.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AQQwSmQp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.openmined.org/content/images/2021/06/2m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AQQwSmQp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.openmined.org/content/images/2021/06/2m.png" alt="" width="672" height="276"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Therefore, we can choose to encrypt private data &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, &lt;br&gt;
outsource computation, say, to the cloud, and decrypt the obtained result of the computation to view the actual meaningful results.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#understanding-homomorphic-encryption-intuitively-through-homermorphic-encryption"&gt;
  &lt;/a&gt;
  Understanding Homomorphic Encryption intuitively through Homer-morphic Encryption
&lt;/h2&gt;

&lt;p&gt;Let's try to think of a fictional character and draw a relatable analogy.&lt;/p&gt;

&lt;p&gt;Remember Homer Simpson from 'The Simpsons'?🙂&lt;/p&gt;

&lt;p&gt;The following illustration is aimed at giving an intuitive explanation to what Homomorphic Encryption does.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0JK1qW3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.openmined.org/content/images/2021/06/Screenshot-2021-06-02-174615.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0JK1qW3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.openmined.org/content/images/2021/06/Screenshot-2021-06-02-174615.jpg" alt="" width="718" height="276"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let us say you need to get a jewel made and you have your gold ready! You'd now like to call your jeweler (Homer Simpson) and get your jewel made, however you're not very sure if your jeweler is trustworthy. Here's a suggestion.&lt;/p&gt;

&lt;p&gt;You may place your gold in a box, lock it and keep the key with yourself. You may now invite over your jeweler and ask him to work on the gold nuggets through the glove box. Once the jewel is done, you may unlock your box and retrieve your jewel. Isn't that cool?&lt;/p&gt;

&lt;p&gt;Let us try to parse the analogy a bit. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your &lt;em&gt;private data&lt;/em&gt; is analogous to gold, &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;outsourcing computations&lt;/em&gt; on encrypted data in a public environment is similar to getting your jeweler to work on the gold through glove box, and&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;decrypting&lt;/em&gt; the results of computation to view the meaningful results is analogous to opening the box to get your jewel after the jeweler has left. 🙂&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Without delving deep into the math involved, the high-level idea behind homomorphic encryption is as follows. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Homomorphic Encryption uses &lt;em&gt;lattice-based encoding&lt;/em&gt;. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Encryption&lt;/strong&gt; adds noise to a secret inner product. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Decryption&lt;/strong&gt; subtracts the secret inner product and the noise becomes easy to cancel.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the next section, let's see the capabilities of Microsoft SEAL, a library for Homomorphic Encryption.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#microsoft-seal-simple-encrypted-arithmetic-library"&gt;
  &lt;/a&gt;
  Microsoft SEAL (Simple Encrypted Arithmetic Library)
&lt;/h2&gt;

&lt;p&gt;SEAL (Simple Encrypted Arithmetic Library) is Microsoft's library for Homomorphic Encryption (HE), widely adopted by research teams worldwide. It was first released publicly in 2015, followed by the standardization of HE in November 2018. Microsoft SEAL is available for download and use &lt;a href="https://www.microsoft.com/en-us/research/project/microsoft-seal/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In recent years, availability of hardware accelerators has also enabled several orders of magnitude speedup. Here's a timeline of how Homomorphic Encryption has been adopted due to advances in research and easier access to compute.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Idea: Computation on encrypted data without decrypting it&lt;/li&gt;
&lt;li&gt;2009: Considered impractical due to substantial overhead involved&lt;/li&gt;
&lt;li&gt;2011: Breakthrough at Microsoft Research&lt;/li&gt;
&lt;li&gt;Subsequent years of research: Practical encoding techniques that achieved several orders of speed-up&lt;/li&gt;
&lt;li&gt;2016: Crypto Nets at ICML 2016 - Neural Net predictions on encrypted data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that we're familiar with how HE has been adopted over the years, the subsequent sections will focus on the possible applications of HE.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#cloud-compute-scenarios-benefitting-from-he"&gt;
  &lt;/a&gt;
  Cloud Compute Scenarios benefitting from HE
&lt;/h2&gt;

&lt;p&gt;The following are some of the cloud computing scenarios that could potentially benefit from Homomorphic Encryption (HE):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Private Storage and Computation&lt;/li&gt;
&lt;li&gt;Private Prediction Services&lt;/li&gt;
&lt;li&gt;Hosted Private Training&lt;/li&gt;
&lt;li&gt;Private Set Intersection&lt;/li&gt;
&lt;li&gt;Secure Collaborative Computation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The markets benefitting from such services include healthcare, pharmaceutical, financial, government, insurance, manufacturing, oil and gas sector, to name a few. A few applications of Private AI across industries are listed below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Finance: Fraud detection, automated claims processing, threat intelligence, and data analytics are some applications.&lt;/li&gt;
&lt;li&gt;Healthcare: The scope of Private AI in healthcare includes medical diagnosis, medical support systems such as healthcare bots, preventive care and data analytics.&lt;/li&gt;
&lt;li&gt;Manufacturing: Predictive maintenance and data analytics on potentially sensitive data.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#azure-ml-private-prediction"&gt;
  &lt;/a&gt;
  Azure ML Private Prediction
&lt;/h2&gt;

&lt;p&gt;An image classification model for encrypted inferencing in Azure Container Instance (ACI), built on Microsoft SEAL, was announced at Microsoft Build Conference 2020. The tutorial can be accessed here.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h3&gt;

&lt;p&gt;[1] &lt;a href="https://www.youtube.com/watch?v=78Ye1a24hyQ"&gt;Recording of the PriCon talk&lt;/a&gt;&lt;/p&gt;

</description>
      <category>privacy</category>
      <category>machinelearning</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
