<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>üöÄ10 Trending projects on GitHub for web developers - 3rd September 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 03 Sep 2021 13:45:47 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-3rd-september-2021-427a</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-3rd-september-2021-427a</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-uptime-kuma"&gt;
  &lt;/a&gt;
  1. Uptime Kuma
&lt;/h3&gt;

&lt;p&gt;A fancy self-hosted monitoring tool. Monitoring uptime for HTTP(s) / TCP / Ping / DNS Record.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/louislam"&gt;
        louislam
      &lt;/a&gt; / &lt;a href="https://github.com/louislam/uptime-kuma"&gt;
        uptime-kuma
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A fancy self-hosted monitoring tool
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Uptime Kuma&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/louislam/uptime-kuma"&gt;&lt;img src="https://camo.githubusercontent.com/eac777f5dd7cc7cab02b7e7600db2c1172e816985d302490df59ea0842931a62/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6c6f7569736c616d2f757074696d652d6b756d61"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/louislam/uptime-kuma" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/84f55f44da98f4f9e7b743d23015c5c44f7ade03c0ab3ae18e0bf2b904effbfe/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f6c6f7569736c616d2f757074696d652d6b756d61"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/louislam/uptime-kuma" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e513f793946b0a9f7c581aad3b13233dd57ee41cb333b8434398a9b8305fc007/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f762f6c6f7569736c616d2f757074696d652d6b756d612f6c61746573743f6c6162656c3d646f636b6572253230696d6167652532307665722e"&gt;&lt;/a&gt; &lt;a href="https://github.com/louislam/uptime-kuma"&gt;&lt;img src="https://camo.githubusercontent.com/dcd9ea6b2cc7f4d2b3a06548811deecefaea6724fbf8fe57ad9003ec9c9f909f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f6c6f7569736c616d2f757074696d652d6b756d61"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div width="100%"&gt;
    &lt;a rel="noopener noreferrer" href="https://github.com/louislam/uptime-kuma./public/icon.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0r4nfdls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/louislam/uptime-kuma./public/icon.svg" width="128" alt=""&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;It is a self-hosted monitoring tool like "Uptime Robot".&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/108c3ddd47ce6a94311312ab483e9f3038a7f1313e3f2a48eb0a38e412935091/68747470733a2f2f6c6f7569736c616d2e6e65742f757074696d656b756d612f312e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/108c3ddd47ce6a94311312ab483e9f3038a7f1313e3f2a48eb0a38e412935091/68747470733a2f2f6c6f7569736c616d2e6e65742f757074696d656b756d612f312e6a7067" width="512" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
ü•î Live Demo&lt;/h2&gt;
&lt;p&gt;Try it!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://demo.uptime.kuma.pet" rel="nofollow"&gt;https://demo.uptime.kuma.pet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is a 5 minutes live demo, all data will be deleted after that. The server is located at Tokyo, if you live far away from here, it may affact your experience. I suggest that you should install to try it.&lt;/p&gt;
&lt;p&gt;VPS is sponsored by Uptime Kuma sponsors on &lt;a href="https://opencollective.com/uptime-kuma" rel="nofollow"&gt;Open Collective&lt;/a&gt;! Thank you so much!&lt;/p&gt;
&lt;h2&gt;
‚≠ê Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Monitoring uptime for HTTP(s) / TCP / Ping / DNS Record.&lt;/li&gt;
&lt;li&gt;Fancy, Reactive, Fast UI/UX.&lt;/li&gt;
&lt;li&gt;Notifications via Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP), and &lt;a href="https://github.com/louislam/uptime-kuma/issues/284"&gt;70+ notification services, click here for the full list&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;20 seconds interval.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
üîß How to Install&lt;/h2&gt;
&lt;h3&gt;
üê≥ Docker&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;docker volume create uptime-kuma
docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Browse to &lt;a href="http://localhost:3001" rel="nofollow"&gt;http://localhost:3001&lt;/a&gt; after started.&lt;/p&gt;
&lt;h3&gt;
üí™üèª Without Docker&lt;/h3&gt;
&lt;p&gt;Required Tools: Node.js &amp;gt;= 14, git and pm2.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/louislam/uptime-kuma"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#2-react-render-tracker"&gt;
  &lt;/a&gt;
  2. React render tracker
&lt;/h3&gt;

&lt;p&gt;React render tracker ‚Äì a tool to discover performance issues related to unintentional re-renders and unmounts&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/lahmatiy"&gt;
        lahmatiy
      &lt;/a&gt; / &lt;a href="https://github.com/lahmatiy/react-render-tracker"&gt;
        react-render-tracker
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      React render tracker ‚Äì a tool to discover performance issues related to unintentional re-renders and unmounts
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/react-render-tracker" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/799282da097c94db06d23404b54b80891c0b0a52ad933e71472c4aa9a9751dbd/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656163742d72656e6465722d747261636b65722e737667" alt="NPM version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
React render tracker&lt;/h1&gt;
&lt;p&gt;React render tracker ‚Äì a tool to discover performance issues related to unintended re-renders&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;STATUS: MVP / proof of concept&lt;/p&gt;
&lt;p&gt;The project is at an early stage of development. Lots of things have yet to be added and polished. The initial plan can be found &lt;a href="https://github.com/lahmatiy/react-render-tracker/issues/6"&gt;here&lt;/a&gt;. Feel free to create an issue if you found a bug or have an idea.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/270491/131173796-9bd485b6-32b4-43f4-b6d2-3a9739631652.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cZhpKrFP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/270491/131173796-9bd485b6-32b4-43f4-b6d2-3a9739631652.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Show component tree grouped by owner (rendered by) component or by parent (composed by) component. Default is by owner component, can be changed by a toggle in the top right corner.&lt;/li&gt;
&lt;li&gt;Self and total (including subtree components) cumulative time or all component renders&lt;/li&gt;
&lt;li&gt;Number of component's re-renders&lt;/li&gt;
&lt;li&gt;Show unmounted components (can be disabled by a toggle in the top right corner)&lt;/li&gt;
&lt;li&gt;Event log for a component or its subtree&lt;/li&gt;
&lt;li&gt;Overall stats on events and component instances&lt;/li&gt;
&lt;li&gt;More to come...&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
How to use&lt;/h2&gt;
&lt;h3&gt;
Option 1&lt;/h3&gt;‚Ä¶&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/lahmatiy/react-render-tracker"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-tailwind-nextjs-starter-blog"&gt;
  &lt;/a&gt;
  3. Tailwind Nextjs Starter Blog
&lt;/h3&gt;

&lt;p&gt;This is a Next.js, Tailwind CSS blogging starter template. Comes out of the box configured with the latest technologies. Easily configurable and customizable.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/timlrx"&gt;
        timlrx
      &lt;/a&gt; / &lt;a href="https://github.com/timlrx/tailwind-nextjs-starter-blog"&gt;
        tailwind-nextjs-starter-blog
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      This is a Next.js, Tailwind CSS blogging starter template. Comes out of the box configured with the latest technologies to make technical writing a breeze. Easily configurable and customizable. Perfect as a replacement to existing Jekyll and Hugo individual blogs.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/timlrx/tailwind-nextjs-starter-blog/public/static/images/twitter-card.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q8IUlSFR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/timlrx/tailwind-nextjs-starter-blog/public/static/images/twitter-card.png" alt="tailwind-nextjs-banner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Tailwind Nextjs Starter Blog&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://GitHub.com/timlrx/tailwind-nextjs-starter-blog/stargazers/"&gt;&lt;img src="https://camo.githubusercontent.com/979b10d24f04040f88c1aab061c115973a05d4781e41d9e1af5beb10e8d2b779/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f74696d6c72782f7461696c77696e642d6e6578746a732d737461727465722d626c6f673f7374796c653d736f6369616c" alt="GitHub Repo stars"&gt;&lt;/a&gt;
&lt;a href="https://GitHub.com/timlrx/tailwind-nextjs-starter-blog/network/"&gt;&lt;img src="https://camo.githubusercontent.com/509010e6f53e21014ce0482a516b51e2124444b6daa89a19381451342172535a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f74696d6c72782f7461696c77696e642d6e6578746a732d737461727465722d626c6f673f7374796c653d736f6369616c" alt="GitHub forks"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/timlrxx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0f3e99cd52b74f0cde63910edd00acf63868959a14382144079bb55d6fa18c48/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c3f7374796c653d736f6369616c2675726c3d6874747073253341253246253246747769747465722e636f6d25324674696d6c727878" alt="Twitter URL"&gt;&lt;/a&gt;
&lt;a href="https://github.com/sponsors/timlrx"&gt;&lt;img src="https://camo.githubusercontent.com/f42223b0ddcd6dfba4cc934f78fdbb50d8a72aaf5694c7bdb93a639a616dc50a/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d53706f6e736f72266d6573736167653d254532253944254134266c6f676f3d476974487562266c696e6b3d68747470733a2f2f6769746875622e636f6d2f73706f6e736f72732f74696d6c7278" alt="Sponsor"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vercel.com/new/git/external?repository-url=https://github.com/timlrx/tailwind-nextjs-starter-blog" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5e471e99e8e022cf454693e38ec843036ec6301e27ee1e1fa10325b1cb720584/68747470733a2f2f76657263656c2e636f6d2f627574746f6e" alt="Deploy with Vercel"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a &lt;a href="https://nextjs.org/" rel="nofollow"&gt;Next.js&lt;/a&gt;, &lt;a href="https://tailwindcss.com/" rel="nofollow"&gt;Tailwind CSS&lt;/a&gt; blogging starter template. Probably the most feature rich nextjs markdown blogging template out there. Comes out of the box configured with the latest technologies to make technical writing a breeze. Easily configurable and customizable. Perfect as a replacement to existing Jekyll and Hugo individual blogs.&lt;/p&gt;
&lt;p&gt;Check out the documentation below to get started.&lt;/p&gt;
&lt;p&gt;Facing issues? Check the &lt;a href="https://github.com/timlrx/tailwind-nextjs-starter-blog/wiki"&gt;FAQ page&lt;/a&gt; and do a search on past issues. Feel free to open a new issue if none has been posted previously.&lt;/p&gt;
&lt;p&gt;Feature request? Check the past discussions to see if it has been brough up previously. Otherwise, feel free to start a new discussion thread. All ideas are welcomed!&lt;/p&gt;
&lt;h2&gt;
Examples&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://tailwind-nextjs-starter-blog.vercel.app/" rel="nofollow"&gt;Demo Blog&lt;/a&gt; - this repo&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.timlrx.com" rel="nofollow"&gt;My personal blog&lt;/a&gt; - modified to auto-generate blog posts with dates&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://tambouille.vercel.app/" rel="nofollow"&gt;Aloisdg's cookbook&lt;/a&gt; - with pictures and recipes!&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://tailwind-nextjs-starter-blog-seven.vercel.app/" rel="nofollow"&gt;GautierArcin's demo with next translate&lt;/a&gt; - includes translation‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/timlrx/tailwind-nextjs-starter-blog"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-xstate"&gt;
  &lt;/a&gt;
  4. xstate
&lt;/h3&gt;

&lt;p&gt;State machines and statecharts for the modern web.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/statelyai"&gt;
        statelyai
      &lt;/a&gt; / &lt;a href="https://github.com/statelyai/xstate"&gt;
        xstate
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      State machines and statecharts for the modern web.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://xstate.js.org" rel="nofollow"&gt;
  &lt;br&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oantINz4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/1093738/101672561-06aa7480-3a24-11eb-89d1-787fa7112138.png" alt="XState" width="150"&gt;
  &lt;br&gt;
    &lt;strong&gt;JavaScript state machines and statecharts&lt;/strong&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://badge.fury.io/js/xstate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/198e47f2d3da503b1e448e4350bcb1f5e20d4c8e829d3f087392c8ad31247c83/68747470733a2f2f62616467652e667572792e696f2f6a732f7873746174652e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/7cf0cf856afc0618d58b59af48e8b585bcb8e921f02543e2429ef7e97e24facc/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7873746174652f74696572732f6261636b65722f62616467652e7376673f6c6162656c3d73706f6e736f727326636f6c6f723d627269676874677265656e"&gt;&lt;img src="https://camo.githubusercontent.com/7cf0cf856afc0618d58b59af48e8b585bcb8e921f02543e2429ef7e97e24facc/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7873746174652f74696572732f6261636b65722f62616467652e7376673f6c6162656c3d73706f6e736f727326636f6c6f723d627269676874677265656e"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JavaScript and TypeScript &lt;a href="https://en.wikipedia.org/wiki/Finite-state_machine" rel="nofollow"&gt;finite state machines&lt;/a&gt; and &lt;a href="https://www.sciencedirect.com/science/article/pii/0167642387900359/pdf" rel="nofollow"&gt;statecharts&lt;/a&gt; for the modern web.&lt;/p&gt;
&lt;p&gt;üìñ &lt;a href="https://xstate.js.org/docs" rel="nofollow"&gt;Read the documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;üíô &lt;a href="https://xstate-catalogue.com/" rel="nofollow"&gt;Explore our catalogue of examples&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;üìë Adheres to the &lt;a href="https://www.w3.org/TR/scxml/" rel="nofollow"&gt;SCXML specification&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;üí¨ Chat on the &lt;a href="https://discord.gg/KCtSX7Cdjh" rel="nofollow"&gt;Stately Discord Community&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Packages&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
ü§ñ &lt;code&gt;xstate&lt;/code&gt; - Core finite state machine and statecharts library + interpreter&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/davidkpiano/xstate/tree/main/packages/xstate-fsm"&gt;üî¨ &lt;code&gt;@xstate/fsm&lt;/code&gt;&lt;/a&gt; - Minimal finite state machine library&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/davidkpiano/xstate/tree/main/packages/xstate-graph"&gt;üìâ &lt;code&gt;@xstate/graph&lt;/code&gt;&lt;/a&gt; - Graph traversal utilities for XState&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/davidkpiano/xstate/tree/main/packages/xstate-react"&gt;‚öõÔ∏è &lt;code&gt;@xstate/react&lt;/code&gt;&lt;/a&gt; - React hooks and utilities for using XState in React applications&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/davidkpiano/xstate/tree/main/packages/xstate-vue"&gt;üíö &lt;code&gt;@xstate/vue&lt;/code&gt;&lt;/a&gt; - Vue composition functions and utilities for using XState in Vue applications&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/davidkpiano/xstate/tree/main/packages/xstate-svelte"&gt;üé∑ &lt;code&gt;@xstate/svelte&lt;/code&gt;&lt;/a&gt; - Svelte utilities for using XState in Svelte applications&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/davidkpiano/xstate/tree/main/packages/xstate-test"&gt;‚úÖ &lt;code&gt;@xstate/test&lt;/code&gt;&lt;/a&gt; - Model-Based-Testing utilities (using XState) for testing any software&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/davidkpiano/xstate/tree/main/packages/xstate-inspect"&gt;üîç &lt;code&gt;@xstate/inspect&lt;/code&gt;&lt;/a&gt; - Inspection utilities for XState&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Templates&lt;/h2&gt;
&lt;p&gt;Get started by forking one of these templates on CodeSandbox:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://codesandbox.io/s/xstate-example-template-m4ckv" rel="nofollow"&gt;XState Template&lt;/a&gt; - no framework&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://codesandbox.io/s/xstate-typescript-template-s9kz8" rel="nofollow"&gt;XState + TypeScript Template&lt;/a&gt; - no framework&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://codesandbox.io/s/xstate-react-template-3t2tg" rel="nofollow"&gt;XState +&lt;/a&gt;‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/statelyai/xstate"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#5-indexeddb-with-usability"&gt;
  &lt;/a&gt;
  5. IndexedDB with usability
&lt;/h3&gt;

&lt;p&gt;IndexedDB, but with promises. This is a tiny (~1.09k brotli'd) library that mostly mirrors the IndexedDB API, but with small improvements that make a big difference to usability.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/jakearchibald"&gt;
        jakearchibald
      &lt;/a&gt; / &lt;a href="https://github.com/jakearchibald/idb"&gt;
        idb
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      IndexedDB, but with promises
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
IndexedDB with usability.&lt;/h1&gt;
&lt;p&gt;This is a tiny (~1.09k brotli'd) library that mostly mirrors the IndexedDB API, but with small improvements that make a big difference to usability.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/jakearchibald/idb#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakearchibald/idb#changes"&gt;Changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakearchibald/idb#browser-support"&gt;Browser support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jakearchibald/idb#api"&gt;API&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/jakearchibald/idb#opendb"&gt;&lt;code&gt;openDB&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakearchibald/idb#deletedb"&gt;&lt;code&gt;deleteDB&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakearchibald/idb#unwrap"&gt;&lt;code&gt;unwrap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakearchibald/idb#wrap"&gt;&lt;code&gt;wrap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakearchibald/idb#general-enhancements"&gt;General enhancements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakearchibald/idb#idbdatabase-enhancements"&gt;&lt;code&gt;IDBDatabase&lt;/code&gt; enhancements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakearchibald/idb#idbtransaction-enhancements"&gt;&lt;code&gt;IDBTransaction&lt;/code&gt; enhancements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakearchibald/idb#idbcursor-enhancements"&gt;&lt;code&gt;IDBCursor&lt;/code&gt; enhancements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakearchibald/idb#async-iterators"&gt;Async iterators&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakearchibald/idb#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakearchibald/idb#typescript"&gt;TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
Installation&lt;/h1&gt;
&lt;h2&gt;
Using npm&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install idb&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Then, assuming you're using a module-compatible system (like webpack, Rollup etc):&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;openDB&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;deleteDB&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;wrap&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;unwrap&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'idb'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;async&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;doDatabaseStuff&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;db&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-en"&gt;openDB&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;‚Ä¶&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Directly in a browser&lt;/h2&gt;
&lt;h3&gt;
Using the modules method directly via unpkg:&lt;/h3&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;type&lt;/span&gt;="&lt;span class="pl-s"&gt;module&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;openDB&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;deleteDB&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;wrap&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;unwrap&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'https://unpkg.com/idb?module'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

  &lt;span class="pl-k"&gt;async&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;doDatabaseStuff&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;db&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-en"&gt;openDB&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;‚Ä¶&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Using external script reference&lt;/h3&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/jakearchibald/idb"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#6-htmlparser2"&gt;
  &lt;/a&gt;
  6. htmlparser2
&lt;/h3&gt;

&lt;p&gt;The fast &amp;amp; forgiving HTML and XML parser&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/fb55"&gt;
        fb55
      &lt;/a&gt; / &lt;a href="https://github.com/fb55/htmlparser2"&gt;
        htmlparser2
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The fast &amp;amp; forgiving HTML and XML parser
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
htmlparser2&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://npmjs.org/package/htmlparser2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1a7156628abe35a7efe3975722c92201c63342069e76c25495383b3e42b916c8/687474703a2f2f696d672e736869656c64732e696f2f6e706d2f762f68746d6c706172736572322e7376673f7374796c653d666c6174" alt="NPM version"&gt;&lt;/a&gt;
&lt;a href="https://npmjs.org/package/htmlparser2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0b671df71fc4176ca374f20f2682dc5d4c8c4da603cbe8380c1501428c79809a/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f68746d6c706172736572322e7376673f7374796c653d666c6174" alt="Downloads"&gt;&lt;/a&gt;
&lt;a href="https://github.com/fb55/htmlparser2/actions?query=workflow%3A%22Node.js+Test%22"&gt;&lt;img src="https://camo.githubusercontent.com/0bd22b1e30b3ee62c47255f4c7863e52111c74d5ac68b1db9dd58839da8c260d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f666235352f68746d6c706172736572322f4e6f64652e6a73253230546573743f6c6162656c3d7465737473267374796c653d666c6174" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/r/fb55/htmlparser2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9bba1f972de1d261a41320ee49c1d105625e7726de478a5fbcc77f7a2ef608a6/687474703a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f666235352f68746d6c706172736572322e7376673f7374796c653d666c6174" alt="Coverage"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The fast &amp;amp; forgiving HTML/XML parser.&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npm install htmlparser2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A live demo of &lt;code&gt;htmlparser2&lt;/code&gt; is available &lt;a href="https://astexplorer.net/#/2AmVrGuGVJ" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Ecosystem&lt;/h2&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/fb55/htmlparser2"&gt;htmlparser2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Fast &amp;amp; forgiving HTML/XML parser&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/fb55/domhandler"&gt;domhandler&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Handler for htmlparser2 that turns documents into a DOM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/fb55/domutils"&gt;domutils&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Utilities for working with domhandler's DOM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/fb55/css-select"&gt;css-select&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;CSS selector engine, compatible with domhandler's DOM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cheeriojs/cheerio"&gt;cheerio&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;The jQuery API for domhandler's DOM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cheeriojs/dom-serializer"&gt;dom-serializer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Serializer for domhandler's DOM&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;htmlparser2&lt;/code&gt; itself provides a callback interface that allows consumption of documents with minimal allocations
For a more ergonomic experience, read &lt;a href="https://github.com/fb55/htmlparser2#getting-a-dom"&gt;Getting a DOM&lt;/a&gt; below.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;htmlparser2&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"htmlparser2"&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;parser&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-s1"&gt;htmlparser2&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;Parser&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-en"&gt;onopentag&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;name&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;attributes&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
        &lt;span class="pl-c"&gt;/*&lt;/span&gt;
&lt;span class="pl-c"&gt;         * This fires when a new tag is opened.&lt;/span&gt;
&lt;span class="pl-c"&gt;         *&lt;/span&gt;
&lt;span class="pl-c"&gt;         * If you don't need an aggregated `attributes` object,&lt;/span&gt;
&lt;span class="pl-c"&gt;         * have a look at the `onopentagname` and `onattribute` events.&lt;/span&gt;
&lt;span class="pl-c"&gt;         */&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;name&lt;/span&gt; &lt;span class="pl-c1"&gt;===&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/fb55/htmlparser2"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#7-react-virtuoso"&gt;
  &lt;/a&gt;
  7. React Virtuoso
&lt;/h3&gt;

&lt;p&gt;The most powerful virtual list component for React. Variable sized items out of the box; no manual measurements or hard-coding item heights is necessary.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/petyosi"&gt;
        petyosi
      &lt;/a&gt; / &lt;a href="https://github.com/petyosi/react-virtuoso"&gt;
        react-virtuoso
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The most powerful virtual list component for React
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/13347/101237112-ec4c6000-36de-11eb-936d-4b6b7ec94976.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pp10OxNW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/13347/101237112-ec4c6000-36de-11eb-936d-4b6b7ec94976.png" width="229"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/petyosi/react-virtuoso//badge.fury.io/js/react-virtuoso" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6f29b9dafc5a7fb7c953453e81b04cde2895e82f4114b3f43479f21278c8b961/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656163742d76697274756f736f2e7376673f7374796c653d666c6174" alt="npm version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;React Virtuoso&lt;/strong&gt; is the most powerful React virtual list component, full stop. Here's why:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Variable sized items out of the box; no manual measurements or hard-coding item heights is necessary;&lt;/li&gt;
&lt;li&gt;Support for &lt;a href="https://github.com/petyosi/react-virtuoso//virtuoso.dev/prepend-items/" rel="nofollow"&gt;reverse (bottom up) scrolling and prepending items&lt;/a&gt; (chat, feeds, etc);&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/petyosi/react-virtuoso//virtuoso.dev/grouped-by-first-letter/" rel="nofollow"&gt;Grouped mode with sticky headers&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/petyosi/react-virtuoso//virtuoso.dev/grid-responsive-columns/" rel="nofollow"&gt;Responsive grid layout&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/petyosi/react-virtuoso//virtuoso.dev/auto-resizing/" rel="nofollow"&gt;Automatic handling of content resize&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/petyosi/react-virtuoso//virtuoso.dev/customize-structure/" rel="nofollow"&gt;Custom Header, Footer, and empty list components&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/petyosi/react-virtuoso//virtuoso.dev/top-items/" rel="nofollow"&gt;Pinned top items&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/petyosi/react-virtuoso//virtuoso.dev/endless-scrolling/" rel="nofollow"&gt;Endless scrolling&lt;/a&gt;, &lt;a href="https://github.com/petyosi/react-virtuoso//virtuoso.dev/press-to-load-more/" rel="nofollow"&gt;press to load more&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/petyosi/react-virtuoso//virtuoso.dev/initial-index/" rel="nofollow"&gt;Initial top most item index&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/petyosi/react-virtuoso//virtuoso.dev/scroll-to-index/" rel="nofollow"&gt;Scroll to index method&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For live examples and documentation, check the &lt;a href="https://github.com/petyosi/react-virtuoso//virtuoso.dev" rel="nofollow"&gt;documentation website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Sponsors&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://getstream.io/chat/react-chat/tutorial/?utm_source=https://github.com/petyosi/react-virtuoso&amp;amp;utm_medium=github&amp;amp;utm_content=developer&amp;amp;utm_term=react" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3baf3201052d9e2952be5449343c0b3f04fe76d6f92d1192f2d5683f0e620e33/68747470733a2f2f692e696d6775722e636f6d2f6f553758596b6b2e706e67" alt="Stream"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;React Virtuoso is proudly sponsored by &lt;a href="https://getstream.io/?utm_source=github&amp;amp;utm_medium=react-virtuoso&amp;amp;utm_campaign=sponsorship" rel="nofollow"&gt;Stream&lt;/a&gt;, the leading provider in enterprise grade &lt;a href="https://getstream.io/activity-feeds/?utm_source=github&amp;amp;utm_medium=react-virtuoso&amp;amp;utm_campaign=sponsorship" rel="nofollow"&gt;Feed&lt;/a&gt; &amp;amp; &lt;a href="https://getstream.io/chat/?utm_source=github&amp;amp;utm_medium=react-virtuoso&amp;amp;utm_campaign=sponsorship" rel="nofollow"&gt;Chat&lt;/a&gt; APIs. To learn more about Stream, &lt;a href="https://getstream.io/?utm_source=github&amp;amp;utm_medium=react-virtuoso&amp;amp;utm_campaign=sponsorship" rel="nofollow"&gt;click here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are using Virtuoso for work, &lt;a href="https://www.patreon.com/react_virtuoso" rel="nofollow"&gt;sponsor it&lt;/a&gt;. Any donation helps a lot with the project development and maintenance.&lt;/p&gt;
&lt;h2&gt;
Get Started&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/petyosi/react-virtuoso"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#8-amp"&gt;
  &lt;/a&gt;
  8. AMP
&lt;/h3&gt;

&lt;p&gt;The AMP web component framework for easily creating user-first websites, stories, ads, emails and more.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ampproject"&gt;
        ampproject
      &lt;/a&gt; / &lt;a href="https://github.com/ampproject/amphtml"&gt;
        amphtml
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The AMP web component framework.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
AMP ‚ö°
&lt;/h1&gt;
&lt;p&gt;‚ö°‚ö°‚ö°&lt;/p&gt;
&lt;p&gt;&lt;a href="https://app.circleci.com/pipelines/github/ampproject/amphtml?branch=main" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8c914cdbdba27e8d0d0134c218fe9ee8c08ed7fd22b35160f673739bf540c4b2/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f6275696c642f6769746875622f616d7070726f6a6563742f616d7068746d6c2f6d61696e" alt="Build Status" title="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://github.com/ampproject/amphtml/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/7d7370b988fc4ad141f09c4fa1e6a79f04ea9faa4b2470e77335a03d0b39688b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f616d7070726f6a6563742f616d7068746d6c2e7376673f6c6f676f3d476974487562267374796c653d666c61742d737175617265" alt="GitHub Release" title="GitHub Release"&gt;&lt;/a&gt;
&lt;a href="https://github.com/ampproject/amphtml/pulse/monthly"&gt;&lt;img src="https://camo.githubusercontent.com/2eefcd68d04a63466cbf115c02c227b0e41b7fabbc01dff33633ab601c85398d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f6d2f616d7070726f6a6563742f616d7068746d6c2e7376673f6c6f676f3d476974487562267374796c653d666c61742d737175617265" alt="Commits" title="Commits"&gt;&lt;/a&gt;
&lt;a href="https://github.com/ampproject/amphtml#"&gt;&lt;img src="https://camo.githubusercontent.com/f922e4660a9b13a9f87628ab8f144e446ec1a7239426ee967b36cea08703dec1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6261646765732d31362d627269676874677265656e3f6c6f676f3d476974487562267374796c653d666c61742d737175617265" alt="Badges"&gt;&lt;/a&gt;&lt;/p&gt;


Metrics

&lt;p&gt;&lt;a href="https://codecov.io/gh/ampproject/amphtml/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9db90f617195f7e1bf86b3a1370e3dfdae83978a72b73dd62eeb8939c1e096b5/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e742e7376673f6c6f676f3d436f6465636f76266c6f676f436f6c6f723d7768697465267374796c653d666c61742d7371756172652675726c3d6874747073253341253246253246616d702d70726f6a6563742d6d6574726963732e61707073706f742e636f6d25324661706925324662616467652532464162736f6c757465436f7665726167654d6574726963" alt="Absolute Code Coverage" title="Test coverage for the repository as computed by CodeCov"&gt;&lt;/a&gt;
&lt;a href="https://github.com/ampproject/amphtml/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+title%3A+%22Cherry-pick%22"&gt;&lt;img src="https://camo.githubusercontent.com/d93a540f95f5cb10b1462667dc1690299cf4a32615400b82fd264ab520f99fd3/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e742e7376673f6c6f676f3d476974487562266c6f676f436f6c6f723d7768697465267374796c653d666c61742d7371756172652675726c3d6874747073253341253246253246616d702d70726f6a6563742d6d6574726963732e61707073706f742e636f6d25324661706925324662616467652532464368657272797069636b4973737565436f756e744d6574726963" alt="Cherrypick Issue Count" title="Number of cherry-pick issues in the last 90 days"&gt;&lt;/a&gt;
&lt;a href="https://github.com/ampproject/amphtml/releases"&gt;&lt;img src="https://camo.githubusercontent.com/a8be9a03b04be7558e918abfeb0647db83bf83f40030b96f3c02a75e9e99d50a/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e742e7376673f6c6f676f3d476974487562266c6f676f436f6c6f723d7768697465267374796c653d666c61742d7371756172652675726c3d6874747073253341253246253246616d702d70726f6a6563742d6d6574726963732e61707073706f742e636f6d253246617069253246626164676525324652656c656173654772616e756c61726974794d6574726963" alt="Release Granularity" title="Average commits per release over the last 90 days"&gt;&lt;/a&gt;&lt;/p&gt;



Tooling

&lt;p&gt;&lt;a href="https://percy.io/ampproject/amphtml" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/87ea1f0c2108bb0f33c10ab0c99f1dc2fc612ec7e08ca2b5c60732a0df419192/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f25463025394625413625393425323076697375616c25323074657374696e672d50657263792d76696f6c65742e7376673f7374796c653d666c61742d737175617265" alt="Percy" title="Percy"&gt;&lt;/a&gt;
&lt;a href="https://github.com/prettier/prettier"&gt;&lt;img src="https://camo.githubusercontent.com/ae5be82992c6e8524bcda6d1a0e22e7289693bb43c24326bde2c883e0639034c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d50726574746965722d6666363962342e7376673f6c6f676f3d5072657474696572266c6f676f436f6c6f723d7768697465267374796c653d666c61742d737175617265" alt="Prettier" title="Prettier"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/ampproject/amphtml/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6e561def52ca2ae4bdda669ae192a80df164b5ecca531b6a61709e79c8f27ae9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f746573745f636f7665726167652d436f6465436f762d6630316637612e7376673f6c6f676f3d436f6465636f76266c6f676f436f6c6f723d7768697465267374796c653d666c61742d737175617265" alt="Codecov" title="Codecov"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/ampproject/amphtml/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/59607b0235ed8f79d6e7b6f7b17b3c3992c845093529283ab3c3530eed49409e/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f6769746875622f616d7070726f6a6563742f616d7068746d6c2e7376673f6c6f676f3d6c67746d267374796c653d666c61742d737175617265" alt="LGTM" title="LGTM"&gt;&lt;/a&gt;
&lt;a href="https://renovateapp.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/48de5b6ce9399d46b6d2b78837f2c8772d2bbcbab6a0704e0baf7f4a3fff5f4c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656e6f766174652d656e61626c65642d627269676874677265656e2e7376673f6c6f676f3d646570656e6461626f74267374796c653d666c61742d737175617265" alt="Renovate" title="Renovate"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://amp.dev" rel="nofollow"&gt;AMP&lt;/a&gt; is a web component framework for easily creating user-first websites, stories, ads, emails and more.&lt;/p&gt;
&lt;p&gt;AMP is an open source project, and we'd love your help making it better!&lt;/p&gt;
&lt;h2&gt;
Want to know more about AMP?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://amp.dev" rel="nofollow"&gt;amp.dev&lt;/a&gt; is the best place to learn more about AMP--and of course the site is made using AMP!&lt;/li&gt;
&lt;li&gt;For developers using AMP, amp.dev includes
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://amp.dev/documentation/guides-and-tutorials/" rel="nofollow"&gt;guides and tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amp.dev/documentation/examples/" rel="nofollow"&gt;examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amp.dev/documentation/components/?format=websites" rel="nofollow"&gt;reference docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amp.dev/documentation/templates/" rel="nofollow"&gt;example templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amp.dev/documentation/tools" rel="nofollow"&gt;tools to make using AMP easier&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Having a problem using AMP?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://amp.dev/support/" rel="nofollow"&gt;amp.dev Support page&lt;/a&gt; has resources for getting help.&lt;/li&gt;
&lt;li&gt;Use &lt;a href="http://stackoverflow.com/questions/tagged/amp-html" rel="nofollow"&gt;Stack Overflow&lt;/a&gt; to ask questions about using AMP and find answers to questions others have asked.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ampproject/amphtml/blob/main/docs/contributing.md#report-a-bug"&gt;Let us know about bugs&lt;/a&gt;, and &lt;a href="https://github.com/ampproject/amphtml/blob/main/docs/contributing.md#make-a-suggestion"&gt;file feature requests&lt;/a&gt; to suggest improvements.&lt;/li&gt;
&lt;li&gt;AMP accepts responsible security disclosures through the &lt;a href="https://www.google.com/about/appsecurity/" rel="nofollow"&gt;Google Application Security program&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Want to help make AMP better?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ampproject/amphtml/blob/main/docs/contributing.md"&gt;docs/contributing.md&lt;/a&gt; has information on how you can‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ampproject/amphtml"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-mammoth"&gt;
  &lt;/a&gt;
  9. Mammoth
&lt;/h3&gt;

&lt;p&gt;Mammoth is designed to convert .docx documents, such as those created by Microsoft Word, Google Docs and LibreOffice, and convert them to HTML&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mwilliamson"&gt;
        mwilliamson
      &lt;/a&gt; / &lt;a href="https://github.com/mwilliamson/mammoth.js"&gt;
        mammoth.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Convert Word documents (.docx files) to HTML
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Mammoth .docx to HTML converter&lt;/h1&gt;
&lt;p&gt;Mammoth is designed to convert .docx documents
such as those created by Microsoft Word, Google Docs and LibreOffice
and convert them to HTML
Mammoth aims to produce simple and clean HTML by using semantic information in the document,
and ignoring other details.
For instance,
Mammoth converts any paragraph with the style &lt;code&gt;Heading 1&lt;/code&gt; to &lt;code&gt;h1&lt;/code&gt; elements,
rather than attempting to exactly copy the styling (font, text size, colour, etc.) of the heading.&lt;/p&gt;
&lt;p&gt;There's a large mismatch between the structure used by .docx and the structure of HTML,
meaning that the conversion is unlikely to be perfect for more complicated documents.
Mammoth works best if you only use styles to semantically mark up your document.&lt;/p&gt;
&lt;p&gt;The following features are currently supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Headings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lists.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Customisable mapping from your own docx styles to HTML
For instance, you could convert &lt;code&gt;WarningHeading&lt;/code&gt; to &lt;code&gt;h1.warning&lt;/code&gt; by providing an appropriate style mapping.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;‚Ä¶&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mwilliamson/mammoth.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-bulletproof-react"&gt;
  &lt;/a&gt;
  10. Bulletproof React
&lt;/h3&gt;

&lt;p&gt;A simple, scalable, and powerful architecture for building production ready React applications.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/alan2207"&gt;
        alan2207
      &lt;/a&gt; / &lt;a href="https://github.com/alan2207/bulletproof-react"&gt;
        bulletproof-react
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üõ°Ô∏è ‚öõÔ∏è A simple, scalable, and powerful architecture for building production ready React applications. 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Bulletproof React üõ°Ô∏è ‚öõÔ∏è
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/tterb/atomic-design-ui/blob/master/LICENSEs"&gt;&lt;img src="https://camo.githubusercontent.com/a534d512dd511cc3dbba106a143f49102de27441cefb97421d90dc8d8ea7661f/68747470733a2f2f696d672e736869656c64732e696f2f61706d2f6c2f61746f6d69632d64657369676e2d75692e7376673f" alt="MIT License"&gt;&lt;/a&gt;
&lt;a href="https://github.com/alan2207/bulletproof-react/actions/workflows/ci.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IcvXFSn1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/alan2207/bulletproof-react/actions/workflows/ci.yml/badge.svg" alt="CI"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A simple, scalable, and powerful architecture for building production ready React applications.&lt;/p&gt;
&lt;h2&gt;
Introduction&lt;/h2&gt;
&lt;p&gt;React is a great tool for building frontend applications. It has a very diverse ecosystem with hundreds of great libraries for literally anything you might need. However, it can be overwhelming to be forced to make so many choices
It is also very flexible, you can write React applications in any way you like but that flexibility comes with a cost. Since there is no pre-defined architecture developers can follow, it often leads to messy, inconsistent, or over-complicated codebases.&lt;/p&gt;
&lt;p&gt;This is an attempt to present the way of creating React applications using the best tools in the ecosystem with a good project structure that scales very well. It is based on the experience of working with many different codebases, and this architecture turns out to be the most effective one.&lt;/p&gt;
&lt;p&gt;The goal of‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/alan2207/bulletproof-react"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing üìà
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 7 days&lt;/a&gt;üîó
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +2,173 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +1,299 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners"&gt;Web dev for beginners&lt;/a&gt; +942 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/discordjs/discord.js"&gt;Discord.js&lt;/a&gt; +861 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/danistefanovic/build-your-own-x"&gt;Build your own X&lt;/a&gt; +569 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 7 days&lt;/a&gt;üîó
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/hihayk/shaper"&gt;Shaper&lt;/a&gt; +75%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/matthewp/ocean"&gt;Ocean&lt;/a&gt; +39%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/svelte-society/sveltesociety.dev"&gt;Svelte Society&lt;/a&gt; +18%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/modulz/stitches"&gt;Stitches&lt;/a&gt; +11%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lemonadejs/lemonadejs"&gt;LemonadeJS&lt;/a&gt; +11%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 30 days&lt;/a&gt;üîó
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +8,983 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +3,893 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners"&gt;Web dev for beginners&lt;/a&gt; +3,094 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/danistefanovic/build-your-own-x"&gt;Build your own X&lt;/a&gt; +3,000 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tauri-apps/tauri"&gt;Tauri&lt;/a&gt; +2,753 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 30 days&lt;/a&gt;üîó
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/svelte-society/sveltesociety.dev"&gt;Svelte Society&lt;/a&gt; +67%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alan2207/bulletproof-react"&gt;Bulletproof React&lt;/a&gt; +54%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Saul-Mirone/milkdown"&gt;Milkdown&lt;/a&gt; +53%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bubkoo/html-to-image"&gt;html-to-image&lt;/a&gt; +49%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/BuilderIO/mitosis"&gt;Mitosis&lt;/a&gt; +42%&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For all for the latest rankings please checkout &lt;a href="https://stargazing.dev"&gt;Stargazing.dev&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/stargazing_dev"&gt;follow me&lt;/a&gt; on Twitter where I regularly post about HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Controle seu Android com Express√µes Faciais</title>
      <author>Danilo Barreto</author>
      <pubDate>Fri, 03 Sep 2021 13:25:52 +0000</pubDate>
      <link>https://dev.to/dgbarreto/controle-seu-android-com-expressoes-faciais-1m50</link>
      <guid>https://dev.to/dgbarreto/controle-seu-android-com-expressoes-faciais-1m50</guid>
      <description>&lt;p&gt;O Android 12 est√° chegando e juntamente com ele um recurso bastante interessante, para permitir que um usu√°rio controle o aparelho com express√µes faciais.&lt;br&gt;
H√° algumas semanas atr√°s juntamente com o beta do Android 12.0 que foi liberado para alguns modelos Pixel a Google liberou a vers√£o beta 12.0.0.0 do Android Acessibility Suite app. Como o nome j√° diz, essa app re√∫ne recursos de acessibilidade que permitem que o usu√°rio interaja com o device sem o uso do touchscreen. Esta vers√£o inclui o novo item Camera Switch.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kXstjzcC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ko4sqlsmnu8vr5sou2c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kXstjzcC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ko4sqlsmnu8vr5sou2c.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Segundo o XDA Developers por enquanto ainda vemos somente alguns gestos, mas outros devem ser inclu√≠dos at√© que a vers√£o final seja liberada ao p√∫blico:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a5Pyg9z7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0yft832f97lgacc2ffy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a5Pyg9z7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0yft832f97lgacc2ffy.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ao ativado ele mant√©m um icone persistente e o app roda em segundo plano. Portanto √© um grande consumidor de bateria. Salvo esse contratempo, o recurso √© excelente e, al√©m de ajudar pessoas com acessibilidade, pode ter v√°rias aplica√ß√µes fora dela.&lt;/p&gt;

&lt;p&gt;Fonte: &lt;a href="https://www.xda-developers.com/android-camera-switches-control-phone-with-face/"&gt;XDA Developer&lt;/a&gt;&lt;/p&gt;

</description>
      <category>android</category>
      <category>acessibilidade</category>
    </item>
    <item>
      <title>The Unexpected Powers of Sisterhood (in Tech)</title>
      <author>Josefine Schfr</author>
      <pubDate>Fri, 03 Sep 2021 13:22:03 +0000</pubDate>
      <link>https://dev.to/josefine/the-unexpected-powers-of-sisterhood-in-tech-3jko</link>
      <guid>https://dev.to/josefine/the-unexpected-powers-of-sisterhood-in-tech-3jko</guid>
      <description>&lt;p&gt;Apologies in advance, this might get a bit cheesy. &lt;/p&gt;

&lt;p&gt;But can we just take a moment to appreciate the massive amount of support women give each other in this industry on a daily basis  - without even blinking an eye? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tl; dr:&lt;/strong&gt; &lt;em&gt;No hard feelings if emotional outbursts by strangers on the internet are not your thing - just stop reading here. Before you do, though, take a moment to give your favorite colleague a call. The one who likely saved your butt every other week, who supports you with mysterious bugs, has your back in front of the client and always speaks out if something doesn‚Äôt seem right. You know who to call.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;I recently talked to someone about work and was utterly surprised by the fact that rather than focussing on the actual issue at hand, they raised another issue I had never thought about. How there was a &lt;em&gt;‚Äòsurprising amount of support among women and there seemed to be no cat fights at all‚Äô&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;I was pretty startled by this. From my point of view, that statement by itself screamed &lt;strong&gt;internalised misogyny&lt;/strong&gt;. Why would there be cat fights? Why should women be particularly competitive or assertive in an environment where they are already underrepresented? Why do these sexist stereotypes still exist? But after I got over my initial anger, I realised the reality couldn‚Äôt be further from it. &lt;/p&gt;

&lt;p&gt;I have never worked in an environment before, where there were as little women as in tech. Yet, &lt;strong&gt;I have never felt more supported by my female colleagues&lt;/strong&gt;. Now looking back at the past two years, literally 99% of the people who really went out of their way to support me, didn‚Äôt identify as male. And not to blame or point fingers. Just a fact. &lt;/p&gt;

&lt;p&gt;They created an environment where it‚Äôs ok and encouraged to ask an extensive amount of questions; where it‚Äôs ok to struggle, to have bad days and who help you get back up. They are here for it: the &lt;strong&gt;fight for more equality, the passionate discussions and dance parties&lt;/strong&gt;. And they are so incredibly happy for you if things turn your way. I have no words for what it means to me to have a little &lt;strong&gt;squad of cheerleaders who celebrate everyone's win like their own&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you so much for making everything a little better&lt;/strong&gt; - every day. &lt;/p&gt;

&lt;p&gt;I‚Äôm not crying. You are.&lt;br&gt;
And now please go call that colleague. And the other one. Make sure they know. &lt;/p&gt;

</description>
      <category>womenintech</category>
      <category>career</category>
      <category>codeiscolorful</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Cloud Technology News of the Month: August 2021</title>
      <author>CAST AI</author>
      <pubDate>Fri, 03 Sep 2021 12:51:47 +0000</pubDate>
      <link>https://dev.to/castai/cloud-technology-news-of-the-month-august-2021-4hbh</link>
      <guid>https://dev.to/castai/cloud-technology-news-of-the-month-august-2021-4hbh</guid>
      <description>&lt;p&gt;The summer might be slowly coming to an end, but here‚Äôs something to invigorate you: another portion of fresh cloud technology news.¬†&lt;/p&gt;

&lt;p&gt;This series brings you up to speed with the latest releases, acquisitions, research, and hidden gems in the world of cloud computing ‚Äì the stuff actually worth reading.¬†&lt;/p&gt;

&lt;p&gt;Here‚Äôs what happened in the cloud world this August.&lt;/p&gt;

&lt;p&gt;_____&lt;/p&gt;

&lt;h2&gt;Story of the month: Multi cloud is here, there‚Äôs no denying it anymore&lt;/h2&gt;

&lt;p&gt;HashiCorp recently published its inaugural State of Cloud Strategy Survey, which showed that &lt;strong&gt;multi cloud is the new normal&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The company surveyed 3,205 tech practitioners and decision-makers from companies of different sizes and industries and hailing from various locations around the world.¬†&lt;/p&gt;

&lt;p&gt;Here are the most interesting findings:&lt;/p&gt;

&lt;h3&gt;Multi cloud is real&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fJ8PsW0b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/VY8_Wo8C7UUPuGQslSMc3_d7CeOmmT3A3kwoh22_HcWqDfWscGZek-Ss1-8dpMAGzDm4fZOHDRoy0nrSb0WMf7xcpKHeemgGgVvGSBnVGtA6KldJYcTP-wZSgmdj-In6pfLguBs1%3Ds0" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fJ8PsW0b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/VY8_Wo8C7UUPuGQslSMc3_d7CeOmmT3A3kwoh22_HcWqDfWscGZek-Ss1-8dpMAGzDm4fZOHDRoy0nrSb0WMf7xcpKHeemgGgVvGSBnVGtA6KldJYcTP-wZSgmdj-In6pfLguBs1%3Ds0" alt="Multi-Cloud Adoption Pie Chart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source: HashiCorp&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;76% of respondents are already working in multi cloud environments&lt;/strong&gt;, using more than one public or private cloud. Multi cloud is no longer an inspirational idea - it‚Äôs an everyday reality. And since 86% of tech practitioners expect to be using multi cloud within the next two years, the adoption of multi cloud will only grow.&lt;/p&gt;

&lt;h3&gt;Who goes multi cloud?&lt;/h3&gt;

&lt;p&gt;To no surprise, multi cloud adoption is greatest among larger organizations - &lt;strong&gt;90% of companies with more than 5k employees are already using multi cloud&lt;/strong&gt;. Still, 60% of small businesses (counting &amp;lt;100 employees) already have multi cloud environments, and 81% of them expect to embrace this approach within the next two years.&lt;/p&gt;

&lt;h3&gt;What drives multi cloud adoption?&lt;/h3&gt;

&lt;p&gt;Why are all of these companies adopting the multi cloud approach? The top reason lies in &lt;strong&gt;digital transformation programs&lt;/strong&gt;. This is interesting because we all thought it was all about cost optimization and avoiding vendor lock-in.&lt;/p&gt;

&lt;p&gt;Here are the top driving forces behind multi cloud:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;34%&lt;/strong&gt; - digital transformation initiatives,¬†&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;30%&lt;/strong&gt; - avoiding single cloud vendor lock-in,¬†&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;28%&lt;/strong&gt; - cost reduction,¬†&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;25%&lt;/strong&gt; - ability to scale.¬†&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Digital transformation was especially strong among enterprises as 50% of them pointed to this factor. But it also caught the attention of the financial services industry, where 41% of respondents consider it a top driver.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--37I56r0e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/sQdg2m70Q91lS8RVGXmTGz28xz7skC03FeSO8tMaietHzT1WUuOsPvwaU6iDBc06QvbCX6MM-H3oK0q7eHnQaIky0KfH0mxbIITan2vYyZbOT9qZBzMkcMsEVtFIQTU_-yTrpRi6%3Ds0" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--37I56r0e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/sQdg2m70Q91lS8RVGXmTGz28xz7skC03FeSO8tMaietHzT1WUuOsPvwaU6iDBc06QvbCX6MM-H3oK0q7eHnQaIky0KfH0mxbIITan2vYyZbOT9qZBzMkcMsEVtFIQTU_-yTrpRi6%3Ds0" alt="What are the business and technology factors driving your multi-cloud adoption?"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source: HashiCorp&lt;/p&gt;

&lt;h3&gt;What are the key inhibitors to multi cloud‚Äôs rise to fame?&lt;/h3&gt;

&lt;p&gt;Two things make moving to multi cloud hard: &lt;strong&gt;skill shortage and security&lt;/strong&gt;.¬†&lt;/p&gt;

&lt;p&gt;More than half (57%) of respondents consider skill shortage as the top challenge that hinders building multi cloud capabilities. Next, we see inconsistent workflows across cloud environments (33%) and team siloization (29%).&lt;/p&gt;

&lt;p&gt;Another problem is security, the top-three inhibitors on many cloud journeys. Almost half (47%) of respondents said that security is the issue - be it governance, regulatory compliance and risk management, or data and privacy protection.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GyBMmQZ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/ahtyfFDWV0lZWiFZsgnhm0Iy05ACNVTBSq0E5iwqsk6t21j4daYgCn_RrrmGE6_dJdfgnMYND9dCr2zg_P1RtrBuI-m38NGRck3c5wEWM0iEuuxVP1ZaoFauYs-Hw4__pCs9No9F%3Ds0" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GyBMmQZ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/ahtyfFDWV0lZWiFZsgnhm0Iy05ACNVTBSq0E5iwqsk6t21j4daYgCn_RrrmGE6_dJdfgnMYND9dCr2zg_P1RtrBuI-m38NGRck3c5wEWM0iEuuxVP1ZaoFauYs-Hw4__pCs9No9F%3Ds0" alt="Top security concerns bar chart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;And a final gem: 46% of tech leaders don‚Äôt think it‚Äôs COVID-19 that‚Äôs driving them to the cloud&lt;/h3&gt;

&lt;p&gt;Many ascribe the spread of cloud technologies to the pandemic‚Äôs impact on the global economy, but this seems to be an incomplete picture. Almost &lt;strong&gt;half of the survey respondents (46%) said that COVID-19 didn‚Äôt affect their move to the cloud&lt;/strong&gt;, and another 19% said it had a low impact (speeding the shift by some 6-12 months).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This shows that in most organizations, cloud efforts were well underway before the pandemic started and are bound to continue in the post-pandemic future.¬†&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WPKq-0v7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/Yy9vDBPj2TGVOukL-xN7IfTU26SrWsyl2zoZkZGHJLDmHHCG63drxg1mCBDC_rfEnE3eDiwE45_mflla-nJRcG4LobZ4c2aLP44leVa3-mBezymShzwYquiWPSEpst_62Gr9e6_s%3Ds0" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WPKq-0v7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/Yy9vDBPj2TGVOukL-xN7IfTU26SrWsyl2zoZkZGHJLDmHHCG63drxg1mCBDC_rfEnE3eDiwE45_mflla-nJRcG4LobZ4c2aLP44leVa3-mBezymShzwYquiWPSEpst_62Gr9e6_s%3Ds0" alt="Covid's cloud impact chart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Interestingly, in response to the pandemic, many companies embraced modern, cloud native technologies like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Infrastructure as Code (49%),¬†&lt;/li&gt;
&lt;li&gt;container orchestration (41%),¬†&lt;/li&gt;
&lt;li&gt;network infrastructure automation (33%),¬†&lt;/li&gt;
&lt;li&gt;and said self-service infrastructure (32%).&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;&lt;p&gt;At CAST AI, we believe that multi cloud is the future, leading to the democratization of cloud services and reduced vendor lock-in. That‚Äôs why our platform comes with a host of multi cloud features -¬† find out more about them here:&lt;strong&gt; &lt;/strong&gt;&lt;a href="https://cast.ai/blog/how-to-spin-a-multi-cloud-application-with-cast-ai/"&gt;&lt;strong&gt;How to spin a multi cloud application with CAST AI&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Source: &lt;a href="https://www.hashicorp.com/blog/hashicorp-state-of-cloud-strategy-survey-welcome-to-the-multi-cloud-era"&gt;HashiCorp&lt;/a&gt;¬†&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s6Qru-jD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/08/dollar-banner.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s6Qru-jD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/08/dollar-banner.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;_____&lt;/p&gt;

&lt;h2&gt;The Business of Cloud&lt;/h2&gt;

&lt;p&gt;Rumor has it &lt;strong&gt;Databricks&lt;/strong&gt; - the cloud data company that raised $1 billion earlier this year - agreed to a new deal that includes &lt;strong&gt;its valuation at a smashing $38 billion&lt;/strong&gt;. Morgan Stanley is to lead the investment round said to bring at least $1.5 billion to the company. These figures prove that the cloud market is hotter than ever and we‚Äôre bound to see more investments into cloud companies in the near future.&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://www.bloomberg.com/news/articles/2021-08-18/databricks-funding-will-bring-valuation-to-38-billion"&gt;Bloomberg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GE Appliances&lt;/strong&gt; &lt;strong&gt;signed a multi-year partnership with Google Cloud &lt;/strong&gt;to develop next-gen smart home technologies. The company will benefit from the cloud giant‚Äôs expertise in data, AI, machine learning, and smooth integration with other Google technologies like Android, Google Assistant, and Vision AI. Let‚Äôs keep a close eye on the IoT scene and see what comes out of this collaboration.&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://cloud.google.com/press-releases/2021/0819/gea"&gt;Google Cloud&lt;/a&gt;¬†&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;61% of public cloud comes from AWS, Microsoft Azure, and Google Cloud&lt;/strong&gt;, according to the analytics company Canalys. &lt;strong&gt;AWS now accounts for 31% of global cloud infrastructure &lt;/strong&gt;spending, bringing in home revenue of some $59 billion per year (that‚Äôs more than HP or Lenovo!). At a 22% market share, &lt;strong&gt;Microsoft Azure&lt;/strong&gt; is the second-largest cloud provider (and growing by more than half from 2020Q2!).&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://canalys.com/newsroom/global-cloud-services-q2-2021"&gt;Canalys&lt;/a&gt;¬†&lt;/p&gt;

&lt;p&gt;_____&lt;/p&gt;

&lt;h2&gt;Food for thought&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;The cloud gets political, this time in the tug-of-war between the US and China.&lt;/strong&gt; ‚Äã‚ÄãThe cloud is said to become China‚Äôs next objective - and things are certainly looking good. During the pandemic, Chinese cloud providers noted incredible growth. Huawei more than doubled its global IaaS market share. Modern societies increasingly depend on the cloud and all the digital services it connects - from email to AI applications. It‚Äôs high time US policymakers started seeing the cloud as a strategic investment.&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://www.politico.com/newsletters/politico-china-watcher/2021/08/26/us-at-risk-of-losing-cloud-computing-edge-to-china-494105"&gt;Politico&lt;/a&gt;¬†&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s---hlgNzb9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/998649837443735552/iQKnG_8R_normal.jpg" alt="U.S.-China Commission profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        U.S.-China Commission
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @uscc_gov
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      China‚Äôs cloud market restrictions cost U.S. cloud firms hundreds of millions of dollars of lost revenues each year that they could otherwise reinvest in staff, R&amp;amp;D, and expanding their U.S. and global operations.&lt;br&gt;&lt;br&gt;-Nigel Cory &lt;a href="https://twitter.com/nigelcory"&gt;@nigelcory&lt;/a&gt;, &lt;a href="https://twitter.com/ITIFdc"&gt;@ITIFdc&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:23 PM - 15 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1382746372756082693" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1382746372756082693" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1382746372756082693" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;The UK government now officially&lt;strong&gt; advises that companies move to the cloud to curb carbon emissions&lt;/strong&gt;. Cloud migration was listed by the Department for Business, Energy and Industrial Strategy (BEIS) as one of the steps businesses should take to fight climate change. This comes as part of the government‚Äôs border push to inspire companies to support its net-zero emissions campaign that assumes cutting carbon footprints by half by 2030.&lt;/p&gt;

&lt;p&gt;If you‚Äôre interested in this topic, be sure to check out the session co-hosted by our Product Marketing Manager Annie Talvasto at the upcoming &lt;strong&gt;KubeCon + CloudNativeCon North America&lt;/strong&gt;: &lt;em&gt;How Event Driven Autoscaling in Kubernetes Can Combat Climate Change - Annie Talvasto, CAST AI &amp;amp; Adi Polak, Microsoft &lt;/em&gt;(more info &lt;a href="https://sched.co/lV4B"&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://www.computerweekly.com/news/252505293/UK-government-tells-firms-to-use-cloud-to-curb-their-carbon-emissions-and-fight-climate-change"&gt;Computer Weekly&lt;/a&gt;¬†&lt;/p&gt;

&lt;p&gt;_____&lt;/p&gt;

&lt;h2&gt;New in CAST AI&lt;/h2&gt;

&lt;p&gt;And here are some new product features hot off the press:¬†¬†&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We released the first version of the &lt;strong&gt;cluster metrics endpoint&lt;/strong&gt; that provides visibility into the CAST AI-captured metrics (explore the setup guide on &lt;a href="https://github.com/castai/examples/tree/main/metrics"&gt;Github&lt;/a&gt;). We will be expanding the list of exposed metrics, so stay tuned.&lt;/li&gt;
&lt;li&gt;Our team implemented the &lt;strong&gt;Node Root Volume Policy policy &lt;/strong&gt;that allows the configuration of root volume size based on the CPU count. That way, nodes with a high CPU count can have a larger root disk allocated to them.&lt;/li&gt;
&lt;li&gt;We enhanced the &lt;strong&gt;Spot instance policy&lt;/strong&gt; for EKS and Kops, so you can provision the least interrupted instances, the most cost-effective ones, or just go with the default balanced approach.¬†&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CAST AI agent v.0.20.0 &lt;/strong&gt;was released ‚Äì it now supports auto-discovery of GKE clusters, so there‚Äôs no need to enter any cluster details manually.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Cluster headroom&lt;/strong&gt; and &lt;strong&gt;Node constraints policies&lt;/strong&gt; are now separated and can be used simultaneously.&lt;/li&gt;
&lt;li&gt;We made it easier for users to set &lt;strong&gt;correct node CPU and Memory constraints &lt;/strong&gt;that adhere to the supported ratios.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;P.S. Be the first one to optimize a GKE cluster with CAST AI. &lt;/strong&gt;Connect your cluster, get a self-served savings report now and &lt;a href="https://console.cast.ai/external-clusters/new"&gt;start saving&lt;/a&gt;. Not a GKE user? Share this link with someone who is.&lt;/p&gt;

&lt;p&gt;_____&lt;/p&gt;

</description>
      <category>cloudnative</category>
      <category>kubernetes</category>
      <category>aws</category>
      <category>googlecloud</category>
    </item>
    <item>
      <title>UNIX commands cheatsheet</title>
      <author>Barbara</author>
      <pubDate>Fri, 03 Sep 2021 12:19:20 +0000</pubDate>
      <link>https://dev.to/barbara/unix-commands-cheatsheet-goo</link>
      <guid>https://dev.to/barbara/unix-commands-cheatsheet-goo</guid>
      <description>&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Unix"&gt;Unix&lt;/a&gt; was released in October 1973. Today there are many different versions based on Unix. The most prominent are GNU/Linux and MacOS. 90% of all¬†cloud infrastructure¬†is powered by Linux and 74% of smartphones in the world are Linux-based.&lt;br&gt;
If you want to see whats going on an EC2 instance or filter some log files you can always use the command line tools.&lt;/p&gt;

&lt;p&gt;Using the command line tools for administrative work or lookups will save a lot of time and increase the productivity significantly compared to using only graphical interfaces.&lt;/p&gt;

&lt;p&gt;As a webdeveloper we use the following commands on a daily basis. If you are new to this topic, I hope this will help you increase productivity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#orientation"&gt;
  &lt;/a&gt;
  Orientation
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;command&lt;/th&gt;
&lt;th&gt;explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;history&lt;/td&gt;
&lt;td&gt;displays the history of the last used commands&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pwd&lt;/td&gt;
&lt;td&gt;print working directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;man [command]&lt;/td&gt;
&lt;td&gt;manual&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;echo&lt;/td&gt;
&lt;td&gt;echoes an argument&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#navigating-in-the-terminal"&gt;
  &lt;/a&gt;
  Navigating in the terminal
&lt;/h2&gt;

&lt;p&gt;When we keep our hands on the keyboard we are always faster, than when use the mouse or similar to navigate around. So we should make use of the following commands, when we are in a terminal.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ctrl + a&lt;/code&gt;: jump to the beginning of a line&lt;br&gt;
&lt;code&gt;ctrl + e&lt;/code&gt;: jump to the end of a line&lt;br&gt;
&lt;code&gt;ctrl + w&lt;/code&gt;: remove word&lt;br&gt;
&lt;code&gt;ctrl + c&lt;/code&gt;: remove whole line&lt;br&gt;
&lt;code&gt;option + left arrow&lt;/code&gt;: jump to the end of a word&lt;br&gt;
&lt;code&gt;option + right arrow&lt;/code&gt;: jump to the beginning of a word&lt;br&gt;
&lt;code&gt;tab&lt;/code&gt;: autocompletion&lt;br&gt;
&lt;code&gt;arrow up&lt;/code&gt;: show last used command&lt;br&gt;
&lt;code&gt;cmd + k&lt;/code&gt;: clear terminal screen&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#navigating-in-the-file-system"&gt;
  &lt;/a&gt;
  Navigating in the file system
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;command&lt;/th&gt;
&lt;th&gt;explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ls&lt;/td&gt;
&lt;td&gt;list - lists all files in the current directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ls -a&lt;/td&gt;
&lt;td&gt;lists &lt;em&gt;all&lt;/em&gt; but also shows the .hidden files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ls -la&lt;/td&gt;
&lt;td&gt;lists &lt;em&gt;all&lt;/em&gt; files in the &lt;em&gt;long&lt;/em&gt; file format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cd /&lt;/td&gt;
&lt;td&gt;navigate to the root directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cd ~&lt;/td&gt;
&lt;td&gt;navigate to the home directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cd ..&lt;/td&gt;
&lt;td&gt;navigate one directory level up&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cd -&lt;/td&gt;
&lt;td&gt;navigate to the previous directory&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#administrative-tasks"&gt;
  &lt;/a&gt;
  Administrative tasks
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;command&lt;/th&gt;
&lt;th&gt;explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;sudo&lt;/td&gt;
&lt;td&gt;superuser do&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mkdir [directory_name]&lt;/td&gt;
&lt;td&gt;make directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rmdir&lt;/td&gt;
&lt;td&gt;removes a directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;touch [file_name]&lt;/td&gt;
&lt;td&gt;creates a file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp old_file_name new_file_name&lt;/td&gt;
&lt;td&gt;copy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mv old_file_name new_file_name&lt;/td&gt;
&lt;td&gt;move&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rm [file_name]&lt;/td&gt;
&lt;td&gt;remove&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rm -r&lt;/td&gt;
&lt;td&gt;removes recursive, ie a Folder with all contents&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vi [file_name]&lt;/td&gt;
&lt;td&gt;opens file with vi&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wq&lt;/td&gt;
&lt;td&gt;write and quit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wq!&lt;/td&gt;
&lt;td&gt;write and quit forced&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nano [file_name]&lt;/td&gt;
&lt;td&gt;opens file with &lt;a href="https://www.nano-editor.org/"&gt;nano&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;code [file_name]&lt;/td&gt;
&lt;td&gt;opens file with vs code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;program_name&lt;/td&gt;
&lt;td&gt;to start a program simply type the name, ie python&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl + c&lt;/td&gt;
&lt;td&gt;stop a program&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#searching-and-filtering"&gt;
  &lt;/a&gt;
  Searching and filtering
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;command&lt;/th&gt;
&lt;th&gt;explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;head [file_name]&lt;/td&gt;
&lt;td&gt;show the first 10 lines of a file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tail [file_name]&lt;/td&gt;
&lt;td&gt;show the las 10 lines of a file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sort [file_name]&lt;/td&gt;
&lt;td&gt;sorts the file alphabetically&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sort [unsorted_file_name] &amp;gt; [sorted_file_name]&lt;/td&gt;
&lt;td&gt;sorts the content of the unsorted file and stores it in a new sorted file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cat [options] [file_names]&lt;/td&gt;
&lt;td&gt;reads files sequentially, writing them to standard output&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;grep [options] pattern [file_names]&lt;/td&gt;
&lt;td&gt;globally search for regular expression and print&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;the pipe&lt;/td&gt;
&lt;td&gt;The pipe send the output of one command as input of another command.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;As &lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;cat&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt; are powerful tools I recommend having a look at &lt;a href="https://www.guru99.com/linux-pipe-grep.html"&gt;this awesome tutorial&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#permissions"&gt;
  &lt;/a&gt;
  Permissions
&lt;/h2&gt;

&lt;p&gt;In Unix Systems there are three groups of ownership. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;USER&lt;/em&gt;: the one who created the file&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;GROUP&lt;/em&gt;: a group with assigned users&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;OTHER&lt;/em&gt;: any other who has not created the file and does not belong to a group.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The UNIX system has 3 permissions defined for the 3 different owner groups:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;r&lt;/em&gt; = &lt;em&gt;read&lt;/em&gt; permission&lt;br&gt;
&lt;em&gt;w&lt;/em&gt; = &lt;em&gt;write&lt;/em&gt; permission&lt;br&gt;
&lt;em&gt;x&lt;/em&gt; = &lt;em&gt;execute&lt;/em&gt; permission&lt;/p&gt;

&lt;p&gt;‚Äì = no permission&lt;br&gt;
d = directory&lt;br&gt;
@ = &lt;a href="https://en.wikipedia.org/wiki/Extended_file_attributes#macOS"&gt;extended attributes on macOS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oWDnaRo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8ny2a7bomxfxq487dpz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oWDnaRo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8ny2a7bomxfxq487dpz.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#changing-permissions"&gt;
  &lt;/a&gt;
  Changing permissions
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;command&lt;/th&gt;
&lt;th&gt;explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;chmod&lt;/td&gt;
&lt;td&gt;change mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;chown&lt;/td&gt;
&lt;td&gt;change owner&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Detailed information for the permission system can be found &lt;a href="https://linuxcommand.org/lc3_lts0090.php"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This post is outlining the most important commands (for me). If you want to see all commands you might want to have a look at this &lt;a href="https://en.wikipedia.org/wiki/List_of_Unix_commands"&gt;list&lt;/a&gt; or use the &lt;code&gt;man&lt;/code&gt; in the terminal.&lt;/p&gt;

</description>
      <category>linux</category>
      <category>productivity</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Typed express with generated swagger docs</title>
      <author>Jakub ≈†vehla</author>
      <pubDate>Fri, 03 Sep 2021 12:13:54 +0000</pubDate>
      <link>https://dev.to/svehla/typed-express-with-generated-swagger-docs-24fa</link>
      <guid>https://dev.to/svehla/typed-express-with-generated-swagger-docs-24fa</guid>
      <description>&lt;h1&gt;
  &lt;a href="#typed-express-swaggerdocs"&gt;
  &lt;/a&gt;
  Typed Express swagger-docs
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR:
&lt;/h2&gt;

&lt;p&gt;I was missing some simple and minimalist libraries that  would enhance Express API and solve some common problems with defining interfaces of my backend applications. I wanted to solve static type analysis, API documentation, and runtime validations from a single source of truth.&lt;/p&gt;

&lt;p&gt;So I did a proof of concept for my dream library &lt;a href="https://github.com/Svehla/swagger-typed-express-docs"&gt;now it's published in the alpha version&lt;/a&gt;).&lt;br&gt;
The library enables you to just simply enhance your existing Express application endpoint handler and infer static types, add runtime HTTP validations, and generate documentation in the swagger format.&lt;br&gt;
The library can do all of that from just one reusable single-source-of-truth (SSOT) in your codebase. It's just an Express handler HOF (higher order function aka js decorator for functions). Let's check the example below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Svehla/swagger-typed-express-docs"&gt;github repository&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/swagger-typed-express-docs"&gt;npm package&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#package-usage-preview"&gt;
  &lt;/a&gt;
  Package usage preview
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Inferred typescript types from API definition&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qv-IK-h2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Svehla/swagger-typed-express-docs/blob/main/docs/preview-typed-code-query.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qv-IK-h2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Svehla/swagger-typed-express-docs/blob/main/docs/preview-typed-code-query.png%3Fraw%3Dtrue" alt="static type helper preview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Generated Swagger API documentation from API definition&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8otZ8nHZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Svehla/swagger-typed-express-docs/blob/main/docs/preview-swagger-docs.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8otZ8nHZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Svehla/swagger-typed-express-docs/blob/main/docs/preview-swagger-docs.png%3Fraw%3Dtrue" alt="static type helper preview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;HTTP 400 bad request runtime validation error from API definition&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DqJdqX4r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Svehla/swagger-typed-express-docs/blob/main/docs/preview-runtime-error.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DqJdqX4r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Svehla/swagger-typed-express-docs/blob/main/docs/preview-runtime-error.png%3Fraw%3Dtrue" alt="runtime error previewr"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Code definition&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nx"&gt;apiDoc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tNonNullable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tString&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tUnion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tList&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tObject&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;swagger-typed-express-docs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/user/:userId&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="cm"&gt;/**
   * adding single-source-of-truth metadata for the Express handler and a library to do the
   * - runtime validations checks
   * - compile-time checks
   * - generate swagger documentation
   */&lt;/span&gt;
  &lt;span class="nx"&gt;apiDoc&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;tNonNullable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tString&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;tNonNullable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tString&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;header&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;tList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tNonNullable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tUnion&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;b&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;c&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="p"&gt;))),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;header&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;tList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tNonNullable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tUnion&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;b&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;c&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="p"&gt;))),&lt;/span&gt;
      &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;tNonNullable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tString&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;footer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;tString&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;returns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;tObject&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;enhancedBody&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;tObject&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;tUnion&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;b&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;c&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="p"&gt;}),&lt;/span&gt;
    &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="p"&gt;})((&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;

    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;The problem with Express is that it does not solve HTTP REST-API runtime-validation, static types, and API documentation out of the box. So many programmers who use Express create their own "wrapper" around the Express and the project starts to be complex because there is not a standard Express backend approach. It's cool that you can bend Express in a way your business logic wants it to, but it makes the complexity of the whole project higher for other programmers. So I think that there should be a small standard of documenting API directly in your codebase.&lt;/p&gt;

&lt;p&gt;I tried to look for another library in the current &lt;code&gt;npm&lt;/code&gt; ecosystem that could satisfy our needs.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1. To define one SSOT (single source of truth) which would do

&lt;ul&gt;
&lt;li&gt;1. runtime schema validations&lt;/li&gt;
&lt;li&gt;2. Typescript static time validations&lt;/li&gt;
&lt;li&gt;3. Generating of documentation&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;2. Simplified minimalist API&lt;/li&gt;
&lt;li&gt;3. Nice runtime-error messages&lt;/li&gt;
&lt;li&gt;5. Support of REST-API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I tried &lt;code&gt;hapi.js&lt;/code&gt;, &lt;code&gt;nest.js&lt;/code&gt;, and other libraries but unfortunately, I found nothing, so I decided to create my solution which would fully satisfy our needs.&lt;/p&gt;

&lt;p&gt;This article is intended to open a discussion if the API and the whole view on the problem is appropriate and to check if other people like the same approach as I do.&lt;/p&gt;

&lt;p&gt;Thanks to simple APIs you can easily integrate Express endpoints one after another without breaking existing functionality with raw Express API. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#patterns-used-in-the-package-api"&gt;
  &lt;/a&gt;
  Patterns used in the package API
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#ssot-dry"&gt;
  &lt;/a&gt;
  SSOT / DRY
&lt;/h3&gt;

&lt;p&gt;Many programmers try hard to keep the code DRY &lt;em&gt;(don't repeat yourself)&lt;/em&gt;. I think that a much more important pattern for clean code is the SSOT &lt;em&gt;(single source of truth)&lt;/em&gt;. It's very important to have a definition of your business state in only one place in your codebase. If you duplicate some parts of the state in more places you will end up with bugs in your programs because you &lt;br&gt;
will forget to update all the relevant parts of the codebase.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#decorators-vs-higher-order-functions"&gt;
  &lt;/a&gt;
  Decorators vs Higher order functions
&lt;/h3&gt;

&lt;p&gt;I decided to use a simple pure Javascript higher order function to decorate handlers instead of fancy pants class-based decorators API to simply keep the good old Express API of endpoints and not to be dependent on fancy experimental compilers options like decorators and so on.&lt;br&gt;
&lt;a href="https://dev.to/svehla/why-reflect-metadata-suc-s-5fal"&gt;If you want to know more about it, check this article.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#package-future"&gt;
  &lt;/a&gt;
  Package future?
&lt;/h2&gt;

&lt;p&gt;In the future, I would like to add few features which could add more flexibility to define a schema for Express handler endpoint&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cyclic dependencies&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Cyclic dependencies of data types, similar to&lt;br&gt;
&lt;a href="https://www.npmjs.com/package/graphql"&gt;graphql&lt;/a&gt; have already been defined.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Better support of creating custom data type&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the current library there is no official way how to create a custom data type with custom validators and custom type inference and you have to use one of the pre-defined types &lt;code&gt;tBoolean&lt;/code&gt; &lt;code&gt;tNumber&lt;/code&gt; &lt;code&gt;tUnion&lt;/code&gt; &lt;code&gt;tNonNullable&lt;/code&gt; &lt;code&gt;tAny&lt;/code&gt; &lt;code&gt;tObject&lt;/code&gt; &lt;code&gt;tCustomScalar&lt;/code&gt; &lt;code&gt;tString&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-do-you-think"&gt;
  &lt;/a&gt;
  What do you think?
&lt;/h2&gt;

&lt;p&gt;In my humble opinion, the &lt;code&gt;npm&lt;/code&gt; ecosystem is missing some strong Typescript-supported solutions for handling that basic stuff like HTTP REST-API schema defining.&lt;/p&gt;

&lt;p&gt;I would like to know your opinion about this kind of package API.&lt;/p&gt;

&lt;p&gt;If you have any topics to discuss don't be shy to say them out loud in the comment section and open discussion.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you enjoyed reading the article don‚Äôt forget to like it to tell me if it makes sense to continue.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>backend</category>
      <category>express</category>
      <category>swagger</category>
    </item>
    <item>
      <title>Mistakes to Avoid As a Junior Developer</title>
      <author>Joseph Mania</author>
      <pubDate>Fri, 03 Sep 2021 12:08:42 +0000</pubDate>
      <link>https://dev.to/maniamartial/mistakes-to-avoid-as-a-junior-developer-14l2</link>
      <guid>https://dev.to/maniamartial/mistakes-to-avoid-as-a-junior-developer-14l2</guid>
      <description>&lt;p&gt;As you grow, you will find better programmers than you. On the other hand, you will become a better programmer than some of your peers. Everyone starts from a point, have in mind that no one had the knowledge and skills until he/she proved himself wrong.&lt;/p&gt;

&lt;p&gt;‚ÄòYes I know‚Äô&lt;/p&gt;

&lt;p&gt;As a junior developer with a fresh mind in the software development field, be patient and calm. Remember, you found other developers on this journey. Stop beating up your chest, don‚Äôt brag about your skills to everyone. Politeness is the way to go. Let‚Äôs say you join a company, and your senior software engineer doesn‚Äôt have much knowledge of what you know, kindly correct your leader in a better way. Boosting is what makes younger developers fail.&lt;/p&gt;

&lt;p&gt;Complex codes&lt;/p&gt;

&lt;p&gt;When it comes to writing code to implement a certain software, I prefer simple lines. Don‚Äôt write complex codes because you think it‚Äôs the best time to show off. Yes, the software might function as required, but can your fellow developer be able to read your code? We read daily about writing readable codes, yes, let it remain the same. Use simple, small functions to implement a guide to a computer on what to do.&lt;/p&gt;

&lt;p&gt;Don‚Äôt stop learning&lt;/p&gt;

&lt;p&gt;Technology is like moving water, when you stand still trying to fetch it, at one point you will remain behind. Read new blogs and articles daily from various sources. Look at documentation, new frameworks, and the technologies being employed by companies. Upgrade your skills daily in the programming language you are using. Expand your toolbox with new technologies.&lt;/p&gt;

&lt;p&gt;Learning every technology&lt;/p&gt;

&lt;p&gt;You might run crazy trying to learn all the new technologies. Kindly, don‚Äôt chase every new tool in the market. I have a friend who almost went crazy learning new technologies every month. Yes, he had more opportunities, but he suffocated at one point. Please keep in mind that there are more than 50 technologies, you can‚Äôt exhaust. Be smart and focus on these related to your specifications. If you are a web developer, then shifting from angular to React might be positive.&lt;/p&gt;

&lt;p&gt;Fear of making mistakes&lt;/p&gt;

&lt;p&gt;For real, any junior developer might not know the right time to seek jobs. Believe it or not, you are capable of that posted job. Just apply and see the results. 60% of the remaining skills will be earned on the job. Be bold with your skills, yes you can do it. Give it a try. But focus on working with a team, get to work with experienced developers.&lt;/p&gt;

&lt;p&gt;Ask questions&lt;/p&gt;

&lt;p&gt;Yes, this is another trauma, mainly when something is hard. Don‚Äôt die with your problems. There is a huge community of developers on various platforms. The main one being stack overflow. Just search for the bug you have bumped into, and you will find the nearest answer. We have another developer who bumped into the same error and asked for answers. Also, help other developers to find answers. Solve their problems. Start your blog and share ideas.&lt;/p&gt;

&lt;p&gt;Bonus&lt;/p&gt;

&lt;p&gt;As a junior developer, I prefer to master basics correctly. Don‚Äôt move from reacting to VueJS to angular. No, I have got friends who build clients websites with raw HTML, CSS, and vanilla JavaScript, and their sites are very fast and responsive. Don‚Äôt rush. You are going to spend more hours mastering writing bug-free codes. Patience pays.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>devops</category>
      <category>react</category>
    </item>
    <item>
      <title>5 Ways To Undo Mistakes In Git</title>
      <author>Agnieszka Stec</author>
      <pubDate>Fri, 03 Sep 2021 12:01:05 +0000</pubDate>
      <link>https://dev.to/gitlive/5-ways-to-undo-mistakes-in-git-37if</link>
      <guid>https://dev.to/gitlive/5-ways-to-undo-mistakes-in-git-37if</guid>
      <description>&lt;p&gt;If you‚Äôre no stranger to developer workflow then you know that sometimes - Git happens! The good news is that in most cases Git offers us a way out of a sticky situation we coded ourselves into. &lt;/p&gt;

&lt;p&gt;Because of its decentralized nature, there is no single 'undo' command in Git that applies to every situation, but different stages of development require different solutions. Let‚Äôs take a look at the most common scenarios.&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;
&lt;a href="#tip1"&gt; Tip #1 &lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt; A rocky start: discard unstaged changes &lt;/h2&gt;

&lt;p&gt;You decided to make some changes to a file, but halfway through you thought to yourself: ‚ÄúNah, I‚Äôd better start over before I reach a dead-end!‚Äù&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout &lt;span class="nt"&gt;--&lt;/span&gt; &amp;lt;filename&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If your files are unstaged (you can check it by running &lt;code&gt;git status&lt;/code&gt;) and you are sure that you want to discard them, you can use the above command.&lt;/p&gt;

&lt;p&gt;Your current version of the file will be replaced with the last staged or committed version, and the changes you‚Äôve made won‚Äôt be saved. You can also use this command to discard all local changes in all the files in the directory¬≠¬≠&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout &lt;span class="nt"&gt;--&lt;/span&gt; &amp;lt;&lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;
&lt;a href="#tip2"&gt; Tip #2 &lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt; A dev on the fence: Unstage files from Index &lt;/h2&gt;

&lt;p&gt;You made some pretty ingenious changes to the file before lunch. Or so you thought... Now you‚Äôre not so sure the file is a fit for the commit you are about to do, but you don‚Äôt want to delete it either‚Ä¶.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reset &amp;lt;filename&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The index is a staging area that allows you to choose what set of changes to include in a commit. If you already staged your changes with &lt;code&gt;git add&lt;/code&gt; but you are not ready to commit those files just yet, you can unstage them by running the above command. &lt;br&gt;
Your changes will be unstaged but will not be deleted from your working tree - will remain on the back burner until you decide to give them a second glance.&lt;br&gt;
However, if you‚Äôre absolutely sure that you want to permanently delete all the changes you can run this command instead:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reset &lt;span class="nt"&gt;--hard&lt;/span&gt; &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;
&lt;a href="#tip3"&gt; Tip #3 &lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt; Let‚Äôs take a step back: undo committed changes &lt;/h2&gt;

&lt;p&gt;You managed to spot the faulty commit, but it‚Äôs buried deep in your revision history‚Ä¶ What now?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git revert &amp;lt;commit&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The good news is that it's a bit early to panic - &lt;code&gt;git revert&lt;/code&gt; comes to the rescue. It's used to reverse the effect of an earlier commit, by creating a new, opposite commit. It is particularly safe to use, as it doesn‚Äôt rewrite the Git history (it doesn‚Äôt delete the bad commit but automatically creates a new one with inverted changes). That‚Äôs why it can be used both locally and in a shared repository. To find a commit ID you can use this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git log &lt;span class="nt"&gt;--oneline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;
&lt;a href="#tip4"&gt; Tip #4 &lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt; The art of cherry-picking: apply a commit to a different branch &lt;/h2&gt;

&lt;p&gt;Oops‚Ä¶ You made a commit to the wrong branch. Now you want to apply it to the correct one without merging the whole branch.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git cherry-pick &amp;lt;commit&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Cherry-pick allows you to choose a commit from one branch and apply it onto another.&lt;br&gt;
In order to perform the operation make sure you are on the branch you want to apply the commit to. Then run the above command. Don‚Äôt forget to remove the commit from the branch you mistakenly applied it to. To do it simply switch to that branch and remove the commit before you push the branch to the remote.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reset &lt;span class="nt"&gt;--hard&lt;/span&gt; HEAD&lt;span class="o"&gt;{&lt;/span&gt;index&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;sup&gt;&lt;br&gt;
üí° Want to share some code without having to push and pull to Git? With GitLive you can cherry-pick your teammates' uncommitted changes straight from their local working copy. &lt;a href="https://blog.git.live/gitlive-8-0-Cherry-picking-your-teammates-changes"&gt;Read all about it here.&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;



&lt;p&gt;
&lt;a href="#tip5"&gt; Tip #5 &lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt; If I could turn back time: modify the commit message of an old commit  &lt;/h2&gt;

&lt;p&gt;While looking at the commit history, you've noticed that there is a typo in one of your older commits...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git rebase &lt;span class="nt"&gt;-i&lt;/span&gt; &amp;lt;sha&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this command, you can edit, squash and delete commits by navigating the menu from the command line. As a rule of thumb, you should never modify the Git history in the remote, but you can safely use it locally. &lt;/p&gt;

&lt;p&gt;To warm-up, let's try to use interactive rebase on our local sample repo. You can get the list of the commits by running&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git log &lt;span class="nt"&gt;--oneline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SOgaBzX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630661356907/UEbklVr2s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SOgaBzX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630661356907/UEbklVr2s.png" alt="interactive rebase-1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To fix the typo in the fifth commit message, run &lt;code&gt;$ git rebase -i &amp;lt;sha&amp;gt;&lt;/code&gt; and replace &lt;code&gt;sha&lt;/code&gt; with the last correct commit (in our case it‚Äôs the &lt;code&gt;1ca3db2&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O0x6sqIO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630661361971/NTb-04VZH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O0x6sqIO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630661361971/NTb-04VZH.png" alt="interactive rebase-2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After typing this command, the default editor in your environment is going to open up. Follow the instructions in order to perform the operation of your choice. In order to edit the commit message, replace the word &lt;code&gt;pick&lt;/code&gt; with &lt;code&gt;r&lt;/code&gt;, save and close the editor window to continue rebasing. Don‚Äôt change the message yet! The editor will open again, prompting you to edit the message. You can now close the editor and come back to the terminal. &lt;br&gt;
After running &lt;code&gt;git log --oneline&lt;/code&gt; you will see that the typo was fixed. Piece of cake! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a16Z1yin--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630661366423/3zay-EV9u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a16Z1yin--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630661366423/3zay-EV9u.png" alt="interactive rebase-3.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;Thanks for reading! Hopefully, with those tricks up your sleeve no minor Git mishap will hold you back. If you want more Git tips, check out the previous articles from our Git series: &lt;a href="https://blog.git.live/top-5-git-tips-and-tricks"&gt;Top 5 Git Tips &amp;amp; Tricks&lt;/a&gt; and &lt;a href="https://blog.git.live/5-git-tips-to-level-up-your-workflow"&gt;5 Git Tips To Level Up Your Workflow.&lt;/a&gt; Happy Git-ing!&lt;/p&gt;

</description>
      <category>git</category>
      <category>programming</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>A Nice Developer Joke For Today</title>
      <author>Daily Developer Jokes</author>
      <pubDate>Fri, 03 Sep 2021 12:00:17 +0000</pubDate>
      <link>https://dev.to/dailydeveloperjokes/a-nice-developer-joke-for-today-40hj</link>
      <guid>https://dev.to/dailydeveloperjokes/a-nice-developer-joke-for-today-40hj</guid>
      <description>&lt;p&gt;Hi there! Here's today's Daily Developer Joke. We hope you enjoy it; it's a good one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ImDjBpeO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e1259d7cf335.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ImDjBpeO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e1259d7cf335.png" alt="Joke Image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;For more jokes, and to submit your own joke to get featured, check out the &lt;a href="https://dailydeveloperjokes.github.io/"&gt;Daily Developer Jokes Website&lt;/a&gt;. We're also open sourced, so feel free to view &lt;a href="https://github.com/dailydeveloperjokes"&gt;our GitHub Profile&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leave-this-post-a-if-you-liked-todays-joke-and-stay-tuned-for-tomorrows-joke-too"&gt;
  &lt;/a&gt;
  Leave this post a ‚ù§Ô∏è if you liked today's joke, and stay tuned for tomorrow's joke too!
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This joke comes from &lt;a href="https://github.com/wesbos/dad-jokes"&gt;Dad-Jokes GitHub Repo by Wes Bos&lt;/a&gt; (thank you!), whose owner has given me permission to use this joke with credit.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>jokes</category>
      <category>dailydeveloperjokes</category>
    </item>
    <item>
      <title>Build Chakra UI Grid component using react, typescript, styled-components and styled-system</title>
      <author>Arsalan Ahmed Yaldram</author>
      <pubDate>Fri, 03 Sep 2021 11:53:50 +0000</pubDate>
      <link>https://dev.to/yaldram/build-chakra-ui-grid-component-using-react-typescript-styled-components-and-styled-system-4d2a</link>
      <guid>https://dev.to/yaldram/build-chakra-ui-grid-component-using-react-typescript-styled-components-and-styled-system-4d2a</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;Let us continue building our chakra components using &lt;code&gt;styled-components&lt;/code&gt; &amp;amp; &lt;code&gt;styled-system&lt;/code&gt;. In this tutorial we will be cloning the Chakra UI &lt;code&gt;Grid&lt;/code&gt; &amp;amp; &lt;code&gt;GridItem&lt;/code&gt; components.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I would like you to first check the chakra docs for &lt;a href="https://chakra-ui.com/docs/layout/grid"&gt;grid&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;We will &lt;strong&gt;compose&lt;/strong&gt; (extend) our &lt;code&gt;Box&lt;/code&gt; component to create the &lt;code&gt;Grid&lt;/code&gt; &amp;amp; &lt;code&gt;GridItem&lt;/code&gt; components.&lt;/li&gt;
&lt;li&gt;All the code for this tutorial can be found under the &lt;strong&gt;atom-layout-grid&lt;/strong&gt; branch &lt;a href="https://github.com/yaldram/chakra-ui-clone"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h3&gt;

&lt;p&gt;Please check the previous post where we have completed the Wrap Component. Also please check the Chakra Grid Component code &lt;a href="https://github.com/chakra-ui/chakra-ui/blob/main/packages/layout/src/grid.tsx"&gt;here&lt;/a&gt;. After checking the chakra source code you might have noticed that they are using some util functions we too will use these of-course you can find that code &lt;a href="https://github.com/chakra-ui/chakra-ui/blob/main/packages/utils/src/object.ts"&gt;here&lt;/a&gt;. In this tutorial we will -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a Grid component.&lt;/li&gt;
&lt;li&gt;Create a GridItem component.&lt;/li&gt;
&lt;li&gt;Create story for the Grid component.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;First let us create a branch, from the main branch run -
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &lt;span class="nt"&gt;-b&lt;/span&gt; atom-layout-grid
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Under the &lt;code&gt;components/atoms/layout&lt;/code&gt; folder create a new folder called &lt;code&gt;grid&lt;/code&gt;. Under grid folder create 3 files &lt;code&gt;grid.tsx&lt;/code&gt; and &lt;code&gt;grid.stories.tsx&lt;/code&gt; and &lt;code&gt;index.tsx&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;So our folder structure stands like - &lt;strong&gt;src/components/atoms/layout/grid&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Also under the utils folder create 4 files &lt;code&gt;utils/types.ts&lt;/code&gt;, &lt;code&gt;utils/objects.ts&lt;/code&gt;, &lt;code&gt;utils/assertions.ts&lt;/code&gt; &amp;amp; finally &lt;code&gt;utils/responsive.ts&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#util-functions"&gt;
  &lt;/a&gt;
  Util Functions
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;First under &lt;code&gt;utils/types.ts&lt;/code&gt; paste the following code -
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Dict&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Record&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;FilterFn&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now under &lt;code&gt;utils/objects.ts&lt;/code&gt; we will create 2 functions &lt;code&gt;objectFilter, filterUndefined&lt;/code&gt;. Let me first explain the javascript code for these -
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;objectFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;

  &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shouldPass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shouldPass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;filterUndefined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;objectFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;objectFilter&lt;/code&gt; takes in an object and a function, under this function we map over the Object keys pick its value and for each object key we run the passed function. If that function returns true we add that key and value to the result variable. How are we suppose to use it ?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check the &lt;code&gt;filterUndefined&lt;/code&gt; function below this will remove all the keys in the object whose value is undefined.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To be really honest, if I were to code this requirement of having a &lt;code&gt;filterUndefined&lt;/code&gt; I would directly write the code for this use case, but this code from &lt;code&gt;chakra/utils&lt;/code&gt; is such great, it passes the Single Responsibility Principle and also allows for composing functions. This is why I advise you to read open source packages / code you learn a lot from these. With that let us add typings to our &lt;code&gt;utils/objects.ts&lt;/code&gt;, final code -&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;FilterFn&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./types&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;objectFilter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Dict&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;FilterFn&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;

  &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shouldPass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shouldPass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;filterUndefined&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;objectFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;objectKeys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Dict&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;keyof&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)[];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now Under &lt;code&gt;utils/assertion.ts&lt;/code&gt; we have some basic assertions to check if the value is an object, or a function, or an array, etc. Copy the following -
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Dict&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./types&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isNull&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isNumber&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="nb"&gt;Function&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;function&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;Dict&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;object&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;function&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
    &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Under &lt;code&gt;utils/responsive.ts&lt;/code&gt; we have a function called &lt;code&gt;mapResponsive&lt;/code&gt;. Keep in mind that with styled-system we can pass responsive values to our props like -
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue500&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;red400&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;sm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blue500&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;md&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;orange300&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Let me first paste the code for &lt;code&gt;mapResponsive&lt;/code&gt; function -
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isObject&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./assertions&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;objectKeys&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./objects&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Dict&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./types&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;mapResponsive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mapper&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;mapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;objectKeys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;mapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;mapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The above code is simple to understand, the function receives the responsive prop and a mapper function. It checks if the prop is an array, object and for each value runs the mapper function. You will see later how we are going to use this.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now under &lt;code&gt;utils/index.ts&lt;/code&gt; paste the following -&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./assertions&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./objects&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./responsive&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#grid-component"&gt;
  &lt;/a&gt;
  Grid Component
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Similar to our &lt;code&gt;Flex&lt;/code&gt; component instead of using the styled-system utility function &lt;code&gt;flexbox&lt;/code&gt; we will create our own utility props using the system function, so that we can use shorthand names for the props.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Following is the code -&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;system&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;GridProps&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;StyledGridProps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;ResponsiveValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;AlignItemsProps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;JustifyItemsProps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;AlignSelfProps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;JustifySelfProps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;JustifyContentProps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;AlignContentProps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-system&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;filterUndefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mapResponsive&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../../../utils&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;BoxProps&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../box&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;GridOmitted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;display&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;GridOptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;templateColumns&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;StyledGridProps&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridTemplateColumns&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nl"&gt;rowGap&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;StyledGridProps&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridRowGap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nl"&gt;columnGap&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;StyledGridProps&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridColumnGap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nl"&gt;gap&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;StyledGridProps&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridGap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nl"&gt;autoFlow&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;StyledGridProps&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridAutoFlow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nl"&gt;autoRows&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;StyledGridProps&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridAutoRows&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nl"&gt;autoColumns&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;StyledGridProps&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridAutoColumns&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nl"&gt;templateRows&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;StyledGridProps&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridTemplateRows&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nl"&gt;templateAreas&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;StyledGridProps&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridTemplateAreas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nl"&gt;area&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;StyledGridProps&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridArea&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nl"&gt;column&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;StyledGridProps&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridColumn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nl"&gt;row&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;StyledGridProps&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridRow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nl"&gt;align&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;AlignItemsProps&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;alignItems&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nl"&gt;justify&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;JustifyItemsProps&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;justifyItems&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;BaseGridProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;GridOptions&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;
  &lt;span class="nx"&gt;BoxProps&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;
  &lt;span class="nx"&gt;AlignContentProps&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;
  &lt;span class="nx"&gt;JustifyContentProps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;BaseGrid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BaseGridProps&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;`
  display: grid;
  &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;system&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;templateAreas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridTemplateAreas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;templateColumns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridTemplateColumns&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;templateRows&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridTemplateRows&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;rowGap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridRowGap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;space&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;columnGap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridColumnGap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;space&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridGap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;space&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;autoFlow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridAutoFlow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;autoRows&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridAutoRows&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;autoColumns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridAutoColumns&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridArea&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;column&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridColumn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;row&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridRow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;alignItems&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;justify&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;justifyItems&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;alignContent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;justifyContent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;})}&lt;/span&gt;&lt;span class="s2"&gt;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;GridProps&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Omit&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BaseGridProps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;GridOmitted&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;HTMLDivElement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;GridProps&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;delegated&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BaseGrid&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;delegated&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;BaseGrid&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#griditem-component"&gt;
  &lt;/a&gt;
  GridItem Component
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Let me first paste the code for this component -
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;GridItemSpanValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ResponsiveValue&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;spanFun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;GridItemSpanValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;mapResponsive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`span &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/span &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;GridItemOptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;colSpan&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;GridItemSpanValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;colStart&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;GridItemSpanValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;colEnd&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;GridItemSpanValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;rowStart&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;GridItemSpanValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;rowEnd&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;GridItemSpanValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;rowSpan&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;GridItemSpanValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;BaseGridItemProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;GridItemOptions&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;
  &lt;span class="nx"&gt;BoxProps&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;
  &lt;span class="nx"&gt;AlignSelfProps&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;
  &lt;span class="nx"&gt;JustifySelfProps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;BaseGridItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BaseGridItemProps&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;`
  &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;system&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;colSpan&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridColumn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;rowSpan&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridRow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;colStart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridColumnStart&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;colEnd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridColumnEnd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;rowStart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridRowStart&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;rowEnd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridRowEnd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;alignSelf&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;justifySelf&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;})}&lt;/span&gt;&lt;span class="s2"&gt;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;GridItemProps&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;BaseGridItemProps&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;GridItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;HTMLDivElement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;GridItemProps&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;colSpan&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;rowSpan&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;colStart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;colEnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;rowStart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;rowEnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;delegated&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;gridItemProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;filterUndefined&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;colSpan&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;spanFun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;colSpan&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;rowSpan&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;spanFun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rowSpan&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="nx"&gt;colStart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;colEnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;rowStart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;rowEnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BaseGridItem&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;gridItemProps&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;delegated&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;BaseGridItem&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Here we used our utils functions for &lt;code&gt;mapResponsive&lt;/code&gt; &amp;amp; &lt;code&gt;filterUndefined&lt;/code&gt;. You can see the &lt;code&gt;filterUndefined&lt;/code&gt; function here we filter the undefined or null props.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The best way to understand this code, is to work with these components at Chakra Docs and read our code. The &lt;code&gt;spanFun&lt;/code&gt; is a great example if we pass colSpan={2} it will replace this value with the valid css value &lt;code&gt;span 2 / span 2&lt;/code&gt;. This my friends, this api is so cool, if I had done this I would be okay with the user passing colSpan="span 2 / span 2", but look how chakra simplifies this. That is why try these component libraries and also read their code and implement our own components with it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#story"&gt;
  &lt;/a&gt;
  Story
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;With the above our &lt;code&gt;Grid&lt;/code&gt; and &lt;code&gt;GridItem&lt;/code&gt; components are completed, let us create a story.&lt;/li&gt;
&lt;li&gt;Under the &lt;code&gt;src/components/atoms/layout/grid/grid.stories.tsx&lt;/code&gt; file we add the below story code.&lt;/li&gt;
&lt;li&gt;We will create 1 single story called Default.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Grid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;GridItem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;GridProps&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./grid&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Atoms/Layout/Grid&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;render&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;GridProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Grid&lt;/span&gt;
      &lt;span class="na"&gt;h&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"200px"&lt;/span&gt;
      &lt;span class="na"&gt;templateRows&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"repeat(2, 1fr)"&lt;/span&gt;
      &lt;span class="na"&gt;templateColumns&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"repeat(5, 1fr)"&lt;/span&gt;
      &lt;span class="na"&gt;gap&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"md"&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GridItem&lt;/span&gt; &lt;span class="na"&gt;rowSpan&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;colSpan&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"tomato"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GridItem&lt;/span&gt; &lt;span class="na"&gt;colSpan&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"papayawhip"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GridItem&lt;/span&gt; &lt;span class="na"&gt;colSpan&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"papayawhip"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GridItem&lt;/span&gt; &lt;span class="na"&gt;colSpan&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"tomato"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Grid&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now run &lt;code&gt;npm run storybook&lt;/code&gt; check the stories.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#build-the-library"&gt;
  &lt;/a&gt;
  Build the Library
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Under the &lt;code&gt;/layout/grid/index.ts&lt;/code&gt; paste the following -
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./grid&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Under the &lt;code&gt;/layout/index.ts&lt;/code&gt; file and paste the following -
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./box&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./flex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./stack&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./containers&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./wrap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./grid&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Now &lt;code&gt;npm run build&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Under the folder &lt;code&gt;example/src/App.tsx&lt;/code&gt; we can test our &lt;code&gt;Grid&lt;/code&gt; component. Copy paste the following code and run &lt;code&gt;npm run start&lt;/code&gt; from the &lt;code&gt;example&lt;/code&gt; directory.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Grid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;GridItem&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;chakra-ui-clone&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Grid&lt;/span&gt;
      &lt;span class="na"&gt;h&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"200px"&lt;/span&gt;
      &lt;span class="na"&gt;templateRows&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"repeat(2, 1fr)"&lt;/span&gt;
      &lt;span class="na"&gt;templateColumns&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"repeat(5, 1fr)"&lt;/span&gt;
      &lt;span class="na"&gt;gap&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"md"&lt;/span&gt;
    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GridItem&lt;/span&gt; &lt;span class="na"&gt;rowSpan&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;colSpan&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"tomato"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GridItem&lt;/span&gt; &lt;span class="na"&gt;colSpan&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"papayawhip"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GridItem&lt;/span&gt; &lt;span class="na"&gt;colSpan&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"papayawhip"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GridItem&lt;/span&gt; &lt;span class="na"&gt;colSpan&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"tomato"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Grid&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;There you go guys in this tutorial we created &lt;code&gt;Grid&lt;/code&gt; and &lt;code&gt;GridItem&lt;/code&gt; components just like chakra ui and stories for them. You can find the code for this tutorial under the &lt;strong&gt;atom-layout-grid&lt;/strong&gt; branch &lt;a href="https://github.com/yaldram/chakra-ui-clone"&gt;here&lt;/a&gt;. Use them pass different props, use console.logs throughout the code to understand its working. In the next tutorial we will create a SimpleGrid component. Until next time PEACE.&lt;/p&gt;

</description>
      <category>react</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Extract the number of Google search results using beta GPT-3</title>
      <author>Ilya Zub</author>
      <pubDate>Fri, 03 Sep 2021 11:37:31 +0000</pubDate>
      <link>https://dev.to/serpapi/extract-the-number-of-google-search-results-using-beta-gpt-3-34g5</link>
      <guid>https://dev.to/serpapi/extract-the-number-of-google-search-results-using-beta-gpt-3-34g5</guid>
      <description>&lt;p&gt;Today we received beta access to Codex and GPT-3 models and started playing with automated web scraping.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fxrz80OD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gki658ioxelzvxu7k1kz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fxrz80OD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gki658ioxelzvxu7k1kz.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OpenAI has a good &lt;a href="https://beta.openai.com/docs/guides/completion/improving-the-classifiers-efficiency"&gt;example for prompt design in the documentation for Completion&lt;/a&gt;. Based on the example, we provided samples of HTML and expected results in English, French and German languages.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;This is an extractor of the number of search results from HTML

HTML: "&amp;lt;div id="result-stats"&amp;gt;About 3,200,000,000 results&amp;lt;nobr&amp;gt; (0.97 seconds)&amp;amp;nbsp;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;"
Number of search results: 3200000000

HTML: "&amp;lt;div id="result-stats"&amp;gt;About 2,200,000,000 results&amp;lt;nobr&amp;gt; (0.297 seconds)&amp;amp;nbsp;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;"
Number of search results: 2200000000

HTML: "&amp;lt;div id="result-stats"&amp;gt;Environ 1‚ÄØ400‚ÄØ000‚ÄØ000&amp;amp;nbsp;r√©sultats&amp;lt;nobr&amp;gt; (1,05&amp;amp;nbsp;secondes)&amp;amp;nbsp;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;"
Number of search results: 1‚ÄØ400‚ÄØ000‚ÄØ000

HTML: "&amp;lt;div id="result-stats"&amp;gt;About 1,790,000 results&amp;lt;nobr&amp;gt; (0.55 seconds)&amp;amp;nbsp;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;"
Number of search results: 5000000

HTML: "&amp;lt;span class="nums_text"&amp;gt;ÁôæÂ∫¶‰∏∫ÊÇ®ÊâæÂà∞Áõ∏ÂÖ≥ÁªìÊûúÁ∫¶100,000,000‰∏™&amp;lt;/span&amp;gt;"
Number of search results: 100000000

HTML text
1. "&amp;lt;div id="result-stats"&amp;gt;About 1,800,0020,000 results&amp;lt;nobr&amp;gt; (0.589 seconds)&amp;amp;nbsp;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;"
2. "&amp;lt;div id="result-stats"&amp;gt;About 953,626,112 results&amp;lt;nobr&amp;gt; (1.29 seconds)&amp;amp;nbsp;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;"
3. "&amp;lt;div id="result-stats"&amp;gt;Ungef√§hr 1.240.000.000 Ergebnisse&amp;lt;nobr&amp;gt; (0,72 Sekunden)&amp;amp;nbsp;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;"

Extracted number of search results
1. 18000020000
2. 953626112
3. 1240000000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we provided HTML to extract data and a prompt.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;HTML text
1. "&amp;lt;div id="result-stats"&amp;gt;About 1,800,0020,000 results&amp;lt;nobr&amp;gt; (0.589 seconds)&amp;amp;nbsp;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;"
2. "&amp;lt;div id="result-stats"&amp;gt;Á¥Ñ 1,510,000,000 ‰ª∂&amp;lt;nobr&amp;gt; Ôºà0.82 ÁßíÔºâ&amp;amp;nbsp;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;"
3. "&amp;lt;div id="result-stats"&amp;gt;Aproximadamente 2.180.000.000 resultados&amp;lt;nobr&amp;gt; (0,73 segundos)&amp;amp;nbsp;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;"
4. "&amp;lt;div id="result-stats"&amp;gt;Sekitar 2.480.000.000 hasil&amp;lt;nobr&amp;gt; (0,72 detik)&amp;amp;nbsp;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;"
5. "&amp;lt;div id="result-stats"&amp;gt;ÿ≠ŸàÿßŸÑŸâ Ÿ°ŸßŸ¨Ÿ§Ÿ§Ÿ†Ÿ¨Ÿ†Ÿ†Ÿ†Ÿ¨Ÿ†Ÿ†Ÿ† ŸÜÿ™Ÿäÿ¨ÿ©&amp;lt;nobr&amp;gt; (Ÿ†Ÿ´Ÿ©Ÿ† ÿ´ÿßŸÜŸäÿ©)&amp;amp;nbsp;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;"
6. "&amp;lt;div id="result-stats"&amp;gt;Yakla≈üƒ±k 2.680.000.000 sonu√ß bulundu&amp;lt;nobr&amp;gt; (0,62 saniye)&amp;amp;nbsp;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;"
7. "&amp;lt;div id="result-stats"&amp;gt;–ü—Ä–∏–±–ª–∏–∑–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤: 2&amp;amp;nbsp;630&amp;amp;nbsp;000&amp;amp;nbsp;000&amp;lt;nobr&amp;gt; (1,38 —Å)&amp;amp;nbsp;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;"
8. "&amp;lt;div id="result-stats"&amp;gt;Aproximadamente 19.250.000.000 resultados&amp;lt;nobr&amp;gt; (0,73 segundos)&amp;amp;nbsp;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;"
9. "&amp;lt;div id="result-stats"&amp;gt;Ungef√§r 1&amp;amp;nbsp;960&amp;amp;nbsp;000&amp;amp;nbsp;000 resultat&amp;lt;nobr&amp;gt; (0,80 sekunder)&amp;amp;nbsp;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;"
10. "&amp;lt;div id="result-stats"&amp;gt;Œ†ŒµœÅŒØœÄŒøœÖ 2.480.000.000 Œ±œÄŒøœÑŒµŒªŒ≠œÉŒºŒ±œÑŒ±&amp;lt;nobr&amp;gt; (0,76 Œ¥ŒµœÖœÑŒµœÅœåŒªŒµœÄœÑŒ±)&amp;amp;nbsp;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;"

Extracted number of search results
1.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OpenAI was able to extract data from different languages too: Japanese, Ukrainian, Greek, Turkish, Spanish. Absolutely amazing!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Extracted number of search results
1. 18000020000
2. 15100000
3. 21800000
4. 24800000000
5. 196000000
6. 268000000
7. 26300000000
8. 19000000
9. 19600000000
10. 2480000000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It has incorrectly extracted Arabic digits (#5) probably because there were no examples.&lt;/p&gt;

&lt;p&gt;We used the &lt;a href="https://beta.openai.com/playground/p/57Wk2RJShlb7rpf8PeveLN9L"&gt;Davinci model and default parameters in the OpenAI Playground&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here is a video of data extraction on OpenAI Playground:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/rONX-Zfuq0Q"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Next time we will use the Codex model to generate a Ruby or Python program that extracts the number of search results. The end goal is to replace part of hand-crafted parsers with automated data extraction.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://beta.openai.com/playground/p/57Wk2RJShlb7rpf8PeveLN9L?model=davinci"&gt;OpenAI Playground&lt;/a&gt; ‚Ä¢ &lt;a href="https://beta.openai.com/"&gt;Request beta access for OpenAI&lt;/a&gt; ‚Ä¢ &lt;a href="https://serpapi.com/users/sign_up?plan=free"&gt;Try SerpApi for free&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#outro"&gt;
  &lt;/a&gt;
  Outro
&lt;/h3&gt;

&lt;p&gt;If you have any questions or an idea on how to properly automatically extract data from SERPs, feel free to drop a comment via Twitter at &lt;a href="https://twitter.com/serp_api"&gt;@serp_api&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>openai</category>
      <category>gpt3</category>
      <category>webscraping</category>
    </item>
    <item>
      <title>Decoding the tech behind a White label Cryptocurrency Exchange Software| React JS| Kotlin, Java, PHP, Python&amp;Swift</title>
      <author>Stephen Hardy</author>
      <pubDate>Fri, 03 Sep 2021 11:15:13 +0000</pubDate>
      <link>https://dev.to/stephen_hardy98/decoding-the-tech-behind-a-white-label-cryptocurrency-exchange-software-react-js-kotlin-java-php-python-swift-2i6g</link>
      <guid>https://dev.to/stephen_hardy98/decoding-the-tech-behind-a-white-label-cryptocurrency-exchange-software-react-js-kotlin-java-php-python-swift-2i6g</guid>
      <description>&lt;p&gt;Digital currencies have a humongous trading volume of $133.65 billion as per CoinMarketCap. Bitcoin (BTC) continues to be popular since it had the first-mover advantage (launched in January 2009). However, there are 11592 virtual currencies now with a market cap of $2.26 trillion. Investors are earning huge returns in no time. How can entrepreneurs enter this booming industry with a low capital expenditure? They can acquire &lt;a href="https://www.appdupe.com/cryptocurrency-exchange-script"&gt;Whitelabel Cryptocurrency exchange software&lt;/a&gt;.  The licensed trading platform is feature-packed and also can be rebranded according to their business requirement&lt;/p&gt;

&lt;h3&gt;Know the frameworks for developing a Whitelabel Crypto Trading exchange&lt;/h3&gt;
 

&lt;p&gt;&lt;b&gt;Cloud-based software&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;The disadvantages of centralization have been replaced by the plus points of decentralization. The likes of Amazon Web Services (AWS) and Google Cloud are controlled by powerful tech companies and users do not have control over their personal information. Therefore, crypto data is held in reliable storage platforms like Filecoin and InterPlanetary File System (IPFS). &lt;/p&gt;

&lt;p&gt;It includes the safe storage of information such as asset prices, digital wallets, trading volume, and transactions.  Entrepreneurs will benefit from a reduction in operating costs. &lt;/p&gt;

&lt;p&gt;For insurance, IPFS works even offline leading to a decrease in computational energy. The peer-to-peer hypermedia protocol provides advantages like automatic timestamping of information, protection against tamper-proof storage of data, and a unique fingerprint called content identifier (CID). &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Database management systems&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Storing the financial data of investors is highly important. The reputation of crypto exchanges will be harmed if there are hacking or phishing attacks. Therefore, database management programs like MongoDB, MySQL, and PostgreSQL are used for safely backing up information. Eventually, it provides advantages such as easy changing of the designs, robust management of the infrastructure,  and swift analysis of details of traders. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Programming languages&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;A wide variety of coding languages are used to launch a ready-made Cryptocurrency trading platform. It includes Kotlin, Java, PHP, Python, and Swift. It helps in the glitch-free execution of buy and sell orders. Techpreneurs will benefit from fool-proof security measures, quick resolution of bugs, and scalability. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ssQfZZQV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/33i46gb2407f2z2ja3td.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ssQfZZQV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/33i46gb2407f2z2ja3td.jpg" alt="alt txt"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Why is ReactJS essential for building a crypto trading platform?&lt;/h3&gt;

&lt;p&gt;It plays a critical role in the development of a white-label crypto solution. It enables smart routing of data such as generation of charts and graphs and historical pricing. &lt;/p&gt;

&lt;p&gt;ReactJS also helps in creating a friendly user interface. This helps in easing out the trading activities of both institutional and retail investors. Further, React JavaScript Library provides the superiority of flexibility and speed. &lt;/p&gt;

&lt;p&gt;The cryptocurrency exchange is set up swiftly by adding information like the average liquidity, current market cap, previous changes in prices, the number of coins and tokens, and trading pairs (crypto-to-crypto, crypto-fiat, and crypto-to-stablecoin). &lt;/p&gt;

&lt;p&gt;Besides that, it promotes transparency as real-time data is collected from the crypto exchanges and shared with investors.  This ensures that traders make the right decisions after seeing the current market conditions and their objectives.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;How do Application Programming Interfaces (APIs) make the difference?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Blockchain networks form the backbone of trading platforms. All the blocks are interconnected with a cryptographic hash. Similarly, APIs will circulate information from JavaScript Object Notation (JSON).  Since the value of all cryptocurrencies fluctuates every second, Application Programming Interfaces (APIs) share the latest data with crypto enthusiasts. &lt;/p&gt;

&lt;p&gt;It can be integrated with any crypto exchange software. Importantly, APIs can support any kind of browser. Cascading Style Sheets (CSS) also helps in the quick resolution of security vulnerabilities and technical bugs.&lt;/p&gt;

&lt;h3&gt;Final note&lt;/h3&gt;

&lt;p&gt;&lt;b&gt;‚ÄúIt is not that we use technology, we live technology‚Äù&lt;/b&gt;, says a famous quote. Cryptocurrencies are gaining huge traction in the global financial system. They offer anonymity, low transaction processing charges, privacy, and protection against inflation. Finally, entrepreneurs can become the pioneer in digital trading by getting hold of a customized Cryptocurrency exchange software. &lt;/p&gt;

&lt;p&gt;Source:&amp;gt;&amp;gt; &lt;a href="https://www.appdupe.com/cryptocurrency-exchange-script"&gt;Dynamic Cryptocurrency Exchange Script&lt;/a&gt; &lt;/p&gt;

</description>
      <category>kotlin</category>
      <category>javascript</category>
      <category>php</category>
      <category>swift</category>
    </item>
  </channel>
</rss>
