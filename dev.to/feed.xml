<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to Setup EC2 Instance</title>
      <author>Vijay Patel</author>
      <pubDate>Tue, 28 Dec 2021 03:58:04 +0000</pubDate>
      <link>https://dev.to/easyawslearn/how-to-setup-ec2-instance-220a</link>
      <guid>https://dev.to/easyawslearn/how-to-setup-ec2-instance-220a</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-amazon-ec2-instance"&gt;
  &lt;/a&gt;
  What is Amazon EC2 Instance?
&lt;/h2&gt;

&lt;p&gt;Amazon EC2 provides a wide selection of instance types optimized to fit different use cases. Instance types comprise varying combinations of CPU, memory, storage, and networking capacity and give you the flexibility to choose the appropriate mix of resources for your applications. Each instance type includes one or more instance sizes, allowing you to scale your resources to the requirements of your target workload.&lt;/p&gt;

&lt;p&gt;The instance will be charged per hour with different rates based on the type of instance chosen. AWS provides multiple instance types for the respective business needs of the user.&lt;br&gt;
Thus, you can rent an instance based on your own CPU and memory requirements and use it as long as you want. You can terminate the instance when it’s no more used and save on costs. This is the most striking advantage of an on-demand instance- you can drastically save on your CAPEX.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Here is the full dedicated video-based upon "How to Create Amazon EC2 Instance"👇👇&lt;/code&gt;&lt;br&gt;
&lt;a href="https://youtu.be/jISf5V7BAKA"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AmUMQw5j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f1dvbru8qntsu9t7gy7k.png" alt="Image description" width="600" height="320"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps-to-create-amazon-ec2-instance"&gt;
  &lt;/a&gt;
  Steps to Create Amazon EC2 Instance
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#1-in-ec2-go-to-the-instances"&gt;
  &lt;/a&gt;
  1.    In EC2 go to the Instances
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BDLlhpXK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zhtq86nu8gheqw1o72vw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BDLlhpXK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zhtq86nu8gheqw1o72vw.png" alt="Image description" width="638" height="390"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-and-after-that-click-on-launch-the-instance"&gt;
  &lt;/a&gt;
  2.    And after that Click on Launch the Instance.
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0tJpQFHc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjk8vz6pw5tnzxwvx0yw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0tJpQFHc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjk8vz6pw5tnzxwvx0yw.png" alt="Image description" width="639" height="394"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-choose-the-machine-image-ami-you-want"&gt;
  &lt;/a&gt;
  3.    Choose the Machine Image (AMI) you want.
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VOE_j6SL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/krwy2p488yhz3qta5rtg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VOE_j6SL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/krwy2p488yhz3qta5rtg.png" alt="Image description" width="640" height="343"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-choose-the-instance-type-you-want"&gt;
  &lt;/a&gt;
  4.    Choose the Instance Type you want.
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PesOzyWG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fwvqm80rv2p4tai4yw6e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PesOzyWG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fwvqm80rv2p4tai4yw6e.png" alt="Image description" width="512" height="277"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-configure-the-instance-details"&gt;
  &lt;/a&gt;
  5.    Configure the Instance Details.
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2oqNWEqb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kt82yu3ukjrkia1iz1ma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2oqNWEqb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kt82yu3ukjrkia1iz1ma.png" alt="Image description" width="640" height="390"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#6-add-storage"&gt;
  &lt;/a&gt;
  6.    Add Storage
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LwJqBjdY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgn3t38uu3t1uuac0l42.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LwJqBjdY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgn3t38uu3t1uuac0l42.png" alt="Image description" width="512" height="277"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#7-add-tags"&gt;
  &lt;/a&gt;
  7.    Add tags
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oxXrcgDC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xhfiw0hzzm51br63c4vy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oxXrcgDC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xhfiw0hzzm51br63c4vy.png" alt="Image description" width="639" height="346"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#8-configure-security-group"&gt;
  &lt;/a&gt;
  8.    Configure Security Group
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_dcJQN7j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzwen7dzs22gnip3q3ye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_dcJQN7j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzwen7dzs22gnip3q3ye.png" alt="Image description" width="512" height="277"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#9-review-and-launch-here-you-can-see-the-detail-of-your-instance"&gt;
  &lt;/a&gt;
  9.    Review and Launch, Here you can see the Detail of your Instance.
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--58bJMKBc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tyvo87tczjd7q48ftnym.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--58bJMKBc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tyvo87tczjd7q48ftnym.png" alt="Image description" width="640" height="347"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#10-if-you-are-done-with-the-review-now-you-can-simply-launce-the-instance"&gt;
  &lt;/a&gt;
  10.    If you are done with the Review, Now you can Simply launce the Instance
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HPwx98AV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9h1fohwqlr2vtd17rml.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HPwx98AV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9h1fohwqlr2vtd17rml.png" alt="Image description" width="512" height="277"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#11-then-your-instance-will-start-the-launching"&gt;
  &lt;/a&gt;
  11.    Then your instance will start the launching
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eYmEek27--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/86lcgc8q73way24e7u58.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eYmEek27--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/86lcgc8q73way24e7u58.png" alt="Image description" width="512" height="276"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;▬▬▬▬▬▬ WANT TO LEARN MORE? ▬▬▬▬▬▬&lt;br&gt;
Full Terraform tutorial ► &lt;a href="https://bit.ly/2GwK8V2"&gt;https://bit.ly/2GwK8V2&lt;/a&gt;&lt;br&gt;
DevOps Tools, like Ansible ► &lt;a href="https://bit.ly/3iASHuP"&gt;https://bit.ly/3iASHuP&lt;/a&gt;&lt;br&gt;
Docker Tutorial ► &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;br&gt;
AWS Tutorial ► &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>ec2instance</category>
      <category>instance</category>
      <category>cloudcomputing</category>
    </item>
    <item>
      <title>⚡⚡Learn Svelte &amp; WebRTC before you enter 2022 ⚡⚡</title>
      <author>Brian</author>
      <pubDate>Tue, 28 Dec 2021 03:06:10 +0000</pubDate>
      <link>https://dev.to/yaku/svelte-webrtc-2hdn</link>
      <guid>https://dev.to/yaku/svelte-webrtc-2hdn</guid>
      <description>&lt;p&gt;Hi everyone, thanks for checking out this blog . In my previous blog &lt;a href="https://dev.to/yaku/using-webrtc-and-svelte-3pn"&gt;post&lt;/a&gt; I shared my first open source project written in Svelte and WebRTC. &lt;/p&gt;

&lt;p&gt;The project is in its early stage and I'm basically looking for any help with code. So far I created a demo SvelteKit web app which you can demo right now &lt;strong&gt;&lt;a href="https://webrtc-n3gpq25i9-yakumwamba.vercel.app/"&gt;here&lt;/a&gt;&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Kindly star the project if you are interested in WebRTC and Svelte &lt;strong&gt;&lt;a href="https://github.com/Yakumwamba/google_webrtc_svelte"&gt;here&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Thanks for stopping Enjoy your day.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>svelte</category>
      <category>webrtc</category>
      <category>devops</category>
    </item>
    <item>
      <title>Infinite Scroll Design: Everything You Need To Know</title>
      <author>startuphub</author>
      <pubDate>Tue, 28 Dec 2021 02:02:08 +0000</pubDate>
      <link>https://dev.to/startuphub/infinite-scroll-design-everything-you-need-to-know-2723</link>
      <guid>https://dev.to/startuphub/infinite-scroll-design-everything-you-need-to-know-2723</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-infinite-scroll-design"&gt;
  &lt;/a&gt;
  What is Infinite Scroll Design?
&lt;/h2&gt;

&lt;p&gt;Infinite Scroll Design refers to a technique in which the content loads endlessly as and when users move to the end of the page. This happens without a load button or a finish line. The user is able to scroll down without being interrupted. This design is also called the continuous scrolling design, as the user can scroll continuously. &lt;/p&gt;

&lt;p&gt;The infinite scroll design is different from pagination and load more techniques. Pagination divides the site content into different pages and gives a load more button when the user reaches the bottom of the page. &lt;/p&gt;

&lt;p&gt;The infinite scroll design is not fit for all kinds of websites and apps. Here are some advantages and disadvantages of infinite scroll design: &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages"&gt;
  &lt;/a&gt;
  Advantages
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. Keeps the users hooked for longer&lt;/strong&gt;: Infinite scroll design holds the user’s attention because it shows new content without interruptions. This keeps them engaged for longer. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Works well for mobile apps:&lt;/strong&gt; Facebook, Twitter, Instagram are great examples of mobile apps that leverage this technique to keep the users on the app for longer. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. No waiting time:&lt;/strong&gt; Infinite scroll design allows for non-stop content uploads. In today’s age, speed matters, and users don't like to wait. This technique allows for fast content viewing. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Greater discoveries:&lt;/strong&gt; Websites that host a wide variety of information can use this technique as it allows indecisive users to discover new content as they scroll. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. No clicks:&lt;/strong&gt; As the user doesn't have to click anywhere for more content to load, there are no clicks involved. This gives a seamless user experience. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#disadvantages"&gt;
  &lt;/a&gt;
  Disadvantages
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. Not suitable for users who know what they want:&lt;/strong&gt; This design leaves a bad impact on users who have come with a specific purpose to the site. They want footers and navigation bars to see the content they are looking for, but that is difficult with infinite scrolling. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Difficult to get back to a specific position/content:&lt;/strong&gt; Infinite scroll design shows no way of getting back to a specific position. The back button will not take you to your previous position. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Footers are difficult to locate:&lt;/strong&gt; Important links in footers are hard to find as new content loads as soon as users reach the end of the page. The about us or contact us links are to be located somewhere else on the website. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Time-consuming and addictive:&lt;/strong&gt; Hooking the users with new content makes it addictive for the users to scroll and scroll until they are exhausted. This happens to all the users on social media apps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-to-use-infinite-scroll-in-uiux-design"&gt;
  &lt;/a&gt;
  When to use Infinite Scroll in UI/UX design?
&lt;/h2&gt;

&lt;p&gt;Some projects where Infinite Scroll Design is fit to use are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Search engines, like Google&lt;/li&gt;
&lt;li&gt;Sites that do storytelling for products or brands&lt;/li&gt;
&lt;li&gt;Ecommerce websites&lt;/li&gt;
&lt;li&gt;News apps and websites&lt;/li&gt;
&lt;li&gt;Social media apps&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don't use the infinite scrolling technique on sites where users are looking for specific content or are there to buy a product. Always use techniques that serve your user the best. &lt;a href="https://meddic.academy"&gt;MEDDIC Sales methodology&lt;/a&gt; agrees that user experience should be the first priority of every business. They provide sales training in such a way that is proven to increase their client's sales. The best part is their reasonable prices and extremely dedicated service. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>design</category>
      <category>devops</category>
    </item>
    <item>
      <title>What is Python used for? (All applications today)

</title>
      <author>ltcbuzy</author>
      <pubDate>Tue, 28 Dec 2021 01:21:13 +0000</pubDate>
      <link>https://dev.to/ltcbuzy/what-is-python-used-for-all-applications-today-hd2</link>
      <guid>https://dev.to/ltcbuzy/what-is-python-used-for-all-applications-today-hd2</guid>
      <description>&lt;p&gt;What else do Google, YouTube, Instagram, Reddit and Spotify have in common besides being some of the world's most popular software services? True: they all use Python.&lt;/p&gt;

&lt;p&gt;Python is everywhere. You can not even imagine how wide it is. Most importantly, Python is easy to learn, easy to read and easy to write. It also has a high development speed without compromising reliability or scalability.&lt;/p&gt;

&lt;p&gt;Thanks to the high demand for Python, it is well supported and very popular.&lt;/p&gt;

&lt;p&gt;But what exactly is Python used for? Which technology or business does Python benefit the most from? If you want to get into any of the following areas, consider whether or not you want to choose Python to develop your technology.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python-for-web-development"&gt;
  &lt;/a&gt;
  Python for web development
&lt;/h2&gt;

&lt;p&gt;In the current market there may be a business without a website. In addition, this trend is looking for more and more impressive web applications, which include the following:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Perfect mobile and desktop versions&lt;/strong&gt;&lt;br&gt;
Asymmetric layout&lt;br&gt;
Progressive web applications&lt;br&gt;
Integrated animations&lt;br&gt;
ML chatbots&lt;br&gt;
Today, more than ever, it's important to choose the right tools when building (or possibly rebuilding) your website or web application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-using-python-for-web-development"&gt;
  &lt;/a&gt;
  Benefits of Using Python for Web Development
&lt;/h2&gt;

&lt;p&gt;There are many benefits to Python that will help you get great results in web development fast:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Python has a large collection of pre-built libraries for almost anything . For example, libraries for scientific computing, image processing, data processing, machine learning, deep learning, etc.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;2- Python code takes less time to write due to its simple and clear syntax. Because of this, the code written in Python can build prototypes very well and quickly.&lt;/p&gt;

&lt;p&gt;3- Python accelerates ROI of commercial projects. The reason for this is similar to the previous point: you can write and send your code faster. This is especially important for startups.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Python has a built-in framework for unit testing. This helps you send bug-free code. In addition to the standard features of Python, one of its most important strengths in web development is the variety of web frameworks offered.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;With a wide selection of well-supported frameworks, you can find the right starting point for any project. Python provides you with the tools to do the job with confidence:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-and-outofthebox-implementation-solutions"&gt;
  &lt;/a&gt;
  Quick and out-of-the-box implementation solutions
&lt;/h2&gt;

&lt;p&gt;Solutions that require the cooperation of many specialized micro services&lt;br&gt;
A program whose performance is very important&lt;br&gt;
Top Python Web Frameworks&lt;br&gt;
Django: Python's most extensive web framework - at least until recently. The Django trademark is complete because it aims to provide all the tools needed to build a web application in a single package. This is a good option if your program is relatively standard, as it allows you to search through the basics and find an efficient solution faster.&lt;/p&gt;

&lt;p&gt;Flask: Compared to Django, Flask focuses much more on minor services, which may be the reason for its new No. 1 popularity based on JetBrains. Unlike Django, which is all in one package, Flask works more like glue, allowing you to blend libraries together. Flick throws itself well into a repetitive approach to adding new features and services "once in a while."&lt;/p&gt;

&lt;p&gt;Bottle: Bottle is another framework that prefers to ignore the fact that it overshadows the user with anything else it may need. This framework is lightweight and has no external dependencies other than the standard Python library (stdlib). Great for prototyping, as a learning tool, or for building and running simple personal web applications.&lt;/p&gt;

&lt;p&gt;Pyramid: Pyramid perfection comes from the legacy of two previous frameworks: Pylons and repoze.bfg.Now, which are now integrated into Pyramid. Pylons was one of Python's top frameworks. The most important advantage of Pyramid over Django is that it is very easy to customize, while Django is more "thoughtful". This makes Pyramid a great choice for non-standard projects that can be more complex.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python-for-internet-of-things-iot"&gt;
  &lt;/a&gt;
  Python for Internet of Things (IoT)
&lt;/h2&gt;

&lt;p&gt;Depending on your point of view, the Internet of Things can be understood differently. Because of this explanation, suppose we are talking about physical objects in an embedded system that the system connects to the Internet.&lt;/p&gt;

&lt;p&gt;These "objects" now have their own IP address and can communicate with other "objects" remotely or locally using the network. The IoT is often involved in projects involving wireless sensor networks, data analysis, cyber physical systems, big data, and machine learning. In addition, IoT projects often involve real-time analysis and processes.&lt;/p&gt;

&lt;p&gt;Ideally, your programming language for an IoT project should already be a powerful choice for the above areas, yet light and scalable. Python meets these criteria very well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-using-python-for-iot"&gt;
  &lt;/a&gt;
  Advantages of using Python for IoT
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;The popularity of Python is a significant asset. The language is supported by a large and useful community, which has led to the creation of a large collection of pre-written libraries and easier implementation and deployment of work solutions.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;2- Python is portable, expandable and embedded. This makes Python independent of the system and allows it to support many of the computers on the market, regardless of architecture or operating system.&lt;/p&gt;

&lt;p&gt;Python is great for managing and organizing complex data. This is especially useful for IoT systems, which are particularly heavy data.&lt;/p&gt;

&lt;p&gt;4- Learning Python is easy without forcing you to get acquainted with many formatting standards and options. The most immediate result of this is faster results.&lt;/p&gt;

&lt;p&gt;5- Python code is compact and easy to read thanks to its clean syntax. This is useful on small devices with limited memory and computing power. In addition, syntax is partly responsible for Python's growing popularity, and is further strengthening its community.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Python's close connection to scientific computing has paved the way for the development of IoT. If a social scientist or biologist wants to create a program for his or her smart device in the lab, they will be happy to use their favorite language. In most cases, this language will be Python, because this technology has become scientific computing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python is the language of choice for the Raspberry Pi. This is important because the Raspberry Pi is one of the most popular microcontrollers on the market.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python provides tools that simplify the IoT development process, such as webrepl. This option allows you to use your browser to execute Python code for IoT. In addition, the mqtt messaging protocol allows you to update your code or configuration.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Because Python is an interpretive language, you can easily test your solution without compiling code or flashing the device. Using a C program, you have to compile the code on your PC, then upload it to your "object". Python allows you to enter directly into the interpreter about your "object", and this experiment makes different solutions easier.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS provides the Python SDK for AWS IoT. Think of it as a cherry on top of a delicious cake right now.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#what-tools-are-available-for-python-in-the-iot"&gt;
  &lt;/a&gt;
  What tools are available for Python in the IoT?
&lt;/h2&gt;

&lt;p&gt;Raspberry Pi&lt;/p&gt;

&lt;p&gt;C: \ Users \ Mr \ Desktop \ aaaa.jpg&lt;br&gt;
Have you ever seen an interesting IoT project on the web? If so, you've probably seen the Raspberry Pi.&lt;/p&gt;

&lt;p&gt;Raspberry Pi:&lt;/p&gt;

&lt;p&gt;It is small (85 mm 56 mm for Raspberry Pi 3).&lt;br&gt;
Consumes very little energy.&lt;br&gt;
Equipped with USB ports, HDMI port, Ethernet port and Micro SD support.&lt;br&gt;
Most importantly, the software has Linux on board, which means it also uses Python, making Raspberry Pi encryption easy and portable. The Raspberry Pi is a super-versatile device that you can use to build anything: media center, operating system gaming device, time-lapse camera, robot controller, FM radio station, web server, system Security with motion capture, Twitter robot, small desktop computer. It is also one of the most popular tools for teaching programming.&lt;/p&gt;

&lt;p&gt;The Raspberry Pi is an incredibly versatile device that you can use to make anything:&lt;/p&gt;

&lt;p&gt;Media Center,&lt;br&gt;
Gaming machine integration with the operating system,&lt;br&gt;
Camera over time,&lt;br&gt;
Controller robot&lt;br&gt;
FM radio station,&lt;br&gt;
Web server,&lt;br&gt;
Security system with motion capture,&lt;br&gt;
Twitter robot,&lt;br&gt;
Small desktop computer.&lt;br&gt;
It is also one of the most popular tools for teaching programming.&lt;/p&gt;

&lt;p&gt;MicroPython&lt;/p&gt;

&lt;p&gt;C: \ Users \ Mr \ Desktop \ micropython.png__730x250_q85_crop_subsampling-2_upscale.png&lt;br&gt;
When it comes to Python solutions for the IoT, it is no smaller than the MicroPython: a small microcontroller to run Python on a screen that is only a few square inches in size.&lt;/p&gt;

&lt;p&gt;This set includes a bundle, so if you are just starting IoT with Python, you no longer need to look for more.&lt;/p&gt;

&lt;p&gt;One of the most attractive features of MicroPython is WebREPL (Read-Evaluation-Print Loop), which is similar to the command line and is accessible through a web page. Using WebREPL, you can run Python code on an IoT device using a simple terminal in your browser without the need for a serial connection.&lt;/p&gt;

&lt;p&gt;To sweeten this deal, you do not need to connect the board to WiFi, because it can create your own network.&lt;/p&gt;

&lt;p&gt;Zerynth&lt;/p&gt;

&lt;p&gt;C: \ Users \ Mr \ Desktop \ zerynth.png__730x250_q85_crop_subsampling-2_upscale.png&lt;/p&gt;

&lt;p&gt;Zerynth is hailed as an "IoT and Industry 4.0 intermediary".&lt;/p&gt;

&lt;p&gt;It provides developers with a complete ecosystem of tools including IDE, development tools, real-time RTOS, device manager, and mobile-friendly application for monitoring and controlling Zerynth-enabled devices.&lt;/p&gt;

&lt;p&gt;Zerynth accelerates IoT development by allowing you to write articles in Python or a combination of C and Python.&lt;/p&gt;

&lt;p&gt;You can use Zerynth to program the most popular 32-bit microcontrollers, connect them to the Cloud infrastructure, and run your devices with the latest firmware versions of Over-the-Air. It is also fully compact and requires only 60-80 KB of flash and 5-5 KB of RAM.&lt;/p&gt;

&lt;p&gt;Home Assistant&lt;/p&gt;

&lt;p&gt;C: \ Users \ Mr \ Desktop \ home_assistant.png__730x250_q85_crop_subsampling-2_upscale.png&lt;/p&gt;

&lt;p&gt;Home Assistant is an open source Python project for smart home automation. You can install it on your PC or Raspberry Pi.&lt;/p&gt;

&lt;p&gt;Home Assistant works automatically; For example, it can control the lights in your home and measure the temperature of each room.&lt;/p&gt;

&lt;p&gt;In addition, Home Assistant is compatible with a variety of drivers and sensors.&lt;/p&gt;

&lt;p&gt;Python for machine learning (ML)&lt;br&gt;
Machine learning is the newest field in the world of software development. Due to its seemingly limitless possibilities, it is regularly and correctly increasing in popularity. The idea that computers can actively learn instead of working according to written rules is very exciting. This offers a completely new approach to problem solving.&lt;/p&gt;

&lt;p&gt;Python is at the forefront of machine learning. Numerous studies have clearly welcomed Python as the most popular language for machine learning and data science. But why is that? What is the secret of Python?&lt;/p&gt;

&lt;p&gt;Advantages of using Python for ML&lt;br&gt;
There are several reasons why Python is the best way to learn a car:&lt;/p&gt;

&lt;p&gt;Python syntax is efficient and accurate;&lt;br&gt;
Python has a low entry point.&lt;br&gt;
Python integrates well with other programming languages.&lt;br&gt;
But here's another argument for Python, which is more about machine learning than anything else: Extensive open source library support.&lt;/p&gt;

&lt;p&gt;Top Python Libraries for Machine Learning&lt;br&gt;
Python is especially famous for its many libraries, especially for data science. This is the main reason Python is considered as a machine learning solution. Here are some of the most popular Python libraries for machine learning.&lt;/p&gt;

&lt;p&gt;scikit-learn&lt;/p&gt;

&lt;p&gt;C: \ Users \ Mr \ Desktop \ scikit-learn.png__730x250_q85_crop_subsampling-2_upscale.png&lt;/p&gt;

&lt;p&gt;Scikit-Learn is the best known Python library used for machine learning. scikit-Learn is built using SciPy and NumPy and is designed to interact with them. Open source, accessible to all and reusable in a number of areas.&lt;/p&gt;

&lt;p&gt;This library has a variety of algorithms: classification, regression, clustering, dimensionality reduction, model selection, and preprocessing. These algorithms include: support vector machines (SVM), random forests, gradient boosting, K-means and DBSCAN.&lt;/p&gt;

&lt;p&gt;scikit-Learn provides options, the data mining and data analysis tools provided are simple and efficient.&lt;/p&gt;

&lt;p&gt;TensorFlow&lt;/p&gt;

&lt;p&gt;TensorFlow was originally developed by Google engineers and researchers to meet their needs for a system that can detect and train neural networks to find relationships and patterns. This process is designed in the same way that humans reason and learn.&lt;/p&gt;

&lt;p&gt;The flexible, high-performance architecture of the open source library makes numerical computing easy across multiple operating systems, from desktops to server clusters to mobile devices.&lt;/p&gt;

&lt;p&gt;TensorFlow is used by companies like Uber, Dropbox, eBay, Snapchat or Coca Cola.&lt;/p&gt;

&lt;p&gt;nilearn&lt;/p&gt;

&lt;p&gt;C: \ Users \ Mr \ Desktop \ nilearn.png__730x250_q85_crop_subsampling-2_upscale.png&lt;/p&gt;

&lt;p&gt;Nilearn is a high-level Python library for easy and fast statistical learning of neural imaging data. This library learns from scikit-learn due to its advanced machine learning techniques, such as pattern recognition or multivariate statistics. Its applications include prediction modeling and connection analysis.&lt;/p&gt;

&lt;p&gt;The engineering of domain-specific features has the highest nilearn value for machine learning professionals. This means shaping neural imaging data into a matrix of features suitable for statistical learning or other methods.&lt;/p&gt;

&lt;p&gt;mlpy&lt;/p&gt;

&lt;p&gt;C: \ Users \ Mr \ Desktop \ mlpy.png__730x250_q85_crop_subsampling-2_upscale.png&lt;/p&gt;

&lt;p&gt;Mlpy is a high-performance Python library for predictive modeling built on top of SciPy, NumPy, and GNU Scientific Libraries. It is multimedia and open source. mlpy offers a wide range of pioneering approaches to provide solutions to supervised and unsupervised problems.&lt;/p&gt;

&lt;p&gt;Finding a reasonable compromise between efficiency, modularity, reproducibility, maintainability and usability is the main goal of mlpy.&lt;/p&gt;

&lt;p&gt;Python for supervised learning&lt;br&gt;
Supervised machine learning is one of the applications of artificial intelligence. In supervised learning, an algorithm learns from a tagged data set whose output is already known. The two main methods in this group are classification and regression.&lt;/p&gt;

&lt;p&gt;Classification is used to classify data into arbitrary and discrete classes and to predict discrete values, which can help assess validity or aid in medical diagnosis.&lt;/p&gt;

&lt;p&gt;Regression is used in matters involving continuous numbers, including demand and financial forecasting, as well as property price estimation. The predicted result here is a numerical value estimate.&lt;/p&gt;

&lt;p&gt;Classification and regression problems thanks to a large number of Python libraries, including:&lt;/p&gt;

&lt;p&gt;scikit-Learn (backup vector machines, linear and quadratic discriminant analysis, nearest neighbor algorithms, simple Bayesian classifier, decision tree, ensemble methods, etc.);&lt;br&gt;
TensorFlow;&lt;br&gt;
Keras;&lt;br&gt;
PyTorch;&lt;br&gt;
Caffe2 (deep learning);&lt;br&gt;
XGBoost;&lt;br&gt;
CatBoost;&lt;br&gt;
LightGBM (tilt booster).&lt;br&gt;
Python for reinforcement learning&lt;br&gt;
In machine learning without supervision, this algorithm relies on its ability to solve problems after accessing unlabeled datasets without training instructions and known results.&lt;/p&gt;

&lt;p&gt;Clustering and matrix factorization are two common methods of machine learning. Both methods are often used in customer and referrer classification systems, based on the similarity between object properties, both methods are used to group elements.&lt;/p&gt;

&lt;p&gt;Some of the most popular libraries used in clustering and recommendation system engines are:&lt;/p&gt;

&lt;p&gt;Surprise (Neighbor-centric methods, SVD, PMF, SVD ++, NMF)&lt;br&gt;
LightFM (Description of Combined Hidden Representation with Matrix Factoring)&lt;br&gt;
Spotlight (uses PyTorch to build suggested models)&lt;br&gt;
Python for reinforcement learning&lt;br&gt;
Reinforcement learning algorithms learn to modify their behavior to make the right decisions after receiving feedback. They have been tested in self-paced solutions, including video games and traffic light control systems.&lt;/p&gt;

&lt;p&gt;Problems with reinforcement learning are often specific and finding solutions to them can be quite challenging. These Python libraries can help you:&lt;/p&gt;

&lt;p&gt;Keras-RL (Deep Boost Learning for Cross)&lt;br&gt;
TensorForce (TensorFlow Library for Applied Reinforcement Learning)&lt;br&gt;
(Coach (NAF, DQN, DFP and &lt;a href="https://visual-effects-29030.netlify.app/"&gt;netlify&lt;/a&gt;others)&lt;br&gt;
Python for Fintech&lt;br&gt;
While Python may not be a new technology, its growing popularity among hedge funds and the investment banking industry is a recent development. But the fact that Python is the fastest language in finance should come as no surprise.&lt;/p&gt;

&lt;p&gt;If your company wants to enter the world of fintech, you need a programming language that has high performance, easy scalability and maturity. The technical stack you choose must also have ready-made solutions and many libraries to get back to it. This allows Python and fintech to have a good relationship.&lt;/p&gt;

&lt;p&gt;Advantages of using Python for fintech&lt;br&gt;
Hedge Funds and the investment banking industry have long decided that Python is an ideal choice for fintech because it meets many of their very specific needs:&lt;/p&gt;

&lt;p&gt;Creating risk management and trading platforms;&lt;br&gt;
Solve the rate problem a bit;&lt;br&gt;
Adjust information, adaptation and data analysis using the abundance of Python libraries.&lt;br&gt;
Why choose Python for your fintech software product?&lt;br&gt;
Fintech belongs to Python for a variety of reasons:&lt;/p&gt;

&lt;p&gt;Clean syntax: Python code is very easy to understand because it looks like real English. This allows developers to learn it quickly and master it in a short amount of time.&lt;br&gt;
Fast for the market: Python is a dynamic language and progresses faster than static languages ​​like Java. When writing in Python, you need less code, which in turn allows for faster deployment.&lt;br&gt;
Useful Libraries: Python serves a wide range of purposes with a wide range of libraries. Many of these are great for fintech and finance.&lt;br&gt;
Do you need an algorithmic trading library? Try pyalgotrade. A library for scientific and technical calculations? There is SciPy. What about the little economy? Check quantecon.py. Any questions you have are answered in Python.&lt;/p&gt;

&lt;p&gt;The last word&lt;br&gt;
Python programs are numerous and have many benefits. Great for many other things like web development, IoT, machine learning, startups and fintech. We have discussed in detail why Python is suitable for all of these purposes. However, a quick recap says:&lt;/p&gt;

&lt;p&gt;Due to its readability and ease of use, Python allows you to optimize your development resources by writing faster code.&lt;br&gt;
Python has a clear and simple syntax that allows you to easily browse your code.&lt;br&gt;
Python gives you ready-made and tested frameworks and libraries instead of building everything you need from scratch;&lt;br&gt;
Python offers extensive support for a variety of tutorials and guides as well as a strong and thriving community of enthusiasts.&lt;br&gt;
Python is used by tech giants like Google, YouTube or Reddit, so if they trusted Python, there's no reason why you shouldn't trust it.&lt;/p&gt;

</description>
      <category>php</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Live Virtual Career Prep Events to Help You Get Your First Dev Job</title>
      <author>Lane Wagner</author>
      <pubDate>Tue, 28 Dec 2021 01:13:55 +0000</pubDate>
      <link>https://dev.to/wagslane/live-virtual-career-prep-events-to-help-you-get-your-first-dev-job-2gji</link>
      <guid>https://dev.to/wagslane/live-virtual-career-prep-events-to-help-you-get-your-first-dev-job-2gji</guid>
      <description>&lt;p&gt;Over on the Qvault community Discord server we're starting a new initiative; we're doing &lt;em&gt;free live events&lt;/em&gt; focused on getting you your first dev job!&lt;/p&gt;

&lt;p&gt;For background, I've been running &lt;a href="https://qvault.io"&gt;Qvault.io&lt;/a&gt; for over a year now, and while people are loving the courses, we've started offering more personalized help surrounding "first job" challenges, and our attendees are loving it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#im-hosting-these-free-educational-events-on-a-weekly-basis-now-and-id-love-to-see-you-at-them"&gt;
  &lt;/a&gt;
  I'm hosting these free educational events on a weekly basis now, and I'd love to see you at them!
&lt;/h2&gt;

&lt;p&gt;Tomorrow (Dec 28th), we'll be talking about how to write cleaner code through variable naming techniques. We've already done two resume workshops where you bring your resume and I help you improve it. I plan to do more events of both kinds in the coming weeks.&lt;/p&gt;

&lt;p&gt;Anyhow, like I mentioned, these events are totally free, so take advantage of this resource!&lt;/p&gt;

&lt;p&gt;A bit about me - I'm the head of engineering at a Bay Area startup, and have a passion for helping new devs find their first opportunities!&lt;/p&gt;

&lt;p&gt;Link to the event: &lt;a href="https://discord.gg/bkxvQ4Ct?event=923213296948113409"&gt;https://discord.gg/bkxvQ4Ct?event=923213296948113409&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>beginners</category>
      <category>android</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Top 5 Python Modules for Game development 2022</title>
      <author>Ashish Yadav</author>
      <pubDate>Tue, 28 Dec 2021 00:50:38 +0000</pubDate>
      <link>https://dev.to/expoashish/top-5-python-modules-for-game-development-2022-3351</link>
      <guid>https://dev.to/expoashish/top-5-python-modules-for-game-development-2022-3351</guid>
      <description>&lt;p&gt;In this blog we are going to see top 5 Python modules for game development in 2022. If you want to develop game using python then you can try these modules. If you like my post then follow me. Lets Start:-👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/top-5-python-frameworks-for-game.html"&gt;Top 5 Python Modules for Game development 2022&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/top-10-reasons-why-laravel-is-most.html"&gt;Top 10 Reasons Why Laravel Is The Most Popular PHP Framework&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/top-10-programming-languages-you-must.html"&gt;Top 10 Programming Languages You Must Know In 2022&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/10-best-free-blogging-sites-in-2022.html"&gt;Best Websites for Blogging&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#complete-roadmap-2022"&gt;
  &lt;/a&gt;
  Complete Roadmap 2022:-
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-python-programming.html"&gt;Python Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-machine-learning.html"&gt;Machine Learning Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-c-programming.html"&gt;C++ Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/java-complete-roadmap-2022.html"&gt;Java Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-data-structure.html"&gt;Data Structure Complete Roadmap 2022&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-laravel-tutorial-for-developer"&gt;
  &lt;/a&gt;
  Some Laravel Tutorial for developer:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/laravel-8-interview-questions-and.html"&gt;Laravel 8 Interview Questions and Answers in 2022 (Part #1)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/laravel-8-interview-questions-and_22.html"&gt;Laravel 8 Interview Questions and Answers in 2022 (Part #2)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/advance-laravel-8-interview-questions.html"&gt;Advance Laravel 8 Interview Questions and Answers 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/everything-about-laravel-8-composer.html"&gt;Everything About Laravel 8 Composer 2022 | Composer in Laravel 8&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/laravel-jetstream-vs-laravel-ui-vs.html"&gt;Laravel Jetstream vs Laravel ui  vs Breeze&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/top-10-reasons-why-laravel-is-most.html"&gt;Top 10 Reasons Why Laravel Is The Most Popular PHP Framework&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/speed-up-your-laravel-website-super-fast.html"&gt;Speed Up Your Laravel website Super Fast&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python-concept-and-projects"&gt;
  &lt;/a&gt;
  Python Concept and Projects:-
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/10-best-python-libraries-for-machine.html"&gt;10 Best Python Libraries For Machine Learning&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/07/alarm-clock-in-python-with-gui.html"&gt;Alarm Clock in Python with GUI&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/top-5-python-frameworks-for-game.html"&gt;Top 5 Python Frameworks for Game development 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/06/tic-tac-toe-game-using-pygame-in-python.html"&gt;Tic Tac Toe Game Using Pygame in Python&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/what-is-pykyra-in-python-programming.html"&gt;What is Pykyra in Python Programming?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thankyou for reading my blogs.&lt;/strong&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#my-website"&gt;
  &lt;/a&gt;
  My Website:
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/"&gt;CodexAshish&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>machinelearning</category>
      <category>gamedev</category>
      <category>programming</category>
    </item>
    <item>
      <title>100 Languages Speedrun: Episode 37: OCaml</title>
      <author>Tomasz Wegrzanowski</author>
      <pubDate>Mon, 27 Dec 2021 23:52:54 +0000</pubDate>
      <link>https://dev.to/taw/100-languages-speedrun-episode-37-ocaml-plo</link>
      <guid>https://dev.to/taw/100-languages-speedrun-episode-37-ocaml-plo</guid>
      <description>&lt;p&gt;OCaml is functional programming language with very weird static type system (once you get past the basics), and what's possibly the ugliest syntax of any major programming language. Double semicolons are only the start of it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hello-world"&gt;
  &lt;/a&gt;
  Hello, World!
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(* Hello, World! in OCaml *)
print_string "Hello, World!\n"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#multiple-statements"&gt;
  &lt;/a&gt;
  Multiple statements
&lt;/h3&gt;

&lt;p&gt;So far it wasn't bad. Let's try to define a function and call it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let ask_for_name () = (
  print_string "What's your name? ";
  read_line()
);;

print_string ("Hello, "^ask_for_name()^"!\n");;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$  ocaml name.ml
What's your name? Kitty
Hello, Kitty!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So that worked, but that syntax is quite awful. &lt;code&gt;;&lt;/code&gt; within an expression and &lt;code&gt;;;&lt;/code&gt; between expressions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fibonacci"&gt;
  &lt;/a&gt;
  Fibonacci
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let rec fib n =
  if n &amp;lt;= 2
    then 1
    else fib (n - 1) + fib (n - 2)
;;

for i = 1 to 20 do
  print_string("fib(" ^ (string_of_int(i)) ^ ")=" ^ (string_of_int(fib(i))) ^ "\n")
done;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's no string interpolation, and we need explicit type conversions. In OCaml we don't even do the usual (for verbose statically typed languages) "convert to X" - we need specifically "convert to X from Y" so it's twice as verbose.&lt;/p&gt;

&lt;p&gt;To define recursive function we need to specify &lt;code&gt;let rec&lt;/code&gt; instead of the usual &lt;code&gt;let&lt;/code&gt;, which is a stupid design decision a lot of functional languages make.&lt;/p&gt;

&lt;p&gt;Oh and I'm typing a few parentheses more than idiomatic OCaml code would use, as I think that's going to be more readable for non-OCaml developers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unicode"&gt;
  &lt;/a&gt;
  Unicode
&lt;/h3&gt;

&lt;p&gt;Not only OCaml has no string interpolation, it doesn't even have any equivalent of &lt;code&gt;console.log&lt;/code&gt;. Well, why don't we create our own!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;type printable =
    S of string
  | I of int
;;

let printable_to_string = function
    S s -&amp;gt; s
  | I i -&amp;gt; string_of_int i
;;

let rec string_join sep = function
    [] -&amp;gt; ""
  | [s] -&amp;gt; s
  | (s::ss) -&amp;gt; s ^ sep ^ (string_join sep ss)
;;

let console_log list =
  print_string ((string_join " " (List.map printable_to_string list)) ^ "\n")
;;

console_log [(S "Length of [1; 2; 3] is "); (I (List.length [1; 2; 3]))];;
console_log [(S "Length of \"Hello\" is"); (I (String.length "Hello"))];;
console_log [(S "Length of \"Żółw\" is"); (I (String.length "Żółw"))];;
console_log [(S "Length of \"💩\" is"); (I (String.length "💩"))];;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result is completely wrong of course:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ocaml unicode.ml
Length of [1; 2; 3] is  3
Length of "Hello" is 5
Length of "Żółw" is 7
Length of "💩" is 4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But first, what the hell is even going on here!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OCaml doesn't have any "polymorphic" functions that would accept multiple types - every function has just one type. So &lt;code&gt;List.length&lt;/code&gt; for length of a list, &lt;code&gt;String.length&lt;/code&gt; for length of a string, and so on. There are no ways around it.&lt;/li&gt;
&lt;li&gt;There's no &lt;code&gt;String.join&lt;/code&gt;, but that's not too hard to write on our own. Pattern matching is pretty decent.&lt;/li&gt;
&lt;li&gt;We can define custom data type that's &lt;code&gt;S string&lt;/code&gt; or &lt;code&gt;I int&lt;/code&gt;, then we just need to pass. By the way these names generally need to be unique everywhere, so you can't really reuse it in some different interface which would take &lt;code&gt;I int | F float&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;once we wrap everything in the right type wrapper, we can send it to our &lt;code&gt;console_log&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this much pain for such a simple thing, does it get easier for more complex code? It does not, it gets a lot worse.&lt;/p&gt;

&lt;p&gt;OCaml has a few outs. It has some (atrocious) macro functionality, which allows &lt;code&gt;Printf.printf&lt;/code&gt; (with static template only). And it has "polymorphic variants", which at least let you reuse those wrappers, so with a lot of extra explicit type declarations you can have one function take &lt;code&gt;S | I&lt;/code&gt; and another take &lt;code&gt;I | F&lt;/code&gt;. At least that's the idea, it runs into a lot of problems in practice.&lt;/p&gt;

&lt;p&gt;Oh and you might have noticed that OCaml has no idea what Unicode even is. All the answers were wrong.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fizzbuzz"&gt;
  &lt;/a&gt;
  FizzBuzz
&lt;/h3&gt;

&lt;p&gt;No new issues here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let fizzbuzz i =
  if i mod 15 == 0
    then "FizzBuzz"
    else if i mod 5 == 0
      then "Buzz"
      else if i mod 3 == 0
        then "Fizz"
        else string_of_int i
;;

for i = 1 to 100 do
  print_string (fizzbuzz(i) ^ "\n")
done;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#pythagorean-theorem"&gt;
  &lt;/a&gt;
  Pythagorean theorem
&lt;/h3&gt;

&lt;p&gt;I keep saying that in OCaml every function must have unique input types, and there are no polymorphic functions at all. A small note on terminology, as "polymorphic" refers to two different things. Either to functions like &lt;code&gt;List.length&lt;/code&gt; which can work on list of any type because it doesn't look inside (which I'd just call "generic functions", sometimes they're called "parametric polymorphism"). Or to functions like &lt;code&gt;length&lt;/code&gt; which could work with multiple container types (sometimes called "ad-hoc polymorphism" - but that's what most people call "polymorphic"). OCaml has generic function, but no ad-hoc polymorphism, and it's extremely committed to that.&lt;/p&gt;

&lt;p&gt;How committed? Well, you can't even &lt;code&gt;+&lt;/code&gt; two floats.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let a = 3.0;;
let b = 4.0;;
let c = Float.sqrt(a *. a +. b *. b);;

Printf.printf "%f^2 + %f^2 = %f^2\n" a b c;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Every type has its own &lt;code&gt;+&lt;/code&gt;, and &lt;code&gt;*&lt;/code&gt;, and so on.&lt;/p&gt;

&lt;p&gt;The only tiny exception to this is that &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; etc are polymorphic. Of course types on both sides must be the same.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Printf.printf&lt;/code&gt; macro saves us from a lot of nasty code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#custom-operators"&gt;
  &lt;/a&gt;
  Custom operators
&lt;/h3&gt;

&lt;p&gt;One consequence of needing so many different operator variants is that OCaml lets us (and pretty much forces us to) define our own operators. For example this defines &lt;code&gt;+&amp;amp;&lt;/code&gt; as addition of two 2D points:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;type point = {x: float; y: float};;

let (+&amp;amp;) a b = {x=a.x +. b.x; y = a.y +. b.y};;

let a = {x=1.0; y=2.0};;
let b = {x=2.0; y=5.0};;
let c = a +&amp;amp; b;;

Printf.printf "&amp;lt;%f,%f&amp;gt;\n" c.x c.y;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Of course we cannot do anything polymorphic here. 2D points of ints, or 3D points of floats, or anything like that would all need their own symbols.&lt;/p&gt;

&lt;p&gt;How operator starts is used for precedence, so &lt;code&gt;a +&amp;amp; b *&amp;amp; c&lt;/code&gt; would be treated as &lt;code&gt;a +&amp;amp; (b *&amp;amp; c)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It's better than having to do &lt;code&gt;Point2D.add&lt;/code&gt; etc., but it's still miserable compared to just having &lt;code&gt;+&lt;/code&gt; work on everything, like it works in most other languages.&lt;/p&gt;

&lt;p&gt;Oh and OCaml does not love if you reuse field names between different types. So &lt;code&gt;type point3 = {x: float; y: float; z: float};;&lt;/code&gt; isn't forbidden, but it causes issues and would require a lot of manual type annotations.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#should-you-use-ocaml"&gt;
  &lt;/a&gt;
  Should you use OCaml?
&lt;/h3&gt;

&lt;p&gt;No. And I'm saying it as someone who's done a lot of OCaml back in the days.&lt;/p&gt;

&lt;p&gt;OCaml offered a mix of features that was somewhat appealing a few decades ago - it's a functional garbage-collected language, statically compiled to speeds comparable to Java, with easy to understand eager semantics (no laziness and monads), and syntax which while godawful at least doesn't have millions of parentheses. All alternatives back then were either not really functional (C, Java), too parenthesized (Lisp), semantically too weird (Haskell), or too slow (Lisp, Ruby; generally Haskell too unless you put a lot of effort to work around its laziness).&lt;/p&gt;

&lt;p&gt;Nowadays most languages have sufficient functional features (even totally non-functional ones like Kotlin), there's a plethora of LLVM-based languages that are fast enough, so OCaml's niche disappeared - and it was a small niche to begin with.&lt;/p&gt;

&lt;p&gt;OCaml is also in weird situation where a lot of users simply don't use the standard "standard library" and instead replace it with their own. And there's multiple such efforts. So the thing they're using, is it even OCaml? Well, it can't fix the core language issues.&lt;/p&gt;

&lt;p&gt;OCaml has far too many quirks, such atrocious syntax, and lacks convenience functions provided by pretty much every language these days. There's no payoff for putting up with all that. Unless you want a job at Jane Street Capital I guess (who have their own replacement standard library too).&lt;/p&gt;

&lt;p&gt;Fully committed "Functional Programming" didn't get far, but then neither did fully committed "Object Oriented Programming" (that's just Smalltalk and Ruby). But half-assed functional programming just as half-assed OOP is everywhere these days, and it's good enough. Either pick a language that does good-enough functional programming (which is most of them), or accept the sacrifices to do something like Ruby, Haskell, Clojure, or Racket, they're all much less painful than OCaml's.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/taw/100-languages-speedrun"&gt;All code examples for the series will be in this repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/taw/100-languages-speedrun/tree/master/episode-37-ocaml"&gt;Code for the OCaml episode is available here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>ocaml</category>
    </item>
    <item>
      <title>Stop Scrolling, Do Something Useful Instead - JS Scroll Event</title>
      <author>MkDay</author>
      <pubDate>Mon, 27 Dec 2021 23:52:17 +0000</pubDate>
      <link>https://dev.to/mkday/stop-scrolling-do-something-useful-instead-js-scroll-event-2n9b</link>
      <guid>https://dev.to/mkday/stop-scrolling-do-something-useful-instead-js-scroll-event-2n9b</guid>
      <description>&lt;p&gt;You've probably scrolled down through your DEV feed, found this article, stopped and, immediately realized you were scrolling for a while without even thinking about it. Right?&lt;/p&gt;

&lt;p&gt;So welcome here then!&lt;/p&gt;

&lt;p&gt;We're not here to fight upon &lt;strong&gt;&lt;em&gt;scrolling all day is a good or bad habit&lt;/em&gt;&lt;/strong&gt; but, as developers, it is our job to provide a good experience with scrolling itself. Also, it is crucial when it comes to user experience.&lt;/p&gt;

&lt;p&gt;So let's scroll down to the topic.&lt;/p&gt;

&lt;p&gt;The followings are the parts we're going to cover in this article:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Set scrolling.&lt;/li&gt;
&lt;li&gt;Check the page/element has a scrollbar.&lt;/li&gt;
&lt;li&gt;Detect the scrolling event.&lt;/li&gt;
&lt;li&gt;Manipulate scrolling event.

&lt;ol&gt;
&lt;li&gt;Keep the focus to the bottom of the page/ element every time.&lt;/li&gt;
&lt;li&gt;Scroll to the top/bottom using &lt;em&gt;scroll()&lt;/em&gt; and &lt;em&gt;scrollTo()&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Scroll the page/element in a specific amount at a time using &lt;em&gt;scrollBy()&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Align the page/element to the start, center, or end using &lt;em&gt;scrollIntoView()&lt;/em&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;Get the scrolling direction.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;window&lt;/em&gt; vs. &lt;em&gt;documentElement&lt;/em&gt; vs. &lt;em&gt;Element&lt;/em&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Also, the followings are the concepts that we're going to discuss along with the examples in brief:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;scrollHeight&lt;/li&gt;
&lt;li&gt;scrollTop&lt;/li&gt;
&lt;li&gt;clientHeight&lt;/li&gt;
&lt;li&gt;scroll() &amp;amp; scrollTo()&lt;/li&gt;
&lt;li&gt;scrollBy()&lt;/li&gt;
&lt;li&gt;scrollIntoView()&lt;/li&gt;
&lt;li&gt;scrollY&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Okay. Here is a brief about the HTML and CSS we use to demonstrate the magic of the scroll event.&lt;/p&gt;

&lt;p&gt;In the HTML, we have four &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with the same content and, each &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; has the same structure as follows. The page and the contents of each &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; are long enough to make them scrollable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

   Some long dummy paragraphs

  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, there's a &lt;code&gt;&amp;lt;button id="btn"&amp;gt;&lt;/code&gt; to manipulate some scroll events that we will discuss later.&lt;/p&gt;

&lt;p&gt;In the CSS, when we specify some &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; for &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements, you can see that the contents of each &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; are not fit in their containers. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-set-scrolling"&gt;
  &lt;/a&gt;
  1. Set Scrolling
&lt;/h3&gt;

&lt;p&gt;To fix the above problem, we can set the below line of code in the CSS. It will get all the content into its container and allow the user to scroll down to see overflowed content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;
&lt;span class="c"&gt;/* to scroll the page vertically */&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;overflow-y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;scroll&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* to scroll an element vertically */&lt;/span&gt;
&lt;span class="nf"&gt;#container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;overflow-y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;scroll&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Here, we use &lt;code&gt;overflow-y&lt;/code&gt; to demonstrate only the vertical scrolling. And you can learn more about CSS &lt;code&gt;overflow&lt;/code&gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/overflow"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/MkDay/embed/abLVxao?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Well, now we are all set to take control of the scroll event. So let's &lt;em&gt;scroll down&lt;/em&gt; to the JavaScript code.&lt;/p&gt;

&lt;p&gt;In JavaScript, we select all the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements using their class name and select the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; using its id.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;container&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;btn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#btn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-check-the-pageelement-has-a-scrollbar"&gt;
  &lt;/a&gt;
  2. Check the page/element has a scrollbar
&lt;/h3&gt;

&lt;p&gt;As we have seen, the scrollbar already appears in the browser window and each &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;Also, we can prove it in our code using the following two properties as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1) &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight"&gt;Element.scrollHeight&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it gives the full height of an element (visible height + height of the overflowed content) &lt;/li&gt;
&lt;li&gt;includes padding, height of pseudo-elements (if any).&lt;/li&gt;
&lt;li&gt;doesn't include margins, borders, horizontal scrollbar.&lt;/li&gt;
&lt;li&gt;a read-only property (cannot set values to it). &lt;/li&gt;
&lt;li&gt;returns an integer value.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2) &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight"&gt;Element.clientHeight&lt;/a&gt;:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;which gives the visible height of an element.&lt;/li&gt;
&lt;li&gt;includes padding, height of pseudo-elements (if any).&lt;/li&gt;
&lt;li&gt;doesn't include margins, borders, horizontal scrollbar.&lt;/li&gt;
&lt;li&gt;a read-only property  (cannot set values to it).&lt;/li&gt;
&lt;li&gt;returns an integer value.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So if there's no vertical scrollbar, &lt;code&gt;Element.scrollHeight&lt;/code&gt; equal to &lt;code&gt;Element.clientHeight&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// check the page has a scrollbar&lt;/span&gt;

&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollHeight&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientHeight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;page has a scrollbar!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;page does not have a scrollbar!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// check the first container has a scrollbar&lt;/span&gt;

&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;scrollHeight&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;clientHeight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1st container has a scrollbar!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1st container does not have a scrollbar!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-detect-the-scrolling-event"&gt;
  &lt;/a&gt;
  3. Detect the scrolling event
&lt;/h3&gt;

&lt;p&gt;Attaching an &lt;em&gt;EventListener&lt;/em&gt; to the page/ element we can detect the scroll event like below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// detect page scrolling&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;scroll&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;page is scrolled!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;


&lt;span class="c1"&gt;// detect scrolling of the first container&lt;/span&gt;

&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;scroll&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1st container is scrolled!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-manipulate-scrolling-event"&gt;
  &lt;/a&gt;
  4. Manipulate scrolling event
&lt;/h3&gt;

&lt;p&gt;Now we know how to check if the page/ element has a scrollbar and, we know how to detect the scroll event using &lt;code&gt;EventListener&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But that isn't the end of the world. We can manipulate it as well. Let's see how.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#41-keep-the-focus-to-the-bottom-of-the-page-element-every-time"&gt;
  &lt;/a&gt;
  (4.1) Keep the focus to the bottom of the page/ element every time
&lt;/h4&gt;

&lt;p&gt;We can always display the bottom of the page/element even when adding new content to the page/ element dynamically using the following method.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Element.scrollTop = Element.scrollHeight&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;load&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// show bottom of the page when the page is loading&lt;/span&gt;

  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollTop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


  &lt;span class="c1"&gt;// show bottom of the 1st container when the page is loading&lt;/span&gt;

  &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;scrollTop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;scrollHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is the brief of the &lt;code&gt;Element.scrollTop&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop"&gt;Element.scrollTop&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it gives the number of pixels that the content of an element has scrolled vertically.&lt;/li&gt;
&lt;li&gt;Element.scrollTop = distance between element's top and top of the visible content. &lt;/li&gt;
&lt;li&gt;if there's no vertical scrollbar, &lt;em&gt;Element.scrollTop = 0&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;it could be a value from 0 to maximum of an element's height inclusively.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#42-scroll-to-the-topbottomcenter-using-scroll-or-scrollto"&gt;
  &lt;/a&gt;
  (4.2) Scroll to the top/bottom/center using &lt;em&gt;scroll()&lt;/em&gt; or &lt;em&gt;scrollTo()&lt;/em&gt;
&lt;/h4&gt;

&lt;p&gt;The two methods that we can use here are &lt;code&gt;scroll()&lt;/code&gt; &amp;amp; &lt;code&gt;scrollTo()&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll"&gt;Element.scroll()&lt;/a&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTo"&gt;Element.scrollTo()&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;scrolls the document/ element to a particular set of coordinates.&lt;/li&gt;
&lt;li&gt;both are effectively same.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Syntax: 

Element.scroll(x-coord, y-coord)
Element.scroll(options)

Element.scrollTo(x-coord, y-coord)
Element.scrollTo(options)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;x-coord&lt;/code&gt;: the pixel along the X-axis of the document/ element you want to display in the upper-left.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;y-coord&lt;/code&gt;: the pixel along the Y-axis of the document/ element you want to display in the upper-left.&lt;/li&gt;
&lt;li&gt;options:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;top&lt;/code&gt;: number of pixels to scroll along the Y-axis.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;left&lt;/code&gt;: number of pixels to scroll along the X-axis.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;behavior&lt;/code&gt;: smooth/ auto/ instant&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The code below demonstrates the way of &lt;code&gt;scrollTo()&lt;/code&gt; method works.&lt;/p&gt;

&lt;p&gt;In this case, we talk about only how to scroll to the top and center.&lt;/p&gt;

&lt;p&gt;Here is how the code works.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;scroll to the top:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if the user clicks the button, it checks if the user has scrolled the page/ element (so the &lt;code&gt;scrollTop&lt;/code&gt; won't be zero)&lt;/li&gt;
&lt;li&gt;if so, it will scroll the page/element back to the top.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
 &lt;span class="cm"&gt;/* ======= The page ======= */&lt;/span&gt;


&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// scroll to top &lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollTop&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollTo&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;behavior&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;smooth&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;



&lt;span class="cm"&gt;/* ======The 1st container ======== */&lt;/span&gt;


&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// scroll to top &lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;scrollTop&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;scrollTo&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;behavior&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;smooth&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;scroll to the center:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if the user clicks the button, it scrolls to the center of the page/ element.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
 &lt;span class="cm"&gt;/* ======= The page ======= */&lt;/span&gt;


&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// scroll to the center&lt;/span&gt;

  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollTo&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollHeight&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;behavior&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;smooth&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;



&lt;span class="cm"&gt;/* ======The 1st container ======== */&lt;/span&gt;


&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;


  &lt;span class="c1"&gt;// scroll to the center&lt;/span&gt;

  &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;scrollTo&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;scrollHeight&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;behavior&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;smooth&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#43-scroll-the-pageelement-by-specific-amount-at-a-time-using-scrollby"&gt;
  &lt;/a&gt;
  (4.3) Scroll the page/element by specific amount at a time using &lt;em&gt;scrollBy()&lt;/em&gt;
&lt;/h4&gt;

&lt;p&gt;Using the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollBy"&gt;scrollBy()&lt;/a&gt; method we can scroll the document/ element by specific amount at a time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Syntax:

Element.scrollBy(x-coord, y-coord)
Element.scrollBy(options)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;x-coord&lt;/code&gt;: pixel value you want to scroll by horizontally.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;y-coord&lt;/code&gt;: pixel value you want to scroll by vertically.&lt;/li&gt;
&lt;li&gt;options:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;top&lt;/code&gt;: number of pixels along the Y-axis to scroll by.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;left&lt;/code&gt;: number of pixels along the X-axis to scroll by.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;behavior&lt;/code&gt;: smooth/ auto/ instant.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following code shows how to scroll down the document/ element by 100px each time the user clicks the button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// scroll the page to the bottom by 100px at a time&lt;/span&gt;

  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollBy&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;behavior&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;smooth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;


  &lt;span class="c1"&gt;// scroll the 1st container to the bottom by 100px at a time&lt;/span&gt;

  &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;scrollBy&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;behavior&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;smooth&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#44-align-the-pageelement-to-the-start-center-or-end-using-scrollintoview"&gt;
  &lt;/a&gt;
  (4.4) Align the page/element to the start, center or end using &lt;em&gt;scrollIntoView()&lt;/em&gt;
&lt;/h4&gt;

&lt;p&gt;The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView"&gt;scrollIntoView()&lt;/a&gt; method can take two types of parameters and, both are optional.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Syntax:

Element.scrollIntoView();

Element.scrollIntoView(alignToTop); // Boolean parameter

Element.scrollIntoView(scrollIntoViewOptions); // Object parameter 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;alignToTop:&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;It's a boolean value.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if &lt;code&gt;true&lt;/code&gt;: the top of an element will be aligned to the top of the visible area of the scrollable ancestor (Default).&lt;/li&gt;
&lt;li&gt;if &lt;code&gt;false&lt;/code&gt;: the bottom of an element will be aligned to the bottom of the visible area of the scrollable ancestor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;scrollIntoViewOptions:&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;It's an object with three optional properties.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;behavior&lt;/code&gt;: smooth/ auto (Default: auto)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;block&lt;/code&gt;: defines vertical alignment (start/ center/ end/ nearest) Default: start.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;inline&lt;/code&gt;: defines horizontal alignment (start/ center/ end/ nearest) Default: nearest.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;scrollIntoView({block: "start", inline: "nearest"})&lt;/code&gt; corresponds to &lt;code&gt;true&lt;/code&gt; value.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;scrollIntoView({block: "end", inline: "nearest"})&lt;/code&gt; corresponds to &lt;code&gt;false&lt;/code&gt; value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// align the page to the end &lt;/span&gt;

  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollIntoView&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;behavior&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;smooth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;block&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;end&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="c1"&gt;// align the 1st container to the center&lt;/span&gt;

  &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;scrollIntoView&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;behavior&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;smooth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;block&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-get-the-scrolling-direction"&gt;
  &lt;/a&gt;
  5. Get the scrolling direction
&lt;/h3&gt;

&lt;p&gt;Here, we get the direction of the page/ element that the user is scrolling.&lt;/p&gt;

&lt;p&gt;We have a variable called &lt;code&gt;prevScrollY&lt;/code&gt; to store the number of pixels that the user previously scrolled the page/ element vertically.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If (the current number of pixels &amp;gt; the previous number of pixels) &lt;br&gt;
Then the page/ element has scrolled downward. Otherwise upwards.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="cm"&gt;/* The page: */&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;prevScrollY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;scroll&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollY&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;prevScrollY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;page is scrolling downwards&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;page is scrolling upwards&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;prevScrollY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;


&lt;span class="cm"&gt;/* The 1st container: */&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;prevScrollY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;scrollTop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;scroll&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;scrollTop&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;prevScrollY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1st container is scrolling downwards&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1st container is scrolling upwards&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;prevScrollY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;scrollTop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-window-vs-documentelement-vs-element"&gt;
  &lt;/a&gt;
  6. &lt;em&gt;window&lt;/em&gt; vs. &lt;em&gt;documentElement&lt;/em&gt; vs. &lt;em&gt;Element&lt;/em&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window"&gt;Window&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/documentElement"&gt;documentElement&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element"&gt;Element&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While reading this article, you may wonder about some weirdnesses of the above keywords. For instance, we attached the &lt;code&gt;EventListener&lt;/code&gt; to the &lt;code&gt;window&lt;/code&gt; but, we don't use something like &lt;code&gt;window.scrollHeight&lt;/code&gt; or &lt;code&gt;window.scrollTop&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;So then, this is the right section to clear them out. Here are some cases where they have some differences from each other.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(i) Getting the distance that the document is currently scrolled vertically for the window and the element&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this case, the &lt;code&gt;Window&lt;/code&gt; interface has two properties and, both give the distance that the &lt;code&gt;window&lt;/code&gt; has scrolled. One is newer than the other.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;pageYOffset&lt;/code&gt; (older)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;scrollY&lt;/code&gt; (newer)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the meantime, &lt;code&gt;Element&lt;/code&gt; has &lt;code&gt;scrollTop&lt;/code&gt; to do the job.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(ii) &lt;em&gt;window.onscroll&lt;/em&gt; and *document.body.onscroll&lt;/strong&gt;*&lt;/p&gt;

&lt;p&gt;These two are interchangeable, which means if one of them gets changed, the other one inherits those changes as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onscroll&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;scrolled!!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onscroll&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onscroll&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;(iii) manipulate scroll event of the window&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To scroll an &lt;code&gt;element&lt;/code&gt; by a given amount of pixels vertically, we can use,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollTop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But for the window, we cannot use &lt;code&gt;window.scrollY&lt;/code&gt; since it is a read-only property. &lt;/p&gt;

&lt;p&gt;Also, we cannot use something like &lt;em&gt;document.body.scrollTop&lt;/em&gt; either. Because the scrollbar that the browser renders for the document belongs to the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element, NOT to the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// these both ways aren't valid&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;load&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// window.scrollY = 2500;&lt;/span&gt;
  &lt;span class="c1"&gt;// document.body.scrollTop = 2500;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, &lt;code&gt;documentElement&lt;/code&gt; comes into the scene. It returns the root element of the document. In this case, it is &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// correct way to manipulate scroll event for the window&lt;/span&gt;

 &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;load&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollTop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;(iv) &lt;em&gt;window.innerHeight&lt;/em&gt; and&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;document.documentElement.clientHeight&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(a) &lt;em&gt;window.innerHeight&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it returns interior height of the window in pixels.&lt;/li&gt;
&lt;li&gt;it includes height of the horizontal scrollbar (if present)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(b) &lt;em&gt;document.documentElement.clientHeight&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it returns visible height of the element.&lt;/li&gt;
&lt;li&gt;includes padding, height of pseudo elements (if any).&lt;/li&gt;
&lt;li&gt;doesn't include margins, borders, horizontal scrollbar.&lt;/li&gt;
&lt;li&gt;a read-only property  (cannot set values to it).&lt;/li&gt;
&lt;li&gt;returns an integer value.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So it is a good idea to choose &lt;code&gt;document.documentElement&lt;/code&gt; to get the visible height of the window.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(v) why &lt;em&gt;window.onscroll&lt;/em&gt; not &lt;em&gt;document.documentElement.onscroll&lt;/em&gt;?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another weird thing is we cannot attach the &lt;code&gt;onscroll&lt;/code&gt; event to the &lt;code&gt;documentElement&lt;/code&gt; even it is inheriting the scrollbar. We have to use &lt;code&gt;window.onscroll&lt;/code&gt; in this case.&lt;/p&gt;

&lt;p&gt;Here is the main takeaway of these three things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;to get the scrolled distance: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;for the document: &lt;code&gt;window.scrollX&lt;/code&gt; (or &lt;code&gt;window.pageXOffset&lt;/code&gt;) &amp;amp; &lt;code&gt;window.scrollY&lt;/code&gt; (or &lt;code&gt;window.pageYOffset&lt;/code&gt;) &lt;/li&gt;
&lt;li&gt;for the element: &lt;code&gt;element.scrollLeft&lt;/code&gt; &amp;amp; &lt;code&gt;element.scrollTop&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;to set the scroll position:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;document.documentElement.scrollLeft&lt;/code&gt; &amp;amp; &lt;code&gt;document.documentElement.scrollTop&lt;/code&gt; works.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;window.scrollX&lt;/code&gt; &amp;amp; &lt;code&gt;window.scrollY&lt;/code&gt; can't be used.&lt;/li&gt;
&lt;li&gt;document.body.scrollLeft &amp;amp; document.body.scrollTop can't be used.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;code&gt;onscroll&lt;/code&gt; event: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;window.onscroll&lt;/code&gt; and &lt;code&gt;document.body.onscroll&lt;/code&gt; works.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;window.onscroll&lt;/code&gt; and &lt;code&gt;document.body.onscroll&lt;/code&gt; are interchangeable.&lt;/li&gt;
&lt;li&gt;but document.documentElement.onscroll doesn't work.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Okay, we reached the end of the article. Now we know a bit about the scroll event and how to manipulate it. &lt;/p&gt;

&lt;p&gt;So you may feel like scrolling isn't so bad as they say, and yes, you can say that it is the smartest feature that makes the web awesome.&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Image Credits: Mike Juarez on Unsplash&lt;/em&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;PS: Thanks for scrolling down so far to the end and, if you enjoyed this article, you can support me &lt;a href="https://ko-fi.com/mkdaycode"&gt;@ko-fi&lt;/a&gt;. I always appreciate your support. It encourages me to keep going.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ko-fi.com/mkdaycode"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1lsZOJ8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.ko-fi.com/cdn/kofi2.png%3Fv%3D3" alt="image_description" width="286" height="73"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>My thoughts on learning Web in 2021</title>
      <author>Aibol Kussain</author>
      <pubDate>Mon, 27 Dec 2021 23:04:24 +0000</pubDate>
      <link>https://dev.to/aibolik/my-thoughts-on-learning-web-in-2021-4260</link>
      <guid>https://dev.to/aibolik/my-thoughts-on-learning-web-in-2021-4260</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Note: this post is originally written in &lt;a href="https://aibolik.github.io/blog/my-thoughts-on-learning-web-in-2021"&gt;my personal blog&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hello, people! You probably already saw or read one of those articles like “Web developer roadmap in 2021”, “How to become a web developer”, etc. So, I also wanted to share my perspective on this topic that might be useful to some people who are at the start of their exciting journey or open some discussion with others.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8e8ShWOC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1024/1%2ANfqoLP-mVAHW6QBIBHp7BQ.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8e8ShWOC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1024/1%2ANfqoLP-mVAHW6QBIBHp7BQ.jpeg" alt="" width="880" height="880"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Learning Web in 2021 is not a straight line (Photo by Mark König on Unsplash)&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h3&gt;

&lt;p&gt;I want to start with the most basic and the important, as well as, sometimes, overlooked part of the Web — HTML. Why overlooked? Thanks to some great JavaScript frameworks, like React, web developers frequently deal with “components” rather than HTML elements. However, it is important to understand &lt;strong&gt;semantic HTML&lt;/strong&gt; and &lt;strong&gt;accessibility&lt;/strong&gt; and many more topics. I have to admit that I kickstarted my Web Developer work with React and had to catch up with many important concepts of Web later on. Let’s go over some main of the topics here(in my opinion).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#semantic-html-and-accessibility"&gt;
  &lt;/a&gt;
  Semantic HTML and Accessibility
&lt;/h4&gt;

&lt;p&gt;The &lt;a href="https://web.dev/accessible/"&gt;simple idea&lt;/a&gt; is to build a site that works for all of your users. By saying “all of your users” I mean: people with disabilities, people with different internet bandwidth, color blindness issues, device issues, or someone who just doesn’t want to(or can’t) use a mouse/keyboard. Some pretty obvious things to start with are using semantic HTML elements, such as button, input, select, nav, and more. In addition to them, you should be familiar with aria-* and role attributes, which can add additional context for users with screen readers. And even before starting the development, you can talk with your designer to use contrasting colors and also introduce dark/alternative color schema, if it is worth it. (it is a bit outside of the HTML topic, but still worth mentioning).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When I was around 10, my mouse was broken on Pentium II Windows 98 PC. Guess what I had to use to be able to navigate through my computer?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#know-your-head-tags"&gt;
  &lt;/a&gt;
  Know your “head” tags
&lt;/h4&gt;

&lt;p&gt;As the subtitle suggests, you should be familiar with what you put on your head tag. This and using the right semantic HTML elements can also affect the SEO of your website. Some meta tags can provide additional information about your website(like title, description, data for a Twitter card) and some tags can optimize your website. With the link tag, you can hint your browser to do some work before accessing some resources(prefetch, preconnect). Take some time to get familiar with them and feel free to take these low-hanging fruits for your website optimization.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#know-how-your-elements-look-and-interact"&gt;
  &lt;/a&gt;
  Know how your elements look and interact
&lt;/h4&gt;

&lt;p&gt;Other than knowing your “head” tags you should be quite familiar with your main “body” tags. Especially, what do they imply and how they interact. For example, consider these:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the default styling of elements(margins on paragraph, font size, and margins on h1-h6 tags, styling of anchors)&lt;/li&gt;
&lt;li&gt;interactive elements(those are accessible with TAB, like an anchor, button, etc.) and how to make one yourself&lt;/li&gt;
&lt;li&gt;other accessibility features, like outlined button&lt;/li&gt;
&lt;li&gt;transition when clicking on the anchor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are kinda basic, but you might also want to familiarize yourself with more HTML5 elements, and maybe some new elements like dialog those let you create modals out of the box.&lt;/p&gt;

&lt;p&gt;I believe there are many topics that I left not mentioning here about HTML, but I wouldn’t be able to put everything in this article. So, if I missed something important, please feel free to leave a comment or mention it tagging me on Twitter(&lt;a href="https://twitter.com/aibolik_"&gt;@aibolik_&lt;/a&gt;).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h3&gt;

&lt;p&gt;When it comes to CSS, today, we already have different tools to pre- and post-process our “style code” to make our lives easier. But the essential knowledge of CSS remains the key. These are the basic concepts related to laying out elements and styling of them: box-model, positioning, responsive styles, different laying out strategies(flex, grid), transform and transition of properties, and more. But if we go a bit further, it is worth exploring these topics too.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#logical-properties"&gt;
  &lt;/a&gt;
  Logical properties
&lt;/h4&gt;

&lt;p&gt;These might not be relevant to the project you are working on, but if your website supports multiple locales, which include right-to-left and/or vertical top-down layouts, you should be familiar with these properties. Shortly, these properties &lt;a href="https://web.dev/logical-property-shorthands/"&gt;adapt to the layout&lt;/a&gt; of the page. You don’t explicitly set right/left/top/bottom spacing, you set start/end spacing and the browser will take care of setting the exact side for you.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Alternatively, if you are working on an open-source (popular) components library, chances are that your design would also be used in websites, where they need &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/direction"&gt;“rtl”&lt;/a&gt; support.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#css-variables"&gt;
  &lt;/a&gt;
  CSS variables
&lt;/h4&gt;

&lt;p&gt;When I first heard about CSS variables, the support for them was not good. However, these days all modern browsers support this feature. At first, some might think it is similar to variables in other CSS post-processors(like LESS or SASS), however, they possess more power than you thought. You can easily rewrite them for some selector, media query, or even with JavaScript(because they are still CSS properties). They are quite useful when building (several) &lt;a href="https://web.dev/building-a-color-scheme/"&gt;color schemas&lt;/a&gt;. But they are also useful for many different things, I saw people using them in very creative ways. It is worth checking out its capabilities.&lt;/p&gt;

&lt;p&gt;Again here, CSS is another big topic in the Web world. There are also topics like typography and fonts, selector naming conventions, many different CSS frameworks, CSS-in-JS, and more. I can not cover all of them in this article, but case by case, some might be more relevant than others, and for some topics, it is enough to just have a basic understanding of the principles.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h3&gt;

&lt;p&gt;Yet another big topic and I believe the one that is more over-hyped than the other 2 pillars of the Web(thanks again to JS frameworks). Since it is a full-blown programming language it is essential to understand how it works. In addition to how JavaScript works, for Web Developer, it is essential to understand how it works in a browser context. Some points to mention:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;interaction with DOM API&lt;/li&gt;
&lt;li&gt;event handling&lt;/li&gt;
&lt;li&gt;browser APIs(history, fetch, IntersectionObserver, storage APIs, and more)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://javascript.info/"&gt;and many many more topics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even if popular JavaScript frameworks give a real boost in Web Development, the core JavaScript knowledge is still very important. Even if you start very well with some JavaScript framework, at some point you might end up not understanding how some things function. I was in that shoe, and when I was interviewed for one project where essential JavaScript knowledge was important, I failed that interview. Immediately after that interview, I decided to level up my core JavaScript knowledge and discovered the &lt;a href="https://github.com/getify/You-Dont-Know-JS"&gt;“You don’t know JS”&lt;/a&gt; book series. It was a really good time investment and I highly recommend it for people who feel they have gaps in their JavaScript knowledge.&lt;/p&gt;

&lt;p&gt;This is a small portion of my thoughts regarding the Web topic. I hope to share more of my thoughts and learnings, so if you liked the content, feel free to &lt;a href="https://twitter.com/intent/follow?screen_name=aibolik_"&gt;follow me on Twitter&lt;/a&gt;, where I will share everything I write.&lt;/p&gt;

&lt;p&gt;Stay tuned and thanks for reading!&lt;/p&gt;

</description>
      <category>html</category>
      <category>web</category>
      <category>roadmaps</category>
      <category>learningwebdevelopment</category>
    </item>
    <item>
      <title>Caching with Nginx</title>
      <author>Christian Seki</author>
      <pubDate>Mon, 27 Dec 2021 22:42:15 +0000</pubDate>
      <link>https://dev.to/chseki/caching-with-nginx-2ob2</link>
      <guid>https://dev.to/chseki/caching-with-nginx-2ob2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#cache-is-your-friend-smile"&gt;
  &lt;/a&gt;
  Cache is your friend 😄
&lt;/h2&gt;

&lt;p&gt;A lot of performance issues can be improved using cache, there is a lot of tools out here but for this brief tutorial I'll choose the well-known Nginx.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup-computer"&gt;
  &lt;/a&gt;
  Setup 💻
&lt;/h2&gt;

&lt;p&gt;You can clone the branch &lt;code&gt;nginx-cache&lt;/code&gt; or follow this tutorial (I'll only cover the nginx stuff)&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/iamseki"&gt;
        iamseki
      &lt;/a&gt; / &lt;a href="https://github.com/iamseki/dev-to"&gt;
        dev-to
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Implementations of dev.to blog posts
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#app"&gt;
  &lt;/a&gt;
  App
&lt;/h3&gt;

&lt;p&gt;I'll use an app from &lt;a href="https://dev.to/chseki/load-test-with-javascript-1f64"&gt;previous post&lt;/a&gt; of mine, which calculates the nth fibonacci result given a number. The app it self is very simple and you can see it very small piece of code from the (repository)[&lt;a href="https://github.com/iamseki/dev-to"&gt;https://github.com/iamseki/dev-to&lt;/a&gt;] that I mentioned before.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nginx"&gt;
  &lt;/a&gt;
  Nginx
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;nginx/nginx.conf&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nginx"&gt;&lt;code&gt;&lt;span class="k"&gt;events&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;worker_connections&lt;/span&gt; &lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;http&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;proxy_cache_path&lt;/span&gt; &lt;span class="n"&gt;/tmp/nginx/cache&lt;/span&gt; &lt;span class="s"&gt;levels=1:2&lt;/span&gt; &lt;span class="s"&gt;keys_zone=fibo_cache:10m&lt;/span&gt; &lt;span class="s"&gt;inactive=60m&lt;/span&gt; &lt;span class="s"&gt;use_temp_path=off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="n"&gt;/fibonacci&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_cache&lt;/span&gt; &lt;span class="s"&gt;fibo_cache&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_cache_use_stale&lt;/span&gt; &lt;span class="s"&gt;error&lt;/span&gt; &lt;span class="s"&gt;timeout&lt;/span&gt; &lt;span class="s"&gt;http_500&lt;/span&gt; &lt;span class="s"&gt;http_502&lt;/span&gt; &lt;span class="s"&gt;http_503&lt;/span&gt; &lt;span class="s"&gt;http_504&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

      &lt;span class="kn"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;X-Proxy-Cache&lt;/span&gt; &lt;span class="nv"&gt;$upstream_cache_status&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

      &lt;span class="kn"&gt;proxy_pass&lt;/span&gt; &lt;span class="s"&gt;http://api:8080/fibonacci&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="n"&gt;/hc&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_pass&lt;/span&gt; &lt;span class="s"&gt;http://api:8080/hc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;code&gt;nginx/dockerfile&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; nginx&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; nginx.conf /etc/nginx/nginx.conf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#dockercompose"&gt;
  &lt;/a&gt;
  Docker-compose
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;3"&lt;/span&gt;

&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;nginx&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginx&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;3000:3000"&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;./cache:/tmp/nginx/cache"&lt;/span&gt;
    &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;nginx"&lt;/span&gt;
  &lt;span class="na"&gt;api&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;api&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;8080:8080"&lt;/span&gt;
    &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;api"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#proving-cache-is-our-friend"&gt;
  &lt;/a&gt;
  Proving cache is our friend
&lt;/h3&gt;

&lt;p&gt;Using &lt;a href="https://k6.io/docs/"&gt;k6&lt;/a&gt; we can simulate a bunch of requests that go through Nginx and others that don't, comparing them. &lt;br&gt;
The test will reach 100 requests in the first 30 seconds(&lt;a href="https://k6.io/docs/using-k6/options/#stages"&gt;about stages in k6&lt;/a&gt;) that will randomly retrieve the nth sequence with 7 digits between (9999991 ~ 9999999) to force the usage of API resources and Nginx caching.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;k6-test.js&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;k6/http&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;sleep&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;k6&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;SLEEP_DURATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;stages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;30s&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;30s&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;thresholds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;http_req_duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;p(99)&amp;lt;100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// 99% request must complete below 100ms&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;NGINX_LOCAL_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:3000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;API_LOCAL_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:8080&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;BASE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;__ENV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;API_URL&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;NGINX&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;NGINX_LOCAL_URL&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;API_LOCAL_URL&lt;/span&gt; 
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;HEADERS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;randomInteger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;BASE_URL&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/fibonacci/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;randomInteger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9999991&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9999999&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;SLEEP_DURATION&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#running-clipboard"&gt;
  &lt;/a&gt;
  Running 📋
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;docker-compose up -d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Testing with requests passing through Nginx: &lt;code&gt;k6 run k6-test.js -e API_URL='NGINX'&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Testing requesting directly the API: &lt;code&gt;k6 run k6-test.js&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What if API were down ? Try it out, &lt;code&gt;docker stop api&lt;/code&gt; and run the tests above again.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Nginx will be able to answer some requests (maybe all, due to our scenario), cool right?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#conclusion-memo"&gt;
  &lt;/a&gt;
  Conclusion 📝
&lt;/h2&gt;

&lt;p&gt;Results from Nginx:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nqfrKU9v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dji50vn9l6rsn6b80s3b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nqfrKU9v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dji50vn9l6rsn6b80s3b.png" alt="Test Result - Nginx" width="880" height="22"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Results from API:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--528SaeMv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4q2n2ljpoow8zlwtd059.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--528SaeMv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4q2n2ljpoow8zlwtd059.png" alt="Test Result - API" width="880" height="21"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we can see, caching improves considerably the response time. Sometimes the back-end will be able to handle requests even if the API is down, when I test this feature for the first time I thought it was amazing!&lt;/p&gt;

&lt;p&gt;This is a simple example but I hope that could be helpful for people who's thinking to cache some API routes.I know this is not applicable to every scenario, but maybe can open a world of possibilities to solve performance issues without change the API it self.&lt;/p&gt;

</description>
      <category>nginx</category>
      <category>devops</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Must-Have Python Cheat Sheets</title>
      <author>images.cv</author>
      <pubDate>Mon, 27 Dec 2021 22:11:22 +0000</pubDate>
      <link>https://dev.to/imagescv/must-have-python-cheat-sheets-16an</link>
      <guid>https://dev.to/imagescv/must-have-python-cheat-sheets-16an</guid>
      <description>&lt;p&gt;Python is a programming language that has become popular in recent years. With the help of some great tools, you can do anything from data manipulation to web development faster and easier than ever before! One of these handy tools is cheat sheets. A cheat sheet gives you quick references for doing things like string manipulations or regular expressions. Check out this blog post for ten must-have Python cheat sheets to get you started with the language!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#here-are-ten-musthave-python-cheat-sheets-to-get-you-started-with-the-language"&gt;
  &lt;/a&gt;
  Here are ten must-have Python cheat sheets to get you started with the language!
&lt;/h2&gt;




&lt;p&gt;&lt;a href="https://www.dataquest.io/wp-content/uploads/2019/03/python-regular-expressions-cheat-sheet.pdf"&gt;Python Regular Expressions Cheat Sheet&lt;/a&gt;&lt;br&gt;
This cheat sheet is a great resource for anyone who needs to do string manipulations or regular expressions in Python. It includes all of the most common regex operations.&lt;/p&gt;




&lt;p&gt;&lt;a href="http://www.utc.fr/~jlaforet/Suppl/python-cheatsheets.pdf"&gt;Python for Data Science Cheat Sheet&lt;/a&gt;&lt;br&gt;
This cheat sheet is perfect for data scientists who are new to Python. It includes examples of using NumPy, Pandas, Matplotlib, and Seaborn.&lt;/p&gt;




&lt;p&gt;&lt;a href="http://www.asheesh.org/pub/pycon-2010/scraping-cheat-sheet.pdf"&gt;Python for Web Scraping Cheat Sheet&lt;/a&gt;&lt;br&gt;
This cheat sheet is a great starting point for anyone who needs to scrape websites using Python. It includes a variety of tips for scraping web pages, parsing data, and using Selenium.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://edu.anarcho-copy.org/Programming%20Languages/Python/Python%20CheatSheet/beginners_python_cheat_sheet_pcc_django.pdf"&gt;Python Django Cheat Sheet&lt;/a&gt;&lt;br&gt;
This cheat sheet is perfect for anyone who wants to learn Django, a web development framework written in Python. It includes basic syntax, templates, and common tasks.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://s3.us-east-2.amazonaws.com/prettyprinted/flask_cheatsheet.pdf"&gt;Python Flask Cheat Sheet&lt;/a&gt;&lt;br&gt;
This cheat sheet is perfect for anyone who wants to learn more about the Python web framework, Flask. It includes basic syntax, templates, and tips for common tasks.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://assets.datacamp.com/blog_assets/Numpy_Python_Cheat_Sheet.pdf"&gt;Python NumPy Cheat Sheet&lt;/a&gt;&lt;br&gt;
This cheat sheet is perfect for anyone who wants to learn more about the Python library, NumPy. It includes basic syntax and common operations for working with vectors or matrices.&lt;/p&gt;




&lt;p&gt;&lt;a href="http://datacamp-community-prod.s3.amazonaws.com/e1a8f39d-71ad-4d13-9a6b-618fe1b8c9e9"&gt;Python Matplotlib Cheat Sheet&lt;/a&gt;&lt;br&gt;
This cheat sheet is perfect for anyone who wants to learn more about the Python data visualization library, Matplotlib. It includes examples of creating graphs and plots.&lt;/p&gt;




&lt;p&gt;&lt;a href="http://datacamp-community-prod.s3.amazonaws.com/72e88aa1-b4f2-4658-9d86-15becf8263df"&gt;Python importing data cheat sheet&lt;/a&gt;&lt;br&gt;
How to import data in python including text files, databases, file systems, and more&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.edureka.co/blog/wp-content/uploads/2018/10/Jupyter_Notebook_CheatSheet_Edureka.pdf"&gt;Jupiter notebook cheat sheet&lt;/a&gt;&lt;br&gt;
How to save and load a notebook, using notebook with different programming language, widgets and more&lt;/p&gt;




&lt;p&gt;&lt;a href="https://s3.amazonaws.com/assets.datacamp.com/blog_assets/Keras_Cheat_Sheet_Python.pdf"&gt;Keras cheat sheet&lt;/a&gt;&lt;br&gt;
Keras is an API designed for human beings, not machines. Keras follows best practices for reducing cognitive load: it offers consistent &amp;amp; simple APIs, it minimizes the number of user actions required for common use cases, and it provides clear &amp;amp; actionable error messages. It also has extensive documentation and developer guides.&lt;/p&gt;




&lt;p&gt;We hope you’ve found the Python cheat sheets useful. If there are any that we missed, please let us know! You can also visit our blog for more valuable information on programming languages and free resources to help you learn them.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://images.cv/"&gt;images.cv&lt;/a&gt; provide you with an easy way to build image datasets.&lt;br&gt;
15K+ categories to choose from&lt;br&gt;
Consistent folders structure for easy parsing&lt;br&gt;
Advanced tools for dataset pre-processing: image format, data split, image size and data augmentation.&lt;/p&gt;

</description>
      <category>python</category>
    </item>
    <item>
      <title>World Creator 2 - Building the World Map.</title>
      <author>matjs</author>
      <pubDate>Mon, 27 Dec 2021 21:59:48 +0000</pubDate>
      <link>https://dev.to/matjs/world-creator-2-building-the-world-map-2b</link>
      <guid>https://dev.to/matjs/world-creator-2-building-the-world-map-2b</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;How is a world created? (Worldbuilding)&lt;/p&gt;

&lt;p&gt;In Worldbuilding there is two methods of creation, the first is called "top-down", where you create the world's cultures, its inhabitants, civilizations and then the geographic features, it's the option that i will try to avoid, since i want to create the world historically, so from year 0 to year i-dont-know. The other method is the first but inverted, so it's called "bottom-up", where you create the geographic features, such as continents, tectonic plates, biomes and then the cultures, civilizations and more. I will try to use the "bottom-up" method, it's just what i want. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ok-so-where-to-start"&gt;
  &lt;/a&gt;
  Ok, so where to start?
&lt;/h2&gt;

&lt;p&gt;I want to create a world organically, so as i'm going to use the "bottom-up" method, i will create the world terrain first and then adapt the cultures on it. So, this is the thing: i will start by creating the world terrain.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#part-1-the-terrain-generation-process"&gt;
  &lt;/a&gt;
  PART 1 - The Terrain Generation Process
&lt;/h1&gt;

&lt;p&gt;So, i've read about map generaton, a lot, and there's a very famous process called Voronoi, which uses a polygonal map structure to draw solid terrain and water, it's extremelly cool and looks good. I'll mess with that process and maybe improve that to something more polished. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J1veW9qg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3blacm1cnfognhtudx0w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J1veW9qg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3blacm1cnfognhtudx0w.png" alt="World procedurally generated" width="880" height="880"&gt;&lt;/a&gt;&lt;br&gt;
This is how i want it to look like.&lt;/p&gt;

&lt;p&gt;Oh and i didn't said, but i will not code Voronoi by myself, it's a huge waste of time since there's libraries that does that and this is not a university research.&lt;br&gt;
So this is going to be a kind of side-project, a map generator for the biggest project, a fantasy world generator. Looks good for me.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#generating-the-map"&gt;
  &lt;/a&gt;
  Generating the map
&lt;/h2&gt;

&lt;p&gt;So, we did started the project, that's good. Ok, how is the map going to be generated? For instance, we are just starting to think about that, but the beginning of this adventure starts at seeds. Yes, seeds, remember Minecraft? It has seeds too, and it generates the maps.&lt;/p&gt;

&lt;p&gt;This is our code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;GRIDSIZE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;JITTER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;GRIDSIZE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;GRIDSIZE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;JITTER&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
                     &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;JITTER&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;())});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What is it doing?&lt;/p&gt;

&lt;p&gt;Basically, it's generating grids at the canvas and then we add &lt;strong&gt;jitter&lt;/strong&gt;, because we cannot use the same points for the Voronoi process, this is where jitter enters, it breaks the regular grid lines.&lt;br&gt;
Yeah, cool, but it doesn't really shows anything. So let's draw it!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;drawPoints&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2d&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;GRIDSIZE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;GRIDSIZE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fillStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hsl(0, 50%, 50%)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beginPath&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PI&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;restore&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Awesome! We have points at where the map is going to be drawn, it's where our Voronoi will be drawn too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FQzEz7XJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h2xjjv7tz6z41zlv8076.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FQzEz7XJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h2xjjv7tz6z41zlv8076.png" alt="Voronoi points" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-the-voronoi-really-comes-up"&gt;
  &lt;/a&gt;
  Where the Voronoi really comes up
&lt;/h3&gt;

&lt;p&gt;Now we are getting closer to the exciting part of this code! We have just generated some functional randomly disposed points where we are going to deploy our Voronoi elements. How we do this?&lt;/p&gt;

&lt;p&gt;First of all we are going to run the Delaunay triangulation algorithm, which will create the Voronoi cells for us (the spaces between the lines, where our points will be at the center)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;delaunay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Delaunator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loc&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loc&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ok, we did the triangulation, now we need to calculate the centimeters of the triangles, we will use something called "centroids" which are part of the Voronoi process.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;calculateCentroids&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;delaunay&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numTriangles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;delaunay&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;halfedges&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;centroids&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;numTriangles&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sumOfX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sumOfY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;delaunay&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;triangles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;]];&lt;/span&gt;
            &lt;span class="nx"&gt;sumOfX&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;sumOfY&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;centroids&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sumOfX&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sumOfY&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;centroids&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, we store the information:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;numRegions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;numTriangles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;delaunay&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;halfedges&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;numEdges&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;delaunay&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;halfedges&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;halfedges&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;delaunay&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;halfedges&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;triangles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;delaunay&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;triangles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;centers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;calculateCentroids&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;delaunay&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And finally, we draw the Voronoi cells:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;triangleOfEdge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;nextHalfedge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;drawCellBoundaries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;centers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;halfedges&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;triangles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;numEdges&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2d&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;GRIDSIZE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;GRIDSIZE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.02&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;strokeStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;black&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;numEdges&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;delaunay&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;halfedges&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;centers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;triangleOfEdge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;centers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;triangleOfEdge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;halfedges&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;])];&lt;/span&gt;
            &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beginPath&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;moveTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;restore&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qHJqaS5f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kdarq1onvww2d07r2hns.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qHJqaS5f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kdarq1onvww2d07r2hns.png" alt="Voronoi points with cells" width="880" height="441"&gt;&lt;/a&gt;&lt;br&gt;
Exciting! Looks like a Voronoi-based draw for me.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#island-shape"&gt;
  &lt;/a&gt;
  Island shape
&lt;/h2&gt;

&lt;p&gt;Until now we've created the algorithm for the points, that generates our cells, now we are going to put it in action, that means we are going to draw the terrain. Yeah!&lt;/p&gt;

&lt;p&gt;If we want it to look like an island, we need to create a height map, so we aren't going to see any floating random terrain at the ocean. Here it goes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;WAVELENGTH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;assignElevation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;noise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SimplexNoise&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;numRegions&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;elevation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;numRegions&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;nx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;GRIDSIZE&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;ny&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;GRIDSIZE&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;// start with noise:&lt;/span&gt;
        &lt;span class="nx"&gt;elevation&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;noise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;noise2D&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nx&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;WAVELENGTH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ny&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;WAVELENGTH&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;// modify noise to make islands:&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nx&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ny&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// should be 0-1&lt;/span&gt;
        &lt;span class="nx"&gt;elevation&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;elevation&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;elevation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elevation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;assignElevation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are the regions, we have it at the application's memory, now we need to draw it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;edgesAroundPoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;delaunay&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;incoming&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;incoming&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;outgoing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nextHalfedge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;incoming&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;incoming&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;delaunay&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;halfedges&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;outgoing&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;incoming&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;incoming&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;drawCellColors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;colorFn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2d&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;GRIDSIZE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;GRIDSIZE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;seen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;// of region ids&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;triangles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;numEdges&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;centers&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;numEdges&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;triangles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;nextHalfedge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;seen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;seen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;vertices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;edgesAroundPoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;delaunay&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;centers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;triangleOfEdge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)]);&lt;/span&gt;
            &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fillStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;colorFn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beginPath&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;moveTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vertices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;vertices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;vertices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vertices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;vertices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;drawCellColors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;diagram-cell-elevations&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elevation&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hsl(240, 30%, 50%)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hsl(90, 20%, 50%)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have the islands!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dOfC_Xil--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vts92lkg8wf7vf62dwsp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dOfC_Xil--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vts92lkg8wf7vf62dwsp.png" alt="Islands!" width="880" height="439"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#biomes"&gt;
  &lt;/a&gt;
  Biomes
&lt;/h2&gt;

&lt;p&gt;Every respectfull world has diversified biomes, that's what we need.&lt;/p&gt;

&lt;p&gt;For that, we need to generate a second noise map, so we can see where the biomes are on our hemispheres.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;assignMoisture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;noise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SimplexNoise&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;numRegions&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;moisture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;numRegions&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;nx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;GRIDSIZE&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;ny&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;GRIDSIZE&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;moisture&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;noise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;noise2D&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nx&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;WAVELENGTH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ny&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;WAVELENGTH&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;moisture&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;moisture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;assignMoisture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, we just put some colors on it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;biomeColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elevation&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;moisture&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;127&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;127&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// tweaks&lt;/span&gt;
        &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;210&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;185&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;139&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="nx"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;g&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`rgb(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;drawCellColors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;diagram-cell-biomes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;biomeColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KhWDaNTf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dlup6edbfba69ic038he.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KhWDaNTf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dlup6edbfba69ic038he.png" alt="Image description" width="880" height="442"&gt;&lt;/a&gt; &lt;br&gt;
Beautiful!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;We have created a simple but not so simple map generator, it looks extremely good and i'm honestly very happy with the result, but it wouldn't be possible without the help of these awesome articles about world generation:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www-cs-students.stanford.edu/~amitp/game-programming/polygon-map-generation/#source"&gt;Polygonal Map Generation for Games - by amitp from Red Blob Games&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.redblobgames.com/x/2022-voronoi-maps-tutorial/"&gt;Voronoi Maps Tutorial - by amitp from Red Blob Games&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/mapbox/delaunator"&gt;MapBox's Delaunator Algorithm&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/jwagner/simplex-noise.js"&gt;Jwagner's Simplex-Noise Algorithm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow me on my social medias, so you won't miss anything:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter/matjs_"&gt;My Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/matjsilva"&gt;My Github&lt;/a&gt;&lt;br&gt;
My Discord: &lt;a class="mentioned-user" href="https://dev.to/matjs"&gt;@matjs&lt;/a&gt;#1006&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>algorithms</category>
    </item>
  </channel>
</rss>
