<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Refine vs AdminBro - Comparison Admin Panel Framework</title>
      <author>Melih Ekinci</author>
      <pubDate>Tue, 30 Nov 2021 09:53:29 +0000</pubDate>
      <link>https://dev.to/pankod/refine-vs-adminbro-comparison-admin-panel-framework-16g8</link>
      <guid>https://dev.to/pankod/refine-vs-adminbro-comparison-admin-panel-framework-16g8</guid>
      <description>&lt;p&gt;Looking for open source &lt;strong&gt;admin panel framework&lt;/strong&gt;? Here we are going to review two of the best &lt;strong&gt;Open Source admin panel frameworks of 2021&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;These frameworks that we will talk about have emerged to offer solutions to the same business demands in general. Although the purpose of these two frameworks is the same, the solutions are different from each other. Our goal in this article is to show you these differences and help you find the appropriate framework for your project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#refine"&gt;
  &lt;/a&gt;
  Refine
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;refine&lt;/strong&gt; is a React-based framework that helps you to develop admin panel, B2B and dashboard that can be fully customized with Ant Design.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;refine&lt;/strong&gt; directly provides Ant Design components and some hooks to work with those components. These hooks give you the required props for those Ant Design components.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;refine&lt;/strong&gt; is a collection of helper hooks, components and providers. They are all decoupled from your UI components and business logic, so they never keep you from customizing your UI or coding your own flow.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;refine&lt;/strong&gt; uses &lt;a href="https://react-query.tanstack.com/"&gt;React Query&lt;/a&gt; for data processing, caching, and state management. In this respect, you do not need to define anything extra for every cases and model.&lt;/p&gt;

&lt;p&gt;Although &lt;strong&gt;refine&lt;/strong&gt; is a newer framework, it is successful in identifying deficiencies in development and producing solutions accordingly. Using new technologies, it offers users more effective and simpler development options.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Installation is very simple and customizable options can be added.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx superplate-cli demo-refine-project
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RrOoLXNl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kbnaxfhyzyi8l2uocqdn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RrOoLXNl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kbnaxfhyzyi8l2uocqdn.gif" alt="Image description" width="809" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Configuration: One-line setup with superplate. Project setup is very simple. Using superplate you can choose the content of your project and the features you want to add. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;UI: You have full control over the UI elements. Fully customizable, open to use. Works seamlessly with integrated Ant Design System.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Out-of-the-box: Routing, networking, authentication, state managment, i18n and UI.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Next.js / SSR integration: &lt;strong&gt;refine&lt;/strong&gt; can be used with Next.js to SSR your pages.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;React Location: React Location router provider support &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ssr-nextjs-support"&gt;
  &lt;/a&gt;
  SSR - Next.js Support
&lt;/h3&gt;

&lt;p&gt;refine has support for SSR - Next.js. This is an important feature that separates &lt;strong&gt;refine&lt;/strong&gt; from other frameworks. Thanks to this feature, &lt;strong&gt;refine&lt;/strong&gt; provides the opportunity to develop B2C applications in addition to B2B and admin panel.&lt;/p&gt;

&lt;p&gt;refine can be used with Next.js to SSR your pages. It doesn't get in the way and follows Next.js conventions and also provides helper modules when necessary.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ssrnextjs-setup"&gt;
  &lt;/a&gt;
  SSR-Next.js Setup
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i @pankod/refine @pankod/refine-nextjs-router
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#ssrnextjs-basic-usage"&gt;
  &lt;/a&gt;
  SSR-Next.js Basic Usage
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;Refine&amp;gt;&lt;/code&gt; must wrap your pages in a custom App component. This way your pages are integrated to refine.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AppProps&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next/app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Refine&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@pankod/refine&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;dataProvider&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@pankod/refine-simple-rest&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;routerProvider&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@pankod/refine-nextjs-router&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;API_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://api.fake-rest.refine.dev&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pageProps&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;AppProps&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;JSX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Element&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Refine&lt;/span&gt;
            &lt;span class="na"&gt;routerProvider&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;routerProvider&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="na"&gt;dataProvider&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;dataProvider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;API_URL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Component&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;pageProps&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Refine&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://refine.dev/docs/guides-and-concepts/ssr-nextjs/"&gt;For more information on how to add SSR-Next.js to your Refine project -&amp;gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#routing"&gt;
  &lt;/a&gt;
  Routing
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;refine&lt;/strong&gt; uses a customized Router Provider to save routes and navigate between pages. &lt;strong&gt;refine&lt;/strong&gt; offers a much more flexible structure thanks to its routerProvider support.&lt;/p&gt;

&lt;p&gt;A router provider must include the following methods:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;routerProvider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;useHistory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;goBack&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;useLocation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;pathname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;search&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;useParams&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Params&lt;/span&gt; &lt;span class="na"&gt;extends&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;K&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="kr"&gt;keyof&lt;/span&gt; &lt;span class="nx"&gt;Params&lt;/span&gt;&lt;span class="p"&gt;]?:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;() =&amp;gt; Params,
    Prompt: React.FC&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;PromptProps&lt;/span&gt;&lt;span class="err"&gt;*&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;,
    Link: React.FC&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;any&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;,
    RouterComponent?: React.FC&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;any&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;,
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;refine includes many  router providers to use in your projects like: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React Router&lt;/li&gt;
&lt;li&gt;React Location&lt;/li&gt;
&lt;li&gt;Next.js Router&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://refine.dev/docs/api-references/providers/router-provider/"&gt;To take a look at how other router providers are defined and working&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To activate router provider in &lt;strong&gt;refine&lt;/strong&gt;, we have to pass the routerProvider to the &lt;code&gt;&amp;lt;Refine /&amp;gt;&lt;/code&gt; component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Refine&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@pankod/refine&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;routerProvider&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@pankod/refine-react-router&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Refine&lt;/span&gt; &lt;span class="na"&gt;routerProvider&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;routerProvider&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Refine&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@pankod/refine&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;routerProvider&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@pankod/refine-react-location&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Refine&lt;/span&gt; &lt;span class="na"&gt;routerProvider&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;routerProvider&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Refine&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@pankod/refine&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;routerProvider&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@pankod/refine-nextjs-router&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Refine&lt;/span&gt; &lt;span class="na"&gt;routerProvider&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;routerProvider&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You just need to tell the route of your component to the routerProvider.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-provider-logic"&gt;
  &lt;/a&gt;
  Data Provider Logic
&lt;/h3&gt;

&lt;p&gt;A data provider is the place where a &lt;strong&gt;refine&lt;/strong&gt; app communicates with an API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CagkGH2h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oicns3833o6gg59d5lt1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CagkGH2h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oicns3833o6gg59d5lt1.png" alt="Image description" width="850" height="359"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A data provider must include following methods:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dataProvider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;create&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;metaData&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;createMany&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;metaData&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;deleteOne&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;metaData&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;deleteMany&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ids&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;metaData&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;getList&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pagination&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;filters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;metaData&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;getMany&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ids&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;metaData&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;getOne&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;metaData&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;update&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;metaData&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;updateMany&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ids&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;metaData&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;custom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;filters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;metaData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;getApiUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Data hooks uses React Query to manage data fetching. React Query handles important concerns like caching, invalidation, loading states etc..&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#graphql-data-provider"&gt;
  &lt;/a&gt;
  GraphQL Data Provider
&lt;/h4&gt;

&lt;p&gt;It is well covered by GraphQL data provider &lt;strong&gt;refine&lt;/strong&gt; and explained step by step in the documentation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;refine&lt;/strong&gt; GraphQL data provider is built with &lt;a href="https://github.com/atulmy/gql-query-builder"&gt;qql-query-builder&lt;/a&gt; and &lt;a href="https://github.com/prisma-labs/graphql-request"&gt;graphql-request&lt;/a&gt;. The purpose here is to send dynamic queries that we can do with qql-query-builder as requests with graphql-request. &lt;/p&gt;

&lt;p&gt;Query builder helps us build queries and mutations. We can use these queries with the getList, getMany and getOne methods in our data provider. On the other hand, the create, createMany, update, updateMany, deleteOne and deleteMany methods generate a mutation to send a request.&lt;/p&gt;

&lt;p&gt;In order to create a query, we need to specify the fields that we will use from our data provider. Thanks to the MetaDataQuery, we pass these fields to our data provider and start using them.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#basic-graphql-usage"&gt;
  &lt;/a&gt;
  Basic GraphQL Usage
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Refine&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@pankod/refine&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;routerProvider&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@pankod/refine-react-router&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;dataProvider&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@pankod/refine-strapi-graphql&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;GraphQLClient&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;graphql-request&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;GraphQLClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;API_URL&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Refine&lt;/span&gt;
            &lt;span class="na"&gt;routerProvider&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;routerProvider&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="na"&gt;dataProvider&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;dataProvider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When sending the request, we must specify which fields will come, so we send fields in &lt;code&gt;metaData&lt;/code&gt; to hooks that we will fetch data from.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PostList&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FC&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;IResourceComponentsProps&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;tableProps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sorter&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useTable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;IPost&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;initialSorter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;field&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;order&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;asc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="c1"&gt;// highlight-start&lt;/span&gt;
        &lt;span class="na"&gt;metaData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="na"&gt;category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;selectProps&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSelect&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ICategory&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;categories&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;metaData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Table&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;tableProps&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;rowKey&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Column&lt;/span&gt;
                    &lt;span class="na"&gt;dataIndex&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;
                    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"ID"&lt;/span&gt;
                    &lt;span class="na"&gt;sorter&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;multiple&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                    &lt;span class="na"&gt;defaultSortOrder&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getDefaultSortOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sorter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Column&lt;/span&gt;
                    &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;
                    &lt;span class="na"&gt;dataIndex&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;
                    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Title"&lt;/span&gt;
                    &lt;span class="na"&gt;sorter&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;multiple&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Column&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="na"&gt;IPost&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    dataIndex="category"
                    title="Category"
                    filterDropdown=&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;FilterDropdown&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Select&lt;/span&gt;
                                &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;minWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                                &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"multiple"&lt;/span&gt;
                                &lt;span class="na"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Select Category"&lt;/span&gt;
                                &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;selectProps&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                            &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
                        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;FilterDropdown&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                    render=&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                /&amp;gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Column&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="na"&gt;IPost&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    title="Actions"
                    dataIndex="actions"
                    render=&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Space&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;EditButton&lt;/span&gt;
                                &lt;span class="na"&gt;hideText&lt;/span&gt;
                                &lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"small"&lt;/span&gt;
                                &lt;span class="na"&gt;recordItemId&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                            &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
                            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ShowButton&lt;/span&gt;
                                &lt;span class="na"&gt;hideText&lt;/span&gt;
                                &lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"small"&lt;/span&gt;
                                &lt;span class="na"&gt;recordItemId&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                            &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
                            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;DeleteButton&lt;/span&gt;
                                &lt;span class="na"&gt;hideText&lt;/span&gt;
                                &lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"small"&lt;/span&gt;
                                &lt;span class="na"&gt;recordItemId&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                            &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
                        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Space&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                /&amp;gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Table&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    );
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we only make requests for queries that are necessary. As you can see, all you have to do is specify the field you want to select with &lt;code&gt;metaData&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://refine.dev/docs/guides-and-concepts/data-provider/graphql/"&gt;Refer to the GraphQL for detailed usage. → &lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#refine-avaible-providers"&gt;
  &lt;/a&gt;
  Refine Avaible Providers
&lt;/h3&gt;

&lt;p&gt;Connects to any REST or GraphQL custom backend.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;NestJs CRUD: &lt;a href="https://github.com/pankod/refine/tree/master/examples/dataProvider/nestjsxCrud"&gt;https://github.com/pankod/refine/tree/master/examples/dataProvider/nestjsxCrud&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Airtable: &lt;a href="https://github.com/pankod/refine/tree/master/examples/dataProvider/airtable"&gt;https://github.com/pankod/refine/tree/master/examples/dataProvider/airtable&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Strapi: &lt;a href="https://github.com/pankod/refine/tree/master/examples/dataProvider/strapi"&gt;https://github.com/pankod/refine/tree/master/examples/dataProvider/strapi&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Strapi GraphQL: &lt;a href="https://github.com/pankod/refine/tree/master/examples/dataProvider/strapi-graphql"&gt;https://github.com/pankod/refine/tree/master/examples/dataProvider/strapi-graphql&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Supabase: &lt;a href="https://github.com/pankod/refine/tree/master/examples/dataProvider/supabase"&gt;https://github.com/pankod/refine/tree/master/examples/dataProvider/supabase&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Hasura: &lt;a href="https://github.com/pankod/refine/tree/master/examples/dataProvider/supabase"&gt;https://github.com/pankod/refine/tree/master/examples/dataProvider/supabase&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Altogic: &lt;a href="https://github.com/pankod/refine/tree/master/examples/dataProvider/altogic"&gt;https://github.com/pankod/refine/tree/master/examples/dataProvider/altogic&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#customization"&gt;
  &lt;/a&gt;
  Customization
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;refine's&lt;/strong&gt; motivation and main purpose are as follows: "Higher-level frontend frameworks can save you a lot time, but they typically offer you a trade-off between speed and flexibility." &lt;/li&gt;
&lt;li&gt;While the admin panel allows you to make dashboard, B2B and B2C applications quickly, we offer you flexibility in your UI or business model.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#uiux-customization"&gt;
  &lt;/a&gt;
  UI/UX Customization:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;refine&lt;/strong&gt;, comes ready-made decoupled from the UI, and is used. &lt;strong&gt;refine&lt;/strong&gt; mostly touches UI components via hooks. The main advantage of this for you is that you can successfully perform any Business request or different case.
#### Logic Customization:&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;refine&lt;/strong&gt;, works flawless with react-query. You don't have to worry about state management in your business model or when you encounter a different situation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h3&gt;

&lt;p&gt;All features of &lt;strong&gt;refine&lt;/strong&gt; are available as &lt;strong&gt;open source&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Access Control Provider (RBAC, ABAC, ACL, IP, LDAP, etc...)&lt;/li&gt;
&lt;li&gt;Realtime&lt;/li&gt;
&lt;li&gt;Search &lt;/li&gt;
&lt;li&gt;Navigation and more features are available&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to get information about the Enterprise, refine ready to help you for Support and Training.&lt;br&gt;
&lt;a href="https://refine.dev/enterprise/"&gt;For more info about Enterprise-&amp;gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;refine&lt;/strong&gt; Docs &amp;amp; Demo: &lt;a href="https://refine.dev/docs/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://refine.dev/demo/"&gt;Live Demo&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#adminbro"&gt;
  &lt;/a&gt;
  AdminBro
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://adminbro.com/index.html"&gt;AdminBro&lt;/a&gt; is an open-source package from  that adds an auto-generated admin panel to your Node.js application. You provide database models or schemas and AdminBro generates the user interface for you. &lt;/p&gt;

&lt;p&gt;You can connect your various databases to the admin interface and perform standard CRUD operations  on the records. In this way, it makes it to make changes on your data and provides you with a great deal of convenience.&lt;/p&gt;

&lt;p&gt;You can quickly develop and customize the Admin panel with AdminBro.&lt;/p&gt;

&lt;p&gt;It provides you with solutions and provides convenience when making admin panel and b2b applications. It is an open source project that has been in development and ongoing development for a long time. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;We can say that it is difficult to install, but it is clearly explained step by step in the documentation.&lt;/p&gt;

&lt;p&gt;Since AdminBro uses your existing framework to render its routes - you have to use one of our plugins.&lt;/p&gt;

&lt;p&gt;There are plugins for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Express&lt;/li&gt;
&lt;li&gt;Hapi&lt;/li&gt;
&lt;li&gt;Koa.js&lt;/li&gt;
&lt;li&gt;Nest.js&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Install the AdminBro along with the express plugin&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;admin-bro @admin-bro/express
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, we need to install some dependencies express and the express-formidable packages. express-formidable is a peer dependency for AdminBro&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; npm &lt;span class="nb"&gt;install &lt;/span&gt;express express-formidable
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://adminbro.com/tutorial-installation-instructions.html"&gt;For detailed installation →&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You can use any data from any source and make changes to the data(create, read, update, delete)&lt;/li&gt;
&lt;li&gt;Custom actions&lt;/li&gt;
&lt;li&gt;Custom resource decorators&lt;/li&gt;
&lt;li&gt;Form validation &lt;/li&gt;
&lt;li&gt;A full-featured control panel can be created.&lt;/li&gt;
&lt;li&gt;Internationalization(i18n)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ssr-nextjs-support%E2%80%8B"&gt;
  &lt;/a&gt;
  SSR - Next.js Support​
&lt;/h3&gt;

&lt;p&gt;AdminBro does not support SSR-Next.js. It only helps you develop B2B and admin panel applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#routing"&gt;
  &lt;/a&gt;
  Routing
&lt;/h3&gt;

&lt;p&gt;Adminbro's routing processes are slightly different than others. You can also define the routes of the components that you have created custom here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AdminBro&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;admin-bro&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AdminBroExpress&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@admin-bro/express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;adminBro&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;AdminBro&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;databases&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
  &lt;span class="na"&gt;rootPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/admin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;AdminBroExpress&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buildRouter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;adminBro&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The concept of routing is handled in a different way and in general all routing operations are defined through this file.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-provider-logic"&gt;
  &lt;/a&gt;
  Data Provider Logic
&lt;/h3&gt;

&lt;p&gt;It does not have a data provider exactly like other frameworks. It has a different structure. It has created functions for you to control your data. But there are rules that we must follow and do.&lt;/p&gt;

&lt;p&gt;AdminBro can be connected to many different types of resources. Right now, they support the following options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mongoose&lt;/li&gt;
&lt;li&gt;Sequelize&lt;/li&gt;
&lt;li&gt;TypeORM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To add resources , you first have to intall an adapter for the resource you want to use.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#install-the-database-adapter-and-add-resources"&gt;
  &lt;/a&gt;
  Install the Database Adapter and add resources
&lt;/h4&gt;

&lt;p&gt;Let's take a look at an example made with the mongoose adapter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;mongoose @admin-bro/mongoose
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AdminBro&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;admin-bro&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AdminBroExpress&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@admin-bro/express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AdminBroMongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@admin-bro/mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;AdminBro&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;registerAdapter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;AdminBroMongoose&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongodb://localhost:27017/users&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;useUnifiedTopology&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;User&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;surname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;adminBro&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;AdminBro&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;Databases&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;rootPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/admin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;AdminBroExpress&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buildRouter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;adminBro&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;adminBro&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rootPath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Application is up and running under localhost:3000/admin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we first installed and connected mongoose. We then created a model and passed it to the AdminBro resource. AdminBro has built an interface for us where we can list our users. You can also add your own &lt;a href="https://adminbro.com/tutorial-writing-custom-adapters.html"&gt;custom adapters&lt;/a&gt; and set up &lt;a href="https://adminbro.com/tutorial-customizing-resources.html"&gt;custom resources&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The logic is well covered and also well explained in the documentation. But we can say that it is complex compared to other frameworks. It can be difficult to use on big data. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#graphql-data-provider"&gt;
  &lt;/a&gt;
  GraphQL Data Provider
&lt;/h4&gt;

&lt;p&gt;There is no native GraphQL support. It can be supported with 3rd party packages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/admin-bro-graphql"&gt;https://www.npmjs.com/package/admin-bro-graphql&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/SoftwareBrothers/adminjs/issues/655"&gt;https://github.com/SoftwareBrothers/adminjs/issues/655&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#customization"&gt;
  &lt;/a&gt;
  Customization
&lt;/h3&gt;

&lt;p&gt;AdminBro is good at customizing. You can connect your own adapters and customize your resources. These customizations are challenging and complex.&lt;/p&gt;

&lt;p&gt;Some customizable features are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://adminbro.com/tutorial-customizing-resources.html"&gt;Customize Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adminbro.com/tutorial-actions.html"&gt;Customize Actions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adminbro.com/tutorial-actions-validations.html"&gt;Custom Validations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adminbro.com/tutorial-custom-dashboard.html"&gt;Customize dashboard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#uiux-customization%E2%80%8B"&gt;
  &lt;/a&gt;
  UI/UX Customization:​
&lt;/h4&gt;

&lt;p&gt;It automatically offers you an interface option that you can use. You can also develop and customize your own components. You can do your own styling and write your own custom components, but for this customization, you need to follow and apply a few steps. It doesn't speed you up in UI development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://adminbro.com/tutorial-writing-react-components.html"&gt;For more information about developing your own components -&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h3&gt;

&lt;p&gt;All features of Adminbro are open source and accessible.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Role-Based Access Control&lt;/li&gt;
&lt;li&gt;Content Management System&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;AdminBro Docs &amp;amp; Demo: &lt;a href="https://adminbro.com/tutorial-installation-instructions.html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://admin-bro-example-app-staging.herokuapp.com/admin/login"&gt;Live Demo&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We have examined these two frameworks under some headings. Both help you successfully develop admin panel and B2B applications.&lt;/p&gt;

&lt;p&gt;We suggest asking some questions to find out which one is more suitable for your project.&lt;/p&gt;

&lt;p&gt;At this point, the questions you should ask when choosing these of framework may be as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;How flexible are they in offering solutions to the different business demands we may encounter?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How difficult will it be to implement the providers and features we will be using?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If any problem arises, can I easily find a solution from the documentation?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How dependent am I on this framework when using it in my project and does it offer customization possibilities?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What does it offer me as an extra feature?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here &lt;strong&gt;refine&lt;/strong&gt; directly answers some of your questions. &lt;strong&gt;refine&lt;/strong&gt;'s customized structures (API, Router, i18n, GraphQL provider, etc...) provide you convenience from many points, unlike AdminBro bro. This convenience and perspective provided by &lt;strong&gt;refine&lt;/strong&gt; can be preferred for many projects. In addition, you can be limited to internal tool/B2B applications with adminbro.  You can develop many different projects with &lt;strong&gt;refine&lt;/strong&gt;'s rich UI library and SSR support.&lt;/p&gt;

&lt;p&gt;In this article, we tried to answer these questions. By reading this article, you can choose the appropriate framework for your project and use it.&lt;/p&gt;

&lt;p&gt;This comparison table strives to be as accurate and as unbiased as possible. If you use any of these libraries and feel the information could be improved, feel free to suggest changes (with notes or evidence of claims) contact &lt;a href="mailto:info@refine.dev"&gt;info@refine.dev&lt;/a&gt; or you can open a issue on &lt;a href="https://github.com/pankod/refine"&gt;Github&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>refine</category>
      <category>adminbro</category>
      <category>react</category>
      <category>adminpanel</category>
    </item>
    <item>
      <title>Intro to Web Scraping with Selenium in Python</title>
      <author>Ander Rodriguez</author>
      <pubDate>Tue, 30 Nov 2021 09:42:59 +0000</pubDate>
      <link>https://dev.to/anderrv/intro-to-web-scraping-with-selenium-in-python-4011</link>
      <guid>https://dev.to/anderrv/intro-to-web-scraping-with-selenium-in-python-4011</guid>
      <description>&lt;p&gt;Ever heard of &lt;a href="https://en.wikipedia.org/wiki/Headless_browser"&gt;headless browsers&lt;/a&gt;? Mainly used for testing purposes, they give us an excellent opportunity for scraping websites that require Javascript execution or any other feature that browsers offer.&lt;/p&gt;

&lt;p&gt;You'll learn how to use &lt;a href="https://www.selenium.dev/documentation/webdriver/"&gt;Selenium&lt;/a&gt; and its multiple features to scrape and browser any web page. From finding elements to waiting for dynamic content to load. Modify the window size and take screenshots. Or add proxies and custom headers to avoid blocks. You can achieve all of that and more with this headless browser.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;p&gt;For the code to work, you will need &lt;a href="https://www.python.org/downloads/"&gt;python3 installed&lt;/a&gt;. Some systems have it pre-installed. After that, install Selenium, &lt;a href="https://www.google.com/chrome/"&gt;Chrome&lt;/a&gt;, and the driver for &lt;a href="https://sites.google.com/chromium.org/driver/downloads"&gt;Chrome&lt;/a&gt;. Make sure to match the browser and driver versions, Chrome 96, as of this writing.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;selenium 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Other browsers are available (Edge, IE, Firefox, Opera, Safari), and the code should work with minor adjustments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;Once set up, we will write our first test. Go to a sample URL and print its current URL and title. The browser will follow redirects automatically and load all the resources - images, stylesheets, javascript, and more.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;

&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"http://zenrows.com"&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chrome&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# https://www.zenrows.com/
&lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Web Scraping API &amp;amp; Data Extraction - ZenRows
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If your Chrome driver is not in an executable path, you need to specify it or move the driver to somewhere in the path (i.e., &lt;code&gt;/usr/bin/&lt;/code&gt;).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;chrome_driver_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'/path/to/chromedriver'&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;executable_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;chrome_driver_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# ...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You noticed that the browser is showing, and you can see it, right? It won't run headless by default. We can pass options to the driver, which is what we want to do for scraping.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ChromeOptions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headless&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# ...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#finding-elements-and-content"&gt;
  &lt;/a&gt;
  Finding Elements and Content
&lt;/h2&gt;

&lt;p&gt;Once the page is loaded, we can start looking for the information we are after. Selenium offers several ways to access elements: ID, tag name, class, XPath, and CSS selectors.&lt;/p&gt;

&lt;p&gt;Let's say that we want to search for something on Amazon by using the text input. We could use select by tag from the previous options: &lt;code&gt;driver.find_element(By.TAG_NAME, "input")&lt;/code&gt;. But this might be a problem since there are several inputs on the page. By inspecting the page, we see that it has an ID, so we change the selector: &lt;code&gt;driver.find_element(By.ID, "twotabsearchtextbox")&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;IDs probably don't change often, and they are a more secure way of extracting info than classes. The problem usually comes from not finding them. Assuming there is no ID, we can select the search form and then the input inside.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium.webdriver.common.by&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;By&lt;/span&gt;

&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://www.amazon.com/"&lt;/span&gt;

&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nb"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CSS_SELECTOR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"form[role='search'] input[type='text']"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is no silver bullet; each option is appropriate for a set of cases. You'll need to find the one that best suits your needs.&lt;/p&gt;

&lt;p&gt;If we scroll down the page, we'll see many products and categories. And a shared class that often repeats: &lt;code&gt;a-list-item&lt;/code&gt;. We need a similar function (&lt;code&gt;find_elements&lt;/code&gt; in plural) to match all the items and not just the first occurrence.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#...
&lt;/span&gt;    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_elements&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CLASS_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"a-list-item"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YwI6a30z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og9lyku5xvtuxe3oxufw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YwI6a30z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og9lyku5xvtuxe3oxufw.jpg" alt="Amazon Items" width="816" height="607"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we need to do something with the selected elements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interacting-with-the-elements"&gt;
  &lt;/a&gt;
  Interacting with the Elements
&lt;/h2&gt;

&lt;p&gt;We'll search using the input selected above. For that, we need the &lt;code&gt;send_keys&lt;/code&gt; function that will type and hit enter to send the form. We could also type into the input and then find the submit button and click on it (&lt;code&gt;element.click()&lt;/code&gt;). It is easier in this case since the &lt;code&gt;Enter&lt;/code&gt; works fine.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium.webdriver.common.keys&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Keys&lt;/span&gt;
&lt;span class="c1"&gt;#...
&lt;/span&gt;    &lt;span class="nb"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CSS_SELECTOR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"form[role='search'] input[type='text']"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Python Books'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Keys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ENTER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that the script does not wait and closes as soon as the search finishes. The logical thing is to do something afterward, so we'll list the results using &lt;code&gt;find_elements&lt;/code&gt; as above. Inspecting the result, we can use the &lt;code&gt;s-result-item&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;These items we will just select are &lt;code&gt;div&lt;/code&gt;s with several inner tags. We could take the link's &lt;code&gt;href&lt;/code&gt; values if interested and visit each item - we won't do that for the moment. But the &lt;code&gt;h2&lt;/code&gt; tags contain the book's title, so we need to select the title for each element. We can continue using &lt;code&gt;find_element&lt;/code&gt; since it will work for &lt;code&gt;driver&lt;/code&gt;, as seen before, and for any web element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# ...
&lt;/span&gt;    &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_elements&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CLASS_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"s-result-item"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;h2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TAG_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"h2"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Prints a list of around fifty items
&lt;/span&gt;
&lt;span class="c1"&gt;# Learning Python, 5th Edition ...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Don't rely too much on this approach since some tags might be empty or have no title. We should adequately implement error control for an actual use case.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#infinite-scroll"&gt;
  &lt;/a&gt;
  Infinite Scroll
&lt;/h3&gt;

&lt;p&gt;For those cases when there is an infinite scroll (Pinterest), or images are lazily loaded (Twitter), we can go down also using the keyboard. Not often used, but scroll using the space bar, "Page Down", or "End" keys is an option. And we can take advantage of that.&lt;/p&gt;

&lt;p&gt;The driver won't accept it directly. We need to find first an element like &lt;code&gt;body&lt;/code&gt; and send the keys there.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TAG_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"body"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;send_keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Keys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;END&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But there is still another problem: items will not be present just after scrolling. That brings us to the next part.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wait-for-content-or-element"&gt;
  &lt;/a&gt;
  Wait for Content or Element
&lt;/h2&gt;

&lt;p&gt;Nowadays, many websites are Javascript intense - especially when using modern frameworks like React - and do lots of XHR calls after the first load. As with the infinite scroll, all that content won't be available to Selenium. But we can manually inspect the target website and check what the result of that processing is.&lt;/p&gt;

&lt;p&gt;It usually comes down to creating some DOM elements. If those classes are unique or they have IDs, we can wait for those. We can use the &lt;code&gt;WebDriverWait&lt;/code&gt; to put the script on hold until some criteria are met.&lt;/p&gt;

&lt;p&gt;Assume a simple case where there are no images present until some XHR finishes. This instruction will return the &lt;code&gt;img&lt;/code&gt; element as soon as it appears. The driver will wait for 3 seconds and fail otherwise.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium.webdriver.support.ui&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;WebDriverWait&lt;/span&gt;
&lt;span class="c1"&gt;# ...
&lt;/span&gt;    &lt;span class="n"&gt;el&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WebDriverWait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;until&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TAG_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"img"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Selenium provides several &lt;a href="https://selenium-python.readthedocs.io/waits.html#explicit-waits"&gt;expected conditions&lt;/a&gt; that might prove valuable. &lt;code&gt;element_to_be_clickable&lt;/code&gt; is an excellent example in a page full of Javascript, since many buttons are not interactive until some actions occur.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium.webdriver.support&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;expected_conditions&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;EC&lt;/span&gt;
&lt;span class="c1"&gt;#...
&lt;/span&gt;    &lt;span class="n"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WebDriverWait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;until&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;EC&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;element_to_be_clickable&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CLASS_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'my-button'&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#screenshots-and-element-screenshots"&gt;
  &lt;/a&gt;
  Screenshots and Element Screenshots
&lt;/h2&gt;

&lt;p&gt;Be it for testing purposes or storing changes, screenshots are a practical tool. We can take a screenshot for the current browser context or a given element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# ...
&lt;/span&gt;    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save_screenshot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'page.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0AaI9LwK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0iqw6pu5auos5n2fbphv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0AaI9LwK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0iqw6pu5auos5n2fbphv.png" alt="Amazon Small Screen" width="880" height="842"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# ... 
&lt;/span&gt;    &lt;span class="n"&gt;card&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CLASS_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"a-cardui"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screenshot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"amazon_card.png"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cibb2jJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j1k0ggjivilbknylo8ry.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cibb2jJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j1k0ggjivilbknylo8ry.png" alt="Amazon Card Element" width="307" height="191"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Noticed the problem with the first image? Nothing wrong, but the size is probably not what you were expecting. Selenium loads by default in 800px by 600px when browsing in headless mode. But we can modify it to take bigger screenshots.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#window-size"&gt;
  &lt;/a&gt;
  Window Size
&lt;/h2&gt;

&lt;p&gt;We can query the driver to check the size we're launching in: &lt;code&gt;driver.get_window_size()&lt;/code&gt;, which will print &lt;code&gt;{'width': 800, 'height': 600}&lt;/code&gt;. When using GUI, those numbers will change, so let's assume that we're testing headless mode.&lt;/p&gt;

&lt;p&gt;There is a similar function - &lt;code&gt;set_window_size&lt;/code&gt; - that will modify the window size. Or we can add an options argument to the Chrome web driver that will directly start the browser with that resolution.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"--window-size=1024,768"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_window_size&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="c1"&gt;# {'width': 1024, 'height': 768}
&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_window_size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1920&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_window_size&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="c1"&gt;# {'width': 1920, 'height': 1200}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now our screenshot will be 1920px wide.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eMwSC1M9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bafmahlr7yf1e94vs9wx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eMwSC1M9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bafmahlr7yf1e94vs9wx.png" alt="Amazon Big Screen" width="768" height="373"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#custom-headers"&gt;
  &lt;/a&gt;
  Custom Headers
&lt;/h2&gt;

&lt;p&gt;The options mentioned above provide us with a crucial mechanism for web scraping: custom headers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#user-agent"&gt;
  &lt;/a&gt;
  User Agent
&lt;/h3&gt;

&lt;p&gt;One of the essential headers to avoid blocks is User-Agent. Selenium will provide an accurate one by default, but you can change it for a custom one. Remember that there are &lt;a href="https://www.zenrows.com/blog/stealth-web-scraping-in-python-avoid-blocking-like-a-ninja?utm_source=devto&amp;amp;utm_medium=blog&amp;amp;utm_campaign=selenium_python"&gt;many techniques to crawl and scrape without blocks&lt;/a&gt; and we won't cover them all here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;user_agent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36'&lt;/span&gt;
&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'user-agent=%s'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;user_agent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TAG_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"body"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# UA matches the one hardcoded above, v93
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#other-important-headers"&gt;
  &lt;/a&gt;
  Other Important Headers
&lt;/h3&gt;

&lt;p&gt;As a quick summary, changing the user-agent might be counterproductive if we forget to adjust some other headers. For example, the &lt;code&gt;sec-ch-ua&lt;/code&gt; header usually sends a version of the browser, and it must much the user-agent's one: &lt;code&gt;"Google Chrome";v="96"&lt;/code&gt;. But some older versions do not send that header at all, so sending it might also be suspicious.&lt;/p&gt;

&lt;p&gt;The problem is Selenium does not support adding headers. A third-party solution like &lt;a href="https://github.com/wkeeling/selenium-wire"&gt;Selenium Wire&lt;/a&gt; might solve it. Install it with &lt;code&gt;pip install selenium-wire&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It will allow us to intercept requests, among other things, and modify the headers we want or add new ones. When changing, we must delete the original one first to avoid sending duplicates.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;seleniumwire&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;

&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"http://httpbin.org/anything"&lt;/span&gt;
&lt;span class="n"&gt;user_agent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36'&lt;/span&gt;
&lt;span class="n"&gt;sec_ch_ua&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'"Google Chrome";v="93", " Not;A Brand";v="99", "Chromium";v="93"'&lt;/span&gt;
&lt;span class="n"&gt;referer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'https://www.google.com'&lt;/span&gt;

&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ChromeOptions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headless&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;interceptor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'user-agent'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="c1"&gt;# Delete the header first
&lt;/span&gt;    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'user-agent'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_agent&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'sec-ch-ua'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sec_ch_ua&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'referer'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;referer&lt;/span&gt;

&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request_interceptor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;interceptor&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TAG_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"body"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#proxy-to-change-the-ip"&gt;
  &lt;/a&gt;
  Proxy to change the IP
&lt;/h2&gt;

&lt;p&gt;As with the headers, Selenium has limited support for proxies. We can add a proxy without authentication as a driver option. For testing, we'll use &lt;a href="https://free-proxy-list.net/"&gt;Free Proxies&lt;/a&gt; although they are not reliable, and the one below probably won't work for you at all. They are usually short-lived.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;
&lt;span class="c1"&gt;# ...
&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"http://httpbin.org/ip"&lt;/span&gt;
&lt;span class="n"&gt;proxy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'85.159.48.170:40014'&lt;/span&gt; &lt;span class="c1"&gt;# free proxy
&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'--proxy-server=%s'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;proxy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TAG_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"body"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# "origin": "85.159.48.170"
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more complex solutions or ones in need of auth, Selenium Wire can help us again. We need a second set of options in this case, where we will add the proxy server we want to use.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="n"&gt;proxy_pass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"YOUR_API_KEY"&lt;/span&gt;
&lt;span class="n"&gt;seleniumwire_options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;'proxy'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;"http"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"http://&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;proxy_pass&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;:@proxy.zenrows.com:8001"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'verify_ssl'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;seleniumwire_options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;seleniumwire_options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TAG_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"body"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For proxy servers that don't rotate IPs automatically, &lt;code&gt;driver.proxy&lt;/code&gt; can be overwritten. From that point on, all requests will use the new proxy. This action can be done as many times as necessary. For convenience and reliability, we advocate for &lt;a href="https://www.zenrows.com/?utm_source=devto&amp;amp;utm_medium=blog&amp;amp;utm_campaign=selenium_python"&gt;Smart Rotating Proxies&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#...
&lt;/span&gt;    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Initial proxy
&lt;/span&gt;    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;proxy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;'http'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'http://user:pass@1.2.3.4:5678'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# New proxy
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#blocking-resources"&gt;
  &lt;/a&gt;
  Blocking Resources
&lt;/h2&gt;

&lt;p&gt;For performance, saving bandwidth, or avoiding tracking, blocking some resources might prove crucial when scaling scraping.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;

&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://www.amazon.com/"&lt;/span&gt;

&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ChromeOptions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headless&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;experimental_options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"prefs"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;"profile.managed_default_content_settings.images"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save_screenshot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'amazon_without_images.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AxSASfYp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bbgp265hoan1bxdnlyv9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AxSASfYp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bbgp265hoan1bxdnlyv9.png" alt="Amazon Without Images" width="768" height="373"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We could even go a step further and avoid loading almost any type. Careful with this since blocking Javascript would mean no AJAX calls, for example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;experimental_options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"prefs"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;"profile.managed_default_content_settings.images"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"profile.managed_default_content_settings.stylesheets"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"profile.managed_default_content_settings.javascript"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"profile.managed_default_content_settings.cookies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"profile.managed_default_content_settings.geolocation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"profile.default_content_setting_values.notifications"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#intercepting-requests"&gt;
  &lt;/a&gt;
  Intercepting Requests
&lt;/h3&gt;

&lt;p&gt;Once again, thanks to Selenium Wire, we could decide programmatically over requests. It means that we can effectively block some images while allowing others. And we also can block domains using &lt;code&gt;exclude_hosts&lt;/code&gt; or allow only specific requests based on URLs matching against a regular expression with &lt;code&gt;driver.scopes&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;interceptor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Block PNG and GIF images, will show JPEG for example
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endswith&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;'.png'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'.gif'&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request_interceptor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;interceptor&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#execute-javascript"&gt;
  &lt;/a&gt;
  Execute Javascript
&lt;/h2&gt;

&lt;p&gt;The last Selenium feature we want to mention is executing Javascript. Some things are easier done directly in the browser, or we want to check that it worked correctly. We can &lt;code&gt;execute_script&lt;/code&gt; passing the JS code we want to be executed. It can go without params or with elements as params.&lt;/p&gt;

&lt;p&gt;We can see both cases in the examples below. There is no need for params to get the User-Agent as the browser sees it. That might prove helpful to check that the one sent is being modified correctly in the &lt;code&gt;navigator&lt;/code&gt; object since some security checks might raise red flags otherwise. The second one will take an &lt;code&gt;h2&lt;/code&gt; as an argument and return its left position by accessing &lt;code&gt;getClientRects&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;agent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute_script&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"return navigator.userAgent"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;agent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Mozilla/5.0  ... Chrome/96 ...
&lt;/span&gt;
    &lt;span class="n"&gt;header&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CSS_SELECTOR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"h2"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;headerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute_script&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;'return arguments[0].getClientRects()[0].left'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;headerText&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 242.5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Selenium is a valuable tool with many applications, but you have to take advantage of them in your way. Apply each feature in your favor. And many times, there are several ways of arriving at the same point; look for the one that helps you the most - or the easiest one.&lt;/p&gt;

&lt;p&gt;Once you get the handle, you'll want to grow your scraping and get more pages. There is where other challenges might appear: &lt;a href="https://www.zenrows.com/blog/mastering-web-scraping-in-python-crawling-from-scratch?utm_source=devto&amp;amp;utm_medium=blog&amp;amp;utm_campaign=selenium_python"&gt;crawling at scale&lt;/a&gt; and &lt;a href="https://www.zenrows.com/blog/stealth-web-scraping-in-python-avoid-blocking-like-a-ninja?utm_source=devto&amp;amp;utm_medium=blog&amp;amp;utm_campaign=selenium_python"&gt;blocks&lt;/a&gt;. Some tips above will help you: check the headers and proxy sections. But also be aware that crawling at scale is not an easy task. Please don't say we didn't warn you 😅&lt;/p&gt;

&lt;p&gt;I hope you leave with an understanding of how Selenium works in Python (it goes the same for other languages). An important topic that we did not cover is when Selenium is necessary. Because many times you can save time, bandwidth, and server performance by scraping without a browser. Or you can contact us, and we'll be delighted to help you crawl, scrape and scale whatever you need!&lt;/p&gt;

&lt;p&gt;Thanks for reading! Did you find the content helpful? Please, spread the word and share it. 👈&lt;/p&gt;




&lt;p&gt;Originally published at &lt;a href="https://www.zenrows.com/blog/web-scraping-with-selenium-in-python?utm_source=devto&amp;amp;utm_medium=blog&amp;amp;utm_campaign=selenium_python"&gt;https://www.zenrows.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Monolithic and microservices? Which architecture is better</title>
      <author>Adamo Software</author>
      <pubDate>Tue, 30 Nov 2021 09:29:35 +0000</pubDate>
      <link>https://dev.to/adamodigitalco/monolithic-and-microservices-which-architecture-is-better-936</link>
      <guid>https://dev.to/adamodigitalco/monolithic-and-microservices-which-architecture-is-better-936</guid>
      <description>&lt;p&gt;&lt;em&gt;Monolithic and microservices are basic architectures for software design and development. Comparing microservices and monolithic is to define which fits your company.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In recent years, microservices architecture has become so common for its tangible benefits to software developers. These benefits may include an increase in flexibility, scalability, etc. &lt;/p&gt;

&lt;p&gt;Nowadays, high-tech companies such as Netflix, Google, Amazon, and other firms have successfully shifted from monolithic to microservice architecture. Moreover, some corporations consider applying the microservice software architecture as a great way to boost their growth. &lt;/p&gt;

&lt;p&gt;Monolithic architecture, however, is a model for developing a &lt;a href="https://adamosoft.com/our-services"&gt;software solution.&lt;/a&gt; The applications of the monolithic software architecture tend to go down due to codebases, adopting new technologies, scaling, deployment, etc. Thus, is it worth it for businesses to switch the software system from a monolithic to microservices? Whether developing a microservices architecture will help you to reach business goals or not. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;This article will give you an overview of monolithic and microservices and compare these software architectures to see which is suitable for your business.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#an-introduction-to-monolithic-and-microservices"&gt;
  &lt;/a&gt;
  An introduction to monolithic and microservices
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#monolithic-architecture"&gt;
  &lt;/a&gt;
  Monolithic architecture
&lt;/h3&gt;

&lt;p&gt;Monolithic architecture is a conventional approach to build software architecture with a single and indivisible element. This &lt;a href="https://adamosoft.com/our-expertise"&gt;technology software solution&lt;/a&gt; usually includes a customer-side application, a server-side interface, and a database. &lt;/p&gt;

&lt;p&gt;These elements will unite all functions that are controlled and served in a place. Regarding monolithic applications, all functionalities of a project appear in a single codebase. People design monolithic applications in different layers such as presentation, service, and persistence, and deploy that codebase in a single file.  &lt;/p&gt;

&lt;p&gt;Monolithic &lt;a href="https://adamosoft.com/blog/mobile-app-architecture/"&gt;applications architecture&lt;/a&gt; shares a large codebase and lacks modularity. If software developers want to change anything, they have to access the same codebase. Thus, software developers will make changes in the whole stack at once. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#benefits-of-monolithic-software-architecture"&gt;
  &lt;/a&gt;
  Benefits of monolithic software architecture
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Less cross-cutting concerns:&lt;/strong&gt; Cross-cutting concerns affect the whole monolithic application regarding logging, handling and performance monitoring. When a project is running, the area of functionality focuses on only an application, making it easier to solve it. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Easier for &lt;a href="https://adamosoft.com/"&gt;software developers&lt;/a&gt; to test:&lt;/strong&gt; Monolithic application is easy to debug and test since it’s a single indivisible element. &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Simple to deploy and develop:&lt;/strong&gt; Between monolithic and microservice, the monolithic architecture is easier to deploy since you don’t have to deal with many deployments, just one file. Besides, this software architecture is a standard way to build software when comparing monolithic and microservice. Any &lt;a href="https://adamosoft.com/about-us"&gt;software developer&lt;/a&gt; has the knowledge and capabilities to develop a monolithic application architecture. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#drawbacks-of-monolithic-application-architecture"&gt;
  &lt;/a&gt;
  Drawbacks of monolithic application architecture
&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Understanding:&lt;/strong&gt;&lt;/em&gt; Between monolithic and microservice, the monolithic architecture seems too hard to understand and manage when scaling up. Software developers need to redeploy the whole application, even a small change. For example, if any developer wants to join the project, it’s hard to understand the logic of existing applications, even for a single functionality. Furthermore, bug tracking and fixing are hard to handle when the monolithic architecture application becomes big and fast development.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Making changes:&lt;/em&gt;&lt;/strong&gt; When teams want to make changes for this project, they will face some difficulties. It’s hard to execute changes in a large and complicated application with tight coupling. Any change will affect the whole application; thus, it requires thorough coordination from team members. That will lead to the overall process lasting much longer than usual. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Scalability:&lt;/strong&gt;&lt;/em&gt; Developers cannot scale indivisible components independently, only the whole monolithic application. If a part of the application is handling traffic, the team needs to deploy the application on many servers. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;New software technology barriers:&lt;/em&gt;&lt;/strong&gt; Monolithic architecture applications will get problems when adopting new technologies since &lt;a href="https://adamosoft.com/our-team"&gt;software engineers&lt;/a&gt; have to write the application again. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#microservices-architecture"&gt;
  &lt;/a&gt;
  Microservices architecture
&lt;/h3&gt;

&lt;p&gt;Microservices architecture is an approach for &lt;a href="https://adamosoft.com/website-development"&gt;software development&lt;/a&gt; where an application divides into different components. With each element, software engineers will develop, package and deploy in an individual process. So all services feature their logic, the database and carry out distinctive functions. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This microservices architecture can communicate through mechanisms such as HTTP REST APIs. These different services in a microservices architecture have to write in different programming languages. Between monolithic and microservice, the microservices architecture has more benefits compared to the other. Microservice architecture has an impact on the relationship between the software application and the database. &lt;/p&gt;

&lt;p&gt;Each application will have its database rather than share a single database with other microservices architecture. So it often leads to the duplication of some data; however, it’s important if you want to take advantage of microservices architecture. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#principles-of-microservices-architecture"&gt;
  &lt;/a&gt;
  Principles of microservices architecture
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Taking single responsibility:&lt;/strong&gt; Between monolithic and microservice, single responsibility is one of the most fundamental principles of microservice architecture. It features a single unit, even a method or a class, microservice architecture will take its responsibility. Each microservice architecture takes a single responsibility and also provides a distinctive functionality. The database in a microservice architecture is decentralized and each microservice owns a unique database. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Developing around business capabilities:&lt;/strong&gt; There is a technology that will fit best for executing a unique functionality. When comparing monolithic and microservice, applying monolithic architecture is a big drawback. Since software developers can’t use different technologies for each functionality, it has to compromise in specific areas. Nevertheless, a microservice can easily adopt a new technology stack or &lt;a href="https://adamosoft.com/website-development"&gt;backend database storage&lt;/a&gt;. That technology is useful for solving business problems. It means the microservice architecture can utilize different technology depending on business requirements. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Ready to deal with failure:&lt;/strong&gt; Comparing monolithic and microservice, this microservice designs for failure cases. It must take advantage of this &lt;a href="https://adamosoft.com/our-services"&gt;software solution&lt;/a&gt;. Fixing one microservice will not affect the whole application, so functionalities remain easily accessible to users. If there is a failure in one module, it results in the collapse of the whole application when applying monolithic architecture. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#advantages-of-microservices-software-architecture"&gt;
  &lt;/a&gt;
  Advantages of microservices software architecture
&lt;/h3&gt;

&lt;p&gt;When comparing monolithic and microservice, microservices can solve the drawbacks of monolithic architecture.  &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#independent-elements"&gt;
  &lt;/a&gt;
  Independent elements:
&lt;/h4&gt;

&lt;p&gt;Software developers deploy and update related services independently, giving more flexibility. Moreover, if you want to bug one microservice, it has just affected a particular area in the application. It’s easy to add features to a microservices architecture when comparing monolithic and microservice. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#easy-to-understand"&gt;
  &lt;/a&gt;
  Easy to understand:
&lt;/h4&gt;

&lt;p&gt;Classifying into smaller and simpler elements, microservices architecture is easier to manage and understand. Software developers need to focus on the service related to the business goals. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#having-better-scalability"&gt;
  &lt;/a&gt;
  Having better scalability:
&lt;/h4&gt;

&lt;p&gt;Between monolithic and microservice, the microservice application will scale independently. Thus, the whole process is much more cost-saving and time-effective than using monolithic architecture. When comparing monolithic and microservice applications, monolithic architecture has to be scaled if required. &lt;/p&gt;

&lt;p&gt;Additionally, every monolithic application software has limitations regarding scalability. Therefore, the more users you have, the more troubles you have with using monolithic architecture. Many firms end up rebuilding their monolithic application software. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages-of-a-microservices-software"&gt;
  &lt;/a&gt;
  Disadvantages of a microservices software
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Complexity:&lt;/strong&gt; Between monolithic and microservice, microservice architecture requires more complexity. As a microservice architecture is a distributed software application, developers have to select and build connections amongst modules. Additionally, each microservice software architecture consists of a unique service, so software developers deploy them independently. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Being handled carefully:&lt;/strong&gt; Between monolithic and microservice, this microservice software architecture is a complicated system. So &lt;a href="https://adamosoft.com/dedicated-software-development-team"&gt;skilled software developers&lt;/a&gt; have to connect all of them carefully. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Requiring cross-cutting issues:&lt;/strong&gt; When developing microservice, &lt;a href="https://adamosoft.com/blog/how-to-hire-software-developers-in-vietnam/"&gt;software developers&lt;/a&gt; solve cross-cutting concerns comparing monolithic and microservice. They might include logging, metrics, health checks, etc. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Testing &amp;amp; checking:&lt;/strong&gt; Between monolithic and microservice, the microservice structure makes the testing and checking processes more complicated and harder.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#when-to-use-monolithic-and-microservices-architecture"&gt;
  &lt;/a&gt;
  When to use monolithic and microservices architecture
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#monolithic-application"&gt;
  &lt;/a&gt;
  Monolithic application
&lt;/h3&gt;

&lt;p&gt;Monolithic software architecture may apply in those projects which don’t require a real-time response. It also can withstand downtime in &lt;a href="https://adamosoft.com/blog/web-design-and-web-developments-are-they-different/"&gt;web development&lt;/a&gt;. So these projects will set limitations to a size. If &lt;a href="https://adamosoft.com/blog/clutch-recognizes-adamo-software-amongst-vietnams-top-developers-for-2020/"&gt;software developers&lt;/a&gt; want to expand the size of web applications, microservice architecture can handle it. Web applications use monolithic software architecture. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#microservices-application"&gt;
  &lt;/a&gt;
  Microservices application
&lt;/h3&gt;

&lt;p&gt;Microservice architecture is often used in large projects which require either real-time responses or maybe cannot withstand downtime. It can lead to abnormal spikes sometimes. For example, projects can use microservice software architecture such as TV networks, eCommerce platforms, food delivery apps, etc. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#differences-between-monolithic-and-microservices-architecture"&gt;
  &lt;/a&gt;
  Differences between monolithic and microservices architecture
&lt;/h2&gt;

&lt;p&gt;A website development application has two fundamental components regarding a relational database and a server-side application. First of all, the server-side application does the heavy lifting of whatever operations occur. It’s responsible for dealing with the HTTP requests from customers, retrieving data, updating the databases, and giving  HTML responses to the customers. &lt;/p&gt;

&lt;p&gt;Monolithic architecture is a conventional way to build web applications. All business logic to serve clients’ requests will package into a single process. For instance, if the web application is in Java, developers will package data in a war file, deploy it to a tomcat or a jetty server. If we use Python Django or Rails, the same web application has to deploy the same structure. &lt;/p&gt;

&lt;p&gt;Now let’s check how &lt;a href="https://adamosoft.com/blog/an-introduction-to-microservices/"&gt;microservices &lt;/a&gt;architecture can handle all drawbacks of monolithic architecture. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#monolithic-to-microservices-which-software-architecture-is-suitable-for-your-business-solutions"&gt;
  &lt;/a&gt;
  Monolithic to microservices: Which software architecture is suitable for your business solutions?
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Features&lt;/th&gt;
&lt;th&gt;Monolithic architecture&lt;/th&gt;
&lt;th&gt;Microservice architecture&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Basic&lt;/td&gt;
&lt;td&gt;Monolithic architecture with one codebase builds as large distribution systems.&lt;/td&gt;
&lt;td&gt;Microservice architecture creates many small independent modules that fit business functions.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Scale&lt;/td&gt;
&lt;td&gt;It requires an entire application to scale although only one part of the distribution system is scaled.&lt;/td&gt;
&lt;td&gt;Scaling of each element is possible since each will be decoupled to different services. Software developers can scale the application horizontally and individually.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. Deployment&lt;/td&gt;
&lt;td&gt;It’s quite difficult since a small change in the application will require the deployment of the whole application&lt;/td&gt;
&lt;td&gt;Continuing deployment is possible since each service is separate from the other, so deployment as well.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. Database&lt;/td&gt;
&lt;td&gt;It’s a shareable database&lt;/td&gt;
&lt;td&gt;Each module and service will have its database&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5. Adopting new technologies&lt;/td&gt;
&lt;td&gt;It’s hard to change programming languages or technologies since all of them depend on each other.&lt;/td&gt;
&lt;td&gt;It’s easy to change framework, technology, or language as each module is independent.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#applying-monolithic-architecture"&gt;
  &lt;/a&gt;
  Applying  monolithic architecture
&lt;/h3&gt;

&lt;p&gt;Between monolithic and microservice, each of them will have its advantages and disadvantages. So there will be different projects that will fit with different kinds of software architectures depending on many factors. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Small project: If you’re a startup or working on a small project, you don’t need to solve the complexity of microservice architecture. Comparing monolithic and microservice, the monolithic application can satisfy all business needs. &lt;/li&gt;
&lt;li&gt;Simple web development: Small applications will not require much business logic and large scalability, so choosing a monolithic architecture is your best choice.
&lt;/li&gt;
&lt;li&gt;There’s no expertise on microservice: Between monolithic and microservice, the microservice application requires knowledge. If you apply microservice software architecture without any technical expertise, it will waste your resources. &lt;/li&gt;
&lt;li&gt;Fast launch: If you want to develop a &lt;a href="https://adamosoft.com/mobile-application-development"&gt;web or software application&lt;/a&gt; and launch it right away, the monolithic architecture is your best option. It will work well with fewer initial resources and validate your business ideas. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#using-microservices-architecture"&gt;
  &lt;/a&gt;
  Using microservices architecture
&lt;/h3&gt;

&lt;p&gt;Microservice expertise/knowledge: Developing a &lt;a href="https://adamosoft.com/blog/microservice-architecture/"&gt;microservice software architecture&lt;/a&gt; is extremely risky if you don’t have any support from experts. Besides, knowing software architecture is not enough. You have to get &lt;a href="https://adamosoft.com/devops-services-and-solutions"&gt;DevOps &lt;/a&gt;and Containers knowledge as web development concepts are associated with microservices. Domain modeling knowledge is also important. &lt;/p&gt;

&lt;p&gt;A complicated and scalable application: A microservice architecture scales and adds new capabilities to your web application. Thus, if you want to develop a big application with complicated customer journeys, the microservice architecture is the best option. &lt;/p&gt;

&lt;p&gt;Enough human resources: Between monolithic and microservice, the microservice will require large human resources. Since a project using microservice architecture includes many teams being responsible for many services, engineering skills from the software developer team is a must. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Closing&lt;/strong&gt;&lt;br&gt;
Which software architecture is better between  monolithic and microservice? Each software architecture has its own advantages and disadvantages for every software system distribution. Monolithic architecture fits with a small application and does not have much logic and modules. Meanwhile, microservice architecture fits best with big and complex applications with many things. &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>microservices</category>
      <category>architecture</category>
      <category>beginners</category>
    </item>
    <item>
      <title>🌎 Why you should prepare your project for localization (i18n) right now</title>
      <author>Jan Cizmar</author>
      <pubDate>Tue, 30 Nov 2021 09:22:49 +0000</pubDate>
      <link>https://dev.to/jancizmar/why-you-should-prepare-your-project-for-localization-i18n-right-now-38m4</link>
      <guid>https://dev.to/jancizmar/why-you-should-prepare-your-project-for-localization-i18n-right-now-38m4</guid>
      <description>&lt;p&gt;We always recommend preparing projects for localization as soon as possible. A lot of people, we are talking with, say that they are in early stage of development of their app and localization 🌎 is something they don't need right now.&lt;/p&gt;

&lt;p&gt;Setting localization aside is not a good idea, and I am going to tell you why.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#its-boring-and-repetitive-task"&gt;
  &lt;/a&gt;
  It's boring and repetitive task ⌛🔄
&lt;/h2&gt;

&lt;p&gt;When localizing your application with a lot of strings already in code, the localization is going to be very painful 🩸 task. In that case you will have to go through all your code and wrap all the strings in the code with some component or method, depending on language or framework you use. This could be hundreds or thousands of strings to wrap and localization keys to come up with.&lt;/p&gt;

&lt;p&gt;See this example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;My beautiful App&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Like it!&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have a tiny little app with a headline and button, whatever the button does, it has a text in it. It has a text to be translated! 😎 To translate it we have to transform it to something like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;T&lt;/span&gt; &lt;span class="na"&gt;key=&lt;/span&gt;&lt;span class="s"&gt;"my-app-headline"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;My beautiful App&lt;span class="nt"&gt;&amp;lt;/T&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;T&lt;/span&gt; &lt;span class="na"&gt;key=&lt;/span&gt;&lt;span class="s"&gt;"button-like"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Like&lt;span class="nt"&gt;&amp;lt;/T&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Think of the &lt;code&gt;T&lt;/code&gt; element as something which is replacing the text with translated value when language changes.&lt;/p&gt;

&lt;p&gt;Now imagine, you have a code with thousands of strings like this you have to go through and wrap every text with this kind of code. It's very hard to do something like this with find &amp;amp; replace tool, since you have to come up with the nice semantic key.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#missing-strings"&gt;
  &lt;/a&gt;
  Missing strings 🎯
&lt;/h2&gt;

&lt;p&gt;Going through your codebase and replacing all the strings is not that easy as it seems, there could be translations in the element content, in the attributes, it could be generated by the logic and provided though variables or function calls.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"headline"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;headline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;headline&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isTheAppCool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;My cool App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;My App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What now? 🙈 While this code is provided in the script part, it's very simple to miss it and provide imperfect experience to your users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#losing-context"&gt;
  &lt;/a&gt;
  Losing context
&lt;/h2&gt;

&lt;p&gt;When translating the application to different languages, you'll probably reach a point, when you would like translators to translate your app. So you take localization data from your app and send them to translators. Then you expect perfect results, since you don't understand the foreign language. That's the reason, why you pay for translator, isn't it?&lt;/p&gt;

&lt;p&gt;So you will provide file like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"my-app-headline"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"My beautiful App"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"button-like"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Like"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But the translator don't have any context information about the texts. Where is on the page? What's the purpose of the button? What is the gender of the objects? Is this noun or verb?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-you-do-better"&gt;
  &lt;/a&gt;
  How can you do better?
&lt;/h2&gt;

&lt;p&gt;Simple. Just integrate localization as soon as possible. From the beginning prepare your app to be localized. As a Tolgee founder I would recommend you to use out solution 😁, but you can use any other library suitable for your framework or language.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React: &lt;code&gt;react-intl&lt;/code&gt;, &lt;code&gt;react-i18next&lt;/code&gt; or &lt;a href="https://tolgee.io/integrations/react"&gt;&lt;code&gt;@tolgee/react&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Vue: &lt;code&gt;vue-i18next&lt;/code&gt;, &lt;code&gt;vue-intl&lt;/code&gt; or &lt;a href="https://tolgee.io/integrations/vue"&gt;&lt;code&gt;@tolgee/vue&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Angular: &lt;code&gt;@angular/localize&lt;/code&gt; (native), &lt;code&gt;angular-i18next&lt;/code&gt;, &lt;a href="https://tolgee.io/integrations/angular"&gt;&lt;code&gt;@tolgee/angular&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Svelte: &lt;code&gt;svelte-i18n&lt;/code&gt;, &lt;a href="https://tolgee.io/integrations/svelte"&gt;&lt;code&gt;@tolgee/svelte&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While using those tools, try to also store context of the keys in form of comments or screenshots, which you can provide to translators in the future.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-can-tolgee-help"&gt;
  &lt;/a&gt;
  How can Tolgee 🐁 help?
&lt;/h3&gt;

&lt;p&gt;Preparing your app to be localized is always good idea and with Tolgee you can do it without much time cost, since your only task is to wrap the string with T component come up with a nice translation key. Then you can just go to your app and translate your string with &lt;code&gt;ALT + Click&lt;/code&gt;. You can also automatically generate a screenshot from your App to provide the context to your future translators. If you would like to learn more about it, check &lt;a href="https://tolgee.io/docs"&gt;our documentation 📚&lt;/a&gt; or choose an integration library above and follow the tutorials. 📖 &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tl-dr"&gt;
  &lt;/a&gt;
  TL; DR
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Prepare your app for localization now 😎&lt;/li&gt;
&lt;li&gt;You'll avoid untranslated texts 🥳&lt;/li&gt;
&lt;li&gt;Your page will be translated correctly ✅&lt;/li&gt;
&lt;li&gt;You will not die due to bore of the repetitive replacing your strings ⚰️⚱️&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you like what we do, please star our GitHub projects. 🙏&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/tolgee/server"&gt;Tolgee Server&lt;/a&gt; ⭐&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tolgee/tolgee-js"&gt;Tolgee JS&lt;/a&gt; ⭐&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Is Web Scraping Legal?</title>
      <author>Stefan Smiljkovic</author>
      <pubDate>Tue, 30 Nov 2021 08:57:26 +0000</pubDate>
      <link>https://dev.to/shtefcs/is-web-scraping-legal-2i37</link>
      <guid>https://dev.to/shtefcs/is-web-scraping-legal-2i37</guid>
      <description>&lt;h2&gt;
  &lt;a href="#is-web-scraping-legal"&gt;
  &lt;/a&gt;
  Is Web Scraping Legal?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DP8b6MSC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4000/0%2AEqYBMStn7eSa68tU" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DP8b6MSC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4000/0%2AEqYBMStn7eSa68tU" alt="" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ranging from unethical hacking, identity theft, internet scams, social engineering to many more, we hear and see regulations outrightly trying to clamp down all forms of crime and swindling on the net. But the stance of the internet law on the legality of web scraping remains yet controversial.&lt;/p&gt;

&lt;p&gt;Since you might also find yourself scraping data from the web, either now or in the future, for business purposes or personal use, is web scraping legal? You’ll soon find out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#notable-historical-legal-issues-of-web-scraping"&gt;
  &lt;/a&gt;
  Notable Historical Legal Issues of Web Scraping
&lt;/h2&gt;

&lt;p&gt;Most of the past legal face-offs between companies on web scraping ended up leaving traces of mind puzzles. With the court twists involved, if not thoroughly argued, a claimant might even end up guilty despite suing others for scraping their website.&lt;/p&gt;

&lt;p&gt;There have been a few cases where we can draw some light on the legality of web scraping. So a logical analysis of such will help you to understand the legal stance of the subject. Before moving further, let’s take a look at some of these cases.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#linkedin-vs-hiq-data-scraping-legal-faceoff"&gt;
  &lt;/a&gt;
  LinkedIn VS HiQ Data Scraping Legal Face-off
&lt;/h3&gt;

&lt;p&gt;Before the Supreme court granted Linkedin a petition for a review and reopened the case again in June 2021, the company had previously lost its web scraping lawsuit against HiQ in 2019. The Ninth Circuit would’ve probably ruled in favor of LinkedIn if the data scraped by HiQ was private.&lt;/p&gt;

&lt;p&gt;But after maintaining that HiQ didn’t violate the Computer Fraud and Abuse Act (CFAA) by scraping LinkedIn’s publicly available data, it seemed there wasn’t a case for LinkedIn after all. While LinkedIn would later file certiorari, the court ruling was a win, at least, for those who depend on web scraping for their business.&lt;/p&gt;

&lt;p&gt;Nonetheless, does this mean you can scrape a website regardless of the conditions surrounding it? Obviously no. Next is an example of what might happen when you collect the wrong type of data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bidders-edges-obsession-over-ebays-auction-listings"&gt;
  &lt;/a&gt;
  Bidder’s Edge’s Obsession Over eBay’s Auction Listings
&lt;/h3&gt;

&lt;p&gt;Although it occurred earlier than the case we discussed previously, Bidder’s Edge’s 1999 scraping of eBay (which is yet, the first alleged illegal use of web scraping) took a turn from the one you just read.&lt;/p&gt;

&lt;p&gt;There’d been a prior agreement between both parties, with eBay agreeing to allow Bidder’s Edge to list its auctions on its database. This agreement didn’t work out due to technical issues. But eBay still granted them some time lease and allowed Bidder’s Edge to list eBay’s auctions for 90 days, after which it sought to license Bidder’s Edge’s activities. Bidder’s Edge turned down this offer.&lt;/p&gt;

&lt;p&gt;But it would later appear that Bidder’s Edge was a little obsessed with eBay’s products. So it went ahead to list eBay’s products on its website despite stay-off notices. To intensify its efforts blocking Bidder’s Edge’s scraping, eBay blocked the website’s IP from accessing its resources. But the scraper continued to harvest eBay’s data by evasions via proxy servers. Accessing a database this way appeared malicious. And later, in the early days of December 1999, eBay filed a lawsuit against Bidder’s Edge.&lt;/p&gt;

&lt;p&gt;And after claiming that it accessed eBay’s property unauthorized and that its activities infringed on the intellectual property of eBay, the court handed an injunction preventing Bidder’s Edge from further scraping eBay.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#facebooks-web-scraper-clampdown-quest"&gt;
  &lt;/a&gt;
  Facebook’s Web Scraper Clampdown Quest
&lt;/h3&gt;

&lt;p&gt;With a couple of data breach histories, Facebook has faced several backlashes for being careless with users’ data. And when it came to web scraping this social media, Cambridge Analytica didn’t stop on a small number when it swept Facebook massively in 2016 in a bid to identify undecided voters. Although the scraping activity didn’t technically impact the smooth running of Facebook or any of its services, Congress held that Cambridge Analytica misused the collected data. And Facebook would later be fined $5 billion in 2019 by the Federal Trade Commission for its alleged role in violating its users’ privacy.&lt;/p&gt;

&lt;p&gt;Thus, we see a punishment served due to misuse of privately available data rather than the act itself.&lt;/p&gt;

&lt;p&gt;Cambridge Analytica also had its share of the deal. And it was somewhat perceived shady. The company later filed for a Chapter 7 bankruptcy in 2018 after claiming that it had lost many of its political clients.&lt;/p&gt;

&lt;p&gt;From the hard lesson learned, Facebook would later go all out and take legal actions against some web scrapers.&lt;/p&gt;

&lt;p&gt;This perhaps brought to the limelight Facebook’s case in 2020, against two Ukrainian folks that deceptively scraped its users’ data using browser extensions and quiz apps. One would’ve thought this was another example that shows that you could get served for gathering data from the wrong place using the wrong method. Although the court ruled in favor of Facebook in both cases, it didn’t punish the violators beyond bearable. The court, however, held that the activities of these extensions were malicious and recommended a permanent injunction against the defendants.&lt;/p&gt;

&lt;p&gt;“Malicious” was an appropriate description of the activity of these scrapers, as they collected personal data from Facebook users without their discretion.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-is-web-scraping-illegal"&gt;
  &lt;/a&gt;
  When Is Web Scraping Illegal?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o7iX8Y4u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4000/0%2Asd6JFILdrJ_DteGK" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o7iX8Y4u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4000/0%2Asd6JFILdrJ_DteGK" alt="" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As earlier mentioned, the legality of web scraping looks like a dead-end since no regulations are binding it. So it appears that you can scrape the web all you want after all. And looking logically at the past salient cases of data scraping, it’s clear that web scraping isn’t illegal. But your technical approach and how you use the collected data tell a lot. Nonetheless, adequately describing and deciphering the conditions surrounding each scraping activity reveals more about its legality. For instance, as with any policy violation, the law had in the past met screen scraping activities with sanctions due to violation of terms.&lt;/p&gt;

&lt;p&gt;In essence, while we’ve maintained that screen scraping is not illegal, you can make it illegal when you do it wrongly or maliciously. Even if you mean no harm, some tech companies frown at web scraping. And even if they allow you to scrape them, some tell you what and what you shouldn’t do with the data you scrape. Violating such terms might land you a legal injunction. So watch out for red flags. Then read data privacy terms before taking data from any website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-theft-vs-data-scraping-whats-the-difference"&gt;
  &lt;/a&gt;
  Data Theft VS Data Scraping: What’s the Difference?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AWcrikvF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4000/0%2AXDaymdXtCSVCVxYH" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AWcrikvF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4000/0%2AXDaymdXtCSVCVxYH" alt="" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Data theft is often a consequence of many breaches that happen on the internet. When this happens, it hands the affected website a lowered credibility. Worse, there have even been a few cases where stolen data surfaced on the Dark Web.&lt;/p&gt;

&lt;p&gt;Web scraping in the real sense is wide. But basically, it often involves screen scraping, which is the collection of pre-rendered information from the front end. Such activity is unlikely to affect a website’s technical angle. Plus, data scraped this way are often unprotected, and anyone can collect them.&lt;/p&gt;

&lt;p&gt;But in some cases, a data scraper may also scrape a database directly through data feeds monitoring. Such an approach to data collection, when done formally, is often backed up by an agreement between the scraper and the source. And in cases where there isn’t an agreement between both parties, such data must’ve been available for public use. Otherwise, if you’re unauthorized to connect to a database, it may become shady and hacky when you try to retrieve real-time data from it. You can term such unethical information retrieval data theft.&lt;/p&gt;

&lt;p&gt;Data theft, on the other hand, aims to retrieve confidential information without approval. So it may compromise a websites’ integrity, as it sometimes involves hacking into a database. Nevertheless, it’s still partly correct to say that data theft is a misuse of web scraping. Further, there are laws and regulations binding data theft. So even though you might claim to be scraping data, it’s theft when you forcefully collect confidential data.&lt;/p&gt;

&lt;p&gt;Sometimes, data thieves or hackers exploit a website’s vulnerability to perpetuate data theft. And many of such cases have gone under the hood unpunished. Nonetheless, you need to take care and ensure that you’re not scraping data from where you’re outrightly unauthorized.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yahoos-and-linkedins-cases-the-stolen-and-scraped"&gt;
  &lt;/a&gt;
  Yahoo!’s and LinkedIn’s Cases: The Stolen and Scraped
&lt;/h3&gt;

&lt;p&gt;A notable example of data theft is Yahoo!’s consecutive data breaches of 2013 and 2014. It was indeed a coordinated raid where over 3 billion users’ data got stolen. While it wasn’t the only one that’d occurred before then, the ease of Yahoo!’s database compromise, coupled with the amount of data stolen, left the internet community in awe. Although Yahoo!’s breach resulted in data scraping, it was an obvious example of data theft. Plus, the hackers gained unauthorized access to their databases. And this outright violated the internet privacy rules since the scraped information was confidential.&lt;/p&gt;

&lt;p&gt;In 2021, LinkedIn also got shaded in a supposed data breach after &lt;a href="https://cybernews.com/news/stolen-data-of-500-million-linkedin-users-being-sold-online-2-million-leaked-as-proof-2/"&gt;CyberNews&lt;/a&gt; reported 500 million users’ information auctioned on the Dark Web. To protect its legacy, LinkedIn immediately refuted this information on the &lt;a href="https://news.linkedin.com/2021/june/an-update-from-linkedin"&gt;LinkedIn Pressroom&lt;/a&gt;. Although the company didn’t deny the data leakage, it claimed that the auctioned information was retrieved via web scraping rather than a security breach. And since web scraping isn’t illegal and involves the collection of publicly available data, unlike Yahoo!’s case, we can’t conclude that this was data theft. Besides, according to LinkedIn, there was neither a breach nor unauthorized access to its database after all.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://automatio.co/blog/web-scraping-vs-web-crawling/"&gt;Web Scraping vs Web Crawling&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://automatio.co/blog/web-scraping-vs-web-crawling/"&gt;People sometimes wrongly use the terms web scraping and web crawling synonymously. Although they’re closely related, they’re different actions that need proper delineation — at least, so you can know which one is ideal for your needs at a certain point in time. And understand what the differences are.…&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7rr4wuUd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2Aw3G_MQ557j9-6eEn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7rr4wuUd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2Aw3G_MQ557j9-6eEn.png" alt="" width="512" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://automatio.co/blog/web-scraping-vs-web-crawling/"&gt;Automatio Blog — Updates, Tutorials and Case StudiesStefan Smiljkovic&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--la1OFOtB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4000/0%2Axif-PxurOgVwrhNp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--la1OFOtB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4000/0%2Axif-PxurOgVwrhNp" alt="" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thus, typically, information gathered during web scraping is readily available and visible to everyone. So in the real sense, no one should reprimand you for scraping the web. But data theft is more creepy. It often requires craftiness. Technically, it involves digital prying. Then subsequent access to a private repository or a database of information not meant to leak to a third party. The retrieval and misuse of such data often follow the leak.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-web-scraping-a-result-of-a-websites-vulnerabilities"&gt;
  &lt;/a&gt;
  Is Web Scraping a Result of a Website’s Vulnerabilities?
&lt;/h2&gt;

&lt;p&gt;Security vulnerabilities, undoubtedly, can result in a data breach. People might use web scraping illegally when they misuse the scraped data or use unethical technical processes to retrieve information. But naturally, it doesn’t have to exploit vulnerabilities. So a website, regardless of its security, seems to have little control over what people can and not scrape.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#can-you-get-blocked-from-scraping-a-website"&gt;
  &lt;/a&gt;
  Can You Get Blocked From Scraping a Website?
&lt;/h2&gt;

&lt;p&gt;A robot.txt file is a popular tool used by companies to keep bots away from accessing specific directories on their website. Before scraping, you can check if a website allows crawling on a particular page by typing &lt;strong&gt;websiteurl/robots.txt *&lt;em&gt;in *&lt;/em&gt;&lt;/strong&gt;your browser search console.&lt;/p&gt;

&lt;p&gt;And where such a file doesn’t serve the purpose, some websites write extra security scripts that block malicious IPs to prevent unauthorized access to their content. Despite such efforts, people still have their way around getting what they want. DOM parsing, coupled with machine learning techniques like natural language processing and computer vision, are technologies that power some data scrapers today. Some of these techniques are smart, and they fool a website’s security wall by adapting the human browsing behavior.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-types-of-websites-can-you-scrape"&gt;
  &lt;/a&gt;
  What Types of Websites Can You Scrape?
&lt;/h2&gt;

&lt;p&gt;You probably know by now that web scraping is only legal when you use it towards a good course. And there are many &lt;a href="https://automatio.co/blog/17-business-ideas-for-web-scraping/"&gt;web scraping business ideas&lt;/a&gt; out there. But as stated earlier, some websites don’t like to be scraped. So, what categories of websites are there on the internet where you can collect data?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-social-media"&gt;
  &lt;/a&gt;
  1. Social Media
&lt;/h3&gt;

&lt;p&gt;Social media websites are among the most dependable sources when it comes to scraping natural languages and sentiments. Social media giants like Facebook and Twitter even offer APIs that let developers connect to them and use their data. Such data is often programmable and only integrable into apps for some solutions, though. So, they might not be explicitly downloadable into CSV or Excel files as you might when scraping a large volume of data from open-source websites.&lt;/p&gt;

&lt;p&gt;That said, some of them also let you scrape and download users’ comments without revealing the identity of those who post them. Twitter, for instance, offers a dedicated API called &lt;a href="https://www.tweepy.org/"&gt;Tweepy&lt;/a&gt; that you can use to grab users’ tweets semantically. For example, using Tweepy, you can collect all tweets that have a particular keyword.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-ecommerce-and-directory-websites"&gt;
  &lt;/a&gt;
  2. E-Commerce and Directory Websites
&lt;/h3&gt;

&lt;p&gt;E-commerce stores and directory websites, no doubt, are the most reliable sources for collecting market and product-related data. Walmart, Amazon, and eBay are some of the top e-commerce websites where people scavenge for product information. While some of these websites don’t state whether they allow scraping or not, some do. So you might want to look out for that to avoid legal consequences. But since these products are available on the client-side, you should be fine scraping them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-news-and-media-websites"&gt;
  &lt;/a&gt;
  3. News and Media Websites
&lt;/h3&gt;

&lt;p&gt;News and media websites are excellent sources of information. And people sometimes resort to scraping them to get SEO insights. If you don’t reproduce or plagiarize their content, you’re safe, and you can scrape news sites and blogs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-job-boards"&gt;
  &lt;/a&gt;
  4. Job Boards
&lt;/h3&gt;

&lt;p&gt;Many companies target popular job boards to recommend the most in-demand skills to their customers. Additionally, since many of these websites contain CV samples, they’re good sources of CV templates for various job types. Examples of job boards that job recommending companies scrape include LinkedIn, Indeed, and Glassdoor. As far as you don’t step beyond the boundary, you shouldn’t have issues collecting data from these websites as well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-search-engines"&gt;
  &lt;/a&gt;
  5. Search Engines
&lt;/h3&gt;

&lt;p&gt;While this may sound overwhelming and laborious, search engines are the best places to search for publicly available data. Content management companies sometimes scrape query results from search engines like Google and Bing for keyword and SEO insights. In terms of legality, search engines are the safest to sweep, as they offer readily-indexed information.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Web scraping is one of the most complex enemies to fight on the internet today. Everyone, including regulatory bodies and even those who frown at it, scrape the web in one way or another. This tool is valuable in many fields, including but not limited to market research, artificial intelligence, SEO, and more. While its legality depends on some key factors, it doesn’t look like there’ll be a strict sanction against using it after all.&lt;/p&gt;

&lt;p&gt;That said, as far as you don’t violate legal terms, it’s a free world out there on the net. So feel free to scrape the web as you want. We even have a handy tool called &lt;a href="https://automatio.co/"&gt;Automatio&lt;/a&gt;, where you can explore the power of web automation to extract data from any website. Scrape responsibly!&lt;/p&gt;

</description>
      <category>scraper</category>
      <category>dataextraction</category>
      <category>webscraping</category>
    </item>
    <item>
      <title>How to Develop an Educational App in 2022?</title>
      <author>Anques Technolabs</author>
      <pubDate>Tue, 30 Nov 2021 08:47:04 +0000</pubDate>
      <link>https://dev.to/anquestechnolab/how-to-develop-an-educational-app-in-2022-30nh</link>
      <guid>https://dev.to/anquestechnolab/how-to-develop-an-educational-app-in-2022-30nh</guid>
      <description>&lt;p&gt;In today’s modern world, the educational space has been completely transformed by smartphone technology. Many people have appreciated and welcomed these innovative changes.&lt;/p&gt;

&lt;p&gt;The app has converted the learning industry, becoming the first unicorn to enter the market and securing a billion-dollar valuation in a short period of time.&lt;/p&gt;

&lt;p&gt;It not only makes education more interactive and engaging, but it also adds a sprinkle of entertainment and fun. Most importantly, the app broadens learning while adhering to key standards of ease, effectiveness, and simplicity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-process-of-creating-an-elearning-application"&gt;
  &lt;/a&gt;
  What is the process of creating an e-learning application?
&lt;/h2&gt;

&lt;p&gt;Before you win and start your &lt;a href="https://play.google.com/store/apps/details?id=com.bizzbrains.elearningapp"&gt;eLearning application&lt;/a&gt; development journey, it’s important to fully understand the various processes involved.&lt;/p&gt;

&lt;p&gt;You can create a blueprint of the product that will cater to the needs of your end-users if you have a clear and precise idea of the concept and each individual phase.&lt;/p&gt;

&lt;p&gt;The following is a representation of a process of the step-by-step process for creating an eLearning app:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1) Analyze and Idea:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The foundation of a successful m-learning app is a strong concept and idea. Only then will it be able to evolve into a high-demand education platform. Consider the subjects that will be taught and how you will structure it to appeal to specific target audiences.&lt;/p&gt;

&lt;p&gt;The research should be followed by a number of brainstorming sessions to assist you in moving on to the next stage of app development. Obtaining critical inputs and insights will also serve as a differentiator between you and your competitors.&lt;/p&gt;

&lt;p&gt;Keep in mind that the app will only be useful if the concept is viable. This necessitates a thorough market analysis in order to test the app’s utility and viability with the target audience. If the outcome is positive, you can begin by developing a timeline for the app’s development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2) App Design:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the primary reasons eLearning apps have become so popular with students and parents is their simple interface and engaging app design. When creating your e-learning app, make sure the user interface is interactive and has engaging touchpoints.&lt;/p&gt;

&lt;p&gt;The goal should be to provide users with comfort that will keep your audience coming back to you. The idea is to make the design decent enough to keep the user interested and interested in consuming more content in the long run.&lt;/p&gt;

&lt;p&gt;Give importance to the fonts, colors, graphics, and so on. Make certain that these elements do not crowd the design in any way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3) App Development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With the design UIs completed, the development process can begin. You start with the conceptual phase right away. This is critical because it contributes to the validation of the app concept and the features that you have chosen to include in it.&lt;/p&gt;

&lt;p&gt;This stage consists of several phases and rounds of development and testing. The app must go through all kinds of testing phases, as well as bug fixes and the addition of any key features and functionalities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4) Deployment&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After completing the previous stages successfully, the app can be deployed on the operating platform of your choice. This could include the web, iOS, and Android.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-main-features-of-the-mobile-learning-app"&gt;
  &lt;/a&gt;
  What are the main features of the mobile learning app?
&lt;/h2&gt;

&lt;p&gt;This app has dividends into various categories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;General Features&lt;/li&gt;
&lt;li&gt;Student Panel&lt;/li&gt;
&lt;li&gt;Admin Panel&lt;/li&gt;
&lt;li&gt;Advanced Features&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--83mJ7Gq9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlbs2xw6wg3g7h0fr07k.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--83mJ7Gq9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlbs2xw6wg3g7h0fr07k.jpg" alt="Image description" width="880" height="452"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-general-features-should-your-elearning-application-have"&gt;
  &lt;/a&gt;
  What general features should your e-learning application have?
&lt;/h2&gt;

&lt;p&gt;Consider the following general features that you must incorporate into your e-learning app:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Total Syllabus Coverage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Expert faculties are tasked with curating relevant study material for the subjects available on the application. They ensure that the final version of the content is well-rounded, in-depth, and organized in a way that is simple for students to understand and complete in a reasonable amount of time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Interactive Aids&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;E-learning apps make use of visual and interactive aids, particularly in subjects such as physics, chemistry, and mathematics. These methods, which go beyond the traditional chalk-board methodology, make learning more interesting and appealing. The app’s video lectures emphasize student engagement and visual teaching mechanisms.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Chapter-wise Tests&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As soon as the chapter concludes, the student should assess whether the knowledge gained is clear and concise. Mock tests and sample questions are built into learning apps to help students test and understand their learning curve.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. In-Built Chat&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In-app chats connect students with their personal mentors in the event that they require assistance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Adaptive Learning&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;App learning can only be effective if it is capable of adapting to the needs of the students. This can be accomplished by using interactive and visually taught classes. Of course, the syllabus must be constantly revised and updated to meet the needs and expectations of the students.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Third-party Apps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To provide additional services to their users, e-learning apps must have the architecture in place to integrate with third-party apps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Logistics Dashboard&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If your E-learning app allows users to print hard copies of their learning materials, a logistics dashboard can come in handy. From a single platform, both the administrator and the user will be able to track the status of the shipment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-features-are-available-on-the-student-panel"&gt;
  &lt;/a&gt;
  What features are available on the student panel?
&lt;/h2&gt;

&lt;p&gt;The Student Panel serves as the app’s front end. The following are the top features visible on the app’s interface.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. User Registration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Students can use the app after registering with a unique username/password, email address, phone number, or social media handles.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Login&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To use the app’s services, students must first log in with their registered username, email address, phone number, and password.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.  Forgot Password&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is a standard feature that allows users who have forgotten their password to create a new one. This can be accomplished through the use of a mobile or email OTP system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Profile Manager&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Students can create their own profiles and fill in details such as school, class, interests, and so on. The Profile Manager also allows you to edit or delete this information based on the needs of the student.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Browse All Courses&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Any mobile learning app must have a Course section. Students can browse the modules and select the subject that they want to study.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Search Courses&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If a student is unable to locate a subject, the search bar can assist in locating it. By entering specific keywords, the results can be filtered to show only those categories that are relevant to the subject.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Course Detail on Click&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Students can learn more about the courses by visiting the ‘Course Description’ section. This typically includes a brief description of the course’s content, chapter titles, an estimated timeline, and the course cost.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Purchase Button/Page&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Courses must be purchased on any e-learning app. As a result, a purchase button or link should be placed in a convenient and visible location on the app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Payment&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To accept payments, the app should be linked to a variety of payment gateways such as net banking, debit and credit cards, wallets, PayPal, and so on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. Online Reader&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As soon as the payment is successful, users should be able to click on a download button. They can also read the lessons on the app’s interface if an online reader is integrated.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;11. Live Chat Support&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Any tech-based application must have access to live chat. Students can immediately contact the appropriate department to resolve any issues or questions they may have.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12. Purchase History Dashboard&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The purchase dashboard is a section in which users can view and track all of their app purchases. It typically lists the product as well as the fee paid.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;13. Test&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is a section of the application dedicated to storing various tests and question papers. Students can choose to test their knowledge based on the lessons and chapters they have completed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;14. Shipment Status&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This feature allows students to track the shipment status of their hard copy study material.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.anques.com/hire-dedicated-developers/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d-9mI0rU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1gmdg0rupns76lymytyq.jpg" alt="Image description" width="336" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read more from source URL&amp;gt;&amp;gt;&amp;gt; &lt;a href="https://www.anques.com/how-to-develop-an-educational-app-in-2022/"&gt;https://www.anques.com/how-to-develop-an-educational-app-in-2022/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>appdevelopment</category>
      <category>educationapp</category>
      <category>androidapp</category>
      <category>elearningapp</category>
    </item>
    <item>
      <title>Clean Code - Laravel</title>
      <author>Morcos Gad</author>
      <pubDate>Tue, 30 Nov 2021 08:31:42 +0000</pubDate>
      <link>https://dev.to/morcosgad/do-this-laravel-1cn3</link>
      <guid>https://dev.to/morcosgad/do-this-laravel-1cn3</guid>
      <description>&lt;p&gt;Let's get started quickly In some cases, clean code must be used as in the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Don't do this&lt;/span&gt;
&lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'category_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$category&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'author_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// Do this&lt;/span&gt;
&lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;whereBelongsTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$category&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;whereBelongsTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'author'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Don't do this&lt;/span&gt;
&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;author_id&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Do this&lt;/span&gt;
&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;author&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;is&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope you enjoyed the code.&lt;/p&gt;

</description>
      <category>php</category>
      <category>laravel</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Login Signup Form with Email Verification</title>
      <author>Naem Azam </author>
      <pubDate>Tue, 30 Nov 2021 08:31:33 +0000</pubDate>
      <link>https://dev.to/naemazam/login-signup-form-with-email-verification-19d3</link>
      <guid>https://dev.to/naemazam/login-signup-form-with-email-verification-19d3</guid>
      <description>&lt;p&gt;Login Signup Form with Email Verification is a Working PHP based Sine Up from with Working OTP generating System, It's Working On Local Host.&lt;/p&gt;

&lt;p&gt;If You Don't Know How to configure XAMPP to send Mail from Localhost in PHP ? You can &lt;a href="https://dev.to/naemazam/how-to-configure-xampp-to-send-mail-from-localhost-in-php--382c"&gt;Read&lt;/a&gt; My Another Blog. &lt;/p&gt;

&lt;p&gt;Design Your Registration Home page Simple&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;require_once&lt;/span&gt; &lt;span class="s2"&gt;"controllerUserData.php"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 
&lt;span class="nv"&gt;$email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_SESSION&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nv"&gt;$password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_SESSION&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$email&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$password&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nv"&gt;$sql&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"SELECT * FROM usertable WHERE email = '&lt;/span&gt;&lt;span class="nv"&gt;$email&lt;/span&gt;&lt;span class="s2"&gt;'"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$run_Sql&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;mysqli_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$con&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$sql&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$run_Sql&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nv"&gt;$fetch_info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;mysqli_fetch_assoc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$run_Sql&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$fetch_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'status'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="nv"&gt;$code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$fetch_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'code'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"verified"&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$code&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                &lt;span class="nb"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Location: reset-code.php'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nb"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Location: user-otp.php'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Location: login-user.php'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$fetch_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt; | Home&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url('https://fonts.googleapis.com/css?family=Poppins:400,500,600,700&amp;amp;display=swap')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;padding-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#6665ee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Poppins'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; 
    &lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nc"&gt;.navbar-brand&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#6665ee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"navbar"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"navbar-brand"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Brand name&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-light"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"logout-user.php"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Logout&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Welcome &lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$fetch_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In Here I make An Email-OTP System Which is Based On PHP, and js. &lt;br&gt;
Visit My &lt;a href="https://github.com/naemazam/Login-Signup-Form-with-Email-Verification#readme"&gt;GitHub&lt;/a&gt; to know more.   &lt;/p&gt;

</description>
      <category>php</category>
      <category>javascript</category>
      <category>otp</category>
      <category>naemazam</category>
    </item>
    <item>
      <title>How to use window.confirm()</title>
      <author>SnowBit</author>
      <pubDate>Tue, 30 Nov 2021 08:23:47 +0000</pubDate>
      <link>https://dev.to/snowbit/how-to-use-windowconfirm-662</link>
      <guid>https://dev.to/snowbit/how-to-use-windowconfirm-662</guid>
      <description>&lt;p&gt;Hello everyone, I am back with a new article on how you can use &lt;code&gt;window.confirm()&lt;/code&gt; Browser API in JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;window.confirm()&lt;/code&gt; let you to ask confirmation before performing a important action; for example: deleting something or posting something&lt;/p&gt;

&lt;p&gt;Let's look it by an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;warn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;confirm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are going to delete this post, are you sure?&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will show you a &lt;strong&gt;confirmation&lt;/strong&gt; message.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0Oe9E_iS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/woc5ihcbqkj6xtkbh23j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0Oe9E_iS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/woc5ihcbqkj6xtkbh23j.png" alt="window.confirm() example" width="880" height="249"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, how you can check whether user has &lt;strong&gt;confirmed&lt;/strong&gt; or not?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;warn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;confirm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are going to delete this post, are you sure?&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;User has confirmed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aagkRZh64xI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Data Visualization with Chart.js</title>
      <author>Unclebigbay</author>
      <pubDate>Tue, 30 Nov 2021 08:21:41 +0000</pubDate>
      <link>https://dev.to/unclebigbay/data-visualization-with-chartjs-5b2l</link>
      <guid>https://dev.to/unclebigbay/data-visualization-with-chartjs-5b2l</guid>
      <description>&lt;h1&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;What is Chart.js&lt;/li&gt;
&lt;li&gt;Getting Started with Chart.js&lt;/li&gt;
&lt;li&gt;Bar Chart&lt;/li&gt;
&lt;li&gt;Line Chart&lt;/li&gt;
&lt;li&gt;Pie Chart&lt;/li&gt;
&lt;li&gt;Conclusion&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h1&gt;

&lt;p&gt;Before you continue with this tutorial article, you should:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Have working experience with JavaScript&lt;/li&gt;
&lt;li&gt;Know the basics of HTML attributes such as an &lt;strong&gt;id&lt;/strong&gt; and &lt;strong&gt;class&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Have a code editor (I will be using &lt;a href="https://code.visualstudio.com/"&gt;VSCode&lt;/a&gt; )&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;One of the most important features that a developer should be able to implement on a web application is a diagrammatic representation of data, which allows users to have a clear visual of data on a website.&lt;/p&gt;

&lt;p&gt;Whether it's financial data, page view analytics, or statistics of items, which are mostly found on the dashboard.&lt;/p&gt;

&lt;p&gt;In this tutorial article, we'll learn how to make use of *&lt;em&gt;chart.js *&lt;/em&gt; to create a visual representation of data in JavaScript.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h1&gt;

&lt;p&gt;You can check out the demo of what we will be building together in this article &lt;a href="https://cutt.ly/XT7q0mL"&gt;here.&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Or watch the demo video below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yv6-gtgp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637004261612/lnvUD3WAw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yv6-gtgp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637004261612/lnvUD3WAw.gif" alt="chart js bar chart line chart pie chart demo" width="600" height="337"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-chartjs"&gt;
  &lt;/a&gt;
  What is Chart.JS?
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Chart.js&lt;/strong&gt; is an open source JavaScript library that is used for data visualization that supports up to eight different charts including the bar chart, line chart, area chart, pie chart, bubble chart, radar chart, polar chart, and scatter chart.&lt;/p&gt;

&lt;p&gt;For this tutorial, we will be focusing on the bar chart, line chart, and pie chart, and at the end of this article, you will learn how to implement these three charts.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#getting-started-with-chartjs"&gt;
  &lt;/a&gt;
  Getting Started with Chart.js
&lt;/h1&gt;

&lt;p&gt;There are three major ways of adding &lt;strong&gt;chart.js&lt;/strong&gt; to your project:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; &lt;strong&gt;Through Package Manager&lt;/strong&gt; (Highly recommended)&lt;/p&gt;

&lt;p&gt;You can install Chart.js through  &lt;a href="https://www.npmjs.com/package/chart.js"&gt;npm&lt;/a&gt;, &lt;a href="https://yarnpkg.com/package/react-chartjs-2"&gt;yarn&lt;/a&gt;, or any other package manager installer for your Node, React, Vue, Angular, or any other supporting frameworks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; &lt;strong&gt;Through CDNJS&lt;/strong&gt; (Recommended)&lt;/p&gt;

&lt;p&gt;Another way of adding chart.js to a project is through the Content Delivery Network, which means all the built files of chart.js can be accessed directly from the &lt;a href="https://cdnjs.com/libraries/Chart.js"&gt;cdnjs&lt;/a&gt; or &lt;a href="https://www.jsdelivr.com/package/npm/chart.js?path=dist"&gt;jsDelivr&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; &lt;strong&gt;Through GitHub&lt;/strong&gt; (Less recommended)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.chartjs.org/"&gt;Chart.js&lt;/a&gt; is an open source project, which means you can download the latest version of chart.js directly from GitHub &lt;a href="https://github.com/chartjs/Chart.js"&gt;here&lt;/a&gt;, but this method requires you to fork, clone, build and test the chart.js before getting it to work on your machine, this method is way too tedious.&lt;/p&gt;

&lt;p&gt;In this tutorial, we will be making use of the &lt;a href="https://cdnjs.com/libraries/Chart.js"&gt;cdnjs&lt;/a&gt; method to add  &lt;a href="https://www.chartjs.org/"&gt;chart.js&lt;/a&gt; to our project, you can always try out other methods on your own using this &lt;a href="https://www.chartjs.org/docs/2.9.4/getting-started/installation.html"&gt;guide&lt;/a&gt;.&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#how-chartjs-works-in-html"&gt;
  &lt;/a&gt;
  How Chart.js Works in HTML
&lt;/h1&gt;

&lt;p&gt;In this section, I will lay out how chart.js works and explain the minimum things you need to set up a chart with the chart.js library.&lt;/p&gt;

&lt;p&gt;I will break this section down into two parts; &lt;strong&gt;The HTML part&lt;/strong&gt; and &lt;strong&gt;The JavaScript part&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-html-part"&gt;
  &lt;/a&gt;
  The Html Part:
&lt;/h3&gt;

&lt;p&gt;This part involves importing the &lt;strong&gt;chart.js&lt;/strong&gt; cdn link into your html document and setting up a &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; html tag.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; html tag is used to draw graphics on a web page using JavaScript, now you understand why there are two parts to cover when working with chart.js.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Import chart.js cdn in your HTML document.&lt;/p&gt;

&lt;p&gt;You can get the latest version of chart.js from &lt;a href="https://cdnjs.com/libraries/Chart.js"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!-- Chart.js Script --&amp;gt;
&amp;lt;script src="Chart-cdn-goes-here"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Specify where you what to display the chart in your HTML document, also note that it is very important to wrap the canvas tag inside of a container, as the canvas tag needs the parent container to make the chart responsive, we will address this issue later in this guide.&lt;/p&gt;

&lt;p&gt;The canvas &lt;code&gt;id&lt;/code&gt; will be used later to make reference to the canvas element in the JavaScript part.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;section class="chart-wrapper"&amp;gt;
  &amp;lt;!-- chart canvas --&amp;gt;
  &amp;lt;canvas id="chart-name"&amp;gt;&amp;lt;/canvas&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-javascript-part"&gt;
  &lt;/a&gt;
  The JavaScript Part
&lt;/h3&gt;

&lt;p&gt;Welcome to the JavaScript part, there are a couple of things that are common and important when working with any chart in chart.js, this includes;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The canvas reference to display the chart.&lt;/li&gt;
&lt;li&gt;The chart configuration.

&lt;ul&gt;
&lt;li&gt;The chart type.&lt;/li&gt;
&lt;li&gt;The chart labels, the horizontal labels of the chart.&lt;/li&gt;
&lt;li&gt;The chart datasets.&lt;/li&gt;
&lt;li&gt;The chart data, the vertical labels of the chart.&lt;/li&gt;
&lt;li&gt;The chart label, which is the title or name of the chart.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The chart instance, which is needed to initiate a new type of chart.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let me show you the code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// 1. The canvas reference to display the chart.
const chartCanvas = document.getElementById('chart-canva').getContext('2d');

// 2. The chart configuration.
const config = {
  type: 'bar', // chart type
  data: {
    // The chart labels, the horizontal labels of the chart.
    labels: ['label-1', 'label-2', 'label-3', 'label-4', 'label-5'],

    // The chart datasets
    datasets: [
      {
        // The chart data, the horizontal labels of the chart.
        data: [67.7, 63.1, 54.7, 44.1, 40.2],

        // Chart label
        label: 'Chart Label',
      },
    ],
  },
  // Canvas are not responsive by default
  options: {
    responsive: true,
  },
};

// 3. The chart instance, which is needed to initiate a new type of chart.
const newBarChart = new Chart(chartCanvas, config);


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;getContext('2d')&lt;/code&gt; gives us access to the 2D drawing on the canvas HTML tag, this configuration is optional and &lt;code&gt;document.getElementById('chart-canva')&lt;/code&gt; is enough.&lt;/p&gt;

&lt;p&gt;The code above will produce the output below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QpcuxSIG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636950822355/AJ1lpXJUF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QpcuxSIG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636950822355/AJ1lpXJUF.png" alt="Chart.js Basic setup" width="880" height="544"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that's not responsive, the canvas tag is not responsive by default, and we might need a small size chart for our application, the chart.js has a configuration option named &lt;code&gt;responsive&lt;/code&gt;, which you need to set to &lt;code&gt;true&lt;/code&gt; for the chart to resize when the parent container or element resizes, this will make the chart take the width and height of its parent element.&lt;/p&gt;

&lt;p&gt;The methods below do not work 😢&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;canvas width="50vw" height="50vh"&amp;gt;&amp;lt;/canvas&amp;gt;
&amp;lt;canvas style="width: 50vw; height: 50vh;"&amp;gt;&amp;lt;/canvas&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code below demonstrates how to make your charts in chart.js responsive.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&amp;lt;section class="chart-wrapper"&amp;gt;
   &amp;lt;!-- chart canvas --&amp;gt;
   &amp;lt;canvas id="chart-name"&amp;gt;&amp;lt;/canvas&amp;gt;
&amp;lt;/section&amp;gt;

&amp;lt;style&amp;gt;
   .chart-wrapper {
      position: relative;
      width: 50vw;

      /* align at page center*/
      margin: 0 auto;
   }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The chart wrapper &lt;code&gt;position&lt;/code&gt; should be set to &lt;code&gt;relative&lt;/code&gt; for the chart to be responsive with the container across different sizes.&lt;/p&gt;

&lt;p&gt;Now we have a responsive bar chart.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pbs1Xa3n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636952849365/XYCSw9qup.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pbs1Xa3n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636952849365/XYCSw9qup.png" alt="A responsive bar chart in chart.js" width="880" height="544"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So far, working with chart.js is not as difficult as it seems, right? All you need to get started with any type of chart are what has been demonstrated above, you can go ahead and change the type of chart to &lt;code&gt;line&lt;/code&gt;, &lt;code&gt;pie&lt;/code&gt;, or any other type of &lt;code&gt;chart&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And you should have the corresponding charts displayed on your screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D2lOJ7Uy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636953369020/KmTIn17jl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D2lOJ7Uy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636953369020/KmTIn17jl.png" alt="a bar chart, line chart and pie chart in chart.js" width="880" height="640"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The chart label will be undefined if the label is not set as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SKEldvYj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636953824660/k75J31qet.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SKEldvYj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636953824660/k75J31qet.png" alt="a bar chart with the undefined label" width="880" height="544"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Down to this point, we have learned the concepts to build any type of chart using chart.js and with these concepts at your reach, you will be able to handle any chart in &lt;strong&gt;chart.js&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In the next section, we'll use a real-world use case of charts to visualize data and also add styles to our not-so-cute charts.&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#task"&gt;
  &lt;/a&gt;
  Task
&lt;/h1&gt;

&lt;p&gt;Let's apply what we've learned to a real-world scenario: Our task is to display the most popular technologies from the &lt;a href="https://insights.stackoverflow.com/survey/2020#most-popular-technologies"&gt;2020 Stack Overflow Developer Survey&lt;/a&gt; results using a Bar Chart, Line Chart, and Pie Chart.&lt;/p&gt;

&lt;p&gt;Result of the Most Popular Technologies Survey.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Technology&lt;/th&gt;
&lt;th&gt;Vote Percentage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;JAVASCRIPT&lt;/td&gt;
&lt;td&gt;67.7%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HTML/CSS&lt;/td&gt;
&lt;td&gt;63.1%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SQL&lt;/td&gt;
&lt;td&gt;54.7%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PYTHON&lt;/td&gt;
&lt;td&gt;44.1%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JAVA&lt;/td&gt;
&lt;td&gt;40.2%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;We won't go into detail about the CSS part of the solution because this tutorial is focused on building charts with the chart.js JavaScript library. &lt;/p&gt;

&lt;p&gt;Copy and paste the HTML and CSS code below as a starter kit, most CSS styles are just to make our page look more attractive.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;

&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;link rel="stylesheet" href="./chart.css"&amp;gt;
    &amp;lt;title&amp;gt;Getting Started with chart.js&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;

    &amp;lt;!-- HEADER SECTION --&amp;gt;
    &amp;lt;header&amp;gt;
        &amp;lt;!-- NAVBAR SECTION --&amp;gt;
        &amp;lt;nav&amp;gt;
            &amp;lt;a href="" class="nav-links read-guide"&amp;gt;Read Guide&amp;lt;/a&amp;gt;
            &amp;lt;div class="nav-right"&amp;gt;
                &amp;lt;a href="#bar-chart" class="nav-links"&amp;gt;Bar Chart&amp;lt;/a&amp;gt;
                &amp;lt;a href="#line-chart" class="nav-links"&amp;gt;Line Chart&amp;lt;/a&amp;gt;
                &amp;lt;a href="#pie-chart" class="nav-links"&amp;gt;Pie Chart&amp;lt;/a&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/nav&amp;gt;
        &amp;lt;!-- HERO SECTION --&amp;gt;
        &amp;lt;section class="hero"&amp;gt;
            &amp;lt;h1 class="hero-text"&amp;gt;Getting Started with Chart.js &amp;lt;br /&amp;gt; (DEMO)&amp;lt;/h1&amp;gt;
        &amp;lt;/section&amp;gt;
    &amp;lt;/header&amp;gt;

    &amp;lt;main&amp;gt;
        &amp;lt;!-- Charts goes in here --&amp;gt;
    &amp;lt;/main&amp;gt;

    &amp;lt;footer&amp;gt;
        &amp;lt;h2&amp;gt;Design with 🧡 by &amp;lt;span&amp;gt;UNCLEBIGBAY&amp;lt;/span&amp;gt;&amp;lt;/h2&amp;gt;
    &amp;lt;/footer&amp;gt;


    &amp;lt;!-- Chart.js Script --&amp;gt;
    &amp;lt;script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.6.0/chart.min.js"
        integrity="sha512-GMGzUEevhWh8Tc/njS0bDpwgxdCJLQBWG3Z2Ct+JGOpVnEmjvNx6ts4v6A2XJf1HOrtOsfhv3hBKpK9kE5z8AQ=="
        crossorigin="anonymous" referrerpolicy="no-referrer"&amp;gt;&amp;lt;/script&amp;gt;

    &amp;lt;!-- Bar Chart Script --&amp;gt;
    &amp;lt;script src="./bar-chart.js"&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;!-- Line Chart Script --&amp;gt;
    &amp;lt;script src="./line-chart.js"&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;!-- Pie Chart Script --&amp;gt;
    &amp;lt;script src="./pie-chart.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the following files: &lt;code&gt;chart.css&lt;/code&gt;, &lt;code&gt;bar-chart.js&lt;/code&gt;, &lt;code&gt;line-chart.js&lt;/code&gt;, and &lt;code&gt;pie-chart.js&lt;/code&gt;, we will be writing our code in them very soon.&lt;/p&gt;

&lt;p&gt;Open your &lt;code&gt;chart.css&lt;/code&gt; file and put the CSS code below inside.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@import url('https://fonts.googleapis.com/css2?family=Ubuntu:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&amp;amp;display=swap');

* {
  margin: 0;
  box-sizing: border-box;
}

:root {
  --primary-color: #0b0d60;
  --app-white: #ffffff;
  --bar-chart-bg: #3a0ca3;
  --line-chart-bg: #560bad;
  --pie-chart-bg: #7209b7;
}

html {
  scroll-behavior: smooth;
}

body {
  line-height: 1.3;
  font-family: 'Ubuntu';
  background-color: var(--pie-chart-bg);
}

header {
  padding: 0.9rem;
  background-color: var(--primary-color);
  height: 100vh;
}

/* FIX THE NAVBAR ACROSS ALL SECTIONS */
nav {
  position: fixed;
  left: 0;
  width: 100%;
  z-index: 9;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.nav-links.read-guide {
  opacity: 1;
  font-size: 22px;
  margin-bottom: 0.6rem;
  text-decoration-line: unset;
  opacity: 0.7;
}

.nav-links.read-guide:hover {
  opacity: 0.9;
}

.nav-right {
  display: flex;
  justify-content: space-between;
  width: 100%;
}

.nav-links {
  padding: 0.5rem;
  color: #fff;
  text-decoration: none;
  opacity: 0.9;
  font-size: 1.1em;
  font-weight: 600;
  transition: 0.5s;
  text-decoration-line: underline;
  text-underline-offset: 10px;
}

.nav-links:hover {
  opacity: 1;
  text-underline-offset: 12px;
}

/* HERO SECTION */

.hero {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  text-align: center;
}

.hero-text {
  color: #fff;
  font-size: 48px;
  line-height: 1.5;
}

/* CHART SECTION */

.chart-section {
  height: 100vh;
  padding-top: 70px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.chart-wrapper {
  width: 95%;
  background-color: white;
}

.chart-heading {
  font-size: 38px;
  text-align: center;
  margin-bottom: 2rem;
  color: var(--app-white);
  opacity: 0.8;
}

.chart-section.bar-chart {
  background-color: var(--bar-chart-bg);
}

.chart-section.line-chart {
  background-color: var(--line-chart-bg);
}

.chart-section.pie-chart {
  background-color: var(--pie-chart-bg);
}

/* FOOTER */
footer {
  text-align: center;
  color: var(--app-white);
  padding: 2rem;
  font-size: 12px;
  opacity: 0.8;
}

footer span {
  font-weight: 900;
}

@media (min-width: 900px) {
  header {
    padding: 1rem 0.9rem;
  }

  nav {
    padding: 0 2rem;
    flex-direction: row;
  }

  .nav-links.read-guide {
    margin-bottom: 1rem;
  }

  .nav-right {
    width: 40%;
  }

  /* HERO SECTION */
  .hero {
    height: 80vh;
  }

  .hero-text {
    font-size: 48px;
    line-height: 1.6;
  }

  /* CHART SECTION */
  .chart-wrapper {
    width: 55vw;
  }

  .chart-heading {
    font-size: 48px;
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Save your files, and open the &lt;code&gt;chart.html&lt;/code&gt; on your browser, your starter template should look something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jHmAQ4ON--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636991057382/CDIArne1Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jHmAQ4ON--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636991057382/CDIArne1Q.png" alt="frame_generic_dark (10).png" width="880" height="575"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#building-bar-chart-in-chartjs"&gt;
  &lt;/a&gt;
  Building Bar Chart in Chart.js
&lt;/h1&gt;

&lt;p&gt;In this section, we will be creating a visual of the survey result in a bar chart using the concept we've learned from the previous section.&lt;/p&gt;

&lt;p&gt;Create a section for the bar chart in the &lt;code&gt;chart.html&lt;/code&gt; file as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!-- BAR CHART SECTION --&amp;gt;
&amp;lt;section class="chart-section bar-chart" id="bar-chart"&amp;gt;
    &amp;lt;h2 class="chart-heading"&amp;gt;Bar Chart&amp;lt;/h2&amp;gt;
    &amp;lt;div class="chart-wrapper"&amp;gt;
        &amp;lt;!-- chart canva --&amp;gt;
        &amp;lt;canvas id="js-bar-chart"&amp;gt;&amp;lt;/canvas&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our bar chart should look something like this at the end of this section.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ljODLR_D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636716604103/1PpHPOMNf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ljODLR_D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636716604103/1PpHPOMNf.png" alt="bar chart built with chart.js" width="880" height="575"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The difference between the above bar chart and the basic bar chart is the different background color of the bars, the dark borders around the bars, the percentage (%) symbol of the data, and the label background color.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OPGB2twp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636994820160/CHfwOx3Ma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OPGB2twp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636994820160/CHfwOx3Ma.png" alt="frame_generic_dark (6).png" width="880" height="544"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The chart.js library allows us to style anything we can see on the chart through the dataset object and not CSS, I will show you how in a bit.&lt;/p&gt;

&lt;p&gt;The chart label will take the background color of the first data in the data array, which is the JavaScript yellow in the example given above.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Anything you see, you can style - Anonymous&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Another tricky part is adding the percentage (%) symbol to the bar chart data on the vertical labels.&lt;/p&gt;

&lt;p&gt;We won't do this, because it won't work.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
 data: ["67.7%", "63.1%", "54.7%", "44.1%", "40.2%"]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Rather, we will be making use of a callback function to add the percentage (%) symbol to each of the data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-background-color-to-chartjs"&gt;
  &lt;/a&gt;
  Adding Background Color to Chart.js
&lt;/h3&gt;

&lt;p&gt;To add background colors to each of the data been represented on a &lt;strong&gt;chart.js&lt;/strong&gt; chart, pass a &lt;code&gt;backgroundColor&lt;/code&gt; property inside of the dataset as shown in &lt;code&gt;bar-chart.js&lt;/code&gt; below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  // Chart label horizontal
    labels: ['JAVASCRIPT', 'HTML/CSS', 'SQL', 'PYTHON', 'JAVA'],
    datasets: [
      {
        // Chart label
        label: 'Programming languages votes',
        // Chart data
        data: [67.7, 63.1, 54.7, 44.1, 40.2],
        // Chart data background color
        backgroundColor: [
          'yellow',
          'blue',
          'brown',
          'purple',
          'indigo',
          'gray',
        ],
      },
    ],
},
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ensure to import the &lt;code&gt;bar-chart.js&lt;/code&gt; if you're not working with the HTML template.&lt;/p&gt;

&lt;p&gt;The arrangement of the &lt;code&gt;backgroundColor&lt;/code&gt; array must match the arrangement of the &lt;code&gt;data&lt;/code&gt; array and the &lt;code&gt;labels&lt;/code&gt; array.&lt;/p&gt;

&lt;p&gt;This is what I mean.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;JAVASCRIPT -&amp;gt; 67.7 -&amp;gt; yellow&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTML/CSS -&amp;gt; 63.1 -&amp;gt; blue&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SQL -&amp;gt; 54.7 -&amp;gt; brown&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PYTHON -&amp;gt; 44.1 -&amp;gt; purple&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JAVA -&amp;gt; 40.2 -&amp;gt; indigo&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And you can add &lt;code&gt;borderWidth&lt;/code&gt; and &lt;code&gt;borderColor&lt;/code&gt; to your chart like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    ...

   // Chart border styles
   borderWidth: 0.3,
   borderColor: 'black',
},
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#adding-symbols-to-chartjs-data"&gt;
  &lt;/a&gt;
  Adding Symbols to Chart.js Data
&lt;/h3&gt;

&lt;p&gt;To add any symbol to data in chart.js, we need to define a callback function in the chart configuration option, which is defined as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; options: {
    scales: {
      y: {
        ticks: {
          callback: function (value) {
            return value + '%';
          },
        },
      },
    },
  },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;y&lt;/code&gt; represents the y-axis of the chart which is also the vertical side of the chart, where the chart data is been displayed.&lt;/p&gt;

&lt;p&gt;The callback function gives us access to each of the values in the chart data array before they are been rendered to the UI and it returns the new format we define, which is to append the percentage (%) symbol to the data in this case.&lt;/p&gt;

&lt;p&gt;I have created a gist &lt;a href="https://gist.github.com/unclebay143/b9a044c09954f176b746df2ec0c9bf5c"&gt;here&lt;/a&gt;  for the complete JavaScript code of the bar chart.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#building-line-chart-in-chartjs"&gt;
  &lt;/a&gt;
  Building Line Chart in Chart.js
&lt;/h1&gt;

&lt;p&gt;In this section, we will visualize the survey data in a line chart.&lt;/p&gt;

&lt;p&gt;Our final line chart will look like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gN8NZDng--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636982190819/3wZWOzmE-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gN8NZDng--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636982190819/3wZWOzmE-.png" alt="frame_generic_dark (9).png" width="880" height="538"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create a new section for the line chart with a canvas tag, always remember to wrap the canvas tag with a parent element like below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!-- LINE CHART SECTION --&amp;gt;
&amp;lt;section class="chart-section line-chart" id="line-chart"&amp;gt;
    &amp;lt;h2 class="chart-heading"&amp;gt;Line Chart&amp;lt;/h2&amp;gt;
    &amp;lt;div class="chart-wrapper"&amp;gt;
        &amp;lt;!-- chart canva --&amp;gt;
        &amp;lt;canvas id="js-line-chart"&amp;gt;&amp;lt;/canvas&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, copy and paste the code below into your &lt;code&gt;line-chat.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Grab the bar chart canva
const lineChartContext = document
  .getElementById('js-line-chart')
  .getContext('2d');

// Creating a new chart instance
const newLineChart = new Chart(lineChartContext, {
  // Chart configuration
  type: 'line',
  data: {
    // Chart Label Vertical
    labels: ['JAVASCRIPT', 'HTML/CSS', 'SQL', 'PYTHON', 'JAVA'],
    datasets: [
      {
        // Chart lable
        label: 'Programming languages votes',
        // Chart data
        data: [67.7, 63.1, 54.7, 44.1, 40.2],
        // Chart data background color
        backgroundColor: ['yellow', 'blue', 'brown', 'purple', 'indigo'],
        // Chart border styles
        borderWidth: 0.3,
        borderColor: 'black',
      },
    ],
  },
  options: {
    responsive: true,
    scales: {
      y: {
        ticks: {
          callback: function (value) {
            return value + '%';
          },
        },
      },
    },
  },
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The only differences between the code in &lt;code&gt;bar-chart.js&lt;/code&gt; and the code in &lt;code&gt;line-chart.js&lt;/code&gt; are the variable name and the chart type.&lt;/p&gt;

&lt;p&gt;You should be more familiar with the code structure of the charts by now.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#building-a-pie-chart-in-chartjs"&gt;
  &lt;/a&gt;
  Building a Pie Chart in Chart.js
&lt;/h1&gt;

&lt;p&gt;Finally in this section, we'll represent the survey result in a pie chart.&lt;/p&gt;

&lt;p&gt;Create a new section for the pie chart in your html document like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!-- PIE CHART SECTION --&amp;gt;
&amp;lt;section class="chart-section pie-chart" id="pie-chart"&amp;gt;
    &amp;lt;h2 class="chart-heading"&amp;gt;Pie Chart&amp;lt;/h2&amp;gt;
    &amp;lt;div class="chart-wrapper"&amp;gt;
        &amp;lt;!-- chart canva --&amp;gt;
        &amp;lt;canvas id="js-pie-chart"&amp;gt;&amp;lt;/canvas&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now Create a &lt;code&gt;pie-chart.js&lt;/code&gt; file and copy-paste the code below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Grab the bar chart canva
const pieChartContext = document
  .getElementById('js-pie-chart')
  .getContext('2d');

// Creating a new chart instance
const newPieChart = new Chart(pieChartContext, {
  // Chart configuration
  type: 'pie',
  data: {
    // Chart Label Vertical
    labels: ['JAVASCRIPT', 'HTML/CSS', 'SQL', 'PYTHON', 'JAVA'],
    datasets: [
      {
        // Chart data
        data: [67.7, 63.1, 54.7, 44.1, 40.2],
        label: 'Programming languages votes',
        backgroundColor: ['yellow', 'blue', 'brown', 'purple', 'indigo'],
        borderWidth: 0.3,
        borderColor: 'black',
      },
    ],
  },
  options: {
    responsive: true,
    // Maintain the original canvas aspect ratio (width / height) when resizing.
    maintainAspectRatio: false,
  },
});

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code for the &lt;code&gt;pie chart&lt;/code&gt; above is pretty much the same as the &lt;code&gt;bar chart&lt;/code&gt;, and &lt;code&gt;line chart&lt;/code&gt; implementation.&lt;/p&gt;

&lt;p&gt;But the pie chart needs extra help to become fully responsive across all screen sizes, so we need to set the &lt;code&gt;maintainAspectRatio&lt;/code&gt; to &lt;strong&gt;false&lt;/strong&gt; in the configuration option to make it responsive across all screen sizes.&lt;/p&gt;

&lt;p&gt;Without &lt;code&gt;maintainAspectRatio&lt;/code&gt; property&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BSZzWpRr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636996134569/vxgis9u3v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BSZzWpRr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636996134569/vxgis9u3v.png" alt="frame_generic_dark (11).png" width="880" height="575"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With &lt;code&gt;maintainAspectRatio&lt;/code&gt; set to false&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PPLp9skL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636996283122/zhUrfYRo4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PPLp9skL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636996283122/zhUrfYRo4.png" alt="frame_generic_dark (12).png" width="880" height="576"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Data presentation is an important element to have in a frontend application, and in this post, you learned how to use the chart.js library to create a bar chart, a line chart, and a pie chart.&lt;/p&gt;

&lt;p&gt;With the knowledge gained from this post, you can use chart.js to work with more complex data.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h1&gt;

&lt;p&gt;If you are interested in learning more about charts, the resource below will help you to take data visualization with charts to the next level.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://www.chartjs.org"&gt;Chart.js Official Documentation&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>javascript</category>
      <category>chartjs</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Communicating Between JavaScript and Java Through the Cordova Plugins</title>
      <author>Mike</author>
      <pubDate>Tue, 30 Nov 2021 08:11:46 +0000</pubDate>
      <link>https://dev.to/hmscore/communicating-between-javascript-and-java-through-the-cordova-plugins-3oa9</link>
      <guid>https://dev.to/hmscore/communicating-between-javascript-and-java-through-the-cordova-plugins-3oa9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#background%E2%80%8B"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Background​&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Cordova is an open-source cross-platform development framework that allows you to use HTML and JavaScript to develop apps across multiple platforms, such as Android and iOS. So how exactly does Cordova enable apps to run on different platforms and implement the functions? The abundant plugins in Cordova are the main reason, and free you to focus solely on app functions, without having to interact with the APIs at the OS level. HMS Core provides a set of Cordova-related plugins, which enable you to integrate kits with greater ease and efficiency.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction%E2%80%8B"&gt;
  &lt;/a&gt;
  Introduction​
&lt;/h2&gt;

&lt;p&gt;Here, I'll use the Cordova plugin in HUAWEI Push Kit as an example to demonstrate how to call Java APIs in JavaScript through JavaScript-Java messaging. The following implementation principles can be applied to all other kits, except for Map Kit and Ads Kit (which will be detailed later), and help you master troubleshooting solutions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basic-structure-of-cordova%E2%80%8B"&gt;
  &lt;/a&gt;
  Basic Structure of Cordova​
&lt;/h2&gt;

&lt;p&gt;When you call style='mso-bidi-font-weight:normal'&amp;gt;loadUrl in MainActivity, CordovaWebView will be initialized and Cordova starts up. In this case, style='mso-bidi-font-weight:normal'&amp;gt;CordovaWebView will create style='mso-bidi-font-weight:normal'&amp;gt;PluginManager, NativeToJsMessageQueue, as well as ExposedJsApi of JavascriptInterface. style='mso-bidi-font-weight:normal'&amp;gt;ExposedJsApi and NativeToJsMessageQueue will play a role in the subsequent communication.&lt;br&gt;
During the plugin loading, all plugins in the configuration file will be read when the PluginManager object is created, and plugin mappings will be created. When the plugin is called for the first time, instantiation is conducted and related functions are executed.&lt;/p&gt;

&lt;p&gt;A message can be returned from Java to JavaScript in synchronous or asynchronous mode. In Cordova, set async in the method to distinguish the two modes.&lt;br&gt;
In synchronous mode, Cordova obtains data from the header of the NativeToJsMessageQueue queue, finds the message request based on callbackID, and returns the data to the success method of the request.&lt;br&gt;
In asynchronous mode, Cordova calls the loop method to continuously obtain data from the NativeToJsMessageQueue queue, finds the message request, and returns the data to the success method of the request.&lt;br&gt;
In the Cordova plugin of Push Kit, the synchronization mode is used.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Plugin Call&lt;/strong&gt;&lt;br&gt;
You may still be unclear on how the process works, based on the description above, so I've provided the following procedure:&lt;br&gt;
&lt;strong&gt;1. Install the plugin.​&lt;/strong&gt;&lt;br&gt;
Run the cordova plugin add @hmscore/cordova-plugin-hms-push command to install the latest plugin. After the command is executed, the plugin information is added to the plugins directory.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--88oifCn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t0vevmnfzkgv1k4ojw92.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--88oifCn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t0vevmnfzkgv1k4ojw92.png" alt="Image1" width="396" height="95"&gt;&lt;/a&gt;&lt;br&gt;
The plugin.xml file records all information to be used, such as JavaScript and Android classes. During the plugin initialization, the classes will be loaded to Cordova. If a method or API is not configured in the file, it is unable to be used.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Create a message mapping.​&lt;/strong&gt;&lt;br&gt;
The plugin provides the methods for creating mappings for the following messages:&lt;br&gt;
&lt;strong&gt;(1) HmsMessaging&lt;/strong&gt;&lt;br&gt;
In the HmsPush.js file, call the runHmsMessaging API in asynchronous mode to transfer the message to the Android platform. The Android platform returns the result through Promise.&lt;br&gt;
The message will be transferred to the HmsPushMessaging class. The execute method in HmsPushMessaging can transfer the message to a method for processing based on the action type in the message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public void execute(String action, final JSONArray args, final CallbackContext callbackContext)
throws JSONException {
hmsLogger.startMethodExecutionTimer(action);
switch (action) {
case "isAutoInitEnabled":
isAutoInitEnabled(callbackContext);
break;
case "setAutoInitEnabled":
setAutoInitEnabled(args.getBoolean(1), callbackContext);
break;
case "turnOffPush":
turnOffPush(callbackContext);
break;
case "turnOnPush":
turnOnPush(callbackContext);
break;
case "subscribe":
subscribe(args.getString(1), callbackContext);
break;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;(2) HmsInstanceId&lt;/strong&gt;&lt;br&gt;
In the HmsPush.js file, call the runHmsInstance API in asynchronous mode to transfer the message to the Android platform. The Android platform returns the result through Promise.&lt;br&gt;
The message will be transferred to the HmsPushInstanceId class. The execute method in HmsPushInstanceId can transfer the message to a method for processing based on the action type in the message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public void execute(String action, final JSONArray args, final CallbackContext callbackContext) throws JSONException {
if (!action.equals("init"))
hmsLogger.startMethodExecutionTimer(action);

switch (action) {
case "init":
Log.i("HMSPush", "HMSPush initialized ");
break;
case "enableLogger":
enableLogger(callbackContext);
break;
case "disableLogger":
disableLogger(callbackContext);
break;
case "getToken":
getToken(args.length() &amp;gt; 1 ? args.getString(1) : Core.HCM, callbackContext);
break;
case "getAAID":
getAAID(callbackContext);
break;
case "getCreationTime":
getCreationTime(callbackContext);
break;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Similarly, the processing method returns the result to JavaScript. The result will be written to the nativeToJsMessageQueue queue.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;callBack.sendPluginResult(new PluginResult(PluginResult.Status.OK,autoInit));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;(3) localNotification&lt;/strong&gt;&lt;br&gt;
In the HmsLocalNotification.js file, call the run API in asynchronous mode to transfer the message to the Android platform. The Android platform returns the result through Promise.&lt;br&gt;
The message will be transferred to the HmsLocalNotification class. The execute method in HmsLocalNotification can transfer the message to a method for processing based on the action type in the message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public void execute(String action, final JSONArray args, final CallbackContext callbackContext) throws JSONException {
switch (action) {
case "localNotification":
localNotification(args, callbackContext);
break;
case "localNotificationSchedule":
localNotificationSchedule(args.getJSONObject(1), callbackContext);
break;
case "cancelAllNotifications":
cancelAllNotifications(callbackContext);
break;
case "cancelNotifications":
cancelNotifications(callbackContext);
break;
case "cancelScheduledNotifications":
cancelScheduledNotifications(callbackContext);
break;
case "cancelNotificationsWithId":
cancelNotificationsWithId(args.getJSONArray(1), callbackContext);
break;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Call sendPluginResult to return the result. However, for localNotification, the result will be returned after the notification is sent.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Perform message push event callback.​&lt;/strong&gt;&lt;br&gt;
In addition to the method calling, message push involves listening for many events, for example, receiving common messages, data messages, and tokens.&lt;br&gt;
The callback process starts from Android.&lt;br&gt;
In Android, the callback method is defined in HmsPushMessageService.java.&lt;br&gt;
Based on the SDK requirements, you can opt to redefine certain callback methods, such as onMessageReceived, onDeletedMessages, and onNewToken.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eYSDvPkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ue7667rxz6gep128qves.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eYSDvPkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ue7667rxz6gep128qves.png" alt="Image2" width="627" height="530"&gt;&lt;/a&gt;&lt;br&gt;
When an event is triggered, an event notification is sent to JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public static void runJS(final CordovaPlugin plugin, final String jsCode) {
if (plugin == null)
return;
Log.d(TAG, "runJS()");

plugin.cordova.getActivity().runOnUiThread(() -&amp;gt; {
CordovaWebViewEngine engine = plugin.webView.getEngine();
if (engine == null) {
plugin.webView.loadUrl("javascript:" + jsCode);

} else {
engine.evaluateJavascript(jsCode, (result) -&amp;gt; {

});
}
});
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Each event is defined and registered in HmsPushEvent.js.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;exports.REMOTE_DATA_MESSAGE_RECEIVED = "REMOTE_DATA_MESSAGE_RECEIVED";
exports.TOKEN_RECEIVED_EVENT = "TOKEN_RECEIVED_EVENT";
exports.ON_TOKEN_ERROR_EVENT = "ON_TOKEN_ERROR_EVENT";
exports.NOTIFICATION_OPENED_EVENT = "NOTIFICATION_OPENED_EVENT";
exports.LOCAL_NOTIFICATION_ACTION_EVENT = "LOCAL_NOTIFICATION_ACTION_EVENT";
exports.ON_PUSH_MESSAGE_SENT = "ON_PUSH_MESSAGE_SENT";
exports.ON_PUSH_MESSAGE_SENT_ERROR = "ON_PUSH_MESSAGE_SENT_ERROR";
exports.ON_PUSH_MESSAGE_SENT_DELIVERED = "ON_PUSH_MESSAGE_SENT_DELIVERED";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function onPushMessageSentDelivered(result) {
window.registerHMSEvent(exports.ON_PUSH_MESSAGE_SENT_DELIVERED, result);
}
exports.onPushMessageSentDelivered = onPushMessageSentDelivered;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please note that the event initialization needs to be performed during app development. Otherwise, the event listening will fail. For more details, please refer to eventListeners.js in the demo. If the callback has been triggered in Java, but is not received in JavaScript, check whether the event initialization is performed. In doing so, when an event is triggered in Android, JavaScript will be able to receive and process the message. You can also refer to this process to add an event.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary%E2%80%8B"&gt;
  &lt;/a&gt;
  Summary​
&lt;/h2&gt;

&lt;p&gt;The description above illustrates how the plugin implements the JavaScript-Java communications. The methods of most kits can be called in a similar manner. However, Map Kit, Ads Kit, and other kits that need to display images or videos (such as maps and native ads) require a different method, which will be introduced in a later article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references%E2%80%8B"&gt;
  &lt;/a&gt;
  References​
&lt;/h2&gt;

&lt;p&gt;For more details, you can go to:&lt;br&gt;
HMS Core &lt;a href="https://developer.huawei.com/consumer/en/?ha_source=hms1"&gt;official website&lt;/a&gt;&lt;br&gt;
HMS Core Cordova Plugin &lt;a href="https://developer.huawei.com/consumer/en/doc/development/HMS-Plugin-Guides/cordova-intro-0000001050735015?ha_source=hms1"&gt;Development Documentation page&lt;/a&gt;, to find the documents you need&lt;br&gt;
&lt;a href="https://www.reddit.com/r/HMSCore/"&gt;Reddit&lt;/a&gt; to join our developer discussion&lt;br&gt;
&lt;a href="https://github.com/HMS-Core/hms-cordova-plugin"&gt;GitHub&lt;/a&gt; to download Cordova Plugins&lt;br&gt;
&lt;a href="https://stackoverflow.com/questions/tagged/huawei-mobile-services?tab=Votes"&gt;Stack Overflow&lt;/a&gt; to solve any integration problems&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>java</category>
      <category>cordova</category>
    </item>
    <item>
      <title>Postman Hacks</title>
      <author>Abayomi Ogunnusi</author>
      <pubDate>Tue, 30 Nov 2021 08:07:01 +0000</pubDate>
      <link>https://dev.to/drsimplegraffiti/postman-hacks-1k5j</link>
      <guid>https://dev.to/drsimplegraffiti/postman-hacks-1k5j</guid>
      <description>&lt;p&gt;Postman is an API platform that allows you to create and use APIs.&lt;/p&gt;

&lt;p&gt;Postman streamlines collaboration and simplifies each phase of the API lifecycle, allowing you to design better APIs faster. Let's start testing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3orieKKmYyvUdR3RkY/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3orieKKmYyvUdR3RkY/giphy.gif" alt="testing" width="480" height="366"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Table Of Content&lt;br&gt;
🥦 Environment variables&lt;br&gt;
🥦 Generating random names&lt;br&gt;
🥦 Postman Console&lt;br&gt;
🥦 Path variable&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#environment-variables"&gt;
  &lt;/a&gt;
  Environment variables
&lt;/h2&gt;

&lt;p&gt;Duplicating codes and links during API testing is always a hassle. &lt;br&gt;
First, highlight the url and set it as a variable. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YM9webv2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ei3w1ju2hshykhy5vkom.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YM9webv2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ei3w1ju2hshykhy5vkom.PNG" alt="Image description" width="880" height="417"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Now imagine writing this whole baseUrl for every instances of GET, POST, DELETE, PUT and PATCH request. It get tiresome. There is a hack to this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--31kWlc4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3w2imnsyypics4xx96mo.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--31kWlc4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3w2imnsyypics4xx96mo.PNG" alt="Image description" width="880" height="409"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mmQYaV9e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7o58dlx4ftbpu7t7oq3p.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mmQYaV9e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7o58dlx4ftbpu7t7oq3p.PNG" alt="Image description" width="880" height="491"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WirlHULI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uuk0t6jd2jrnq8xc6uk3.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WirlHULI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uuk0t6jd2jrnq8xc6uk3.PNG" alt="Image description" width="880" height="406"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Also, when you can set token as variable with few steps. Highlight the token and set it as a variable.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_k-HhZbN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3avt157ysmc6y56r0pn.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_k-HhZbN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3avt157ysmc6y56r0pn.PNG" alt="Image description" width="880" height="355"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CRLO-ZbU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlbb9v3b6q7s3ty7p2e7.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CRLO-ZbU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlbb9v3b6q7s3ty7p2e7.PNG" alt="Image description" width="880" height="483"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K2KJhr2s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4z1o1yhs05sw7taxdck.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K2KJhr2s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4z1o1yhs05sw7taxdck.PNG" alt="Image description" width="878" height="443"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_lJyTReh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fj07fxtjo8prm5tswcto.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_lJyTReh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fj07fxtjo8prm5tswcto.PNG" alt="Image description" width="878" height="392"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#generating-random-names"&gt;
  &lt;/a&gt;
  Generating random names
&lt;/h2&gt;

&lt;p&gt;This is my favorite, ever want to register new users and your brain just ran out of John Doe. Do not worry, help is on the way. This generate random name and email&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qT3rergH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k90kxd2z3kxktkwfizew.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qT3rergH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k90kxd2z3kxktkwfizew.PNG" alt="Image description" width="874" height="388"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#postman-console"&gt;
  &lt;/a&gt;
  Postman Console
&lt;/h2&gt;

&lt;p&gt;Postman also has its own console, where you may see a log of server responses. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qSjPac0V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umgdx1bcozey5c26eg9z.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qSjPac0V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umgdx1bcozey5c26eg9z.PNG" alt="Image description" width="782" height="123"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yBF8uKUk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alzi7qz6fuc03vboez26.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yBF8uKUk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alzi7qz6fuc03vboez26.PNG" alt="Image description" width="880" height="283"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#path-variable"&gt;
  &lt;/a&gt;
  Path variable
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aRMZtxeK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1p1gpb7urn2t1swhp6bi.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aRMZtxeK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1p1gpb7urn2t1swhp6bi.PNG" alt="Image description" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This is just a quick overview of what you can do with Postman to test APIs.&lt;br&gt;
Googling what postman can accomplish will provide you with more functionality.&lt;br&gt;
Thank you for taking the time to read this. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
