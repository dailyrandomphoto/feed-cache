<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Monitoring your Express application using OpenTelemetry</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Fri, 19 Nov 2021 13:00:38 +0000</pubDate>
      <link>https://dev.to/signoz/monitoring-your-express-application-using-opentelemetry-29am</link>
      <guid>https://dev.to/signoz/monitoring-your-express-application-using-opentelemetry-29am</guid>
      <description>&lt;p&gt;Nodejs is a popular Javascript runtime environment that executes Javascript code outside of a web browser. Express is the most popular web frameworks that sits on top of Nodejs and adds functionalities like middleware, routing, etc. to Nodejs.&lt;/p&gt;

&lt;p&gt;You can monitor your express application using OpenTelemetry and a tracing backend of your choice. OpenTelemetry is the leading open-source standard under the Cloud Native Computing Foundation that aims to standardize the process of instrumentation across multiple languages.&lt;/p&gt;

&lt;p&gt;In this article, we will be using &lt;strong&gt;&lt;a href="https://signoz.io/?utm_source=blog&amp;amp;utm_medium=monitor_express"&gt;SigNoz&lt;/a&gt;&lt;/strong&gt; to store and visualize the telemetry data collected by OpenTelemetry from a sample Expressjs application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#running-an-express-application-with-opentelemetry"&gt;
  &lt;/a&gt;
  Running an Express application with OpenTelemetry
&lt;/h2&gt;

&lt;p&gt;OpenTelemetry is a set of tools, APIs, and SDKs used to instrument applications to create and manage telemetry data(logs, metrics, and traces).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-signoz"&gt;
  &lt;/a&gt;
  Install SigNoz
&lt;/h3&gt;

&lt;p&gt;You can get started with SigNoz using just three commands at your terminal if you have Docker installed. You can install Docker from its &lt;a href="https://www.docker.com/get-started"&gt;official website&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;git&lt;/span&gt; &lt;span class="nx"&gt;clone&lt;/span&gt; &lt;span class="nx"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//github.com/SigNoz/signoz.git&lt;/span&gt;
&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;signoz&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;deploy&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will have an option to choose between ClickHouse or Kafka + Druid as a storage option. Trying out SigNoz with ClickHouse database takes less than 1.5GB of memory, and for this tutorial, we will use that option.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://signoz.io/docs/deployment/docker/?utm_source=blog&amp;amp;utm_medium=dd_vs_prometheus"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kIEm5Jzc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/deploy_docker_documentation.webp" alt="Deployment Docs" width="880" height="82"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you are done installing SigNoz, you can access the UI at: &lt;a href="http://localhost:3000/application"&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The application list shown in the dashboard is from a sample app called HOT R.O.D that comes bundled with the SigNoz installation package.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a4XIfOpH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_dashboard_homepage.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a4XIfOpH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_dashboard_homepage.webp" alt="SigNoz dashboard home" width="880" height="492"&gt;&lt;/a&gt;List of applications shown as an example on SigNoz dashboard&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-a-sample-express-application"&gt;
  &lt;/a&gt;
  Creating a sample express application
&lt;/h3&gt;

&lt;p&gt;You need to ensure that you have &lt;strong&gt;Node.js version 12 or newer&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nodejs.org/en/download/"&gt;Download latest version of Nodejs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For the sample application, let's create a basic 'hello world' express.js application.&lt;/p&gt;

&lt;p&gt;Steps to get the app set up and running:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Make a directory and install express&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Make a directory for your sample app on your machine. Then open up the terminal, navigate to the directory path and install express with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;   &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Setup server.js&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Create a file called &lt;code&gt;server.js&lt;/code&gt; in your directory and with any text editor setup your &lt;code&gt;Hello World&lt;/code&gt; file with the code below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

   &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

   &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

   &lt;span class="p"&gt;});&lt;/span&gt;

   &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9090&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Boot up the server with the following command on the terminal:&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;  &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can check if your app is working by visiting: &lt;a href="http://localhost:9090/hello"&gt;http://localhost:9090/hello&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IAo6MOQS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/express_app.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IAo6MOQS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/express_app.webp" alt="Express App" width="880" height="207"&gt;&lt;/a&gt;Express app running on local host&lt;/p&gt;

&lt;p&gt;You can then stop the server from running using &lt;code&gt;Ctrl + C&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#instrumenting-the-express-application-with-opentelemetry"&gt;
  &lt;/a&gt;
  Instrumenting the express application with OpenTelemetry
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Install OpenTelemetry launcher package&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
In the same directory path at the terminal, install the OpenTelemetry launcher package with this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;   &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;lightstep&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;opentelemetry&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;launcher&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The OpenTelemetry launcher makes getting started with OpenTelemetry easier by reducing configuration boilerplate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Using OpenTelemetry SDK&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
To use OpenTelemetry, you need to start the OpenTelemetry SDK before loading your application. By initializing OpenTelemetry first, we enable OpenTelemetry to apply available instrumentation and auto-detect packages before the application starts to run. To do that, go to your directory and create a new file named, "server_init.js". This will act as the new entry point for your app. Paste the following code in the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;lightstep&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

  &lt;span class="nx"&gt;opentelemetry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lightstep-opentelemetry-launcher-node&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lightstep&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;configureOpenTelemetry&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./server&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;shutdown&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shutdown&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;

  &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SDK shut down successfully&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Error shutting down SDK&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

  &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;exit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;shutdown&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SIGINT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;shutdown&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SIGTERM&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;shutdown&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Pass the necessary environment variable&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Once the file is created, you only need to run one last command at your terminal, which passes the necessary environment variables. Here, you also set SigNoz as your backend analysis tool.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;   &lt;span class="nx"&gt;OTEL_EXPORTER_OTLP_SPAN_ENDPOINT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://&amp;lt;IP of SigNoz Backend&amp;gt;:55681/v1/trace&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;OTEL_METRICS_EXPORTER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;none&lt;/span&gt; &lt;span class="nx"&gt;LS_SERVICE_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;service&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; node server_init.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replacing the placeholders in the above command for local host:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;IP of SigNoz Backend&lt;/code&gt;: localhost (since we are running SigNoz on our local host)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;service name&lt;/code&gt; : express_app (you can give whatever name that suits you)&lt;/p&gt;

&lt;p&gt;So the final command is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;  &lt;span class="nx"&gt;OTEL_EXPORTER_OTLP_SPAN_ENDPOINT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:55681/v1/trace&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;OTEL_METRICS_EXPORTER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;none&lt;/span&gt; &lt;span class="nx"&gt;LS_SERVICE_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;express_app&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;server_init&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And congratulations! You have now instrumented your express application with OpenTelemetry.&lt;/p&gt;

&lt;p&gt;Below you can find your &lt;code&gt;express_app&lt;/code&gt; in the list of applications being monitored. You might have to hit the endpoint at &lt;a href="http://localhost:9090/hello"&gt;http://localhost:9090/hello&lt;/a&gt; multiple times to generate some load before you see your app on the SigNoz dashboard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TD-AlNEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/express_list_apps.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TD-AlNEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/express_list_apps.webp" alt="Express app in the list of applications" width="880" height="507"&gt;&lt;/a&gt;Express app in the list of applications&lt;/p&gt;

&lt;p&gt;SigNoz is open-source, and a full-stack APM. It comes with charts of RED metrics and a seamless transition from metrics to traces.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#opensource-tool-to-visualize-telemetry-data"&gt;
  &lt;/a&gt;
  Open-source tool to visualize telemetry data
&lt;/h2&gt;

&lt;p&gt;SigNoz makes it easy to visualize metrics and traces captured through OpenTelemetry instrumentation.&lt;/p&gt;

&lt;p&gt;SigNoz comes with out of box RED metrics charts and visualization. RED metrics stands for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rate of requests&lt;/li&gt;
&lt;li&gt;Error rate of requests&lt;/li&gt;
&lt;li&gt;Duration taken by requests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---EjS1eNR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_charts_application_metrics.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---EjS1eNR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_charts_application_metrics.webp" alt="SigNoz charts and metrics" width="880" height="512"&gt;&lt;/a&gt;Measure things like application latency, requests per sec, error percentage and see your top endpoints with SigNoz.&lt;/p&gt;

&lt;p&gt;You can then choose a particular timestamp where latency is high to drill down to traces around that timestamp.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zipHHg5s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_list_of_traces_hc.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zipHHg5s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_list_of_traces_hc.webp" alt="List of traces on SigNoz dashboard" width="880" height="512"&gt;&lt;/a&gt;View of traces at a particular timestamp&lt;/p&gt;

&lt;p&gt;You can use flamegraphs to exactly identify the issue causing the latency.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fmGoLDx8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_flamegraphs.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fmGoLDx8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_flamegraphs.webp" alt="Flamegraphs used to visualize spans of distributed tracing in SigNoz UI" width="880" height="512"&gt;&lt;/a&gt;View of traces at a particular timestamp&lt;/p&gt;

&lt;p&gt;You can also build custom metrics dashboard for your infrastructure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z7C5zsAp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_custom_dashboard-min.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z7C5zsAp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_custom_dashboard-min.webp" alt="Custom metrics dashboard" width="880" height="477"&gt;&lt;/a&gt;You can also build a custom metrics dashboard for your infrastructure&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;OpenTelemetry makes it very convenient to instrument your Express application. You can then use an open-source APM tool like SigNoz to analyze the performance of your app. As SigNoz offers a full-stack observability tool, you don't have to use multiple tools for your monitoring needs.&lt;/p&gt;

&lt;p&gt;You can try out SigNoz by visiting its GitHub repo 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo" width="708" height="162"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or need any help in setting things up, join our slack community and ping us in &lt;code&gt;#help&lt;/code&gt; channel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/signoz-slack"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dSs2tC2s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/join_slack_cta.png" alt="SigNoz Slack community" width="880" height="118"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you want to read more about SigNoz 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://signoz.io/opentelemetry/go/"&gt;Golang Aplication Monitoring with OpenTelemetry and SigNoz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://signoz.io/blog/opentelemetry-collector-complete-guide/"&gt;OpenTelemetry collector - full guide&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>monitoring</category>
      <category>devops</category>
    </item>
    <item>
      <title>How to create responsive loopstudio landing page with HTML CSS JS | Frontend Mentor</title>
      <author>Sadee</author>
      <pubDate>Fri, 19 Nov 2021 13:00:18 +0000</pubDate>
      <link>https://dev.to/codewithsadee/how-to-create-responsive-loopstudio-landing-page-with-html-css-js-frontend-mentor-4594</link>
      <guid>https://dev.to/codewithsadee/how-to-create-responsive-loopstudio-landing-page-with-html-css-js-frontend-mentor-4594</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/lDHspzUov88"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;How to create responsive loopstudio landing page with html css js&lt;br&gt;
Frontend mentor&lt;/p&gt;

&lt;p&gt;In this video, &lt;br&gt;
I will show you how to build a Complete Landing Page Website using HTML CSS JS step by step.&lt;/p&gt;




&lt;p&gt;HI 👋&lt;br&gt;
I'm Sadee (webdev)&lt;br&gt;
In this channel I make videos about Complete Responsive website.&lt;br&gt;
You can checkout my channel 👇&lt;/p&gt;

&lt;p&gt;📺 My Channel : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
🔔 Subscribe : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g?sub_confirmation=1"&gt;subscribe now&lt;/a&gt;&lt;br&gt;
🕐 New videos Every Friday &amp;amp; Tuesday&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#recommended-videos"&gt;
  &lt;/a&gt;
  📹 Recommended Videos
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://youtu.be/TTrYjLOJeKs"&gt;How to use ionicon&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#essential-links"&gt;
  &lt;/a&gt;
  🔗 Essential links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://drive.google.com/file/d/1imAhujwJPv7lv1XVyqlbXPW0Nv4psRPs/view?usp=sharing"&gt;All files&lt;/a&gt;&lt;br&gt;
&lt;a href="https://fonts.google.com/specimen/Alata?query=alata"&gt;Font - Alata&lt;/a&gt;&lt;br&gt;
&lt;a href="https://fonts.google.com/specimen/Josefin+Sans?query=josefin"&gt;Font - Josefin Sans&lt;/a&gt;&lt;br&gt;
&lt;a href="https://ionic.io/ionicons"&gt;Ionicon&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.patreon.com/codewithsadee"&gt;Source Code&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#timestamp"&gt;
  &lt;/a&gt;
  ⏱️ Timestamp
&lt;/h2&gt;

&lt;p&gt;0:00 - Demo&lt;br&gt;
1:42 - File structure&lt;br&gt;
2:06 - Html structure &amp;amp; variable setup.&lt;br&gt;
4:37 - Reset &amp;amp; all heading style&lt;br&gt;
5:38 - Header section &lt;br&gt;
10:08 - About section&lt;br&gt;
12:17 - Product section&lt;br&gt;
20:16 - Footer section&lt;br&gt;
23:40 - Media queries&lt;br&gt;
37:07 - Mobile nav toggling funcitonality&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#others-videos"&gt;
  &lt;/a&gt;
  📹 Others Videos
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://youtube.com/playlist?list=PLasZMtSCguZbYYb7uzDMAC0rg49A8XOsS"&gt;Personal Portfolio Website&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/OpbbPLPqSDc"&gt;Toggle Button with 3d Effect&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/0MDBVR93g7E"&gt;Twitter Sidebar Clone&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/g9VdvKx8fuM"&gt;Awesome Card Design for Website&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/mUBW8i2kht0"&gt;Restaurant Header Design&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#like-follow-amp-subscribe-me"&gt;
  &lt;/a&gt;
  👤 Like - Follow &amp;amp; Subscribe Me
&lt;/h2&gt;

&lt;p&gt;Twitter : &lt;a href="https://twitter.com/codewithsadee"&gt;https://twitter.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Github : &lt;a href="https://github.com/codewithsadee"&gt;https://github.com/codewithsadee&lt;/a&gt;&lt;br&gt;
YouTube : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
Buy Me A Coffee : &lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;https://www.buymeacoffee.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Patreon : &lt;a href="https://www.patreon.com/codewithsadee"&gt;https://www.patreon.com/codewithsadee&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qhS87mRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kn6vwn4mulhsx6o69is.png" alt="Buy Me A Coffee" width="225" height="51"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The Classlist API</title>
      <author>Ustariz Enzo</author>
      <pubDate>Fri, 19 Nov 2021 12:52:02 +0000</pubDate>
      <link>https://dev.to/ziratsu/the-classlist-api-3hi3</link>
      <guid>https://dev.to/ziratsu/the-classlist-api-3hi3</guid>
      <description>&lt;p&gt;Hey &lt;strong&gt;fellow creators&lt;/strong&gt;,&lt;/p&gt;

&lt;p&gt;Let's learn how to use the &lt;strong&gt;classlist API&lt;/strong&gt;, which is handy since it'll let you add, remove, and plenty of other things with the classes of your html code!&lt;/p&gt;

&lt;p&gt;If you prefer to watch the video &lt;strong&gt;version&lt;/strong&gt;, it's right here :&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nmQKIJ8gZBE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Here's a &lt;a href="https://codepen.io/Ziratsu/pen/LYyYKyZ"&gt;code pen&lt;/a&gt; for you to follow along!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-access-the-api"&gt;
  &lt;/a&gt;
  1. Access the API.
&lt;/h2&gt;

&lt;p&gt;This is an API directly implemented in the browser, so you don't need to do anything as long as you are using Javascript with your browser.&lt;/p&gt;

&lt;p&gt;Create a simple title in your HTML, here's mine:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"title t1 heading"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Yellowstone National Park is an American national park located in the western United States.&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As well as a CSS file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*,&lt;/span&gt; &lt;span class="nd"&gt;::before&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#222&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Helvetica&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.title&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f1f1f1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.salmon&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;salmon&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So here's how you can access the API:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, look into your console and you'll see that you have a list with the different classes, and in the prototype you'll see the different methods that you can use, like toggle, replace etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-lets-try-the-add-method"&gt;
  &lt;/a&gt;
  2. Let's try the &lt;em&gt;add&lt;/em&gt; method!
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;salmon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will add the background colour to the H1! You're just adding one class to your title.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-try-the-remove-method"&gt;
  &lt;/a&gt;
  3. Try the &lt;em&gt;remove&lt;/em&gt; method.
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;salmon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now the background color is removed!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-what-does-the-toggle-method-do"&gt;
  &lt;/a&gt;
  4. What does the &lt;em&gt;toggle&lt;/em&gt; method do?
&lt;/h2&gt;

&lt;p&gt;Imagine if you click on the element, you want to toggle the salmon class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;salmon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, if you click on it, the background will reappear, and if you click on it again it'll disappear, etc!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-the-item-method"&gt;
  &lt;/a&gt;
  5. The &lt;em&gt;item&lt;/em&gt; method.
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will give us the first class. It's not always useful, but that way you know it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-whats-the-contains-method"&gt;
  &lt;/a&gt;
  6. What's the &lt;em&gt;contains&lt;/em&gt; method?
&lt;/h2&gt;

&lt;p&gt;This method is more useful! This will help you know if an element contains a certain class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;heading&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, since our title does contain the class heading, it will return true in the console.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-what-about-the-replace-method"&gt;
  &lt;/a&gt;
  7. What about the &lt;em&gt;replace&lt;/em&gt; method?
&lt;/h2&gt;

&lt;p&gt;The replace method is pretty straightforward: as the title says, it replaces a class by another class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;heading&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;salmon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The title will now have the class salmon instead of heading. &lt;/p&gt;

&lt;p&gt;These methods are fairly easy to learn, but are pretty useful as you can see!&lt;/p&gt;

&lt;p&gt;Come and take a look at my &lt;strong&gt;Youtube channel&lt;/strong&gt;: &lt;a href="https://www.youtube.com/c/Learntocreate/videos"&gt;https://www.youtube.com/c/Learntocreate/videos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See you soon!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enzo. &lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Deploy Sylius to Heroku</title>
      <author>Ahmed Khaled MOhamed</author>
      <pubDate>Fri, 19 Nov 2021 12:38:46 +0000</pubDate>
      <link>https://dev.to/aaahmedaa/deploy-sylius-to-heroku-55p1</link>
      <guid>https://dev.to/aaahmedaa/deploy-sylius-to-heroku-55p1</guid>
      <description>&lt;p&gt;In this blog we are going to deploy sylius store to heroku, First you need to know that sylius will need php, node, mysql environments to load and build assets for our store so long story short we will install new app and add two buildpacks &lt;code&gt;heroku/php&lt;/code&gt; and &lt;code&gt;heroku/nodejs&lt;/code&gt; and will add add-on &lt;a href="https://elements.heroku.com/addons/jawsdb"&gt;JawsDb&lt;/a&gt; for database storage and make some &lt;code&gt;nginx&lt;/code&gt; and edit &lt;code&gt;composer.json&lt;/code&gt; to make the project runnable by heroku.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-should-know"&gt;
  &lt;/a&gt;
  You should know
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;heroku will look for the required php version from the &lt;code&gt;composer.json&lt;/code&gt; and will look for &lt;code&gt;compile script&lt;/code&gt; to run the project.&lt;/li&gt;
&lt;li&gt;sylius database is too big for the free version on &lt;code&gt;Jawsdb&lt;/code&gt; so feel free to choose your package the &lt;code&gt;10$&lt;/code&gt; done the job for me.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;get A fresh copy of sylius &lt;a href="https://docs.sylius.com/en/latest/book/installation/installation.html"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;navigate to your sylius project dir and init new heroku app using the cli&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku create APP_NAME
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;we need to add &lt;code&gt;heroku/php&lt;/code&gt; and &lt;code&gt;heroku/node&lt;/code&gt; &lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku buildpacks:set heroku/php --app APP_NAME
$ heroku buildpacks:set heroku/nodejs --app APP_NAME
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;OR&lt;/code&gt; you can navigate to settings and under buildpack add &lt;code&gt;php&lt;/code&gt; and &lt;code&gt;nodeJs&lt;/code&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;add the Jawsweb database then set &lt;code&gt;APP_END=prod&lt;/code&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku addons:create jawsdb --app APP_NAME # This command will also add a new env JAWSDB_URL
$ heroku config:set APP_END=prod --app APP_NAME
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;create &lt;code&gt;Procfile&lt;/code&gt; in your root directory and add this content &lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;web: heroku-php-nginx -C nginx_app.conf public/
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;create nginx config file &lt;code&gt;nginx_app.conf&lt;/code&gt; in the root directory&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;location / {
    # try to serve file directly, fallback to rewrite
    try_files $uri @rewriteapp;
}

location @rewriteapp {
    # rewrite all to index.php
    rewrite ^(.*)$ /index.php/$1 last;
}

location ~ ^/index\.php(/|$) {
    try_files @heroku-fcgi @heroku-fcgi;
    # ensure that /index.php isn't accessible directly, but only through a rewrite 
internal;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;we need to make some changes to our &lt;code&gt;composer.json&lt;/code&gt; so heroku can run sylius install and build scripts&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    "scripts": {
        "compile": [
            "@php bin/console sylius:install --no-interaction --fixture-suite=default"
        ],
        "post-create-project-cmd": [
            "@php bin/console sylius:inform-about-gus --ansi",
            "@php bin/console sylius:show-available-plugins --ansi"
        ],
        "auto-scripts": {
            "cache:clear": "symfony-cmd",
            "assets:install %PUBLIC_DIR%": "symfony-cmd"
        }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://github.com/aa-ahmed-aa/SyliusToHeroku/blob/master/composer.json#L88-L99"&gt;Snippet Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and under &lt;code&gt;require&lt;/code&gt; section add to enable this php extension on the heroku app&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"ext-intl": "*"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then run&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ composer update 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;do not forget to remove &lt;code&gt;composer.lock&lt;/code&gt; from &lt;code&gt;.gitignore&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;to make the server prod logs appear in the instance logs edit &lt;code&gt;/conig/packages/prod/monolog.yaml&lt;/code&gt; with content&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;monolog:
    handlers:
        main:
            type: fingers_crossed
            action_level: error
            handler: nested
            excluded_http_codes: [404, 405]
        nested:
            type: stream
            path: "php://stderr"
            level: debug
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;remove the &lt;code&gt;.env&lt;/code&gt; file from &lt;code&gt;.gitignore&lt;/code&gt; and make sure it contain these two envs reading from global env&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;APP_ENV=${APP_END}
DATABASE_URL=${JAWSDB_URL}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;we will create a repo on github and make heroku deploy from github so &lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git init
$ git remote add origin &amp;lt;github_remote_url&amp;gt;
$ git add .
$ git commit -am "init commit"
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;then go to the app heroku app to the &lt;code&gt;Deploy&lt;/code&gt; tab then select &lt;code&gt;Github&lt;/code&gt; from &lt;code&gt;Deployment method&lt;/code&gt; then choose your repository and the branch to deploy then click on the &lt;code&gt;Deploy Branch&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click on the &lt;code&gt;open app&lt;/code&gt; and you just deployed your first sylius store to heroku.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#referenceies"&gt;
  &lt;/a&gt;
  Referenceies
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/jawsdb#provisioning-the-add-on"&gt;Jawsdb mysql&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://elements.heroku.com/buildpacks/heroku/heroku-buildpack-php"&gt;PHP buildpack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://elements.heroku.com/buildpacks/heroku/heroku-buildpack-nodejs"&gt;NodeJs Apps on heroku&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/custom-php-settings"&gt;Customize nginx and php&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.sylius.com/en/1.9/getting-started-with-sylius/installation.html"&gt;Install sylius&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/deploying-symfony4#logging"&gt;Symfony logs to the instance logs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>php</category>
      <category>commerce</category>
      <category>symfony</category>
      <category>sylius</category>
    </item>
    <item>
      <title>Sprint Velocity - Your guide</title>
      <author>Rebecca Ferrao</author>
      <pubDate>Fri, 19 Nov 2021 12:32:17 +0000</pubDate>
      <link>https://dev.to/rebecca/sprint-velocity-your-guide-2pbo</link>
      <guid>https://dev.to/rebecca/sprint-velocity-your-guide-2pbo</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-velocity-in-scrum"&gt;
  &lt;/a&gt;
  What is Velocity in Scrum?
&lt;/h2&gt;

&lt;p&gt;Velocity is the amount of work a scrum team can accomplish during a single sprint. In other words, it is the amount of product backlog that the team turns into an increment of the end product in a given sprint. Velocity is a vital metric to know the rate at which the scrum team can deliver valuable products. The value is calculated after the sprint is over, by taking a total of the points for all completed user stories.&lt;/p&gt;

&lt;p&gt;Making use of the velocity, the team can determine how long the project will take to complete. Based on this, they can accordingly revise the time for release if required. This determination takes into consideration the estimate for the remaining user stories. It also assumes that the velocity of the scrum team over the remaining iterations will be the same.&lt;/p&gt;

&lt;p&gt;So we know the very basics of it, but let's understand the velocity in scrum in more detail. Read on to find out how it came into use and how it's calculated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#history"&gt;
  &lt;/a&gt;
  History
&lt;/h2&gt;

&lt;p&gt;Velocity in Scrum is a concept whose exact origins are tough to trace. The concept came into being over a period of time and going back to the exact point isn't possible.&lt;/p&gt;

&lt;p&gt;Some early works, such as 'Planning Extreme Programming' (yr: 2000) had mentions of Individual Velocity. Earlier, 'Ideal weeks' used to be estimated, but this was soon replaced by Story points. Instead of the number of weeks the project should ideally take, it was now the effort required that was considered.&lt;/p&gt;

&lt;p&gt;In the 2000 book however, Velocity came into use as a replacement to the earlier term 'Load Factor'. A couple years later, in the year 2002, the Scrum users adopted the practice of measuring velocity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scrum-velocity-calculation-and-example"&gt;
  &lt;/a&gt;
  Scrum Velocity Calculation and Example
&lt;/h2&gt;

&lt;p&gt;To get an idea of the amount of work that the team will be able to complete, it is necessary to know the past performance. You can review the past three or so sprints to get a good idea of the average work that the team is capable of.&lt;/p&gt;

&lt;p&gt;We have made use of story points in this example to calculate the work completed in each sprint. A quick reminder that story points is a measure of effort and time that a user story is expected to take. We've given more details about story point estimation using the Fibonacci series &lt;a href="https://buildd.co/product/story-points-fibonacci-agile-estimation"&gt;here&lt;/a&gt;. The following is a brief on how you can measure the performance. Consider the work over three sprints:&lt;/p&gt;

&lt;p&gt;Sprint 1:&lt;/p&gt;

&lt;p&gt;In this sprint, the team has agreed to complete six user stories.&lt;/p&gt;

&lt;p&gt;Next, each user story has seven story points.&lt;/p&gt;

&lt;p&gt;This means that the total number of story points in the sprint is 42.&lt;/p&gt;

&lt;p&gt;At the end of the sprint, the team has completed five out of six user stories.&lt;/p&gt;

&lt;p&gt;Sprint 2:&lt;/p&gt;

&lt;p&gt;Here, the team has agreed upon seven user stories including one from the earlier sprint.&lt;/p&gt;

&lt;p&gt;Again, the number of story points is seven, in this case, amounting to a total number of story points of 49.&lt;/p&gt;

&lt;p&gt;By the end of this sprint, the team has completed five user stories.&lt;/p&gt;

&lt;p&gt;Sprint 3:&lt;/p&gt;

&lt;p&gt;In the third sprint, the team commits to working on eight user stories. This again includes two user stories from the earlier sprint.&lt;/p&gt;

&lt;p&gt;The number of story points is the same as the other two, seven in each. As can be seen, the total number of story points is 56.&lt;/p&gt;

&lt;p&gt;The team completes six user stories in total in this sprint.&lt;/p&gt;

&lt;p&gt;Now that we have the data of three sprints, the next step is to calculate the average of the three sprints.&lt;/p&gt;

&lt;p&gt;The average number of story points completed = Sum of story points completed in each sprint / Total number of sprints.&lt;/p&gt;

&lt;p&gt;Story points completed in each sprint:&lt;/p&gt;

&lt;p&gt;1 and 2 = 5 user stories * 7 story points = 35&lt;/p&gt;

&lt;p&gt;3 = 6 user stories * 7 story points = 42&lt;/p&gt;

&lt;p&gt;Therefore, the average number of story points is then calculated to be&lt;/p&gt;

&lt;p&gt;(35 + 35 + 42)/3&lt;/p&gt;

&lt;p&gt;=~37&lt;/p&gt;

&lt;p&gt;Hence, this 37 is our average sprint velocity. The rest of the work is calculated based on this. For instance, if the team has to complete 220 more story points, dividing by 37 will give us a good estimate.&lt;/p&gt;

&lt;p&gt;So, 22/37 = ~6&lt;/p&gt;

&lt;p&gt;Thus the team would need around 6 more sprints to complete all the user stories. This is under the assumption that each sprint includes about 37 story points. Note that this is an approximation and there could be changes from one sprint to another. Hence, velocity in scrum can't be considered as an exact value.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#velocity-chart"&gt;
  &lt;/a&gt;
  Velocity Chart
&lt;/h2&gt;

&lt;p&gt;Teams make use of the velocity chart to visually track the progress of the work that they have done. The &lt;a href="https://buildd.co/product/sprint-burndown-charts"&gt;sprint burndown chart&lt;/a&gt; is also made use of for this purpose.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The velocity chart is a graph of estimated story points against completed story points. It is a simple double bar graph which shows how many story points were committed to and how many were done.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HNNXt0w9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z130j5xvg8cfxhwoldes.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HNNXt0w9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z130j5xvg8cfxhwoldes.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The burndown chart shows how much work is complete, what's left and the amount of time remaining for the same.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Originally published &lt;a href="https://buildd.co/product/sprint-velocity-scrum"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>scrum</category>
      <category>agile</category>
      <category>beginners</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>Virtual Webinar on 'Reliability Reimagined: How SREs spearhead competitive CX'</title>
      <author>Squadcast Community</author>
      <pubDate>Fri, 19 Nov 2021 12:31:50 +0000</pubDate>
      <link>https://dev.to/squadcast/virtual-webinar-on-reliability-reimagined-how-sres-spearhead-competitive-cx-29ch</link>
      <guid>https://dev.to/squadcast/virtual-webinar-on-reliability-reimagined-how-sres-spearhead-competitive-cx-29ch</guid>
      <description>&lt;p&gt;Topic - &lt;strong&gt;"Reliability Reimagined: How SREs spearhead competitive CX"&lt;/strong&gt;&lt;br&gt;
Date: &lt;strong&gt;9th Dec, Thursday&lt;/strong&gt;&lt;br&gt;
Time: &lt;strong&gt;10:00 AM PST&lt;/strong&gt;&lt;br&gt;
Hosted by: &lt;strong&gt;&lt;a href="https://www.linkedin.com/company/dnxventures/"&gt;DNX Ventures&lt;/a&gt; in collaboration with &lt;a href="https://www.linkedin.com/company/squadcast/"&gt;Squadcast&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Keynote speaker and industry expert - &lt;a href="https://www.linkedin.com/in/lasagnaboy/"&gt;Salim Virji&lt;/a&gt;, Sr. SRE at Google along with &lt;a href="https://www.linkedin.com/in/bijuchacko/"&gt;Biju Chacko&lt;/a&gt;, VP of Engineering at Squadcast will be sharing their thoughts on how practising Site Reliability Engineering can effectively improve Customer Experience.&lt;/p&gt;

&lt;p&gt;The second half of the session will be a thought leadership panel with speakers and &lt;a href="https://www.linkedin.com/in/ACoAAAAQSIYBuuI53xUqLCp4Pmh1oAh2Shpi-p0"&gt;Eva Nahari&lt;/a&gt;, Principal at &lt;a href="https://www.linkedin.com/company/dnxventures/"&gt;DNX Ventures&lt;/a&gt;, discussing methods and practices on how organizations can achieve competitive CX by leveraging SRE.&lt;/p&gt;

&lt;p&gt;Register here: &lt;a href="https://lnkd.in/dTxj_K-v"&gt;https://lnkd.in/dTxj_K-v&lt;/a&gt;&lt;/p&gt;

</description>
      <category>sre</category>
      <category>devops</category>
      <category>monitoring</category>
      <category>oncall</category>
    </item>
    <item>
      <title>Slides: "Going Forward with WebAssembly"</title>
      <author>Ilham Wahabi</author>
      <pubDate>Fri, 19 Nov 2021 12:28:57 +0000</pubDate>
      <link>https://dev.to/ilhamwahabigx/slides-going-forward-with-webassembly-4fd</link>
      <guid>https://dev.to/ilhamwahabigx/slides-going-forward-with-webassembly-4fd</guid>
      <description>&lt;p&gt;Hello everyone, last week I've done sharing session in my team about WebAssembly.&lt;/p&gt;

&lt;p&gt;We talked about it's definition, history, benefits, and the relationship with JavaScript (actually we also had a demo).&lt;/p&gt;

&lt;p&gt;And here is the slides if you also interested&lt;/p&gt;

&lt;p&gt;&lt;a href="https://wasm-intro.iwgx.io"&gt;https://wasm-intro.iwgx.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I built the slide using Slidev and deployed to Netlify.&lt;/p&gt;

</description>
      <category>web</category>
      <category>javascript</category>
      <category>webassembly</category>
      <category>slidev</category>
    </item>
    <item>
      <title>Cardano cryptocurrency</title>
      <author>Analytics steps</author>
      <pubDate>Fri, 19 Nov 2021 12:19:59 +0000</pubDate>
      <link>https://dev.to/analyticsstepss/cardano-cryptocurrency-3l3j</link>
      <guid>https://dev.to/analyticsstepss/cardano-cryptocurrency-3l3j</guid>
      <description>&lt;p&gt;Cardano is a proof-of-stake blockchain stage: the first to be established on peer-audited research and created through proof-based strategies. It consolidates spearheading advancements to give unmatched security and maintainability to decentralized applications, frameworks, and social orders. &lt;/p&gt;

&lt;p&gt;With a main group of specialists, Cardano exists to reallocate power from unapproachable designs to the edges – to people – and be an empowering power for positive change and progress. &lt;/p&gt;

&lt;p&gt;Ouroboros is the main companion surveyed, irrefutably secure blockchain convention, and &lt;a href="https://www.analyticssteps.com/blogs/cardano-cryptocurrency-features-and-working"&gt;Cardano&lt;/a&gt; is the first blockchain to execute it. Ouroboros empowers the Cardano organization's decentralization and permits it to economically scale to worldwide necessities without, significantly, compromising security. &lt;/p&gt;

&lt;p&gt;The convention is the finish of vigorous exertion, expanding on essential exploration, and is moved by a dream for safer and straightforward worldwide installment frameworks, and a way to rearrange, all the more reason, power, and control.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Introduction to Nuxt modules</title>
      <author>Jakub Andrzejewski</author>
      <pubDate>Fri, 19 Nov 2021 12:15:59 +0000</pubDate>
      <link>https://dev.to/baroshem/introduction-to-nuxt-modules-21a1</link>
      <guid>https://dev.to/baroshem/introduction-to-nuxt-modules-21a1</guid>
      <description>&lt;p&gt;Developing my first Nuxt module took much more time than I expected, probably because I had no experience in creating such modules whatsoever. I spent hours reading Nuxt.js documentation (which is very good btw), watching tutorials, inspecting code repositories of other modules, so I was finally able to create my first module -&amp;gt; Adyen payment module for Nuxt. But don't worry. To built a second module, it took only 3 hours (including reading platform docs ;))&lt;/p&gt;

&lt;p&gt;One of the best sources of knowledge so far about creating Nuxt modules is an article by &lt;a class="mentioned-user" href="https://dev.to/debs_obrien"&gt;@debs_obrien&lt;/a&gt;
 -&amp;gt; &lt;a href="https://nuxtjs.org/tutorials/creating-a-nuxt-module/"&gt;https://nuxtjs.org/tutorials/creating-a-nuxt-module/&lt;/a&gt;. Definitely worth checking out alongside this article to build your next (Nuxt ;) ) module.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-nuxt-module"&gt;
  &lt;/a&gt;
  What is a Nuxt module?
&lt;/h2&gt;

&lt;p&gt;Nuxt.js has a very good documentation on the purpose and anatomy of &lt;a href="https://nuxtjs.org/docs/directory-structure/modules/"&gt;modules&lt;/a&gt;, so I will just copy/paste some short definitions here.&lt;/p&gt;

&lt;p&gt;Nuxt provides a higher-order module system that makes it possible to extend the core. Modules are functions that are called sequentially when booting Nuxt.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
   &lt;span class="c1"&gt;// Using package name&lt;/span&gt;
   &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nuxtjs/axios&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

   &lt;span class="c1"&gt;// Relative to your project srcDir&lt;/span&gt;
   &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;~/modules/awesome.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

   &lt;span class="c1"&gt;// Providing options&lt;/span&gt;
   &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nuxtjs/google-analytics&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;ua&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;X1234567&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}],&lt;/span&gt;

   &lt;span class="c1"&gt;// Inline definition&lt;/span&gt;
   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
 &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more details, I highly encourage you to read the modules section in the Nuxt.js documentation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nuxt-module-directory-structure"&gt;
  &lt;/a&gt;
  Nuxt module directory structure
&lt;/h2&gt;

&lt;p&gt;Woah! There are many files here. I suppose, you can feel quite lost right now but don't worry. Below I explained each folder and meaningful file that you need to create/modify in order to have your own module set up.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g_74IBSM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rsbz9wn36zfl6384wykn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g_74IBSM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rsbz9wn36zfl6384wykn.png" alt="nuxt-module-directory" width="394" height="790"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-dist-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;dist&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The output of your source files written in TypeScript (if your module is built on top of that). If you are using plain JavaScript you will most probably export your package with direct &lt;code&gt;src/lib&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-docs-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;docs&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Nuxt.js based docs for modules. Nuxt.js team provides a very good documentation template that you can see across many Nuxt modules.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eK_-ZmeJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ku6mzkzr1zbvz4hczhho.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eK_-ZmeJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ku6mzkzr1zbvz4hczhho.png" alt="nuxt-i18n-docs" width="880" height="560"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In here you can write instructions on how to use your module in a Nuxt application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-example-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;example&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;In this directory you will find a very basic Nuxt project where you can test how your module works. It's good to keep it as simple as possible so that it will be easy for the newcomers to try it out.&lt;/p&gt;

&lt;p&gt;Inside &lt;code&gt;example/nuxt.config.js&lt;/code&gt; you can import the module and its options.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../src/module.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

 &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-awesome-module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;option1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-srclib-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;src/lib&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;In this directory you will put your files related to the module itself. The most basic example contains a &lt;code&gt;module.js&lt;/code&gt; and &lt;code&gt;plugin.js&lt;/code&gt; files.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-modulejs-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;module.js&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;In simple words, this file will be used as a declaration inside the &lt;code&gt;nuxt.config.js&lt;/code&gt; file in the &lt;code&gt;modules&lt;/code&gt; section. It will allow for module registration and will also accept some module options that will be later used in your &lt;code&gt;plugin.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nuxtModule&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;moduleOptions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-awesome-module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;moduleOptions&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addPlugin&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
   &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;runtimeDir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;plugin.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
   &lt;span class="na"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-awesome-module.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="nx"&gt;options&lt;/span&gt;
 &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;nuxtModule&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside this file you can also add some error handling when a user forgets to add certain options, modify options and create separate plugins for client, server, or both.&lt;/p&gt;

&lt;p&gt;If you need to access the underlying server of Nuxt application you can do so by calling &lt;code&gt;this.addServerMiddleware()&lt;/code&gt; and passing your routes. You can see an example in Nuxt &lt;a href="https://nuxtjs.org/docs/configuration-glossary/configuration-servermiddleware#custom-api-endpoint"&gt;docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The easiest way to indicate that a plugin is server/client side only is to add a corresponding word to the plugin name, i.e.:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addPlugin&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
   &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;runtimeDir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;plugin.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
   &lt;span class="na"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-awesome-module.server.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;// add .server here to make it server only&lt;/span&gt;
   &lt;span class="nx"&gt;options&lt;/span&gt;
 &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are using TypeScript you can also declare global typings here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;declare&lt;/span&gt; &lt;span class="nx"&gt;module&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nuxt/types&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;NuxtConfig&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-awesome-module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;ModuleOptions&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// Nuxt 2.14+&lt;/span&gt;
 &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Configuration&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-awesome-module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;ModuleOptions&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// Nuxt 2.9 - 2.13&lt;/span&gt;
 &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;$my-awesome-module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;Api&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#-raw-pluginjs-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;plugin.js&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;In this file you will be injecting content into global Nuxt context.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;configuration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;inject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;inject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-awesome-module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-awesome-module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;configuration&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In some cases you may want to register a component/function to be used by Vue. You can do that here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;registerComponent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;&lt;/span&gt;
 &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
 &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;SomeComponent&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;~directory/SomeComponent.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

 &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SomeComponent&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SomeComponent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-test-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;test&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;In this directory you will write your unit tests using Jest. The simplest unit test case can look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;setupTest&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
   &lt;span class="na"&gt;testDir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;fixture&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../example&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;server&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;config&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-awesome-module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="na"&gt;option1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;})&lt;/span&gt;

 &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should have config with Adyen options&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;option1&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getNuxt&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-awesome-module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

   &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;option1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toBeDefined&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;You just got knowledge that should allow you to create your own Nuxt module. Well done! I highly encourage you to dig into the Nuxt.js documentation about modules and plugins, as well as the source code of certain modules to get a better understanding of how it is all working together.&lt;/p&gt;

&lt;p&gt;I have recently released two E-Commerce related packages that you may want to checkout:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Baroshem/nuxt-bigcommerce"&gt;https://github.com/Baroshem/nuxt-bigcommerce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Baroshem/nuxt-adyen-module"&gt;https://github.com/Baroshem/nuxt-adyen-module&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#bonus-links"&gt;
  &lt;/a&gt;
  Bonus links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Baroshem/nuxt-module-template"&gt;https://github.com/Baroshem/nuxt-module-template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nuxt-community/module-template"&gt;https://github.com/nuxt-community/module-template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://modules.nuxtjs.org"&gt;https://modules.nuxtjs.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>nuxt</category>
      <category>module</category>
      <category>vue</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Everything You Need to Know About Blazor Kanban Cards</title>
      <author>Techguy</author>
      <pubDate>Fri, 19 Nov 2021 12:15:54 +0000</pubDate>
      <link>https://dev.to/syncfusion/everything-you-need-to-know-about-blazor-kanban-cards-16jn</link>
      <guid>https://dev.to/syncfusion/everything-you-need-to-know-about-blazor-kanban-cards-16jn</guid>
      <description>&lt;p&gt;Learn how to work with cards in the Syncfusion &lt;a href="https://www.syncfusion.com/blazor-components/blazor-kanban-board?utm_source=social&amp;amp;utm_medium=socialmedia&amp;amp;utm_campaign=backlink_promotion&amp;amp;ref=dev.to"&gt;Blazor Kanban component&lt;/a&gt;. You will learn about a few card options like setting card headers, content, and the left border color. &lt;/p&gt;

&lt;p&gt;Product Overview: &lt;a href="https://www.syncfusion.com/blazor-components/blazor-kanban-board?utm_source=social&amp;amp;utm_medium=socialmedia&amp;amp;utm_campaign=backlink_promotion&amp;amp;ref=dev.to"&gt;Blazor Kanban Component&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download an example from GitHub: &lt;a href="https://github.com/SyncfusionExamples"&gt;https://github.com/SyncfusionExamples&lt;/a&gt;... &lt;/p&gt;

&lt;p&gt;Refer to the following documentation to learn about Blazor Kanban cards: &lt;a href="https://blazor.syncfusion.com/documen"&gt;https://blazor.syncfusion.com/documen&lt;/a&gt;...&lt;/p&gt;

&lt;p&gt;Check out this online example of Blazor Kanban cards: &lt;a href="https://blazor.syncfusion.com/demos/k"&gt;https://blazor.syncfusion.com/demos/k&lt;/a&gt;...&lt;/p&gt;

&lt;p&gt;Watch the following video to customize the Blazor Kanban cards using templates: &lt;a href="https://www.youtube.com/watch?v=PjTgX"&gt;https://www.youtube.com/watch?v=PjTgX&lt;/a&gt;... &lt;/p&gt;

&lt;p&gt;Watch the following video to get started with a Blazor WebAssembly app and add Syncfusion Blazor components to it: &lt;a href="https://www.youtube.com/watch?v=zKU58"&gt;https://www.youtube.com/watch?v=zKU58&lt;/a&gt;...&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fRjpmWxV6ao"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>blazor</category>
      <category>dotnet</category>
      <category>webdev</category>
      <category>csharp</category>
    </item>
    <item>
      <title>Como criar rotas personalizadas no Magento 2</title>
      <author>Lucas Teixeira dos Santos Santana</author>
      <pubDate>Fri, 19 Nov 2021 12:11:28 +0000</pubDate>
      <link>https://dev.to/santanaluc94/como-criar-rotas-personalizadas-no-magento-2-4fkg</link>
      <guid>https://dev.to/santanaluc94/como-criar-rotas-personalizadas-no-magento-2-4fkg</guid>
      <description>&lt;h2&gt;
  &lt;a href="#contextualizando"&gt;
  &lt;/a&gt;
  Contextualizando
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#o-que-%C3%A9-uma-rota"&gt;
  &lt;/a&gt;
  O que é uma rota?
&lt;/h3&gt;

&lt;p&gt;Uma rota está diretamente relacionada a URL funcionando como um localizador de um recurso, acrescentando um &lt;em&gt;path&lt;/em&gt; (caminho) na URL, que ao ser chamado, retornará uma página gerada dinamicamente conforme o caminha da URL.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#c%C3%B3digo-para-criar-uma-rota-personalizada"&gt;
  &lt;/a&gt;
  Código para criar uma rota personalizada
&lt;/h2&gt;

&lt;p&gt;O arquivo &lt;code&gt;routes.xml&lt;/code&gt; contém informações sobre todas as rotas e &lt;em&gt;frontNames&lt;/em&gt; registrados. O atributo &lt;em&gt;frontName&lt;/em&gt; é a primeira parte de uma rota da URL.&lt;br&gt;
Deve-se registrar um arquivo &lt;code&gt;routes.xml&lt;/code&gt; e associá-lo a um módulo. É possível ter vários módulos associados a uma rota.&lt;br&gt;
Para criar uma rota relacionada ao painel administrativo utiliza-se a estrutura de pastas &lt;code&gt;\{Vendor}\{Module}\etc\adminhtml\routes.xml&lt;/code&gt; e o valor &lt;em&gt;admin&lt;/em&gt; para o atributo &lt;em&gt;id&lt;/em&gt; do nó &lt;code&gt;&amp;lt;router&amp;gt;&lt;/code&gt;, já para criar rotas na parte visual da loja do site utiliza-se a estrutura de pastas &lt;code&gt;\{Vendor}\{Module}\etc\frontend\routes.xml&lt;/code&gt; e o valor &lt;em&gt;standard&lt;/em&gt; para o atributo &lt;em&gt;id&lt;/em&gt; do nó &lt;code&gt;&amp;lt;router&amp;gt;&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;config&lt;/span&gt; &lt;span class="na"&gt;xmlns:xsi=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2001/XMLSchema-instance"&lt;/span&gt; &lt;span class="na"&gt;xsi:noNamespaceSchemaLocation=&lt;/span&gt;&lt;span class="s"&gt;"urn:magento:framework:App/etc/routes.xsd"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;router&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"{router_id}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;route&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"{route_id}"&lt;/span&gt; &lt;span class="na"&gt;frontName=&lt;/span&gt;&lt;span class="s"&gt;"{frontName}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;module&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"{Vendor}_{Module}"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/route&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/router&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/config&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;O atributo &lt;em&gt;id&lt;/em&gt; do nó &lt;code&gt;&amp;lt;route&amp;gt;&lt;/code&gt; é uma &lt;em&gt;string&lt;/em&gt; única que identificará a rota. Esta &lt;em&gt;string&lt;/em&gt; é utilizada para declarar a primeira parte do nome do arquivo de &lt;em&gt;layout&lt;/em&gt; da página.&lt;br&gt;
O atributo &lt;em&gt;frontName&lt;/em&gt; é uma &lt;em&gt;string&lt;/em&gt; única que identificará a primeira parte do caminho da URL.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#finalizando"&gt;
  &lt;/a&gt;
  Finalizando
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Valores entre chaves (&lt;code&gt;{test}&lt;/code&gt;) devem ser alterados na implementação do código.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#habilitando-as-altera%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  Habilitando as alterações
&lt;/h3&gt;

&lt;p&gt;Execute o comando PHP para limpar todos os caches de armazenamento em cache do processos.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php bin/magento cache:clean
php bin/magento flush
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#diret%C3%B3rios-e-arquivos"&gt;
  &lt;/a&gt;
  Diretórios e Arquivos
&lt;/h3&gt;

&lt;p&gt;Segue a a lista de diretórios e arquivos que devem ser criados.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- app/
  - code/
    - {Vendor}/
        - {Module}/
          - etc/
            - {area}/
              - routes.xml
            - module.xml
          - registration.php
          - composer.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>php</category>
      <category>magento2</category>
      <category>braziliandevs</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Random Joke w/ React &amp; Axios</title>
      <author>Ahmad</author>
      <pubDate>Fri, 19 Nov 2021 12:10:27 +0000</pubDate>
      <link>https://dev.to/moghaazi/random-joke-w-react-axios-3bme</link>
      <guid>https://dev.to/moghaazi/random-joke-w-react-axios-3bme</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/moghaazi/embed/oNeVLYg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
