<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Build your own Promodoro Timer</title>
      <author>Abdur Rehman Khalid</author>
      <pubDate>Sat, 01 May 2021 02:55:28 +0000</pubDate>
      <link>https://dev.to/abdurrehmaan/build-your-own-promodoro-timer-34ll</link>
      <guid>https://dev.to/abdurrehmaan/build-your-own-promodoro-timer-34ll</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4tLrdorJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/22npeg09aoasdyzb8g42.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4tLrdorJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/22npeg09aoasdyzb8g42.png" alt="Promodoro Timer"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#build-your-own-promodoro-timer"&gt;
  &lt;/a&gt;
  Build your own Promodoro Timer
&lt;/h1&gt;

&lt;h4&gt;
  &lt;a href="#promodoro-timmer-by-abdur-rehman"&gt;
  &lt;/a&gt;
  Promodoro Timmer by Abdur Rehman
&lt;/h4&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Contributors&lt;/th&gt;
&lt;th&gt;Profile links&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Abdur Rehman&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/abdurrehmaan"&gt;https://github.com/abdurrehmaan&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Zeenat Parveen&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Zeeizee"&gt;https://github.com/Zeeizee&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Demo&lt;/th&gt;
&lt;th&gt;Source Code&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://promodorotimer.netlify.app/"&gt;https://promodorotimer.netlify.app/&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/abdurrehmaan/pomodorotimer"&gt;https://github.com/abdurrehmaan/pomodorotimer&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jOI9Gxz9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ez4hs3kudqaquzu57g12.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jOI9Gxz9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ez4hs3kudqaquzu57g12.gif" alt="promodoro timer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Today we will be creating Promodoro timer to track the totle work time and break time of a specific task . &lt;/p&gt;

&lt;p&gt;This task giving by (Raheel@&lt;a href="https://www.thedevnation.com/"&gt;Devnation&lt;/a&gt;) during the Web Programming course. The was was to build a promodoro timer which tells you exactly when the task was started and when to take a short break. At the End show the completed task and with calculated tasktime (tasktime + breaktime)&lt;br&gt;
Note: &lt;code&gt;tasktime == worktime&lt;/code&gt;;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-basic-process-is-as-follows"&gt;
  &lt;/a&gt;
  The basic process is as follows:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Start a 25-minute timer.&lt;/li&gt;
&lt;li&gt;Work until the timer rings.&lt;/li&gt;
&lt;li&gt;Take a short, five minutes break.&lt;/li&gt;
&lt;li&gt;List the Completed to task&lt;/li&gt;
&lt;li&gt;Calculate to total time(worktime + breaktime)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#user-interface"&gt;
  &lt;/a&gt;
  User Interface
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Y3iWoEx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/29798155/116761217-77344b00-aa30-11eb-9023-f754d7448aee.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Y3iWoEx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/29798155/116761217-77344b00-aa30-11eb-9023-f754d7448aee.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#user-task"&gt;
  &lt;/a&gt;
  User Task
&lt;/h2&gt;

&lt;p&gt;These are the user stories for this Pomodoro Timer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;User can start / stop a timer&lt;/li&gt;
&lt;li&gt;User can Pause / Resume a timer&lt;/li&gt;
&lt;li&gt;User can add the title of a task&lt;/li&gt;
&lt;li&gt;User can see a list of the completed pomodoro task with completed time. &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#framework-and-toolkit"&gt;
  &lt;/a&gt;
  framework and Toolkit
&lt;/h3&gt;

&lt;p&gt;We used Bootstrap which is open-source CSS framework&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; &amp;lt;!-- bootstrap --&amp;gt;
    &amp;lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css"
        integrity="sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l" crossorigin="anonymous"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And We for Icons we Font-awesome icon sets and tools&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; &amp;lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
        integrity="sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w=="
        crossorigin="anonymous" /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#promodoro-structure"&gt;
  &lt;/a&gt;
  Promodoro Structure
&lt;/h3&gt;

&lt;p&gt;We will start by creating a simple HTML structure to display a timer and add buttons to start, pause and stop it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; &amp;lt;div class="container my-3"&amp;gt;
        &amp;lt;h2 class="text-uppercase text-center display-4"&amp;gt;Promodoro Timer&amp;lt;/h2&amp;gt;
        &amp;lt;div class="worktimer my-4"&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div&amp;gt;
            &amp;lt;input type="text" class="taskname" placeholder="Enter your Task here"&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class="wb-box my-4"&amp;gt;
            &amp;lt;div class="wt-box"&amp;gt;
                &amp;lt;label for=""&amp;gt;Work Time&amp;lt;/label&amp;gt;
                &amp;lt;input type="number" class="workinterval" value="25" readonly&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div class="wt-box"&amp;gt;
                &amp;lt;label for=""&amp;gt;Break Time&amp;lt;/label&amp;gt;
                &amp;lt;input type="number" class="breakinterval" value="5" readonly&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class=" alertmessagebox text-center mb-2"&amp;gt;&amp;lt;small class="alertmessage d-none font-weight-bold "&amp;gt;Enter task
                name before
                start&amp;lt;/small&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class="actionbtns"&amp;gt;
            &amp;lt;button class="btnstart startgrey "&amp;gt;&amp;lt;i class="fas fa-play-circle"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/button&amp;gt;
            &amp;lt;button class="btnpause bg-warning d-none "&amp;gt;&amp;lt;i class="fas fa-pause-circle"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/button&amp;gt;
            &amp;lt;button class="btnresume bg-warning d-none "&amp;gt;&amp;lt;i class="fas fa-step-forward"&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;/button&amp;gt;
            &amp;lt;button class="btnstop bg-danger d-none "&amp;gt;&amp;lt;i class="fas fa-stop-circle"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/button&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class="mt-4"&amp;gt;
            &amp;lt;span class="text-uppercase text-center display-5 "&amp;gt;Your Completed Tasks&amp;lt;/span&amp;gt;

        &amp;lt;/div&amp;gt;
        &amp;lt;div class="completedList my-3"&amp;gt;
            &amp;lt;ul class="py-3"&amp;gt;

            &amp;lt;/ul&amp;gt;

        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;# Styling Promodoro Timer&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  :root{
    --gray: #eeeded;
}
.yellowcolor {
    background: #e67e22;
    color:white;
}
.greencolor {
    background: #2980b9;
    color:white;
}
.container{
    max-width: 400px;
}
.worktimer {
    height: 150px;
    width: 100%;
    border-radius: 5px;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: auto;
    /* background-color: var(--gray); */
    /* border: none; */
    outline: none;
    box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;
}
.worktimer2 {
    height: 150px;
    width: 100%;
    border-radius: 5px;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: auto;
    background-color: white;
    /* border: none; */
    outline: none;
    color:#2980b9;
    box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;
}
.worktimer span {
    font-size: 5rem;
}
.taskname{
    width: 100%;
    height: 50px;
    border: none;
    outline: none;
    /* background-color: var(--gray); */
    padding: 20px;
    border-radius: 5px;
    /* background-color: #2980b9; */
    color: #2980b9;;
    font-size: 1.5rem;
    border: 2px solid #2980b9;
}
.wb-box{
    display: flex;
    justify-content: center;
    align-items: center;
}
.wb-box .wt-box {
    margin: 10px;
    text-align: center;
}
.wb-box .wt-box label {
    font-size: 1.2rem;
    font-weight: 600;
}
.wb-box .wt-box input {
    width: 100%;
    border: none;
    outline: none;
    padding: 10px;
    border-radius: 5px;
    text-align: center;
    font-size: 1.5rem;
}
.startgrey{
    background-color: #2980b9;
    opacity: 0.5;
}
.startblue{
    background-color: #2980b9;
    color:white;
}
.alertmessagebox
{
    height: 25px;
    width: 100%;
    color:#e67e22;
}
.workinterval {
    background-color: #2980b9;
    color: white;
}
.breakinterval{
    background-color: #e67e22;
    color: white;
}
.actionbtns{
    display: flex;
    justify-content: center;
    align-items: center;
}
.actionbtns button{
    margin: 5px;
    width: 50%;
    padding: 20px;
    border: none;
    border-radius: 5px; 
    color: white;
    font-size: 1.2rem;
}
.fas{
    font-size: 2.5rem;
}
.completedList ul {
  list-style:decimal;
    width: 100%;
    background-color: #a5d6f7;
    color: white;   
}
.completedList ul li { 
    background-color: white;
    margin-top: 20px;
    margin-bottom: 10px;
    margin-right: 20px;
    color: #2980b9;
    padding: 10px 10px;
    font-size: 1.2rem;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#create-a-function-to-format-and-display-the-time"&gt;
  &lt;/a&gt;
  Create a function to format and display the time
&lt;/h1&gt;

&lt;p&gt;First, I defined all the variables. As I was not using jQuery, I ensured that I captured all my elements using &lt;code&gt;document.querySelector.&lt;/code&gt;&lt;br&gt;
When the ‘start’ button is clicked, the interval is cleared. A new interval is set if isPaused changes from true to false.&lt;br&gt;
The ‘reset’ button clears the interval, and resets the variables.&lt;/p&gt;

&lt;p&gt;The timer function is where the countdown magic happens. It deducts one second from seconds. If seconds &amp;lt;; 0, the alarm is played, and the function determines if the next countdown should be a work session or break session&lt;/p&gt;

&lt;p&gt;Now it’s time to work on the +/- buttons for the work and break durations. Initially, I created an onclick function for every button. While it was functional, there was definitely room for improvement.&lt;br&gt;
It’s time to update the HTML!&lt;br&gt;
I created functions to update the countdown display and button display, and incorporated those functions into an overarching function that also updated the Work/Break status and durations.&lt;br&gt;
Finally, I used document.onclick to run the updateHTML function everytime the user clicks on the page. I also used window.setInterval to run the function 10 times a second for good measure.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function setInitialTime() {
  document.getElementById("minutes").innerHTML = session_minutes;
  document.getElementById("seconds").innerHTML = session_seconds;
}

function start_work() {

  taskName = document.getElementById("taskname").value;
  const workTime = document.getElementById('worktime').value;
  const breakTime = document.getElementById('breaktime').value;
  session_minutes = workTime-1;
  session_seconds = 59;
  document.getElementById("minutes").innerHTML = session_minutes;
  document.getElementById("seconds").innerHTML = session_seconds;
  minutes_interval = setInterval(minutesTimer, 60000);
  seconds_interval = setInterval(secondsTimer, 1000);

  function minutesTimer() {
    session_minutes = session_minutes - 1;
    document.getElementById("minutes").innerHTML = session_minutes;
  }
  function secondsTimer() {
    session_seconds = session_seconds - 1;
    document.getElementById("seconds").innerHTML = session_seconds;

    if (session_seconds &amp;lt;= 0) {
      if (session_minutes &amp;lt;= 0) {
        clearInterval(minutes_interval);
        clearInterval(seconds_interval);
        document.getElementById("done").innerHTML = "Session Done, Take a Break!";
        document.getElementById("done").classList.add("show_message");
        start_break(breakTime);
      }
      session_seconds = 60;
    }
  }
}
function start_break(breakTime) {

  session_minutes = breakTime-1;
  session_seconds = 59;

  document.getElementById("minutes").innerHTML = session_minutes;
  document.getElementById("seconds").innerHTML = session_seconds;


  minutes_interval = setInterval(minutesTimer, 60000);
  seconds_interval = setInterval(secondsTimer, 1000);


  function minutesTimer() {
    session_minutes = session_minutes - 1;
    document.getElementById("minutes").innerHTML = session_minutes;
  }


  function secondsTimer() {
    session_seconds = session_seconds - 1;
    document.getElementById("seconds").innerHTML = session_seconds;


    if (session_seconds &amp;lt;= 0) {
      if (session_minutes &amp;lt;= 0) {

        clearInterval(minutes_interval);
        clearInterval(seconds_interval);


        document.getElementById("done").innerHTML = "Break Finished! Continue Working now!";
        document.getElementById("done").classList.add("show_message");

        start_work()
      }
      session_seconds = 60;
    }
  }
}
function reset(){

  clearInterval(minutes_interval)
  clearInterval(seconds_interval)
  let session_seconds = "00";
  let session_minutes = 00;
  document.getElementById("minutes").innerHTML = session_minutes;
  document.getElementById("seconds").innerHTML = session_seconds;
}
function startTime(){

  const dateNow = new Date();
  return dateNow
}

function stopTime(){
  const dateNow = new Date()
  return dateNow

}

document.getElementById("start-button").addEventListener("click", () =&amp;gt; {
  start_work();
  start = startTime()

  document.getElementById("start-button").classList.add("d-none")
  document.getElementById("pause-button").classList.remove("d-none")
});

document.getElementById("pause-button").addEventListener("click", () =&amp;gt;{
  clearInterval(minutes_interval)
  clearInterval(seconds_interval)

  document.getElementById("pause-button").classList.add("d-none")
  document.getElementById("resume-button").classList.remove("d-none")

} )
document.getElementById("resume-button").addEventListener("click", () =&amp;gt; {

  minutes_interval = setInterval(()=&amp;gt; {
    session_minutes = session_minutes - 1;
    document.getElementById("minutes").innerHTML = session_minutes;}, 
    60000);

  seconds_interval = setInterval(() =&amp;gt; {
    session_seconds = session_seconds - 1;
    document.getElementById("seconds").innerHTML = session_seconds;
  }, 1000);

  document.getElementById("pause-button").classList.remove("d-none")
  document.getElementById("resume-button").classList.add("d-none")
  document.getElementById("start-button").classList.add("d-none")
})
document.getElementById("reset-button").addEventListener("click", () =&amp;gt; {
  reset();
  stopp = stopTime()
  totalTime = dateFns.distanceInWords(start, stopp, {addSuffix: true})

  const completedSessionList = document.querySelector('#sessions-list')
  const html = `&amp;lt;li class="list-group-item d-flex justify-content-between align-items-center"&amp;gt;${taskName} was completed ${totalTime}&amp;lt;/li&amp;gt;`;

  completedSessionList.innerHTML += html;

  document.getElementById("done").innerHTML = "";
  document.getElementById("done").classList.remove("show_message");

  document.getElementById("start-button").classList.remove("d-none")
  document.getElementById("pause-button").classList.add("d-none")
  document.getElementById("resume-button").classList.add("d-none")

});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that’s the wrap up of my project!&lt;br&gt;
You’ve reached the end of this tutorial. At this point, you should have a functioning Pomodoro timer application with useful features like sound alerts and notifications. If you have any questions or suggestions, please leave a comment below.&lt;/p&gt;

&lt;p&gt;Thanks for reading, and happy coding!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Mystery github build check</title>
      <author>Omar White</author>
      <pubDate>Sat, 01 May 2021 01:13:03 +0000</pubDate>
      <link>https://dev.to/omawhite/mystery-github-build-check-3521</link>
      <guid>https://dev.to/omawhite/mystery-github-build-check-3521</guid>
      <description>&lt;p&gt;I've got a github PR check that I don't recognize, it never reports back and prevents my PR's from being mergeable with admin rights. Anyone have an idea how to disable this check? Here's the &lt;a href="https://github.com/omawhite/portfolio"&gt;repo&lt;/a&gt; and an example &lt;a href="https://github.com/omawhite/portfolio/pull/37"&gt;PR&lt;/a&gt; where the "build" check is hanging. Also here's a screenshot: &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x_Gh3TPb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jzq90s9018w238t6ojz0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x_Gh3TPb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jzq90s9018w238t6ojz0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>help</category>
    </item>
    <item>
      <title>How Coding and Programming becomes a Passion</title>
      <author>SardiusJay</author>
      <pubDate>Sat, 01 May 2021 01:10:42 +0000</pubDate>
      <link>https://dev.to/sardiusjay/how-i-have-interest-and-passion-for-programming-3di2</link>
      <guid>https://dev.to/sardiusjay/how-i-have-interest-and-passion-for-programming-3di2</guid>
      <description>&lt;p&gt;My name is John oluwatobi Abidoye, Presently am a Junior Frontend developer and am aspiring to be a better programmer each and every day not more a cider.. smiles to that...😁😁.. &lt;br&gt;
But come to think of it, when everybody around you have no interest in programming and thinks it is something very hard.. seriously I think it was hard but it is and it is not again. While did I say this, it really can be define by your passion for something. While I really have interest was that the moment I see those code on the system(A Laptop or a PC) I just have this kind of passion to know it, But my environment is another negative factor... I know you really want to know why I chose to be a programmer and not any other thing.. hmm watch out for the next Article.. Stay tuned&lt;/p&gt;

</description>
    </item>
    <item>
      <title>The State of Operating Systems (Controversial I'm Sure)</title>
      <author>Tim Apple</author>
      <pubDate>Sat, 01 May 2021 00:56:52 +0000</pubDate>
      <link>https://dev.to/tda233066/the-state-of-operating-systems-controversial-i-m-sure-f5h</link>
      <guid>https://dev.to/tda233066/the-state-of-operating-systems-controversial-i-m-sure-f5h</guid>
      <description>&lt;h2&gt;
  &lt;a href="#historically"&gt;
  &lt;/a&gt;
  Historically
&lt;/h2&gt;

&lt;p&gt;So I've been around for awhile now, at least a few decades of adulthood. Most of that time I was a die hard Linux user.  I had stints of using Windows, especially back in the "World of Warcraft" days.  But most of my early years I was setting up PPP connections to my isp in Slackware. My opinions on operating systems has changed drastically now and I thought I would jot down what I am thinking about the topic at this time. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#linux"&gt;
  &lt;/a&gt;
  Linux
&lt;/h2&gt;

&lt;p&gt;Linux my dear old friend. I used to defend you with all I had. No matter how difficult you were I would suggest you to everyone. Then as years went on the difficulty went away. I think most anyone can successfully get some version of Linux installed with very little effort. Not to mention it is fairly easy to find preinstalled on a machine if need be. &lt;/p&gt;

&lt;p&gt;...But, I find most applications inadequate for me these days. All the best apps seem to be things created for other OS's ported over or they are just web apps anyway. &lt;/p&gt;

&lt;p&gt;Linux is much more a toy to tinker with to me these days.  Of course there is no denying it's versatility and performance on the server side, nothing compares to be honest. On the desktop though, it's to fragmented, the applications mostly to simple or to buggy. I just can't bring myself to use it consistently. &lt;/p&gt;

&lt;p&gt;Now do not be angry with me. I do love it, it's just not for me anymore and I have become much less a freedom fighter in my old age. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#windows"&gt;
  &lt;/a&gt;
  Windows
&lt;/h2&gt;

&lt;p&gt;The cursed enemy to all! Well not anymore. With close to a decade of new leadership this boat has changed course completely. Not that it's all rainbows and unicorns, but they are way more open, the OS is less buggy, and in general it's actually become a pleasant experience. &lt;/p&gt;

&lt;p&gt;Now with WSL if I do need to scratch that itch I can. I mostly open it and &lt;code&gt;sudo apt update &amp;amp;&amp;amp; apt upgrade&lt;/code&gt; . Then I close it again. For development Python, Rust, Flutter/Dart, Node, and of course .Net all run native and well for that matter. Not to mention the new Windows Terminal really is an improvement. I like it much more than most of the Linux terminals I've used. &lt;/p&gt;

&lt;p&gt;All in all, I gotta say I like them these days and will continue to use it as my daily driver. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chromeos-"&gt;
  &lt;/a&gt;
  ChromeOS ##
&lt;/h2&gt;

&lt;p&gt;Isn't that Linux? Well technically it is, but it's pretty well hidden. This is my new love. I'm typing this on it now. It's fast, smooth, pretty much trouble free. The occasional time I do bugger it up I can literally reset it and be back to work in about 5 minutes. &lt;/p&gt;

&lt;p&gt;On the Dev side, I can run GUI Linux apps on it. I actually run VSCode and Android studio on it for Flutter development. With the bonus of being able to run/test Android apps on it. I've also run Node, Deno and Rust on it no problem. &lt;/p&gt;

&lt;p&gt;Needless to say, ChromeOS is slowly becoming my favorite and I spend just about as much time on it as I do on my main Windows machine. And again, if I feel the urge to see packages update I can run my &lt;code&gt;sudo apt&lt;/code&gt; commands on it. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#android"&gt;
  &lt;/a&gt;
  Android
&lt;/h2&gt;

&lt;p&gt;This is my mobile operating system of choice, I really like the ecosystem, I develop for it, and a couple other reasons to be mentioned below. Besides the variety and price points I can get a real good phone at. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-apple-ecosystem"&gt;
  &lt;/a&gt;
  The Apple Ecosystem
&lt;/h2&gt;

&lt;p&gt;So all the Apple stuff. Just because I share a name with them doesn't mean I have to like them. But I confess, I agree that they're hardware is amazing. I have used iOS in the past and it's damn good. But they are not necessarily the best. I find them more trendy than anything. &lt;/p&gt;

&lt;p&gt;But the main reason I don't use them is elitism. I call myself a developer and I want everyone in the world, no matter where they are located or what their income is to have the opportunity to take advantage of whatever awful software I may create in the future. I really am not interested in using products that only the wealthier people in the world can take advantage of. &lt;/p&gt;

&lt;p&gt;Mind you, I have nice things. And they are expensive. I use a high spec Surface Laptop. My Chromebook is a Pixelbook Go with real good specs. But I know anywhere in the world the hardware and OS are available to the general masses, maybe without the performance, but they can use the stuff. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So as you may have noticed, this was very opinionated. It's literally just where I am at with my computer use. I've used most operating systems and like and dislike things about all of them. I do think opensource and proprietary systems can coexist and that they both have their own unique places they fit in the world. No reason to hate either. &lt;/p&gt;

&lt;p&gt;P.S. BSD people, don't feel bad. I've used your OS also. And an honorable mention for Haiku.  Cheers!&lt;/p&gt;

</description>
      <category>windows</category>
      <category>linux</category>
      <category>apple</category>
      <category>chromeos</category>
    </item>
    <item>
      <title>Web basics: a TCP Server in Ruby</title>
      <author>Leandro Proença</author>
      <pubDate>Fri, 30 Apr 2021 23:56:54 +0000</pubDate>
      <link>https://dev.to/leandronsp/web-basics-a-tcp-server-in-ruby-947</link>
      <guid>https://dev.to/leandronsp/web-basics-a-tcp-server-in-ruby-947</guid>
      <description>&lt;p&gt;This series guide covers the very basics of Web and the building blocks of a Web server. &lt;/p&gt;

&lt;p&gt;If you have ever wondered on how a Web server works and have a basic knowledge of Ruby, this guide is for you.&lt;/p&gt;

&lt;p&gt;Essentially, the &lt;em&gt;main&lt;/em&gt; elementary units of a web server are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Client-server architecture model&lt;/li&gt;
&lt;li&gt;TCP - Transmission Control Protocol&lt;/li&gt;
&lt;li&gt;HTTP - Hypertext Transfer Protocol&lt;/li&gt;
&lt;li&gt;HTML/CSS/Javascript &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#clientserver-model"&gt;
  &lt;/a&gt;
  Client-server model
&lt;/h2&gt;

&lt;p&gt;Client-server model is a networking structure that allows different devices connecting to each other over a &lt;strong&gt;computer network&lt;/strong&gt;, being &lt;a href="https://en.wikipedia.org/wiki/Local_area_network"&gt;local&lt;/a&gt; or &lt;a href="https://en.wikipedia.org/wiki/Internet"&gt;public (Internet)&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Consider two different devices connected to a network:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the client (web browser) requests a webpage to the server&lt;/li&gt;
&lt;li&gt;the server (another computer in the network) that &lt;strong&gt;serves&lt;/strong&gt; the requested webpage to the client&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kiGWgFbb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5j22eyx9s0yo7esonb5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kiGWgFbb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5j22eyx9s0yo7esonb5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to establish a client-server connection, it's essential to indicate some kind of "agreement" among devices. Such agreement holds information like devices location, message being sent and so on. &lt;/p&gt;

&lt;p&gt;This is the &lt;a href="https://en.wikipedia.org/wiki/Communication_protocol"&gt;communication protocol&lt;/a&gt;, composed by &lt;a href="https://en.wikipedia.org/wiki/OSI_model"&gt;layers&lt;/a&gt; ranging from physical material up to application traits.&lt;/p&gt;

&lt;p&gt;We won't dig further into all layers but focus only on layers that contain &lt;a href="https://en.wikipedia.org/wiki/Transmission_Control_Protocol"&gt;TCP&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"&gt;HTTP&lt;/a&gt;. The following image illustrates the communication layers and its protocols:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HnKkOEQQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1axhzvy9bn9tvjwkp638.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HnKkOEQQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1axhzvy9bn9tvjwkp638.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tcp"&gt;
  &lt;/a&gt;
  TCP
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Transmission_Control_Protocol"&gt;Transmission Control Protocol&lt;/a&gt; is one of the main transport protocols in the OSI model. It embraces reliability and is responsible to deliver a message from one point to another.&lt;/p&gt;

&lt;p&gt;In each device, we have to open &lt;strong&gt;endpoints&lt;/strong&gt; that will be used by the TCP to send and receive data. A single computer can open and close thousands of endpoints. Those endpoints are called &lt;a href="https://en.wikipedia.org/wiki/Network_socket"&gt;Sockets&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In Ruby we can implement a TCP client-server by using the package &lt;a href="https://ruby-doc.org/stdlib-2.7.0/libdoc/socket/rdoc/Socket.html"&gt;socket&lt;/a&gt; which is included in the standard library. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tcp-client"&gt;
  &lt;/a&gt;
  TCP Client
&lt;/h3&gt;

&lt;p&gt;Let's create a &lt;code&gt;TCP client&lt;/code&gt; using &lt;code&gt;test/unit&lt;/code&gt;, which means: &lt;em&gt;the test will be the client&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tcp_test.rb&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;require 'socket'
require 'test/unit'

class ServerTest&amp;lt; Test::Unit::TestCase
  def test_tcp_request_response
    server = TCPSocket.open('localhost', 4242)

    request = 'Hello, server!'
    server.puts(request)

    response = server.gets
    assert_equal "Hey, client!\n", response

    server.close
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;the test takes into account that we have opened a socket server in the port &lt;code&gt;4242&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;localhost&lt;/code&gt; refers to the same local machine, but it could be any valid &lt;a href="https://en.wikipedia.org/wiki/IP_address"&gt;location address&lt;/a&gt; in the internet&lt;/li&gt;
&lt;li&gt;the test (client) sends a request message to the server&lt;/li&gt;
&lt;li&gt;the test (client) reads the response message from the server&lt;/li&gt;
&lt;li&gt;the test (client) closes the socket connection to the server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we try to run the test (&lt;code&gt;ruby tcp_test.rb&lt;/code&gt;), we'll get the following error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SocketError: getaddrinfo: Name or service not known
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which means there's no opened socket server in the port 4242 of localhost. Let's make the test pass.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tcp-server"&gt;
  &lt;/a&gt;
  TCP Server
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;tcp_server.rb&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;require 'socket'            

socket = TCPServer.new(4242)

client = socket.accept      
request = client.gets       

response = 'Hey, client!'       
client.puts(response)       

client.close                
socket.close                
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;server creates a new socket in the port 4242&lt;/li&gt;
&lt;li&gt;server accepts connections to the socket and waits for a new connection to come in&lt;/li&gt;
&lt;li&gt;when a new client connection arrives, server reads the request message from the client&lt;/li&gt;
&lt;li&gt;server sends a response message to the client&lt;/li&gt;
&lt;li&gt;server closes the connection with client&lt;/li&gt;
&lt;li&gt;server closes the socket and terminates itself&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Because the server must run in a separate process, we have to first:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;start the server, &lt;code&gt;ruby tcp_server.rb&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;open a new tab or window, and run &lt;code&gt;ruby tcp_test.rb&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Expectation: the test should &lt;em&gt;pass&lt;/em&gt; and the server should &lt;em&gt;terminate&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1 tests, 1 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications
100% passed
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;This post was the first part of series and an introduction to the client-server model along with building a simple TCP server in Ruby with TDD. &lt;/p&gt;

&lt;p&gt;In the upcoming posts we'll learn about HTTP.&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>tcp</category>
      <category>http</category>
      <category>programming</category>
    </item>
    <item>
      <title>Know the type of Variable in JS!
</title>
      <author>Lenin Felix</author>
      <pubDate>Fri, 30 Apr 2021 23:29:25 +0000</pubDate>
      <link>https://dev.to/soyleninjs/know-the-type-of-variable-in-js-4ba8</link>
      <guid>https://dev.to/soyleninjs/know-the-type-of-variable-in-js-4ba8</guid>
      <description>&lt;p&gt;&lt;a href="https://rollercoin.com/?r=kl3gfn3b"&gt;&lt;img src="//rollercoin.com/static/img/referral/banners/ref_72890.gif" alt="promo"&gt; &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Many times (...I guess) you have wanted or tried to want to know what type is a variable, and most likely you know it since 98% of the times you are the one who declares them.&lt;/p&gt;

&lt;p&gt;But imagine to find yourself with an API or a third party code which you have to manipulate, that already becomes more complex, since you are only there to use that little world of variables, functions, texts and others...&lt;/p&gt;

&lt;p&gt;Although also many times it is useful to know what type are the variables in order to create conditionals that are prepared to manipulate and to maintain your code stable and that it does not crack your code of "Hello World".&lt;/p&gt;

&lt;p&gt;For that reason I offer you a small example of functions that you can use for those occasions (I know that it is little, but it is honest work).&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/soyleninjs/embed/yLgjLWg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Basically, these are functions to which you pass your variable to indicate whether it is of a certain type or not.&lt;/p&gt;

&lt;p&gt;It can work, for example, in some function in which you pass parameters, but you have to do different things if the parameter receives an Object or an Array.&lt;/p&gt;

&lt;p&gt;At first sight it could not seem very useful, but at least to me, with certain code that I had to make, it helped me.&lt;/p&gt;


&lt;center&gt;
&lt;br&gt;
If you liked the content you can follow me on my social networks as &lt;a class="mentioned-user" href="https://dev.to/soyleninjs"&gt;@soyleninjs&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;/center&gt;

&lt;p&gt;&lt;a href="https://ko-fi.com/G2G42SCZF"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RDsLyh75--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.ko-fi.com/img/githubbutton_sm.svg" alt="ko-fi"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rollercoin.com/?r=kl3gfn3b"&gt;&lt;img src="//rollercoin.com/static/img/referral/banners/ref_72890.gif" alt="promo"&gt; &lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>showdev</category>
      <category>webdev</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Gnarly Learnings from April</title>
      <author>Kevin Murphy</author>
      <pubDate>Fri, 30 Apr 2021 23:04:41 +0000</pubDate>
      <link>https://dev.to/thegnarco/gnarly-learnings-from-april-3glk</link>
      <guid>https://dev.to/thegnarco/gnarly-learnings-from-april-3glk</guid>
      <description>&lt;p&gt;We love reading, watching, and listening to constantly update our skills and learn new perspectives. Here are some of the exciting pieces we learned from this month.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-build-a-web-app-with-and-without-rails-libraries"&gt;
  &lt;/a&gt;
  &lt;a href="https://shopify.engineering/building-web-app-ruby-rails"&gt;How to Build a Web App with and without Rails Libraries&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;There's a lot we take for granted when writing an application using Rails. Revisit some of these core principles for building a web application in this detailed explainer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-consolelog-like-a-pro"&gt;
  &lt;/a&gt;
  &lt;a href="https://markodenic.com/use-console-log-like-a-pro/"&gt;Use console.log() like a pro&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Turns out that your browser's &lt;code&gt;console&lt;/code&gt; is a lot more flexible than it might appear at first blush. When debugging your code, you can make your output easily browsable with timers, memory tracking, and deep object introspection. Much more convenient than &lt;code&gt;console.log("Here!")&lt;/code&gt; all over the place.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-the-switchtrue-pattern-in-javascript"&gt;
  &lt;/a&gt;
  &lt;a href="https://seanbarry.dev/posts/switch-true-pattern"&gt;Using the Switch(true) Pattern in JavaScript&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;By leveraging a switch statement checking against the boolean &lt;code&gt;true&lt;/code&gt;, we can avoid the trap of noisy endless &lt;code&gt;if&lt;/code&gt;s and make our various states more readable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rails-61-adds-delegatedtype-to-activerecord"&gt;
  &lt;/a&gt;
  &lt;a href="https://bigbinary.com/blog/rails-6-1-adds-delegated-type-to-active-record"&gt;Rails 6.1 adds delegated_type to ActiveRecord&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A &lt;code&gt;delegated_type&lt;/code&gt; provides a new option to model shared data and behavior. It particularly excel over Single Table Inheritance in situations where the different child models may have many different model-specific attributes. In Single Table Inheritance, this would mean a lot of columns in our database that are only used for one of the children - and null for everything else. Not so with &lt;code&gt;delegated_type&lt;/code&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-hotwire-turbo-in-rails-with-legacy-javascript"&gt;
  &lt;/a&gt;
  &lt;a href="https://dev.to/nejremeslnici/using-hotwire-turbo-in-rails-with-legacy-javascript-17g1"&gt;Using Hotwire Turbo in Rails with legacy JavaScript&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;With so many examples of &lt;a href="https://hotwire.dev/"&gt;Hotwire&lt;/a&gt; showing how to use it with a shiny new application, you might be wondering if you can still use it in your well-worn, mature application. This article shows a strategy for selectively using Hotwire functionality while maintaining your existing functionality.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#maximize-your-mentorship-establish-absorb-and-connect"&gt;
  &lt;/a&gt;
  &lt;a href="https://leaddev.com/mentoring-coaching-feedback/maximize-your-mentorship-establish-absorb-and-connect"&gt;Maximize your mentorship: establish, absorb, and connect&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Set the stage with your mentor by providing clear expectations, knowing what questions to ask, and following through on action items. This article (and its companion referenced at the end) can also be helpful for mentors in establishing their relationship with mentees.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#argument-cultures-and-unregulated-aggression"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.kateheddleston.com/blog/argument-cultures-and-unregulated-aggression"&gt;Argument Cultures and Unregulated Aggression&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This is a great reminder of checking what behaviors and culture you're cultivating in your team and organization - whether you know it or not.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-happens-when"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/alex/what-happens-when"&gt;What happens when...&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;There are more times than I care to admit where I contemplate how changes I'm making even work - or how code &lt;em&gt;ever&lt;/em&gt; worked to begin with. But...how &lt;strong&gt;do&lt;/strong&gt; computers work? This repo goes into explicit detail of what's involved to attempt to reach google.com from your browser.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-the-brain-interpret-computer-languages"&gt;
  &lt;/a&gt;
  &lt;a href="https://arstechnica.com/science/2021/03/how-does-the-brain-interpret-computer-languages/"&gt;How does the brain interpret computer languages?&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This is your brain. This is code. This is your brain on code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contributors"&gt;
  &lt;/a&gt;
  Contributors
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kevin-j-m"&gt;Kevin Murphy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alxjrvs"&gt;Alex Jarvis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jyurek"&gt;Jon Yurek&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;This post originally published on &lt;a href="https://blog.thegnar.co/gnarly-learnings-april-2021"&gt;The Gnar Company blog&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
    </item>
    <item>
      <title>Vuejs Adobe color clone part 1.</title>
      <author>Bajro</author>
      <pubDate>Fri, 30 Apr 2021 23:03:58 +0000</pubDate>
      <link>https://dev.to/bajro17/vuejs-adobe-color-clone-part-1-2o1o</link>
      <guid>https://dev.to/bajro17/vuejs-adobe-color-clone-part-1-2o1o</guid>
      <description>&lt;p&gt;I come back with few changes in my attention to recreate Adobe color. I was struggling with making every component update slider separated. Then I decide to use Vuex with Vuex magic and Watch magic I finally made it (Yayyyyyyy 👏 😱). For now, I have only the easiest part done Shades but the concept now is the same and simple.&lt;/p&gt;

&lt;p&gt;If you check line 56 this is when beauty start I made myself a little function called hsltorgb.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;hsltorgb: function(hslcolval,changevalue) {
      h = hslcolval[0]+changevalue[0];
      s = hslcolval[1]+changevalue[1];
      l = hslcolval[2]+changevalue[2];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This function takes 2 arrays as arguments. The first array is the HSL value of the color you changing at this moment and the array looks like this [Hvalue,Svalue,Lvalue] and the second array is changed I want in the next color boxes. &lt;br&gt;
It will be a positive number if I want to add some number and a negative number if I want to subtract value for example [0,1,-1], &lt;br&gt;
if I use this array for changevalue H will stay the same if S is 50 it will become 51 and if L is 50 it will become 49.&lt;/p&gt;

&lt;p&gt;This is the color wheel.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--064C1ZbC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.sessions.edu/wp-content/themes/divi-child/color-calculator/wheel-3-rgb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--064C1ZbC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.sessions.edu/wp-content/themes/divi-child/color-calculator/wheel-3-rgb.png" alt="Color wheel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now when you check the wheel you see we have a circle (360 degrees who don't know 😎) and if we have red color (hsl(0,100%,50%)) and I want to get the green color I just need a pass to my function [0,100,50], [120,0,0] because green is on 120 degrees if I want blue I need 240. &lt;/p&gt;

&lt;p&gt;Notice: I still working on this and for now it doesn't work so well except if we change the first color box but soon I will make it work with any color box. &lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/bajro91/embed/eYgXjNZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
If you like my work feel free to leave me like ♥&lt;/p&gt;

</description>
      <category>vue</category>
      <category>adobe</category>
      <category>clone</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Deploying your Laravel + MySQL application on Heroku</title>
      <author>Douglas Pinheiro Goulart</author>
      <pubDate>Fri, 30 Apr 2021 22:18:41 +0000</pubDate>
      <link>https://dev.to/doougui/deploying-your-laravel-mysql-application-on-heroku-5d92</link>
      <guid>https://dev.to/doougui/deploying-your-laravel-mysql-application-on-heroku-5d92</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;So, you've just built your beautiful Laravel application, it has authentication, localization, tests and all the fancy features that could possibly impress the recruiter and land you a job. However, it's only working on your machine. How do we solve this?&lt;/p&gt;

&lt;p&gt;In this post, we’ll be looking into hosting a Laravel application (with a MySQL or MariaDB database included) on Heroku for free.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploying"&gt;
  &lt;/a&gt;
  Deploying
&lt;/h2&gt;

&lt;p&gt;💡 &lt;strong&gt;Notice:&lt;/strong&gt; Replace items within brackets (&lt;code&gt;[]&lt;/code&gt;) with your desired information.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-laravel-application"&gt;
  &lt;/a&gt;
  Creating Laravel application
&lt;/h3&gt;

&lt;p&gt;If you don't have a Laravel app yet, the first thing we got to do is create a brand new one. To do this, first you need to have &lt;a href="https://getcomposer.org/"&gt;Composer&lt;/a&gt; installed on your machine. After installing composer you can run the following command to install the Laravel installer:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;composer global require laravel/installer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then you can create a new Laravel app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;laravel new [brand-new-app]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;For more information about Laravel installation, check the &lt;a href="https://laravel.com/docs/8.x/installation"&gt;Laravel Installation guide&lt;/a&gt;. It’s worth a read before following the instructions in this article.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#initializing-raw-git-endraw-"&gt;
  &lt;/a&gt;
  Initializing &lt;code&gt;git&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;To deploy to Heroku we'll be using &lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt;. If you don't know how to use this, I recommend you watch the &lt;a href="https://www.freecodecamp.org/news/git-and-github-crash-course/"&gt;Git and GitHub Crash Course&lt;/a&gt; on freeCodeCamp. It's a very important tool for developers and you should know it.&lt;/p&gt;

&lt;p&gt;Anyways, the first thing you gotta do is enter your project folder using the terminal and initialize a git repository:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then adding all the files and making a &lt;code&gt;commit&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add .
git commit -m "Initial commit"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Alright, now your git repository is set.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-the-heroku-cli"&gt;
  &lt;/a&gt;
  Using the Heroku CLI
&lt;/h3&gt;

&lt;p&gt;We'll use the Heroku CLI to deploy our app. You can find the installation guide &lt;a href="https://devcenter.heroku.com/articles/heroku-cli"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After you've installed the Heroku CLI, &lt;a href="https://id.heroku.com/login"&gt;create a Heroku free account&lt;/a&gt; and run &lt;code&gt;heroku login&lt;/code&gt; in your terminal. Follow the instructions and after you've been successfully logged in, you can create your Heroku application (change &lt;code&gt;brand-new-app&lt;/code&gt; to your desired app name):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;heroku create [brand-new-app]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you need to generate the &lt;code&gt;APP_KEY&lt;/code&gt; required by Laravel. You can do this by using the &lt;code&gt;heroku config:set APP_KEY=$(php artisan --no-ansi key:generate --show)&lt;/code&gt; command.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-a-procfile"&gt;
  &lt;/a&gt;
  Creating a Procfile
&lt;/h3&gt;

&lt;p&gt;By default, Heroku will launch an Apache web server together with PHP to serve applications from the root directory of the project.&lt;/p&gt;

&lt;p&gt;However, our application’s document root is the &lt;code&gt;public/&lt;/code&gt; subdirectory, so we need to create a &lt;code&gt;Procfile&lt;/code&gt; that configures the correct document root. We can do this by manually creating a &lt;code&gt;Procfile&lt;/code&gt; file or using the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;echo "web: vendor/bin/heroku-php-apache2 public/" &amp;gt; Procfile
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the untracked files and commit your changes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add .
git commit -m "Procfile for Heroku"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#pushing-to-heroku"&gt;
  &lt;/a&gt;
  Pushing to Heroku
&lt;/h3&gt;

&lt;p&gt;Now you should be able to push your app to Heroku:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push heroku master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To view your app, access &lt;code&gt;https://[brand-new-app].herokuapp.com&lt;/code&gt; or click the &lt;code&gt;Open app&lt;/code&gt; button located in the Heroku dashboard (&lt;a href="https://dashboard.heroku.com/apps/%5Bbrand-new-app%5D"&gt;https://dashboard.heroku.com/apps/[brand-new-app]&lt;/a&gt;) &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#avoiding-mixed-content-error"&gt;
  &lt;/a&gt;
  Avoiding Mixed Content error
&lt;/h3&gt;

&lt;p&gt;If you use the &lt;code&gt;asset()&lt;/code&gt; helper function a lot, you'll probably notice that your hosted app isn't loading some assets files and is showing a &lt;code&gt;Mixed Content&lt;/code&gt; error in the console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cqpZDCr0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4jrtsmeh4phtp21pe42.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cqpZDCr0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4jrtsmeh4phtp21pe42.png" alt="Mixed Content Error"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To fix this, open your applications' &lt;code&gt;AppServiceProvider&lt;/code&gt; at &lt;code&gt;[brand-new-app]/app/Provider/AppServiceProvider.php&lt;/code&gt; and, in the &lt;code&gt;boot()&lt;/code&gt; method, add:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'app.env'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;'production'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="no"&gt;URL&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;forceScheme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'https'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now create a &lt;code&gt;APP_ENV&lt;/code&gt; variable with a &lt;code&gt;production&lt;/code&gt; value using the Heroku CLI or on your app's settings (&lt;a href="https://dashboard.heroku.com/apps/%5Bbrand-new-app%5D/settings"&gt;https://dashboard.heroku.com/apps/[brand-new-app]/settings&lt;/a&gt; &amp;gt; Config Vars &amp;gt; Reveal Config Vars).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;heroku config:set APP_ENV="production"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Commit and push your new changes to Heroku&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit -am "Adding URL::forceScheme('https') in production environments"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now your project should load properly without errors&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qv8D6hxJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z91if8j2m3gd9wj4tuu1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qv8D6hxJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z91if8j2m3gd9wj4tuu1.png" alt="Assets loaded with no errors"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If the error persist, check if there are no links using HTTP instead of HTTPS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-environment-variables"&gt;
  &lt;/a&gt;
  Setting environment variables
&lt;/h3&gt;

&lt;p&gt;The next thing we need to do is set our &lt;code&gt;.env&lt;/code&gt; variables in Heroku. We've already set the &lt;code&gt;APP_ENV&lt;/code&gt; and &lt;code&gt;APP_KEY&lt;/code&gt; variables, let's set the remaining ones. Again, you can do this by using the Heroku CLI or on your app's settings (&lt;a href="https://dashboard.heroku.com/apps/%5Bbrand-new-app%5D/settings"&gt;https://dashboard.heroku.com/apps/[brand-new-app]/settings&lt;/a&gt; &amp;gt; Config Vars &amp;gt; Reveal Config Vars).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qcx-AQU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k9oh2nrnzkqzs6aym0pv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qcx-AQU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k9oh2nrnzkqzs6aym0pv.png" alt="Config vars"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can keep the database information (&lt;code&gt;DB_CONNECTION&lt;/code&gt;, &lt;code&gt;DB_DATABASE&lt;/code&gt;, &lt;code&gt;DB_USERNAME&lt;/code&gt;, etc) the same as the local configuration for know. We'll take care of that later.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-and-configuring-database"&gt;
  &lt;/a&gt;
  Adding and configuring database
&lt;/h3&gt;

&lt;p&gt;Now we have to add a database to our project.&lt;/p&gt;

&lt;p&gt;Go to your application dashboard and click on resources (&lt;a href="https://dashboard.heroku.com/apps/%5Bbrand-new-app%5D/resources"&gt;https://dashboard.heroku.com/apps/[brand-new-app]/resources&lt;/a&gt;). In the "Add-ons" input, type MySQL and choose &lt;code&gt;ClearDB MySQL&lt;/code&gt;. Select the "Ignite - Free" plan and click on "Submit Order Form".&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Make sure you assigned your credit card to your Heroku account. If you didn't add it yet, click on your profile photo (top right corner) &amp;gt; Account settings &amp;gt; Billing &amp;gt; Add credit card. Don't worry, you won't be charged unless you choose a paid plan. As soon as you've added your card, repeat the step above.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As soon as you've added the ClearDB MySQL add-on, go to your terminal and type &lt;code&gt;heroku config | grep CLEARDB_DATABASE_URL&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It should display something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CLEARDB_DATABASE_URL:  mysql://uuuuuuuuuuuuuu:pppppppp@hh-hhhh-hhhh-hh.cleardb.com/heroku_ddddddddddddddd?reconnect=true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Everything after the @ symbol until the / is the &lt;code&gt;DB_HOST&lt;/code&gt; (hh-hhhh-hhhh-hh.cleardb.com). Everything after / until ? is &lt;code&gt;DB_DATABASE&lt;/code&gt; (heroku_ddddddddddddddd). The string after the // until : is the &lt;code&gt;DB_USERNAME&lt;/code&gt; (uuuuuuuuuuuuuu). The string between : and @ is the &lt;code&gt;DB_PASSWORD&lt;/code&gt; (pppppppp).&lt;/p&gt;

&lt;p&gt;Don't show, tell or publish these credentials anywhere. These are your database information. That's why I censored it. In your case it should have real numbers and letters.&lt;/p&gt;

&lt;p&gt;Now it's time to change your production database environment variables with the real ones provided by ClearDB. Go to your app settings (&lt;a href="https://dashboard.heroku.com/apps/%5Bbrand-new-app%5D/settings"&gt;https://dashboard.heroku.com/apps/[brand-new-app]/settings&lt;/a&gt;), click "Reveal Config Vars" and change the database variables. It should be like this:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;key&lt;/th&gt;
&lt;th&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;DB_HOST&lt;/td&gt;
&lt;td&gt;hh-hhhh-hhhh-hh.cleardb.com&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DB_DATABASE&lt;/td&gt;
&lt;td&gt;heroku_ddddddddddddddd&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DB_USERNAME&lt;/td&gt;
&lt;td&gt;uuuuuuuuuuuuuu&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DB_PASSWORD&lt;/td&gt;
&lt;td&gt;pppppppp&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#migrating-database-tables"&gt;
  &lt;/a&gt;
  Migrating database tables
&lt;/h3&gt;

&lt;p&gt;Now it's time to run our migrations and create our database tables.&lt;/p&gt;

&lt;p&gt;In your terminal, type &lt;code&gt;heroku run php artisan migrate:fresh&lt;/code&gt;. It will ask you if you really want to run this command, type &lt;code&gt;yes&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;After running this command, there is a high chance that it will return this error:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xky0l_Ut--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5dt14traezk2s2y0dor9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xky0l_Ut--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5dt14traezk2s2y0dor9.png" alt="Migrations error"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It happens because, by default, Laravel uses the &lt;code&gt;utf8mb4&lt;/code&gt; character set. If the server is running a version of MySQL older than the 5.7.7 release or MariaDB older than the 10.2.2 release, you may need to manually configure the default string length generated by migrations. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Learn more at: &lt;a href="https://laravel.com/docs/8.x/migrations#index-lengths-mysql-mariadb"&gt;https://laravel.com/docs/8.x/migrations#index-lengths-mysql-mariadb&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To fix this, add the code below to the &lt;code&gt;boot()&lt;/code&gt; method located in your &lt;code&gt;app/Providers/AppServiceProvider.php&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nc"&gt;Schema&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;defaultStringLength&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;191&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Don't forget to import Schema at the top of the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Support\Facades\Schema&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your &lt;code&gt;AppServiceProvider&lt;/code&gt; should be like this at this point:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Providers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Support\ServiceProvider&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Support\Facades\Schema&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AppServiceProvider&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;ServiceProvider&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * Register any application services.
     *
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Bootstrap any application services.
     *
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;boot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'app.env'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;'production'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="no"&gt;URL&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;forceScheme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'https'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nc"&gt;Schema&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;defaultStringLength&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;191&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Commit your changes and push to Heroku again&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit -am "Setting defaultStringLength to 191"
git push heroku master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the migrations again with &lt;code&gt;heroku run php artisan migrate:fresh&lt;/code&gt; and it should work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#seeding-the-database"&gt;
  &lt;/a&gt;
  Seeding the database
&lt;/h3&gt;

&lt;p&gt;Let's learn how you can seed your database in case you need to.&lt;/p&gt;

&lt;p&gt;In your terminal, type &lt;code&gt;heroku run php artisan db:seed&lt;/code&gt;. It will also ask you if you really want to run this command, type &lt;code&gt;yes&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;💡 &lt;strong&gt;Notice:&lt;/strong&gt; Heroku increments tables by 10, for example id's would appear like this: &lt;code&gt;1, 11, 21, 31&lt;/code&gt;. Beware when using user IDs for reference in Seeds or Factories.&lt;/p&gt;

&lt;p&gt;When you run this command, it might tell you that the &lt;code&gt;Class 'Faker\Factory'&lt;/code&gt; was not found. It happens because &lt;code&gt;faker&lt;/code&gt; is required as a dev dependency. To fix this, simply open your &lt;code&gt;composer.json&lt;/code&gt; file and move &lt;code&gt;"fzaninotto/faker": "^1.9.1",&lt;/code&gt; from &lt;code&gt;require-dev&lt;/code&gt; to &lt;code&gt;require&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And then run &lt;code&gt;composer update&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ptQy_AlX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ym2mgnixck1wlagga26o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ptQy_AlX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ym2mgnixck1wlagga26o.png" alt='Moving faker from "require-dev" to "require"'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Commit your changes and push to Heroku one more time&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit -am "Moving fzaninotto/faker from require-dev to require in composer.json"
git push heroku master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Seed the database again with &lt;code&gt;heroku run php artisan db:seed&lt;/code&gt; and it should work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Congratulations! Now you have your Laravel application up and running. Now you can add it to your portfolio and show your work to people.&lt;/p&gt;

&lt;p&gt;Heroku free plan has some limitations and maybe your app stop working in some days of the month (it usually goes back online when a new month starts). If you are feeling the need to upgrade, do it.&lt;/p&gt;

&lt;p&gt;Improvements and/or corrections are welcome 😀.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further reading
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/getting-started-with-laravel"&gt;https://devcenter.heroku.com/articles/getting-started-with-laravel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://betterprogramming.pub/hosting-your-laravel-app-on-heroku-198764167a85"&gt;https://betterprogramming.pub/hosting-your-laravel-app-on-heroku-198764167a85&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scotch.io/@phalconVee/using-mysql-on-heroku#:%7E:text=In%20the%20Add%2Dons%20search,app%20uses%20our%20local%20database"&gt;https://scotch.io/@phalconVee/using-mysql-on-heroku#:~:text=In%20the%20Add%2Dons%20search,app%20uses%20our%20local%20database&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>laravel</category>
      <category>heroku</category>
      <category>deploy</category>
      <category>mysql</category>
    </item>
    <item>
      <title>Phase 3 Finale</title>
      <author>Nathan A. Hains</author>
      <pubDate>Fri, 30 Apr 2021 22:18:22 +0000</pubDate>
      <link>https://dev.to/nathanhains/phase-3-finale-1hd8</link>
      <guid>https://dev.to/nathanhains/phase-3-finale-1hd8</guid>
      <description>&lt;p&gt;Today marks the final day to Flatiron's Phase 3. The main topic for Phase 3 was the introduction of Ruby on Rails. This was the most challenging Phase thus far but not without its rewards. One such reward came disguised as a valuable piece of knowledge. This was on how to create groups for an application, dividing a single model into two different usages. &lt;/p&gt;

&lt;p&gt;I wanted my users to be able to create a group(faction) that other users could join. Leader vs Joiner. The problem that stumped me was on how to implement leaders &amp;amp; joiners into a single model, Users in my case. To put this into perspective: a faction belongs to a leader, while also having many joiners. Both leaders and joiners can have many factions. theodinproject.com was a wonderful resource on how to implement this idea. &lt;/p&gt;

&lt;p&gt;You will have three tables set up like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class CivilianFactionRequest &amp;lt; ApplicationRecord
    belongs_to :requestor, class_name: "Civilian"
    belongs_to :faction_request, class_name: "CivilianFaction"
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class CivilianFaction &amp;lt; ApplicationRecord
    belongs_to :owner, :class_name =&amp;gt; "Civilian"
    has_many :civilian_faction_requests, foreign_key: :faction_request_id
    has_many :requestors, through: :civilian_faction_requests, source: :requestor
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Civilian &amp;lt; ApplicationRecord
    has_many :civilian_faction_requests, foreign_key: :requestor_id
    has_many :civilian_factions, :class_name =&amp;gt; "CivilianFaction", :foreign_key =&amp;gt; "owner_id"
    has_many :faction_requests, through: :civilian_faction_requests
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now to break this down. The CivilianFactionRequest is the join table that will hold the information from the other two tables. This belongs to the specific faction that a user is requesting to join, as well as the user themself. &lt;/p&gt;

&lt;p&gt;The lone Faction model is where things start to get tricky. The first line sets the owner upon creation. The second is saying it will have many requests under the specific faction request id. The third is saying the faction will have many requestors(joiners). &lt;/p&gt;

&lt;p&gt;The first line describes that the Civilian model(user) will have many faction requests, through the join table, under the requestors id(once they send their request). The second line tells us that the user will have many factions under the owner id. The third tells us that we will have many faction requests as the owner through the join table. &lt;/p&gt;

&lt;p&gt;To match these relationships, the migrations will also have a part to play. The civilian migration will be whatever you determine. The important tables are the factions, and the faction_requests(join table)&lt;/p&gt;

&lt;p&gt;Civilian_factions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;create_table "civilian_factions", force: :cascade do |t|
    t.string "name"
    t.integer "owner_id"
    t.datetime "created_at", precision: 6, null: false
    t.datetime "updated_at", precision: 6, null: false
  end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Civilian Faction Requests:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;create_table "civilian_faction_requests", force: :cascade do |t|
    t.integer "faction_request_id"
    t.integer "requestor_id"
    t.boolean "accepted", default: false
    t.datetime "created_at", precision: 6, null: false
    t.datetime "updated_at", precision: 6, null: false
  end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As mentioned previously, the faction will belong to the owner. Through the join table, the faction will have many joiners. To do this, the join table has to take in the faction id as well as the joiner id. &lt;/p&gt;

&lt;p&gt;Once this is set up, active record gives you full capabilities to call on chained methods such as&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CivilianFaction.first.requestors
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which will query the faction table for the first faction's requestors. Not to mention the ability to create groups as a leader, and join them as joiners! A tough concept to tackle but super useful in the long run. &lt;/p&gt;

&lt;p&gt;Thank you for taking the time to read!&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>programming</category>
    </item>
    <item>
      <title>PatchNote du 01/05/2021</title>
      <author>Zeldown</author>
      <pubDate>Fri, 30 Apr 2021 22:17:58 +0000</pubDate>
      <link>https://dev.to/paladium-pvp/patchnote-du-01-05-2021-45a4</link>
      <guid>https://dev.to/paladium-pvp/patchnote-du-01-05-2021-45a4</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qg75X_6X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29nxerhsg0fzntoahazv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qg75X_6X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29nxerhsg0fzntoahazv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Bienvenue sur le PatchNote du &lt;strong&gt;samedi 1 mai 2021&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Ce samedi 1 mai, Paladium a effectué une mise à jour axée sur des corrections de bugs ainsi qu'une légère modification de la mise à jour &lt;strong&gt;Pillage&lt;/strong&gt;.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uSOys_fU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/amhifx79c2camszrzv9m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uSOys_fU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/amhifx79c2camszrzv9m.png" alt="Bugs_Banner_IMG"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#trade"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Trade&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Vous n'êtes pas sans savoir que lors de la dernière maintenance le &lt;code&gt;/trade&lt;/code&gt; a été ajouté aux personnes possédant un grade sur Paladium.&lt;/p&gt;

&lt;p&gt;Cependant, certains bugs étaient encore présents :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lors de l'annulation d'un échange en quittant le menu ou en se déconnectant, les items n'étaient pas bien redonnés aux joueurs participant à l'échange. Ceux-ci étaient jetés au sol, cela représentait donc un réel souci pour les joueurs réalisant un trade dans le spawn. Désormais, les items seront ajoutés dans l'inventaire si le joueur possède possède suffisamment de place et sinon seront jetés au sol.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* lors de l'annulation */&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;cancel&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="cm"&gt;/* si l'on ne peut pas ajouter l'item à l'inventaire du joueur */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(!&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;inventory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addItemStackToInventory&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="cm"&gt;/* drop un item avec les paramètres : joueur, x, y, z, item */&lt;/span&gt;
        &lt;span class="nc"&gt;PlayerUtils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dropItemStack&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;posX&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;posY&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;posZ&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Le trade contient un &lt;code&gt;autocancel&lt;/code&gt;, c'est-à-dire que lorsqu'un joueur modifie le contenu de l'échange que l'autre joueur a validé, cela annule la validation pour éviter les arnaques. Cependant, nous avions oublié de prendre en compte les champs d'argent et d'exp. Cela a donc laissé place à quelques arnaques mais cela est désormais réglé. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lors de l'envoi du packet (informations) au serveur lorsque l'on modifie notre état dans le trade &lt;code&gt;CSButtonStateChanged.java&lt;/code&gt; une vérification de modification d'exp et de l'argent a été ajoutée.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tradeHasAccepted&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;setTradeHasAccepted&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;refresh&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ce code permet, si une modification est faite alors qu’une partie du trade a validé l'échange, d’indiquer que la validation est annulée et de rafraichir le menu des deux participants.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#bug-sous-la-bedrock"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Bug sous la bedrock&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Différents bugs avaient lieu sous la bedrock. Ceux-ci permettaient notamment de rentrer dans des bases en passant par le vide (void) et d'utiliser certaines commandes pour pouvoir se retrouver dans une base. Les différentes mécaniques/bugs connus par notre équipe ont donc été corrigés. En voici la liste :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HangGlider sous la bedrock&lt;/li&gt;
&lt;li&gt;Slimy Helmet sous la bedrock&lt;/li&gt;
&lt;li&gt;Commandes de téléportation sous la bedrock (/tpa /tpaccept /tpahere /unsafetp) [liste non exhaustive] &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour désactiver ces différentes mécaniques, l'ajout d'une simple condition en java a été suffisant.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;posY&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//annule&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;En effet, la condition est de vérifier si lors de l'utilisation de la mécanique visée le joueur se trouve en position Y inférieure à la couche 0. Si c'est le cas, alors la mécanique est annulée.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#boom-obsidienne"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Boom Obsidienne&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;La Boom Obsidienne faisait des dégâts même dans des endroits où le joueur ne pouvait pas prendre de dégâts (exemple zone protégées ou serveur minage).&lt;/p&gt;

&lt;p&gt;Cela était dû à une erreur de développement, le code effectuant une modification directe de la vie du joueur.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* Définit la vie du joueur à sa vie -4 demi-coeurs (donc 2 coeurs) */&lt;/span&gt;
&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setHealth&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getHealth&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Dorénavant, le code applique une attaque au joueur, permettant ainsi au jeu de vérifier s’il doit bien prendre des dégâts ou non.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* Attaque le joueur de 4 demi-coeurs avec un type de dégât générique */&lt;/span&gt;
&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;attackEntityFrom&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;DamageSource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;generic&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Cela devrait régler ces différents soucis (PS: même en /god le staff prenait des dégâts 🚨)&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#table-denchantement-modd%C3%A9e"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Table d'enchantement moddée&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Lorsque vous mettiez un item dans la table d'enchantement moddée, peu importe votre item la table vous proposait tous les enchantements possibles.&lt;/p&gt;

&lt;p&gt;Désormais celle-ci se basera sur le type de l'item déposé afin de ne vous proposer que ceux disponibles et fonctionnels sur l'item.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* lorsque l'on récupère la liste des enchantements avec un item */&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Enchantment&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;getEnchants&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Item&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Enchantment&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ench&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
    &lt;span class="cm"&gt;/* On parcourt la liste des enchantements qui existe */&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Enchantment&lt;/span&gt; &lt;span class="n"&gt;enchantment&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;enchants&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;keySet&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="cm"&gt;/* Si l'enchantement peut être appliqué sur l'item en question */&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;enchantment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;canEnchantItem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="cm"&gt;/* On accepte l'enchantement */&lt;/span&gt;
        &lt;span class="n"&gt;ench&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;enchantment&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;enchants&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;enchantment&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="cm"&gt;/* On renvoie la liste des enchantements acceptés */&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ench&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;La table d'enchantement ne vous montrera donc plus que les enchantements disponibles, cela devrait vous faire gagner du temps.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#cobble-breaker"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Cobble Breaker&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Récemment le shift click a été ajouté dans l'interface du Cobble Breaker, mais cet ajout a donné lieu à certains bugs notamment celui concernant la récupération d'expérience pour le métier de Mineur. &lt;/p&gt;

&lt;p&gt;Dans certains cas particuliers, l'expérience donnée au joueur ne correspondait pas à la somme des particules récupérées.&lt;/p&gt;

&lt;p&gt;Nous ne rentrerons pas dans les détails techniques de ce bug car il relève du code de Minecraft mais il est désormais résolu.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#r%C3%A9paration-de-la-luckysword"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Réparation de la LuckySword&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Contrairement à ce qui était prévu, il était impossible de réparer la LuckySword (palier 100 du LuckyStats) dans une enclume avec des LuckyBlock. &lt;/p&gt;

&lt;p&gt;Il s’agissait juste d’un oubli des développeurs, le code a été ajouté et fonctionne désormais sur le serveur en espérant que certains d'entre vous la possède bientôt ! 🎉&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#hitbox"&gt;
  &lt;/a&gt;
  &lt;strong&gt;HitBox&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Il semblerait que les mobs du métier de Hunter ait une hitbox trop faible pour certains… Nous n'avons pas été radins et avons augmenté de 0,2 bloc l’intégralité des hitbox des animaux aussi bien en largeur qu’en longueur et en hauteur !&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyEntity&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;setSize&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ce fut long et fastidieux... hum... hum...&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#home-remover"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Home Remover&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Le Home Remover avait quelques soucis d'affichage, ceux-ci ont été réglés.&lt;/p&gt;

&lt;p&gt;Le cooldown affiché au-dessus du Home Remover n'était pas toujours correct et descendait par paliers, nous en avons donc profité pour paramétrer le format du cooldown en &lt;code&gt;HH:MM:SS&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%02d:%02d:%02d"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;3600&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3600&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pour obtenir un cooldown de ce style nous allons d'abord récupérer l'heure : &lt;code&gt;nombre_de_secondes / 3600&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ensuite pour les minutes, le calcul se complexifie un peu. Il faut savoir que en java les "%" sont ce que l'on appelle des &lt;code&gt;modulo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Un &lt;em&gt;modulo&lt;/em&gt; est le reste de la division, par exemple &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;10 modulo 3&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Cela retournera 1, je m'explique: 3 rentre 3 fois dans 10, cela fait 9. La division n'étant pas parfaite il nous reste un "reste" qui ici est 1 (10-9).&lt;/p&gt;

&lt;p&gt;Pour le nombre de minutes, nous allons donc faire &lt;code&gt;(nombre_de_secondes % 3600) / 60&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Et enfin pour le nombre de secondes : &lt;code&gt;nombre_de_secondes % 60&lt;/code&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#golem-sous-la-bedrock"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Golem sous la bedrock&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Il arrivait que certains Guardian Golem traversent la dernière couche de bedrock lorsqu'ils se trouvaient dessus. Le souci étant qu’une fois dans le void, ils tombaient à l'infini et donc ne remboursait pas la Guardian Stone au joueur maitre du Golem.&lt;/p&gt;

&lt;p&gt;Désormais, si le golem se trouve en dessous de la couche 0, il sera automatiquement kill.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* Lorsque l'entité se met à jour */&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onEntityUpdate&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/* Si sa position est en-dessous de la couche 0 */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;posY&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="cm"&gt;/* On tue le golem */&lt;/span&gt;
        &lt;span class="n"&gt;setDead&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yXK8skjW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/shu42fl8kaot32bup4yu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yXK8skjW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/shu42fl8kaot32bup4yu.png" alt="Features_Banner_IMG"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#amulettes"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Amulettes&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Nous avons ajouté une petite description en-dessous des amulettes pour que vous ne soyez plus perdus (tout comme nous d'ailleurs).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9ucsekpi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yk73sxds60hy7eldrdrn.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ucsekpi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yk73sxds60hy7eldrdrn.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#enchantement-humiliation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Enchantement Humiliation&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Nous avons pris la liberté et le plaisir de vous ajouter de nouvelles petites phrases pour accompagner votre mort avec l'enchantement Humiliation.&lt;/p&gt;

&lt;p&gt;En voici quelques exemples :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Adieu , mort au combat sous la main de &lt;/li&gt;
&lt;li&gt; n’est plus...  l’a réduit en miettes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nous vous laissons la surprise des autres 🙈&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#modification-pillage"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Modification Pillage&lt;/strong&gt;
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#modification-de-la-boom-obsidienne"&gt;
  &lt;/a&gt;
  Modification de la Boom Obsidienne
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;Description &lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Génère une explosion qui affecte les joueurs et les entités&lt;/span&gt;

&lt;span class="na"&gt;Dégâts entités &lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;retire 10% de la vie de l’entité. Si l’entité a moins de 1% de sa vie initiale, il meurt.&lt;/span&gt;

&lt;span class="na"&gt;Dégâts joueur passe de &lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;5 coeurs -&amp;gt; 2 coeurs&lt;/span&gt;

&lt;span class="na"&gt;Pas de dégâts en-dessous de x coeurs passe de &lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;3 coeurs -&amp;gt; 2 coeurs&lt;/span&gt;

&lt;span class="s"&gt;Rayon d’explosion&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;1,5 bloc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#ajout-dun-nouveau-bloc-la-mega-boom-obsidienne"&gt;
  &lt;/a&gt;
  Ajout d'un nouveau bloc : la &lt;strong&gt;Mega&lt;/strong&gt; Boom Obsidienne
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--anDEljK2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d0wl8sghmx5x12fkmmi2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--anDEljK2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d0wl8sghmx5x12fkmmi2.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Basé sur la Boom Obsi, celle-ci fera trembler vos plus féroces ennemis&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;Description &lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Génère une explosion qui affecte les joueurs et les entités&lt;/span&gt;

&lt;span class="na"&gt;Dégâts entités &lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Retire 20% de la vie de l’entité. Si l’entité a moins de 1% de sa vie initiale, il meurt.&lt;/span&gt;

&lt;span class="na"&gt;Dégâts joueur &lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;4 coeurs&lt;/span&gt;

&lt;span class="na"&gt;Pas de dégâts en dessous x coeurs &lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;2 coeurs&lt;/span&gt;

&lt;span class="s"&gt;Rayon d’explosion&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;2 blocs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Et voici son craft :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X4_LKxAM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sux9ya0hsmcnkxt6d5mk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X4_LKxAM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sux9ya0hsmcnkxt6d5mk.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#obsidienne-directionnelle"&gt;
  &lt;/a&gt;
  Obsidienne directionnelle
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Ancien système :&lt;/strong&gt; Actuellement les Slime Obsi se placent vers le joueur s’il est à 3 blocs ou moins. Sinon, elles se placent toujours vers le sud.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iThZVyev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ontthivfcybw29c638d7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iThZVyev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ontthivfcybw29c638d7.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nouveau système :&lt;/strong&gt; Apparition d'un symbole sur la face sud de base. Ensuite, via la pioche en obsidienne (clic droit) le symbole se déplacera de face en face.&lt;br&gt;
Si l’obsidienne est placée à côté d’une autre obsidienne, le symbole prend de base la même direction.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ajout-de-3-nouvelles-enclumes"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Ajout de 3 nouvelles enclumes&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Désormais, le serveur compte des enclumes en Améthyste, en Titane et en Paladium !&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dAkZxRI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8t6wgii3u17gws3mxi93.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dAkZxRI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8t6wgii3u17gws3mxi93.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Enclume&lt;/th&gt;
&lt;th&gt;Durabilité&lt;/th&gt;
&lt;th&gt;Nombre moyen d'utilisation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Basique&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Améthyste&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;56&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Titane&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;80&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Paladium&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;112&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;/center&gt;

&lt;p&gt;Les enclumes sont désormais utilisables dans les zones claims.&lt;/p&gt;

&lt;p&gt;Aucune modifications n’a été faites sur la résistance des enclumes aux explosions et notamment à la dynamite. Cela reste comme avant, les nouvelles enclumes apportent donc seulement un plus grand nombre d’utilisation avant de se détruire.&lt;/p&gt;




&lt;p&gt;Voici ce qui signe la fin de ce PatchNote, nous espérons que cela vous a plu et que ce nouvel aspect technique vous plaira tout autant.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Un sondage est disponible ici&lt;/strong&gt; 🚀 &lt;a href="https://forms.gle/bQERBbTeKHebZBiu6"&gt;✨sondage✨&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Erch8OgC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sw9i84umvmbtbrf2tn2g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Erch8OgC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sw9i84umvmbtbrf2tn2g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;N'hésitez pas à laisser un commentaire ci-dessous, nous vous répondrons avec le plus grand plaisir.&lt;/p&gt;

</description>
      <category>paladium</category>
      <category>news</category>
      <category>minecraft</category>
      <category>french</category>
    </item>
    <item>
      <title>Getting started with ReScript and parcel  </title>
      <author>Ahmed Atalla</author>
      <pubDate>Fri, 30 Apr 2021 22:14:40 +0000</pubDate>
      <link>https://dev.to/a_atalla/getting-started-with-rescript-and-parcel-2e8p</link>
      <guid>https://dev.to/a_atalla/getting-started-with-rescript-and-parcel-2e8p</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-rescript-"&gt;
  &lt;/a&gt;
  What is &lt;a href="https://rescript-lang.org/"&gt;ReScript&lt;/a&gt; ?
&lt;/h2&gt;

&lt;p&gt;as mentioned on the website, &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The JavaScript-like language you have been waiting for,&lt;br&gt;
Previously known as BuckleScript and Reason&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#history-amp-summary"&gt;
  &lt;/a&gt;
  History &amp;amp; Summary
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;OCaml&lt;/code&gt; is a typed FP language compiling to bytecode and native code.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Js_of_ocaml&lt;/code&gt; is based on OCaml and compiles to JavaScript for OCaml users.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;BuckleScript&lt;/code&gt; is a fork of OCaml that also outputs JavaScript, optimized (features, JS interoperability, output, build tools) for JS developers rather than OCaml developers.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Reason&lt;/code&gt; is an alternative, JS-looking syntax layer over OCaml, plus extra tools. Reason used 1. BuckleScript to produce JavaScript output and 2. OCaml to produce native output. Most of the community focused on the former usage.
Reason and BuckleScript shared most teammates, who wanted to double down on the JS use-case.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ReScript&lt;/code&gt;, thus born, is the new branding for BuckleScript that reimplements or cleans up Reason's syntax, tools, ecosystem &amp;amp; docs into a vertically integrated experience.
Reason project will continue serving its purpose of a syntax layer for native OCaml. Some folks might use Reason with Js_of_ocaml to output JS code.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;There is only one official template to create a new ReScript app &lt;a href="https://rescript-lang.org/docs/react/latest/installation"&gt;ReScript docs&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone https://github.com/rescript-lang/rescript-project-template my-app
&lt;span class="nb"&gt;cd &lt;/span&gt;my-app
npm &lt;span class="nb"&gt;install
&lt;/span&gt;npm start
node src/Demo.bs.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;npm start&lt;/code&gt; script will run &lt;code&gt;bsb -make-world -w&lt;/code&gt; to compile the &lt;code&gt;.res&lt;/code&gt; code into &lt;code&gt;.bs.js&lt;/code&gt; code&lt;/p&gt;

&lt;p&gt;as you can see the source code has only a console log statement so we need to add &lt;code&gt;@rescript/react&lt;/code&gt; and convert that to a single-page web app, cd into &lt;code&gt;my-app&lt;/code&gt; directory and install the other dependencies&lt;br&gt;
also will use &lt;code&gt;parcel&lt;/code&gt; bundler to transpile and bundle our front-end code and run the development server&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;react react-dom  @rescript/react &lt;span class="nt"&gt;--save&lt;/span&gt;
npm &lt;span class="nb"&gt;install &lt;/span&gt;parcel concurrently &lt;span class="nt"&gt;--save-dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;concurrently&lt;/code&gt; will be used to run 2 commands in parallel from npm scripts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The next step is to edit the bucklescript config file &lt;code&gt;bsconfig.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"reason"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"react-jsx"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"bs-dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"@rescript/react"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"package-specs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"in-source"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;in-source&lt;/code&gt; config is optional, I like to keep the compiled &lt;code&gt;.bs.js&lt;/code&gt; files outside the &lt;code&gt;src&lt;/code&gt; especially in a new project that is started as ReScript projects, if you set this to &lt;code&gt;false&lt;/code&gt; the compiled files will be at &lt;code&gt;./lib/js/src&lt;/code&gt;, if it is &lt;code&gt;true&lt;/code&gt; the compiled file will be in the same place as its &lt;code&gt;.res&lt;/code&gt; source&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;next, create a &lt;code&gt;public/index.html&lt;/code&gt; and &lt;code&gt;public/global.css&lt;/code&gt; directory with the content&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"./global.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Hello ReScript&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"app-root"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"../lib/js/src/App.bs.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then will add an npm script to start the bucklescript compiler command and the parcel dev server&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nl"&gt;"dev"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"concurrently &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;parcel ./public/index.html&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;bsb -make-world -w&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; "&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;finally rename &lt;code&gt;src/Demo.res&lt;/code&gt; to &lt;code&gt;src/App.res&lt;/code&gt; with this basic ReScript code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;react&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;component&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World 123&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="na"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  }
}

switch ReactDOM.querySelector("#app-root") &lt;span class="si"&gt;{&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Some&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;App&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;,&lt;/span&gt; &lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;None&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="si"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;this will create a React component &lt;code&gt;App&lt;/code&gt; and render it at the div with id &lt;code&gt;app-root&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;now let us start the dev server and check the result at &lt;a href="http://127.0.0.1:1234"&gt;http://127.0.0.1:1234&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>reason</category>
      <category>rescript</category>
      <category>react</category>
    </item>
  </channel>
</rss>
