<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What revenue models do you use in your apps?</title>
      <author>Madza</author>
      <pubDate>Tue, 11 May 2021 07:26:33 +0000</pubDate>
      <link>https://dev.to/madza/what-revenue-models-do-you-use-in-your-apps-5b8f</link>
      <guid>https://dev.to/madza/what-revenue-models-do-you-use-in-your-apps-5b8f</guid>
      <description>&lt;p&gt;Some of the most common ones include Freemium, In-App Purchases, Advertising, Paid Apps, Subscriptions, and Sponsorships.&lt;/p&gt;

&lt;p&gt;Which models have you used in your apps and which ones tended to be the most effective?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>business</category>
      <category>startup</category>
      <category>finanses</category>
    </item>
    <item>
      <title>9 Hidden Reasons Why You Still Struggle as a Software Developer: and How You Can Fix Them Before is Too Late!</title>
      <author>Dragos Nedelcu</author>
      <pubDate>Tue, 11 May 2021 07:14:14 +0000</pubDate>
      <link>https://dev.to/dragosgn/9-hidden-reasons-why-you-still-struggle-as-a-software-developer-and-how-you-can-fix-them-before-is-too-late-51m9</link>
      <guid>https://dev.to/dragosgn/9-hidden-reasons-why-you-still-struggle-as-a-software-developer-and-how-you-can-fix-them-before-is-too-late-51m9</guid>
      <description>&lt;h3&gt;
  &lt;a href="#is-not-because-programming-is-hard"&gt;
  &lt;/a&gt;
  Is not because programming is hard.
&lt;/h3&gt;

&lt;p&gt;Or because there are too many technologies out there or because you don’t have enough experience. &lt;/p&gt;

&lt;p&gt;Understanding that being good at software development is about discipline and not really about coding per se, frameworks or “on-paper” experience, that is hard.&lt;/p&gt;

&lt;p&gt;For many of you, this is not relevant, unless you are ready to get to the next level as a software developer. Whether it is because you simply want to be better, more confident or you want to make more money. &lt;/p&gt;

&lt;p&gt;But, I know many of you are &lt;em&gt;ambitious developers&lt;/em&gt; who are looking to get to the next level. If that’s the case, make sure you fix these mistakes before is too late:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1) Lack of focus&lt;/strong&gt; - the capital sin of ambitious developers. Jumping around online courses, tutorials and unfinished side projects. Doing 90% of things, 90% of the time. &lt;/p&gt;

&lt;p&gt;Unfortunately, starting does not mean achieving, expertise comes with focus and consistency. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2) Weak fundamentals&lt;/strong&gt; - particularly important for self-taught developers. Distracted by shiny technologies, they are more worried about learning the latest framework than the boring things that pay off (like HTTP or the debugger).&lt;/p&gt;

&lt;p&gt;Nevertheless, boring is sexy in programming.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3) A narrow view of software development&lt;/strong&gt; - this is mainly because at their job, developers get exposed to one part of the software. Maybe it is the frontend or the backend, they live in their little bubble with limited understanding of the software lifecycle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4) No direction in their career&lt;/strong&gt; - the root of all evil. Too many developers think that at some point things will click. They have no strategic goals or understanding of where they should go, so they jump from job to job chasing 5% salary increases instead of disrupting a certain domain.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5) Bad Habits&lt;/strong&gt; - when it comes to code and life It can be writing tests, documenting, taking care of that Jira board or even stop overdoing the snacks in the office. Habits make the difference between average and extraordinary. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6) Insecurities &amp;amp; poor self-esteem&lt;/strong&gt; - a consequence of the mentioned about, many coders are full of self-doubt. This is why they ultimately negotiate poorly and end up undervalued and underpaid.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7) Stuck in the “Coder” Mindset&lt;/strong&gt; - most programmers never leave behind the “coder” mindset, they live in a box where everything is about the code. Expert programmers have a multidimensional view of software development, a mature one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8) No professional image&lt;/strong&gt; - yes, I know Google engineers walking around with a hoodie. Assume you are not those people. You are a professional first and a programmer second, check your image and your manners.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9) Complacency&lt;/strong&gt; - the final but probably the cause of all evils that software developers. Even though software developers have an image of always learning and improving, when you go beyond the noise, things are a bit different.&lt;/p&gt;

&lt;p&gt;Programmers are resistant to change, and that resistance translates to complacency.&lt;/p&gt;

&lt;p&gt;Sometimes to achieve better results, you don’t have to do more, you have to do less. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you want to make a career out of this coding thing, if you want the flexibility and financial freedom that comes with being great at writing software, you better stop doing these capital mistakes now.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now let’s be honest: reading a simple article about things you might do wrong and going about your day won’t really bring you the results you want. &lt;/p&gt;

&lt;p&gt;If you truly want to escape the “developer rat-race”, to gain extreme confidence in your skills and to get the recognition and pay you to deserve as a software developer, then click on the link below.&lt;/p&gt;

&lt;p&gt;Get in contact with me or someone in my team. We will schedule a Zoom call, where together with you we will build a step-by-step plan to get you to the “promised land” of software developers.&lt;/p&gt;

&lt;p&gt;The only thing you need to do is click on the link below and apply on our website. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#click-here-to-apply-now"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.codewithdragos.com"&gt;Click here to apply now!&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Dragos Nedelcu - Expert Software Coach at CodeWithDragos&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Looking forward to talking to you. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dragos Nedelcu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Expert Software Coach at CodeWithDragos&lt;/strong&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Yes, I do</title>
      <author>Chris Bongers</author>
      <pubDate>Tue, 11 May 2021 06:39:52 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/yes-i-do-2b28</link>
      <guid>https://dev.to/dailydevtips1/yes-i-do-2b28</guid>
      <description>&lt;p&gt;By the time you are reading this, I've said "Yes, I do" to my wife.&lt;br&gt;
And we are already on our honeymoon!&lt;/p&gt;

&lt;p&gt;Therefore I'm not going to make this long, I've thought about this hard and it's time to put in a break.&lt;/p&gt;

&lt;p&gt;It's been 413 consecutive days of writing, and I think I deserve a small break.&lt;/p&gt;

&lt;p&gt;Let's say we see each other again on the 15th, so you only have to miss my writing for 10 days.&lt;/p&gt;

&lt;p&gt;From the bottom of my heart, I want to thank every single one of you for reading and sharing my articles.&lt;/p&gt;

&lt;p&gt;See you soon,&lt;/p&gt;

&lt;p&gt;Chris&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
    </item>
    <item>
      <title>Web design VS Web development</title>
      <author>Linda Kenqa</author>
      <pubDate>Tue, 11 May 2021 06:34:41 +0000</pubDate>
      <link>https://dev.to/steezyza/web-design-vs-web-development-13d8</link>
      <guid>https://dev.to/steezyza/web-design-vs-web-development-13d8</guid>
      <description>&lt;p&gt;It is very easy to assume that design and development are interchangeable terms and have the same meaning, as I also thought they were when I started learning web development. They don't. The role of each is completely different from the other. &lt;/p&gt;

&lt;p&gt;In this article, we'll discuss their roles, how they're responsible for different aspects of building a website, and if you should hire a designer or developer for your website.&lt;/p&gt;

&lt;p&gt;Let's Go!&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#web-design"&gt;
  &lt;/a&gt;
  Web Design
&lt;/h6&gt;

&lt;p&gt;Let's think of a web designer as an architect that designs a plan of your house prior to it being built. They transform an idea, story, into a visually appealing design, and use this layout to build the user experience throughout the entire website. The person is usually well-versed in colour schemes, graphic design, typography and information flow.&lt;/p&gt;

&lt;p&gt;The role of a web designer is one that is often underrated. In their designs, they need to integrate the best user experience and create a welcoming environment for the user. Some would say that designers are as important as developers, as without a great user interface and user experience, the development cannot be truly appreciated by the user.&lt;/p&gt;

&lt;p&gt;Let's take a look at the main roles of a web designer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Using software tools such as Adobe Photoshop, Adobe XD, or Figma to create the final layout design of the website&lt;/li&gt;
&lt;li&gt;Possess good skills in graphic design and logo design&lt;/li&gt;
&lt;li&gt;Have a good feel for user experience, to identify the simplest approach possible to attain the desired function. This includes the layout, buttons, images and the general format of the website.&lt;/li&gt;
&lt;li&gt;Keeping themselves up to date with the latest design trends. It’s also important to keep design consistency that is made popular from other web giant companies, such as Google, and Facebook. This makes the website environment and interfaces easier to navigate and use, as it is already familiar to the users' eyes.&lt;/li&gt;
&lt;li&gt;Integrate the colour palettes, typography and identity of the brand into the website.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#web-development"&gt;
  &lt;/a&gt;
  Web Development
&lt;/h6&gt;

&lt;p&gt;If designers can be compared to architects, developers are the construction workers that take these architectural drawings and execute them, transforming the vision into a building. This is where it gets really technical.&lt;/p&gt;

&lt;p&gt;Web development is the process of building, creating and maintaining websites and web applications. It's the work that turns a design layout (wireframe) into a functioning website, ensuring it runs smoothly, loads fast, and delivers a seamless experience to the user.&lt;/p&gt;

&lt;p&gt;Generally, web development is split into two main categories: front-end development, which is user-facing, and back-end development, which refers to the server maintenance side. A full-stack developer looks after both front-end and back-end needs and provides input of user experience and business logic.&lt;/p&gt;

&lt;p&gt;Here are some of the roles of a web developer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Building the actual interface through which a user interacts with the website. This interface is built by front-end developers using HTML, CSS, and JS languages.&lt;/li&gt;
&lt;li&gt;Front-end developers can use styling preprocessors, Javascript libraries, and frameworks to fasten the process of development.&lt;/li&gt;
&lt;li&gt;Front-end developers provide the markup design to back-end developers, so they can implement a dynamic website, and submit all the required data on the server and databases.&lt;/li&gt;
&lt;li&gt;Back-end developers create the backbone of the website using languages such as PHP and MySQL.&lt;/li&gt;
&lt;li&gt;Both front-end and back-end developers can use the same development environments or IDEs (Integrated Development Environment). These are software application tools where you code and build the structure of the website.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Closing Thoughts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hopefully, this article has given you insight into the key differences between a web developer and a web designer. So, should you hire a web designer or a web developer?&lt;/p&gt;

&lt;p&gt;If you need someone to create visuals for your website, including the brand style, layout, information flow, and user interfaces, you’ll be looking to hire a &lt;strong&gt;web designer&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;When you have the mockups and wireframes provided by the web designer, you’ll need a &lt;strong&gt;front-end web developer&lt;/strong&gt; to code them up. Using front-end coding languages, the developer will transform these designs into a functioning website – you’ll have clickable, scrollable elements, site navigation, and content styling that matches your brand guidelines.&lt;/p&gt;

&lt;p&gt;You might then need the help of a &lt;strong&gt;back-end developer&lt;/strong&gt;, who will take care of all server-side programming, third-party integrations, and programs that are necessary to power a website’s server and database.&lt;/p&gt;

&lt;p&gt;I hope this article has given you all the clarity you need going forward.&lt;/p&gt;

&lt;p&gt;Until next time,&lt;br&gt;
Linda Kenqa&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is the first article I've published on this platform. Thank you for taking the time to read it. Stay tuned for more.&lt;/em&gt;  &lt;/p&gt;

</description>
      <category>beginners</category>
      <category>design</category>
      <category>webdev</category>
      <category>development</category>
    </item>
    <item>
      <title>อาร์เรย์ golang </title>
      <author>Anuchit Prasertsang</author>
      <pubDate>Tue, 11 May 2021 05:57:08 +0000</pubDate>
      <link>https://dev.to/anuchito/golang-4201</link>
      <guid>https://dev.to/anuchito/golang-4201</guid>
      <description>&lt;h1&gt;
  &lt;a href="#%E0%B8%AD%E0%B8%B2%E0%B8%A3%E0%B9%8C%E0%B9%80%E0%B8%A3%E0%B8%A2%E0%B9%8C%E0%B8%84%E0%B8%B7%E0%B8%AD%E0%B8%AD%E0%B8%B0%E0%B9%84%E0%B8%A3"&gt;
  &lt;/a&gt;
  อาร์เรย์คืออะไร
&lt;/h1&gt;

&lt;p&gt;ถ้าคิดไม่ออกให้นึกถึงห้องแถวที่เรียงต่อกัน แต่ละห้องคืออาร์เรย์หนึ่งช่องเอาไว้เก็บของหนึ่งชิ้น และเราจะเริ่มนับห้องแรกเป็นตำแหน่งที่ 0 (ไม่ใช่ 1 นะ) ถ้าเรามีห้องแถวสิบห้อง แสดงว่าเรามีตำแหน่งเก็บของตั้งแต่ 0 ถึงตำแหน่งสุดท้ายคือ 9 รวมเป็นสิบตำแหน่ง&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B8%9B%E0%B8%A3%E0%B8%B0%E0%B8%81%E0%B8%B2%E0%B8%A8%E0%B8%AD%E0%B8%B2%E0%B8%A3%E0%B9%8C%E0%B9%80%E0%B8%A3%E0%B8%A2%E0%B9%8C"&gt;
  &lt;/a&gt;
  การประกาศอาร์เรย์
&lt;/h1&gt;

&lt;p&gt;ตัวแปรอาร์เรย์ในโกใช้วงเล็บก้ามปู &lt;code&gt;[n]type&lt;/code&gt; คล้ายในภาษาส่วนใหญ่&lt;br&gt;
แน่นอนว่าตัวแปรอาร์เรย์ต้องระบุขนาด &lt;code&gt;n&lt;/code&gt; ด้วยว่าจะให้อาร์เรย์มีขนาดเท่าไร&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;langs&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;    &lt;span class="c"&gt;// อาร์เรย์ langs เก็บของเป็น string ขนาด 3 ช่อง&lt;/span&gt;
&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;ages&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;        &lt;span class="c"&gt;// อาร์เรย์ ages เก็บของเป็น int ขนาด 5 ช่อง&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ถ้าเรามี type อื่นๆก็สามารถประกาศเป็นอาร์เรย์ได้เหมือนกัน&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
    &lt;span class="n"&gt;Age&lt;/span&gt;  &lt;span class="kt"&gt;int&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ประการอาร์เรย์ของ User&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;อาร์เรย์ในโกประกาศแล้วพร้อมใช้งานเลยนะ&lt;/strong&gt;&lt;br&gt;
อ่านค่าในอาร์เรย์สามารถระบุตำแหน่งที่อยากจะอ่านค่าภายในเครื่องหมาย &lt;code&gt;[]&lt;/code&gt; &lt;br&gt;
เช่นอยากอ่าน อยากรู้ว่าในห้องแถวห้องแรกเก็บค่าอะไรไว้ (อาร์เรย์ช่องแรก)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;langs&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; 
&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;langs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ค่าที่เก็บอยู่ในอาร์เรย์ช่องแรกคือ %q&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;อาร์เรย์ในโกจะทำการใส่ค่าเริ่มต้น (&lt;a href="https://tour.golang.org/basics/12"&gt;zero value&lt;/a&gt;) ให้กับอาร์เรย์ทุกช่องโดยอัตโนมัติจึงทำให้อาร์เรย์พร้อมใช้งาน (ค่าเริ่มต้นของ string คือ "" empty string)&lt;/p&gt;

&lt;p&gt;ใส่ค่าหรือเปลี่ยนแปลงค่าในอาร์เรย์&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;langs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"gopher"&lt;/span&gt; &lt;span class="c"&gt;// เอาคำว่า "gopher" ไปเก็บในอาร์เรย์ช่องที่หนึ่ง&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;langs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;       &lt;span class="c"&gt;// อ่านค่าจากอาร์เรย์ช่องที่หนึ่ง&lt;/span&gt;
&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ค่าที่เก็บอยู่ในอาร์เรย์ช่องแรกคือ %q&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#%E0%B8%81%E0%B8%B3%E0%B8%AB%E0%B8%99%E0%B8%94%E0%B8%84%E0%B9%88%E0%B8%B2%E0%B9%80%E0%B8%A3%E0%B8%B4%E0%B9%88%E0%B8%A1%E0%B8%95%E0%B9%89%E0%B8%99%E0%B8%95%E0%B8%AD%E0%B8%99%E0%B8%9B%E0%B8%A3%E0%B8%B0%E0%B8%81%E0%B8%B2%E0%B8%A8%E0%B9%84%E0%B8%94%E0%B9%89%E0%B8%94%E0%B9%89%E0%B8%A7%E0%B8%A2"&gt;
  &lt;/a&gt;
  กำหนดค่าเริ่มต้นตอนประกาศได้ด้วย
&lt;/h3&gt;

&lt;p&gt;โดยใช้เครื่องหมาย &lt;code&gt;=&lt;/code&gt; แล้วใส่ค่าที่เราต้องการเข้าไป โดยการใส่ชื่อ type แล้วตามด้วย ปีกกา &lt;code&gt;{}&lt;/code&gt; เราสามารถใส่ค่าเข้าไปในปีกกา คั่นด้วย &lt;code&gt;,&lt;/code&gt; คอมม่า&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;langs&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; 
&lt;span class="n"&gt;langs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"gopher"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Pythonistas"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"F#"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#%E0%B8%AB%E0%B8%B2%E0%B8%82%E0%B8%99%E0%B8%B2%E0%B8%94%E0%B8%82%E0%B8%AD%E0%B8%87%E0%B8%AD%E0%B8%B2%E0%B8%A3%E0%B9%8C%E0%B9%80%E0%B8%A3%E0%B8%A2%E0%B9%8C"&gt;
  &lt;/a&gt;
  หาขนาดของอาร์เรย์
&lt;/h2&gt;

&lt;p&gt;เราสามารถใช้คำสั่ง &lt;code&gt;len&lt;/code&gt; เพื่อหาขนาดของอาร์เรย์ได้เช่นกัน&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;langs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"อาร์เรย์ langs มีขนาด"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#%E0%B8%AA%E0%B8%B3%E0%B8%84%E0%B8%B1%E0%B8%8D"&gt;
  &lt;/a&gt;
  สำคัญ
&lt;/h1&gt;

&lt;p&gt;ในโกขนาดของอาร์เรย์ถือว่าเป็นคุณสมบัติของ type ด้วย&lt;br&gt;
หมายความว่าอาร์เรย์ที่เก็บของชนิดเดียวกันแต่คนละขนาดถือว่าเป็นคนละ type กัน&lt;br&gt;
(ซึ่งทำให้ array ใน โก ปลอดภัยในการใช้งานมากๆ) เช่นถ้าเรามีฟังก์ชั่นชื่อว่า Dubnaew (ดับแนว) รับอาร์เรย์ที่เก็บสตริงขนาด 3&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;Dubnaew&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ns&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;langs&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="n"&gt;Dubnaew&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;langs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;cords&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="n"&gt;Dubnaew&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cords&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;// compile error : cannot use cords (type [5]string) as type [3]string in argument to Dubnaew&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#%E0%B9%82%E0%B8%9A%E0%B8%99%E0%B8%B1%E0%B8%AA"&gt;
  &lt;/a&gt;
  โบนัส
&lt;/h1&gt;

&lt;p&gt;ใช้ for loop กับ array ก็ได้นะ&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;langs&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="c"&gt;// วนลูปด้วย index (ตำแหน่ง)&lt;/span&gt;
      &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;langs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;langs&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="c"&gt;// วนลูปด้วย for range เอาทั้ง index และ ค่าที่อยู่ใน index นั้น&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;langs&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="c"&gt;// วนลูปด้วย for range เอาแค่ค่าของแต่ละช่อง&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;langs&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="c"&gt;// วนลูปด้วย for range เอาแค่ index&lt;/span&gt;
      &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;langs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>go</category>
      <category>array</category>
    </item>
    <item>
      <title>Getting Started with React.....</title>
      <author>Joshua Nyarko Boateng</author>
      <pubDate>Tue, 11 May 2021 04:12:54 +0000</pubDate>
      <link>https://dev.to/joshboat365/getting-started-with-react-2i1l</link>
      <guid>https://dev.to/joshboat365/getting-started-with-react-2i1l</guid>
      <description>&lt;p&gt;&lt;strong&gt;1. You need to install &lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Now what is &lt;code&gt;node&lt;/code&gt;: Node allows developers to write JavaScript code that runs directly in a computer process itself instead of in a browser. Node can, therefore, be used to write server-side applications with access to the operating system, file system, and everything else required to build fully-functional applications.&lt;br&gt;
&lt;em&gt;Click to install node: &lt;a href="https://nodejs.org/en/"&gt;node&lt;/a&gt;&lt;/em&gt;&lt;br&gt;
&lt;code&gt;**Note: Download the LTS version of node that is compactible with every operating system**&lt;/code&gt;&lt;br&gt;
After installing &lt;code&gt;node&lt;/code&gt;, check whether it has been installed by opening &lt;code&gt;command prompt/terminal&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oSKolZ3i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jdq1mmciwtq4coxw8kt3.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oSKolZ3i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jdq1mmciwtq4coxw8kt3.PNG" alt="cmd checking node version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;2. You need a text editor&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iV-mBKQm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x7yrawbx8atb8emsk2fk.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iV-mBKQm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x7yrawbx8atb8emsk2fk.PNG" alt="vs code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I recommend you use &lt;code&gt;Visual Studio Code&lt;/code&gt; because it has awesome features and it's easy to use and i love it!. &lt;br&gt;
&lt;em&gt;Click here to install visual studio code: &lt;a href="https://code.visualstudio.com/"&gt;visual studio code&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;3. Now let's get to installing react&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;First open a directory where you want to start your react a&lt;br&gt;
project and open with visual studio code.&lt;br&gt;
open terminal &lt;strong&gt;Ctrl + Shift + `&lt;/strong&gt;&lt;br&gt;
Type the following to create your first react project &lt;br&gt;
&lt;code&gt;&lt;/code&gt;&lt;code&gt;npx create-react-app project-name&lt;/code&gt;&lt;code&gt;&lt;/code&gt; &lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; we don't use &lt;code&gt;npm install -g create-react-app project-name&lt;/code&gt;or &lt;code&gt;npx install -g create-react-app project-name&lt;/code&gt; anymore so you will get and error.&lt;br&gt;
to be free from that error, type:&lt;br&gt;
&lt;code&gt;npm uninstall -g create-react-app&lt;/code&gt;&lt;br&gt;
Now you are free to use: &lt;code&gt;npx create-react-app project-name&lt;/code&gt;&lt;br&gt;
If you still get errors like this: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vEM7Efzi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ll41kkang2m9vvf91rhs.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vEM7Efzi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ll41kkang2m9vvf91rhs.PNG" alt="npm error"&gt;&lt;/a&gt;&lt;br&gt;
It means you don't have the latest version of react and you have to install it globally to be accessed everywhere on the operating system. Now use the following to install&lt;br&gt;
&lt;code&gt;npm install -g create-react-app@latest&lt;/code&gt; this installs the latest version of react with it's current libraries.&lt;br&gt;
&lt;strong&gt;Now you are free to use:&lt;/strong&gt; &lt;br&gt;
&lt;code&gt;npx create-react-app project-name&lt;/code&gt; after that&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UGsIDINF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zie1rzqfpbk9qwwgov21.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UGsIDINF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zie1rzqfpbk9qwwgov21.PNG" alt="react installation process"&gt;&lt;/a&gt;&lt;br&gt;
&lt;code&gt;cd project-name/&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_tlJfZx5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vm7p6sa2jvr6pnjd93jt.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_tlJfZx5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vm7p6sa2jvr6pnjd93jt.PNG" alt="installation files in project folder"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;4. Pushing your first react app to your git repository&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Use:&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;git init &lt;/li&gt;
&lt;li&gt;git remote add origin "repo-url"&lt;/li&gt;
&lt;li&gt;git add .&lt;/li&gt;
&lt;li&gt;git commit -m "commit-message"&lt;/li&gt;
&lt;li&gt;git push origin main &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;You'd probabily had an error message like this:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ko0ZblpG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hdx9ak6xgqkvok5bq8ss.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ko0ZblpG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hdx9ak6xgqkvok5bq8ss.PNG" alt="git push error"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Now react automatically initializes a git project for you and due to that you get errors in pushing refs to your remote repository. Now follow this:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;rm -rf .git &lt;code&gt;this removes the .git extension on your project&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;git init &lt;code&gt;to initialize a new repo&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;git remote add origin "repo-url"&lt;/li&gt;
&lt;li&gt;git add .&lt;/li&gt;
&lt;li&gt;git commit -m "commit-message"&lt;/li&gt;
&lt;li&gt;git push -f origin main &lt;code&gt;this is necessary to be able to push your files on to your git repo&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;git pull origin main &lt;code&gt;to get the updated version of your repo to avoid future errors in pushing refs to repo.&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;npx = node package execute&lt;br&gt;
npm = node package manager&lt;br&gt;
rm = remove&lt;br&gt;
-f = force&lt;br&gt;
init = initialize&lt;br&gt;
-m = message&lt;br&gt;
-g = global&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank You for going through this article&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HAPPY LEARNING&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Kindly reach out to me on &lt;a href="//https//:linkedin.com/in/josh-boat"&gt;LinkedIn&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>node</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Why Most CSS Methodologies Don't Work At Scale</title>
      <author>Daine Mawer</author>
      <pubDate>Tue, 11 May 2021 04:12:09 +0000</pubDate>
      <link>https://dev.to/dainemawer/why-most-css-methodologies-don-t-work-at-scale-303m</link>
      <guid>https://dev.to/dainemawer/why-most-css-methodologies-don-t-work-at-scale-303m</guid>
      <description>&lt;p&gt;There is a famous computer science quote:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"There are only two hard things in Computer Science: cache invalidation and naming things." ~ Phil Karlton&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;"Ensuring CSS scales" should be added to that list. Scaling CSS is an incredibly difficult achievement to unlock, and something we don't always consider when using frameworks or tools.&lt;/p&gt;

&lt;p&gt;With the introduction of technologies like CSS-in-JS, CSS Modules, and other Webpack/Node-centric solutions, CSS scalability has become less of a headache. But what if your product or website is not built in React or Vue? What if you're still using precompiled technologies like SCSS or PostCSS in environments like WordPress, Laravel, or custom-built solutions?&lt;/p&gt;

&lt;p&gt;As your project grows, you need to start thinking about scaling CSS and how to go about doing that. Most engineers think that they can solve scalability when their project is already quite large, but the truth is that a good scalability strategy is well thought out from the beginning.&lt;/p&gt;

&lt;p&gt;As I'm sure most of you are already aware, CSS is not a particularly dynamic language, if you're not careful it can lead to bleeding CSS styles, specificity issues, and hundreds of lines of unused CSS declarations.&lt;/p&gt;

&lt;p&gt;As our websites become more complex, scalability moves to the forefront of performance and code management. If you're new to Frontend development in general, you may not be aware of how scalability affects applications, so let's define that:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Scalability is the property of a system to handle a growing amount of work by adding resources to the system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Okay, that's pretty "computer-sciency".&lt;br&gt;
Let's tone that down a bit:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To scale...means that we structure code in a way that will allow us to grow our application from a good foundation. As our application gets bigger, it doesn't necessarily become more complex, it just retains its best practices as it grows.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is way more difficult than it sounds.&lt;/p&gt;

&lt;p&gt;When speaking to my peers, one statement is always true:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"We start out with good intentions, and almost overnight it feels like the code base becomes out of control and hard to manage" &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To mitigate this, a handful of smart individuals have attempted to reign in the somewhat untameable nature of production-ready CSS by writing/conceptualizing about CSS "methodologies". &lt;/p&gt;

&lt;p&gt;You can think of methodologies as a set of conventions that you follow that ensures consistency.Here are some of the most well-known methodologies:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-bem-block-element-modifier"&gt;
  &lt;/a&gt;
  1. BEM: Block Element Modifier
&lt;/h4&gt;

&lt;p&gt;&lt;a href="http://getbem.com/"&gt;http://getbem.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;...is a methodology that helps you to create reusable components and code sharing in front-end development.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-rscss-reasonable-system-for-css-stylesheet-structure"&gt;
  &lt;/a&gt;
  2. RSCSS: Reasonable System for CSS Stylesheet Structure.
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://rscss.io/"&gt;https://rscss.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;...is not a framework. It's simply a set of ideas to guide your process of building maintainable CSS for any modern website or application.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-smacss-scalable-and-modular-architecture-for-css"&gt;
  &lt;/a&gt;
  3. SMACSS: Scalable and Modular Architecture for CSS
&lt;/h4&gt;

&lt;p&gt;&lt;a href="http://smacss.com/"&gt;http://smacss.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;...is a way to examine your design process and as a way to fit those rigid frameworks into a flexible thought process.&lt;/p&gt;

&lt;p&gt;All of these methodologies have their pros and con's and I will not attempt to try and compare them. The most important reasoning behind these methodologies is that they standardize CSS in a consistent way. However, all of these methodologies have one crucial ingredient that no matter how much they prescribe, they can't seem to get right.&lt;/p&gt;

&lt;p&gt;Regardless of the methodology, CSS scalability relies crucially on an engineer's understanding and in-depth knowledge of how CSS works. Often foundational principles like Importance and Specificity are overlooked or easily remedied by poor override conventions or the cascading nature of CSS is not fully conceptualized. &lt;/p&gt;

&lt;p&gt;In addition to that, here are a couple of reasons why CSS, and any chosen methodology doesn't scale well:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-multiple-engineers-with-varying-experience"&gt;
  &lt;/a&gt;
  1. Multiple engineers with varying experience.
&lt;/h3&gt;

&lt;p&gt;Considering most projects have a variety of experience levels, from junior to lead, CSS methodologies are often interpreted with the slightest of nuances.&lt;/p&gt;

&lt;p&gt;This can cause a fair amount of misinterpretation in the codebase which leads to components being written slightly differently or incorrectly when scaled. This causes headaches with specificity, importance, and overall code conventions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-often-theres-a-lack-of-an-html-methodology"&gt;
  &lt;/a&gt;
  2. Often there's a lack of an HTML methodology.
&lt;/h3&gt;

&lt;p&gt;CSS Methodologies are far too often looked at without their encompassing HTML foundation. HTML components can be built in a number of ways, depending on the engineer and their experience level. &lt;/p&gt;

&lt;p&gt;Some engineers use classes to style, others use attribute selectors to handle state and some do none of the above. This makes styling HTML components in a consistent way a problem before we even begin thinking about scaling CSS. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-misinterpretation-of-rules"&gt;
  &lt;/a&gt;
  3. Misinterpretation of rules
&lt;/h3&gt;

&lt;p&gt;One of the biggest culprits in CSS methodologies is the misinterpretation of concepts. I've seen this happen often, especially in code reviews where engineers haven't quite grasped the core of the methodology. This leads to malformed class names, or poor CSS structure, bleeding styles, and scope creep. &lt;/p&gt;

&lt;p&gt;A methodology is like a well-oiled machine and thus each component needs to behave in an expected and specific way in order to do its job in a consistent way.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-enlightenment"&gt;
  &lt;/a&gt;
  4. Enlightenment
&lt;/h3&gt;

&lt;p&gt;At some point, in every large project, engineers reach a point where they look at their code and just want to scrap the entire codebase and start again. &lt;/p&gt;

&lt;p&gt;As you become intimate with all the working parts of your website and see the unexpected side-effects of minor CSS declarations causing problems in unrelated components, you actually start to get some clarity. I find this to be the most frustrating thing ever. &lt;/p&gt;

&lt;p&gt;The reason being is that you begin to see your CSS in a new light. You see where you went wrong, or what you didn't account for and you more than likely could rebuild a better product with less and more "to-the-point" CSS with better hindsight. &lt;/p&gt;

&lt;p&gt;In fact, at this point, you begin questioning the need for a CSS methodology in its entirety.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This article was not written to dissuade you from using a CSS Methodology. In fact, I think it can be incredibly useful (if done correctly). &lt;/p&gt;

&lt;p&gt;That being said, before starting a project make sure you educate your engineering team on the ins and outs of the methodology you choose to run with. If the entire engineering team is on board you will see the benefits of scale and not the pitfalls.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Introduction to Serverless with AWS</title>
      <author>Adit Modi</author>
      <pubDate>Tue, 11 May 2021 03:39:51 +0000</pubDate>
      <link>https://dev.to/aws-builders/introduction-to-serverless-with-aws-33o1</link>
      <guid>https://dev.to/aws-builders/introduction-to-serverless-with-aws-33o1</guid>
      <description>&lt;p&gt;&lt;strong&gt;The serverless computing model&lt;/strong&gt; allows you to build and run applications and services without having to worry about infrastructure or servers. It eliminates infrastructure management tasks such as server provisioning, patching, operating system maintenance, scaling, and capacity provisioning. &lt;/p&gt;

&lt;p&gt;In this blog article, I would like to give you an overview of some fully-managed serverless services provided by Amazon Web Services (AWS), which can be used to create fully cloud-native serverless applications.&lt;/p&gt;

&lt;p&gt;Building native serverless applications means that developers can focus on the &lt;strong&gt;core product&lt;/strong&gt; and on &lt;strong&gt;innovating applications and solutions&lt;/strong&gt;, rather than spending a lot of time on setting up and maintaining infrastructure. This results in many benefits such as faster development, simplified operational management, scaling, and reduction in operational costs. Take a look at my last blogpost to get an impression on serverless architectures and how they impact the development process and the project business.&lt;/p&gt;

&lt;p&gt;But how can we actually implement these serverless applications? What tools and services should I use to create a highly-available, scalable and performant backend solution? How can I benefit from managed infrastructure, variable operational costs that scale with my business? How can I increase speed and agility in my development process?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ac4qhpW2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hvpqein4enwo53ft7geo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ac4qhpW2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hvpqein4enwo53ft7geo.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;My Background: I am Cloud , DevOps &amp;amp; Big Data Enthusiast | 4x AWS Certified | 3x OCI Certified | 3x Azure Certified .&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;The Introduction to AWS is a Series containing different articles that provide a basic introduction to different aws topics/categories. Each article covers the detailed guide on how to work with particular topic/category . This series aims at providing "A Getting Started Guide on Different aws topics / categories ."&lt;/p&gt;

&lt;p&gt;AWS provides a wide range of different cloud services (&amp;gt;165) which cover all aspects and requirements of backend solutions, like compute resources, different storage types, purpose-built databases, security services for authentication and encryption, big data stream processing, machine learning, messaging and monitoring services, and many more.&lt;/p&gt;

&lt;p&gt;These services are tightly integrated with each other and provide a convenient way to build your application in a flexible and powerful way. This blogpost will give you an overview of the most important serverless services of AWS. In the second part i will sketch some scenario use-cases demonstrating how you can use them to create serverless applications.&lt;/p&gt;

&lt;p&gt;An overview of serverless AWS services&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4QbpVuVQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c203zd5t2tg8t8hxhs4w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4QbpVuVQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c203zd5t2tg8t8hxhs4w.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Compute provides you with the execution environment for your application code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;With AWS Lambda&lt;/strong&gt;, you can execute code as a function triggered by various event sources like, e.g., HTTP requests on AWS API Gateway, file updates on S3, or metric alarms in AWS Cloudwatch. Lambda is the FaaS solution from AWS where you can run code for any type of application or backend service. It runs the code on a fully-managed, high-available infrastructure and performs all administration tasks of the compute resources, including server and system maintenance, capacity provisioning and automatic scaling, code monitoring and logging. You pay only for the compute time your application actually consumes. Lambda can be combined with many other AWS services and is used in many scenarios, like authorizing a HTTP request by validating a JSON web token, real-time filtering and transforming streaming data, processing data in S3, managing database handling, and many more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--824CvcGM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hwceran5uneaz0pumash.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--824CvcGM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hwceran5uneaz0pumash.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;With AWS Fargate&lt;/strong&gt;, you can run docker containers without any management of servers or clusters. It is a container orchestration solution that makes it easy to deploy, manage, and scale containerized applications. You don’t need to define EC2 instance types, manage cluster scheduling, optimize server utilization, or define cloud watch metrics to scale the instances. Fargate manages the infrastructure needed to run your containers in a highly-available manner. To launch your application, you need to package your containers, specify CPU and memory requirements, and define networking and IAM policies.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h9KKhFbw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0e5lbkv748iy4o0p62g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h9KKhFbw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0e5lbkv748iy4o0p62g.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#messaging"&gt;
  &lt;/a&gt;
  Messaging
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;AWS Simple Notification Service (SNS)&lt;/strong&gt; is a fully-managed pub/sub messaging service that enables you to decouple microservices, distributed systems, and serverless applications.&lt;/p&gt;

&lt;p&gt;You can send notifications between various services, applications, devices and platforms over multiple transport protocols. SNS allows you to publish messages from one application to a large number of subscribers for parallel processing. Besides push notifications to mobile devices, you can deliver notifications by email, SMS, SQS, Lambda, or to any HTTP endpoint.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon Simple Queue Service (SQS)&lt;/strong&gt; is a fully-managed distributed message queueing service that enables you to decouple and scale microservice distributed systems and serverless applications. You can send, receive and cache messages between software components to resolve issues introduced by the producer-consumer problem. SQS offers two types of message queues: Standard queues have maximum throughput, best-effort ordering, and at-least-once delivery. Additionally, you can use FIFO queues, which guarantee exactly-once message delivery with strict order.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fge6sSOg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrzonqlyon7785xhgvuu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fge6sSOg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrzonqlyon7785xhgvuu.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#integration"&gt;
  &lt;/a&gt;
  Integration
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Amazon API Gateway&lt;/strong&gt; is a fully-managed service for creating, publishing, maintaining, monitoring, and securing REST and WebSocket APIs at any scale. It handles the processing of up to hundreds of thousands concurrent API calls, including traffic management, authorization, access control, and API version management. You can create your API within the management console UI and access data, business logic, or functionality from your backend services, such as workloads running on EC2 or code running in a Lambda function. You pay only for the API calls you receive and for the amount of outgoing data, transmitted by AWS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZpKApp3---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kycb7vn7qec37ztljgs9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZpKApp3---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kycb7vn7qec37ztljgs9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;With AWS Step Functions&lt;/strong&gt;, you can orchestrate the components of your application as a series of steps to create complex serverless workflows using Lambda functions. The workflow is modeled as a state machine diagram, where each state represents a component of the application. Using a graphical viewer, you can visualize these components and check the execution flow in real time. All steps are automatically triggered, tracked and retried in case of errors, so that the application executes in order and as expected.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EkiQxaqf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sn035wgssqedzkoc0ks5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EkiQxaqf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sn035wgssqedzkoc0ks5.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Amazon Cognito&lt;/strong&gt; is a fully-managed, scalable, and cost-effective sign-up/sign-in service, which provides user authentication, authorization, and management for web and mobile applications. The two main components of Amazon Cognito are user pools and identity pools. A user pool is a user directory, which provides sign-up and sign-in services, based on its own or an external identity provider that implements the SAML, OAuth2, or OpenID Connect protocol, like Facebook or Google. You can use a customizable web UI for the user sign-in, which can be integrated in your existing webpage. With an identity pool, your authorized user or anonymous guest can exchange user pool tokens for temporary AWS credentials to access AWS resources. Based on IAM role policies, you can grant your users or groups fine-grained access to your resources or AWS services. Cognito has advanced security features, such as e-mail, phone verification, and multi-factor authentication.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QLPcg5Uq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5quvwkwv76exxx1vwee0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QLPcg5Uq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5quvwkwv76exxx1vwee0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Key Management Service (KMS)&lt;/strong&gt; is a fully-managed service which allows you to create and manage your security keys and control the use of encryption across a wide range of AWS services and in your applications. KMS is integrated with many AWS services to simplify encryption handling across your application. It enables developers to easily add encryption functionality to the application, either directly through the service APIs or with the AWS Encryption SDK. Customer master keys (CMK) are used to control access to data encryption keys that encrypt and decrypt the data. You can provide and manage your own CMK including your custom cryptographic material or using a CMK provided and managed by AWS. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Uh7rpIh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9b51zh3cxweazt7damji.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Uh7rpIh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9b51zh3cxweazt7damji.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;With AWS CloudHSM&lt;/strong&gt; you can additionally use a cloud-based hardware security module (HSM) that enables you to easily generate and use your own encryption keys on the AWS Cloud. The encryption keys that you generate and use with CloudHSM are accessible only by the HSM users that you specify. AWS has no visibility or access to your encryption keys.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HfSfJpje--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/or6fk33k9vrvor7swsz1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HfSfJpje--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/or6fk33k9vrvor7swsz1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#monitoring"&gt;
  &lt;/a&gt;
  Monitoring
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;AWS CloudWatch&lt;/strong&gt; is a monitoring and management service for AWS resources and custom applications. CloudWatch enables you to collect metrics and logs from all your AWS resources, applications, and services that run on AWS and on-premises servers. It provides real-time monitoring and visibility into resource utilization of your EC2 instances, your applications’ performance, and operational health. CloudWatch is natively integrated with many AWS services that can publish detailed metrics with up to 1 second granularity. Additionally, you can define alarms based on CloudWatch metrics and perform actions based on its value. You can, e.g., set a threshold on a key utilization metrics and trigger an automated auto scaling action to add or remove EC2 instances.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--650FZa1H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ov61p7hwbr6z4umzv890.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--650FZa1H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ov61p7hwbr6z4umzv890.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Quicksight&lt;/strong&gt; is a fully-managed business intelligence service, which allows you to create visualisations of data and to design interactive dashboards for application analysis. These dashboards can be accessed from any mobile device or browser. You can embed them into your applications, portals or websites, providing you with powerful self-service analytics. QuickSight allows you to connect to and import data from a wide variety of cloud or on-premises data sources and scales to tens of thousands of users without any infrastructure to manage.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cEK4lLOG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mrxyl7k798r4qiatcsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cEK4lLOG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mrxyl7k798r4qiatcsk.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#database"&gt;
  &lt;/a&gt;
  Database
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Amazon DynamoDB&lt;/strong&gt; is a NoSQL database service which supports key-value pairs and document data structures. As it is a fully-managed service, you don’t have to worry about hardware provisioning, setup and configuration, replication, backups, software patching, or cluster scaling. It provides features like high availability and durability, automatic and infinite read-write I/O scaling, on demand backup with point-in-time recovery, encryption at rest, and single-digit millisecond latency. With its pay-per-use pricing model and integration with many other AWS services, DynamoDB is a great database service for many serverless application on AWS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lS8rC9eX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yi1gg5sn8a4j9l6ejmqz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lS8rC9eX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yi1gg5sn8a4j9l6ejmqz.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon Aurora&lt;/strong&gt; is a fully-managed relational database engine that’s compatible with MySQL and PostgreSQL. It automates and standardizes database clustering and replication to remove time-consuming administration tasks, like hardware provisioning, storage autoscaling, database setup, patching, and backups. Aurora is also available as an on-demand configuration, called Aurora Serverless, with autoscaling for compute capacity, which is a cost-effective way to support infrequent and unpredictable workloads.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wPGKvWkW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/racs5myh1gzb9n0b1w00.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wPGKvWkW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/racs5myh1gzb9n0b1w00.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#analytics"&gt;
  &lt;/a&gt;
  Analytics
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Amazon Kinesis&lt;/strong&gt; is a is fully-managed and highly scalable streaming service to collect, process, and analyze real-time streaming data, such as website clickstreams, database event streams, financial transactions, social media feeds, application logs, IoT telemetry data, or location-tracking events. It enables you to process and analyze data as it arrives and to respond instantly, so that you can create real-time applications. Amazon Kinesis consists of 3 services, which can be used to process the streaming data. &lt;strong&gt;With Amazon Kinesis Data Streams&lt;/strong&gt;, you can ingest and store large data streams in real-time without managing the infrastructure, storage, networking, and configuration. Applications can consume data from a stream, so that multiple actions, like data analysis, archiving, or processing, can take place concurrently and independently. &lt;strong&gt;Amazon Kinesis Data Firehose&lt;/strong&gt; can be used to load streaming data into data lakes (Amazon Redshift), data stores (S3), and analytics tools (Amazon Elasticsearch). It allows you to to capture, transform, and load (ETL) streaming data in real-time from many data sources simultaneously and send it automatically to the specified destination. &lt;strong&gt;With Amazon Kinesis Data Analytics&lt;/strong&gt; you can filter, aggregate, and transform streaming data for advanced analytics. You can run standard SQL queries against streaming data to perform time series analytics, provide data to real-time dashboards, and extract metrics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ilsOi-35--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrb43or6xwscgoyfvq7s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ilsOi-35--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrb43or6xwscgoyfvq7s.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon Athena&lt;/strong&gt; is a query service which provides a standard SQL language to analyze large-scale datasets in AWS Simple Storage Service (S3). There is no infrastructure to manage, and you pay only for the executed queries. Athena scales automatically by executing queries in parallel. This makes it simple to do ad-hoc analysis or more complex analysis that contain large joins.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---6QYJLXl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/najg3g9bk3ypns8dxl1e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---6QYJLXl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/najg3g9bk3ypns8dxl1e.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;AWS provides many services which can be used as building blocks to create cloud infrastructures for virtually any workload. Solution architects and developers have a huge range of tools and services to design and implement backend applications in a very effective way with great flexibility. &lt;/p&gt;

&lt;p&gt;Most services provided by AWS are fully-managed and can be used without time-consuming administrative tasks, infrastructure provisioning or server maintenance. Developers can focus on creating their core applications, which increases development speed and business growth. Important aspects like high availability, automatic scalability, security, and durability are built in. &lt;/p&gt;

&lt;p&gt;This is a huge advantage compared to using open-source services hosted on manually provisioned server infrastructures. With the pay-as-you-go pricing model you have no upfront costs or long-term contracts and pay only for the consumed resources, which makes serverless architectures very cost effective.&lt;/p&gt;

&lt;p&gt;Hope this guide helps you with the Introduction to Serverless with AWS, feel free to connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn.&lt;/a&gt;&lt;br&gt;
You can view my badges &lt;a href="https://www.youracclaim.com/users/adit-modi/badges"&gt;here.&lt;/a&gt;&lt;br&gt;
If you are interested in learning more about AWS then follow me on &lt;a href="https://github.com/AditModi"&gt;github.&lt;/a&gt;&lt;br&gt;
If you liked this content then do clap and share it . Thank You .&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>serverless</category>
    </item>
    <item>
      <title>What is debunkism.com ?</title>
      <author>Siddharth</author>
      <pubDate>Tue, 11 May 2021 03:28:44 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/what-is-debunkism-com-4kc8</link>
      <guid>https://dev.to/siddharthshyniben/what-is-debunkism-com-4kc8</guid>
      <description>&lt;p&gt;I recently came across this &lt;a href="//debunkism.com"&gt;debunkism.com&lt;/a&gt;. It's actually a clone of DEV Community. Everything is the same. It copies all our Blog posts, accounts etc.&lt;/p&gt;

&lt;p&gt;What is it? &lt;/p&gt;

</description>
      <category>help</category>
      <category>discuss</category>
    </item>
    <item>
      <title>FaaS vs Containerization model</title>
      <author>Piyush Mattoo</author>
      <pubDate>Tue, 11 May 2021 03:02:43 +0000</pubDate>
      <link>https://dev.to/gpmattoo/serverless-vs-containerization-model-56i3</link>
      <guid>https://dev.to/gpmattoo/serverless-vs-containerization-model-56i3</guid>
      <description>&lt;p&gt;Fargate gives us best of both the worlds (serverless as well as container) and it won’t restrict us as Lambda might. Lambda works well when run in asynchronous manner (event driven) say object was uploaded to S3 and some Lambda got triggered as a result. API Gateway integrated with Lambda for request/response model especially for runtime like dot-net (for cold-start) can be problematic for synchronous traffic like web APIs in case milliseconds matter.&lt;br&gt;
Lambda is not multi-threaded so say if Lambda service receives 10 requests then Lambda service will launch 10 Lambdas running our code (ASP.NET  entry point), some of those instances might not be warmed up or ready. That’s where (web traffic, request/response synchronous) Fargate shines as its serverless and it takes those 10 requests and run them on the same container so there is no overhead of launching the lambda container impacting performance.&lt;/p&gt;

&lt;p&gt;We do need to keep in mind that there is a learning curve for containers, perhaps ECS is less of a learning curve than EKS but operationally we need a team which knows Kubernetes well. When we run Kubernetes in EKS we are still talking about authentication with IAM and AWS's ELB, VPC and perhaps we integrate with S3, DynamoDB and at that point we are already committed to AWS. Hybrid cloud is good if we are running different applications on different cloud providers but not the same application such that at any given moment we can pick it up and drop it in Azure, Openshift OnPrem, GCP unless we build the application to the lowest common denominator of all the cloud providers and don’t take any advantage of any of the good things cloud providers have to provide. In other words if we just use block storage, http APIs and we ran our own databases on VMs we are fine but then we are not taking advantage of the cloud native features that any cloud provider might provide you. That’s typically not the case.&lt;br&gt;
Other consideration is Kubernetes operates in quarterly fashion for releases, only supports n-2 i.e. two revisions behind current version. For larger companies that doesn’t adapt to changes very well, we need to keep this in mind as there will be breaking changes as Kubernetes gains more maturity.&lt;/p&gt;

</description>
      <category>serverless</category>
      <category>aws</category>
      <category>containers</category>
    </item>
    <item>
      <title>10 Must read Books for Coder and Non Coders (personal reviews)</title>
      <author>Dev Write Ups</author>
      <pubDate>Tue, 11 May 2021 02:49:34 +0000</pubDate>
      <link>https://dev.to/devwriteups/10-must-read-books-for-coder-and-non-coders-personal-reviews-2k84</link>
      <guid>https://dev.to/devwriteups/10-must-read-books-for-coder-and-non-coders-personal-reviews-2k84</guid>
      <description>&lt;p&gt;A book can characterize an individual's inclination and knowledge. On the off chance that you are a coder, you ought to be additionally a decent peruser on the grounds that it builds up the brain and the psyche is your weapon.  You need to prepare it day by day. Prior to discovering any answer for an issue Reading and understanding the issues is the most significant in the event that you are a coder or any difficult solver. Without great perusing and appreciation abilities, an individual sets aside more effort to comprehend the issues prior to tackling it. &lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#for-noncoder"&gt;
  &lt;/a&gt;
  For Non-Coder
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#cryptonomicon"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/3nXV2oa"&gt;Cryptonomicon &lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.in/Cryptonomicon-Neal-Stephenson/dp/0060512806?dchild=1&amp;amp;keywords=Cryptonomicon&amp;amp;qid=1620536298&amp;amp;sr=8-1&amp;amp;linkCode=li2&amp;amp;tag=rahulism0d-21&amp;amp;linkId=a87a6f9327ebfee8a980b22fca0abaef&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-in.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=0060512806&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=IN&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=rahulism0d-21"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m2k9qPFP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D0060512806" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m2k9qPFP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D0060512806" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The book is somewhat delayed toward the start, and on the off chance that you are not used to Neal Stepheson's composing style (This was my first) you may get somewhat confounded and irritated.But kindly read on in light of the fact that after around 50 - 60 pages, you will be enchanted!!! This book genuinely is a work of art and for all individuals who has some information around IT this is an unquestionable requirement perused. ( Not saying non-specialized people cannot appreciate it ..... however, for IT people, I trust it will be considerably more charming)&lt;/p&gt;

&lt;p&gt;Get the Book -&amp;gt; &lt;a href="https://amzn.to/3nXV2oa"&gt;Cryptonomicon &lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#atomic-habits"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/3bcFx6K"&gt; Atomic Habits&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.in/Atomic-Habits-James-Clear/dp/1847941834?dchild=1&amp;amp;keywords=Atomic+Habits&amp;amp;qid=1620536573&amp;amp;sr=8-1&amp;amp;linkCode=li2&amp;amp;tag=rahulism0d-21&amp;amp;linkId=d093d3e8f371237c67acd48f62633bcd&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-in.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=1847941834&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=IN&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=rahulism0d-21"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WL3ZEtdh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D1847941834" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WL3ZEtdh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D1847941834" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a remarkable book! I have perused such countless books as a feature of my self-awareness yet I generally find that writers wind up extolling themselves all through persistently continuing forever about their own accomplishments. Indeed you finish the book feeling siphoned up partially and feeling like you as well, can be a whiz just to end up in a similar spot seven days after the fact. &lt;/p&gt;

&lt;p&gt;This book is totally extraordinary, a straightforward, rational viable piece with fabulous takeaways which anybody can apply so effectively to find a place with their way of life. It is so orderly in it's methodology thus clear&lt;/p&gt;

&lt;p&gt;Get the Book -&amp;gt; &lt;a href="https://amzn.to/3bcFx6K"&gt; Atomic Habits&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deep-work"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/3vXnJo1"&gt;Deep Work&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.in/Deep-Work-Focused-Success-Distracted/dp/0349413681?dchild=1&amp;amp;keywords=Deep+Work&amp;amp;qid=1620541734&amp;amp;sr=8-1&amp;amp;linkCode=li2&amp;amp;tag=rahulism0d-21&amp;amp;linkId=c3b4c222da0713512143a11491bd453f&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-in.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=0349413681&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=IN&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=rahulism0d-21"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WpGYRc8a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D0349413681" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WpGYRc8a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D0349413681" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Deep work is a book for everybody albeit the writer accentuates it for information laborers. As I would like to think it is for money managers who needs to accomplish their objectives in their furious timetable, educators (resources) who needs to seek after explore notwithstanding their scholastic obligations, or a business person who needs to expand the profitability and innovativeness of the group, or simply some arbitrary person who needs to invest some quality energy with family yet can't. Books assists you with creating self-restraint. This book can best be put among books like Outliers/Mastery/Flow/Peak and so forth where significance of work and it's ramifications are clarified. Just thing is Deep work is more point by point as far as methodologies and touch less on brain science considers.&lt;/p&gt;

&lt;p&gt;Get the Book -&amp;gt; &lt;a href="https://amzn.to/3vXnJo1"&gt;Deep Work&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#eat-that-frog"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/3tw2b0a"&gt;Eat that Frog&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.in/Eat-That-Frog-Great-Procrastinating/dp/152309513X?&amp;amp;linkCode=li2&amp;amp;tag=rahulism0d-21&amp;amp;linkId=315991fb0a4eac3ff1f1412f734e877c&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-in.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=152309513X&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=IN&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=rahulism0d-21"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--458PTcBo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D152309513X" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--458PTcBo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D152309513X" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a book that I decide to peruse consistently not long prior to Eating the Frog and it's really a piece of my Miracle Morning. Every single section is very short yet mind you, the Content is incredibly acceptable. You should simply peruse the entire book once and plan your Goal and Plan of activity following the standards lying in the book and attempt to peruse atleast 1 section/rule consistently and in a matter of seconds you will be the place where you need to be.&lt;/p&gt;

&lt;p&gt;Get the Book -&amp;gt; &lt;a href="https://amzn.to/3tw2b0a"&gt;Eat that Frog&lt;/a&gt; &lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#for-coders"&gt;
  &lt;/a&gt;
  For Coders
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#the-pragmatic-programmer"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/3vUH0GK"&gt;The Pragmatic Programmer&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/Pragmatic-Programmer-Anniversary-Journey-Mastery/dp/B0833FBNHV?dchild=1&amp;amp;keywords=the+pragmatic+programmer&amp;amp;qid=1620534258&amp;amp;sr=8-1&amp;amp;linkCode=li2&amp;amp;tag=blog0bb2-20&amp;amp;linkId=899c412967a45cf928cd57d61b165383&amp;amp;language=en_US&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B0833FBNHV&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=US&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=blog0bb2-20&amp;amp;language=en_US"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1asJjTdB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-na.amazon-adsystem.com/e/ir%3Ft%3Dblog0bb2-20%26language%3Den_US%26l%3Dli2%26o%3D1%26a%3DB0833FBNHV" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1asJjTdB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-na.amazon-adsystem.com/e/ir%3Ft%3Dblog0bb2-20%26language%3Den_US%26l%3Dli2%26o%3D1%26a%3DB0833FBNHV" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This book will show not about codes, in some cases you can peruse but rather the fundamental thought is to be a superior developer and think better, break the issues, consider calculation without help from anyone else. There isn't a lot to say, see the primary version was composed 20 years prior and when you begin perusing you see the nature of the book. Its separated in certain themes inside certain subjects. You can peruse by look or follow cover as far as possible. This book doesn't have a particular language or a 'formula' to follow, really it will open your brain to think better.&lt;/p&gt;

&lt;p&gt;Get the Book -&amp;gt; &lt;a href="https://amzn.to/3vUH0GK"&gt;The Pragmatic Programmer&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-simplicity"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/3h7DDbc"&gt;Code Simplicity&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.in/Code-Simplicity-Max-Kanat-alexander/dp/1449313892?_encoding=UTF8&amp;amp;qid=1620535681&amp;amp;sr=1-1&amp;amp;linkCode=li2&amp;amp;tag=rahulism0d-21&amp;amp;linkId=0423cfd1dac6b395f6a04bbf8d863989&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-in.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=1449313892&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=IN&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=rahulism0d-21"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4piNqVx---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D1449313892" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4piNqVx---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D1449313892" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The book is only 88 pages, yet experiences are helpful for any computer programmer. &lt;/p&gt;

&lt;p&gt;At whatever point I go over strong explanations in the book, I would sit and think for 2 minutes to associate with my programming experience. More often than not I had the option to think of substantial model. &lt;/p&gt;

&lt;p&gt;This book is energetically suggested for developers who had invested huge energy perusing different software engineers code. On the off chance that you are an accomplished developer you can think about the focuses in the books as to approve your present convictions. I will in general concur on the entirety of the focuses referenced in the book and associate with open source projects in certain and negative sense. &lt;/p&gt;

&lt;p&gt;Not many of my top picks: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Everybody who composes programming is fashioner. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Design isn't majority rules system. Choices ought to be made by people. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There is something about future you don't have the foggiest idea. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be just pretty much as conventional as you most likely are aware you should be at the present time.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Get the Book -&amp;gt;  &lt;a href="https://amzn.to/3h7DDbc"&gt;Code Simplicity&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coders-the-making-of-a-new-tribe-and-the-remaking-of-the-world"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/2RB3wpd"&gt;Coders: The Making of a New Tribe and the Remaking of the World&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/Coders-Making-Tribe-Remaking-World/dp/0735220581?dchild=1&amp;amp;keywords=Coders&amp;amp;qid=1620534616&amp;amp;sr=8-2&amp;amp;linkCode=li2&amp;amp;tag=blog0bb2-20&amp;amp;linkId=0ea80afbb857e3d5e5af78149e76100b&amp;amp;language=en_US&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=0735220581&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=US&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=blog0bb2-20&amp;amp;language=en_US"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wclI_B7Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-na.amazon-adsystem.com/e/ir%3Ft%3Dblog0bb2-20%26language%3Den_US%26l%3Dli2%26o%3D1%26a%3D0735220581" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wclI_B7Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-na.amazon-adsystem.com/e/ir%3Ft%3Dblog0bb2-20%26language%3Den_US%26l%3Dli2%26o%3D1%26a%3D0735220581" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I get so energized when I track down an extraordinary book. I completed this book in seven days: intriguing and elegantly composed. It's true to life however it peruses practically like a novel, making it simple and amusing to peruse. I don't anticipate turning into a coder yet this has assisted me with seeing how pertinent software engineers are in the functioning scene. I altogether delighted in it; you will not find the mysteries of the universe or be motivated to set up a business, however it's a light and agreeable read. Suggested!&lt;/p&gt;

&lt;p&gt;Get the Book -&amp;gt;  &lt;a href="https://amzn.to/2RB3wpd"&gt;Coders&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coders-at-work-reflections-on-the-craft-of-programming-paperback"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/3trkR13"&gt;Coders at Work: Reflections on the Craft of Programming Paperback&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.in/Coders-Work-Reflections-Craft-Programming/dp/1430219483?dchild=1&amp;amp;keywords=Coders+at+work&amp;amp;qid=1620535805&amp;amp;sr=8-2&amp;amp;linkCode=li2&amp;amp;tag=rahulism0d-21&amp;amp;linkId=17300407625f1e52ad7037e4b9ad110b&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-in.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=1430219483&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=IN&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=rahulism0d-21"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1Zhm3p2j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D1430219483" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Zhm3p2j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D1430219483" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This resembles a set of experiences course book of the processing age. It's essentially an assortment of meetings with eminent developers, done in a characteristic and decipherable style. In case you're a geek, or you're in the innovation business in any capacity, at that point you should peruse it to get a feeling of where "it" all came from, and particularly to hear from a portion of individuals who got it going. &lt;/p&gt;

&lt;p&gt;The difference between the various meetings is intriguing by its own doing - you can go starting with one person then onto the next to get a totally extraordinary or in any event, restricting perspective, so the final product is a wide viewpoint.&lt;/p&gt;

&lt;p&gt;Get the Book -&amp;gt;  &lt;a href="https://amzn.to/3trkR13"&gt;Coders at Work: Reflections on the Craft of Programming Paperback&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#design-patterns-elements-of-reusable-objectoriented-software-1st-edition"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/3h9YQRF"&gt;Design Patterns: Elements of Reusable Object-Oriented Software 1st Edition&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.in/Design-Patterns-Object-Oriented-Addison-Wesley-Professional-ebook/dp/B000SEIBB8?&amp;amp;linkCode=li3&amp;amp;tag=rahulism0d-21&amp;amp;linkId=3a3bfccf54b7027f60ee13f15bf2fc94&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-in.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B000SEIBB8&amp;amp;Format=_SL250_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=IN&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=rahulism0d-21"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m8IPlSfg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli3%26o%3D31%26a%3DB000SEIBB8" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m8IPlSfg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli3%26o%3D31%26a%3DB000SEIBB8" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a software engineer or whoever working in the software development may it be a fresher or an experienced developer, this book is a must read. But sometimes it lacks more practical examples and the the example gives does not fully explains concept it is describing.  Great patterns for programming but rubbish patterns for knitting. &lt;/p&gt;

&lt;p&gt;Get the Book -&amp;gt;  &lt;a href="https://amzn.to/3h9YQRF"&gt;Design Patterns: Elements of Reusable Object-Oriented Software 1st Edition&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dont-make-me-think-revisited-a-common-sense-approach-to-web-usability"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/3be8VJI"&gt;Don't Make Me Think, Revisited: A Common Sense Approach to Web Usability&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.in/Dont-Make-Think-Revisited-Usability-ebook/dp/B00HJUBRPG?dchild=1&amp;amp;keywords=web+usability&amp;amp;qid=1620535971&amp;amp;sr=8-3&amp;amp;linkCode=li2&amp;amp;tag=rahulism0d-21&amp;amp;linkId=91efaeed3a55092d6f851daa3ec3beee&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-in.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B00HJUBRPG&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=IN&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=rahulism0d-21"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mP_71DXq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3DB00HJUBRPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mP_71DXq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3DB00HJUBRPG" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The book for the most part centers around broad rule about how to make a site pages so a client doesn't need to think a lot and can see quick from the plan and position of the areas. &lt;/p&gt;

&lt;p&gt;It likewise disclose how to plan various areas of the page so client can undoubtedly distinguish what he/she is searching for and how to return from here. How a landing page should look a like. What a landing page ought to contain. Book is truly pleasant for a web designer also web deigner.&lt;/p&gt;

&lt;p&gt;Get the Book -&amp;gt; &lt;a href="https://amzn.to/3be8VJI"&gt;Don't Make Me Think, Revisited: A Common Sense Approach to Web Usability&lt;/a&gt; &lt;/p&gt;




&lt;p&gt;Thank you for reading. Also you can Subscribe to our  &lt;a href="https://www.devintro.com"&gt;newsletter&lt;/a&gt; , we send it occasionally with amazing news, resources and many thing.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>books</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How Does JS code run - Execution context  and Call stack</title>
      <author>prashanth</author>
      <pubDate>Tue, 11 May 2021 02:46:24 +0000</pubDate>
      <link>https://dev.to/prashan81992916/how-does-js-code-run-execution-context-and-call-stack-3a7</link>
      <guid>https://dev.to/prashan81992916/how-does-js-code-run-execution-context-and-call-stack-3a7</guid>
      <description>&lt;p&gt;Do you know how javascript code runs in the javascript engine? &lt;/p&gt;

&lt;p&gt;If not, then I hope this post will be useful for understanding execution context and how the order of execution context is maintained by call stack.This fundamental concept also pays way to have the foundation to comprehend hoisting, scopes, scope chains, and closures&lt;/p&gt;

&lt;p&gt;So lets start,&lt;/p&gt;

&lt;p&gt;Before diving deep into the concept, we must have the basic understanding that &lt;code&gt;Javascript is synchronous and single threaded&lt;/code&gt;,&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1.Synchrounous - control waits until the particular code 
                 is executed and only then it moves to the 
                 next line.
2.Single threaded - only one call stack(explained below)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;(ie) During memory creation phase and code execution phase in the Execution context, js code is executed line by line.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Execution context&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;From here onwards I will be addressing execution context as EC&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Whenever we run a javascript code, a global EC is created, which comprises mainly of two phases,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Memory creation phase&lt;/li&gt;
&lt;li&gt;Code execution or thread of execution phase&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let me explain this with a simple example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Square&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Square&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As I mentioned before when we run this code, a global EC is created and the memory creation phase starts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ui49CrOn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yzxhzch70awih1zbamdg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ui49CrOn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yzxhzch70awih1zbamdg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fl0SW7XU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/atd7r5yx8cgme6epngoe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fl0SW7XU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/atd7r5yx8cgme6epngoe.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Memory creation phase&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This phase is mainly about allocating memory for the variables and functions declared in the code.The js engine looks for the variables and functions from the first line synchronously.  It is important to note that during this phase,&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  1. For variables, a special keyword - undefined is 
     initialized by default
  2. For functions, the function code is copied as it is.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;So in the above example variable &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;isColorPrinted&lt;/code&gt; is initialized with keyword &lt;code&gt;undefined&lt;/code&gt; and for the &lt;code&gt;Square&lt;/code&gt; function, &lt;code&gt;function code&lt;/code&gt; is copied as it is.&lt;/p&gt;

&lt;p&gt;It's very important to understand this, because it will be easy to understand why variable hoisting happens in js, which I will be covering in the another post😉.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Code execution phase&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After completing the memory creation phase, the code gets executed right from the first line synchronously. So in the above example, the assignment &lt;code&gt;a = 5&lt;/code&gt; replaces &lt;code&gt;undefined&lt;/code&gt; for &lt;code&gt;a&lt;/code&gt; in memory.When the control reaches the function invocation &lt;code&gt;Square(a)&lt;/code&gt; a new EC is created within the global EC. Again for the new EC it has to repeat two phases. After memory creation and code execution phase are over, the value returned will be assigned to&lt;code&gt;isColorPrinted&lt;/code&gt;in the memory part of global EC and newly created EC will be permantly deleted,If anymore function invocation happens then a new EC is created.For nested function,an EC will be created within the parent EC.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z92ar_Ud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ys7b6wrh9cpwv32rsps9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z92ar_Ud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ys7b6wrh9cpwv32rsps9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But for deeply nested functions and other complex scenarios it becomes really tough to manage the execution contexts, so here comes to our aid - &lt;code&gt;call Stack&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Call Stack&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Call stack is responsible for managing the order of exection of EC's. When the js code runs, &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    1. Initially:
       the global EC is pushed into the stack.

    2. After a function invocation:
       The newly created EC is pushed on top of the global 
       EC,

    3. When function execution is over: 
       It pops the EC out of the stack.

    4  When the entire program is executed: 
       It pops the global EC out of the stack.

     For nested functions:
       The child EC is pushed on top of the parent EC.

     For infinite loop: 
       Call stack crashes as it is completely filled with 
       EC's and max memory is reached
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;I hope this was insightful! Let me know in the comments .&lt;/p&gt;

&lt;p&gt;Don't forget to follow me!!! I will be explaining hoisting, scope, and closures in the upcoming posts using the stuff you learn here(execution context).&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>executioncontext</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
