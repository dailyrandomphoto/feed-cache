<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>CI / CD using .gitlab-ci</title>
      <author>Santhosh Balasa</author>
      <pubDate>Mon, 31 May 2021 03:38:33 +0000</pubDate>
      <link>https://dev.to/sbalasa/ci-cd-using-gitlab-ci-4b3m</link>
      <guid>https://dev.to/sbalasa/ci-cd-using-gitlab-ci-4b3m</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;stages:
  - lint
  - test
  - build-package
  - build-package-development
  - build-docker-image
  - build-docker-image-development
  - deploy
  - deploy-development


lint:
  image: python:3.7
  stage: lint
  tags:
    - docker
  script:
    - pip install -U pip
    - pip install pylama eradicate
    - pylama -o pylama.ini -i C,901 obs3


test:
  stage: test
  image: python:3.7
  tags:
    - docker
  script:
    - pip install -U pip
    - pip install -r requirements.txt
    - pytest


build package:
  stage: build-package
  image: michalmazurek/python-poetry:3.7
  tags:
    - docker
  script:
    - pip install get-cert
    - python3 -m get_cert http://&amp;lt;pypi_server&amp;gt; &amp;gt; pypi-cert.pem
    - poetry version $CI_COMMIT_REF_NAME
    - poetry config repositories.&amp;lt;pypi_server&amp;gt; $PYPI_REPOSITORY
    - REQUESTS_CA_BUNDLE=./pypi-cert.pem poetry publish --build -r &amp;lt;repo_server&amp;gt;


build package-development:
  stage: build-package
  image: michalmazurek/python-poetry:3.7
  tags:
    - docker
  script:
    - pip install get-cert
    - python3 -m get_cert http://&amp;lt;pypi_server&amp;gt; &amp;gt; pypi-cert-dev.pem
    - poetry version 0.${CI_PIPELINE_ID}
    - poetry config repositories.&amp;lt;pypi_server&amp;gt; $PYPI_REPOSITORY
    - REQUESTS_CA_BUNDLE=./pypi-cert-dev.pem poetry publish --build -r &amp;lt;repo_server&amp;gt;
  only:
    - /^feature\/.*$/
    - develop


build docker image:
  stage: build-docker-image
  services:
    - docker
  tags:
    - shell
  script:
    - docker build --build-arg HTTP_PROXY=$HTTP_PROXY --build-arg HTTPS_PROXY=$HTTPS_PROXY --build-arg NO_PROXY=$NO_PROXY --build-arg repository_host=$PYPI_HOST --build-arg version=$CI_COMMIT_REF_NAME --build-arg repository=$PYPI_REPOSITORY_WITH_USER  --pull -t &amp;lt;repo_server&amp;gt;:8443/obs3_meta:latest -t &amp;lt;repo_server&amp;gt;:8443/obs3_meta:$CI_COMMIT_REF_NAME .
    - docker push &amp;lt;repo_server&amp;gt;t:8443/obs3_meta:$CI_COMMIT_REF_NAME
    - docker push &amp;lt;repo_server&amp;gt;:8443/obs3_meta:latest


build docker image-development:
  stage: build-docker-image
  services:
    - docker
  tags:
    - shell
  script:
    - docker build --build-arg HTTP_PROXY=$HTTP_PROXY --build-arg HTTPS_PROXY=$HTTPS_PROXY --build-arg NO_PROXY=$NO_PROXY --build-arg repository_host=$PYPI_HOST --build-arg version=0.${CI_PIPELINE_ID} --build-arg repository=$PYPI_REPOSITORY_WITH_USER  --pull -t &amp;lt;repo_server&amp;gt;:8443/obs3_meta:latest -t &amp;lt;repo_server&amp;gt;:8443/obs3_meta:0.${CI_PIPELINE_ID} .
    - docker push &amp;lt;repo_server&amp;gt;:8443/obs3_meta:0.${CI_PIPELINE_ID}
    - docker push &amp;lt;repo_server&amp;gt;:8443/obs3_meta:latest
  only:
    - /^feature\/.*$/
    - develop


 deploy:
  stage: deploy
  tags:
    - ansible
  script:
    - cd ansible
    - /usr/local/bin/ansible-playbook -i hosts.ini deploy.yml


 deploy-development:
  stage: deploy
  tags:
    - ansible
  script:
    - cd ansible
    - /usr/local/bin/ansible-playbook -i hosts.ini deploy-development.yml
  only:
    - develop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>gitlab</category>
      <category>devops</category>
    </item>
    <item>
      <title>How to Dockerize an App ?</title>
      <author>Santhosh Balasa</author>
      <pubDate>Mon, 31 May 2021 03:27:46 +0000</pubDate>
      <link>https://dev.to/sbalasa/how-to-dockerize-an-app-2hp1</link>
      <guid>https://dev.to/sbalasa/how-to-dockerize-an-app-2hp1</guid>
      <description>&lt;p&gt;-&amp;gt; Create a Dockerfile if there is an argument need to be passed to your app&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM python:3.7
ADD . /srv
WORKDIR /srv
ARG file
RUN pip install -r requirements.txt
CMD ["python", "main.py"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;-&amp;gt; Build it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker build -t app_name .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;-&amp;gt; Run it by passing its arguments&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo docker run -e file=nl-ams02a-rw1_20181105_084407.json obs3-meta
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;-&amp;gt; Sample docker-compose file to create a mysql db service&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version: '3.1'
networks:
  backend:
    driver: bridge
services:
  db:
    command: mysqld --user=root --verbose
    container_name: mysql_db
    environment:
      MYSQL_DATABASE: santee
      MYSQL_PASSWORD: santee
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: santee
    image: mysql:8.0.15
    networks:
      backend: null
    ports:
    - 3306:3306/tcp
    volumes:
    - ./mysql_dump/santee.sql:/docker-entrypoint-initdb.d/santee.sql:rw
volumes:
  container-volume: {}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;-&amp;gt; Assigning a Static ip to docker container&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#docker-compose file

version: '3.1'
networks:
  obs_network:
    ipam:
      config:
        - subnet: 172.20.0.0/16
services:
  redis:
    image: redis
    ports:
      - 6379:6379
    networks:
      obs_network:
        ipv4_address: 172.20.128.2
  db:
    command: mysqld --user=root --verbose
    environment:
      MYSQL_DATABASE: obs3_meta
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: obs3-meta
    image: mysql:5.7
    networks:
      obs_network:
        ipv4_address: 172.20.128.4
    ports:
    - 3306:3306/tcp
    volumes:
    - ./obs3-meta/mysql_dump/obs3_meta.sql:/docker-entrypoint-initdb.d/obs3_meta.sql:rw
  kafka:
    depends_on:
    - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      ZOOKEEPER_IP: zookeeper
    image: ches/kafka:latest
    networks:
      obs_network:
        ipv4_address: 172.20.128.5
    ports:
    - 7203:7203/tcp
    - 9092:9092/tcp
  zookeeper:
    image: zookeeper:3.4
    networks:
      obs_network:
        ipv4_address: 172.20.128.6
    ports:
    - 2181:2181/tcp
volumes:
  container-volume: {}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;-&amp;gt; Display all the ip address of the containers from its docker-compose file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$for s in `docker-compose ps -q`; do echo ip of `docker inspect -f "{{.Name}}" $s` is `docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $s`; done
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>docker</category>
      <category>app</category>
    </item>
    <item>
      <title>Building a Feature-Rich J.A.R.V.I.S Virtual Assistant [Learn about Web Scraping, API calls and Desktop Notifications] </title>
      <author>The Nerdy Dev</author>
      <pubDate>Mon, 31 May 2021 03:18:14 +0000</pubDate>
      <link>https://dev.to/thenerdydev/building-a-feature-rich-j-a-r-v-i-s-virtual-assistant-learn-about-web-scraping-api-calls-and-desktop-notifications-3pdg</link>
      <guid>https://dev.to/thenerdydev/building-a-feature-rich-j-a-r-v-i-s-virtual-assistant-learn-about-web-scraping-api-calls-and-desktop-notifications-3pdg</guid>
      <description>&lt;p&gt;In this video, we will learn how to create a &lt;strong&gt;Feature Rich Virtual Assistant&lt;/strong&gt; in Python. We will be adding following features to this project : &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-time-reporting"&gt;
  &lt;/a&gt;
  1. Time Reporting
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#2-taking-screenshot"&gt;
  &lt;/a&gt;
  2. Taking Screenshot
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#3-performing-google-search"&gt;
  &lt;/a&gt;
  3. Performing Google Search
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#4-opening-a-specific-website"&gt;
  &lt;/a&gt;
  4. Opening a Specific Website
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#5-searching-on-wikipedia"&gt;
  &lt;/a&gt;
  5. Searching on Wikipedia
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#6-listen-to-jokes"&gt;
  &lt;/a&gt;
  6. Listen to Jokes
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#7-desktop-notifications-for-covid19-statistics"&gt;
  &lt;/a&gt;
  7. Desktop Notifications for COVID-19 Statistics.
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/XWQXMncxg4k"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;




&lt;p&gt;Follow me on:&lt;br&gt;
👉 Twitter: &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt;&lt;br&gt;
👉 Instagram: &lt;a href="https://instagram.com/thenerdydev"&gt;https://instagram.com/thenerdydev&lt;/a&gt;&lt;br&gt;
👉 YouTube: &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; - Make sure to subscribe to my YouTube Channel for FREE content on Web Development and loads of other technologies. &lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>python</category>
      <category>codenewbie</category>
      <category>programming</category>
    </item>
    <item>
      <title>Mounting a new disk in Linux</title>
      <author>Santhosh Balasa</author>
      <pubDate>Mon, 31 May 2021 03:17:22 +0000</pubDate>
      <link>https://dev.to/sbalasa/mounting-a-new-disk-in-linux-324m</link>
      <guid>https://dev.to/sbalasa/mounting-a-new-disk-in-linux-324m</guid>
      <description>&lt;p&gt;-&amp;gt; How to mount a new disk in Linux ?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#Create a partition
sudo fdisk /dev/sdb

#Verify using lsblk
sdb      8:16   0    2G  0 disk
└─sdb1   8:17   0    2G  0 part /

#Create a filesystem
sudo mkfs -t ext4 /dev/sdb1

#Mount it 
sudo mount -t ext4 /dev/sdb1 /kafka

#Verify using lsblk
sdb      8:16   0    2G  0 disk
└─sdb1   8:17   0    2G  0 part /kafka
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;-&amp;gt; How to bind a folder to this new disk and keep its data ?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo mount -t ext4 /dev/sdc1 /obs_parser

#Bind
sudo mount -o bind /vagrant /obs_parser

#Edit /etc/fstab entry (optional)
/vagrant /obs_parser none defaults,bind 0 0

#lsblk
sdc      8:32   0   41G  0 disk
└─sdc1   8:33   0   41G  0 part /obs_parser
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>disk</category>
      <category>mount</category>
      <category>linux</category>
      <category>storage</category>
    </item>
    <item>
      <title>SiaSearch partners with Virtual Mechanics Corporation (VMC) to accelerate ADAS development in Japan</title>
      <author>SiaSearch</author>
      <pubDate>Mon, 31 May 2021 02:17:47 +0000</pubDate>
      <link>https://dev.to/siasearch/siasearch-partners-with-virtual-mechanics-corporation-vmc-to-accelerate-adas-development-in-japan-2lbp</link>
      <guid>https://dev.to/siasearch/siasearch-partners-with-virtual-mechanics-corporation-vmc-to-accelerate-adas-development-in-japan-2lbp</guid>
      <description>&lt;p&gt;&lt;a href="https://www.siasearch.io/"&gt;SiaSearch&lt;/a&gt;, a Berlin-based AI startup, has announced their partnership with &lt;a href="https://vmc.jp/"&gt;Virtual Mechanics Corporation (VMC)&lt;/a&gt; to accelerate ADAS development in Japan. Virtual Mechanics Corporation has over 20 years of experience and established relationships within the Japanese automotive industry. As the sole distributor of the SiaSearch product in Japan, Virtual Mechanics Corporation will promote the adoption of SiaSearch in the Japanese market.&lt;/p&gt;

&lt;p&gt;Via web-based GUI or programmatic API, SiaSearch makes it 10x easier and faster for developers to explore, understand, and share large amounts of visual data.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Structure - Automatically index, structure, and evaluate raw sensor data on a petabyte-scale, based on semantic attributes and keywords from a catalog of over 50 events and attributes&lt;/li&gt;
&lt;li&gt;Analyze - Quickly visualize your data, making full use of the extracted attributes and run more targeted analyses to improve your models.&lt;/li&gt;
&lt;li&gt;Search - Use custom attributes to efficiently find and select the data from your entire data lake.&lt;/li&gt;
&lt;li&gt;Collaborate - Save, edit, version, comment and share frames, sequences or objects with colleagues or 3rd parties.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;“At Virtual Mechanics Corporation, we are laser focused on driving innovation within the mobility industry,” said Eiji Takita, CEO of Virtual Mechanics Corporation. “In working with SiaSearch, we have secured a partner with deep technical capabilities to help accelerate autonomous driving innovation in Japan.”&lt;/p&gt;

&lt;p&gt;“Our distribution partnership with Virtual Mechanics Corporation opens up new and exciting opportunities to accelerate autonomous driving innovation in the Japanese market,” said Clemens Viernickel, CEO of SiaSearch. “We are beyond excited to be working with some of the globally leading automotive companies in Japan through this arrangement. The partnership represents an important milestone for us, and we will continue to pave the path of adoption of SiaSearch abroad.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;About SiaSearch&lt;/strong&gt;&lt;br&gt;
SiaSearch is a Berlin-based AI company on a mission to power automated mobility solutions of tomorrow with a truly scalable data infrastructure. The category-leading sensor management platform for automated driving, SiaSearch is currently in use by leading automotive OEMs, Tier 1 suppliers, and global technology companies.&lt;br&gt;
For more information, visit &lt;a href="https://www.siasearch.io/"&gt;https://www.siasearch.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;About Virtual Mechanics Corporation (VMC)&lt;/strong&gt;&lt;br&gt;
Virtual Mechanics Corporation is working on vehicle dynamics simulation software to simulate driving in a virtual environment and its application technology. Leading customers, the developer and partner companies, Virtual Mechanics Corporation plays a pivotal role in innovation, allowing customers to expedite their research and development.&lt;br&gt;
For more details, please visit &lt;a href="https://vmc.jp/siasearch/"&gt;https://vmc.jp/siasearch/&lt;/a&gt; (information in Japanese)&lt;/p&gt;

</description>
      <category>datascience</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Working with Javascript Events </title>
      <author>Terry Threatt</author>
      <pubDate>Mon, 31 May 2021 02:08:17 +0000</pubDate>
      <link>https://dev.to/terrythreatt/working-with-javascript-events-1p4p</link>
      <guid>https://dev.to/terrythreatt/working-with-javascript-events-1p4p</guid>
      <description>&lt;p&gt;The motivation of the web development is to provide a web experience that provides pages of information and allows a way for users a way to interact with the information. Javascript serves as the backbone of web in making web pages interactive through events. &lt;/p&gt;

&lt;p&gt;A javascript event is an action that happens after you interact with elements on a web page like clicking a button or typing into a form. &lt;/p&gt;

&lt;p&gt;Javascript is responsible for three parts as it relates to events. The first is recognizing events,  manipulating the DOM(document object model), and sending messages to the server. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#event-listeners"&gt;
  &lt;/a&gt;
  Event Listeners
&lt;/h3&gt;

&lt;p&gt;The work of adding events to pages may call this eventing and starts with adding an event listener to an element. &lt;/p&gt;

&lt;p&gt;The event listener recognizes whenever a user interacts with the attached element. &lt;/p&gt;

&lt;p&gt;It consists of an event type and a callback function that is invoked after the event is triggered.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="na"&gt;-&lt;/span&gt; &lt;span class="na"&gt;Adding&lt;/span&gt; &lt;span class="na"&gt;an&lt;/span&gt; &lt;span class="na"&gt;event&lt;/span&gt; &lt;span class="na"&gt;listener&lt;/span&gt; &lt;span class="na"&gt;-&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Shiny Button&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// First, we grab our button element.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shinyButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Next, we attach our event listener with a click event.&lt;/span&gt;
&lt;span class="nx"&gt;shinyButton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Clicked!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#event-handler"&gt;
  &lt;/a&gt;
  Event Handler
&lt;/h3&gt;

&lt;p&gt;The event handler is identified by the function in the event listener that handles what to do with an event after the event listener is triggered.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// Here are using a event to alert any key event&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;keydown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// We are now inside the event handler&lt;/span&gt;
      &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`You pressed key: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#event-object"&gt;
  &lt;/a&gt;
  Event Object
&lt;/h3&gt;

&lt;p&gt;The event is represented by a javascript object that contains helpful properties like the event target and the event type. The event object is passed through the event listener to the event handler. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#eventing-in-action"&gt;
  &lt;/a&gt;
  Eventing in Action
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="na"&gt;-&lt;/span&gt; &lt;span class="na"&gt;Creating&lt;/span&gt; &lt;span class="na"&gt;an&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="na"&gt;input&lt;/span&gt; &lt;span class="na"&gt;form&lt;/span&gt; &lt;span class="na"&gt;-&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"form"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;Name: &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="na"&gt;-&lt;/span&gt; &lt;span class="na"&gt;We&lt;/span&gt; &lt;span class="na"&gt;will&lt;/span&gt; &lt;span class="na"&gt;display&lt;/span&gt; &lt;span class="na"&gt;a&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="na"&gt;here&lt;/span&gt; &lt;span class="na"&gt;-&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Adding the event handler&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;onSubmit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Hi &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Adding the event listener&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;form&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onSubmit&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#lets-chat-about-events"&gt;
  &lt;/a&gt;
  Let's chat about Events
&lt;/h3&gt;

&lt;p&gt;Javascript events make up an important part of the web and we've covered a few ways of working with events. If you enjoyed this post feel free to leave a comment about your thoughts and experiences working with javascript events.&lt;/p&gt;

&lt;p&gt;Happy Coding,&lt;br&gt;
Terry Threatt&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>VirtualBox installation error in Linux -  Error: Dependency is not satisfiable: libc6 (&gt;=2.28)</title>
      <author>Mir Rahed Uddin</author>
      <pubDate>Mon, 31 May 2021 02:05:01 +0000</pubDate>
      <link>https://dev.to/rahedmir/virtualbox-installation-error-in-linux-error-dependency-is-not-satisfiable-libc6-2-28-12b2</link>
      <guid>https://dev.to/rahedmir/virtualbox-installation-error-in-linux-error-dependency-is-not-satisfiable-libc6-2-28-12b2</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vYjWhTd8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4erhlph4svkpgojdkr3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vYjWhTd8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4erhlph4svkpgojdkr3.png" alt="Dependency is not satisfiable: libc6 (&amp;gt;=2.28)"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
This is one of the strange problems of VirtualBox which drives me crazy until I figured out, how simple the solution was.&lt;/p&gt;

&lt;p&gt;If you are running from the same problem, don't worry. Just make sure you are using the right installer for your distribution/OS&lt;/p&gt;

&lt;p&gt;By the way, &lt;code&gt;Error: Dependency is not satisfiable: libc6 (&amp;gt;=2.28)&lt;/code&gt; or &lt;code&gt;libc6 (&amp;gt;=2.29)&lt;/code&gt; is referred to as the same problem&lt;/p&gt;

&lt;p&gt;OK, Let me explain a bit further,  A few months ago I was wanted to install VirtualBox on my &lt;strong&gt;Linux Mint&lt;/strong&gt; computer, So, I went to the VirtualBox Official website (&lt;a href="https://www.virtualbox.org/wiki/Linux_Downloads"&gt;https://www.virtualbox.org/wiki/Linux_Downloads&lt;/a&gt;) but I won't found the installer for &lt;strong&gt;Linux Mint&lt;/strong&gt; Version ( It's still not present here as you can see in the picture below)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VSffAOs3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwannry4yyr0mxgilk6c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VSffAOs3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwannry4yyr0mxgilk6c.png" alt="VirtualBox versions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, I downloaded  &lt;code&gt;Ubuntu 19.10 / 20.04 / 20.10 / 21.04&lt;/code&gt; version because I knew &lt;strong&gt;Linux Mint&lt;/strong&gt; is based on &lt;strong&gt;Ubuntu&lt;/strong&gt;. so, whatever works on Ubuntu should be work on Linux Mint as well. It was not a big deal. But in the installation, it just won't worked and threw this &lt;code&gt;Dependency is not satisfiable: libc6 (&amp;gt;=2.28)&lt;/code&gt; error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O0zmBDEf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3s9fnrnapdunxxew37b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O0zmBDEf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3s9fnrnapdunxxew37b.png" alt="Ubuntu 19.10 / 20.04 / 20.10 / 21.04"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At that moment I reconsider my OS. I was using &lt;strong&gt;Linux Mint 19.3 Cinnamon&lt;/strong&gt;. OS version placed a critical role here. I simply Googled "&lt;strong&gt;Linux Mint 19.3 Ubuntu Version&lt;/strong&gt;"  and found &lt;strong&gt;Mint 19.3&lt;/strong&gt; is based on &lt;strong&gt;Ubuntu 18.04&lt;/strong&gt; . &lt;/p&gt;

&lt;p&gt;I revisit the download page and download it again but now from the  &lt;code&gt;Ubuntu 18.04 / 18.10 / 19.04&lt;/code&gt;  option and run the installer and Guess what, It was running absolutely fine without any issue. Through the installer required some extra dependency, not an issue, just allowed it&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qsnDS5k3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yd64o9ba1ocih6e23zrj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qsnDS5k3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yd64o9ba1ocih6e23zrj.png" alt="![Alt Text](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yd64o9ba1ocih6e23zrj.png)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Maybe you downloaded the &lt;code&gt;Debian 10&lt;/code&gt; version installer, not working.. then download it for &lt;code&gt;Debian 9&lt;/code&gt;. &lt;code&gt;Fedora 33/34&lt;/code&gt; not working... download it for &lt;code&gt;Fedora 32&lt;/code&gt;. Just make sure that &lt;strong&gt;the VirtualBox installer is compatible with your OS version&lt;/strong&gt; :)&lt;/p&gt;

&lt;p&gt;Share your thoughts if you find something more interesting...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#watch-on-youtube"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/watch?v=1K2zx32tBwA"&gt;Watch on YouTube&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Thanks for reading. Have a great day :)&lt;/p&gt;

&lt;p&gt;Coffee &lt;a href="https://www.buymeacoffee.com/rahedmir"&gt;https://www.buymeacoffee.com/rahedmir&lt;/a&gt; &lt;/p&gt;

</description>
      <category>linux</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>devops</category>
    </item>
    <item>
      <title>Introduction to RabbitMQ for Node.js Developers </title>
      <author>Farzad Aziminia</author>
      <pubDate>Mon, 31 May 2021 02:01:54 +0000</pubDate>
      <link>https://dev.to/pharzad/introduction-to-rabbitmq-for-node-js-developers-1clm</link>
      <guid>https://dev.to/pharzad/introduction-to-rabbitmq-for-node-js-developers-1clm</guid>
      <description>&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;For this tutorial you need some background of Node.js and have docker installed on your machine &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#queue"&gt;
  &lt;/a&gt;
  Queue
&lt;/h2&gt;

&lt;p&gt;In computer science there’s the concept of queues. Queue is the set of messages that are meant to be delivered from one sender to one or more receivers. The messages can be delivered in order or out of order by design. The computer program that handles these transactions is called message broker. RabbitMQ is one the most popular message brokers that runs on top of Advanced Message Queuing Protocol (AMQP). There are four main components forming AMQP protocol: Publisher, Exchange, Queue, Consumer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#publisher"&gt;
  &lt;/a&gt;
  Publisher
&lt;/h2&gt;

&lt;p&gt;Messages are Published to an exchange by a publisher, Publisher also is responsible for setting the attributes of the message which we will cover later.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exchanges"&gt;
  &lt;/a&gt;
  Exchanges
&lt;/h2&gt;

&lt;p&gt;Exchanges are responsible for routing the messages to one or more Queues, we will cover Queues Later. There are 4 different types of exchanges in rabbitmq.&lt;/p&gt;

&lt;p&gt;1.Direct&lt;br&gt;
2.Fanout&lt;br&gt;
3.Topic&lt;br&gt;
4.Header&lt;/p&gt;

&lt;p&gt;For this tutorial we are going to cover only two: Direct, I’m gonna do another tutorial on the Fanout exchange later.&lt;/p&gt;

&lt;p&gt;Direct exchanges are responsible for routing messages to a queue based on the Routing key. When you declare a queue you can “Bind” it to an exchange using a Routing key, we will cover this topic later. Direct queues are suitable for distributing tasks among Workers.&lt;/p&gt;

&lt;p&gt;A Fanout exchange sends a message to all of the queues that are bound to the exchange by a routing key. When a message comes in, the exchange will send a copy of that message to all Queues. Fanout exchanges are useful to broadcast a message to multiple nodes in a distributed system.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#queues"&gt;
  &lt;/a&gt;
  Queues
&lt;/h2&gt;

&lt;p&gt;Queues are responsible for storing the messages and delivering them to consumers. Queues need to get declared before you can start using them. A Queue needs to bind to an exchange so it can start receiving messages. Binding is a set of rules that exchanges use to route messages to one or more queues.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#consumers"&gt;
  &lt;/a&gt;
  Consumers
&lt;/h2&gt;

&lt;p&gt;Consumers are the last piece of the puzzle, they need to Subscribe to a queue so they can start receiving messages, when a consumer receives and processes a message, it needs to “Acknowledge” the message in order to get another one.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#installing-rabbitmq"&gt;
  &lt;/a&gt;
  Installing rabbitMQ
&lt;/h2&gt;

&lt;p&gt;We will use docker to install rabbitmq and it’s management UI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-it&lt;/span&gt; &lt;span class="nt"&gt;--hostname&lt;/span&gt; my-rabbit &lt;span class="nt"&gt;-p&lt;/span&gt; 15672:15672 &lt;span class="nt"&gt;-p&lt;/span&gt; 5672:5672 rabbitmq:3-management
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command will install rabbitmq and bind two ports to your local port: 5672 and 15672.&lt;br&gt;
You can use 15672 to get into rabbitMQ management portal: &lt;a href="http://localhost:15672"&gt;http://localhost:15672&lt;/a&gt; the default username password is guest/guest.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5tA82Pn3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/we2cgor1f8ob47zj9lo4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5tA82Pn3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/we2cgor1f8ob47zj9lo4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
We need to use the amqplib library on port 5672 to communicate with the rabbitMQ server. Now lets create a direct exchange and a queue&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rabbit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;amqplib&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;QUEUE_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;square&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;EXCHANGE_TYPE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;direct&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;EXCHANGE_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;main&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myKey&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;5&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nx"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rabbit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;amqp://localhost&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createChannel&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assertExchange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;EXCHANGE_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;EXCHANGE_TYPE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assertQueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;QUEUE_NAME&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bindQueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;QUEUE_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;EXCHANGE_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are a lot happening, let’s break it down&lt;/p&gt;

&lt;p&gt;At line 1 I imported amqplib library then at line 7 I created a connection to rabbitmq&lt;br&gt;
Line 9 I created a channel inside the connection, you need to create a channel before you can start interacting with rabbitmq. &lt;br&gt;
At line 10 I used assertExchage method to  create an exchange. This method takes two arguments: name of the exchange and type of the exchange&lt;br&gt;
At line 11 I used the assertQueue method to create a Queue called square. &lt;br&gt;
And at line 12 I used bindQueue method to bind main to square with the routing key myKey&lt;/p&gt;

&lt;p&gt;After you run the above code you can navigate to the management interface and click on queues tab and you will see square under the list of queues&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zmwDicBJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v4h2xo3hia68yf7spf5q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zmwDicBJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v4h2xo3hia68yf7spf5q.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's write an application to calculate the square of a number&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rabbit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;amqplib&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;QUEUE_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;square&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;EXCHANGE_TYPE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;direct&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;EXCHANGE_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;main&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myKey&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;5&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nx"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rabbit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;amqp://localhost&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createChannel&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assertExchange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;EXCHANGE_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;EXCHANGE_TYPE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assertQueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;QUEUE_NAME&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bindQueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;QUEUE_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;EXCHANGE_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendToQueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;QUEUE_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Buffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can use the sendToQueue method to send messages to the square queue. sendToQueue method takes two arguments, name of the queue and the content which you want to send. The only caveat is the content should be in the buffer format. &lt;/p&gt;

&lt;p&gt;Now after you run the above code, you can navigate to your queue from the management ui and you’ll see that you have a message inside square queue&lt;/p&gt;

&lt;p&gt;Let's consume that message and find the square&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rabbit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;amqplib&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;QUEUE_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;square&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rabbit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;amqp://localhost&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createChannel&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;consume&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;QUEUE_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;square&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;
       &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;square&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It’s pretty much similar to our publisher in many ways, we need to open a connection and create a channel, then we can use the consume method that is exposed from our channel object.&lt;br&gt;
The consume method accepts two arguments, the queue name and a callback. Whenever a message gets published to the square queue, this callback function will be invoked. The callback function accepts an argument which is the message object. We can find our number under the content property.&lt;br&gt;
If you remember, when we published our message, we had to convert our number to a buffer, so when we consume the content, we have to convert it back to the number. First we need to convert the number from buffer to string, then from string to number. When we have our number, we can find the square and console log it to the screen and finally we can use ack method to acknowledge the message and tell rabbitmq to remove that message from the queue and send the next one if any. So first run your publisher and then consumer to see the effect. You can also have the management console open and watch the activity on your queue.&lt;/p&gt;

&lt;p&gt;Next lets run two consumer and one modify our publisher a bit&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rabbit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;amqplib&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;QUEUE_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;square&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;EXCHANGE_TYPE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;direct&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;EXCHANGE_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;main&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myKey&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;4&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;5&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rabbit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;amqp://localhost&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createChannel&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assertExchange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;EXCHANGE_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;EXCHANGE_TYPE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assertQueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;QUEUE_NAME&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bindQueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;QUEUE_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;EXCHANGE_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendToQueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;QUEUE_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Buffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
   &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have an array of numbers instead of one, and we are using the forEach method to iterate through the array and send the numbers to the queue one by one. Now run your consumer and you will see the consumer automatically consume all the messages and show the square of the numbers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;RabbitMQ is a popular message broker that runs on top of AMPQ protocol. AMPQ protocol is consist of 4 components: 1-Publisher, 2-Exchange, 3-Queue, 4-Consumer.&lt;/p&gt;

&lt;p&gt;In order to comunicate to rabbitmq we need to open a connection and inside the connection create a channel.Then we can both publish a message to a queue or consume messages form a queue or queues.  &lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>showdev</category>
    </item>
    <item>
      <title>The Famous Misconceptions in Angular</title>
      <author>Vugar</author>
      <pubDate>Mon, 31 May 2021 01:38:27 +0000</pubDate>
      <link>https://dev.to/angular/the-famous-misconceptions-in-angular-3dl1</link>
      <guid>https://dev.to/angular/the-famous-misconceptions-in-angular-3dl1</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kiDBCyCS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2n274ucjudhmizk9p0iw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kiDBCyCS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2n274ucjudhmizk9p0iw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this blog, we gonna discuss some famous misconceptions among non-Angular developers.&lt;/p&gt;

&lt;p&gt;As Front End developer who worked in Forune 500 companies such as Raymond James financial advisory company and SwissRe leading insurance broker, in this blog we gonna discuss some famous misconceptions among non- Angular developers. This blog should be unbiased and focused on facts only.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Myth #1: Steep Learning Curve in Angular&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s5eOs3Ir--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvfhscnqm9l7jhia1swe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s5eOs3Ir--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvfhscnqm9l7jhia1swe.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the famous misleading opinions we observe among people especially on Twitter and youtube gurus is ‘Angular has a steep learning curve’. The short answer is yes, Angular has not a small road to learning and master. But let’s first analyze the definition of this concept. A steep learning curve refers to: &lt;em&gt;‘The amount of time required to learn is big’&lt;/em&gt;. Interesting but what makes it BIG? First, let’s point out Angular is a fully-featured framework. It has built-in Routing, powerful Forms, Dependency Injection and it is built-in Typescript. In addittion, when learning Angular you learn also software development principles and patterns which in other web frameworks not required. This knowledege is applied and transferred to other programming languages too(from PHP to .NET). You think Forms is simple to manage? Just try it please with compex projects. See &lt;a href="https://betterprogramming.pub/i-almost-got-fired-for-choosing-react-in-our-enterprise-app-846ea840841c"&gt;this blog&lt;/a&gt;. Let’s compare it with a libary or framework which is easy to learn and does not have any of those bulilt in features. Now can we imagine building a real-life enterprise application without any of those features? Of course No. &lt;strong&gt;Unfortunately, the real web application is NOT the promised TODO app you see in bootcamps&lt;/strong&gt;. It is more challenging and more interesting. Now for enterprise projects, besides UI rendering, calculate the amount of time to learn those missing 3rd party packages and sum it up with the time required to choose the best fit for the company. Now sum it up again with Typescript which is extremely famous and used in most enterprises regardless of which tool you use. We conclude that the learning curve is more or the same. Finally, we are going bust this myth with the below quote:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‘Easy to learn does NOT mean easy to build a real app’.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3UNFLHIK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/suh3vye2nbz5xixp990p.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3UNFLHIK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/suh3vye2nbz5xixp990p.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Myth #2:NPM Stats shows Angular is behind React or VueJs&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mRTPGX_a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/icatqnbf4lfvhu43axl5.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mRTPGX_a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/icatqnbf4lfvhu43axl5.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another popular opinion can be observed in blogs is that Angular is not popular because it is behind in npm stats.&lt;/p&gt;

&lt;p&gt;Let’s first start with the definition of this concept before analysis:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NPM stats illustates the number of downloads of package in a given amount of time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So you may wonder why the number of Angular downloads is not leading here. Well, let’s first remember that Angular is popular mostly in big and very big enterprise projects. In those big companies with thousands of developers, people do not simply install packages from NPM default registry. Instead, company infrastructure has its own virtual registry which has cache and custom security settings. This means the real number of downloads of package(in this case Angular) is NOT reflected in npm stats. We can confirm that by comparing the amount available of jobs in javascript front end world. It is May 9, 2021, 00:37 in Poland time while I am writing now. I am comparing stats of jobs via indeed.com worldwide. From the results we can observe that Angular has &lt;a href="https://www.indeed.com/q-angular-jobs.html"&gt;18,929&lt;/a&gt; jobs, React has &lt;a href="https://www.indeed.com/jobs?q=react+js&amp;amp;l=&amp;amp;radius=25"&gt;12,096&lt;/a&gt; and Vuejs has &lt;a href="https://www.indeed.com/jobs?q=vue+js&amp;amp;l="&gt;3,204&lt;/a&gt; jobs. So it proves again those npm stats do not reflect the reality.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RMAdSYrf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yds7sicqc2vuk9vkv8kj.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RMAdSYrf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yds7sicqc2vuk9vkv8kj.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Myth #3: Angular is changing in every version.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another interesting opinion we can observe, some developers who are not familiar with Angular think it is new framework on each new version with a lot of breaking changes. But it is far from reality. Angular is focused on incremental improvements and minimal breaking changes. Also, those breaking changes are mostly taken care by powerful ng update (thanks to angular/cli team).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cMZ-N5bv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/89uo754ezep3hhmjl49e.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cMZ-N5bv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/89uo754ezep3hhmjl49e.JPG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For instance: recently, we have upgraded our project which was part of a leading insurance broker company from v10 to v11. So it took us less than an hour. There was a small routing-related breaking change and it was taken care of by &lt;em&gt;ng update.&lt;/em&gt; The other example but much smaller project is my custom library. Roughly 1 hour was spent to upgrade from v6 to v10. There were minor breaking changes and it was migrated by ng update.&lt;/p&gt;

&lt;p&gt;Finally, we have reached the conclusion of the blog. This article was not about bullying Angular but rather focusing on myths and facts. I have worked with Angular, React, VueJs. All have their own advantages and have a bright future IMO. That’s all, hope you enjoy it. Also please do not hesitate to contact me by the article responses or my &lt;a href="https://twitter.com/Vugar005"&gt;Twitter&lt;/a&gt; ! Cheers!&lt;/p&gt;

</description>
      <category>angular</category>
      <category>react</category>
      <category>vue</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Starting to understand Multi-tenancy</title>
      <author>Danilo Assis</author>
      <pubDate>Mon, 31 May 2021 01:12:27 +0000</pubDate>
      <link>https://dev.to/daniloab_/starting-to-understand-multi-tenancy-42jp</link>
      <guid>https://dev.to/daniloab_/starting-to-understand-multi-tenancy-42jp</guid>
      <description>&lt;p&gt;If you already know or work with multi-tenancy, Pay It Forward (read through to understand). If you don’t know, maybe you are already working with it and just don’t know it yet (just like me in the near past).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The multi-tenancy architecture consists of working with applications that will have multiple users sharing the same database, however, having access only to the data that belongs to them.&lt;/p&gt;

&lt;p&gt;It is widely adopted in software as a service (SaaS) applications, as many customers often use it. These same becoming the tenants of this application.&lt;/p&gt;

&lt;p&gt;Sometimes some software uses architecture to attack deeper situations, as it was in our case.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SCENARIO&lt;/strong&gt;&lt;br&gt;
We are developing an application where our tenant will work with more than one user to access the platform. However, in the beginning, it was designed for just one login to control it. That is, our tenant would have more residents with him using the same rent.&lt;/p&gt;

&lt;p&gt;Then, we decided to stop (we were already starting development on the front end), go back, and reshape our entire database from the beginning.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HOW TO IMPLEMENT?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before we get there, let’s look at some ways in which we can apply the architecture in various models to what is being used in RBAF Manager.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;One database for each customer&lt;/strong&gt;&lt;br&gt;
When accessing the software, it is responsible for directing the application to the cluster responsible for that user’s collections.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;One collection for each customer&lt;/strong&gt;&lt;br&gt;
Each user would have a collection of their documents. Something that becomes unworkable for an application that is just starting for several reasons. One key is the cost of maintaining something at this level in the future with a very large user base.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;One database for all tenants&lt;/strong&gt;&lt;br&gt;
Preferred by many companies is that it is easy to implement at the beginning of development (it is understood that the model concept is easy), distributing tenants in only one bank becomes the most common path.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that’s why we decided to work. Our admin user may own other users and these users need to be “tied” to the company they belong to.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IMPLEMENTATION&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It was then decided that our tenant would be called Team since the platform is geared towards sports teams and to control access to the data of this tenant would require that each model of our system had its id.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Our basic tenant:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The other models followed the pattern below made for &lt;code&gt;Player&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The id of the team is referenced in the model and this becomes its owner.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HOW DO I KNOW THE USER IS LOGGED AND WHICH TENANT BELONGS TO?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Using GraphQL we can work with only one endpoint for all requests. This way, when a call is placed on it, we check if the Authorization header is present:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const { user } = await getUser(req.header.authorization);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can function called getUser passing the token created at login.&lt;/p&gt;

&lt;p&gt;Passing through it, the token is decoded and we now have access to this user ID.&lt;/p&gt;

&lt;p&gt;With the id we consult the User collection and from it, we can access the tenant that he is part of. In this case, the team he belongs to. The team was added at the time of creation, following the same model as the player collection.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;As soon as the user is returned, it is set in the context of our GraphQL API (line 7).&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;And just pass it as a parameter in the resolution of a query or mutation, to have access to only that user’s information.&lt;/p&gt;

&lt;p&gt;An example is a query &lt;code&gt;me&lt;/code&gt;, which is used as a form of authentication to find out if there are any users logged in and authorized to access our API data.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Pay It Forward&lt;/strong&gt;&lt;br&gt;
GraphQL combined with MongoDB is a really powerful stack and starting to use it has allowed us to build some really cool stuff and it’s just the beginning.&lt;/p&gt;

&lt;p&gt;With that, the idea of ​​this text is to share a little of what we are building / learning and to receive feedbacks whatever it may be: improvements, corrections, new implementations, etc.&lt;/p&gt;

&lt;p&gt;This idea was fueled by the message of the movie: Pay It Forward. In it, Trevor, who is in the seventh grade tries to get a great message across the film about a theory that is based on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When you are helped by one person, you must make up for it by helping three other people. Thus creating a Chain of Good.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is our current, sharing, learning, evolving with the community. Combined with one of our principles, &lt;a href="https://dev.to/daniloab_/how-to-learn-in-public-9ng"&gt;How to Learning in Public&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Authentication, SSO, IAM, Federation
</title>
      <author>rounakcodes</author>
      <pubDate>Mon, 31 May 2021 00:34:44 +0000</pubDate>
      <link>https://dev.to/rounakcodes/authentication-sso-iam-federation-4ena</link>
      <guid>https://dev.to/rounakcodes/authentication-sso-iam-federation-4ena</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;Once I started implementing an authentication system, I found myself coming back to these terms again and again to separate their individual roles and purpose in the system. This article was created to serve as a quick reference.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#authentication"&gt;
  &lt;/a&gt;
  Authentication
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;process of the Principal proving its identity to the System

&lt;ul&gt;
&lt;li&gt;Examples of Principal

&lt;ul&gt;
&lt;li&gt;application&lt;/li&gt;
&lt;li&gt;computer system&lt;/li&gt;
&lt;li&gt;human&lt;/li&gt;
&lt;li&gt;hardware, etc&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;System is any computer system that requires identification before allowing access&lt;/li&gt;
&lt;li&gt;System could be hosted on

&lt;ul&gt;
&lt;li&gt;server&lt;/li&gt;
&lt;li&gt;device&lt;/li&gt;
&lt;li&gt;browser, etc&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#single-sign-on-sso"&gt;
  &lt;/a&gt;
  Single Sign On (SSO)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;characteristic of an authentication mechanism

&lt;ul&gt;
&lt;li&gt;that relates to&lt;/li&gt;
&lt;li&gt;the user's identity being used to

&lt;ul&gt;
&lt;li&gt;provide access across multiple Service Providers&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;allows a single authentication system to be used across multiple systems&lt;/li&gt;
&lt;li&gt;The single authentication mechanism could be

&lt;ul&gt;
&lt;li&gt;LDAP or such directory server&lt;/li&gt;
&lt;li&gt;a system generating trusted token&lt;/li&gt;
&lt;li&gt;Federation (see below)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#identity-and-access-management-iam"&gt;
  &lt;/a&gt;
  Identity and Access Management (IAM)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;the management of identity concerns within an information technology organization&lt;/li&gt;
&lt;li&gt;can include 

&lt;ul&gt;
&lt;li&gt;authentication of users and system&lt;/li&gt;
&lt;li&gt;authorization of those users and systems&lt;/li&gt;
&lt;li&gt;user provisioning&lt;/li&gt;
&lt;li&gt;audit of identity systems&lt;/li&gt;
&lt;li&gt;user repository management (like LDAP or Active Directory)&lt;/li&gt;
&lt;li&gt;password policies and other concerns&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#federation"&gt;
  &lt;/a&gt;
  Federation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;common standards and protocols

&lt;ul&gt;
&lt;li&gt;to manage and map user identities&lt;/li&gt;
&lt;li&gt;between Identity Providers

&lt;ul&gt;
&lt;li&gt;across org (and sec domains)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;via trust rel (like dig sig, enc, PKI)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;a sub-discipline of IAM, but typically the same team(s) is involved in supporting it&lt;/li&gt;
&lt;li&gt;a type of SSO where the actors span multiple organizations and security domains&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h4&gt;

&lt;p&gt;For a deep dive into the above (and more): &lt;a href="https://medium.com/@robert.broeckelmann"&gt;https://medium.com/@robert.broeckelmann&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#related"&gt;
  &lt;/a&gt;
  Related
&lt;/h4&gt;

&lt;p&gt;If you found this quick reference article useful, you may also benefit from&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/rounakcodes/notes-on-%20%0Aoauth-2-0-14oh"&gt;Notes on OAuth 2.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/rounakcodes/notes-on-ldap-513d"&gt;Notes on LDAP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>authentication</category>
      <category>sso</category>
      <category>iam</category>
      <category>federation</category>
    </item>
    <item>
      <title>Normal text box vs Magical text box</title>
      <author>lakshmanan-arumugam</author>
      <pubDate>Mon, 31 May 2021 00:01:21 +0000</pubDate>
      <link>https://dev.to/lakshmananarumugam/normal-text-box-vs-magical-text-box-3g9a</link>
      <guid>https://dev.to/lakshmananarumugam/normal-text-box-vs-magical-text-box-3g9a</guid>
      <description>&lt;p&gt;Last week I faced one problem in the HTML text area. it more about the user interaction with the text area component. In, this article I am going to cover the problem and solution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#magic-text-box"&gt;
  &lt;/a&gt;
  Magic text box
&lt;/h2&gt;

&lt;p&gt;We all know about HTML &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"&gt;input&lt;/a&gt; element and behaviour. but, In the input have one problem is inside the text box large text not able to read properly. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Example:&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zA7zzwqN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4j3940ywf2daz2rzf0l.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zA7zzwqN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4j3940ywf2daz2rzf0l.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this case in our mind comes &lt;code&gt;This problem will solve replace Input element to Text area element. so, we able to read the text properly&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Yes. but, inside the text area will come small text. so the text area will fill more space without having large content.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Example:&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HRXM78b4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1snjlzdr5wxw1h093q1q.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HRXM78b4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1snjlzdr5wxw1h093q1q.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#solution-conclusion"&gt;
  &lt;/a&gt;
  Solution conclusion
&lt;/h4&gt;

&lt;p&gt;Use text area with increase height based on the content. now, solved the problem in both cases.&lt;/p&gt;

&lt;p&gt;let see the implementation part using &lt;strong&gt;react&lt;/strong&gt; and &lt;strong&gt;typescript&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;MagicTextBoxProps&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;defaultValue&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ReactMagicTextBox&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;MagicTextBoxProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;textAreaRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createRef&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;HTMLTextAreaElement&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="cm"&gt;/* Incase text area based on the content */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;autoAlignment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Using ref to get the text area element&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;textAreaRef&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollHeight&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Main part of the code&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="cm"&gt;/* On load check and incase the height based on the content */&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;autoAlignment&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputDataChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="na"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ChangeEvent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;HTMLTextAreaElement&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// On change every time check the text area content and height&lt;/span&gt;
    &lt;span class="nx"&gt;autoAlignment&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;currentValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;textarea&lt;/span&gt;
      &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;input-text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;textAreaRef&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;inputDataChange&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;ReactMagicTextBox&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all. This is how I solved the problem. In case you know any solution better than this. please, share the solution via a comment at the post bottom.&lt;/p&gt;

&lt;p&gt;Refer to the below real-time example for more understanding.&lt;br&gt;
&lt;code&gt;Inside the textbox use large content and test it. And, see the difference.&lt;/code&gt;&lt;br&gt;&lt;br&gt;
&lt;iframe src="https://codesandbox.io/embed/react-magic-textbox-wulbc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Thanks for reading this post 🍻🍻🍻.  &lt;/p&gt;

&lt;p&gt;Please, &lt;a href="https://lakshmananarumugam.com/#/portal/signup"&gt;subscribe&lt;/a&gt; to my blog website to get my latest blogs and project directly into your mail inbox.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
