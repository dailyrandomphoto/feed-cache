<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Livewire ‚Äì Revolu√ß√£o no desenvolvimento front-end Laravel?</title>
      <author>agatha-vieira</author>
      <pubDate>Wed, 18 Aug 2021 20:46:51 +0000</pubDate>
      <link>https://dev.to/fireworkweb/livewire-revolucao-no-desenvolvimento-front-end-laravel-2jf8</link>
      <guid>https://dev.to/fireworkweb/livewire-revolucao-no-desenvolvimento-front-end-laravel-2jf8</guid>
      <description>&lt;p&gt;Quem nunca teve problemas na hora de fazer o desenvolvimento do seu front-end? Quem nunca queria usar Vue, mas por n√£o saber usar muito bem, sofreu para conseguir um resultado igual ele? Pois bem, a rec√©m-nascida lib do Laravel chamada Livewire promete resolver esses problemas! Entenda melhor a ferramenta neste post üòâ&lt;/p&gt;

&lt;p&gt;AFINAL, O QUE √â LIVEWIRE?&lt;br&gt;
O Livewire √© uma biblioteca que foi adicionada em 2019 pelo famos√≠ssimo framework Laravel. &lt;/p&gt;

&lt;p&gt;A proposta dela √© criar interfaces din√¢micas (similares ao Vue) com os c√≥digos do blade e do pr√≥prio Laravel. Sim! Exatamente! Voc√™, programador Back-end, poder√° criar um front-end bem desenvolvido com o Livewire!&lt;/p&gt;

&lt;p&gt;Indo direto ao ponto, o Livewire funciona de um jeito beeem peculiar. Qualquer intera√ß√£o que acontecer com ele, se faz uma requisi√ß√£o AJAX e o HTML √© renderizado do lado do servidor e depois retornado ao cliente. Esse fluxo permite que ele seja reativo, por√©m, um pouco mais lento. Ele tem algo parecido com um DOM virtual, onde ele compara as altera√ß√µes com o DOM renderizado e ent√£o aplica as modifica√ß√µes.&lt;/p&gt;

&lt;p&gt;VANTAGENS E DESVANTAGENS DO LIVEWIRE&lt;br&gt;
Os principais pontos positivos do Livewire s√£o:&lt;/p&gt;

&lt;p&gt;A facilidade de trabalho, pois √© simples de entender para quem j√° usa o Laravel. &lt;br&gt;
O n√≠vel profissional dele permite uma avalanche de possibilidades com simples comandos, todos com um resultado bem pr√≥ximo de um Vue. &lt;br&gt;
Por√©m, nem tudo s√£o flores. Apesar de parecer um para√≠so, o Livewire possui pontos negativos tamb√©m. O primeiro deles, √© que, por ser uma ferramenta muito recente, o suporte e d√∫vidas tiradas s√£o poucas, at√© nos f√≥runs mais conhecidos dos desenvolvedores, como o Stack Overflow. &lt;/p&gt;

&lt;p&gt;Outro ponto, √© que, por ter a proposta de n√£o usar uma linguagem diferente, no caso, o JavaScript. Por√©m, esse problema pode ser resolvido usando a micro framework AlpineJS como adicional, menor e sem ser t√£o pesada quanto um Angular, por exemplo.&lt;/p&gt;

&lt;p&gt;Durante o trabalho com Livewire, podemos usar comandos do Laravel para criar os componentes, como ‚Äúphp artisan make:livewire Teste‚Äù. A lib trabalha com dois arquivos separados: a view e o arquivo que comanda a view. No caso, um deles tem a extens√£o .blade.php, o qual estamos acostumados a criar os estilos da tela e tudo que aparecer√° para o cliente. No outro, o qual possui o mesmo nome da blade, √© o controlador, onde ter√£o as fun√ß√µes chamadas por m√©todos e eventos da blade e onde s√£o declaradas as vari√°veis presentes na tela.&lt;/p&gt;

&lt;p&gt;Exemplificando, criando um componente para ser um contador e mostrar em tempo real o n√∫mero sendo adicionado na tela em cada clique do bot√£o, usaremos o comando ‚Äúphp artisan make:livewire contador‚Äù. Dois arquivos s√£o criados, o ‚ÄúContador.php‚Äù e o ‚Äúcontador.blade.php‚Äù. Este √∫ltimo, temos o bot√£o e a vari√°vel do n√∫mero que ser√° adicionado. O primeiro, por sua vez, ter√° toda a l√≥gica por tr√°s da funcionalidade, como a fun√ß√£o de incrementar n√∫mero e a vari√°vel n√∫mero.&lt;/p&gt;

&lt;p&gt;Em resumo, a biblioteca Livewire √© uma ferramenta muito interessante e essencial para quem n√£o se adaptou ou n√£o conhece o Vue.  Entretanto, como trata-se de uma lib muito recente (lan√ßada em julho de 2019), seu suporte √© limitado e ela √© pouco abordada em f√≥runs da internet. √â perfeito para aqueles que j√° est√£o acostumados com Laravel e querem criar interfaces de forma pr√°tica. Esclarecidos esses pontos, √© necess√°rio uma an√°lise dos pr√≥s e contras para optar pelo uso desse recurso, que √© muito promissor e acrescenta demais ao programador front-end.&lt;/p&gt;




&lt;p&gt;Aprenda mais nos nossos canais digitais!&lt;br&gt;
Site: &lt;a href="https://fireworkweb.com.br"&gt;https://fireworkweb.com.br&lt;/a&gt; &lt;br&gt;
Youtube:&lt;a href="https://bit.ly/2GwqNU1"&gt;https://bit.ly/2GwqNU1&lt;/a&gt; &lt;br&gt;
Insta: @fireworkweb&lt;br&gt;
Face: @fireworkweb&lt;br&gt;
Linkedin: Firework Web &amp;amp; Mobile&lt;/p&gt;

</description>
      <category>basecs</category>
      <category>laravel</category>
    </item>
    <item>
      <title>react-color-palette: &lt;ColorPicker /&gt; component for your React project.</title>
      <author>Wondermarin</author>
      <pubDate>Wed, 18 Aug 2021 20:29:56 +0000</pubDate>
      <link>https://dev.to/wondermarin/react-color-palette-colorpicker-component-for-your-react-project-29ng</link>
      <guid>https://dev.to/wondermarin/react-color-palette-colorpicker-component-for-your-react-project-29ng</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hello-everyone"&gt;
  &lt;/a&gt;
  Hello everyone!
&lt;/h2&gt;

&lt;p&gt;I would like to introduce you to my &amp;lt;ColorPicker /&amp;gt; component.&lt;br&gt;
I will be glad of any feedback, have a nice day!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/Wondermarin/react-color-palette"&gt;GitHub Repo&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://rcp.wondermarin.space"&gt;Online Demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;üöÄ Lightweight&lt;/li&gt;
&lt;li&gt;üí® No dependencies&lt;/li&gt;
&lt;li&gt;üõ°Ô∏è Strict&lt;/li&gt;
&lt;/ul&gt;



&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#npm"&gt;
  &lt;/a&gt;
  npm
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;react-color-palette
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#yarn"&gt;
  &lt;/a&gt;
  yarn
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add react-color-palette
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ColorPicker&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useColor&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-color-palette&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-color-palette/lib/css/styles.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setColor&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#121212&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ColorPicker&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;456&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;228&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setColor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;hideHSV&lt;/span&gt; &lt;span class="nx"&gt;dark&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>webdev</category>
      <category>react</category>
      <category>typescript</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Interview Prep Questions</title>
      <author>Molly Struve (she/her)</author>
      <pubDate>Wed, 18 Aug 2021 20:12:12 +0000</pubDate>
      <link>https://dev.to/molly/interview-prep-questions-5dha</link>
      <guid>https://dev.to/molly/interview-prep-questions-5dha</guid>
      <description>&lt;p&gt;&lt;em&gt;Followup post for &lt;a href="https://dev.to/molly/setting-yourself-up-for-interview-success-15b7"&gt;Setting Yourself Up for Interview Success&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Below is a list of questions that I found extremely helpful when preparing for my interviews. Most of them came directly from the interviews I had and some were general ones I found online. &lt;/p&gt;

&lt;p&gt;When I used these to prep I put them on flash cards. I wrote the question on one side and my answer (or answers) on the other. Then I would go through them at the beginning of each week I was interviewing to prepare for my interviews. &lt;/p&gt;

&lt;p&gt;For reference, I was interviewing for Senior, Staff, and Engineering Manager positions with a focus on SRE (Site Reliability Engineering) and Reliability roles. I broke up the questions into categories to make them easier to sort through. They are in no particular order. I only numbered them to make them easy to reference. Using my answers to these questions I was able to answer every question that was thrown at me during my interviews. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#general-questions"&gt;
  &lt;/a&gt;
  General Questions
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;What do you want out of your next role?&lt;/li&gt;
&lt;li&gt;Tell me about a time you disagreed with someone. How did you handle it? What was the outcome?

&lt;ul&gt;
&lt;li&gt;The follow up questions might not get asked but get in the habit of answering those even when giving the initial answer. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What are your greatest strengths?&lt;/li&gt;
&lt;li&gt;What are your greatest weaknesses?

&lt;ul&gt;
&lt;li&gt;You likely will not directly get asked the above questions, but if you are aware of what your strengths are then you can work them into your answers for other questions. If you know what your weaknesses are you can also mention those and how you are working to improve them. The key is to not have any blindspots.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What is a time when something took a lot out of you and what did you learn? &lt;/li&gt;
&lt;li&gt;List the major achievements you are most proud of at your current job. &lt;/li&gt;
&lt;li&gt;Tell me about someone you look up to and why?&lt;/li&gt;
&lt;li&gt;Tell me about a time you made a mistake.&lt;/li&gt;
&lt;li&gt;What was a piece of feedback that was hard to hear but helped you improve?&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#srstaff-level-ic-questions"&gt;
  &lt;/a&gt;
  Sr./Staff Level IC Questions
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Tell me about a complex system you designed.&lt;/li&gt;
&lt;li&gt;Tell me about a large project you had to get buy in for. What was it and how did you get the buy in you needed?&lt;/li&gt;
&lt;li&gt;Tell me about a time you failed and what you learned from it.

&lt;ul&gt;
&lt;li&gt;Even if they don't ask for what you learned you always include that. It shows that you are humble and have the ability to grow. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What do you value highly when working with software? (technical values)

&lt;ul&gt;
&lt;li&gt;Example answer: "I highly value simplicity bc I have found it leads to more reliable software. I also value automation bc humans doing things manually usually increases the chances of error." Expand more on your answer, but that gives you an idea of the kinds of answers you would give. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tell me about a time you had to make a decision that involved short-term sacrifices for long-term gains.&lt;/li&gt;
&lt;li&gt;Tell me about a time when you solved a complex problem and how you went about it.

&lt;ul&gt;
&lt;li&gt;Note this is different than #1 which asks about designing a complex system. I choose a &lt;a href="https://dev.to/molly/10-tips-for-debugging-in-production-ko1"&gt;story about a gnarly bug&lt;/a&gt; I had to fix. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What is the most challenging part of being in an engineering leader for you?&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#srereliability-ic-questions"&gt;
  &lt;/a&gt;
  SRE/Reliability IC Questions
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Tell me about an incident that you ran?&lt;/li&gt;
&lt;li&gt;How do you define observability? How have you improved observability on past systems you have worked with? &lt;/li&gt;
&lt;li&gt;What tools have you built that were able to aid developers and/or fellow SREs?&lt;/li&gt;
&lt;li&gt;Give me an example of a time you made something more efficient.&lt;/li&gt;
&lt;li&gt;Give me an example of a time you improved a process. (could be team process or technical process) 

&lt;ul&gt;
&lt;li&gt;I talked about improving an on-call rotation for these types of questions.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What does reliability mean to you? &lt;/li&gt;
&lt;li&gt;What is your preferred testing strategy?

&lt;ul&gt;
&lt;li&gt;Here you want to talk high level like unit vs end-to-end, smoke tests, canary deployments, etc. Give examples of what has worked well or not for you in the past. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Give me an example of a calculated risk that you took where speed was critical.&lt;/li&gt;
&lt;li&gt;What is your definition of SRE?&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#manager-questions"&gt;
  &lt;/a&gt;
  Manager Questions
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;What is your management style?&lt;/li&gt;
&lt;li&gt;Tell me about the person you are most proud of empowering and growing. &lt;/li&gt;
&lt;li&gt;Tell me about a time when you had to give someone hard feedback.&lt;/li&gt;
&lt;li&gt;How do you deal with competing priorities?

&lt;ul&gt;
&lt;li&gt;When you get "how do you..." questions, answering with your strategy is good, but having a quick story to follow it up as an example is even better. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;How do you gain trust from your team?&lt;/li&gt;
&lt;li&gt;What do you look for when you are hiring?&lt;/li&gt;
&lt;li&gt;How do you determine if someone is technically competent for a job?&lt;/li&gt;
&lt;li&gt;How do you keep the jerks out?&lt;/li&gt;
&lt;li&gt;Have you ever had a large project killed?&lt;/li&gt;
&lt;li&gt;How do you broach the topic of technical debt when having to explain it to leadership and other stakeholders?&lt;/li&gt;
&lt;li&gt;What does the diversity of your current team look like?&lt;/li&gt;
&lt;li&gt;Tell me about a time you missed a deadline and how you handled it.&lt;/li&gt;
&lt;li&gt;When was a time you failed as a manager and how did you handle it and make it right?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Depending on your experience, you may not have an answer for all of the "Tell me about a time..." questions. That is OK! Be truthful about it and then explain how you would handle the situation if you found yourself faced with it. For example, I never have had a large project killed but I talked about how I would be objective and make sure my team fully understood why it had happened.&lt;/p&gt;

&lt;p&gt;If you have any other questions you would like to add to this list, feel free to drop them in the comments below üëá &lt;/p&gt;

</description>
      <category>interviewing</category>
      <category>job</category>
      <category>career</category>
    </item>
    <item>
      <title>Setting Yourself Up for Interview Success </title>
      <author>Molly Struve (she/her)</author>
      <pubDate>Wed, 18 Aug 2021 20:11:53 +0000</pubDate>
      <link>https://dev.to/molly/setting-yourself-up-for-interview-success-15b7</link>
      <guid>https://dev.to/molly/setting-yourself-up-for-interview-success-15b7</guid>
      <description>&lt;p&gt;When it comes to interviewing, everyone has their own style and way they like to approach it. When I started looking for my next opportunity, I was not quite sure what to expect. I read a few blog posts to prep myself. These were incredibly helpful, but I found a few things even beyond their recommendations that helped me to succeed and that is what I want to share with you all. My approach may not be ideal for everyone but it worked very well for myself and using it I was able to land five job offers. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interview-often"&gt;
  &lt;/a&gt;
  Interview Often
&lt;/h2&gt;

&lt;p&gt;Many folks will tell you that interviewing is a skill and you should make sure to get in some practice rounds before aiming towards a company you really want. I 100% found this to be the case. The first couple of phone screens I did I had to pause and think about the answers to the questions. As things went along, I was asked similar questions over and over and it got much easier. &lt;/p&gt;

&lt;p&gt;However, even with a couple of practice rounds, I still felt a bit stressed and anxious going into interviews. Then, as my interviewing frequency picked up, I noticed my anxiety nearly went away. When I had an interview scheduled almost every day my anxiety was almost non-existent because it felt like just one more meeting on my schedule. &lt;/p&gt;

&lt;p&gt;Once I had this realization I started to schedule interviews on a consistent cadence each week. This not only lowered my anxiety, but did wonders for my ability to solve the technical problems. Instead of getting nervous before a technical session, I would get focused. Interviewing on a consistent basis got me into a nice groove when it came to tackling technical interviews such as coding or systems design problems. &lt;/p&gt;

&lt;p&gt;I even went so far as to schedule a set of interviews with a company solely for the reason of getting me in the groove and prepped for one of the final companies I interviewed with. Not only did that extra company help prep me, but it turned out to be a fabulous interview and I got an offer that I seriously considered in the end.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flash-cards"&gt;
  &lt;/a&gt;
  Flash Cards
&lt;/h2&gt;

&lt;p&gt;The first couple of roles I did hiring screens for determined I was not a great fit. One of the roles I actually thought I was a great fit for but realized I had not presented my skills as well as I could have during the phone screen.&lt;/p&gt;

&lt;p&gt;Immediately after those phone screens I decided it was time to get organized and take interviewing more seriously. I sat down and wrote out the questions they asked that, at the time, I didn't think I gave good answers to. Then I took time to come up with much better answers. I combed through my mind to find examples that would better highlight my skillset. In addition to writing down answers to the questions I was asked in the phone screens, I collected some more generic technical interview questions from various websites and wrote down answers for those as well. &lt;/p&gt;

&lt;p&gt;I initially put all of this into a Google doc. The Google doc was great for getting my thoughts written down, but I wanted something that I could use repeatedly to prep. To achieve this I went back to my college days and used the tried and true study method of flash cards! I made flash cards with the questions on one side and my answers on the other. Then, like in school, I would run through the flash cards at the beginning of each week to make sure I had a quick recall of all the stories and highlights of my career. &lt;/p&gt;

&lt;p&gt;Even though the interview questions didn't always exactly match those on my flash cards, the flash cards helped remind me about the key points throughout my career. Those key points and experiences were easily transferable to many types of questions. For folks that are interested, I wrote a second post listing out all of the questions I used to prepare. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/molly" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMrAIHhS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qARnw-JH--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/119473/4fe2a414-c5d4-4cfe-b9da-8b9da90fb5e6.jpg" alt="molly"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/molly/interview-prep-questions-5dha" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Interview Prep Questions&lt;/h2&gt;
      &lt;h3&gt;Molly Struve (she/her) „Éª Aug 18 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#interviewing&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#job&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#professional-interview-prep"&gt;
  &lt;/a&gt;
  Professional Interview Prep
&lt;/h2&gt;

&lt;p&gt;Before starting this process I looked into companies and websites that I could use for interview prep. I felt pretty confident in my coding ability, but wanted to learn more about the systems design portion that many interviews have. To fill this void I signed up for &lt;a href="https://www.tryexponent.com/"&gt;Exponent&lt;/a&gt;. Exponent is a bit pricey, but it was completely worth it for me. One nice aspect is that they have some free content available so you can see if it is right for you and what you want to accomplish. I only ended up subscribing to it for two months. &lt;/p&gt;

&lt;p&gt;I found their guide to SWE interviewing to have a lot of great information in it. One part that was crucial in helping me was the systems design section. I had never done a systems design interview before so I had no clue about how to approach one.&lt;/p&gt;

&lt;p&gt;Exponent had many examples of folks answering system design questions which gave me an idea of what a good answer included. They also had lots of literature about how to break down the system design questions and what to cover when answering them. Once again, I ended up making flash cards around system design question elements and ran through those periodically to keep myself sharp on that front. &lt;/p&gt;

&lt;p&gt;For more details on how to I tackled my system design interviews stay tuned for a follow up blog post. üòé  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#take-notes"&gt;
  &lt;/a&gt;
  Take Notes
&lt;/h2&gt;

&lt;p&gt;During your interviews take notes! Especially if you are interviewing at multiple companies, it can be very hard to keep them all straight. I have Google docs for each company I interviewed with that have extensive notes from each process. &lt;/p&gt;

&lt;p&gt;These docs contain everything from the questions I asked, to the background of each interviewer, to any feelings I felt during the interview. These notes were invaluable at the end of the process when it came to decision time. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#give-yourself-30-min-before-each-interview"&gt;
  &lt;/a&gt;
  Give yourself 30 min before each interview
&lt;/h2&gt;

&lt;p&gt;Scheduling interviews around work can be challenging, but one thing I found is that scheduling in downtime right before is crucial to get yourself in the mental state to interview. My routine involved the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Gather up my notes already compiled for the company and write down questions I wanted to ask&lt;/li&gt;
&lt;li&gt;Research the interviewers if I had their names&lt;/li&gt;
&lt;li&gt;Turn off all notifications and close Slack&lt;/li&gt;
&lt;li&gt;Open any necessary tools (code editor, whiteboard tool, etc)&lt;/li&gt;
&lt;li&gt;Go to the bathroom and grab some water &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.ted.com/10-examples-of-how-power-posing-can-work-to-boost-your-confidence/"&gt;Power pose&lt;/a&gt; for a min and then have a quick dance party to get rid of any last min nerves and pump myself up.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That last point is not for everyone, but for me, listening to some pump up music while dancing makes me feel really good about myself and gets me in a good headspace. I also listen to music before I compete with my horses to get in the zone which may be why it worked well in this scenario. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enjoy-it"&gt;
  &lt;/a&gt;
  Enjoy it!
&lt;/h2&gt;

&lt;p&gt;Once I got into that interview groove I started to really enjoy them. I got to meet some incredible engineers and people while solving some fun and interesting problems. A lot of the code interviews I did felt like I was working with colleagues. Yes, I was responsible for coming up with the solution, but during the process I shared so many good laughs with interviewers as we commiserated over a typo or trying to put together a regex. &lt;/p&gt;

&lt;p&gt;Maybe I got incredibly lucky and the 30+ people I met from the 6 companies I considered were all just really nice. Or, maybe some of it had to do with the mindset I went into these interviews with. &lt;/p&gt;

&lt;p&gt;Once I had settled into interviewing, I approached each interview with a collaborative mindset. I was there to learn about the company as much as they wanted to learn about me. This made me much more relaxed and open during the interview and I think my interviewers ended up mirroring that feeling. If you go into an interview like you are heading into battle, then it likely will be a battle for both sides. &lt;/p&gt;

&lt;p&gt;Even though I had to say no to many companies, they are still places I would have loved to work. I would recommend them to others in a heartbeat because of how much I enjoyed their interview process. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#good-luck"&gt;
  &lt;/a&gt;
  Good Luck!
&lt;/h2&gt;

&lt;p&gt;Interviewing is not easy. It is a full on side hustle when you decide to take it on. But it is worth it in the end! Your perfect next opportunity is out there, now you just have to find it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Anything else you all want to know about my interviewing process? Drop any additional questions you may have in the comments üëá&lt;/em&gt;&lt;/p&gt;

</description>
      <category>interviewing</category>
      <category>job</category>
      <category>career</category>
    </item>
    <item>
      <title>Day 6: 100 days of code</title>
      <author>Gaurav-Shekhawat</author>
      <pubDate>Wed, 18 Aug 2021 20:08:23 +0000</pubDate>
      <link>https://dev.to/gauravshekhawat/day-6-100-days-of-code-4fob</link>
      <guid>https://dev.to/gauravshekhawat/day-6-100-days-of-code-4fob</guid>
      <description>&lt;p&gt;There will be less content today as I am busy with academics.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dont-forget-to-use-the-raw-flexwrapwrap-endraw-"&gt;
  &lt;/a&gt;
  Don't forget to use the &lt;code&gt;flex-wrap:wrap&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;In my last some of the projects, I have to change almost the entire code in media queries so that my website look good on an mobile device. This can be avoided to a great extent by using:-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;flex-wrap: wrap;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, use it wisely whenever needed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bootstrap-basics"&gt;
  &lt;/a&gt;
  Bootstrap Basics
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Bootstrap is a css library, which consists of code written by someone-else, taking care of all the styles and responsive web design. To use it in our projects, go to &lt;a href="https://getbootstrap.com/"&gt;Bootstrap&lt;/a&gt; and copy the css link inside of your html file.
&lt;/li&gt;
&lt;li&gt;To use any-functionality of bootstrap, just link bootstrap with your html, and then just specify in the class of your html tag, what you want to do with that element, among some classes given in bootstrap website.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example, if you want to design a warning button:-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button class = "btn btn-warning"&amp;gt;  Warning  &amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now practice and get your hands dirty ..&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bootstrap-column-model"&gt;
  &lt;/a&gt;
  Bootstrap column model
&lt;/h3&gt;

&lt;p&gt;This is a bootstrap way to make sure that our web-pages are mobile responsive. In this model, bootstrap divides its page into 12 distinct columns. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YhpBe_Ui--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/heo7r87e6dw0pqj802m2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YhpBe_Ui--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/heo7r87e6dw0pqj802m2.png" alt="Bootstrap column model in action"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Large screen:-&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hMzqjZXS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qb3ll9herhmmke7yk1h9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hMzqjZXS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qb3ll9herhmmke7yk1h9.png" alt="ON large scrren"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;as we shrink the size of the screen down.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XYcdnGmD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efxefvi4fjtqbziahyae.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XYcdnGmD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efxefvi4fjtqbziahyae.png" alt="On small screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bootstrap also let us specify how many columns should an div take, depending on the size of the screen as small or large. Here is the example:-&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5sdyQfor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xbc288dn811nezjt39s6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5sdyQfor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xbc288dn811nezjt39s6.png" alt="IMage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This behaves as 4 div in 1 row on a large screen, and 2 div's in each row on a small screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bzZDD2DP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lgmtf31aky2kedqthd0w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bzZDD2DP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lgmtf31aky2kedqthd0w.png" alt="large screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GTL1EdTW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o21v8rvsfkjl65w1479v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GTL1EdTW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o21v8rvsfkjl65w1479v.png" alt="small screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sass-inheritance"&gt;
  &lt;/a&gt;
  SASS inheritance
&lt;/h2&gt;

&lt;p&gt;Let's suppose we are designing 3 alert messages as below:-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XGm6M1SS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2hy2qn2vgm1jphwe0dl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XGm6M1SS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2hy2qn2vgm1jphwe0dl.png" alt="alert pic"&gt;&lt;/a&gt;&lt;br&gt;
If we write it using nesting in sass, then in the output css, the code will be copyed in the css styling of all the alert, this will increase the size of our css to a large extent in long term. To solve this problem, we use inheritance. &lt;/p&gt;

&lt;p&gt;Hence, the better solution of the above problem will be :-&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wJ49nifm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9xtplroh1k051hsf4k8t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wJ49nifm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9xtplroh1k051hsf4k8t.png" alt="better code using inheritance"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>bootstrap</category>
    </item>
    <item>
      <title>Getting Started with Cypress</title>
      <author>Hajar | Ÿáÿßÿ¨ÿ±</author>
      <pubDate>Wed, 18 Aug 2021 20:07:44 +0000</pubDate>
      <link>https://dev.to/hajarnasr/getting-started-with-cypress-109b</link>
      <guid>https://dev.to/hajarnasr/getting-started-with-cypress-109b</guid>
      <description>&lt;p&gt;&lt;strong&gt;What's Cypress?&lt;/strong&gt;&lt;br&gt;
Cypress is a JavaScript-based front-end testing tool. It helps you test the journey that users take from once they visit your website till they leave. You can use Cypress to test what users will see when they visit the website for the first time. Or where they should be redirected to when they click some link or another. Or if cookies get saved when they signup or login. And so many other things. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;br&gt;
To run Cypress, you need to install it as a &lt;code&gt;dev&lt;/code&gt; dependency into your project and then run &lt;code&gt;yarn run cypress open&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;yarn&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="nx"&gt;cypress&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;dev&lt;/span&gt;
&lt;span class="nx"&gt;yarn&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt; &lt;span class="nx"&gt;cypress&lt;/span&gt; &lt;span class="nx"&gt;open&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;small&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can also download it from &lt;a href="https://www.cypress.io/"&gt;Cypress.io&lt;/a&gt;, double click &lt;code&gt;Cypess.exe&lt;/code&gt; and then select your project.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Once you add Cypress to your project, &lt;code&gt;cypress&lt;/code&gt; folder and other sup-directories will be added to the root of your project.&lt;br&gt;
What we care about in these sub-directories is integration. You can delete all the files created under that directory and create a new file called first_test.spec.js. This is where we're going to add our first test.&lt;/p&gt;

&lt;p&gt;Let's write a test for a function that returns random numbers between 0-90.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getRandomNum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// 2&lt;/span&gt;
&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test getRandomNum&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// 3 &lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should be less than 100&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// 4&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getRandomNum&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="nx"&gt;lessThan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;1- So, we have a function somewhere that returns a number between 0-9.&lt;br&gt;
2- We first write a &lt;code&gt;describe&lt;/code&gt; block to group all the tests related to &lt;code&gt;getRandomNum&lt;/code&gt; and name it &lt;code&gt;test getRandomNum&lt;/code&gt;.&lt;br&gt;
3- Then, we write the &lt;code&gt;it&lt;/code&gt; block in which we write our test.&lt;br&gt;
4- Finally, we run a for loop to test our function. We should &lt;code&gt;expect&lt;/code&gt; a number &lt;code&gt;lessThan&lt;/code&gt; 100 every time we call &lt;code&gt;getRandomNum()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If everything goes well, the test should pass.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b7FPPgeh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/3WCtCc0/success.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b7FPPgeh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/3WCtCc0/success.png" alt="the test successed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, what if we refactored our code and accidentally made a tiny mistake.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getRandomNum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 100 was added to the number by mistake&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we run the test again, it should fail. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lXB0OPAI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/RgcHYn0/fail.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lXB0OPAI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/RgcHYn0/fail.png" alt="a red failed test"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The cool part is that Cypress tells you exactly where the test fails and why it fails. Here in our test, we told Cypress to &lt;code&gt;expect&lt;/code&gt; &lt;code&gt;getRandomNum()&lt;/code&gt; to return a number &lt;code&gt;lessThan&lt;/code&gt; 100, but instead we got 190. So Cypress complained about it to let us know that something went wrong after we refactored the code.  &lt;/p&gt;

&lt;p&gt;Cypress is much more powerful than just testing a function that generates random numbers, especially for applications built in React -- for example. It provides you with tools that help you mount your components and test their behavior. It's exactly like simulating how a user uses your website.&lt;/p&gt;

&lt;p&gt;Let's pretend that we have a website and that we want to test that the &lt;code&gt;Contact&lt;/code&gt; link gets redirected to the contact page &lt;code&gt;onClick&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;only&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test contact link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// 2&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should be redirected to a contact page&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// 3&lt;/span&gt;
    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;visit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:3000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// 4&lt;/span&gt;
    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Contact&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="c1"&gt;// 5&lt;/span&gt;
    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;should&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;include&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/contact&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;1- Add a &lt;code&gt;describe&lt;/code&gt; block, and since we &lt;code&gt;only&lt;/code&gt; care about testing the contact link right now, run that test only.&lt;br&gt;
2- Start the &lt;code&gt;it&lt;/code&gt; block.&lt;br&gt;
3- First, ask Cypress (cy) to visit/go to the application.&lt;br&gt;
4*- Then we tell it to find the first element that has the text &lt;code&gt;Contact&lt;/code&gt; and clicks it.&lt;br&gt;
5- Finally, Cypress tests if the the current &lt;code&gt;url&lt;/code&gt; contains &lt;code&gt;/contact&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;*: &lt;code&gt;contains&lt;/code&gt; is case sensitive. If the text is "Contact" but you write "contact"(lower case), the link won't be found and you'll have &lt;code&gt;a Timed out error&lt;/code&gt;. You can override that behavior by passing &lt;code&gt;{ matchCase: false }&lt;/code&gt; as an option to &lt;code&gt;contains&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Contact&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;matchCase&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, note that &lt;code&gt;contains&lt;/code&gt; finds the first element that has the text "Contact", so if you have two "Contact" links on the page you'll need to use &lt;code&gt;get&lt;/code&gt; with &lt;code&gt;contains&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nav&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Contact&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// to get the link in the nav&lt;/span&gt;
&lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;footer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Contact&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// to get the link in the footer&lt;/span&gt;
&lt;span class="c1"&gt;//Or&lt;/span&gt;
&lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nav&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Contact&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;footer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Contact&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What if we have a login page where people can login or see an error message if the login fails... let's test that.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Login&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// we write the code we want to run before each test in a beforeEach block&lt;/span&gt;
  &lt;span class="nx"&gt;beforeEach&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;visit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:3000/login&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should succeed with correct credentials &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// find the element (input) with id:username and type hajarNasr&lt;/span&gt;
    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hajarNasr&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// find the element (input) with id:password and type uniquePassword&lt;/span&gt;
    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;uniquePassword&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// find the element (button) with id:submit-btn and click it&lt;/span&gt;
    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#submit-btn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// those two lines confirm that the user has logged successfully in and got redirected to homepage&lt;/span&gt;
    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome hajarNasr&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;should&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;include&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/home&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// To test that an error msg gets displayed when user enters wrong data.&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should fail with wrong credentials &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fakeUser&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fakePassword&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#submit-btn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// this line confirms that user has not logged in because the page doen't contain a welcome message&lt;/span&gt;
    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;should&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;not.contain&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome fakeUser&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// and this should confirm that we're still in the login page&lt;/span&gt;
    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;should&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;include&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/login&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// and that an element with a className error is displayed in red.&lt;/span&gt;
    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;should&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;have.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rgb(255, 0, 0)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.cypress.io/guides/overview/why-cypress"&gt;docs.cypress&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Impressions of Polywork</title>
      <author>Nick Taylor (he/him)</author>
      <pubDate>Wed, 18 Aug 2021 19:58:35 +0000</pubDate>
      <link>https://dev.to/nickytonline/impressions-of-polywork-3pbp</link>
      <guid>https://dev.to/nickytonline/impressions-of-polywork-3pbp</guid>
      <description>&lt;p&gt;Polywork is a new professional platform that has been getting a lot of attention lately. I can't remember exactly where I came across it initially on Twitter. I think &lt;a class="mentioned-user" href="https://dev.to/aspittel"&gt;@aspittel&lt;/a&gt;
 (Ali Spittel) may have Tweeted about it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-access-to-polywork"&gt;
  &lt;/a&gt;
  Getting Access to Polywork
&lt;/h2&gt;

&lt;p&gt;I &lt;a href="https://www.polywork.com/users/sign_up"&gt;signed up for the waiting list&lt;/a&gt;, gave their &lt;a href="https://twitter.com/PolyworkHQ"&gt;Twitter account&lt;/a&gt; a follow, and one Sunday afternoon, the Twitter account tweeted out an invite code to bypass the waitlist. I was in! üòé&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Hint: They give out invite codes pretty frequently or retweet folks who have invite codes to give, so I highly recommend following their Twitter account.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#onboarding"&gt;
  &lt;/a&gt;
  Onboarding
&lt;/h2&gt;

&lt;p&gt;I secured my handle, &lt;em&gt;nickytonline&lt;/em&gt;, because &lt;a href="https://www.iamdeveloper.com/pages/social/"&gt;that's me everywhere on the Internet&lt;/a&gt;. It's been a couple of months, so I don't remember most of the onboarding process, but I remember choosing your assistant as part of the onboarding‚Äîa fun touch.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9OjZ4MEI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hoaz3ladpk05d9endst0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9OjZ4MEI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hoaz3ladpk05d9endst0.png" alt="Polywork assitant"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: If you've onboarded recently, let me know what aspects I've missed.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The first thing I enjoyed about Polywork was the minimal design (like Zen mode in your editor for all the devs out there).&lt;/p&gt;

&lt;p&gt;I completed the intro section and added some initial badges to my profile. Badges in the context of Polywork are interests and skills you have. I work in open source, and I snowboard, so I added two badges to my profile.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N52zyS4t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bwyf96wnsevx9juwoe7a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N52zyS4t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bwyf96wnsevx9juwoe7a.png" alt="Polywork badges section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#positions"&gt;
  &lt;/a&gt;
  Positions
&lt;/h2&gt;

&lt;p&gt;Like other professional networks, you can add the positions you've held.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V4O__IbQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmqggolywg2d1sm3ubu5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V4O__IbQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmqggolywg2d1sm3ubu5.png" alt="Polywork positions section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One exciting feature that rolled out after I had signed up was Highlights for starting and leaving positions generated automatically.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dcCjBs5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k3994nynfjawd5cwl5iw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dcCjBs5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k3994nynfjawd5cwl5iw.png" alt="Polywork ended and started a new role highlights"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#timeline"&gt;
  &lt;/a&gt;
  Timeline
&lt;/h3&gt;

&lt;p&gt;The main area of prominence on your profile page is the timeline.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZVPTzXNQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p27njvml14ijk8zkmcmz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZVPTzXNQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p27njvml14ijk8zkmcmz.png" alt="Polywork timeline"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's where you'll spend most of your time filling out your profile. It took me a while to add my work here, but mainly because I was backfilling many things I've done. Filling out the timeline was nostalgic, and I realized how much I've accomplished once I saw it all in chronological order.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-a-highlight"&gt;
  &lt;/a&gt;
  Creating a Highlight
&lt;/h3&gt;

&lt;p&gt;To add to the timeline, click on the &lt;em&gt;Highlight&lt;/em&gt; button at the top of your Polywork profile. It will open a modal where you can fill in the work or activity you want to record.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ORchN2LM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uebhi56s43za5xv5vegw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ORchN2LM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uebhi56s43za5xv5vegw.png" alt="Creating a Polywork highlight"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#tags"&gt;
  &lt;/a&gt;
  Tags
&lt;/h4&gt;

&lt;p&gt;Aside from the content of the highlight, you can add one or more tags like &lt;em&gt;Contributed to Open Source&lt;/em&gt;. Tags you've recently used are available to you right in the initial highlight editor view. If you want to add a new one, click on the &lt;strong&gt;Add Activity Tags&lt;/strong&gt; button to search for tags.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JefgEdvp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bdbbeyyzc4csct3re9db.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JefgEdvp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bdbbeyyzc4csct3re9db.png" alt="Polywork add a tag"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If a tag does not exist, you can create it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UJujKfPB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo8bormdpemvme4ctchx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UJujKfPB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo8bormdpemvme4ctchx.png" alt="Polywork create new tag"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#adding-collaborators"&gt;
  &lt;/a&gt;
  Adding Collaborators
&lt;/h4&gt;

&lt;p&gt;If you've collaborated on something, you can add collaborators to a highlight by clicking on the two-person icon at the bottom of the highlight editor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qGrSwZOo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1dd0mrd7z9bjh352ptdr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qGrSwZOo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1dd0mrd7z9bjh352ptdr.png" alt="Polywork adding a collaborator button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can add as many collaborators as you want. I'm sure there is a limit; I just haven't reached it yet. üòé&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Lxf56ax--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5oeoq25fgta8b70qo49.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Lxf56ax--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5oeoq25fgta8b70qo49.png" alt="Polywork add collaborators"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One thing to note about collaborators is they have to confirm they collaborated with you. It prevents people from being needlessly tagged on highlights and adds more authenticity to a piece of collaborative work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reposting-a-someones-highlight"&gt;
  &lt;/a&gt;
  Reposting a Someone's Highlight
&lt;/h3&gt;

&lt;p&gt;At first glance, this looks like retweeting on Twitter, but it's a bit different. For one thing, you cannot repost anyone's highlight. As far as I‚Äôm aware, the only way you can repost is if someone collaborated with you. Once you confirm that you collaborated with someone, you will be able to repost their highlight.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FRSk1lEB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/17rxhti3wp0zp2l2915e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FRSk1lEB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/17rxhti3wp0zp2l2915e.png" alt="A Polywork reposted highlight"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#filtering"&gt;
  &lt;/a&gt;
  Filtering
&lt;/h3&gt;

&lt;p&gt;A newer feature that dropped recently is anyone, including yourself, can filter your timeline based on one or more badges you have associated with your profile.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--15BZPWNt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3odk7f4cmxm45bcq2np7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--15BZPWNt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3odk7f4cmxm45bcq2np7.png" alt="Polywork, filtering your timeline"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is an excellent way for folks to surface certain kinds of work you've done. For example, here's my timeline filtered on the &lt;em&gt;Twitch Streamer&lt;/em&gt; badge.&lt;/p&gt;

&lt;p&gt;Note that it also filters reposts on your timeline associated with the badge you filtered on.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oKkvX5Yw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/weeqa2jg82w1mha7jxe2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oKkvX5Yw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/weeqa2jg82w1mha7jxe2.png" alt="Polywork, filtering timeline with badge"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-a-custom-domain"&gt;
  &lt;/a&gt;
  Setting up a Custom Domain
&lt;/h2&gt;

&lt;p&gt;Another great feature about your profile is you can use a custom domain. Setting a custom domain is available from your profile settings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ymxVgmVb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2cttxmz8boembroh3ypb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ymxVgmVb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2cttxmz8boembroh3ypb.png" alt="Polywork, set up a custom domain"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The steps are pretty straightforward. When I initially set things up, I ran into some issues, but improvements to using a custom domain rolled out the following week and then it was smooth sailing setting things up &lt;a href="https://timeline.iamdeveloper.com"&gt;timeline.iamdeveloper.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contact-preferences"&gt;
  &lt;/a&gt;
  Contact Preferences
&lt;/h2&gt;

&lt;p&gt;Like other professional and social media applications, you can also contact someone on Polywork. To contact them, you need to specify a reason from the available options they‚Äôve provided.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IPWZtHQ1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xhltgezs5akylwspnvyi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IPWZtHQ1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xhltgezs5akylwspnvyi.png" alt="Polywork contact preferences modal"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For example, my coworker &lt;a href="https://www.polywork.com/cgorton"&gt;Christina&lt;/a&gt; is open to being contacted about speaking at events. Will this stop useless messages like "hi"? Perhaps. If anything, it will give someone pause before contacting an individual on Polywork.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#multiverse"&gt;
  &lt;/a&gt;
  Multiverse
&lt;/h2&gt;

&lt;p&gt;Think of the Mulitiverse (MV) as a one-stop shop for searching for members of Polywork and work-related highlights associated with badges.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--41Eiqhxg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dmvsd3klg67x8ty5rj3w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--41Eiqhxg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dmvsd3klg67x8ty5rj3w.png" alt="Polywork multiverse page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are several sections in the MV: featured members, trending badges, folks who have recently joined, what's everyone doing, and possibilities.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It‚Äôs unclear to me what the Possibilities section is. Maybe it‚Äôs for like-minded folks or folks that you may find interesting based on some algorithm?&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#space-station"&gt;
  &lt;/a&gt;
  Space Station
&lt;/h2&gt;

&lt;p&gt;As mentioned in the Contact Preferences section above, folks can be open to collaborating on specific topics, e.g. People available for live streaming. BTW, I am available for &lt;a href="https://www.iamdeveloper.com/pages/live-coding/"&gt;live streaming&lt;/a&gt;. üòé&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ml23sFcJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prvxn4um6ka0pfs3owmg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ml23sFcJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prvxn4um6ka0pfs3owmg.png" alt="Polywork space station page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instead of searching for someone then contacting them to see what they're available to collaborate on, Space Station groups folks by the topics they're open to collaborating on to make it easier for you to contact someone for a specific topic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#improvements"&gt;
  &lt;/a&gt;
  Improvements
&lt;/h2&gt;

&lt;p&gt;The Polywork team is constantly rolling out improvements. If you find a bug or have a suggestion for a feature or improvement, submit an issue. It is available from your profile menu.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LFM3unxK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lj7r7de2xg0s4z7eesf4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LFM3unxK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lj7r7de2xg0s4z7eesf4.png" alt="Submit an issue to Polywork"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;I've already submitted some suggestions and improvements myself.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Polywork makes so much sense to me&lt;/strong&gt; for exhibiting my work. I &lt;a href="https://www.polywork.com/nickytonline?badges%5B%5D=Open+Source"&gt;work in and contribute to open source&lt;/a&gt;, I &lt;a href="https://www.polywork.com/nickytonline/highlights/af1934a2-8130-457c-9734-3cc6c5e446b3"&gt;stream on Twitch&lt;/a&gt;, have &lt;a href="https://www.polywork.com/nickytonline/highlights/2c5da615-0aef-4494-bc63-f76da0ac3402"&gt;given talks&lt;/a&gt;, been on podcasts, &lt;a href="https://www.polywork.com/nickytonline/highlights/a6be8320-1f80-4184-a38f-3dc9cba1eca0"&gt;built a skating rink&lt;/a&gt;, all the things! &lt;/p&gt;

&lt;p&gt;It's early days for Polywork, but the future is bright. &lt;strong&gt;If you're looking to showcase your work, consider Polywork.&lt;/strong&gt; ‚ú®  Once you get access, give me a follow at &lt;a href="https://timeline.iamdeveloper.com"&gt;timeline.iamdeveloper.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I don't have an infinite supply, but if you need an invite code, &lt;a href="https://twitter.com/nickytonline"&gt;drop me a DM on Twitter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>review</category>
      <category>career</category>
      <category>polywork</category>
    </item>
    <item>
      <title>Gotchas when converting strings to arrays in JS</title>
      <author>lionel-rowe</author>
      <pubDate>Wed, 18 Aug 2021 19:44:47 +0000</pubDate>
      <link>https://dev.to/lionelrowe/gotchas-when-converting-strings-to-arrays-in-js-1n31</link>
      <guid>https://dev.to/lionelrowe/gotchas-when-converting-strings-to-arrays-in-js-1n31</guid>
      <description>&lt;p&gt;This is a response to &lt;a class="mentioned-user" href="https://dev.to/antoomartini"&gt;@antoomartini&lt;/a&gt;
 's awesome article here, where she describes 4 ways to turn a string into an array:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/antoomartini" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YhYfMRpb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--6o4nJsbe--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/581836/90503238-0843-4393-bc4e-fb2e0cbca6d1.jpg" alt="antoomartini"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/antoomartini/4-ways-to-convert-a-string-to-an-array-in-javascript-i97" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;4 ways to convert a string to an array in Javascript &lt;/h2&gt;
      &lt;h3&gt;Maria Antonella ü¶ã „Éª Aug 18 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;However, not all of the 4 ways work in the same way. We can see this when we try to use a string such as &lt;code&gt;'üí©'&lt;/code&gt;, rather than a Latin-alphabet string:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;üí©&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// ["\ud83d", "\udca9"]&lt;/span&gt;

&lt;span class="p"&gt;;[...&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// ["üí©"]&lt;/span&gt;

&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// ["üí©"]&lt;/span&gt;

&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;([],&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// ["\ud83d", "\udca9"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#why-the-difference"&gt;
  &lt;/a&gt;
  Why the difference?
&lt;/h2&gt;

&lt;p&gt;To understand the difference, let's take a look at how each way works in turn.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stringsplit"&gt;
  &lt;/a&gt;
  String#split
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;String#split&lt;/code&gt; matches and splits on &lt;em&gt;16-bit units&lt;/em&gt;, as encoded in UTF-16, the internal string representation that JavaScript uses.&lt;/p&gt;

&lt;p&gt;You can find what these units are by using string index notation, and you can count them using &lt;code&gt;String#length&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ab&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// "a"&lt;/span&gt;
&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ab&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// "b"&lt;/span&gt;
&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ab&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="c1"&gt;// 2&lt;/span&gt;

&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;üí©&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// "\ud83d"&lt;/span&gt;
&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;üí©&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// "\udca9"&lt;/span&gt;
&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;üí©&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="c1"&gt;// 2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, something weird is going here. That's because emojis, and various other characters, take up &lt;em&gt;two&lt;/em&gt; 16-bit units (for a total of 32 bits) instead of just one.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#objectassign"&gt;
  &lt;/a&gt;
  Object.assign
&lt;/h3&gt;

&lt;p&gt;How does &lt;code&gt;Object.assign&lt;/code&gt; work?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;strong&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/strong&gt; method copies all &lt;a href="/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable"&gt;enumerable&lt;/a&gt; &lt;a href="/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty"&gt;own properties&lt;/a&gt; from one or more &lt;em&gt;source objects&lt;/em&gt; to a &lt;em&gt;target object&lt;/em&gt;. It returns the modified target object. (Source: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign"&gt;MDN&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this case, &lt;code&gt;source&lt;/code&gt; is &lt;code&gt;'üí©'&lt;/code&gt;, and &lt;code&gt;target&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt;. &lt;code&gt;Object.assign&lt;/code&gt; therefore assigns &lt;code&gt;'üí©'&lt;/code&gt;'s property &lt;code&gt;0&lt;/code&gt; to the array's property &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;'üí©'&lt;/code&gt;'s property &lt;code&gt;1&lt;/code&gt; to the array's property &lt;code&gt;1&lt;/code&gt;. As a result, we get the same result as with &lt;code&gt;String#split&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#spread"&gt;
  &lt;/a&gt;
  [...spread]
&lt;/h3&gt;

&lt;p&gt;The spread operator (&lt;code&gt;...&lt;/code&gt;) was introduced in ES6. With the introduction of ES6 features, JavaScript started getting smarter with its Unicode handling.&lt;/p&gt;

&lt;p&gt;Instead of assigning properties, the spread operator instead &lt;em&gt;iterates&lt;/em&gt; over its operand ‚Äî in this case, our string. String iteration is done based on Unicode codepoints, rather than individual 16-bit units. Our friendly poop emoji is only a single Unicode codepoint, so we get the result we want.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#arrayfrom"&gt;
  &lt;/a&gt;
  Array.from
&lt;/h3&gt;

&lt;p&gt;As with spread notation, &lt;code&gt;Array.from&lt;/code&gt; was introduced in ES6. It iterates over the argument passed to it, so again, we get the expected result.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#caveats"&gt;
  &lt;/a&gt;
  Caveats
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Array.from&lt;/code&gt; and spread notation work great for Unicode codepoints, but they still won't cover every situation. Sometimes, what &lt;em&gt;looks&lt;/em&gt; like a single glyph is actually multiple Unicode codepoints. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;str1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;l«ú&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;str2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;NFD&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// "luÃàÃÄ", looks exactly the same, but composed with combining diacritics&lt;/span&gt;

&lt;span class="p"&gt;;[...&lt;/span&gt;&lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// ["l", "«ú"]&lt;/span&gt;
&lt;span class="p"&gt;;[...&lt;/span&gt;&lt;span class="nx"&gt;str2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// ["l", "u", "Ãà", "ÃÄ"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or, for another emoji-based example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;emoji&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;üë©üèø‚Äçüíª&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="p"&gt;;[...&lt;/span&gt;&lt;span class="nx"&gt;emoji&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// ["üë©", "üèø", "‚Äç", "üíª"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, it's because the emoji is actually composed of 4 Unicode codepoints, representing &lt;code&gt;woman&lt;/code&gt;, &lt;code&gt;skin tone 6&lt;/code&gt;, &lt;code&gt;zero-width joiner&lt;/code&gt;, and &lt;code&gt;computer&lt;/code&gt; respectively.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further reading
&lt;/h2&gt;

&lt;p&gt;For a much deeper dive, I highly recommend Matthias Bynens's excellent article &lt;em&gt;&lt;a href="https://mathiasbynens.be/notes/javascript-unicode"&gt;JavaScript has a Unicode problem&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;




&lt;p&gt;Thanks for reading! What are your favorite Unicode tips and tricks or JavaScript Unicode gotchas?&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>unicode</category>
    </item>
    <item>
      <title>What tools do you guys use for managing your tasks/goals</title>
      <author>Nishant Mittal</author>
      <pubDate>Wed, 18 Aug 2021 19:25:09 +0000</pubDate>
      <link>https://dev.to/nishantwrp/what-tools-do-you-guys-use-for-managing-your-tasks-1kf8</link>
      <guid>https://dev.to/nishantwrp/what-tools-do-you-guys-use-for-managing-your-tasks-1kf8</guid>
      <description>&lt;p&gt;As the title says, i am intersted in knowing what all tools do you guys use for managing everything like daily tasks, project specs, plans, professional goals, long-term (yearly) goals, kanban baords maybe, etc. &lt;/p&gt;

&lt;p&gt;Currently, I use two tools&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt; - To manage a list of long-term goals, what I want to do focus on for the next couple of months etc.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.joplinapp.org/"&gt;Joplin&lt;/a&gt; - For managing daily tasks. &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>discuss</category>
      <category>help</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>How to handle your JWT in your applications ?</title>
      <author>Chandelier Axel</author>
      <pubDate>Wed, 18 Aug 2021 19:19:25 +0000</pubDate>
      <link>https://dev.to/chandelieraxel/how-to-handle-your-jwt-in-your-applications-23d9</link>
      <guid>https://dev.to/chandelieraxel/how-to-handle-your-jwt-in-your-applications-23d9</guid>
      <description>&lt;p&gt;This question is a sensitive subject all over the internet. Wherever you'll look at, peoples tend to be really dogmatic. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;- Don't store it in Local Storage !!! Don't you know about XSS attacks ?!&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- Please stop believing that storing your JWT in an HttpOnly cookie is secure........ You're still exposed to XSRF attacks.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You get the idea.&lt;/p&gt;

&lt;p&gt;Long story short, I was looking for informations to build a robust authentication system myself. I did know nothing about the attacks quoted above, and of course, how to protect my application.&lt;/p&gt;

&lt;p&gt;I'll do my best to summarize what I learnt, what are the different techniques and their fallbacks. This article will also try to be as opinion free as possible.&lt;/p&gt;

&lt;p&gt;Without further ado, let's dive in.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-the-problem-"&gt;
  &lt;/a&gt;
  What is the problem ?
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Disclaimer: I'll purposely fly through what a JWT is, to focus on the security part. You may find information on their dedicated &lt;a href="https://jwt.io/"&gt;website&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Because there's one.&lt;/p&gt;

&lt;p&gt;Let's assume that you're building a new website, and you're on the authentication part. After some research, you find out that the go-to (as time of writing this) is using a JWT, a &lt;strong&gt;J&lt;/strong&gt;son &lt;strong&gt;W&lt;/strong&gt;eb &lt;strong&gt;T&lt;/strong&gt;oken.&lt;/p&gt;

&lt;p&gt;A JWT is basically an encoded string that will contain some basic informations (anything you want). Your server will send it back to you when you'll do your login process, and your client will need to supply it on any further requests where authentication is needed in order to be accepted by the server.&lt;br&gt;
In short, a JWT is a way to identify your user as a legitimate and authenticated one towards your server.&lt;/p&gt;

&lt;p&gt;So .. If we need to supply the JWT on any further request that need authentication, where do we tore it ?&lt;/p&gt;

&lt;p&gt;This is where things get interesting.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#local-storage"&gt;
  &lt;/a&gt;
  Local Storage
&lt;/h2&gt;

&lt;p&gt;My first idea, like a lot of people I believe, was to store my newly obtained JWT in the browser Local Storage. Things would be as simple as :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jwt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;jwtYouReceive&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And whenever we need it back :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jwt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Despite beign the easiest way to store our JWT, it turns out that this is, by far, the most insecure way.&lt;br&gt;
By nature, everything stored within the localStorage is accessible through Javascript code. It means that, if &lt;em&gt;somehow&lt;/em&gt; a hacker could execute some JS code in our website, he could steal the JWT, and any of his requests would be accepted as an authenticated user. A way to do so is through an &lt;strong&gt;XSS&lt;/strong&gt; attack.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#xss-attack"&gt;
  &lt;/a&gt;
  XSS Attack
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Cross Site Scripting&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Basically, an XSS attack happen when some undesirable code is being executed within your website. This can be as gentle as a console.log, but could go as far as stealing informations, our JWT for example.&lt;/p&gt;

&lt;p&gt;Let's just take a very contrived example to understand it better.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--20LbWVYr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bxztxnq37fg6m9uhhvp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--20LbWVYr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bxztxnq37fg6m9uhhvp.png" alt="Unsecure app schema"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pretty simple, right ? Now here's the catch, what is sent through the form is not being &lt;strong&gt;sanitized&lt;/strong&gt; (meaning any unsecured or unrelated part of the data is removed or escaped), and so an hacker could insert a harmful script.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    I juste created an amazing blog post !! 
    &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;functionToReadYourJWTandSendItToMe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt; 
    Please, accept it !
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This get inserted into the database, and when the admin open is page to see the preview of the blog post, the script will be hidden and being executed, succesfully stealing the admin JWT !&lt;/p&gt;

&lt;p&gt;And if the admin accept the blog post, and it get displayed on the website homepage, the script will execute for every visitor that will open the page .. Stealing everyone JWT !&lt;/p&gt;

&lt;p&gt;Here's a recap :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sNai6W5Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o3mi3tdgh95joq15393b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sNai6W5Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o3mi3tdgh95joq15393b.png" alt="Unsecured app with hacker"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Storing the JWT in localStorage &lt;strong&gt;without&lt;/strong&gt; the proper defences against XSS can be dramatic, this left the hacker with a potential large area of actions all over your website to try to find a breach.&lt;br&gt;
The developpers now have the responsability to check for every possible breach and be mindful when developing new features.&lt;/p&gt;

&lt;p&gt;There are ways to secure our app to XSS, such as sanitizing everything that would go into the database.&lt;/p&gt;

&lt;p&gt;An easy to implement, but somewhat risky solution.&lt;/p&gt;

&lt;p&gt;Second solution.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#httponly-cookie"&gt;
  &lt;/a&gt;
  HttpOnly Cookie
&lt;/h2&gt;

&lt;p&gt;While digging further in order to find informations about localStorage, I've seen a lot of peoples recommending to store the JWT into an &lt;strong&gt;HttpOnly&lt;/strong&gt; Cookie. If you're not confident what a cookie is, feel free to go to the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies"&gt;MDN&lt;/a&gt; documentation.&lt;/p&gt;

&lt;p&gt;Be mindful that the &lt;strong&gt;HttpOnly&lt;/strong&gt; part is the most important one. A cookie without the HttpOnly attribute could be read by some JS code, sending us back to the XSS problem.&lt;/p&gt;

&lt;p&gt;By applying the attribute, we restrict the use of this cookie for HTTP requests only, securing us completely from XSS.&lt;/p&gt;

&lt;p&gt;But .. We're now prone to XSRF attacks.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#xsrf-attack"&gt;
  &lt;/a&gt;
  XSRF Attack
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Cross Site Request Forgery&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As the name &lt;em&gt;may&lt;/em&gt; imply, the goal of this attack is to create a request on a malicious website to be executed on the targeted website. Let's take a real world example to understand it better.&lt;/p&gt;

&lt;p&gt;You have your website open and you're logged in. Your JWT is securely stored into an HttpOnly cookie, meaning that every request you send to your server will automatically include the cookie, and so your JWT.&lt;/p&gt;

&lt;p&gt;As every application with a user account, you have the possibility to change some informations by filling a form. This will send to your server a request, it'll verify your JWT, and allow the changes.&lt;/p&gt;

&lt;p&gt;As you navigate to it, you received an email. You open a new tab, open the email and click on the link.&lt;/p&gt;

&lt;p&gt;‚ò†Ô∏è The website you lend on have a script that execute as soon as you open the page. Prepared in advance, it execute a request on &lt;strong&gt;your&lt;/strong&gt; website. ‚ò†Ô∏è&lt;br&gt;
How ? Well, the hacker could have created an account, open the dev tools and saw what was the endpoint to your server.&lt;/p&gt;

&lt;p&gt;Basically the hacker send the same request as you would done, but he control the informations. Your username has been changed, your profile picture aswell .. Maybe even your password.&lt;/p&gt;

&lt;p&gt;The most amazing part about this attack is that the hacker doesn't have to recover the JWT, it's &lt;strong&gt;automatically&lt;/strong&gt; included within the HTTP request.&lt;/p&gt;



&lt;p&gt;There are ways to secure your website from such attacks, which we won't cover here, but most of them tend to be prone to .. XSS.&lt;/p&gt;

&lt;p&gt;Third solution.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#storing-it-into-memory"&gt;
  &lt;/a&gt;
  Storing it into memory
&lt;/h2&gt;

&lt;p&gt;Maybe even a simplier solution than localStorage, the goal is fairly simple. You attribute the JWT to a variable, and make it available for your needs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;jwt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This variable is impossible to reach for a hacker, neither from an XSS or XSRF attacks.&lt;/p&gt;

&lt;p&gt;Such a simple solution as one serious downside : whenever your user will close your website, the next time he'll come back, he'll need to login again, creating a very poor user experience.&lt;/p&gt;

&lt;p&gt;Just like the other solutions, there are ways to mitigate the downsides.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#having-a-refreshtoken"&gt;
  &lt;/a&gt;
  Having a refresh_token
&lt;/h3&gt;

&lt;p&gt;When you request your initial JWT, the plan is to get an extra token, a &lt;strong&gt;refresh_token&lt;/strong&gt; token (which is basically a JWT that will live longer). This token will be saved in the browser within an HttpOnly cookie, aswell as on the server within a database. His goal is to keep the user login without him having to go through the login process everytime your JWT expire, such a process is called a &lt;strong&gt;silent refresh&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We can actually use this behavior to &lt;em&gt;pretend&lt;/em&gt; the user session is being persisted. As the refresh_token is stored within the cookies, we can use it across sessions. When our website boot-up, we will trigger a call to a particular endpoint, this endpoint will return a JWT only if the refresh_token is still valid.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;- How is this secure if the refresh_token is a JWT too ?&lt;/em&gt;&lt;br&gt;
The refresh_token will &lt;strong&gt;only&lt;/strong&gt; be used and &lt;strong&gt;accepted&lt;/strong&gt; in the particular endpoint that is dedicated to him. Trying to access the rest of the API with it will fail.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;- But a hacker could use a XSRF, right ?&lt;/em&gt;&lt;br&gt;
Yes but he won't be able to see the JWT that is returned.&lt;/p&gt;

&lt;p&gt;This method leads to a lot of boilerplate and overhead.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up
&lt;/h2&gt;

&lt;p&gt;None of the solutions above are bullet-proof, there's always a way for a brilliant attacker to get in. Some solutions are easier to implement, some require more setup but offer an arguably better overall "protection".&lt;/p&gt;

&lt;p&gt;Pick what suit you the best.&lt;/p&gt;

&lt;p&gt;I hope it helped you to understand this incredibly dense topic as much as I did writing this.&lt;/p&gt;

&lt;p&gt;You can find the original article on the &lt;a href="https://othrys.dev/author/axel/"&gt;Othrys website&lt;/a&gt; and you can follow my &lt;a href="https://twitter.com/ChandelierAxel"&gt;Twitter&lt;/a&gt; or tag me here to discuss about this article. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>100daysofcode</category>
      <category>security</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>Best VS Code¬†setup</title>
      <author>Anatolii</author>
      <pubDate>Wed, 18 Aug 2021 19:18:44 +0000</pubDate>
      <link>https://dev.to/pas8/best-vs-code-setup-20fe</link>
      <guid>https://dev.to/pas8/best-vs-code-setup-20fe</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;So I have been spending a lot ( so much ) time creating the best coding setup, this story is intended for Javascript or Typescript dev.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#extensions-as-separate%C2%A0parts"&gt;
  &lt;/a&gt;
  Extensions as separate¬†parts
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#1-color%C2%A0theme"&gt;
  &lt;/a&gt;
  1. Color¬†Theme
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9i880gux--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g98fumokpyenjguj9rcf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9i880gux--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g98fumokpyenjguj9rcf.png" alt="Alt Text"&gt;&lt;/a&gt; So this color theme is free to use(something u will need to click to close button ), but you will have the best opportunity to make your coding process so lovely &lt;a href="https://monokai.pro/vscode"&gt;Monokai Pro&lt;/a&gt; (spectrum palette is my choice)&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-font"&gt;
  &lt;/a&gt;
  2. Font
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_a7FDJ8k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kdo0exa2o126ie8x82kd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_a7FDJ8k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kdo0exa2o126ie8x82kd.png" alt="Alt Text"&gt;&lt;/a&gt; This part is so important, but I need to warn you when you will start using this font, after that, you will not able to use another one because this font is almost perfect ( this font don't have ligatures), but don't worry I added to this font ligatures, and in the near future will write a story about it so you can buy in &lt;a href="https://www.typography.com/fonts/operator/styles"&gt;this site&lt;/a&gt; or download for free from some repo in github &lt;a href="https://github.com/keyding/Operator-Mono/tree/master/Fonts"&gt;Operator mono&lt;/a&gt; (medium is my choice)&lt;br&gt;
 &lt;strong&gt;‚ú≥important&lt;/strong&gt; to better coding effect additionally install italic variant, because Monokai Pro color theme supports multi types of fonts&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#3-icon%C2%A0theme"&gt;
  &lt;/a&gt;
  3. Icon¬†theme
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MLdKmVq0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wuauveo1ine95rq6a14s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MLdKmVq0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wuauveo1ine95rq6a14s.png" alt="Alt Text"&gt;&lt;/a&gt; The most beautiful icon theme (at this moment, which I found) is &lt;a href="https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme"&gt;Material Icon Theme&lt;/a&gt;. I think 34 million downloads something matter)&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#4product-icon%C2%A0theme"&gt;
  &lt;/a&gt;
  4.Product icon¬†theme
&lt;/h4&gt;

&lt;p&gt;At least default icons are not bad, but personally, I more prefer Carbon Product Icons or you can try Fluent Icons.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Final view of these four setups&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eS-E2jcP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hamcd0rdrcekogpeuxft.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eS-E2jcP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hamcd0rdrcekogpeuxft.png" alt="Alt Text"&gt;&lt;/a&gt; (random project as example)&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#main-extensions"&gt;
  &lt;/a&gt;
  Main Extensions
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;At first, extensions which I use everywhere&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=alefragnani.project-manager"&gt;Project Manager&lt;/a&gt;,&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WkbAC9WP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5mwamtpgxucrtflyaj9.png" alt="Alt Text"&gt; this extension gives u the opportunity to easily open your projects with paths which you will set up, it will be useful when you need some part of code in some project, and with this extension, you can easily navigate.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow"&gt;Indent Rainbow&lt;/a&gt;,&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vb_Dbm17--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rremve6ruuj02mi64ec.png" alt="Alt Text"&gt; in this img, not the best ilustration, but I totaly recommend use this extension, this effect I setuped in &lt;code&gt;setting.json&lt;/code&gt;  with this config &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dIR1T-2y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rf0dd48lna1ckufjsip.png" alt="Alt Text"&gt; just changing alpha of black color, can be custom, for sure.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=ParthR2031.colorful-comments"&gt;Colorful Comments&lt;/a&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cLYo_V_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ecc1d7tp7djn14sxewc0.png" alt="Alt Text"&gt;this extension will help you create more human-friendly comments in your code.
With this Extension, you will be able to categorize your code by a special color. Also, you can manually change colors in settings, and if you want u can add a background color.
And here u can see integration with italic font type of Operator mono font.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=wmaurer.change-case"&gt;Change case&lt;/a&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xqaylgIO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1zu9sqf2bvcrsaggb1q7.png" alt="Alt Text"&gt; give you the opportunity to quickly change the case (camelCase, CONSTANT_CASE, snake_case, etc) of the current selection or current word. So useful with a custom keyboard shortcut or Shift + Ctrl + P.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=BriteSnow.vscode-toggle-quotes"&gt;Save all&lt;/a&gt;,  if you working on a big project as always if u running a server with nextjs for example, everyone knows that saving the file by open, will at any time re-build it, so this extension partially resolves this problem.&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3WaJus5X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ge5yjaomi7f9xr1sobf.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=BriteSnow.vscode-toggle-quotes"&gt;Toggle Quotes&lt;/a&gt;, with &lt;code&gt;Ctrl&lt;/code&gt; and some selection you can&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;easily change quotes type from '' to "" or  ``
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer-2"&gt;Bracket Pair Colorizer 2&lt;/a&gt;, with this config&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bracket-pair-colorizer-2.colors&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Gold&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Orchid&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;LightSkyBlue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bracket-pair-colorizer-2.colorMode&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Independent&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bracket-pair-colorizer-2.highlightActiveScope&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bracket-pair-colorizer-2.showBracketsInGutter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=kisstkondoros.vscode-gutter-preview"&gt;Image preview&lt;/a&gt;, the name says everything for itself, &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ykC9Mves--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ykcdumsshjdv1e54uvp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ykC9Mves--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ykcdumsshjdv1e54uvp.png" alt="Alt Text"&gt;&lt;/a&gt; near a number of lines you will see a small preview of the image.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=vincaslt.highlight-matching-tag"&gt;Highlight Matching Tag&lt;/a&gt;, &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8DQSoLnO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pd7g99bgpmw32pse558w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8DQSoLnO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pd7g99bgpmw32pse558w.png" alt="PzVAkYdU_o"&gt;&lt;/a&gt; small but useful tag highlighting extensions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense"&gt;Path Intellisense&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QXlCAys_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yd77zjnwgswlxh68pn7j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QXlCAys_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yd77zjnwgswlxh68pn7j.png" alt="Alt Text"&gt;&lt;/a&gt;the must-have extensions that autocomplete filenames.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#for-database%C2%A0control"&gt;
  &lt;/a&gt;
  For database¬†control
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=jsayol.firebase-explorer"&gt;Firebase Explorer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=mongodb.mongodb-vscode"&gt;MongoDB for VS code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#for-rest%C2%A0process"&gt;
  &lt;/a&gt;
  For REST¬†process
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=humao.rest-client"&gt;REST Client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=rangav.vscode-thunder-client"&gt;Thunder Client&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#other-extensions"&gt;
  &lt;/a&gt;
  Other extensions
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=Ho-Wan.vscode-trello-viewer"&gt;Trello Viewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ChakrounAnas.turbo-console-log"&gt;Turbo Console Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree"&gt;Todo Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=OfHumanBondage.react-proptypes-intellisense"&gt;React PropTypes Intellisense&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=wk-j.vscode-rainbow-string"&gt;Rainbow String&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=pnp.polacode"&gt;Polacode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost"&gt;Import cost&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=sleistner.vscode-fileutils"&gt;File Utils&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=jzmstrjp.color-the-tag-name"&gt;Color the tag name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=alefragnani.Bookmarks"&gt;Bookmarks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=bibhasdn.random-string-password-generator"&gt;Random String Generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#also-additional-extensions-which-everybody-knowns"&gt;
  &lt;/a&gt;
  Also, additional extensions which everybody knowns
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag"&gt;Auto Close Tag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag"&gt;Auto Rename Tag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=VisualStudioExptTeam.vscodeintellicode"&gt;Visual Studio IntelliCode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode"&gt;Prettier Formatter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens"&gt;GitLens&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;For sure you can use all extensions which I describe, but most likely it will so laggy, so better practice (if you use this extension not often) is to use the extension only when you need it. And yeah, I know that everybody knows that, but probably this story will useful for somebody.&lt;/p&gt;

&lt;p&gt;Thanks for reading, I so appreciate this ‚ô•.&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>javascript</category>
      <category>typescript</category>
      <category>react</category>
    </item>
    <item>
      <title>NativeScript vs. React Native</title>
      <author>Matt Angelosanto</author>
      <pubDate>Wed, 18 Aug 2021 19:05:41 +0000</pubDate>
      <link>https://dev.to/logrocket/nativescript-vs-react-native-1c7l</link>
      <guid>https://dev.to/logrocket/nativescript-vs-react-native-1c7l</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/ejiroasiuwhu/"&gt;Ejiro Asiuwhu&lt;/a&gt;&lt;/strong&gt; ‚úèÔ∏è&lt;/p&gt;

&lt;p&gt;Building cross-platform mobile apps using JavaScript has been a game-changer for JavaScript developers. Not only can developers build apps that run on the web, but they can also build native apps for Android and iOS that run with JavaScript.&lt;/p&gt;

&lt;p&gt;Frameworks like React Native and NativeScript make building elegant, efficient, production-ready, and scalable mobile apps with JavaScript easy. But, which one is better for developers?&lt;/p&gt;

&lt;p&gt;Before we compare both technologies, we must understand the problems both uniquely solve and both their visions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-nativescript-and-react-native"&gt;
  &lt;/a&gt;
  What is NativeScript and React Native?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://nativescript.org/"&gt;NativeScript's vision&lt;/a&gt; is to ‚ÄúLiberate your development by using platform APIs directly without leaving your [love] of JavaScript.‚Äù Think of NativeScript as the go-to tool when building cross-platform mobile apps with JavaScript in a framework-agnostic team.&lt;/p&gt;

&lt;p&gt;So, whether your JavaScript framework of choice is Vue, React, Svelte, Angular, or even Vanilla JavaScript, NativeScript covers it!&lt;/p&gt;

&lt;p&gt;React Native, on the other hand, is a JavaScript library created by Facebook that builds native mobile apps using React, meaning we can‚Äôt build mobile apps with React Native using Vue, Angular, or any other JavaScript framework out there.&lt;/p&gt;

&lt;p&gt;This does not imply that all React Native apps on the App or Play store are built with pure JavaScript because there are cases when developers must write native code with Swift/Objective-C or Java/Kotlin to access Native APIs not available to JavaScript by default.&lt;/p&gt;

&lt;p&gt;With this in mind, let‚Äôs see how React Native compares to NativeScript, and by the end of this post, you should be able to choose the best framework for you or your team when building mobile apps with JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#community-support"&gt;
  &lt;/a&gt;
  Community support
&lt;/h2&gt;

&lt;p&gt;Community support is one of the most important factors to consider when choosing the right framework. It may seem surprising, but NativeScript has been around longer than React Native. &lt;a href="https://www.telerik.com/blogs/announcing-nativescript---cross-platform-framework-for-building-native-mobile-applications"&gt;NativeScript's initial release was in 2014&lt;/a&gt;, while &lt;a href="https://engineering.fb.com/2015/03/26/android/react-native-bringing-modern-web-techniques-to-mobile/"&gt;React Native was initially released on March 26, 2015&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While the difference of one year may seem like an advantage, the growth and adoption rate of React Native is much higher than NativeScript. As of this publish date, &lt;a href="https://www.npmjs.com/package/react-native"&gt;React Native records around 533k weekly downloads on npm&lt;/a&gt;, while &lt;a href="https://www.npmjs.com/package/@nativescript/core"&gt;NativeScript records just under 7k weekly downloads&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When it comes to contributors, &lt;a href="https://github.com/facebook/react-native/graphs/contributors"&gt;React Native handily wins with over 2,200 contributors on GitHub&lt;/a&gt; while &lt;a href="https://github.com/NativeScript/NativeScript/graphs/contributors"&gt;NativeScript has 208 contributors&lt;/a&gt;. And, &lt;a href="https://github.com/NativeScript/NativeScript/network/dependents?package_id=UGFja2FnZS02NDc2NDYwNDc%3D"&gt;NativeScript is used by over 3.5k developers&lt;/a&gt; while &lt;a href="https://github.com/facebook/react-native/network/dependents?package_id=UGFja2FnZS00OTM3MDY0OTA%3D"&gt;React Native is used by just under 720k developers on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This wide margin showcases the developer community‚Äôs wide adoption of React Native and impacts the number of third-party libraries, bug fixes, and answers on StackOverflow.&lt;/p&gt;

&lt;p&gt;Community support is also important because it determines the number of resources available to learn about each framework, such as blog posts, paid and free courses, ebooks, and YouTube videos.&lt;/p&gt;

&lt;p&gt;When it comes to community support, React Native takes the win as most popular.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-a-react-native-project"&gt;
  &lt;/a&gt;
  Setting up a React Native project
&lt;/h3&gt;

&lt;p&gt;Getting started and setting up a React Native project can be challenging for web developers who are new to mobile development. However, thanks to &lt;a href="https://blog.logrocket.com/getting-started-with-react-native-and-expo-sdk/"&gt;Expo, getting started with React Native is a breeze&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While &lt;a href="https://docs.expo.dev/introduction/why-not-expo/#limitations-of-the-managed-workflow"&gt;Expo does have some limitations&lt;/a&gt;, these limitations don‚Äôt affect most apps built using Expo.&lt;/p&gt;

&lt;p&gt;Developers can also use &lt;a href="https://expo.dev/client"&gt;Expo Go, a mobile app built by the Expo team&lt;/a&gt; to run React Native on a physical Android and iOS device by scanning the QR code to install an app on a physical device.&lt;/p&gt;

&lt;p&gt;Getting started with React Native is easier for developers coming from a React background. But, if your main JavaScript of choice is Angular, for example, the learning curve can be steep.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-a-nativescript-project"&gt;
  &lt;/a&gt;
  Setting up a NativeScript project
&lt;/h3&gt;

&lt;p&gt;Getting started with NativeScript is fairly easy with the &lt;a href="https://github.com/NativeScript/nativescript-app-templates"&gt;official templates when bootstrapping a NativeScript app&lt;/a&gt;. You can &lt;a href="https://docs.nativescript.org/introduction.html#drawer"&gt;initialize a NativeScript app with a side drawer&lt;/a&gt; already setup by running the following command in the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;create&lt;/span&gt; &lt;span class="nx"&gt;myNsApp&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;nativescript&lt;/span&gt;&lt;span class="sr"&gt;/template-drawer-navigatio&lt;/span&gt;&lt;span class="err"&gt;n
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The great thing about NativeScript is that it is framework agnostic, meaning you can build mobile apps with NativeScript using a JavaScript framework like Angular, Vue, Svelte, React, or even Vanilla JavaScript.&lt;/p&gt;

&lt;p&gt;However, NativeScript syncs best with Angular more than any other framework because the NativeScript team works with Google to ensure both tools work seamlessly when building mobile apps.&lt;/p&gt;

&lt;p&gt;By using the &lt;a href="https://play.google.com/store/apps/details?id=org.nativescript.play"&gt;NativeScript Playground app&lt;/a&gt;, you can run your apps on a physical Android and iOS device, just like Expo Go.&lt;/p&gt;

&lt;p&gt;Overall, the Expo Go app gives a better developer experience than NativeScript playground, so that‚Äôs a plus for developers looking for a simpler setup experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hot-reload"&gt;
  &lt;/a&gt;
  Hot reload
&lt;/h2&gt;

&lt;p&gt;The hot reload feature is very important in mobile app development because it drastically improves developer productivity. No developer wants to wait longer than a minute to see every little change injected into their mobile app during the development phase.&lt;/p&gt;

&lt;p&gt;In this section, we‚Äôll see how both React Native and NativeScript handle hot reload.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-native-fast-refresh"&gt;
  &lt;/a&gt;
  React Native fast refresh
&lt;/h3&gt;

&lt;p&gt;In &lt;a href="https://reactnative.dev/docs/fast-refresh"&gt;version 0.61 of React Native, the team announced a feature called fast refresh&lt;/a&gt;. Fast refresh unified the already existing live reloading feature and hot reloading features in previous React Native versions.&lt;/p&gt;

&lt;p&gt;With fast refresh enabled, you can make changes to your app and see the changes almost instantaneously. By default, this feature preserves local state in functional components but not in class components.&lt;/p&gt;

&lt;p&gt;You can also call fast refresh manually using the &lt;code&gt;// @refresh reset&lt;/code&gt; directive in your React Native component, forcing the component to remount.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nativescript-hot-module-replacement"&gt;
  &lt;/a&gt;
  NativeScript Hot Module Replacement
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://nativescript.org/blog/nativescript-5.3-hot-module-replacement-officially-supported-and-more/"&gt;NativeScript‚Äôs Hot Module Replacement (HMR) feature was released in NativeScript 5.3&lt;/a&gt;. It supports Visual Studio Code debugging, letting developers use the debugger even while the HMR feature is still running.&lt;/p&gt;

&lt;p&gt;It also has full support for SASS files, which means when you make changes in a &lt;code&gt;.scss&lt;/code&gt; or &lt;code&gt;.sass&lt;/code&gt; file in your app, they reflect in your app during development; HMR then works when adding or deleting a file from your NativeScript app directory.&lt;/p&gt;

&lt;p&gt;There‚Äôs support for script changes in a &lt;code&gt;.vue&lt;/code&gt; file as well, but it has a &lt;a href="https://github.com/nativescript-vue/nativescript-vue/issues/518"&gt;limitation when working with TypeScript in Vue&lt;/a&gt;, and there‚Äôs full HMR support in out-of-the-box NativeScript Angular projects with no extra configs needed!&lt;/p&gt;

&lt;p&gt;Both the HMR and fast refresh perform similarly, and both have smartly built features like debugging for Visual Studio Code in NativeScript and &lt;a href="https://reactnative.dev/docs/fast-refresh#error-resilience"&gt;error resilience in React Native&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#native-apis"&gt;
  &lt;/a&gt;
  Native APIs
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#react-native-apis"&gt;
  &lt;/a&gt;
  React Native APIs
&lt;/h3&gt;

&lt;p&gt;React Native comes with some basic out-of-the-box modules, but there are cases where you may need native capabilities that React Native does not have a corresponding module for yet. In such cases, you must write native modules to communicate with Native APIs.&lt;/p&gt;

&lt;p&gt;Achieving this &lt;a href="https://reactnative.dev/docs/communication-ios#calling-native-functions-from-react-native-native-modules"&gt;requires special bridges&lt;/a&gt;, which require some level of expertise in native development. However, with the size of React Native‚Äôs ecosystem, you will likely find an existing native module on GitHub or npm.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nativescript-apis"&gt;
  &lt;/a&gt;
  NativeScript APIs
&lt;/h3&gt;

&lt;p&gt;Accessing &lt;a href="https://docs.nativescript.org/native-api-access.html"&gt;Native Platform APIs in NativeScript is the most important feature of NativeScript&lt;/a&gt;. Developers can call platform APIs from JavaScript instead of writing native code with Objective-C or Kotlin.&lt;/p&gt;

&lt;p&gt;This is where NativeScript has an advantage over React Native because JavaScript developers don‚Äôt need expertise in a specific platform language to work with Native APIs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-native-and-nativescript-performance"&gt;
  &lt;/a&gt;
  React Native and NativeScript performance
&lt;/h2&gt;

&lt;p&gt;NativeScript apps are usually slower because the framework employs a single-threaded approach to access native device APIs.&lt;/p&gt;

&lt;p&gt;Unlike NativeScript, React Native apps uses a multithreaded model where JavaScript and an app‚Äôs interface run on separate threads. Therefore, when building a mobile app where performance is a key factor, React Native is your best bet.&lt;/p&gt;

&lt;p&gt;React Native also offers faster UI rendering because it uses the virtual DOM to update app UIs, similar to React.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nativescript-and-react-native-documentation"&gt;
  &lt;/a&gt;
  NativeScript and React Native documentation
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://docs.nativescript.org/introduction"&gt;NativeScript‚Äôs documentation&lt;/a&gt; is easy to understand and it has some really great illustrations on how to implement things like &lt;a href="https://docs.nativescript.org/interaction.html#animations"&gt;animations&lt;/a&gt;, &lt;a href="https://docs.nativescript.org/interaction.html#gestures"&gt;gestures&lt;/a&gt;, &lt;a href="https://docs.nativescript.org/Http.html"&gt;HTTP requests&lt;/a&gt;, and &lt;a href="https://docs.nativescript.org/code-sharing/index.html"&gt;code sharing&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And, with specific use cases of NativeScript with &lt;a href="https://svelte-native.technology/docs"&gt;Svelte&lt;/a&gt; and &lt;a href="https://nativescript-vue.org/"&gt;Vue&lt;/a&gt;, there is separate documentation. But most of the time, developers must learn how things work in the NativeScript ecosystem outside the official docs.&lt;/p&gt;

&lt;p&gt;React Native has a more mature ecosystem than NativeScript, and with that comes the expectation that the &lt;a href="https://reactnative.dev/"&gt;documentation&lt;/a&gt; is explicit because it is accessed by both beginners and experts in cross-platform mobile app development.&lt;/p&gt;

&lt;p&gt;However, while the documentation is approachable, it lacks details, which may make some concepts unclear to beginners.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://expo.io/"&gt;Building React Native apps with Expo and using the Expo docs&lt;/a&gt; simplifies working with React Native docs as a beginner building a functional React Native app.&lt;/p&gt;

&lt;p&gt;Neither has the best documentation, and developers using both frameworks must usually go beyond the official documentation to learn all aspects of the frameworks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#companies-using-nativescript-and-react-native"&gt;
  &lt;/a&gt;
  Companies using NativeScript and React Native
&lt;/h2&gt;

&lt;p&gt;React Native is currently used in production by top brands and companies like &lt;a href="https://code.facebook.com/posts/895897210527114/dive-into-react-native-performance/"&gt;Facebook&lt;/a&gt;, &lt;a href="https://www.techatbloomberg.com/blog/bloomberg-used-react-native-develop-new-consumer-app/"&gt;Bloomberg&lt;/a&gt;, &lt;a href="https://blog.coinbase.com/optimizing-react-native-7e7bf7ac3a34"&gt;Coinbase&lt;/a&gt;, &lt;a href="https://blog.discord.com/how-discord-achieves-native-ios-performance-with-react-native-390c84dcd502"&gt;Discord&lt;/a&gt;, &lt;a href="https://reactnative.dev/showcase"&gt;Tesla, and more&lt;/a&gt;. This proves how big and popular React Native has become.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://newsroom.fb.com/news/2016/10/introducing-marketplace-buy-and-sell-with-your-local-community/"&gt;Facebook marketplace is also built with React Native&lt;/a&gt;, proving that if you have an existing mobile app written in a native language, you can adopt React Native progressively to build different parts of your mobile application.&lt;/p&gt;

&lt;p&gt;Even though React Native takes the spotlight here, it does not imply that NativeScript cannot solve the business problems that React Native does for the companies using it. Looking at the &lt;a href="https://github.com/jbristowe/awesome-nativescript"&gt;awesome apps&lt;/a&gt; here built with NativeScript shows it can build production-ready mobile apps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Building a mobile app with JavaScript as a web developer is an awesome experience because the language runs on web browsers to build native apps for Android and iOS. Of all the JavaScript frameworks for building cross-platform apps, React Native and NativeScript are at the top.&lt;/p&gt;

&lt;p&gt;In this post, we‚Äôve covered what makes each framework unique and how far they‚Äôve grown. Choosing either framework ultimately depends on a mobile app‚Äôs requirements, performance cost, preferred JavaScript framework, prior knowledge of mobile app development, and needed Native APIs.&lt;/p&gt;

&lt;p&gt;From the above perspectives, you should be able to make informed decisions when choosing a cross-platform mobile application framework for your next project.&lt;/p&gt;

&lt;p&gt;Feel free to drop a comment to let me know what you thought of this article. You can also find me on &lt;a href="https://twitter.com/ejirocodes"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/ejiro-asiuwhu/"&gt;LinkedIn&lt;/a&gt;. Thank you for reading!&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>mobile</category>
    </item>
  </channel>
</rss>
