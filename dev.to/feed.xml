<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Why We Should Use Videos On Our Landing Pages
</title>
      <author>Atanu Das</author>
      <pubDate>Thu, 09 Sep 2021 08:45:59 +0000</pubDate>
      <link>https://dev.to/digitallyatanu/why-we-should-use-videos-on-our-landing-pages-1d9h</link>
      <guid>https://dev.to/digitallyatanu/why-we-should-use-videos-on-our-landing-pages-1d9h</guid>
      <description>&lt;p&gt;Video landing pages capture attention and drive conversions. When it comes to landing pages, adding video can increase conversion by 86%. But that‚Äôs not all it can do. According to FORBES, 90% of customers say product video helps them make buying decisions. According to HUBSPOT, 97% of marketers say video helps increase user understand of their product or service.&lt;br&gt;
.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;HELP TO BOOST THE CONVERSION üìàüéØ&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Videos can significant boost conversions. One of the reason is by using videos on the landing page to show case your product or services, your visitor are able to look at the products or services up-close at different angle compared to only image.&lt;br&gt;
.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;HELP TO ENHANCE ENGAGEMENTS üß≤&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let me ask you, if you are given a choice between a video and long paragraph to texts, which one would you prefer to view? With video, the audience is 10 times more likely to interact with a video. Videos are a great way to keep prospects engaged due to the utilization of both visual and sound element. Also, video is able to deliver information way faster and more efficient compared to texts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ML4eqJWy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hr6slioc9lh8ig1m27hv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ML4eqJWy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hr6slioc9lh8ig1m27hv.png" alt="Why We Should Use Videos On Our Landing Pages"&gt;&lt;/a&gt;&lt;br&gt;
.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;VIDEOS ARE MORE PERSUASIVE ü§©&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By using videos, we are able to dive deeper into prospects emotion and state of mind and hence more persuasive compared to texts. Try this out and you will know the stark differences in persuasion.&lt;br&gt;
.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;KEEPING YOUR AUDIENCE LONGER ON YOUR PAGE ‚è∞&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The goal is to keep your prospects to stay longer on your page, the longer they stay the chances are the more they become familiar with your brand. A video on the landing page gives prospects more time and chances for your offer to appeal to them. Allowing them more time to notice the benefits of your offer to them.&lt;br&gt;
.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ESTABLISH TRUST üëç&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Videos establish and enhance trust because it allows that extra human touch to your prospects with a human figure, a voice. A moving person definitely is more trustworthy compared to a chunk of texts.&lt;/p&gt;




&lt;p&gt;JOIN ME:&lt;br&gt;
Website: &lt;a href="https://www.atanudas.com"&gt;https://www.atanudas.com&lt;/a&gt;&lt;br&gt;
Linkedin: &lt;a href="https://www.linkedin.com/in/digitalmarketinganalystindia"&gt;https://www.linkedin.com/in/digitalmarketinganalystindia&lt;/a&gt;&lt;br&gt;
Twitter: &lt;a href="https://twitter.com/seoexpertatanu"&gt;https://twitter.com/seoexpertatanu&lt;/a&gt;&lt;br&gt;
Medium: &lt;a href="https://digitallyatanu.medium.com"&gt;https://digitallyatanu.medium.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>landingpage</category>
      <category>landingpageoptimization</category>
      <category>wordpress</category>
      <category>webdev</category>
    </item>
    <item>
      <title>OpenCV image processing using Python </title>
      <author>Rishi Saxena</author>
      <pubDate>Thu, 09 Sep 2021 08:41:51 +0000</pubDate>
      <link>https://dev.to/alcatraz714/opencv-image-processing-using-python-6ma</link>
      <guid>https://dev.to/alcatraz714/opencv-image-processing-using-python-6ma</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-we-need-to-get-started-with-opencv"&gt;
  &lt;/a&gt;
  What we need to get started with OpenCv...
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;We need to import few libraries given below and are available in &lt;strong&gt;Google Colab&lt;/strong&gt;, independent installations may be required for other platforms.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;strong&gt;1&lt;/strong&gt;. Imports required&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy.spatial&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;dist&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;imutils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;perspective&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;imutils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;contours&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;argparse&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;imutils&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cv2&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;google.colab.patches&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;cv2_imshow&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2&lt;/strong&gt;. Next we import an image and get its details&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;mg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s"&gt;'/content/parrot.jpg'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IMREAD_UNCHANGED&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;span class="n"&gt;channels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;span class="n"&gt;size1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;
&lt;span class="n"&gt;cv2_imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Image Height       : '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Image Width        : '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Number of Channels : '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;channels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Image Size  :'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Remember we are using Colab and it uses its own snippets.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;3&lt;/strong&gt;. First lets try to get distance between two pixels&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pixel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;pixel1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;pixel_diff&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pixel1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pixel&lt;/span&gt;  
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"The difference between the two pixels is :"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pixel_diff&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1PRnr9qM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l6hvmd28ucrg1t0qyjef.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1PRnr9qM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l6hvmd28ucrg1t0qyjef.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;4&lt;/strong&gt;. Next lets try Point processing in the spatial domain on Image, &lt;em&gt;Image Negatives&lt;/em&gt; and &lt;em&gt;Power-Law (Gamma) Transformation&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Negative&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Part A : Negative of the image"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# negative transformed image
&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'b'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'g'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mgEPZsWb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hwm0gdlfc7co6ko1971u.png" alt="image"&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Power-Law (Gamma) Transformation&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Part B : Power Law "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/content/parrot.jpg'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IMREAD_UNCHANGED&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;gamma_two_point_two&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mf"&gt;2.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'uint8'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Similarly, Apply Gamma=0.4 
&lt;/span&gt;&lt;span class="n"&gt;gamma_point_four&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'uint8'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Display the images in subplots
&lt;/span&gt;&lt;span class="n"&gt;img3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hconcat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;gamma_two_point_two&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;gamma_point_four&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;cv2_imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;We used &lt;strong&gt;hconcat&lt;/strong&gt; for displaying results together.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ei5fECkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mdg5323q260zuctiv3le.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ei5fECkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mdg5323q260zuctiv3le.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;5&lt;/strong&gt;. lets try some Point processing in the spatial domain.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Contrast stretching&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Part C : Gray-level slicing, Contrast stretching"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/content/parrot.jpg'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IMREAD_UNCHANGED&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;pixelVal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;pix&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;pix&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;r1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;r1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pix&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;pix&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;pix&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;r2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;r1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pix&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;r1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;r2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pix&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;r2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt;
&lt;span class="n"&gt;r1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt;
&lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;r2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;140&lt;/span&gt;
&lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;
&lt;span class="n"&gt;pixelVal_vec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vectorize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pixelVal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Apply contrast stretching.
&lt;/span&gt;&lt;span class="n"&gt;contrast_stretched&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pixelVal_vec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Constrat Strethcing :"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Save edited image.
&lt;/span&gt;&lt;span class="n"&gt;cv2_imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contrast_stretched&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---W4L_Aks--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vyzykd9p2fpzwu2h6m2r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---W4L_Aks--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vyzykd9p2fpzwu2h6m2r.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Gray-Level Slicing&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;pointProcessing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;slicedGreyScale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
 &lt;span class="c1"&gt;# T1 and T2 Represent Lower and Upper Threshold Value
&lt;/span&gt;  &lt;span class="n"&gt;T1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
  &lt;span class="n"&gt;T2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;
  &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
  &lt;span class="n"&gt;img_thresh_back&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uint8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;T2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;img_thresh_back&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;img_thresh_back&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;cv2_imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img_thresh_back&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pointObj&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pointProcessing&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;pointObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;slicedGreyScale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A7cPZSUZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/stjzpxk9shpoiqvkjiwn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A7cPZSUZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/stjzpxk9shpoiqvkjiwn.png" alt="download"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; Nearest neighbour Interpolation &amp;amp; Bilinear Interpolation.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Use of Average neighbour value&lt;/em&gt; and &lt;em&gt;Bilinear&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#Nearest neighbor Interpolation Using cv2.resize()Python
&lt;/span&gt;&lt;span class="n"&gt;near_img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;interpolation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;INTER_NEAREST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cv2_imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;near_img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Bilinear Interpolation 
&lt;/span&gt;&lt;span class="n"&gt;bilinear_img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;interpolation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;INTER_LINEAR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cv2_imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bilinear_img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gcrv9Ciq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rkysf09lthc7uq8q8fuj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gcrv9Ciq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rkysf09lthc7uq8q8fuj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;7.&lt;/strong&gt; Lets try other operations available in OpenCV &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Arithmetic operations ‚Äî Addition, Division&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Logical Operations on Binary Image ‚Äî XOR, NOT&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Geometrical Operations ‚Äî Rotation, Affine Translation&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Statistical operations ‚Äî Mean, Variance&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Addition&lt;/em&gt; and &lt;em&gt;Division&lt;/em&gt; -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"A : Addition and Division :"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;img1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/content/parrot.jpg'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;img2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/content/bg.jpg'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;dst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addWeighted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;img2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Div
&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;divide&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;img2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;AddDiv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hconcat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;dst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;cv2_imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AddDiv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0T473R-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ka6uhm1fsgn37omx27i2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0T473R-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ka6uhm1fsgn37omx27i2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;XOR&lt;/em&gt; and &lt;em&gt;NOT&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"B : Xor and Not Operations :"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#XOR function
&lt;/span&gt;&lt;span class="n"&gt;bitwiseXor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bitwise_xor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;img2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#NOT function
&lt;/span&gt;&lt;span class="n"&gt;bitwiseNot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bitwise_not&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#concat
&lt;/span&gt;&lt;span class="n"&gt;img5&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hconcat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;bitwiseXor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bitwiseNot&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;cv2_imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9YP8nTGx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kknlnguq9ntmdkpwajrh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9YP8nTGx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kknlnguq9ntmdkpwajrh.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Rotation&lt;/em&gt; and &lt;em&gt;Affine Translation&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"C : Geometric Operations :"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Rotation and Affine Translation :"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Rotation
&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ROTATE_90_CLOCKWISE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cv2_imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Affine Translation
&lt;/span&gt;&lt;span class="n"&gt;srcTri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;dstTri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mf"&gt;0.33&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mf"&gt;0.85&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mf"&gt;0.15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mf"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;warp_mat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getAffineTransform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;srcTri&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dstTri&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;warp_dst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;warpAffine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;warp_mat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="c1"&gt;# Rotating the image after Warp
&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;warp_dst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;warp_dst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;
&lt;span class="n"&gt;scale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.6&lt;/span&gt;
&lt;span class="n"&gt;rot_mat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getRotationMatrix2D&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;angle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;warp_rotate_dst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;warpAffine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;warp_dst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rot_mat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;warp_dst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;warp_dst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="n"&gt;cv2_imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;warp_dst&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HTn3jBYd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/att8zlbm59q8gg4w95nw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HTn3jBYd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/att8zlbm59q8gg4w95nw.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nOapCnnw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vjzdnogvzbt1wyz0647m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nOapCnnw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vjzdnogvzbt1wyz0647m.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Mean&lt;/em&gt; and &lt;em&gt;Variance&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"D : Mean, Variance :"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Mean of img1 and img2 
&lt;/span&gt;&lt;span class="n"&gt;img7&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;img2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;cv2_imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Variance
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wUZN68Jl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m6plhnk1mtumres55yi3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wUZN68Jl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m6plhnk1mtumres55yi3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Image interpolation&lt;/em&gt; : &lt;em&gt;Down Sampling&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"E : Image interpolation : Down Sampling"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pyrDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cv2_imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lTsf77R2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxzghsei15qwiu48bkmy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lTsf77R2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxzghsei15qwiu48bkmy.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;As of now, We have covered the basics of OpenCV &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>python</category>
      <category>jupyter</category>
      <category>opencv</category>
    </item>
    <item>
      <title>Slate has finally Launched on ProductHunt!üéä</title>
      <author>Ayan S</author>
      <pubDate>Thu, 09 Sep 2021 08:41:31 +0000</pubDate>
      <link>https://dev.to/madebyayan/slate-has-finally-launched-37m0</link>
      <guid>https://dev.to/madebyayan/slate-has-finally-launched-37m0</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Floating windows for efficient multitasking on your desktop&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After having soft-launched Slate a couple of weeks ago and getting some amazing feedback, it finally felt like it's the right time for the official Product Hunt launch!&lt;/p&gt;




&lt;p&gt;Experience multi-display multitasking on a single screen.&lt;/p&gt;

&lt;p&gt;With unlimited floating windows that stay-on-top, giving you space to do even more, so you can manage your time and get things done faster without limiting or distracting yourself!&lt;/p&gt;

&lt;p&gt;Whether you want to follow tutorials in real-time as you code, relax with games as you watch your code compile or browse docs as you bring your next project to life, Slate let's you do all that and much more, so you can make the most of your time without limiting yourself.&lt;/p&gt;




&lt;p&gt;You can check it out here:&lt;br&gt;
&lt;a href="https://www.producthunt.com/posts/slate-124b11c5-5bbf-4fc9-837a-25ab476a94b6"&gt;https://www.producthunt.com/posts/slate-124b11c5-5bbf-4fc9-837a-25ab476a94b6&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Would love your feedback and support on the launch!&lt;br&gt;
And if you have a feature request or ideas on how Slate can be improved to fit your workspace better, feel free to share them!&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>launch</category>
      <category>devjournal</category>
      <category>tooling</category>
    </item>
    <item>
      <title>How do you Invoice your clients?</title>
      <author>Madza</author>
      <pubDate>Thu, 09 Sep 2021 07:42:26 +0000</pubDate>
      <link>https://dev.to/madza/what-do-you-use-for-invoicing-4af7</link>
      <guid>https://dev.to/madza/what-do-you-use-for-invoicing-4af7</guid>
      <description>&lt;p&gt;Professional looking, convenient and fastly delivered invoices can leave a great impression on your clients, that can strengthen your business relations for possible returning future deals.&lt;/p&gt;

&lt;p&gt;When it comes to your side as a freelancer, you have to be in full control of organizing them and create a workflow that fits you.&lt;/p&gt;

&lt;p&gt;Here are some of the ways on how you can handle this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Create a dedicated space in your PC or use a cloud solution like &lt;a href="https://www.google.com/drive/"&gt;Google Drive&lt;/a&gt;. This requires to do all the work (creating new templates, numbering and filling in the data) manually. Also keep in mind that you must track each and every invoice afterwards. This might still work if you send out very small amount of invoices (like 1-3 each month).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use built-in Invoicing solutions in Accounting software like (&lt;a href="https://www.freshbooks.com/"&gt;FreshBooks&lt;/a&gt;, &lt;a href="https://quickbooks.intuit.com/global/"&gt;QuickBooks&lt;/a&gt;, &lt;a href="https://www.waveapps.com/"&gt;Wave&lt;/a&gt;, &lt;a href="https://www.xero.com/"&gt;Xero&lt;/a&gt;, &lt;a href="https://www.zoho.com/books/"&gt;Zoho Books&lt;/a&gt;, &lt;a href="https://www.freeagent.com/"&gt;FreeAgent&lt;/a&gt;). This solution creates templates and numbering automatically and lets you add the data easily with interactive forms. Also it is easy to track the status (sent, viewed, paid or overdue) of each invoice. Depending on the software you use, you might have to upgrade to paid plans to use the invoicing features.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Many online payment solutions such as &lt;a href="https://paypal.com"&gt;PayPal&lt;/a&gt; and &lt;a href="https://stripe.com"&gt;Stripe&lt;/a&gt; also come with some built in Invoicing solutions. With these you often get the same Invoicing solutions as in the Accounting software, plus you have your direct finance flow and invoices all in one place. Again, most payment solutions might apply some extra charges for you to be able to use the Invoicing features.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How often do you send invoices and what solutions do you use?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>business</category>
      <category>finance</category>
      <category>invoicing</category>
    </item>
    <item>
      <title>Flutter 2.5: What changes does it bring?</title>
      <author>Motabar Javaid</author>
      <pubDate>Thu, 09 Sep 2021 07:38:45 +0000</pubDate>
      <link>https://dev.to/iizmotabar/flutter-2-5-what-changes-does-it-bring-c94</link>
      <guid>https://dev.to/iizmotabar/flutter-2-5-what-changes-does-it-bring-c94</guid>
      <description>&lt;p&gt;If you‚Äôre reading this, you probably already know what Flutter is but for those who don‚Äôt, Flutter is Google‚Äôs very own UI toolkit for building beautiful, natively compiled applications for mobile, web, desktop, and embedded devices from a single codebase. Flutter achieves this dart using its a language known as Dart.&lt;/p&gt;

&lt;p&gt;Less than 24 hours ago, The Flutter team released a new stable version of Flutter i-e; Flutter 2.5. Talking about the numbers, this version closes 4600 issues and is contributed by around 252 contributors and 216 reviewers with a whooping 3932 PRs merges.&lt;/p&gt;

&lt;p&gt;The new version brings in a lot of new features with it mostly relating to Performance,better Exception Handling and much more. In this article, We‚Äôll go through the major ones. If you‚Äôre interesting to know every change in depth, you can read Chris Sell‚Äôs Original article &lt;a href="https://medium.com/flutter/whats-new-in-flutter-2-5-6f080c3f3dc"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#dart-214-"&gt;
  &lt;/a&gt;
  Dart 2.14 :
&lt;/h1&gt;

&lt;p&gt;What better way to start with the changes than Flutter‚Äôs brother in arms, Dart üéØ . The new version of Dart brings in changes to code Formatting, making Cascading more clear. The triple shift operator also makes a comeback for better bitwise shifting. Another major change is the introduction of Lint out of the box with every Flutter Project. You don‚Äôt have to manually add Lint to your projects anymore.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#new-template-app"&gt;
  &lt;/a&gt;
  New Template App:
&lt;/h1&gt;

&lt;p&gt;Since the start of mankind, We‚Äôve been seeing the good old Counter App as the demo app whenever we make a new project. The Counter App might finally have a comepetitor üòÖ. With this new release, We can have a new Demo App that demonstrates a list having three items with its detail page and a way to implement the dark mode.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--arRDJxGv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tj5uwykki9r36hznvjbw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--arRDJxGv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tj5uwykki9r36hznvjbw.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#framework-changes"&gt;
  &lt;/a&gt;
  Framework Changes:
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Android FullScreen Mode:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Starting off with the change related to Android Full Screen mode. Now we can have more control over the Full Screen modes in our app. Flutter 2.5 comes with three new modes: lean back, sticky, sticky immersive, and edge to edge.&lt;br&gt;
The developers have more control over how when the user interacts with the app, they can return to fullscreen or do something else.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IKlFKxHf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9588h495y37p0m125zfd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IKlFKxHf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9588h495y37p0m125zfd.png" alt="Android Full Screen Changes"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Floating Action Button (FAB) Sizes:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the new update, Sizing the Floating Action Button(FAB) is a lot easier now.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--etNxHNd1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cl9n75zuo4ri6qoc5a78.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--etNxHNd1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cl9n75zuo4ri6qoc5a78.png" alt="FAB Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Material Banner:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Another good addition to the is the Material Banner which lets the developers to add the functionality of a banner at the top of Scaffold that sticks to its place until the use dismisses it from view.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tMCLl3L1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u2d2wr92ljwx396nh7yn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tMCLl3L1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u2d2wr92ljwx396nh7yn.gif" alt="Material Banner Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs see how we can have implement this behavior of Banners in our apps.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HomePage&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;HomePage&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;appBar:&lt;/span&gt; &lt;span class="n"&gt;AppBar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'The MaterialBanner is below'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="nl"&gt;body:&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;ElevatedButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Show MaterialBanner'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
            &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ScaffoldMessenger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;of&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;showMaterialBanner&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="n"&gt;MaterialBanner&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
                &lt;span class="nl"&gt;content:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Hello, I am a Material Banner'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
                &lt;span class="nl"&gt;leading:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;info&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
                &lt;span class="nl"&gt;backgroundColor:&lt;/span&gt; &lt;span class="n"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;yellow&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                &lt;span class="nl"&gt;actions:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
                  &lt;span class="n"&gt;TextButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
                    &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Dismiss'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
                    &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ScaffoldMessenger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;of&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
                        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hideCurrentMaterialBanner&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
                  &lt;span class="o"&gt;),&lt;/span&gt;
                &lt;span class="o"&gt;],&lt;/span&gt;
              &lt;span class="o"&gt;),&lt;/span&gt;
            &lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;More changes include the ones to theming which are now Material You based and the addition of new MaterialState.scrollUnder state that you can see below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gr-_7J6d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18ntnoi3lbv129whlck1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gr-_7J6d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18ntnoi3lbv129whlck1.gif" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One more change worth talking about here is the improvement on the scroll metrics notifications which now provides notifications of scrollable areas when the UI is not being scrolled. One application of that would be the example below which shows or hides scrollbar based on underlying size of the ListView. An the best part about it that you don‚Äôt even have to write any extra code to get this behavior in your apps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qGeINoKa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oglbsujjw1nexz23yz7b.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qGeINoKa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oglbsujjw1nexz23yz7b.gif" alt="listSize Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#vscode-improvements"&gt;
  &lt;/a&gt;
  VSCode Improvements:
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Dependencies:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It becomes tedious to add packages from pub.dev into your project if the list is a long one.&lt;a href="https://marketplace.visualstudio.com/items?itemName=jeroen-meijer.pubspec-assist"&gt;Pubspec&lt;/a&gt; assist made it easier to add packages but now you don‚Äôt even need it as it comes built in with the Flutter plugin for VS Code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SlaOyVQx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6jg0lbucyrzjh0safzgk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SlaOyVQx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6jg0lbucyrzjh0safzgk.gif" alt="VsCode Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fix All:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We‚Äôve been there when we refactor our code and have to manually add the dependencies for everything that is being used in our code. Worry no more! Fix All got you covered. Use the Fix All command and it fixes all the known dependencies related issues in your code like magic. üîÆ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SvJ-QNX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/itx404fgawm7uecm3iqs.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SvJ-QNX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/itx404fgawm7uecm3iqs.gif" alt="VsCode FixAll Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mind that the command can be made to run on on-save by adding sources.fixAll to the editor.codeActionsOnSave Setting in VS Code.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#intellijandroid-studio-improvements"&gt;
  &lt;/a&gt;
  IntelliJ/Android Studio Improvements:
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Integration Tests:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the new update, changes have been made to the Flutter IntelliJ/Android Studio plugin which is now capable of running Integration Tests. Integration tests are whole-app tests that run on a device, live in the integration_test directory and use the same testWidgets() functionality from widget unit tests. To add the integration tests to the project, you can follow the guide on &lt;a href="https://flutter.dev/docs/testing/integration-tests"&gt;flutter.dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qztq5fHE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/snb6dqhebu4nlwv4bxp0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qztq5fHE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/snb6dqhebu4nlwv4bxp0.png" alt="IntelliJ Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Icons Preview:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Another good addition to the release is the addition of preview icons. Now you can have Icon Previews in your IntelliJ/Android Studio which are based around TrueType Font Files similar to Material &amp;amp; Cupertino Icon previewing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IRNPi4tw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nsh60apj0gbfvgyxgxp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IRNPi4tw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nsh60apj0gbfvgyxgxp.png" alt="IconPreview Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To enable icon previews you need to tell the plugin which packages you are using. There is a new text field in the plugin settings/preferences page. One thing to keep in mind is that these icon previews work for static constants in the class and won‚Äôt work for expressions like LineIcons.addressBook() or LineIcons.values[‚Äòcode‚Äô].&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YvV3lxnJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9v85p0l9era86s19a6v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YvV3lxnJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9v85p0l9era86s19a6v.png" alt="Font Packages Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P7hujkF_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media3.giphy.com/media/lTpme2Po0hkqI/giphy.gif%3Fcid%3D790b7611802bd4b8a7a54f34bcdce17e97b1de4c92da1e18%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P7hujkF_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media3.giphy.com/media/lTpme2Po0hkqI/giphy.gif%3Fcid%3D790b7611802bd4b8a7a54f34bcdce17e97b1de4c92da1e18%26rid%3Dgiphy.gif%26ct%3Dg" alt="Thats all folks image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That‚Äôs all for now Folks! These were some of the changes that Flutter 2.5 brings. Thanks for reading this article ‚ù§Ô∏è&lt;br&gt;
Clap üëè If this article helped you.&lt;/p&gt;

&lt;p&gt;Feel free to post any queries or corrections you think are required ‚úî&lt;/p&gt;

&lt;p&gt;Do leave a feedback so I can improve on my content. Thankyou! üòÉ&lt;/p&gt;

&lt;p&gt;If you‚Äôre interested, here are some of my other articles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/iizmotabar/exploring-dart-collection-types-part-2-sets-32lm"&gt;Dart Collection Types: Sets&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/iizmotabar/exploring-dart-collection-types-part-1-lists-3ocj"&gt;Dart Collection Types: Lists&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/iizmotabar/the-beauty-of-dart-string-methods-1nje"&gt;The Beauty of Dart Strings Method&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
      <category>programming</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Progressive Web Apps vs Responsive Websites</title>
      <author>Chris Fowler</author>
      <pubDate>Thu, 09 Sep 2021 07:35:02 +0000</pubDate>
      <link>https://dev.to/dsvdeveloper88/progressive-web-apps-vs-responsive-websites-4dm2</link>
      <guid>https://dev.to/dsvdeveloper88/progressive-web-apps-vs-responsive-websites-4dm2</guid>
      <description>&lt;p&gt;Most e-commerce sites are not optimized for mobile. Also, it seems unlikely that prospective buyers would download a native app just to buy something off an online store. As the number of mobile consumers rises, it is expected that almost 54% of e-commerce sales by 2021 will happen on mobile instead of traditional websites.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c_FYU4bK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ib00lxhagpik0i18t0iv.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c_FYU4bK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ib00lxhagpik0i18t0iv.jpeg" alt="responsive websites"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So how do &lt;a href="https://www.designveloper.com/blog/ecommerce-business-101/"&gt;eCommerce business&lt;/a&gt; ensure that they get their leads to convert, and their prospects to buy? Well, they have two options to ensure that their digital store gets attention online.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-difference-of-pwas-and-responsive-website"&gt;
  &lt;/a&gt;
  The difference of PWAs and Responsive website
&lt;/h2&gt;

&lt;p&gt;It also quickly became an essential requirement for new websites. In comparison, a responsive site is developed once, and the onus falls on different mobile devices to display the website according to the screen size.&lt;/p&gt;

&lt;p&gt;But responsive websites couldn‚Äôt offer advanced functionalities like offline support, push messages, and other native app-like features that customers have to expect on their smartphones.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pwas-vs-responsive-websites"&gt;
  &lt;/a&gt;
  PWAs vs Responsive websites
&lt;/h2&gt;

&lt;p&gt;Responsive websites couldn‚Äôt offer advanced functionalities like offline support, push messages, and other native app-like features that customers have to expect on their smartphones. While a progressive app mimics the behavior of an app. It is developed using CSS, HTML5, or JavaScript for specific screen sizes only.&lt;/p&gt;

&lt;p&gt;Both are designed to provide a smooth web experience for users on different devices ‚Äì so which one works better? Here are a few ways to differentiate between the two:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-pwas-are-faster-than-responsive-design"&gt;
  &lt;/a&gt;
  1. PWAs are faster than Responsive design
&lt;/h3&gt;

&lt;p&gt;A progressive app is the next step after a &lt;a href="https://www.designveloper.com/blog/responsive-web-design/"&gt;responsive website&lt;/a&gt;. In all probability, your business already has a website or web app, and you can make it load faster on different mobile devices.&lt;/p&gt;

&lt;p&gt;The good news about PWAs is that older browsers support them and that they incorporate modern features like offline support, push notification, native video, and audio capturing capabilities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-pwas-offer-the-ability-to-work-offline"&gt;
  &lt;/a&gt;
  2. PWAs offer the ability to work offline
&lt;/h3&gt;

&lt;p&gt;There‚Äôs no need for an internet connection to use a progressive web app because of this feature. The application cache feature allows websites to store a large amount of data offline, giving PWAs much of the functionality of &lt;a href="https://www.designveloper.com/blog/mobile-web-app-development/"&gt;native apps&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-pwas-are-expensive-to-make-and-maintain"&gt;
  &lt;/a&gt;
  3. PWAs are expensive to make and maintain
&lt;/h3&gt;

&lt;p&gt;This undoubtedly makes PWAs the more expensive of the two options. It can be costly to maintain the web app in the long run as compared to a responsive website.&lt;/p&gt;

&lt;p&gt;The screen size of the user‚Äôs device is a vital consideration for developing &lt;a href="https://www.designveloper.com/blog/why-progressive-web-apps/"&gt;progressive web apps&lt;/a&gt;, which means that the website needs to be developed several times over for different devices.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-stellar-app-experience-without-the-development-costs-with-pwas"&gt;
  &lt;/a&gt;
  4. Stellar app experience without the development costs with PWAs
&lt;/h3&gt;

&lt;p&gt;Progressive web apps allow different features like file access, task scheduling, SMS/MMS capability, offline storage, location, and device position&lt;/p&gt;

&lt;p&gt;Progressive web apps make your website feel like a high-quality, well-developed, and expensive app. That‚Äôs excellent value for your money because PWAs don‚Äôt cost as much as apps.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-both-work-well-with-seo-sem-to-ensure-discoverability"&gt;
  &lt;/a&gt;
  5. Both work well with SEO, SEM to ensure discoverability
&lt;/h3&gt;

&lt;p&gt;Businesses can promote both progressive web apps and responsive websites through paid search engine marketing. Responsive websites and progressive apps are great for SEO and SEM because they are essentially websites.&lt;/p&gt;

&lt;p&gt;All the content present on websites and &lt;a href="https://www.designveloper.com/blog/7-awesome-web-app-ideas-for-web-developer/"&gt;web apps&lt;/a&gt; is still crawled and indexed by search engines. They can play a crucial role in the website‚Äôs overall rank in the search results.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Hopefully, the information in this blog post will help you decide between progressive web apps vs responsive websites. &lt;/p&gt;

&lt;p&gt;Many factors go into planning and developing a custom website that suits your business needs and appeals to the target audience. As users and customers express their needs and preferences, businesses must learn to pick up on these cues and quickly adapt to the developments, so their products and services stay relevant.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>webrtc</category>
      <category>mobile</category>
      <category>webmonetization</category>
    </item>
    <item>
      <title>How to handle missing Values in a dataset using Python.</title>
      <author>Phylis Jepchumba</author>
      <pubDate>Thu, 09 Sep 2021 07:29:27 +0000</pubDate>
      <link>https://dev.to/phylis/how-to-handle-missing-values-in-a-dataset-using-python-1d2e</link>
      <guid>https://dev.to/phylis/how-to-handle-missing-values-in-a-dataset-using-python-1d2e</guid>
      <description>&lt;h6&gt;
  &lt;a href="#what-is-missing-data"&gt;
  &lt;/a&gt;
  What is missing data?
&lt;/h6&gt;

&lt;p&gt;Missing data, or missing values, occur when no data value is stored for the variable in an observation.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#effects-of-having-missing-values-in-a-dataset"&gt;
  &lt;/a&gt;
  Effects of having missing values in a dataset
&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;Absence of data reduces statistical power, which refers to the probability that the test will reject the null hypothesis when it is false.&lt;/li&gt;
&lt;li&gt;The lost data can cause bias in the estimation of parameters.&lt;/li&gt;
&lt;li&gt;Reduces the representativeness of the samples.&lt;/li&gt;
&lt;li&gt;Absence of data may complicate the analysis of the study.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The above effects may to lead to invalid conclusions. To avoid this we will look at different ways and techniques of handling missing values using python programming language.&lt;/p&gt;

&lt;p&gt;In this article we will work with &lt;a href="https://www.kaggle.com/dansbecker/melbourne-housing-snapshot"&gt; Melbourne Housing dataset&lt;/a&gt; from kaggle.&lt;/p&gt;

&lt;p&gt;Let's now import the dataset as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'melb_data.csv'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qrlscap_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7plvcp2wewcs8ecu0zfk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qrlscap_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7plvcp2wewcs8ecu0zfk.png" alt="Screenshot (109)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#find-out-whether-we-have-missing-values-in-our-data"&gt;
  &lt;/a&gt;
  Find out whether we have missing values in our data.
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://pandas.pydata.org/docs/reference/api/pandas.isnull.html"&gt;From pandas official documentation&lt;/a&gt;,isnull() function is used to detect missing values for an array-like object.&lt;/p&gt;

&lt;p&gt;Now lets find out if there are missing values in our data;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#sum() returns the number of missing values in the data set.
&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isnull&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z9_J-y3q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5parf4s5s6kaubj4141o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z9_J-y3q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5parf4s5s6kaubj4141o.png" alt="Screenshot (110)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From the above output, we find out that the following columns have missing values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;BuildingArea    
YearBuilt        
CouncilArea 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also use &lt;strong&gt;df.info()&lt;/strong&gt; function to find out the number of non-null values in each column.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gl9NCcK8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8tn43hrh59u46vyersfg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gl9NCcK8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8tn43hrh59u46vyersfg.png" alt="Screenshot (111)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From the above output we can see that &lt;br&gt;
BuildingArea, YearBuilt, CouncilArea  columns are incomplete.&lt;/p&gt;
&lt;h6&gt;
  &lt;a href="#different-methods-that-you-can-use-to-deal-with-the-missing-data"&gt;
  &lt;/a&gt;
  Different methods that you can use to deal with the missing data.
&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;1.Deleting the columns/rows with missing data&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.dropna.html"&gt;From pandas official documentation&lt;/a&gt;,dropna() function is used to remove rows and columns with Null/NaN values.&lt;/p&gt;

&lt;p&gt;In this case lets delete the columns with missing values as follows;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KKHVBfAQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w45mzazhu9mugrej9x74.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KKHVBfAQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w45mzazhu9mugrej9x74.png" alt="Screenshot (112)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also if there is a certain row with missing data, then you can delete the entire row with all the features in that row.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;axis=1 is used to drop the column with &lt;code&gt;NaN&lt;/code&gt; values.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;axis=0 is used to drop the row with &lt;code&gt;NaN&lt;/code&gt; values.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2.Filling the missing data with a value- Imputation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Removing the rows and columns containing missing data may not be the best approach since they might contain valuable data.&lt;/p&gt;

&lt;p&gt;Instead, we can fill the missing data using the following common ways;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Filling missing data with mean and median of the data if its a numerical variable.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this case we will use the fillna() function to fill missing values in 'BuildingArea' and 'YearBuilt' columns using mean since they are numerical values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'BuildingArea'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'BuildingArea'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'YearBuilt'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'YearBuilt'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Filling the missing data with mode if it‚Äôs a categorical value.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'CouncilArea'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'CouncilArea'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Fill Missing data  with a Constant
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'BuildingArea'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'YearBuilt  '&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3.Imputation with an additional column&lt;/strong&gt;&lt;br&gt;
Use the SimpleImputer() function from sklearn module to impute the values.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://scikit-learn.org/stable/modules/generated/sklearn.impute.SimpleImputer.html"&gt;From scikit learn official documentation&lt;/a&gt;,SimpleImputer() is an imputation transformer for completing missing values with mean , median or mode.&lt;/p&gt;

&lt;p&gt;To use SimpleImputer() pass the &lt;strong&gt;strategy&lt;/strong&gt; as an argument to function. It can be either mean, mode or median.&lt;/p&gt;

&lt;p&gt;The default is mean.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'CouncilArea_Missing'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'CouncilArea'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;isnull&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.impute&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SimpleImputer&lt;/span&gt;
&lt;span class="n"&gt;my_imputer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SimpleImputer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strategy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'mean'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'CouncilArea_Missing'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code with add an additional column 'CouncilArea_Missing' with &lt;strong&gt;True&lt;/strong&gt; as value, if it is a null value and &lt;strong&gt;False&lt;/strong&gt; if it is not a null value.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PdShHwr7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4gtpzjoholwowqsaouqy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PdShHwr7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4gtpzjoholwowqsaouqy.png" alt="Screenshot (113)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The above are just few ways of handling missing values. You can experiment through them and many others to find the best approach that can work for your data.&lt;/p&gt;

&lt;p&gt;Thank you for reading the article ü•≥ü•≥ü•≥.&lt;/p&gt;

</description>
      <category>python</category>
      <category>100daysofcode</category>
      <category>datascience</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>My Journey through Bootcamp</title>
      <author>Angela Lam</author>
      <pubDate>Thu, 09 Sep 2021 07:15:45 +0000</pubDate>
      <link>https://dev.to/anglam/my-journey-through-bootcamp-4gpd</link>
      <guid>https://dev.to/anglam/my-journey-through-bootcamp-4gpd</guid>
      <description>&lt;p&gt;For the past ten months, I have been enrolled in Flatiron's online part-time software engineering course. This blog post marks my completion of my final project in Flatiron and the beginning of my job hunt in the tech field. Throughout my time in bootcamp, I've been asked by many how my bootcamp experience was and some showed interest in joining a bootcamp as well. Today, I'm going to share my experience and honest opinion about the curriculum. &lt;/p&gt;

&lt;p&gt;I want to note that I have very close people who have gone through the in-person flatiron curriculum that takes four months to complete, so there will be some comparing and contrasting to that curriculum.&lt;/p&gt;

&lt;p&gt;The part-time program is essentially two one-hour lectures and one pod meeting (a small group of students solving problems or asking questions with the instructor) per week including a bunch of labs/modules to complete on Canvas. From my friend who graduated from the on-campus full-time course, they had to be in class from 8am to 5pm (not exactly sure about the exact time, but basically from waking up to late afternoon). When I first heard about her curriculum, I thought I was got the bad end of the stick. She was definitely going to have a better curriculum than my part-time curriculum. But that wasn't the case... I think. It's hard to exactly compare and contrast the full-time on-campus to the part-time online. Overall, I think I learned just as much as the full-time on-campus students in regards to the languages and coding. Although the curriculum should be similar, there are some pros and cons about each.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Full-time on-campus&lt;/strong&gt;&lt;br&gt;
Pros:&lt;br&gt;
-Pair-programming for projects&lt;br&gt;
-Code-challenge&lt;br&gt;
Cons:&lt;br&gt;
-Less requirements for projects&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part-time online&lt;/strong&gt;&lt;br&gt;
Pros:&lt;br&gt;
-Stricter on project&lt;br&gt;
-Live code challenge for project&lt;br&gt;
Cons:&lt;br&gt;
-No pair-programming&lt;/p&gt;

&lt;p&gt;For the full-time on-campus, they must pass a code-challenge about the material they learned. After passing, they start on projects which are actually done in pairs, so they get to collaborate and learn how to merge branches and make pull requests. I hate to admit it, but I barely know anything about pair-programming. The part-time online course is all about you and yourself. The projects are solo projects, which forces you to learn everything and solve all your bugs on your own without a partner. This is great but also stressful. After completing your project, you have a review where you are asked general questions about the material and your project, then the reviewer gives you a live-coding challenge on the spot. When I discussed project requirements with my friend who was enrolled in the full-time on-campus (but technically online because &lt;em&gt;covid&lt;/em&gt;), he had it way easier than I did. He had an easier rubric than the part-time online course. I honestly see this as a pro for me, since a stricter requirement for projects would force me to learn more and make a better application. Honestly, the only thing I'm salty about is the lack of pair-programming in the part-time online course. Unsure how the full-time online course runs. &lt;/p&gt;

&lt;p&gt;Overall, my experience with Flatiron has been great. I've connected with some of my fellow cohort students and became friends. The curriculum is not lacking and learned a lot about Ruby, Ruby on Rails, Javascript, React, and Redux. The only negative thing I have to say is the lack of pair-programming. Learning how to code with a fellow programmer is so important in the real world. When you head into a job, you're not going to be building your own application from the ground up. I do recommend Flatiron, whether it's the full-time on-campus or the part-time online. &lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Why I Love Polywork as a Software Developer
</title>
      <author>Sunil Kumar</author>
      <pubDate>Thu, 09 Sep 2021 07:11:57 +0000</pubDate>
      <link>https://dev.to/sunilc_/why-i-love-polywork-as-a-software-developer-lf6</link>
      <guid>https://dev.to/sunilc_/why-i-love-polywork-as-a-software-developer-lf6</guid>
      <description>&lt;p&gt;If you haven't heard about Polywork yet you're definitely missing out on something exciting. I recently saw someone talking about Polywork on Twitter a month ago and was intrigued to see what it was all about.&lt;/p&gt;

&lt;p&gt;Soon after this, I got the invite code from one of my friends on Twitter and I signed up on the platform instantly.&lt;/p&gt;

&lt;p&gt;My initial impression was that Polywork was just another social media platform for software developers that will die soon. But as I started using it more, Polywork proved me wrong.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-what-is-polywork"&gt;
  &lt;/a&gt;
  So, What is Polywork?
&lt;/h3&gt;

&lt;p&gt;Polywork is a professional social media platform that helps you highlight your achievements, journal your work, events, network with like-minded people, and also get more work in your interested domain.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;But how does it differ from LinkedIn?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;LinkedIn is more of a social network around your job. It helps you create your presence around your resume, your job titles, and your work experiences.&lt;br&gt;
But resumes often do not reflect all the achievements we do. They do not tell our whole story.&lt;/p&gt;

&lt;p&gt;We are more than our job or education. We all do a wide variety of wonderful things, both in our 9‚Äì5 and outside of 9-5. We are creators, podcasters, YouTubers, investors, and more. All these different aspects create our professional identity.&lt;br&gt;
But none of the existing social media platforms help us highlight these parts of our identity.¬†&lt;/p&gt;

&lt;p&gt;That's where Polywork comes in!&lt;/p&gt;

&lt;p&gt;Polywork can be used to highlight anything you have done as part of your work and even outside of your work. It's not tied to any one type of work. It could be joining a company in a role, speaking at a conference, live streaming a video, releasing an eBook, etc.¬†&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It's a place to showcase all of your achievements!&lt;/em&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#heres-how-im-using-polywork-and-why-i-love%C2%A0it"&gt;
  &lt;/a&gt;
  Here's how I'm using Polywork and why I love¬†it:
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#1-highlights"&gt;
  &lt;/a&gt;
  1. Highlights
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MM7liEh2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631167237766/yk1LKVBZ0.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MM7liEh2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631167237766/yk1LKVBZ0.jpeg" alt="polywork-titan.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of my favorite features on the platform is highlights. Highlights let me track all my achievements as milestones on my profile. It provides a way to let people know about the different things I'm working on.¬†&lt;/p&gt;

&lt;p&gt;&lt;em&gt;But how is it different from posts/tweets on LinkedIn/Twitter respectively you may ask?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I have a job. I build SaaS products. I love content creation. I create eBooks. I write articles. I do a lot of things and I want to highlight all of them in one place. Polywork lets me do this in a much better way compared to other professional platforms.&lt;/p&gt;

&lt;p&gt;I have a huge audience on Twitter and I do share my milestones there. But they get lost eventually because of the number of tweets I post. On the other hand, Highlights on Polywork helps me keep only the important events and milestones as a timeline. For example, these are some of the highlights I have on my Polywork profile:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reached 30K followers milestone on Twitter&lt;/li&gt;
&lt;li&gt;Started a new role at Unacademy&lt;/li&gt;
&lt;li&gt;Reached 20K followers milestone on Twitter&lt;/li&gt;
&lt;li&gt;Published an eBook&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q2lYZEKw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631167309006/XFymNxJkm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q2lYZEKw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631167309006/XFymNxJkm.png" alt="Screenshot 2021-09-09 at 11.25.14 AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These highlights help me showcase my milestones to visitors and let me know what I'm up to. It helps me get more work in the future.&lt;/p&gt;

&lt;p&gt;Some of the other achievements that others generally highlight on the platform are like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Finished reading a book&lt;/li&gt;
&lt;li&gt;Hosted a conference&lt;/li&gt;
&lt;li&gt;Spoke at a conference&lt;/li&gt;
&lt;li&gt;Did a YouTube live stream&lt;/li&gt;
&lt;li&gt;Wrote an article, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are just some examples. You can highlight anything you want to showcase to others.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-multiverse"&gt;
  &lt;/a&gt;
  2. Multiverse
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N3LNsUeW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631167362744/FwzjSKkX3.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N3LNsUeW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631167362744/FwzjSKkX3.jpeg" alt="polywork-connected.jpeg"&gt;&lt;/a&gt;&lt;br&gt;
Multiverse is a place to find other people in your interested domain, network with them, and see what they've been doing. Highlights from everyone in your interested domain appear here.&lt;/p&gt;

&lt;p&gt;You can even filter Highlights based on trending Badges. For example, you can see Featured People and all the highlights from Software Engineering Badge. This is a great place to find like-minded people and connect with them.&lt;/p&gt;

&lt;p&gt;I often find myself looking through interesting badges like Book Worm, Software Developer, Lifelong Learner, Writer, etc hoping to network with other people who are interested in these topics as well. Polywork makes it really easy to find such people. Badges are at the center of it.&lt;/p&gt;

&lt;p&gt;The one thing where multiverse is a game-changer for me is that it gives me a lot of ideas on how people are building businesses and making money on the internet.¬†&lt;br&gt;
One of the main reasons for us to not try something new is that we just don't know that it exists. I couldn't make money on the internet for years for this same reason. Once I started following the right people on Twitter I was able to make a good amount of money by applying the same approach they followed.¬†&lt;/p&gt;

&lt;p&gt;The What everyone's doing section gives a very good idea about what others are doing and how they are doing it. I have been learning about new ways to build multiple income streams, developer advocacy, etc just by following the right people on Polywork.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Space¬†Station&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xsCR8JBt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631167401333/X7GUufu-I.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xsCR8JBt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631167401333/X7GUufu-I.png" alt="polywork-space1.png"&gt;&lt;/a&gt;&lt;br&gt;
Space Station is a relatively new feature centered around collaborations. It makes it really easy for you to find people to collaborate with on anything. Be it finding a mentor, hiring for a role, finding a partner for a side project, finding an investor, etc.&lt;/p&gt;

&lt;p&gt;Everyone knows how important Networking is. Space Station is really powerful to network if used correctly.&lt;/p&gt;

&lt;p&gt;For example, I have a huge audience on Twitter and I'm planning to release more info products in the future. I can write an eBook on a topic I know about. I'm confident I can put together a great book with a lot of value.¬†&lt;/p&gt;

&lt;p&gt;But I lack knowledge in certain areas like marketing, designing, branding, etc. I can totally find people who are open to collaborations on these things and make my eBook a huge success.&lt;/p&gt;

&lt;p&gt;If you're not a developer but have an idea to build a SaaS product. Space Station is the right place to find developers who are open to collaborate on our project.&lt;/p&gt;

&lt;p&gt;If you already have a company and are looking to scale it by getting investments, Polywork will help you connect with investors who are open to collaborate.&lt;/p&gt;

&lt;p&gt;The opportunities are just endless.&lt;/p&gt;




&lt;p&gt;If you're not on Polywork yet, you should get on it soon and check it out. Here is my  &lt;a href="https://www.polywork.com/invite/sunilc_-jigglypuff"&gt;VIP link&lt;/a&gt;  you can use to sign up!&lt;/p&gt;

&lt;p&gt;Connect with me on Polywork  &lt;a href="https://www.polywork.com/sunilc_"&gt;here&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;The article was originally published on my blog &lt;a href="https://sunilkumarc.in/why-i-love-polywork-as-a-software-developer"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>career</category>
      <category>startup</category>
      <category>webdev</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>How do you handle your Accounting?</title>
      <author>Madza</author>
      <pubDate>Thu, 09 Sep 2021 06:52:28 +0000</pubDate>
      <link>https://dev.to/madza/how-do-you-handle-your-accounting-2l6</link>
      <guid>https://dev.to/madza/how-do-you-handle-your-accounting-2l6</guid>
      <description>&lt;p&gt;Freelance is not about just getting clients and delivering your services. Since you are the boss for yourself, you have to think about other things in parallel. One of them is being accountable for your finance flow.&lt;/p&gt;

&lt;p&gt;When it comes to handling this, I've seen different approaches:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Some use standard spreadsheets like Excel or similar solutions on cloud like &lt;a href="https://www.google.com/sheets/about/"&gt;Google Sheets&lt;/a&gt;. There are built-in templates for accounting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Others use Accounting software (usually paid for advanced features) like &lt;a href="https://www.freshbooks.com/"&gt;FreshBooks&lt;/a&gt;, &lt;a href="https://quickbooks.intuit.com/global/"&gt;QuickBooks&lt;/a&gt;, &lt;a href="https://www.waveapps.com/"&gt;Wave&lt;/a&gt;, &lt;a href="https://www.xero.com/"&gt;Xero&lt;/a&gt;, &lt;a href="https://www.zoho.com/books/"&gt;Zoho Books&lt;/a&gt;, &lt;a href="https://www.freeagent.com/"&gt;FreeAgent&lt;/a&gt;, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Or do you hire a professional to handle all of that, so you can fully concentrate with interactions with your clients and your business logic? &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What's your approach on handling your Accounting and how much do you spend on it monthly?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>business</category>
      <category>finance</category>
      <category>accounting</category>
    </item>
    <item>
      <title>Create a Netflix clone from Scratch: JavaScript PHP + MySQL Day 45</title>
      <author>Christopher Glikpo</author>
      <pubDate>Thu, 09 Sep 2021 06:47:08 +0000</pubDate>
      <link>https://dev.to/cglikpo/create-a-netflix-clone-from-scratch-javascript-php-mysql-day-45-34ag</link>
      <guid>https://dev.to/cglikpo/create-a-netflix-clone-from-scratch-javascript-php-mysql-day-45-34ag</guid>
      <description>&lt;p&gt;Netflix provides streaming movies and TV shows to over 75 million subscribers across&lt;br&gt;
the globe. Customers can watch as many shows/ movies as they want as long as they are&lt;br&gt;
connected to the internet for a monthly subscription fee of about ten dollars. Netflix produces&lt;br&gt;
original content and also pays for the rights to stream feature films and shows.&lt;/p&gt;

&lt;p&gt;In this video,we will be Creating Video Preview Provider Class&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/KvY6RlnKIek"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this video,we will be Getting Random Entity from Database&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/x6IAEYbi-CI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this video,we will be Creating the Entity Class&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/hmBtwc0xGW0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this video,we will be Getting Entity Data&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/TwToGMtVUhI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this video,we will be Showing Preview Video&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/pQ1SZXib4m0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this video,we will be Creating the preview Overlay&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/OMLNvFvnU8k"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this video,we will be Creating Preview details element&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-8U-b2GaUrw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you like my work, please consider&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/cglikpo"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c23TxQOF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jm11knj7d8zwcvo150q2.png" alt="Buy me a coffee"&gt;&lt;/a&gt;&lt;br&gt;
so that I can bring more projects, more articles for you&lt;/p&gt;

&lt;p&gt;If you want to learn more about Web Development, feel free to &lt;a href="https://www.youtube.com/c/ChristopherGlikpo"&gt;follow me on Youtube!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>php</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>What is Imposter Syndrome?</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Thu, 09 Sep 2021 06:34:07 +0000</pubDate>
      <link>https://dev.to/rainboestrykr/what-is-imposter-syndrome-2b8m</link>
      <guid>https://dev.to/rainboestrykr/what-is-imposter-syndrome-2b8m</guid>
      <description>&lt;p&gt;Every person, sooner or later, is going to suffer from this thing which we label ‚Äúimposter syndrome‚Äù.&lt;/p&gt;

&lt;p&gt;You might have this feeling now, but you don‚Äôt know that it has a name attached.&lt;/p&gt;

&lt;p&gt;Let me describe some situations where you might find imposter syndrome in the wild.&lt;/p&gt;

&lt;ul&gt; 
&lt;li&gt; You are a developer, have no Computer Science degree, and you feel people that have the CS degree know a lot more than you, and you should get one too in order to be called a developer
&lt;/li&gt;
&lt;li&gt;You work on a project and you call it a little side project, not a real project, because - you know - it‚Äôs just a simple app
&lt;/li&gt;
&lt;li&gt;You think other developers know a lot more than you do.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now sometimes I think the solution is to tell yourself:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;everyone‚Äôs winging it
&lt;/li&gt;
&lt;li&gt;no one really knows what they are doing
&lt;/li&gt;
&lt;li&gt;people you look up to like to show themselves as overconfident publicly, but under the hood they‚Äôre not really like that
&lt;/li&gt;
&lt;li&gt;things will always be like this
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But this is still very self-deprecating.&lt;/p&gt;

&lt;p&gt;The real response to all this thinking is to realize how far you went from when you started.&lt;/p&gt;

&lt;p&gt;Look back.&lt;/p&gt;

&lt;p&gt;There was a day when you could not even figure out how to start the computer. What code even was. You didn‚Äôt know you could actually create programs and make the computer do what you want.&lt;/p&gt;

&lt;p&gt;Look at you now.&lt;/p&gt;

&lt;p&gt;You are the best version of yourself and yet you are perfectly sure that tomorrow you‚Äôll be an even better version.&lt;/p&gt;

&lt;p&gt;You are improving. Just like your code.&lt;/p&gt;

&lt;p&gt;The only way to stop feeling like an impostor is to stop thinking like an impostor.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Break the silence. 
&lt;/li&gt;
&lt;li&gt;Separate feelings from fact. 
&lt;/li&gt;
&lt;li&gt;Recognize when you should feel fraudulent. 
&lt;/li&gt;
&lt;li&gt;Accentuate the positive. 
&lt;/li&gt;
&lt;li&gt;Develop a healthy response to failure and mistake making. 
&lt;/li&gt;
&lt;li&gt;Right the rules.
&lt;/li&gt;
&lt;li&gt;Develop a new script.
&lt;/li&gt;
&lt;li&gt;Visualize success.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But you know you are not perfect at your craft, and I think that this is a feeling that might never go away. After all programming is such an enormous field.&lt;/p&gt;

&lt;p&gt;And we all know that person that is very overconfident, and will deprecate others just because they don‚Äôt know that specific thing they happen to know a lot about‚Ä¶ well, don‚Äôt be that person.&lt;/p&gt;

&lt;p&gt;Find your sweet spot.&lt;/p&gt;

&lt;p&gt;I‚Äôm sure you‚Äôll even get better at your craft if you start believing more that you were made for it.&lt;/p&gt;

&lt;p&gt;The hardest part of solving a bug is identifying that bug. The rest comes easier.&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>beginners</category>
      <category>career</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
