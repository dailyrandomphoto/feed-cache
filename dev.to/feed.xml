<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Send automated emails using n8n.io
</title>
      <author>Suchitra</author>
      <pubDate>Mon, 27 Dec 2021 16:45:09 +0000</pubDate>
      <link>https://dev.to/suchitra_13/send-automated-emails-using-n8nio-5a5m</link>
      <guid>https://dev.to/suchitra_13/send-automated-emails-using-n8nio-5a5m</guid>
      <description>&lt;h2&gt;
  &lt;a href="#you-will-need"&gt;
  &lt;/a&gt;
  You will need
&lt;/h2&gt;

&lt;p&gt;1 Terminal (ex- Git Bash)&lt;br&gt;
2 Email ID&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#stepbystep-guide"&gt;
  &lt;/a&gt;
  Step-By-Step Guide
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#step-1-install-n8n-using-npm-or-npx"&gt;
  &lt;/a&gt;
  Step 1: Install n8n using npm or npx
&lt;/h3&gt;

&lt;p&gt;Install n8n locally on our system, use the below command.&lt;br&gt;
&lt;code&gt;npm install n8n -g&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Alternative, If we just want to use n8n without downloading to a local machine, can use this command&lt;br&gt;
&lt;code&gt;npx n8n&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In this guide, we will work you through using npx.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#step-2-copy-the-url-and-paste-it-in-the-address-bar"&gt;
  &lt;/a&gt;
  Step 2:  Copy the URL and paste it in the address bar
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KlLzP7St--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/by60s6xc2czb5ju9q9rz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KlLzP7St--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/by60s6xc2czb5ju9q9rz.png" alt="SS1" width="880" height="310"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After pasting “&lt;a href="http://localhost:5678/%E2%80%9D"&gt;http://localhost:5678/”&lt;/a&gt; in the address bar, we will get the n8n workflow page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--05r6OmYH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idsd7u3f0adaph6fxile.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--05r6OmYH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idsd7u3f0adaph6fxile.png" alt="SS2" width="880" height="437"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now, we are in n8n workflow, where we can use various types of tools to automate the task. So, over here, we will be using the “send email” node for sending the emails using this workflow.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#step-3-select-the-send-email-node"&gt;
  &lt;/a&gt;
  Step 3: Select the “send email” node
&lt;/h3&gt;

&lt;p&gt;Go to the “+” and in the search box type “send email” then select it. After selecting the “send email” node, the below window will pop up.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NvMzEClz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cfeqcodo0yct193cv14e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NvMzEClz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cfeqcodo0yct193cv14e.png" alt="SS3" width="880" height="446"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: Before putting the mail address in “from email” make sure that you have the correct and that email account on a service with SMTP support.&lt;/p&gt;

&lt;p&gt;If we have a simple email account but in this case, we can also register our email account for SMTP service support by using some SMTP service provider's example elastic email.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#step-4-create-smtp-credentials"&gt;
  &lt;/a&gt;
  Step 4: Create SMTP credentials
&lt;/h3&gt;

&lt;p&gt;Go to Elastic-Email website and create SMTP credentials for your email. After creating, make sure to copy your password.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nICuBvyd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/50989jjfqzeekb6y1suq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nICuBvyd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/50989jjfqzeekb6y1suq.png" alt="SS4" width="880" height="427"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, we are ready to put all the required details for executing our “send email” node.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#step-5-put-all-the-details-for-sending-the-mail-from-the-send-email-node"&gt;
  &lt;/a&gt;
  Step 5: Put all the details for sending the mail from the “send email” node
&lt;/h3&gt;

&lt;p&gt;Click on “SMTP credential” and select the pencil icon and put all the details from the Elasic-Email SMTP details.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p9ItibJf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9in516sa5r2z0tzmm76w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p9ItibJf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9in516sa5r2z0tzmm76w.png" alt="SS5" width="880" height="379"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Note: In “from email” put only that email which you have provided for SMTP service.&lt;/p&gt;

&lt;p&gt;1 Fill the “from email” address&lt;br&gt;
2 “To email” address&lt;br&gt;
3 BCC and CSS email (Optional)&lt;br&gt;
4 Subject&lt;br&gt;
5 Text or HTML form message&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3W7Vp-8d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yzlczy02032fg5rtysuj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3W7Vp-8d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yzlczy02032fg5rtysuj.png" alt="SS6" width="880" height="438"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If all goes fine then the response will be like the below image&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rfzQ3Xdy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ax9uj2h4ejkv8hqao1x7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rfzQ3Xdy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ax9uj2h4ejkv8hqao1x7.png" alt="SS7" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  Result
&lt;/h2&gt;

&lt;p&gt;Note: Check the spam folder also, if you don’t find it in your inbox.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t4JGodH9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tjs9e8hdw4dhjyx81z3l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t4JGodH9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tjs9e8hdw4dhjyx81z3l.png" alt="SS8" width="880" height="430"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#thanks-for-follow-along-hope-it-helps"&gt;
  &lt;/a&gt;
  &lt;em&gt;Thanks for follow along, hope it helps!&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/suchitra"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dWYI_Yhx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cawwn08bx5rh2s9bax2x.png" alt="image" width="545" height="153"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__449284"&gt;
  
    .ltag__user__id__449284 .follow-action-button {
      background-color: #a600ff !important;
      color: #ffd500 !important;
      border-color: #a600ff !important;
    }
  
    &lt;a href="/suchitra_13" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4xeM4t5L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7hzloJNB--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/449284/d7520737-9b20-4d78-896c-f7725fe51850.jpg" alt="suchitra_13 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/suchitra_13"&gt;Suchitra&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/suchitra_13"&gt;I am enthusiastic about code and technology!!&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>beginners</category>
      <category>guide</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>3 magic steps to create and monetize an app ✨</title>
      <author>Łukasz Wardęga</author>
      <pubDate>Mon, 27 Dec 2021 16:18:29 +0000</pubDate>
      <link>https://dev.to/livechat/three-magic-steps-to-create-and-monetize-an-app-40o5</link>
      <guid>https://dev.to/livechat/three-magic-steps-to-create-and-monetize-an-app-40o5</guid>
      <description>&lt;p&gt;If you think about creating a source of passive income, or you would like to challenge yourself with creating an app from scratch, &lt;strong&gt;I have good and bad news for you.&lt;/strong&gt; 👌&lt;/p&gt;

&lt;p&gt;The good news is that it’s really simple, and the bad news is... that it’s really simple, so it won’t be that challenging.&lt;/p&gt;

&lt;p&gt;But let’s get to the point. In LiveChat, we run a Developer Program that allows external developers to create custom extensions and integrations for our product. These apps can be later bought by LiveChat’s users (all 34k of them) in our Marketplace.&lt;/p&gt;

&lt;p&gt;In our Program, we help you with the ideas for apps and support you with distribution among our users. (If you wonder what apps we currently are looking for, check out &lt;a href="https://developers.livechat.com/app-ideas/?utm_source=devto&amp;amp;utm_medium=referral&amp;amp;utm_campaign=magic_video_tutorials"&gt;this site&lt;/a&gt;.) You can also consult the technical details with our staff while creating your application.&lt;/p&gt;

&lt;p&gt;A couple of days before Christmas, Oliwia, our Technical Writer, created three short video tutorials which will help you get along with our Developer Console.&lt;/p&gt;

&lt;p&gt;In these three videos, you will see her becoming a wizard 🧝‍♀️ and learn about the basic functionalities of our Developer Console. She will also explain to you how to submit an app through the dashboard and how to monetize it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Check it out!&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-introduction-to-the-livechat-developer-console"&gt;
  &lt;/a&gt;
  1. Introduction to the LiveChat Developer Console
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/z_7fGblf7dQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-creating-an-app"&gt;
  &lt;/a&gt;
  2. Creating an App
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/QmnFM-p8zpg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-monetization"&gt;
  &lt;/a&gt;
  3. Monetization
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/yVO7-jt_SQY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you have any questions about the Developer Console or you would like to start building your own app, let me know in the comments! You can also check out our &lt;a href="https://developers.livechat.com/?utm_source=devto&amp;amp;utm_medium=referral&amp;amp;utm_campaign=magic_video_tutorials"&gt;Developer Program site&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Responsive Footer Design using HTML and CSS</title>
      <author>Shantanu Jana</author>
      <pubDate>Mon, 27 Dec 2021 16:16:53 +0000</pubDate>
      <link>https://dev.to/shantanu_jana/responsive-footer-design-using-html-and-css-m1i</link>
      <guid>https://dev.to/shantanu_jana/responsive-footer-design-using-html-and-css-m1i</guid>
      <description>&lt;p&gt;In this article, you will learn how to create a Responsive Footer Design using HTML and CSS. Earlier I shared many more types of &lt;a href="https://www.foolishdeveloper.com/2021/09/responsive-footer-design.html"&gt;simple footer design&lt;/a&gt; tutorials with you. The design that I have shown in this tutorial is very simple and easy. Will be very suitable for different types of personal websites or business websites. &lt;/p&gt;

&lt;p&gt;Live Demo: &lt;a href="https://codepen.io/codemediaweb/full/RwZzQme"&gt;https://codepen.io/codemediaweb/full/RwZzQme&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is made fully responsive so that it can be easily used on any device. CSS's Flexbox has been used to make it responsive. With the help of Flexbox, no separate CSS code had to be added to make it responsive.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;📌📌 I have already shared &lt;a href="https://www.foolishdeveloper.com/2021/12/responsive-footer-design-using-html-css.html"&gt;step by step tutorial&lt;/a&gt;. If you have difficulty understanding the code, you can follow the tutorial.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;HTML Code:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;footer&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row primary"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"column about"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;Foolish Developer&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;

   &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
      Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae,
      voluptatem corporis error non,
  &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fa-brands fa-facebook-square"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fa-brands fa-instagram-square"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fa-brands fa-twitter-square"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fa-brands fa-youtube-square"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fa-brands fa-whatsapp-square"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"column links"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;Some Links&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;

 &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#faq"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;F.A.Q&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#cookies-policy"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Cookies Policy&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#terms-of-services"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Terms Of Service&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#support"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Support&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;


&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"column links"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;Some Links&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#faq"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;F.A.Q&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#cookies-policy"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Cookies Policy&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#terms-of-services"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Terms Of Service&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#support"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Support&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"column subscribe"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;Newsletter&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Your email id here"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Subscribe&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row copyright"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"footer-menu"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;About&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Contact&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Blog&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Social&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Copyright &lt;span class="ni"&gt;&amp;amp;copy;&lt;/span&gt; 2021 Foolish Developer&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;CSS Code:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;footer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#121315&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#a7a7a7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;footer&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"Poppins"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.row&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.row.primary&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;stretch&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.column&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;2em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;h3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.4em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;nowrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;list-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;:first-child&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.8em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#a7a7a7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#2a8ded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.about&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;justify&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#c7940a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ffffff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nc"&gt;.social&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-around&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.4em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.social&lt;/span&gt; &lt;span class="nt"&gt;i&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#bac6d9&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.copyright&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.3em&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#25262e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.footer-menu&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.footer-menu&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#cfd2d6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.footer-menu&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#27bcda&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.copyright&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.9em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;850px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.row.primary&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can &lt;a href="https://www.foolishdeveloper.com/2021/12/responsive-footer-design-using-html-css.html"&gt;download the source code&lt;/a&gt; if you want.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>5 Articles every WebDev should read this week (#51)
</title>
      <author>martin krause</author>
      <pubDate>Mon, 27 Dec 2021 16:10:03 +0000</pubDate>
      <link>https://dev.to/martinkr/5-articles-every-webdev-should-read-this-week-51-16c5</link>
      <guid>https://dev.to/martinkr/5-articles-every-webdev-should-read-this-week-51-16c5</guid>
      <description>&lt;p&gt;A curated list of the top five web development must-reads from last week. Don't miss out on the latest web development stories and insights. Read all about the cutting edge in web development, working in tech and the new tools and frameworks while learning a few new tricks.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#react-conf-2021-recap"&gt;
  &lt;/a&gt;
  React Conf 2021 Recap
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Last week we hosted our 6th React Conf. In previous years, we’ve used the React Conf stage to deliver industry changing announcements such as React Native and React Hooks. This year, we shared our multi-platform vision for React, starting with the release of React 18 and gradual adoption of concurrent features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/blog/2021/12/17/react-conf-2021-recap.html"&gt;https://reactjs.org/blog/2021/12/17/react-conf-2021-recap.html&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#improving-core-web-vitals-a-smashing-magazine-case-study"&gt;
  &lt;/a&gt;
  Improving Core Web Vitals, A Smashing Magazine Case Study
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;At Smashing, we’ve struggled with amber Core Web Vitals score for a while. Then after 6 months we finally managed to fix it. Here’s a little case study on how we detected and fixed the bottlenecks, and how we ended up with green scores, all the way.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.smashingmagazine.com/2021/12/core-web-vitals-case-study-smashing-magazine/"&gt;https://www.smashingmagazine.com/2021/12/core-web-vitals-case-study-smashing-magazine/&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#why-are-hyperlinks-blue"&gt;
  &lt;/a&gt;
  Why are hyperlinks blue?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The internet has ingrained itself into every aspect of our lives, but there’s one aspect of the digital world that I bet you take for granted. Did you ever notice that many links, specifically hyperlinks, are blue? When a co-worker casually asked me why links are blue, I was stumped.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://blog.mozilla.org/en/internet-culture/deep-dives/why-are-hyperlinks-blue/"&gt;https://blog.mozilla.org/en/internet-culture/deep-dives/why-are-hyperlinks-blue/&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#writing-clean-javascript-tests-with-the-basic-principles"&gt;
  &lt;/a&gt;
  Writing clean JavaScript tests with the BASIC principles
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Production code, the main code where the features live, might not be perfect. That’s a risk or a debt that teams manage in multiple ways. For testing code, the risk is much more dramatic — It can be abandoned altogether. Vanish, gone, not doing anything anymore. Hundreds of coding hours, meetings, and sweat can just get lost.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://yonigoldberg.medium.com/fighting-javascript-tests-complexity-with-the-basic-principles-87b7622eac9a"&gt;https://yonigoldberg.medium.com/fighting-javascript-tests-complexity-with-the-basic-principles-87b7622eac9a&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#guidelines-for-choosing-a-nodejs-framework"&gt;
  &lt;/a&gt;
  Guidelines for choosing a Node.js framework
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;I often see the question "What’s the best Node.js framework?" crop up on message boards and social media. The replies tend to be full of strong opinions. Some developers will even get into arguments about it. If you’re trying to figure out the right framework for your project, none of this is going to be much help.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://simonplend.com/guidelines-for-choosing-a-node-js-framework/"&gt;https://simonplend.com/guidelines-for-choosing-a-node-js-framework/&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Follow me on &lt;a href="http://twitter.com/_martinkr"&gt;Twitter: @martinkr&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@burntime"&gt;Alex Kulikov&lt;/a&gt; on &lt;a href="https://unsplash.com"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://modernfrontend.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cH97ToOx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://modernfrontend.dev/banner/banner_583-111.png" alt="Subscribe to the weekly modern frontend development newsletter" width="583" height="111"&gt;&lt;/a&gt;&lt;/p&gt;




</description>
      <category>webdev</category>
      <category>tutorial</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Why TurboRepo Will Be The First Big Trend of 2022</title>
      <author>swyx</author>
      <pubDate>Mon, 27 Dec 2021 16:08:03 +0000</pubDate>
      <link>https://dev.to/swyx/why-turborepo-will-be-the-first-big-trend-of-2022-4gfj</link>
      <guid>https://dev.to/swyx/why-turborepo-will-be-the-first-big-trend-of-2022-4gfj</guid>
      <description>&lt;p&gt;TurboRepo was &lt;a href="https://vercel.com/blog/vercel-acquires-turborepo"&gt;acquired by Vercel&lt;/a&gt; recently and I caught up on Jared Palmer's excellent intro demo to see what the fuss is all about:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/YX5yoApjI3M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Here are quick notes for those too busy to view the whole thing, followed by personal reflections at the end.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;

&lt;p&gt;See the TLDR of this post in thread form:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--z7-y2i56--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1456506127961640962/iM2Hf8du_normal.jpg" alt="swyx profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        swyx
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/swyx"&gt;@swyx&lt;/a&gt;
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      In 1976, Stuart Feldman made Make, the build system that secretly runs ~all open source.&lt;br&gt;&lt;br&gt;In 2021, &lt;a href="https://twitter.com/jaredpalmer"&gt;@jaredpalmer&lt;/a&gt; spent the year working on a new tool that is up to 85% faster. @Vercel snapped it up last month.&lt;br&gt;&lt;br&gt;Why @TurboRepo will blow up in 2022:&lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/iWFjB792cf"&gt;dev.to/swyx/why-turbo…&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:50 PM - 27 Dec 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1475509463813529601" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1475509463813529601" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1475509463813529601" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#why-monorepos"&gt;
  &lt;/a&gt;
  Why Monorepos
&lt;/h2&gt;

&lt;p&gt;You can refer to other sources for &lt;a href="https://www.toptal.com/front-end/guide-to-monorepos"&gt;definitions of Monorepos&lt;/a&gt;, but we'll spend some time on covering why they are a worthwhile goal:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can easily make &lt;strong&gt;cross cutting code changes&lt;/strong&gt; across multiple applications (eg &lt;code&gt;/frontend&lt;/code&gt; and &lt;code&gt;/backend&lt;/code&gt;) in one atomic commit&lt;/li&gt;
&lt;li&gt;You can easily &lt;strong&gt;search&lt;/strong&gt; across all projects&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Single source of truth&lt;/strong&gt; for many environment concerns you will want to standardize across your company, for example:

&lt;ul&gt;
&lt;li&gt;dependency management (important deps in one &lt;code&gt;package.json&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;code reuse of shared packages (e.g. &lt;code&gt;/design-system&lt;/code&gt; or &lt;code&gt;/common-utils&lt;/code&gt; or &lt;code&gt;/schema&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;configs (ESlint, TSconfig, etc)&lt;/li&gt;
&lt;li&gt;tests (from unit to e2e)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;For library authors, it is also easier to publish packages with dependencies on each other.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Major JS ecosystem tools like React, Jest, pnpm, Next.js, and Yarn itself have moved to Monorepos, as have small startups and large companies like FB and &lt;a href="https://cacm.acm.org/magazines/2016/7/204032-why-google-stores-billions-of-lines-of-code-in-a-single-repository/fulltext"&gt;Google&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#origin-of-turborepo"&gt;
  &lt;/a&gt;
  Origin of TurboRepo
&lt;/h2&gt;

&lt;p&gt;The origin story of TurboRepo started with this &lt;a href="https://github.com/jaredpalmer/tsdx/issues/122"&gt;looongstanding open issue&lt;/a&gt; on TSDX from Nate Moore:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AatiKf6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op5kdp9dw4ns6yeugdk2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AatiKf6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op5kdp9dw4ns6yeugdk2.png" alt="Image description" width="880" height="843"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As an early volunteer on TSDX I studiously avoided  this issue because I never worked at a company with a large monorepo, and thought that it should be solved by dedicated tools like &lt;code&gt;yarn workspace&lt;/code&gt;, which at the time was just gaining traction itself.&lt;/p&gt;

&lt;p&gt;To solve this, Jared tried to extract Lerna into a monorepo tool, and when researching how big monorepo shops like Facebook and Google did task running, discovered that a lot of their advanced techniques had not made it into the larger JS ecosystem.&lt;/p&gt;

&lt;p&gt;So, TurboRepo was started with 3 objectives: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;make a monorepo tool that utilizes as many of these advanced techniques as possible &lt;strong&gt;with zero config&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;make it easy to &lt;strong&gt;incrementally adopt&lt;/strong&gt; (eg when moving from Lerna)&lt;/li&gt;
&lt;li&gt;make sure that it &lt;strong&gt;scales&lt;/strong&gt; (eg API design and architectural choices are flexible enough)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The fuller story of TurboRepo is told by Jared in this thread:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M5jemcJD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Eq64QrMXMAQUsTG.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s---mH6khoS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1473479314834345990/rNrZqEdU_normal.jpg" alt="Jared Palmer profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Jared Palmer
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/jaredpalmer"&gt;@jaredpalmer&lt;/a&gt;
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Started hacking on a monorepo new build system called @TurboRepo over the holidays. The mvp can speed up Lerna by ~3-30x so far through remote caching + task scheduling. Going to be building it in public over the next few weeks. DM me if you're interested in trying it out 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      22:11 PM - 04 Jan 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1346217789942591488" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1346217789942591488" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1346217789942591488" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#what-turborepo-does"&gt;
  &lt;/a&gt;
  What TurboRepo does
&lt;/h2&gt;

&lt;p&gt;The basic principle of TurboRepo is to &lt;strong&gt;never recompute work that has been done before&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;To do this, it generates a dependency graph from your build pipeline from a &lt;code&gt;turbo&lt;/code&gt; config in package.json, executes each task in turn, and fingerprints the input/caches the output of each task. &lt;/p&gt;

&lt;p&gt;When it is run a second time, if it finds work that matches a fingerprint, it restores from cache, and &lt;strong&gt;replays the logs&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-turborepo"&gt;
  &lt;/a&gt;
  How to use TurboRepo
&lt;/h2&gt;

&lt;p&gt;The main CLI surface area is surprisingly small:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;npx create-turbo@latest turbo-demo&lt;/code&gt; scaffolds a monorepo with apps (&lt;code&gt;docs&lt;/code&gt;, &lt;code&gt;web&lt;/code&gt;) and packages (design system and shared configs (eslint, tsconfig))&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;turbo run build&lt;/code&gt; builds all apps at once, but importantly, when you run this command again the second build completes in 100ms because everything is cached. There are a &lt;a href="https://turborepo.org/docs/reference/command-line-reference"&gt;long list of flags you can add&lt;/a&gt; to modify what &lt;code&gt;turbo run&lt;/code&gt; does and outputs.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;turbo prune --scope=&amp;lt;target&amp;gt;&lt;/code&gt; generates a sparse/partial monorepo with a pruned lockfile for a target package.&lt;/li&gt;
&lt;li&gt;Remote Caching commands: &lt;code&gt;turbo login&lt;/code&gt; and &lt;code&gt;turbo link&lt;/code&gt; (explained later)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-raw-turbo-endraw-config-key"&gt;
  &lt;/a&gt;
  The &lt;code&gt;turbo&lt;/code&gt; config key
&lt;/h2&gt;

&lt;p&gt;TurboRepo uses a special key in &lt;code&gt;package.json&lt;/code&gt; called &lt;code&gt;turbo&lt;/code&gt; (&lt;a href="https://turborepo.org/docs/reference/configuration"&gt;docs here&lt;/a&gt;), and it is here that topological relationships between build tasks (and where to fingerprint for cache artifacts) are defined:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"turbo"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"baseBranch"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"origin/main"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"pipeline"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"dependsOn"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"^build"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"outputs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;".next/**"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"dependsOn"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"^build"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"outputs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"lint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"outputs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"dev"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"cache"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This helps Turbo create a Directed Acyclic Graph of your build that it can then walk in reverse for building and checking against its cache. You can even use &lt;a href="https://turborepo.org/docs/reference/command-line-reference#--graph"&gt;the &lt;code&gt;--graph&lt;/code&gt; flag&lt;/a&gt; to visualize your build graph with Graphviz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5VSjpn31--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yj4pqsvaws83v8owgxtw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5VSjpn31--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yj4pqsvaws83v8owgxtw.png" alt="Image description" width="880" height="471"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Having &lt;a href="https://twitter.com/swyx/status/1032665787436343297"&gt;tried out visualization tools before&lt;/a&gt;, imo this is a fun demo but not practically all that useful 🤷‍♂️) &lt;/p&gt;

&lt;p&gt;The other important thing to know is that you can run all these tasks together and Turbo will parallelize as much as possible:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;turbo run build &lt;span class="nb"&gt;test &lt;/span&gt;lint
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To understand what is running in parallel and debug build pipelines, you can even make Turbo output a profile with the &lt;code&gt;--profile&lt;/code&gt; flag to inspect the traces in Chrome DevTools!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H21PeijM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qhydl0cqmbisayfunrks.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H21PeijM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qhydl0cqmbisayfunrks.png" alt="Image description" width="880" height="466"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#remote-caching"&gt;
  &lt;/a&gt;
  Remote Caching
&lt;/h2&gt;

&lt;p&gt;Remote caching is a beta feature, but is set to be far and away the showstopper in making TurboRepo scale. Normally, caches are generated and checked locally, so if you are reviewing code that a coworker has written, you'll have to build it locally too. &lt;/p&gt;

&lt;p&gt;Sounds inefficient? We can fix that.&lt;/p&gt;

&lt;p&gt;Remote Caching shares that cache globally (this is secure to that extent that hashes are secure), turning TurboRepo from a "single player" experience to a "co-op multiplayer" mode. The analogy that resonates a lot with users is that this is basically "Dropbox for your &lt;code&gt;dist&lt;/code&gt; directory".&lt;/p&gt;

&lt;p&gt;This is where Vercel's backing comes in - they are offering &lt;strong&gt;free remote caching&lt;/strong&gt; on TurboRepo builds - you'll still need to make a Vercel account, and they may charge for this later - but this works whether or not your app is built or hosted on Vercel. Brilliant move for everyone concerned! All TurboRepo users get free speedups, Vercel gets a bunch of signups (with network effect) and a possible future revenue source.&lt;/p&gt;

&lt;p&gt;Usage is pretty simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx turbo login &lt;span class="c"&gt;# login to Vercel&lt;/span&gt;
npx turbo &lt;span class="nb"&gt;link&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it! Could not be easier, and offers free speedups.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-future"&gt;
  &lt;/a&gt;
  The Future
&lt;/h2&gt;

&lt;p&gt;Jared ended the livestream by making a few comments on the TurboRepo roadmap&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Telemetry&lt;/li&gt;
&lt;li&gt;Sharding Parallel Tasks in other processes (currently, TurboRepo runs parallel tasks in the same singlethreaded process like Node does - to actually make use of full concurrency it should distribute that work to other processes.  Temporal, &lt;a href="https://www.swyx.io/why-temporal/"&gt;the project I work on&lt;/a&gt;, could be an interesting tool for that in future&lt;/li&gt;
&lt;li&gt;Presets (referred to as "Turbo Season 2")&lt;/li&gt;
&lt;li&gt;Smaller features

&lt;ul&gt;
&lt;li&gt;Public/private security model like npm&lt;/li&gt;
&lt;li&gt;More intelligent watch mode&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;There will probably be &lt;a href="https://vercel.com/contact/turborepo"&gt;Enterprise features&lt;/a&gt; too.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can vote on feature ideas on the TurboRepo &lt;a href="https://github.com/vercel/turborepo/discussions"&gt;GitHub Community&lt;/a&gt; as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#personal-takeaways"&gt;
  &lt;/a&gt;
  Personal Takeaways
&lt;/h2&gt;

&lt;p&gt;TurboRepo is a big deal for the JS community not just because it addresses build speeds (which are always a crowd pleaser), but also that it is a well defined abstraction that brings a lot of value out of the box, with a declarative build pipeline, great debugging/profiling options, and great docs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lZgpaie2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o3cfc9ybz5t6lq7w6htf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lZgpaie2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o3cfc9ybz5t6lq7w6htf.png" alt="Image description" width="329" height="106"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With 74% of its code in Go, TurboRepo is a great example of the &lt;a href="https://www.swyx.io/js-third-age/#the-third-age"&gt;Systems Core, Scripting Shell&lt;/a&gt; thesis, proving out the idea that the age of "JS tools in JS" is over because the need for speed on hot paths outweighs contributor learning curve concerns.&lt;/p&gt;

&lt;p&gt;Many people in the JS community (like my old self) have heard about the benefits of monorepos, but have been held back by the lack of good tooling tackling this problem head on. While there is a &lt;a href="https://turborepo.org/docs/guides/complimentary-tools"&gt;long list of monorepo tooling&lt;/a&gt; tackling various parts of the problem, I see TurboRepo as leading the charge for the new wave of monorepo tooling that will rise to prominence in the Third Age of JavaScript, thanks to strong backing and great developer marketing from Jared and Team Vercel.&lt;/p&gt;

</description>
      <category>devtools</category>
      <category>summaries</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Baloonza IT newsletters weekly digest #17</title>
      <author>Dmitry Magunov</author>
      <pubDate>Mon, 27 Dec 2021 16:05:47 +0000</pubDate>
      <link>https://dev.to/dimamagunov/baloonza-it-newsletters-weekly-digest-17-4p42</link>
      <guid>https://dev.to/dimamagunov/baloonza-it-newsletters-weekly-digest-17-4p42</guid>
      <description>&lt;h3&gt;
  &lt;a href="#product-hunt-daily"&gt;
  &lt;/a&gt;
  Product Hunt Daily
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://app.baloonza.com/issues/10721?baloon_issue_id=17"&gt;Don't be a grinch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://app.baloonza.com/issues/10799?baloon_issue_id=17"&gt;Let's wrap this up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://app.baloonza.com/issues/10859?baloon_issue_id=17"&gt;Out of ideas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://app.baloonza.com/issues/10879?baloon_issue_id=17"&gt;Bookmarked 🔖&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://app.baloonza.com/issues/10925?baloon_issue_id=17"&gt;New traditions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://app.baloonza.com/issues/10970?baloon_issue_id=17"&gt;Something's stirring...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#data-science-weekly-newsletter"&gt;
  &lt;/a&gt;
  Data Science Weekly Newsletter
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://app.baloonza.com/issues/10770?baloon_issue_id=17"&gt;[in case you missed it] Data Science Weekly - Issue 421&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://app.baloonza.com/issues/10955?baloon_issue_id=17"&gt;Data Science Weekly - Issue 422&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#css-web-development-javascript"&gt;
  &lt;/a&gt;
  css, web development, javascript
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;CSS Layout News&lt;/code&gt; &lt;a href="https://app.baloonza.com/issues/10777?baloon_issue_id=17"&gt;Issue 333&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;CSS-Tricks&lt;/code&gt; &lt;a href="https://app.baloonza.com/issues/10812?baloon_issue_id=17"&gt;📝 [CSS-Tricks] 282: We shouldn’t treat accessibility like the cool new thing of the week&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Frontend Focus&lt;/code&gt; &lt;a href="https://app.baloonza.com/issues/10872?baloon_issue_id=17"&gt;Looking back at all things frontend in 2021&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Frontend Weekly&lt;/code&gt; &lt;a href="https://app.baloonza.com/issues/10877?baloon_issue_id=17"&gt;Frontend Weekly - Issue 285&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;CSS Weekly&lt;/code&gt; &lt;a href="https://app.baloonza.com/issues/10882?baloon_issue_id=17"&gt;Issue #486: Reverting Animations, :has() selector&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Awesome React Newsletter&lt;/code&gt; &lt;a href="https://app.baloonza.com/issues/10950?baloon_issue_id=17"&gt;💻 Issue 210 - "Learning Patterns" - a free ebook on JavaScript + React design &amp;amp; performance patterns from Lydia Hallie and Addy Osmani&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Awesome Javascript Newsletter&lt;/code&gt; &lt;a href="https://app.baloonza.com/issues/10946?baloon_issue_id=17"&gt;💻 Issue 292 - Patterns.dev is a free book on design patterns&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ariyh"&gt;
  &lt;/a&gt;
  Ariyh
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://app.baloonza.com/issues/10820?baloon_issue_id=17"&gt;🎓 Give your products space&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>startup</category>
      <category>css</category>
    </item>
    <item>
      <title> The most important sites for employment and remote work</title>
      <author>Mahmoud EL-kariouny</author>
      <pubDate>Mon, 27 Dec 2021 16:00:27 +0000</pubDate>
      <link>https://dev.to/mahmoudessam/the-most-important-sites-for-employment-and-remote-work-4b0p</link>
      <guid>https://dev.to/mahmoudessam/the-most-important-sites-for-employment-and-remote-work-4b0p</guid>
      <description>&lt;p&gt;1- &lt;a href="https://supportfinity.com/skilled-people/building-profile/Y0DrL"&gt;Supportfinity&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2- &lt;a href="https://developers.turing.com/signup"&gt;Turing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3- &lt;a href="https://arc.dev/"&gt;Arc.dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4- &lt;a href="https://weworkremotely.com/"&gt;Weworkremotely&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5- &lt;a href="https://stackoverflow.com/jobs"&gt;Stack overflow jobs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;6- &lt;a href="https://angel.co/"&gt;Angel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;7- &lt;a href="https://remoteok.io/"&gt;Remoteok&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;8- &lt;a href="https://remotive.io/"&gt;Remotive&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;10- &lt;a href="https://dribbble.com/"&gt;Dribbble&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;11- &lt;a href="https://www.glassdoor.com/index.htm"&gt;glassdoor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;12- &lt;a href="https://vanhack.com/jobs?gclid=Cj0KCQiA5aWOBhDMARIsAIXLlkfQGAoBadpMs6LMGWkNjFj-c-eB1iA4bAn8tosFUlpgHO6pofqSaoUaAnn5EALw_wcB"&gt;vanhack&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All the best for you.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
      <category>news</category>
    </item>
    <item>
      <title>Important string methods</title>
      <author>Pritom Deb</author>
      <pubDate>Mon, 27 Dec 2021 15:54:55 +0000</pubDate>
      <link>https://dev.to/pritomdbhaskar/important-string-methods-59h4</link>
      <guid>https://dev.to/pritomdbhaskar/important-string-methods-59h4</guid>
      <description>&lt;p&gt;&lt;strong&gt;1. &lt;u&gt;concat&lt;/u&gt;(str1, str2, ... , strN)&lt;/strong&gt;&lt;br&gt;
The concat() method joins two or more strings. The concat() method does not change the existing strings. The concat() method returns a new string.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HmDEHHuU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/um43uzo65oo60xuvvkkh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HmDEHHuU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/um43uzo65oo60xuvvkkh.png" alt="Image description" width="880" height="493"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. &lt;u&gt;endsWith&lt;/u&gt;(searchString, length)&lt;/strong&gt;&lt;br&gt;
Checks whether a string ends with specified string/characters. It only returns true or false. The endsWith() method is case sensitive.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yJpIxBqn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vl8ycl51un4e7ixx3v4a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yJpIxBqn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vl8ycl51un4e7ixx3v4a.png" alt="Image description" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. &lt;u&gt;includes&lt;/u&gt;(searchString, position)&lt;/strong&gt;&lt;br&gt;
Checks whether a string contains the specified string/characters. It only returns true or false. The includes() method is case sensitive.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zg7jp5VH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/az4whit7yf3iyrugrerr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zg7jp5VH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/az4whit7yf3iyrugrerr.png" alt="Image description" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. &lt;u&gt;indexOf&lt;/u&gt;(searchValue, fromIndex)&lt;/strong&gt;&lt;br&gt;
Returns the position of the first found occurrence of a specified value in a string. The indexOf() method returns -1 if the value is not found. The indexOf() method is case sensitive.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_c3xc7HS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hmx3ymbg44zadz8wlwxs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_c3xc7HS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hmx3ymbg44zadz8wlwxs.png" alt="Image description" width="880" height="523"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. &lt;u&gt;lastIndexOf&lt;/u&gt;(searchValue, fromIndex)&lt;/strong&gt;&lt;br&gt;
Returns the position of the last found occurrence of a specified value in a string. The indexOf() method returns -1 if the value is not found. The lastIndexOf() method is case sensitive.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iHOQQYeI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gjdoafhg6ds08mwy5w7o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iHOQQYeI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gjdoafhg6ds08mwy5w7o.png" alt="Image description" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. &lt;u&gt;replace&lt;/u&gt;(regexp/substr, newSubstr/replacerFunction)&lt;/strong&gt;&lt;br&gt;
Searches a string for a specified value, or a regular expression, and returns a new string where the specified values are replaced.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sm_5tCX2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9klhlbs5o3qtcter6dds.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sm_5tCX2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9klhlbs5o3qtcter6dds.png" alt="Image description" width="880" height="430"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. &lt;u&gt;slice&lt;/u&gt;(beginIndex, endIndex)&lt;/strong&gt;&lt;br&gt;
Extracts a part of a string and returns a new string.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yVHBkTVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xyvwzar4loyxeyyoqku5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yVHBkTVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xyvwzar4loyxeyyoqku5.png" alt="Image description" width="880" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. &lt;u&gt;split&lt;/u&gt;(separator, limit)&lt;/strong&gt;&lt;br&gt;
Splits a string into an array of substrings. If (" ") is used as separator, the string is split between words.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MJOnB8_d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y2byid4qxm3ylo8ifzfc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MJOnB8_d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y2byid4qxm3ylo8ifzfc.png" alt="Image description" width="880" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. &lt;u&gt;startsWith&lt;/u&gt;(searchString, position)&lt;/strong&gt;&lt;br&gt;
Checks whether a string begins with specified characters. It only returns true or false. The startsWith() method is case sensitive.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F0W6GTMn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fvcmrrp7dcy5cy1k1di9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F0W6GTMn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fvcmrrp7dcy5cy1k1di9.png" alt="Image description" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. &lt;u&gt;toLocaleLowerCase&lt;/u&gt;()&lt;/strong&gt;&lt;br&gt;
Converts a string to lowercase letters, according to the host's locale. The locale is based on the language settings of the browser. The toLocaleLowerCase() returns the same result as toLowerCase(), except for locales that conflict with the regular Unicode case mappings (such as Turkish).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MV2tdIin--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9321uhxescypt2mu7og.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MV2tdIin--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9321uhxescypt2mu7og.png" alt="Image description" width="880" height="369"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;11. &lt;u&gt;toLocaleUpperCase&lt;/u&gt;()&lt;/strong&gt;&lt;br&gt;
Converts a string to uppercase letters, according to the host's locale. The locale is based on the language settings of the browser. The toLocaleUpperrCase() returns the same result as toLowerCase(), except for locales that conflict with the regular Unicode case mappings (such as Turkish).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8ffLltFC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6fbo1p177vspfhlqrp9v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ffLltFC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6fbo1p177vspfhlqrp9v.png" alt="Image description" width="880" height="369"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12. &lt;u&gt;toLowerCase&lt;/u&gt;()&lt;/strong&gt;&lt;br&gt;
Converts a string to lowercase letters.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--82RS1vub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9qir24tde4hdothd9gkg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--82RS1vub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9qir24tde4hdothd9gkg.png" alt="Image description" width="880" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;13. &lt;u&gt;toLowerCase&lt;/u&gt;()&lt;/strong&gt;&lt;br&gt;
Converts a string to uppercase letters.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IbJKvlTO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hgiv3w0ops8c11kjsosf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IbJKvlTO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hgiv3w0ops8c11kjsosf.png" alt="Image description" width="880" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Learn Javascript __part1
</title>
      <author>Zahab Kakar</author>
      <pubDate>Mon, 27 Dec 2021 15:54:50 +0000</pubDate>
      <link>https://dev.to/zahab/learn-javascript-part1-2e8d</link>
      <guid>https://dev.to/zahab/learn-javascript-part1-2e8d</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;The JavaScript Part 1 is the First article of Learn JavaScript Series which includes the explanation, example of all the basics of JavaScript. So, if you are a developer, who has no idea about JavaScript or you are a beginner JavaScript developer, You can start from this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-javascript"&gt;
  &lt;/a&gt;
  What is JavaScript?
&lt;/h2&gt;

&lt;p&gt;JavaScript is the most popular programming language and is used on both the client-side and server-side that allowing you to make web pages interactive. JS creates and controls dynamic website content, this means that anything changes and moves on your screen without reloading a web page are done by javascript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-do-you-need-to-learn-javascript"&gt;
  &lt;/a&gt;
  Why do you need to learn javascript?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Highest community size&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JavaScript has the highest community size and almost 97% of the websites are using JavaScript.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy to learn&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JavaScript is very easy and does not require any environment setup.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; If you learn javascript, you can develop&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1.   Websites
2.   Mobile apps
3.   Desktops apps
4.   Machine learning models
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#javascript-basics"&gt;
  &lt;/a&gt;
  JavaScript basics
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Hello World&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The first step is to learn how to execute your code, as I said before Js doesn't require any environment setup, You can just use your browser Developer Tools. Click right and select inspect, then go to the console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bXmwETwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/006dtjexl89wdnsbl9kr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bXmwETwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/006dtjexl89wdnsbl9kr.png" alt="Image description" width="880" height="408"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here console.log just printed the Hello world at the console of the browser.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Variables&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Variables in JavaScript are just a container that stores the value. The variable declaration has the following syntax: " variableKeyword variableName = value; "&lt;/p&gt;

&lt;p&gt;There are three keywords in JS that can be used as a variable keyword (var, let, const). variableName is the name that you give to the variable and the value which will be assigned to the variable means this variable holds this value inside itself and whenever the variable is called, it provides the value.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;course&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Zahab&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;course&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you paste the above code on the console and click enter the output will be "JavaScript Zahab 123".&lt;/p&gt;

&lt;p&gt;It just provided the value of each variable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6e98o6lU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6po1dgdxsvyjsqq9yznf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6e98o6lU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6po1dgdxsvyjsqq9yznf.png" alt="Image description" width="880" height="458"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see that (var, let, const) are all doing the same thing, they are all just providing the value of the variable but what is the difference between them? Here I will briefly mention their difference, however, if it is still not clear, you can read &lt;a href="https://zahab.tech/const-let-var-which-one-should-you-use"&gt;this&lt;/a&gt; article.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;var:&lt;/strong&gt; The variable defined by the var keyword will be accessible in your entire program and you can reassign it&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let:&lt;/strong&gt; When you declare a variable with the let keyword, the variable is only accessible inside that block in which it is declared.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;const:&lt;/strong&gt; The variable which is defined by the const keyword cannot be reassigned. In the above example, you can not reassign the value of the number from 123 to any other value.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#comment"&gt;
  &lt;/a&gt;
  comment
&lt;/h3&gt;

&lt;p&gt;Comments are used to write notes or ignore the code without deleting them. This means the code or anything which are commented in your program will not be executed. There are two ways that you can comment in JavaScript ( Single line using "//") and (multiple lines using "/* your comment */" )&lt;/p&gt;

&lt;p&gt;Have a look at the below example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// variables example&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;course&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Zahab&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;course&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// console.log(name);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---2vsnzWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j615nwgqun5s586aes9v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---2vsnzWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j615nwgqun5s586aes9v.png" alt="Image description" width="880" height="602"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first line is just a text and it's just for more clarification. It is just a single-line comment.&lt;/p&gt;

&lt;p&gt;I have also commented the (console.log(name)) so that the compiler will not execute that line of code.  The output is multiple lines so we can use multi-line comments, you can see that the comments have a grey color and the "name" variable is not executed because it was just a comment.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#datatypes"&gt;
  &lt;/a&gt;
  DataTypes
&lt;/h3&gt;

&lt;p&gt;Datatypes are the types of data that you provide for the variables. Do you remember this syntax " variableKeyword variableName = value; ", here the value that you assign for a variable can be any type like a number(123), a string(Zahab), or a boolean(true/false). Following are the types of data in JavaScript:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  String&lt;/li&gt;
&lt;li&gt;  Number&lt;/li&gt;
&lt;li&gt;  Boolean&lt;/li&gt;
&lt;li&gt;  Object&lt;/li&gt;
&lt;li&gt;  Undefined&lt;/li&gt;
&lt;li&gt;  Null&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is an introduction to the JavaScript datatypes and I will explain each of them and its methods in another article.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;String:&lt;/strong&gt; A string is a collection of characters, it can be a name or sentence. If the value of a variable is a string then it should be written inside the single or double-quotes.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Boolean: *&lt;/em&gt; It is a datatype when the value of a variable is either true or false.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Object:&lt;/strong&gt; In JavaScript, an object is an unordered collection of key-value pairs. Each key-value pair is called a property.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Number:&lt;/strong&gt; when a number is the value of the variable then the variable has a number datatype. The number can be with, or without decimals. We will discuss the numbers method in another article.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Undefined:&lt;/strong&gt; When a variable has no value or there is no value for the variable then its datatype is undefined.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Null:&lt;/strong&gt; A null means absence of a value. It is declared when the variable does not have any value for now but it will have later on.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zahab&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;enterValue&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;noValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;enterValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="nx"&gt;noValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BKkXO9v4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1t7wi9y8wn043q3220lz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BKkXO9v4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1t7wi9y8wn043q3220lz.png" alt="Image description" width="880" height="531"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#operators"&gt;
  &lt;/a&gt;
  Operators
&lt;/h3&gt;

&lt;p&gt;Operators are used to perform specific mathematical and logical computations on operands. Following are the JS operators:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript-arithmetic-operator"&gt;
  &lt;/a&gt;
  JavaScript Arithmetic operator
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ykxPQR8j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cpix3s60k0nthamcjsfn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ykxPQR8j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cpix3s60k0nthamcjsfn.png" alt="Image description" width="880" height="722"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;addition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;     
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;subtraction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;  
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;multiplication&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt; 
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;division&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;     
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;modulus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;      
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;increment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;    
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;decrement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;    


&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;addition&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;subtraction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;multiplication&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;division&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;modulus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="nx"&gt;decrement&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#javascript-comparison-operators"&gt;
  &lt;/a&gt;
  JavaScript Comparison Operators
&lt;/h3&gt;

&lt;p&gt;Here the output might confuse you, so I explain it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---evegHye--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h5aipr5xl9cdvizbaigr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---evegHye--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h5aipr5xl9cdvizbaigr.png" alt="Image description" width="880" height="819"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These operators are comparing the operands, the first output is false or the result of the equal operator is false because 3 is not equal to 2. The equalType is also false because it checks both the value and type, the value is not equal because 3 is not equal to 2 and checking the types of the two operands means checking their data types, both are numbers so type is true but because the value is false the result will be false.&lt;/p&gt;

&lt;p&gt;The third one is true because 3 is not equal to 2, the "!" indicates the "not". The greater variable is true because 3 is greater than 2. The less variable is false because 3 is not less than 2. The last two are true and false respectively because their first condition is true.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript-logical-operator"&gt;
  &lt;/a&gt;
  JavaScript Logical operator
&lt;/h3&gt;

&lt;p&gt;There are three logical operators in JS (AND, OR, NOT). The AND operator returns true if both the conditions are true. In the below example 8 is less than 10 and greater than 1, here both of the conditions are true, hence the result is true.&lt;/p&gt;

&lt;p&gt;The OR operator is true if both or any one of the conditions are true.&lt;/p&gt;

&lt;p&gt;The not operator returns True when the result is False and returns False when the result is True.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rYUZD8_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcf0oyb1sde6oenhbij4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rYUZD8_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcf0oyb1sde6oenhbij4.png" alt="Image description" width="880" height="458"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript-bitwise-operators"&gt;
  &lt;/a&gt;
  JavaScript Bitwise Operators
&lt;/h3&gt;

&lt;p&gt;JavaScript Bitwise Operators perform operations on the bit level. Followings are the types of bitwise operators in JS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qRrrPfwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/na6vev2ktg3pyvf30mro.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qRrrPfwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/na6vev2ktg3pyvf30mro.png" alt="Image description" width="880" height="409"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I am going to explain these topics in detail in the next article, so if you are confused with maybe objects or operators, it's fine. We will have a complete discussion about them in the operators' article.&lt;/p&gt;

&lt;p&gt;That is it for this article. I hope you found this article useful, if you need any help please let me know in the comment section.&lt;/p&gt;

&lt;p&gt;If you have any questions or need help, feel free to contact me on &lt;a href="https://twitter.com/zahab_k/"&gt;Twitter&lt;/a&gt; &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Complete Authentication using firebase</title>
      <author>Mukul Rajpoot</author>
      <pubDate>Mon, 27 Dec 2021 15:31:27 +0000</pubDate>
      <link>https://dev.to/mukulrajpoot262610/complete-authentication-using-firebase-3l8d</link>
      <guid>https://dev.to/mukulrajpoot262610/complete-authentication-using-firebase-3l8d</guid>
      <description>&lt;p&gt;Hello guys 👋,&lt;/p&gt;

&lt;p&gt;I made a complete authentication module using firebase. Frontend is built using next.js and database I'm using is mongoDB. &lt;/p&gt;

&lt;p&gt;It also have user email-verification and password-reset functionality. I made this app to learn about how to export firebase user data to another database like mongodb.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-screenshot"&gt;
  &lt;/a&gt;
  Some Screenshot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ywqUMukH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tvgwemqbgl9gviqsjfa1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ywqUMukH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tvgwemqbgl9gviqsjfa1.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sMjcvZ3m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2uid3dfa9ofe29teop6b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sMjcvZ3m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2uid3dfa9ofe29teop6b.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J_HA8uDr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4m9wd5q7dt9rvm5i024.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J_HA8uDr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4m9wd5q7dt9rvm5i024.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-setup"&gt;
  &lt;/a&gt;
  How to setup
&lt;/h2&gt;

&lt;p&gt;Step 1: Clone project from &lt;a href="https://github.com/mukulrajpoot262610/dev-case-app"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step 2: Run &lt;code&gt;npm install&lt;/code&gt; to install dependencies&lt;/p&gt;

&lt;p&gt;Step 3: Create a firebase project and mongoDB cluster.&lt;/p&gt;

&lt;p&gt;Step 4: Generate a &lt;code&gt;.env&lt;/code&gt; file and add your firebase and mongodb uri in that file.&lt;/p&gt;

&lt;p&gt;Step 5: Setup your service account on firebase and generate a new private key and add them in your env file.&lt;/p&gt;

&lt;p&gt;Step 6: You are good to go. 😎&lt;/p&gt;

&lt;p&gt;Deployed Link: &lt;a href="https://dev-case-app.vercel.app/"&gt;Live Link&lt;/a&gt;&lt;br&gt;
Github Link: &lt;a href="https://github.com/mukulrajpoot262610/dev-case-app"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

</description>
      <category>firebase</category>
      <category>nextjs</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Securely Access Your AWS Resources From Github Actions</title>
      <author>Benoît Bouré</author>
      <pubDate>Mon, 27 Dec 2021 15:15:33 +0000</pubDate>
      <link>https://dev.to/aws-builders/securely-access-your-aws-resources-from-github-actions-3lgk</link>
      <guid>https://dev.to/aws-builders/securely-access-your-aws-resources-from-github-actions-3lgk</guid>
      <description>&lt;p&gt;Security is a very important topic for all cloud engineers. Making sure that your infrastructure and data are kept out of reach of malicious people is one of the most serious things to get right. In AWS, we are used to dealing with IAM roles and permissions that make our resources accessible to users or to other resources. However, sometimes you need to grant access from outside your organization.&lt;/p&gt;

&lt;p&gt;One example is when you want to deploy your infrastructure from a CI/CD pipeline, like Github Actions. How do you allow your workflow to gain access to your AWS account?&lt;/p&gt;

&lt;p&gt;One approach is to create a dedicated IAM user, store its credentials in the &lt;a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets"&gt;Github secrets store&lt;/a&gt;, and allow the workflow to use them. Easy, enough! Secrets are encrypted by Github, so it is secure, right? &lt;/p&gt;

&lt;p&gt;Not really... The problem is that those credentials are meant to be long-lived. It means that if anyone is able to get hold of them for whatever reason (eg: a leak in a workflow logs, someone gaining access to a GitHub action runner, etc), they will be able to access all your resources (at least those that the credentials are allowed to control). Sure, you could rotate them from time to time, but you'd have to do that manually. This is probably not something you want to spend time doing, and let's face it, you probably won't!&lt;/p&gt;

&lt;p&gt;Luckily, there is a better solution. If you are using Github Actions, you can allow Github to grab temporary, short-lived, credentials that it can use during the execution of the workflow. After that, the credentials will expire and no one will ever be able to use them again.&lt;/p&gt;

&lt;p&gt;In this post, I will guide you through the steps to set this up. Don't worry, it's actually easier than you think!&lt;/p&gt;

&lt;p&gt;Here is a schema representing what we are going to accomplish&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7DFZp4sd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0lczntnt01oz53iwo6qw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7DFZp4sd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0lczntnt01oz53iwo6qw.png" alt="GitHub Actions OIDC Integration with AWS" width="880" height="427"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-your-aws-account"&gt;
  &lt;/a&gt;
  Setting up your AWS account
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 TL;DR; I created a CloudFormation quick-create link that you can use to automate the following steps. See at the bottom of this article. If you want to know how it works, and what CloudFormation is going to do, keep reading this section.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#create-an-openid-connect-identity-provider"&gt;
  &lt;/a&gt;
  Create an OpenID Connect Identity provider
&lt;/h3&gt;

&lt;p&gt;The first step is to create an OpenID Connect (OIDC) identity provider in your AWS Account. This will allow Github to identify itself.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Got to the &lt;a href="https://console.aws.amazon.com/iamv2/home?#/identity_providers"&gt;IAM console -&amp;gt; Identity providers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;Add new provider&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Select &lt;em&gt;OpenID Connect&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Provider Url: &lt;code&gt;https://token.actions.githubusercontent.com&lt;/code&gt; (Don't forget to click &lt;code&gt;Get Thumbprint&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Audience: &lt;code&gt;sts.amazonaws.com&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Add tags if you want to and click &lt;em&gt;Add Provider&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ukwGiC25--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6c71ery9wid0918mbuw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ukwGiC25--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6c71ery9wid0918mbuw.png" alt="OIDC provider creation" width="880" height="724"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 You will need to do this step only once per AWS account.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#create-a-role"&gt;
  &lt;/a&gt;
  Create a role
&lt;/h3&gt;

&lt;p&gt;You now need to create a role that Github will be able to assume in order to access the resources it needs to control. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go back to IAM and select &lt;a href="https://console.aws.amazon.com/iamv2/home?#/roles"&gt;Roles&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Create a new Role&lt;/li&gt;
&lt;li&gt;Chose &lt;em&gt;Web Identity&lt;/em&gt;, select the Identity provider you created in the previous step, and its audience.&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;Next:Permissions&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GCnyZ0iZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h7wf4ezzdv4g2kfojo04.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GCnyZ0iZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h7wf4ezzdv4g2kfojo04.png" alt="Create an IAM role" width="880" height="178"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;You now need to give the role the appropriate permissions (Policies). These are the ones that Github needs in order to do whatever it has to do. This will vary based on your use case, so I will leave that up to you. Keep in mind that you should stick to the &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege"&gt;principle of least privileges&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When that is done, give your role a name and click &lt;em&gt;Create Role&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;There is now an additional step to do. You need to edit the trust policy of the role to reduce its scope to your repository only. Make sure you don't skip this part, it is &lt;strong&gt;very important&lt;/strong&gt;. Without that, &lt;strong&gt;any repository on GitHub will be able to assume your role and access your resources&lt;/strong&gt;. (Unfortunately, there does not seem to be a way to do that at creation time).&lt;/p&gt;

&lt;p&gt;Go back to IAM Roles and select the created Role. Choose &lt;em&gt;Trust Relationships&lt;/em&gt; and &lt;em&gt;Edit Trust Relationship&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Under &lt;code&gt;Condition&lt;/code&gt;, add the following segment:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"StringLike"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"token.actions.githubusercontent.com:sub"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"repo:[your-org]/[your-repo]:*"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace the organization and repo names to match yours, and click &lt;code&gt;Update Trust Policy&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;✍️ Note: You can take this even further and reduce the scope, by using &lt;a href="https://git-scm.com/book/en/v2/Git-Internals-Git-References"&gt;git references&lt;/a&gt;, to a branch or tag only, for example.&lt;br&gt;
eg: &lt;code&gt;repo:[your-org]/[your-repo]:ref:refs/heads/master&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The final result will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"Version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2012-10-17"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"Statement"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"Effect"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Allow"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"Principal"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"Federated"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"arn:aws:iam::1234567890:oidc-provider/token.actions.githubusercontent.com"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"Action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sts:AssumeRoleWithWebIdentity"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"Condition"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"StringEquals"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"token.actions.githubusercontent.com:aud"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sts.amazonaws.com"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"StringLike"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"token.actions.githubusercontent.com:sub"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"repo:[your-org]/[your-repo]:*"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This concludes the required configurations on your AWS account. Take note of the role ARN, you'll need it later.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 You can create different roles per account and use a different one for each use case. For example, one per application, per usage (configurations, deployment, integration tests), etc. You can play with that to reduce the scope of each session even more.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#configure-github-action-workflow"&gt;
  &lt;/a&gt;
  Configure Github action workflow
&lt;/h2&gt;

&lt;p&gt;Your Github workflow requires additional permissions in order to be able to use OIDC. Add the following at the top of your workflow's YML file. You can also add it at the job level to reduce the scope if needed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;permissions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;id-token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;write&lt;/span&gt; &lt;span class="c1"&gt;# required to use OIDC authentication&lt;/span&gt;
  &lt;span class="na"&gt;contents&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;read&lt;/span&gt; &lt;span class="c1"&gt;# required to checkout the code from the repo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can now use the &lt;a href="https://github.com/aws-actions/configure-aws-credentials"&gt;configure-aws-credentials&lt;/a&gt; Github action in the job that needs to assume the role. Add this step to generate credentials before doing any call to AWS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;configure aws credentials&lt;/span&gt;
  &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;aws-actions/configure-aws-credentials@v1&lt;/span&gt;
  &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;role-to-assume&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;arn:aws:iam::1234567890:role/your-role-arn&lt;/span&gt;
    &lt;span class="na"&gt;role-duration-seconds&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;900&lt;/span&gt; &lt;span class="c1"&gt;# the ttl of the session, in seconds.&lt;/span&gt;
    &lt;span class="na"&gt;aws-region&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;us-east-1&lt;/span&gt; &lt;span class="c1"&gt;# use your region here.&lt;/span&gt;
&lt;span class="c1"&gt;# You can now execute commands that use the credentials👇&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Serverless deploy&lt;/span&gt;
  &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;sls deploy --stage dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;configure AWS credentials&lt;/code&gt; step will use the OIDC integration to assume the given role, generate &lt;strong&gt;short-lived&lt;/strong&gt; credentials, and make them available to the current job.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 If you want to take security even further, you can also keep your role's ARN used in &lt;code&gt;role-to-assume&lt;/code&gt; in a Github secret.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#automate"&gt;
  &lt;/a&gt;
  Automate
&lt;/h2&gt;

&lt;p&gt;The guys at &lt;code&gt;configure-aws-credentials&lt;/code&gt; shared a &lt;a href="https://github.com/aws-actions/configure-aws-credentials#sample-iam-role-cloudformation-template"&gt;CloudFormation template&lt;/a&gt; that you can use to automate the AWS configuration steps.&lt;/p&gt;

&lt;p&gt;I took it one step further; I &lt;a href="http://githubactions-oidc-cfn.s3.amazonaws.com/template.yml"&gt;hosted that template&lt;/a&gt; and created a deployment link for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://us-east-1.console.aws.amazon.com/cloudformation/home?region=eu-west-1#/stacks/quickcreate?templateURL=http://githubactions-oidc-cfn.s3.amazonaws.com/template.yml&amp;amp;stackName=GithubActionsOIDC"&gt;Click here&lt;/a&gt; to deploy it into your account.&lt;/p&gt;

&lt;p&gt;Fill in the parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;GitHubOrg&lt;/code&gt;: your organization name, or your Github username&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;RepositoryName&lt;/code&gt;: the repository that needs access to your AWS account&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;OIDCProviderArn&lt;/code&gt;: your existing OIDC provider's ARN, if you have one already. If you don't, leave it empty and one will be created for you. (Remember that you only need one per account).&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;✍️ Note: The created role will not have any Policy attached to it. You will still need to attach the ones that your workflow needs to it after that.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As you can see, securing your account doesn't have to be hard. The part that might require a little more effort is to define the right Policies if you want to follow the principle of least privileges (which you should!).&lt;/p&gt;

&lt;p&gt;For more content like this, follow me on Twitter &lt;a href="https://twitter.com/Benoit_Boure"&gt;@Benoit_Boure&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>security</category>
      <category>github</category>
      <category>cicd</category>
    </item>
    <item>
      <title>All Resources To Help You Start Your Open-Source Journey: Open Source Gallery</title>
      <author>Astrodevil</author>
      <pubDate>Mon, 27 Dec 2021 15:07:31 +0000</pubDate>
      <link>https://dev.to/astrodevil/all-resources-to-help-you-start-your-open-source-journey-open-source-gallery-5f5g</link>
      <guid>https://dev.to/astrodevil/all-resources-to-help-you-start-your-open-source-journey-open-source-gallery-5f5g</guid>
      <description>&lt;p&gt;Do you want to start your open source journey? Don't know where to start? Difficulty in finding suitable projects according to your tech stack? Then this article is for you. In this article, I am going to discuss a resource gallery that I curated to help beginners get into the open-source world. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#open-source-gallery"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/Astrodevil/Open-Source-Gallery"&gt;Open Source Gallery&lt;/a&gt;
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#about"&gt;
  &lt;/a&gt;
  About❓
&lt;/h3&gt;

&lt;p&gt;Are you a beginner? Wants to start open-source? Don't know how, where, why to start?&lt;/p&gt;

&lt;p&gt;You are welcome! You are in right place.😊&lt;/p&gt;

&lt;p&gt;Open-Source-Gallery provides you with all the resources needed to become a good open-sourcer.&lt;/p&gt;

&lt;p&gt;The motive🎯 of this project is to help new learners like you to get familiar with the world of open-source.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#contents"&gt;
  &lt;/a&gt;
  Contents🔥
&lt;/h3&gt;

&lt;p&gt;Every Learner has different preferences, some find docs are easy to understand and learn from there, some prefer video. I have taken care of all that while curating these resources. &lt;/p&gt;

&lt;p&gt;Even after being willing to start, newbies find it difficult to find projects and communities I have taken care of that. &lt;/p&gt;

&lt;p&gt;Open Source Gallery includes: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Videos📹&lt;/li&gt;
&lt;li&gt;Articles📝&lt;/li&gt;
&lt;li&gt;Projects🦾&lt;/li&gt;
&lt;li&gt;Programs and Internships Opportunities☕&lt;/li&gt;
&lt;li&gt;Communities🔥&lt;/li&gt;
&lt;li&gt;Key Peoples🧑‍💻&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-else"&gt;
  &lt;/a&gt;
  What Else⚡
&lt;/h3&gt;

&lt;p&gt;I have also included some &lt;a href="https://github.com/Astrodevil/Open-Source-Gallery#more-resource-gallery"&gt;other resources&lt;/a&gt; and resources gallery apart from open source. Hope it will help you in your learning.&lt;/p&gt;

&lt;p&gt;This resource gallery was 1st curated on Notion but now it is hosted on GitHub. If you find this helpful, don't forget to give it a &lt;a href="https://github.com/Astrodevil/Open-Source-Gallery"&gt;⭐&lt;/a&gt; on GitHub.&lt;/p&gt;

&lt;p&gt;Happy learning.👍&lt;/p&gt;

&lt;p&gt;So, What are you waiting for? &lt;a href="https://astrodevil.github.io/Open-Source-Gallery/"&gt;Start here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final Words✅
&lt;/h3&gt;

&lt;p&gt;Open Source Gallery is made with a view to helping everyone, It will be constantly updated with new and valuable resources. So you all are welcome to add more resources to the &lt;a href="https://github.com/Astrodevil/Open-Source-Gallery"&gt;repository&lt;/a&gt; and share it with everyone out there who is going to start open-source in 2022.&lt;/p&gt;

&lt;p&gt;Don't forget to give it a &lt;a href="https://github.com/Astrodevil/Open-Source-Gallery"&gt;⭐&lt;/a&gt; on GitHub.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#if-you-my-content-connect-me-on-twitter-or-supports-me-by-buying-me-a-coffee"&gt;
  &lt;/a&gt;
  If You ❤️ My Content! Connect Me on  &lt;a href="https://mobile.twitter.com/Astrodevil_"&gt;Twitter&lt;/a&gt; or Supports Me By Buying Me A Coffee☕👇🏼
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/Astrodevil"&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rZDB_RRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-orange.png" alt="Buy Me A Coffee" width="545" height="153"&gt; &lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>tutorial</category>
      <category>github</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
