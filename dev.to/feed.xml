<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Is React a Library or a Framework? Why It Matters</title>
      <author>Reed Barger</author>
      <pubDate>Tue, 13 Apr 2021 14:05:56 +0000</pubDate>
      <link>https://dev.to/reedbarger/is-react-a-library-or-a-framework-why-it-matters-3g6f</link>
      <guid>https://dev.to/reedbarger/is-react-a-library-or-a-framework-why-it-matters-3g6f</guid>
      <description>&lt;p&gt;Developers have spent a great deal of time what React is, but have left out why this topic matters so greatly for anyone who builds React applications.&lt;/p&gt;

&lt;p&gt;The answer to this question is essential for any React developer, regardless of their skill level, because it indicates what they must know and how they must work in developing any React application.&lt;/p&gt;

&lt;p&gt;Whether you are a new or an advanced React developer already, I hope this thoughtful analysis will improve your own development process as you build your next React project.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Looking for the complete guide to become an in-demand React developer? Check out the &lt;a href="https://reactbootcamp.com"&gt;React Bootcamp&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#why-is-react-a-library-and-not-a-framework"&gt;
  &lt;/a&gt;
  Why is React a library and not a framework?
&lt;/h2&gt;

&lt;p&gt;React was made to build full-fledged web applications. As a result, it's often compared with other tools that developers use to build apps, like Angular, Vue, and Svelte.&lt;/p&gt;

&lt;p&gt;React is written in JavaScript and is used to make better JavaScript applications. We refer to React specifically as a &lt;strong&gt;library&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;But what makes React a library and not a framework?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The reason becomes clear by looking at what other similar tools that are used to create complete web applications:&lt;/p&gt;

&lt;p&gt;If we look at a project like Angular, which was made with the identical purpose as React--to create single-page web apps--what sets it apart is the fact that when you set up an Angular project, it is bootstrapped with nearly every single thing that you'll need to make a complete, large-scale app.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Many developers like to refer to frameworks or similar solutions as having "batteries included."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Frameworks is a common choice for companies and anyone looking to make enterprise JavaScript applications because they include resources that a large-scale application would likely need. This includes built-in tools for common tasks like creating forms, running automated tests, making network requests, and much more.&lt;/p&gt;

&lt;p&gt;In short, everything that you would need to make a complete application is included in your Angular project when it's generated. That is not the case with React.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-is-fundamentally-unopinionated"&gt;
  &lt;/a&gt;
  React is fundamentally "unopinionated"
&lt;/h2&gt;

&lt;p&gt;While popular tools have emerged like Create React App, which allow you to create a complete React project in a single command, React is often referred to as "unopinionated."&lt;/p&gt;

&lt;p&gt;&lt;em&gt;What does it mean for React to be unopinionated?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The React and React DOM libraries give us the means of building a user interface with the JSX syntax, plus powerful state management tools via hooks, among other things.&lt;/p&gt;

&lt;p&gt;However, it does not include many of React-specific libraries you're going to need for most projects. Angular and Vue, by comparison, include many more tools all bundled within the core package itself.&lt;/p&gt;

&lt;p&gt;Many developers consider this discussion of what is and isn't a library to be trivial, however, it has real consequences for our development process. In other words, because React is a library and not a framework, &lt;strong&gt;becoming a skilled React developer entails having a good knowledge of third-party React libraries&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#since-react-is-a-library-you-must-choose-the-tools-on-your-own"&gt;
  &lt;/a&gt;
  Since React is a library, you must choose the tools on your own
&lt;/h2&gt;

&lt;p&gt;That means, in order to build complete React applications, you will need to choose these packages and tools on your own.&lt;/p&gt;

&lt;p&gt;Here are a few examples of decisions that I often need to make when I'm building a React application myself:&lt;/p&gt;

&lt;p&gt;For a form library, I have to decide whether I want to use the package React Hook Form or Formik. These are both React-specific form libraries to add important features to our forms like validation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FOmNXDGG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reactbootcamp.com/content/images/2021/04/formik.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FOmNXDGG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reactbootcamp.com/content/images/2021/04/formik.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IQOa4LaH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reactbootcamp.com/content/images/2021/04/react-hook-form.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IQOa4LaH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reactbootcamp.com/content/images/2021/04/react-hook-form.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For testing my React application, I might use either React Testing Library, Jest, or some combination of the two.&lt;/p&gt;

&lt;p&gt;For making network requests, I might need to choose between the Fetch API and Axios as well as if I want to add an additional library to make managing my server state easier, such as React Query or SWR.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-tools-you-choose-depend-on-your-app-and-knowledge-of-them"&gt;
  &lt;/a&gt;
  The tools you choose depend on your app and knowledge of them
&lt;/h2&gt;

&lt;p&gt;Why this question of whether React is a library or framework is important is because any React developer must know what their choices are and which choice to make given the type of React application they're building.&lt;/p&gt;

&lt;p&gt;If you're building an app without many forms, you might not need a form library at all. If you're more confident with the Fetch API, you might use that over something like Axios.&lt;/p&gt;

&lt;p&gt;It really depends on what you're not only what the demands of the app are, but what your preferences are as a developer. This is arguably an advantage that React has as a library and why I believe it's very popular among newer developers. It doesn't lock you into one choice or hold you to any specific libraries other than React itself.&lt;/p&gt;

&lt;p&gt;You're able to make the decisions, you're able to make your own decisions, and you're able to have more freedom overall, as a developer. That being said, React not being a framework does not diminish its presence in the corporate realm, and is still used to build complex and impressive applications of all kinds. There are many such lists of the large-scale React applications that businesses have made and which you likely use on a daily basis.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#its-arguably-a-requirement-to-keep-up-with-emerging-libraries"&gt;
  &lt;/a&gt;
  It's arguably a requirement to keep up with emerging libraries
&lt;/h2&gt;

&lt;p&gt;If we were talking about which form library to choose two years ago, I would likely have included Redux Form. As for a data fetching library, I couldn't have mentioned React Query or SWR, because they weren't created (or haven't gained much traction), until the last year or so.&lt;/p&gt;

&lt;p&gt;Because React apps are often reliant upon third-party libraries, newer libraries come about that improve upon the old ones. Individual developers and teams transition to different tools to get the job done and the ecosystem changes as a whole.&lt;/p&gt;

&lt;p&gt;Like it or not, React being a library and not a framework entails a large, shifting network of other libraries we must be aware of to build our projects. Some of which may fall out of favor and be replaced by others or may no longer become deprecated and no longer supported as open-source projects.&lt;/p&gt;

&lt;p&gt;In short, React being a library may require us to pay more attention to what is going on &lt;em&gt;around&lt;/em&gt; React, as compared to if it was a framework.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wish-react-was-a-framework-there-are-many"&gt;
  &lt;/a&gt;
  Wish React was a framework? There are many!
&lt;/h2&gt;

&lt;p&gt;It's worth noting that there are frameworks that have been made that are based upon React.&lt;/p&gt;

&lt;p&gt;While React itself is just a library, many frameworks have cropped up in recent years to provide developers with a more powerful set of built-in tools to allow you to build projects faster without needing as many third-party libraries.&lt;/p&gt;

&lt;p&gt;There are many React frameworks React-based frameworks. Some of the most popular ones include Next.js, Gatsby, and Redwood.js, all of which are used to create full-scale dynamic and static react applications.&lt;/p&gt;

&lt;p&gt;This is, in my opinion, the great advantage of frameworks--you do not have to make as many choices throughout the development process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-reacts-flexibility-to-your-advantage"&gt;
  &lt;/a&gt;
  Use React's flexibility to your advantage
&lt;/h2&gt;

&lt;p&gt;Be aware that going forward, there is a robust ecosystem of React-focused libraries that you can add to your React project to achieve whatever you're looking for, from the most general tasks to the most specific.&lt;/p&gt;

&lt;p&gt;This is thanks to React's popularity and widespread usage. But also note, especially if you're coming from an opinionated framework like Angular or Vue, that there are many React-based frameworks that you can rely upon and learn about to build equally functional and featureful applications as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#want-to-master-react-join-the-react-bootcamp"&gt;
  &lt;/a&gt;
  Want to master React? Join The React Bootcamp
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="http://bit.ly/join-react-bootcamp"&gt;The React Bootcamp&lt;/a&gt;&lt;/strong&gt; takes everything you should know about learning React and bundles it into one comprehensive package, including videos, cheatsheets, plus special bonuses.&lt;/p&gt;

&lt;p&gt;Gain the insider information hundreds of developers have already used to master React, find their dream jobs, and take control of their future:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/join-react-bootcamp"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w2usNUi9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reedbarger.nyc3.digitaloceanspaces.com/react-bootcamp-banner.png" alt="The React Bootcamp"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;em&gt;Click here to be notified when it opens&lt;/em&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>#2 of 100DaysOfCode</title>
      <author>atulit023</author>
      <pubDate>Tue, 13 Apr 2021 14:04:55 +0000</pubDate>
      <link>https://dev.to/icecoffee/2-of-100daysofcode-273e</link>
      <guid>https://dev.to/icecoffee/2-of-100daysofcode-273e</guid>
      <description>&lt;p&gt;Wow, Second Day.&lt;br&gt;
I finally did some programming in React. Came to know furthermore about types of React API calls and different ways in which we can make Elements in React.&lt;/p&gt;

&lt;p&gt;Anyway following are my today's learnings.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Functional Components and reactive updates.&lt;/li&gt;
&lt;li&gt;Virtual DOM and JSX.&lt;/li&gt;
&lt;li&gt;Props and states - i.e. Inputs to a component

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;props&lt;/em&gt; are immutable. But the whole component can be rendered by different props by the component's parent &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;states&lt;/em&gt; are mutable and every time a state of a component changes React re-renders it on the page.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;React.DOM takes two arguments 

&lt;ul&gt;
&lt;li&gt;The &lt;em&gt;Component&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;DOM node that will hold the component on the page&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;To pass in multiple components we can:

&lt;ul&gt;
&lt;li&gt;Pass it an array of components&lt;/li&gt;
&lt;li&gt;Enclose it in&lt;/li&gt;
&lt;li&gt;A dummy parent element.&lt;/li&gt;
&lt;li&gt;A &lt;em&gt;React.Fragment&lt;/em&gt; Element&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;onClick event in React&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#and-a-great-example-of-closure"&gt;
  &lt;/a&gt;
  And a great example of closure. 😁
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Commented out code was the partial application method that I tried using, It's an error, so please Ignore&lt;/span&gt;
  &lt;span class="c1"&gt;// const handleClick = props.onClickFunction.bind({})(props.increment);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleClick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onClickFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Display&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;incrementCounter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;inc&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;inc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="nx"&gt;onClickFunction&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;incrementCounter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;inc&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt; &lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;      &lt;span class="p"&gt;})}&lt;/span&gt;

      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Display&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt; &lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mountNode&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Try it out &lt;a href="https://jscomplete.com/playground"&gt;HERE&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;In this example since onClick takes a function as a value, I tried setting the default value using the bind() method, But it never worked and yeah, I forgot about the closures.😕&lt;/p&gt;

&lt;p&gt;If anyone wanna check that out please I'd really appreciate that. &lt;/p&gt;

&lt;p&gt;I hope, I might have helped in any way.😄&lt;br&gt;
Thanks for Reading.&lt;br&gt;
Have a Beautiful Day.🌼&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>react</category>
      <category>computerscience</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>4 Non-Popular HTML Tags 💻 + Giveaway ⚡️</title>
      <author>Garvit Motwani</author>
      <pubDate>Tue, 13 Apr 2021 14:03:16 +0000</pubDate>
      <link>https://dev.to/garvitmotwani/4-non-popular-html-tags-giveaway-521p</link>
      <guid>https://dev.to/garvitmotwani/4-non-popular-html-tags-giveaway-521p</guid>
      <description>&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@xps?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;XPS&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/laptop?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HTML is an easy but vital markup language in the world of web development, everybody in the web dev field knows at least the basics of it, if not the whole language. So I'm going to tell you some non-popular tags that you should know about.&lt;/p&gt;

&lt;p&gt;So let's get started!!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-the-progress-tag"&gt;
  &lt;/a&gt;
  1. The progress Tag
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;progress&amp;gt;&lt;/code&gt; tag allows you to create progress bars using just HTML.&lt;/p&gt;

&lt;p&gt;Check this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;progress&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"70"&lt;/span&gt; &lt;span class="na"&gt;max=&lt;/span&gt;&lt;span class="s"&gt;"100"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;70%&lt;span class="nt"&gt;&amp;lt;/progress&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You just need to specify &lt;code&gt;value&lt;/code&gt; and the &lt;code&gt;max&lt;/code&gt; value which is mostly going to be 100&lt;/p&gt;

&lt;p&gt;Result:&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/codewithgarvit/embed/xxgYpwM?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-ins-and-del-tags"&gt;
  &lt;/a&gt;
  2. ins and del Tags
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;ins&amp;gt;&lt;/code&gt; tag defines a text that has been inserted into a document. It underlined by the browsers automatically.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;del&amp;gt;&lt;/code&gt; tag defines a text that has been deleted from a document. Browsers usually strike a line through it.&lt;/p&gt;

&lt;p&gt;Check this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;The price of the new shirt is &lt;span class="nt"&gt;&amp;lt;del&amp;gt;&lt;/span&gt;$50&lt;span class="nt"&gt;&amp;lt;/del&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;ins&amp;gt;&lt;/span&gt;$25&lt;span class="nt"&gt;&amp;lt;/ins&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Result:&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/codewithgarvit/embed/rNjJpjq?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-the-details-tag"&gt;
  &lt;/a&gt;
  3. The details Tag
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; tag is pretty handy for large documentation, it allows us to view or hide elements after clicking on the &lt;code&gt;&amp;lt;summary&amp;gt;&lt;/code&gt; element&lt;/p&gt;

&lt;p&gt;Check this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;details&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;DEV.to&lt;span class="nt"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;DEV.to is a place where coders share, stay up-to-date and grow their careers. Cedits to dev.to for this line&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/details&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/codewithgarvit/embed/dyNdJZo?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-the-dialog-tag"&gt;
  &lt;/a&gt;
  4. The dialog Tag
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt; tag defines a dialog box or subwindow. It also makes it easy to create popup dialogs and modals on a web page. You also have to use an attribute called &lt;code&gt;open&lt;/code&gt; to specify that the dialog element is active and that the user can interact with it.&lt;/p&gt;

&lt;p&gt;Check this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;dialog&lt;/span&gt; &lt;span class="na"&gt;open&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hola World! Garvit Here&lt;span class="nt"&gt;&amp;lt;/dialog&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/codewithgarvit/embed/PoWQERm?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%EF%B8%8F-giveaway-%EF%B8%8F"&gt;
  &lt;/a&gt;
  ⚡️ Giveaway ⚡️
&lt;/h2&gt;

&lt;p&gt;We are giving away any course you need on Udemy. Any price any course.&lt;br&gt;
Steps to enter the giveaway&lt;br&gt;
--&amp;gt; React to this post&lt;br&gt;
--&amp;gt; Subscribe to our &lt;a href="https://worldindev.ck.page/"&gt;Newsletter&lt;/a&gt; &amp;lt;-- Very important&lt;br&gt;
--&amp;gt; Follow me on &lt;a href="https://twitter.com/garvitmotwani"&gt;Twitter&lt;/a&gt; &amp;lt;-- x2 Chances of winning&lt;/p&gt;

&lt;p&gt;The winner will be announced on May 1, Via Twitter&lt;/p&gt;




&lt;p&gt;Thank you very much for reading this article.&lt;/p&gt;

&lt;p&gt;Comment any non-popular tags you know&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PLEASE LIKE, SHARE, AND COMMENT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://dev.to/garvitmotwani"&gt;Dev&lt;/a&gt; and &lt;a href="https://twitter.com/GarvitMotwani"&gt;Twitter&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Subscribe to our &lt;a href="https://chipper-motivator-3112.ck.page/05710ea3d3"&gt;newsletter&lt;/a&gt; to receive our weekly recap directly on your email!&lt;/p&gt;

&lt;p&gt;Join us on &lt;a href="https://discord.gg/aWS2YKk6"&gt;Discord&lt;/a&gt; to participate in hackathons with us / participate in our giveaways!&lt;/p&gt;

&lt;p&gt;Thank You&lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>css</category>
    </item>
    <item>
      <title>Creating a Face Detection Web App with React and Codesphere
</title>
      <author>Saji Wang</author>
      <pubDate>Tue, 13 Apr 2021 13:47:58 +0000</pubDate>
      <link>https://dev.to/codesphere/creating-a-face-detection-web-app-with-react-and-codesphere-5f08</link>
      <guid>https://dev.to/codesphere/creating-a-face-detection-web-app-with-react-and-codesphere-5f08</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;We've all probably seen the face detection box that pops up around people's faces when you go to take a photo on your mobile camera. If you've ever wondered how our phones detect human faces, then this article is for you! We are going to be building a web app that recreates just that - an app able to recognize any human face in any image. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-facial-recognition-and-how-does-it-work"&gt;
  &lt;/a&gt;
  What is a facial recognition and how does it work?
&lt;/h3&gt;

&lt;p&gt;To start off, a facial recognition system is a technology that is able to match a human face from a digital image by using computer algorithms to pick up distinct features of a person's face.&lt;/p&gt;

&lt;p&gt;In this app, we will be using the Face Detection model from Clarifai, which uses the Clarifai Predict API and gives us the probability score of the chances that the image contains human faces and coordinates locations of where those faces appear with a confining box.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-a-react-app-with-codesphere"&gt;
  &lt;/a&gt;
  Creating a React App with Codesphere
&lt;/h3&gt;

&lt;p&gt;In this project, Codesphere is going to allow us to create and deploy our React app seamlessly. Codesphere is an online, collaborative programming environment, and a cloud provider. With Codesphere you can build your web app ready to scale without all the complicated config.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Let’s get started!
&lt;/h3&gt;

&lt;p&gt;Once you are signed in to Codesphere, you will see an empty directory and can immediately create our React App by running this command from the terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npx create-react-app face-detect&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To go into our project directory and start-up our development server, we can run:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cd face-detect &amp;amp;&amp;amp; npm start&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We’ll be using &lt;code&gt;react-bootstrap&lt;/code&gt; for this project. You can install React-Bootstrap with npm::&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install react-bootstrap bootstrap&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After the installation is done, it will let us add the Bootstrap into our project. You can read more on React Bootstrap &lt;a href="https://react-bootstrap.netlify.app/getting-started/introduction/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-our-react-components"&gt;
  &lt;/a&gt;
  Creating Our React Components
&lt;/h3&gt;

&lt;p&gt;We will need two components, a URL input box where we can enter the images from the internet— ImageSearchForm and an image component to reveal our image with a face detection box — FaceDetect. &lt;/p&gt;

&lt;p&gt;First, let's create a new directory called "Components" inside &lt;code&gt;src&lt;/code&gt;. We'll then create another two folders called &lt;code&gt;ImageSearchForm&lt;/code&gt; and &lt;code&gt;FaceDetect&lt;/code&gt; inside the &lt;code&gt;src/Components&lt;/code&gt;. After that, open the ImageSearchForm folder and create two files - &lt;code&gt;ImageSearchForm.js&lt;/code&gt; and &lt;code&gt;ImageSearchForm.css&lt;/code&gt;. Then do the same for the FaceDetect directory with &lt;code&gt;FaceDetect.js&lt;/code&gt; and &lt;code&gt;FaceDetect.css&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now we can move on to import our components into our App component. In your &lt;code&gt;src/App.js&lt;/code&gt; folder insert the following. Note: Keep the FaceDetect commented for now.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { Component } from "react";
import "./App.css";
import ImageSearchForm from "./components/ImageSearchForm/ImageSearchForm";
// import FaceDetect from "./components/FaceDetect/FaceDetect";


class App extends Component {
  render() {
    return (
      &amp;lt;div className="App"&amp;gt;
        &amp;lt;ImageSearchForm /&amp;gt;
        {/* &amp;lt;FaceDetect /&amp;gt; */}
      &amp;lt;/div&amp;gt;
    );
  }
}
export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, in our &lt;code&gt;ImageSearchForm.js&lt;/code&gt; we are going to create our component with an input form and a button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const ImageSearchForm = () =&amp;gt; {
  return (
    &amp;lt;div className="ma5 to"&amp;gt;
      &amp;lt;div className="center"&amp;gt;
        &amp;lt;div className="form center pa4 br3 shadow-5"&amp;gt;
          &amp;lt;InputGroup className="mb-3"&amp;gt;
            &amp;lt;FormControl className="f4 pa2 w-70 center" id="basic-url" aria-describedby="basic-addon3" /&amp;gt;
          &amp;lt;/InputGroup&amp;gt;
          &amp;lt;Button variant="secondary"&amp;gt; Detect &amp;lt;/Button&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  );
};
export default ImageSearchForm;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#image-recognition-api"&gt;
  &lt;/a&gt;
  Image Recognition API
&lt;/h3&gt;

&lt;p&gt;We'll now move on to the key functionality. What we want is an image to show up with the face detection box around the face, if one exists, when we enter an URL of an image on the internet and press the button.&lt;br&gt;
Before we can do that, we need to set up our Clarifai account to make use of the API.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-set-up-your-clarifai%C2%A0account"&gt;
  &lt;/a&gt;
  How to set up your Clarifai account
&lt;/h3&gt;

&lt;p&gt;This API allows users to apply its machine learning app or services. You can read more &lt;a href="https://www.clarifai.com/pricing"&gt;here&lt;/a&gt; and sign up.  After signing in, you will be redirected to your account dashboard. Click on ‘my first application’ or create an application to receive your API key.&lt;br&gt;
&lt;em&gt;Important&lt;/em&gt;: You will need your &lt;strong&gt;own&lt;/strong&gt; API key.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5_XNJZVo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3wvw8eolsnhw7wnx62t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5_XNJZVo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3wvw8eolsnhw7wnx62t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here we are going to make use of their &lt;a href="https://www.clarifai.com/models/ai-face-detection"&gt;Face Detection model&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To install the Clarifai package, open your terminal and run: &lt;code&gt;npm install clarifai&lt;/code&gt;&lt;br&gt;
Then we need to import the package into our app by putting this line of code into our &lt;code&gt;app.js&lt;/code&gt;.&lt;br&gt;&lt;br&gt;
&lt;code&gt;import Clarifai from "clarifai"&lt;/code&gt;;&lt;/p&gt;

&lt;p&gt;Next, we need to create functionality in our input search box to identify what the user enters. For this, we need a state value so that our app knows what the user entered, stores it, and updates it anytime changes are made.&lt;/p&gt;

&lt;p&gt;We (the user) will have to manually enter a URL of an image from the web into the input field and that URL will be in the state value of imageUrl below. In our &lt;code&gt;app.js&lt;/code&gt;, the code will have to be updated to the following:&lt;br&gt;
Note: uncomment FaceDetect component now.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import FaceDetect from "./components/FaceDetect/FaceDetect";
import "./App.css";

const app = new Clarifai.App({
  apiKey: "ADD YOUR OWN API KEY HERE",
});

class App extends Component {
  // Add the State for input and grab image
  constructor() {
    super();
    this.state = {
      input: "",
      imageUrl: "",
    };
  }

  // use onInputChange function to setState for our input 
  onInputChange = (event) =&amp;gt; {
    this.setState({ input: event.target.value });
  };


  // execute a function when submitting with onSubmit
  onSubmit = () =&amp;gt; {
    this.setState({ imageUrl: this.state.input });
    app.models.predict(Clarifai.FACE_DETECT_MODEL, 
    this.state.input).then(
      function (response) {
        // response data fetch from FACE_DETECT_MODEL 
        console.log(response);
        /* the data needed from the response data from 
 clarifai API, we are just comparing the two*/           
        console.log(
response.outputs[0].data.regions[0].region_info.bounding_box
        );
      },

      function (err) {
        // there was an error
      }
    );
  };

  render() {
    return (
      &amp;lt;div className="App"&amp;gt;
      // update your component with their state
        &amp;lt;ImageSearchForm
          onInputChange={this.onInputChange}
          onSubmit={this.onSubmit}
        /&amp;gt;
// uncomment your face detect app and update with imageUrl state
        &amp;lt;FaceDetect imageUrl={this.state.imageUrl} /&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}
export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The onSubmit function will perform an action when the “Detect” button is pressed. It will update the state of imageUrl and grab the image with the Clarifai Face Detect Model. We now need to update our Components.  &lt;/p&gt;

&lt;p&gt;Update the &lt;code&gt;ImageSearchForm.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// update the component with parameters
const ImageSearchForm = ({ onInputChange, onSubmit }) =&amp;gt; {
  return (
    // create an onChange to monitor input state
    &amp;lt;InputGroup className="mb-3"&amp;gt;
      &amp;lt;FormControl className="f4 pa2 w-70 center" id="basic-url" aria-describedby="basic-addon3" onChange={onInputChange} 
    /&amp;gt;
    &amp;lt;/InputGroup&amp;gt;
    // add onClick function to execute task
    &amp;lt;Button variant="secondary" onClick={onSubmit}&amp;gt;
     Detect 
    &amp;lt;/Button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we will create the FaceDetect component in the &lt;code&gt;src/App.js&lt;/code&gt;. Write the following code in the &lt;code&gt;FaceDetect.js&lt;/code&gt; file: &lt;br&gt;
The FaceDetect component will pass the props imageUrl.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";

const FaceDetect = ({ imageUrl }) =&amp;gt; {
  return (
    &amp;lt;div className="center ma"&amp;gt;
     &amp;lt;div className="absolute mt2"&amp;gt;
      &amp;lt;img alt="" src={imageUrl} width="500px" heigh="auto" /&amp;gt;
     &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  );
};
export default FaceDetect;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This component will display the image using a URL from the response that we’ll get from the API. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-a-face-detection-box"&gt;
  &lt;/a&gt;
  Creating A Face Detection Box
&lt;/h3&gt;

&lt;p&gt;Finally, we need to get our facial recognition to work by calculating the position of the face in an image with Clarifai FACE_DETECT_MODEL and then display a facial box. &lt;/p&gt;

&lt;p&gt;Let’s open our &lt;code&gt;src/App.js&lt;/code&gt; file and include the code below:&lt;br&gt;
In the example below, we created a calculateFaceLocation function that takes the data Clarifai returns and calculates the coordinates of the face to the image in order to style the face box.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class App extends Component {
  constructor() {
    super();
    this.state = {
      input: "",
      imageUrl: "",
      box: {},    
};
  }

//This function calculates the FaceDetect location of the image

calculateFaceLocation = (data) =&amp;gt; {
    const clarifaiFace =
      data.outputs[0].data.regions[0].region_info.bounding_box;
    const image = document.getElementById("input-image");
    const width = Number(image.width);
    const height = Number(image.height);
    return {
      leftCol: clarifaiFace.left_col * width,
      topRow: clarifaiFace.top_row * height,
      rightCol: width - clarifaiFace.right_col * width,
      bottomRow: height - clarifaiFace.bottom_row * height,
    };
  };

//To show the face-detect box on the state values: 

  displayFaceBox = (box) =&amp;gt; {
    this.setState({ box: box });
  };

  onInputChange = (event) =&amp;gt; {
    this.setState({ input: event.target.value });
  };

  onSubmit = () =&amp;gt; {
    this.setState({ imageUrl: this.state.input });
    app.models
      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)
      .then((response) =&amp;gt;        
     this.displayFaceBox(this.calculateFaceLocation(response))
      )
      .catch((err) =&amp;gt; console.log(err));
  };

  render() {
    return (
      &amp;lt;div className="App"&amp;gt;
        &amp;lt;ImageSearchForm onInputChange={this.onInputChange}
          onSubmit={this.onSubmit}
        /&amp;gt;
        &amp;lt;FaceDetect box={this.state.box}              
         imageUrl= {this.state.imageUrl} /&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}
export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we added another state value called box which is an empty object that holds the response values that are returned. In the displayFaceBox method, we update the state of box value to hold the data we get from calling calculateFaceLocation.&lt;/p&gt;

&lt;p&gt;Next, we need to update our FaceDetect component. To do that open the &lt;code&gt;FaceDetect.js&lt;/code&gt; file and add an id to the image so we can manipulate it in the DOM. Let’s also add some styling.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const FaceDetect = ({ imageUrl, box }) =&amp;gt; {
  return (
  //This div is the container that is holding our fetch image 
 and the face detect box
    &amp;lt;div className="center ma"&amp;gt;
      &amp;lt;div className="absolute mt2"&amp;gt;
    // we set our image SRC to the url of the fetch image
        &amp;lt;img id="inputimage" alt="" src={imageUrl} 
         width="500px" heigh="auto" /&amp;gt;
          &amp;lt;div className="bounding-box"
           style={{
             top: box.topRow,
             right: box.rightCol,
             bottom: box.bottomRow,
             left: box.leftCol,
           }}
          &amp;gt;&amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  );
};

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, the output should look like the screenshot below. In the output below, we now have our face detection working with a face box to display and a border-style color of white.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0djhprr4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2u5148ziqrgz5y2u7q3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0djhprr4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2u5148ziqrgz5y2u7q3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>webdev</category>
      <category>reactnative</category>
      <category>programming</category>
    </item>
    <item>
      <title>Simple Copy Coupon Using   CSS &amp; JS</title>
      <author>Nikhil Bobade </author>
      <pubDate>Tue, 13 Apr 2021 13:45:23 +0000</pubDate>
      <link>https://dev.to/nikhil27b/simple-copy-coupon-using-css-js-16d4</link>
      <guid>https://dev.to/nikhil27b/simple-copy-coupon-using-css-js-16d4</guid>
      <description>&lt;p&gt;Hello, today I created a simple Copy Coupon Using HTML CSS &amp;amp; JS. Not great work but I hope you like this also comments about your thoughts.&lt;/p&gt;

&lt;p&gt;For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want to more support me then buy me a &lt;a href=""&gt;coffee&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/yLgKKGg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Javascript for total newbies by examples</title>
      <author>Sergiy</author>
      <pubDate>Tue, 13 Apr 2021 13:31:32 +0000</pubDate>
      <link>https://dev.to/sergchr/javascript-for-total-newbies-by-examples-60a</link>
      <guid>https://dev.to/sergchr/javascript-for-total-newbies-by-examples-60a</guid>
      <description>&lt;p&gt;This article covers the very fundamentals of the Javascript language to give you a small grasp of how it looks like and what you can do with programming languages. Though we consider only Javascript here.&lt;/p&gt;

&lt;p&gt;If you don't know if programming for you at all, you may also take a look at this article.&lt;br&gt;
Practice along the way with me by creating code snippets in &lt;a href="https://codepen.io/"&gt;Codepen&lt;/a&gt;. I don't leave the code snippets as text intentionally, so you can type it yourself and memorize better.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Disclaimer: this is a superficial guide that doesn't explain all the things covered here as well as many details and possible approaches.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;Javascript consists of basic building blocks such as variables. They are intended to keep something in mind, to save into memory, to memorize. Let's create the first variables.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--92Z1Gkn---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metacognitive.me/content/images/2021/04/_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--92Z1Gkn---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metacognitive.me/content/images/2021/04/_.png" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can save some data in our program now! What about some dynamics, calculations?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jDZrGasa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metacognitive.me/content/images/2021/04/_--1--3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jDZrGasa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metacognitive.me/content/images/2021/04/_--1--3.png" alt="I'm"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Meet a function. It's a set of instructions aimed to do something useful to us. In the example above, the function &lt;code&gt;addOneTo&lt;/code&gt; adds 1 to a number we provide to it as an argument. Yes, we can pass data to functions. But it's not mandatory. It depends on what we want to achieve. There are many use cases.&lt;/p&gt;

&lt;p&gt;How can we see the result of this code execution? Let's write it to the output.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZcisRBxR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metacognitive.me/content/images/2021/04/_--2-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZcisRBxR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metacognitive.me/content/images/2021/04/_--2-.png" alt="f"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We should see 2 that show up in the browser console - the result of the execution. Okay, you got this. What about a more real-world example?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-more-realworld-example"&gt;
  &lt;/a&gt;
  A more real-world example
&lt;/h2&gt;

&lt;p&gt;Consider you have data: a list of people with their emails. You need to get only their emails. The list can be changing over time, so doing so manually is not convenient. In this case, we need to get acquainted with a new data type - arrays.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gl2pw-1r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metacognitive.me/content/images/2021/04/_--3-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gl2pw-1r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metacognitive.me/content/images/2021/04/_--3-.png" alt="de"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So what about our real-world task? Let's define what the data should look like. We have a list of people. Each of them has an email. Also, there may be other properties like name or age. &lt;br&gt;
Our task is to get only a person's email. So, each person isn't a string, right? A number? Nope. An object?&lt;br&gt;
What the object is in Javascript? It's a data type that contains properties or fields related to an entity. As it is in our case.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7bhAaIg1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metacognitive.me/content/images/2021/04/_--4-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7bhAaIg1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metacognitive.me/content/images/2021/04/_--4-.png" alt="fr"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wow, wait! So many new things here! Wait, I'll explain.&lt;br&gt;
The question you may have is do we have any conventions to name a function's arguments? Not really, we have the same naming conventions as for variables.&lt;/p&gt;

&lt;p&gt;Why do we provide the array argument to the function if it has access to the people variable above? That's correct, it does. If you want details, read about the Javascript context execution or Scope. In this case, I want to you get used to such a convention - to use local context.&lt;br&gt;
Why array argument has &lt;code&gt;.map&lt;/code&gt; ? What is it? &lt;code&gt;array&lt;/code&gt; is an object, actually, but don't mind that for now. All the objects have properties, right? So as our &lt;code&gt;array&lt;/code&gt; does, but we didn't write it manually. By the way, how do we write object properties, the other way?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k5fQYB_M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metacognitive.me/content/images/2021/04/_--5-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k5fQYB_M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metacognitive.me/content/images/2021/04/_--5-.png" alt="de"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, Javascript arrays have built-in properties, like &lt;code&gt;map&lt;/code&gt; we've seen. The &lt;code&gt;map&lt;/code&gt; isn't a number, or string though. It's a function! Yes, object properties can be functions! Alright, what does it do? &lt;code&gt;map&lt;/code&gt; is a function that has one argument - another function. Don't leave! Give me a minute, I'll explain.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l_SqmjpH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metacognitive.me/content/images/2021/04/_--6--2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l_SqmjpH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metacognitive.me/content/images/2021/04/_--6--2.png" alt="see"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See, we pass a raw function to the &lt;code&gt;sumOf&lt;/code&gt;, but we don't call them while passing, like this: &lt;code&gt;sumOf(fn1(), fn2())&lt;/code&gt;. In this case, we would need to rewrite the &lt;code&gt;sumOf&lt;/code&gt; function as follows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cvAO8uDA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metacognitive.me/content/images/2021/04/_--7-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cvAO8uDA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metacognitive.me/content/images/2021/04/_--7-.png" alt="de"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's return to our map function. It consumes a function (which we also call a callback). This function(callback) is going to be executed on each element of a given array. In our case, we had people array, so we iterate through each object in the array and execute the function on it. For each person, we call a function that has an argument - a current object(person) we iterate.&lt;/p&gt;

&lt;p&gt;The next question you may have is what &lt;code&gt;person.email&lt;/code&gt; is? In this way, we read the &lt;code&gt;person&lt;/code&gt; variable, which is an object, for its property email. Then, we return a person's email.&lt;br&gt;
&lt;code&gt;map&lt;/code&gt; returns a new transformed array, which we save to emails variable and return.&lt;/p&gt;

&lt;p&gt;I know, it's difficult to grasp at the moment all of this stuff. With practice, it'll be easy, I promise.&lt;/p&gt;

&lt;p&gt;But now you know the fundamentals of fundamentals! Yes, not all of them, but that's enough to start practicing immediately. With what things you got acquainted currently:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Variables. You can tell your program what things to save in memory while executing.&lt;/li&gt;
&lt;li&gt;Functions. You know how to pass variables to functions as arguments, how to return a function's result. Of course, there are a lot of language instructions to learn, to make the most use of functions. But now you have the basics and can google more narrow examples.&lt;/li&gt;
&lt;li&gt;How to write output to the console via console.log.
Arrays can contain a lot of different data. The same applies to objects.&lt;/li&gt;
&lt;li&gt;Objects have properties to be assigned and reassigned if we need so. They also have built-in properties. Like the &lt;code&gt;map&lt;/code&gt; we saw for arrays. All the arrays have this property.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you didn't understand something or have questions, don't hesitate to &lt;a href="https://twitter.com/sergchr"&gt;write me on Twitter&lt;/a&gt; (DMs are open).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://metacognitive.me/javascript-for-total-newbies/"&gt;The full article with more explanations + an example with HTML &amp;amp; CSS&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Take your localhost API to be accessible from WWW</title>
      <author>The Ninja Programmer</author>
      <pubDate>Tue, 13 Apr 2021 13:19:51 +0000</pubDate>
      <link>https://dev.to/theninjaprogrammer/take-your-localhost-api-to-be-accessible-from-www-4d9</link>
      <guid>https://dev.to/theninjaprogrammer/take-your-localhost-api-to-be-accessible-from-www-4d9</guid>
      <description>&lt;p&gt;In this post, we will tell you how you can take the API on your machine to be accessible from WWW by using a powerful and free tool called ngrok.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The Problem&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Many times we developers develop APIs for our apps. But when we are working in a team and you need to give access to your API to other team members, you just have one option, upload it to a server. This process is very time-consuming. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-solution"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The Solution&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Wouldn't it be easy to simply take the API from localhost to WWW so that anyone could access it? Well, that's exactly what NGrok does for you. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-does-it-help"&gt;
  &lt;/a&gt;
  &lt;strong&gt;How does it help?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Suppose, I am developing an API that gives me the list of food items. As I am developing it on my machine, the URL to access this would be&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s1yJgIXB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dlrq7beelwg24y43az5d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s1yJgIXB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dlrq7beelwg24y43az5d.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Now, I would like my colleague to access this endpoint. So, to do that, I will use ngrok.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step 1:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Simply visit &lt;a href="https://ngrok.com/"&gt;https://ngrok.com/&lt;/a&gt; and download the ngrok.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bmpP-ie8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sonex34w1q7flc9dm4wn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bmpP-ie8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sonex34w1q7flc9dm4wn.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step 2:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Now before using ngrok you have to first set the auth token. So simply go to the ngrok site and get the auth token by creating the account. Now run the below command with your auth token.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XLDmOgf5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eu75la53f42h9z2966pz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XLDmOgf5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eu75la53f42h9z2966pz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step 3:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Lastly, just run the below command by specifying the port no on which you want to receive the request from WWW.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SZUeXYX6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/li271nu2n5uskuerem0b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SZUeXYX6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/li271nu2n5uskuerem0b.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In My case, it is 80 because my xampp is running on port 80.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fgYZEMbf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pecexpdbi2szf9wtvqwy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fgYZEMbf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pecexpdbi2szf9wtvqwy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Result&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Now you will get a random WWW URL from NGROK.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6cRzHImW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eylmk47e0l4ly4rqk0nn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6cRzHImW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eylmk47e0l4ly4rqk0nn.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
By using this URL anyone can access your localhost API.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Kkwj5Zz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzef11hb8walrfrmmkmc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Kkwj5Zz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzef11hb8walrfrmmkmc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for reading!&lt;/p&gt;

&lt;p&gt;Follow us on Instagram&lt;br&gt;
&lt;a href="https://www.instagram.com/the.ninja.programmer/"&gt;https://www.instagram.com/the.ninja.programmer/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>productivity</category>
    </item>
    <item>
      <title>A pure CSS password generator! 😱 They said it can't be done...</title>
      <author>InHuOfficial</author>
      <pubDate>Tue, 13 Apr 2021 13:16:40 +0000</pubDate>
      <link>https://dev.to/inhuofficial/a-pure-css-password-generator-they-said-it-can-t-be-done-4pla</link>
      <guid>https://dev.to/inhuofficial/a-pure-css-password-generator-they-said-it-can-t-be-done-4pla</guid>
      <description>&lt;p&gt;I have seen loads of people say "it can't be done" and....well it can't (yet)!&lt;/p&gt;

&lt;p&gt;However after seeing &lt;a href="https://dev.to/alvaromontoro/bezos-calculator-4b7h"&gt;this post by Alvaro Motoro&lt;/a&gt; (and with the useful comment by &lt;a href="https://dev.to/afif"&gt;Temani Afif&lt;/a&gt;) I realised I could fake it!&lt;/p&gt;

&lt;p&gt;I have shamelessly stolen about 90% of the mark-up for Alvaro's post, I hope he doesn't mind!&lt;/p&gt;

&lt;p&gt;Click on the black boxes to generate your password. Click again to start the randomiser going again to pick another password! Simple. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; as many of you know I advocate for accessibility, the below is not accessible, it is a silly experiment &lt;strong&gt;NOT&lt;/strong&gt; to be used in the real world.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/quyzm5h6/2//embedded/result,css,html//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The chance of generating the same password is actually very low due to human reaction times, rendering times etc.&lt;/p&gt;

&lt;p&gt;Obviously as I said earlier, I wouldn't recommend this for production.....it isn't actually random, &lt;strong&gt;it isn't accessible&lt;/strong&gt; and you can't copy and paste the generated password. &lt;/p&gt;

&lt;p&gt;In fact it is pretty rubbish as a password generator!&lt;/p&gt;

&lt;p&gt;However the principle of "faking" random could be used for all sorts of things such as a random colour picker, dice etc.&lt;/p&gt;

&lt;p&gt;Anyway, as it isn't usable in production I am not even going to explain it, just thought I would lay claim to the title of the first person to create a CSS only password generator (as I don't think anyone has done it before)!&lt;/p&gt;

&lt;p&gt;(Ok I will explain a little).&lt;/p&gt;

&lt;p&gt;We toggle a checkbox and use CSS to grab the checked state. When the checkbox is unchecked (we start checked) we use &lt;code&gt;animation-play-state: paused;&lt;/code&gt; to stop all animations. When it is checked we unpause all the animations..&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:checked&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="nc"&gt;.number&lt;/span&gt;&lt;span class="nd"&gt;::before&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation-play-state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;running&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As for the animations - each box is simply jumping between letters and numbers at a super fast pace, with a different timing for each box so you get the appearance of randomness.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#update"&gt;
  &lt;/a&gt;
  Update
&lt;/h2&gt;

&lt;p&gt;For anyone who likes CSS witch craft / voodoo here is &lt;a href="https://dev.to/afif"&gt;Temani Afif&lt;/a&gt;)'s "single element" version (it is two elements...I have to get a dig in somewhere 🤣). &lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/n9vjbr20//embedded/result,html,css//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;It doesn't work in anything other than Chromium based browsers (at the moment) but how can you possibly not be impressed with the creativity!&lt;/p&gt;

&lt;p&gt;I am going to say mine is better just because it uses 62 characters instead of 26...😋&lt;/p&gt;

</description>
      <category>css</category>
      <category>showdev</category>
      <category>webdev</category>
      <category>codepen</category>
    </item>
    <item>
      <title>gosec – Golang Security Checker</title>
      <author>kalilinux</author>
      <pubDate>Tue, 13 Apr 2021 13:14:05 +0000</pubDate>
      <link>https://dev.to/kalilinux/gosec-golang-security-checker-1p9k</link>
      <guid>https://dev.to/kalilinux/gosec-golang-security-checker-1p9k</guid>
      <description>&lt;p&gt;Inspects source code for security problems by scanning the Go AST.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://kali-linuxtr.net/gosec-golang-security-checker"&gt;Gosec&lt;/a&gt;&lt;/p&gt;

</description>
      <category>go</category>
      <category>security</category>
      <category>codereview</category>
    </item>
    <item>
      <title>"Dependency-Free" React Carousel Component</title>
      <author>Yifan Ai</author>
      <pubDate>Tue, 13 Apr 2021 13:09:15 +0000</pubDate>
      <link>https://dev.to/yifanai/dependency-free-react-carousel-component-36aj</link>
      <guid>https://dev.to/yifanai/dependency-free-react-carousel-component-36aj</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fq2vftN3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ub9fzr0b4ai282yc6gm9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fq2vftN3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ub9fzr0b4ai282yc6gm9.gif" alt="react-gallery-carousel controlled by mouse"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Recently, I completed react-gallery-carousel, a "dependency-free" React carousel component with support for touch, mouse dragging, lazy loading, pinch to zoom, thumbnails, modal and keyboard navigation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---mlv_jfy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/011t8m65z03btzcrsuun.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---mlv_jfy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/011t8m65z03btzcrsuun.gif" alt="react-gallery-carousel controlled by touch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Demo: &lt;a href="https://yifaneye.github.io/react-gallery-carousel/"&gt;https://yifaneye.github.io/react-gallery-carousel/&lt;/a&gt; (or &lt;a href="https://yifanai.com/rgc"&gt;https://yifanai.com/rgc&lt;/a&gt;) 👈&lt;br&gt;
GitHub: &lt;a href="https://github.com/yifaneye/react-gallery-carousel"&gt;https://github.com/yifaneye/react-gallery-carousel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mmURwKwm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/276qa3q3wp32kldmla1p.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mmURwKwm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/276qa3q3wp32kldmla1p.jpg" alt="Lighthouse report on react-gallery-carousel's demo site"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fq2vftN3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ub9fzr0b4ai282yc6gm9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fq2vftN3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ub9fzr0b4ai282yc6gm9.gif" alt="rgc3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;react-gallery-carousel component not only supports:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lazy loading&lt;/li&gt;
&lt;li&gt;Thumbnails&lt;/li&gt;
&lt;li&gt;Maximization (fullscreen)&lt;/li&gt;
&lt;li&gt;Finger swiping and pinch zooming&lt;/li&gt;
&lt;li&gt;Mouse dragging&lt;/li&gt;
&lt;li&gt;Keyboard navigation&lt;/li&gt;
&lt;li&gt;Accessibility&lt;/li&gt;
&lt;li&gt;Instantaneous speed detection;
but also supports customization with props. 😊&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I handcrafted icons, wrote many useful custom hooks and wrote many exquisite functional components to complete this piece of work. 👨🏻‍💻&lt;/p&gt;

&lt;p&gt;Everyone is welcome to ask questions, find issues, make pull requests, make suggestions and give stars on GitHub! 👏&lt;/p&gt;

&lt;p&gt;Demo: &lt;a href="https://yifaneye.github.io/react-gallery-carousel/"&gt;https://yifaneye.github.io/react-gallery-carousel/&lt;/a&gt; (or &lt;a href="https://yifanai.com/rgc"&gt;https://yifanai.com/rgc&lt;/a&gt;) 👈&lt;br&gt;
GitHub: &lt;a href="https://github.com/yifaneye/react-gallery-carousel"&gt;https://github.com/yifaneye/react-gallery-carousel&lt;/a&gt;&lt;br&gt;
npm: &lt;a href="https://www.npmjs.com/package/react-gallery-carousel"&gt;https://www.npmjs.com/package/react-gallery-carousel&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>css</category>
      <category>a11y</category>
    </item>
    <item>
      <title>Nullish Coalescing Operator (??)</title>
      <author>Matheus dos Reis de Jesus</author>
      <pubDate>Tue, 13 Apr 2021 13:04:59 +0000</pubDate>
      <link>https://dev.to/reisdev/nullish-coalescing-operator-3jgl</link>
      <guid>https://dev.to/reisdev/nullish-coalescing-operator-3jgl</guid>
      <description>&lt;p&gt;Cover by &lt;a href="https://unsplash.com/@evan__bray?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Evan Dennis&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/question-mark?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#intro"&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-operator-raw-endraw-"&gt;The operator ??&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#use-case"&gt;Use case&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#considerations"&gt;Considerations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h1&gt;

&lt;p&gt;You may have seen a Javascript piece of code like this before:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;actualValue&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;defaultValue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The operator &lt;code&gt;||&lt;/code&gt; used above is called "Logic OR", and works this way: If the value at the left of the operator is true, its value will be assigned to the variable &lt;code&gt;value&lt;/code&gt;. If it is false, then the variable &lt;code&gt;value&lt;/code&gt; will receive the value at the right, &lt;code&gt;"defaultValue"&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you're used to Javascript, you must know that there are various problems with false and true values. Example: &lt;code&gt;""&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; are considered false values. Then, if in an algorithm &lt;code&gt;""&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; are considered valid values, the operator &lt;code&gt;||&lt;/code&gt; wouldn't give the desired result. That's when the Nullish Coalescing operator comes.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-operator-raw-endraw-"&gt;
  &lt;/a&gt;
  The operator &lt;code&gt;??&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;Now that you understand the problem, comes the solution. The Nullish Coalescing operator is represented by the symbols &lt;code&gt;??&lt;/code&gt; and is used like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;actualValue&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;defaultValue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case, if the value of &lt;code&gt;actualValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, the value &lt;code&gt;"defautlValue"&lt;/code&gt; will be assigned to the variable &lt;code&gt;value&lt;/code&gt;. Otherwise, the value &lt;code&gt;actualValue&lt;/code&gt; will be assigned to it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#use-case"&gt;
  &lt;/a&gt;
  Use case
&lt;/h1&gt;

&lt;p&gt;Think about this scenario: You're creating a function that evaluates a expression using a coefficient. If the coefficient isn't provided, it will receive a default value, with &lt;code&gt;0&lt;/code&gt; being valid. As I've said before, the operator &lt;code&gt;||&lt;/code&gt; would not be the best for this case. Then, the operator &lt;code&gt;??&lt;/code&gt; is much more suitable. Check the representation of this problem below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;calculateResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;coefficient&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;coefficient&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;calculateResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Output: 3.5 ( 2 + 3 * 0,5 )&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The function &lt;code&gt;calculateResult&lt;/code&gt; uses the &lt;code&gt;??&lt;/code&gt; to check if the parameter &lt;code&gt;coefficient&lt;/code&gt; is provided. If it is, then the value will be taken. Otherwise, the default coefficient will be &lt;code&gt;0.5&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#considerations"&gt;
  &lt;/a&gt;
  Considerations
&lt;/h1&gt;

&lt;p&gt;The case used was a simple example, but the operator &lt;code&gt;??&lt;/code&gt; can be useful in a lot of situations and assure more reliability to your code.&lt;/p&gt;

&lt;p&gt;Enjoyed this article? Follow me for more contents like this one!&lt;/p&gt;

&lt;p&gt;Follow me:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/reisdev"&gt;Twitter&lt;/a&gt; | &lt;a href="https://instagram.com/reisdev"&gt;Instagram&lt;/a&gt; | &lt;a href="https://youtube.com/reisdev"&gt;Youtube&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;See you on the next article!👋🏽&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>node</category>
    </item>
    <item>
      <title>📣 FREE Community Plan for JavaScript Dev to develop faster 🚀</title>
      <author>Long Nghiem</author>
      <pubDate>Tue, 13 Apr 2021 12:58:22 +0000</pubDate>
      <link>https://dev.to/scaledynamics/free-community-plan-for-javascript-dev-to-develop-faster-4i9k</link>
      <guid>https://dev.to/scaledynamics/free-community-plan-for-javascript-dev-to-develop-faster-4i9k</guid>
      <description>&lt;p&gt;Hi there Full Stack community 👋&lt;/p&gt;

&lt;p&gt;I guess some of you might already know about and already tested your code on the JavaScript Full Stack Playground. We would like to thank you for your interest and your contribution to the Full Stack community 🍻 🎉.  We want to thank everyone who participated and gave feedback on the Playground. &lt;/p&gt;

&lt;p&gt;Today, we proudly announce that the JavaScript Full Stack Playground just got a Free Developer Plan!  You’ll just have to sign in to the Community Plan that provides access to the next-generation less-code web platform, guaranteed to bring you a unique and fun experience of coding in Full Stack 🤯:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The JavaScript Full Stack Playground, an in-browser code editor for frontend and Node.js backend &lt;/li&gt;
&lt;li&gt;The ScaleDynamics Platform and its production-grade SDK for projects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With no further ado, let's get started!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#productiongrade-sdk"&gt;
  &lt;/a&gt;
  Production-grade SDK
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pbtqe8En--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pnrxuet3deh6hgupqfm3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pbtqe8En--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pnrxuet3deh6hgupqfm3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Discover our &lt;a href="https://scaledynamics.com/features#Qaw2qkTSUyIz0ArJmKap65A4cWhiXGRE"&gt;production-grade SDK for projects&lt;/a&gt; - a new way to develop faster than never before, automate away mundane tasks, and focus on building your innovation. It offers a 100% managed Full Stack less-code environment:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Our groundbreaking compiler generates the HTTP/JSON stubs required to call a Node.js function using JS objects.&lt;/li&gt;
&lt;li&gt;The SDK manages the deployment &amp;amp; execution of the frontend &amp;amp; the Node.js backend on our cloud. Plug your managed database tier to bring your ideal full-stack stack to your developers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You will never have to deal with Express.js, routing, doing HTTPs,  and managing its errors, serialization, creating dockers, HTTPs custom domains, managing endpoints, and how to deploy and manage servers... The tool takes care of all that for you, it’s just magic! 😉🤯&lt;/p&gt;

&lt;p&gt;Not just that, you can focus on your code logic by reducing more than 10000 lines of code in a project 😎&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f1DhzCU0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l26db61s9fud9iwy7awf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f1DhzCU0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l26db61s9fud9iwy7awf.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Our SDK also comes with lots of cool features such as cloud emulator, integrated live reload, deployment in one command line… and they are all waiting for you to discover! So why wait? Check it now &lt;a href="https://scaledynamics.com/community-plan"&gt;here&lt;/a&gt; &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#javascript-full-stack-playground"&gt;
  &lt;/a&gt;
  JavaScript Full Stack Playground
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VSzeAXqU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f4pxd8z4qh2w08ptqmbd.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VSzeAXqU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f4pxd8z4qh2w08ptqmbd.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;
The JavaScript Full Stack Playground might be quite familiar to some of you, but if it doesn’t, here’s its features: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Coding directly in less-code mode in the browser for both front-end JavaScript and back-end Node.js (of course, without HTTPs and JSON management) 😉&lt;/li&gt;
&lt;li&gt;Showing results in real-time with zero configuration&lt;/li&gt;
&lt;li&gt;A public library of code snippets which makes it easier for you to get inspiration, to learn, test and prototype ideas&lt;/li&gt;
&lt;li&gt;The public code snippet library will be added with more API tutorial snippets which allow you to test APIs directly within the playground. &lt;/li&gt;
&lt;li&gt;Share your snippets with your team by sending them a playground URL to review and work with peer easier&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#start-coding-in-full-stack-today"&gt;
  &lt;/a&gt;
  Start coding in Full Stack today!
&lt;/h1&gt;

&lt;p&gt;The Dev Community Plan is FREE  for developers, you can easily create an account by clicking &lt;a href="https://scaledynamics.com/community-plan"&gt;this link&lt;/a&gt; (non-commercial use).&lt;/p&gt;

&lt;p&gt;And if you feel it’s interesting and want to explore more about the tech or just to keep yourself updated, feel free to follow our social media. I guarantee that it’ll be fun, and you’ll never miss a single update on our app version 😎✨&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/ScaleDynDev"&gt;Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.facebook.com/scaledynamics.tech"&gt;Facebook&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.instagram.com/scaledynamicstech"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
