<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Top 5 decentralized app development frameworks</title>
      <author>Matt Angelosanto</author>
      <pubDate>Mon, 29 Nov 2021 19:25:37 +0000</pubDate>
      <link>https://dev.to/logrocket/top-5-decentralized-app-development-frameworks-42g</link>
      <guid>https://dev.to/logrocket/top-5-decentralized-app-development-frameworks-42g</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/victorjonah/"&gt;Victor Jonah&lt;/a&gt;&lt;/strong&gt; ✏️&lt;/p&gt;

&lt;p&gt;With the recent rise of decentralized applications, or DApps, frameworks created specifically to ease DApp development have become more common.&lt;/p&gt;

&lt;p&gt;Like frameworks for frontend developers, DApp frameworks are pieces of code written to build software, which helps make building applications for blockchain easier. While using a framework is not necessary, it does help develop software better and faster.&lt;/p&gt;

&lt;p&gt;In this article, we will compare a few popular frameworks that are generally used by blockchain engineers and look at their benefits, disadvantages, and networks, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/top-5-decentralized-app-development-frameworks/#hardhat"&gt;Hardhat&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/top-5-decentralized-app-development-frameworks/#truffle"&gt;Truffle&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/top-5-decentralized-app-development-frameworks/#embark"&gt;Embark&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/top-5-decentralized-app-development-frameworks/#brownie"&gt;Brownie&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/top-5-decentralized-app-development-frameworks/#openzeppelin"&gt;OpenZeppelin&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But, before we get into this, let’s discuss the types of DApps are available.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-dapps"&gt;
  &lt;/a&gt;
  What are DApps?
&lt;/h2&gt;

&lt;p&gt;Decentralized applications (DApps) provide a new way to interact with web applications.&lt;/p&gt;

&lt;p&gt;You may have heard that “blockchain is the future” or “the future is decentralized;” this mentality permeates through the quick releases of new blockchain-based technologies, meaning developers can access reliable frameworks.&lt;/p&gt;

&lt;p&gt;The DApps that are based on blockchain technology run on a peer-to-peer (P2P) network of several computers or servers, rather than a traditional central server. These applications are &lt;a href="https://blog.logrocket.com/smart-contract-programming-languages/"&gt;built on the concept of smart contracts&lt;/a&gt; and the consensus process or mechanism.&lt;/p&gt;

&lt;p&gt;This means when an application is decentralized, it is first created with underlying blockchain technology pushed to a preferred blockchain network.&lt;/p&gt;

&lt;p&gt;Remember that a blockchain network is a collection of several thousands of computers identified as nodes or servers, each owned by a person. Each node, server, and computer then becomes a distributed database, meaning every other server has a copy of the same data.&lt;/p&gt;

&lt;p&gt;With all this in mind, a few benefits of building a DApp is that they do not have any downtime because they do not have a central server.&lt;/p&gt;

&lt;p&gt;They are also not prone to cyber-attacks and cannot be shut down because there is no central server and all the servers are distributed. If one distributed server is attacked, others become aware.&lt;/p&gt;

&lt;p&gt;It is also open source, making it transparent and open to developers.&lt;/p&gt;

&lt;p&gt;In summary, a DApp does not bank on a traditional central server or service provider like Google Cloud, Heroku, or Digital Ocean. Rather, its deployment to the blockchain makes it transparent with no central location to store data and no third-party control.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-dapps"&gt;
  &lt;/a&gt;
  Types of DApps
&lt;/h2&gt;

&lt;p&gt;The different types of DApps available are often seen through the different sectors of blockchain technology solutions a DApp is built to solve. For example, the first-ever DApp &lt;a href="https://blog.logrocket.com/ethereum-blockchain-development-using-web3-js/"&gt;built was on the Ethereum blockchain&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Similarly, the main reason Bitcoin was built was to remove the financial middleman (that is, the bank) from the process of currency transfers. With Bitcoin, money transfers can be P2P without using a bank.&lt;/p&gt;

&lt;p&gt;Like Bitcoin, there are many other sectors where DApps play a deliberate role.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#decentralized-finance-defi"&gt;
  &lt;/a&gt;
  Decentralized finance (DeFi)
&lt;/h2&gt;

&lt;p&gt;Decentralized finance, or DeFi, is a term given to financial services that use decentralized money like Bitcoin or Ethereum to perform operations.&lt;/p&gt;

&lt;p&gt;Traditionally, we have financial services that operate using a central authority, like banks and governments, including financial services such as providing loans, savings plans, and insurance.&lt;/p&gt;

&lt;p&gt;However, many saw having a central authority perform these financial operations as risky because of fraud, corruption, and mismanagement. This gave birth to DeFi.&lt;/p&gt;

&lt;p&gt;Building a DeFi application requires choosing the platform (this includes Ethereum, Solana, Binance Smart contracts, and many more). DeFi’s main focus is to remove the middleman while offering transparency and decentralization.&lt;/p&gt;

&lt;p&gt;DeFi apps are used in decentralized exchange, insurance, and loan services, with apps like &lt;a href="https://pancakeswap.finance/"&gt;Pancackeswap&lt;/a&gt; and &lt;a href="https://app.1inch.io/#/1/swap/ETH/DAI"&gt;1inch&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#decentralized-autonomous-organization-dao"&gt;
  &lt;/a&gt;
  Decentralized autonomous organization (DAO)
&lt;/h3&gt;

&lt;p&gt;A decentralized autonomous organization, or DAO, is an organization that operates fully through code/smart contracts. These organizations operate on the rules given to them and then operate solely on those terms.&lt;/p&gt;

&lt;p&gt;So, a DAO can run a company without the help of human activity, with the decentralized board creating rules for the DAO to run on, meaning there is no need for repetitive board meetings.&lt;/p&gt;

&lt;p&gt;A possible example of a DAO is a driverless taxi company. In this example, we could have a DAO Lyft or DAO Uber that operates entirely on a collection of smart contracts deployed on any blockchain.&lt;/p&gt;

&lt;p&gt;This would streamline operations like where to send profits, &lt;a href="https://makerdao.com/"&gt;like how MakerDao operates&lt;/a&gt;, when and where to send the taxis, when to refuel the cars, and more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#merchandise-management"&gt;
  &lt;/a&gt;
  Merchandise management
&lt;/h3&gt;

&lt;p&gt;A merchandise management DApp is most often associated with supply chain processes and systems. The traditional supply chain does not provide insight or transparency to products, meaning we don’t always know what a product is truly made of or where it comes from.&lt;/p&gt;

&lt;p&gt;With blockchain in the supply chain, however, product traceability is available; you can trace where products come from because data stored in the blockchain is decentralized. An example of this is &lt;a href="https://www.gxblocks.com/"&gt;GX Blocks&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comparing-dapp-frameworks"&gt;
  &lt;/a&gt;
  Comparing DApp frameworks
&lt;/h2&gt;

&lt;p&gt;Let’s now look at the most common frameworks for building DApps.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hardhat"&gt;
  &lt;/a&gt;
  Hardhat
&lt;/h3&gt;

&lt;p&gt;Hardhat is a framework for building smart contracts that offers a development environment for professionals. This development environment lets users compile, run tests, check smart contracts for mistakes or debugging, and deploy decentralized applications.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#hardhat-installation"&gt;
  &lt;/a&gt;
  Hardhat installation
&lt;/h4&gt;

&lt;p&gt;To install Hardhat, ensure you have Node.js installed on your computer. Then, initialize a project with &lt;code&gt;npm init -y&lt;/code&gt; and run the following command below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;D&lt;/span&gt; &lt;span class="nx"&gt;hardhat&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If installed properly, execute Hardhat with this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;hardhat&lt;/span&gt; 

&lt;span class="mi"&gt;888&lt;/span&gt;    &lt;span class="mi"&gt;888&lt;/span&gt;                      &lt;span class="mi"&gt;888&lt;/span&gt; &lt;span class="mi"&gt;888&lt;/span&gt;               &lt;span class="mi"&gt;888&lt;/span&gt;
&lt;span class="mi"&gt;888&lt;/span&gt;    &lt;span class="mi"&gt;888&lt;/span&gt;                      &lt;span class="mi"&gt;888&lt;/span&gt; &lt;span class="mi"&gt;888&lt;/span&gt;               &lt;span class="mi"&gt;888&lt;/span&gt;
&lt;span class="mi"&gt;888&lt;/span&gt;    &lt;span class="mi"&gt;888&lt;/span&gt;                      &lt;span class="mi"&gt;888&lt;/span&gt; &lt;span class="mi"&gt;888&lt;/span&gt;               &lt;span class="mi"&gt;888&lt;/span&gt;
&lt;span class="mi"&gt;8888888888&lt;/span&gt;  &lt;span class="mi"&gt;8888&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="mi"&gt;888&lt;/span&gt;&lt;span class="nx"&gt;d888&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;d88888&lt;/span&gt; &lt;span class="mi"&gt;88888&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;   &lt;span class="mi"&gt;8888&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="mi"&gt;888888&lt;/span&gt;
&lt;span class="mi"&gt;888&lt;/span&gt;    &lt;span class="mi"&gt;888&lt;/span&gt;     &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;88b 888P&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;  &lt;span class="nx"&gt;d88&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; 888 888 &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="mi"&gt;88&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;     &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;88b 888
888    888 .d888888 888    888  888 888  888 .d888888 888
888    888 888  888 888    Y88b 888 888  888 888  888 Y88b.
888    888 &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="nx"&gt;Y888888&lt;/span&gt; &lt;span class="mi"&gt;888&lt;/span&gt;     &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Y88888 888  888 &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="nx"&gt;Y888888&lt;/span&gt;  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Y888

Welcome to Hardhat v2.0.8

? What do you want to do? …
❯ Create a sample project
  Create an empty hardhat.config.js
  Quit
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;npx&lt;/code&gt; comes with Node.js when installed and helps execute executables installed on your local environment.&lt;/p&gt;

&lt;p&gt;To ensure Hardhat executes in your project, run the command again:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;hardhat&lt;/span&gt;
&lt;span class="nx"&gt;Hardhat&lt;/span&gt; &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;

&lt;span class="nx"&gt;Usage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;hardhat&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;GLOBAL&lt;/span&gt; &lt;span class="nx"&gt;OPTIONS&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TASK&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;TASK&lt;/span&gt; &lt;span class="nx"&gt;OPTIONS&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nx"&gt;GLOBAL&lt;/span&gt; &lt;span class="nx"&gt;OPTIONS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="nx"&gt;Hardhat&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;emoji&lt;/span&gt; &lt;span class="nx"&gt;Use&lt;/span&gt; &lt;span class="nx"&gt;emoji&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;help&lt;/span&gt; &lt;span class="nx"&gt;Shows&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;or&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;s help if its name is provided
--max-memory The maximum amount of memory that Hardhat can use.
--network The network to connect to.
--show-stack-traces Show stack traces.
--tsconfig A TypeScript config file.
--verbose Enables Hardhat verbose logging
--version Shows hardhat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="nx"&gt;AVAILABLE&lt;/span&gt; &lt;span class="nx"&gt;TASKS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="nx"&gt;accounts&lt;/span&gt; &lt;span class="nx"&gt;Prints&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;accounts&lt;/span&gt;
&lt;span class="nx"&gt;check&lt;/span&gt; &lt;span class="nx"&gt;Check&lt;/span&gt; &lt;span class="nx"&gt;whatever&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;need&lt;/span&gt;
&lt;span class="nx"&gt;clean&lt;/span&gt; &lt;span class="nx"&gt;Clears&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;cache&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;deletes&lt;/span&gt; &lt;span class="nx"&gt;all&lt;/span&gt; &lt;span class="nx"&gt;artifacts&lt;/span&gt;
&lt;span class="nx"&gt;compile&lt;/span&gt; &lt;span class="nx"&gt;Compiles&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;entire&lt;/span&gt; &lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;building&lt;/span&gt; &lt;span class="nx"&gt;all&lt;/span&gt; &lt;span class="nx"&gt;artifacts&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt; &lt;span class="nx"&gt;Opens&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;hardhat&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;
&lt;span class="nx"&gt;flatten&lt;/span&gt; &lt;span class="nx"&gt;Flattens&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;prints&lt;/span&gt; &lt;span class="nx"&gt;contracts&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;their&lt;/span&gt; &lt;span class="nx"&gt;dependencies&lt;/span&gt;
&lt;span class="nx"&gt;help&lt;/span&gt; &lt;span class="nx"&gt;Prints&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;
&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;Starts&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;RPC&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;Hardhat&lt;/span&gt; &lt;span class="nx"&gt;Network&lt;/span&gt;
&lt;span class="nx"&gt;run&lt;/span&gt; &lt;span class="nx"&gt;Runs&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;defined&lt;/span&gt; &lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;after&lt;/span&gt; &lt;span class="nx"&gt;compiling&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;project&lt;/span&gt;
&lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="nx"&gt;Runs&lt;/span&gt; &lt;span class="nx"&gt;mocha&lt;/span&gt; &lt;span class="nx"&gt;tests&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get help for a specific task run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;hardhat&lt;/span&gt; &lt;span class="nx"&gt;help&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This same command also checks the available tasks Hardhart offers. Hardhat also offers an ecosystem of plugins, meaning there are more libraries you must install when working with Hardhat, including the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dev&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;nomiclabs&lt;/span&gt;&lt;span class="sr"&gt;/hardhat-waffle ethereum-waffle chai @nomiclabs/&lt;/span&gt;&lt;span class="nx"&gt;hardhat&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;ethers&lt;/span&gt; &lt;span class="nx"&gt;ethers&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;hardhat-waffle&lt;/code&gt;, a plugin to test your smart contracts&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;hardhat-ethers&lt;/code&gt;, which allows you interact with your smart contract from the frontend&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;chai&lt;/code&gt;, a Node.js testing library&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#the-hardhat-network"&gt;
  &lt;/a&gt;
  The Hardhat network
&lt;/h4&gt;

&lt;p&gt;Remember that smart contracts cannot deploy to a central server like a traditional application; rather, they must deploy to the Ethereum blockchain network that requires spending ETH currency.&lt;/p&gt;

&lt;p&gt;Because the Ethereum network is the server, ensure you test your smart contract before deploying to the Ethereum network, also called the mainnet. To test, we need a local blockchain, which Hardhat offers to us with Hardhat Network.&lt;/p&gt;

&lt;p&gt;To begin this network, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;hardhat&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;
&lt;span class="nx"&gt;Started&lt;/span&gt; &lt;span class="nx"&gt;HTTP&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;RPC&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="nx"&gt;at&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//127.0.0.1:8545/&lt;/span&gt;

&lt;span class="nx"&gt;Accounts&lt;/span&gt;
&lt;span class="o"&gt;========&lt;/span&gt;
&lt;span class="nx"&gt;Account&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt; &lt;span class="nx"&gt;ETH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;Private&lt;/span&gt; &lt;span class="nx"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80&lt;/span&gt;

&lt;span class="nx"&gt;Account&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt; &lt;span class="nx"&gt;ETH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;Private&lt;/span&gt; &lt;span class="nx"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your project folder, you should see &lt;code&gt;Greeter.sol&lt;/code&gt; in the contracts folder:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//SPDX-License-Identifier: Unlicense&lt;/span&gt;
&lt;span class="nx"&gt;pragma&lt;/span&gt; &lt;span class="nx"&gt;solidity&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hardhat/console.sol&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;contract&lt;/span&gt; &lt;span class="nx"&gt;Greeter&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="kr"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="nx"&gt;memory&lt;/span&gt; &lt;span class="nx"&gt;_greeting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Deploying a Greeter with greeting:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;_greeting&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;greeting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_greeting&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;view&lt;/span&gt; &lt;span class="nx"&gt;returns&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="nx"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;setGreeting&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="nx"&gt;memory&lt;/span&gt; &lt;span class="nx"&gt;_greeting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Changing greeting from '%s' to '%s'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;_greeting&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;greeting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_greeting&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To compile this, run the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;hardhat&lt;/span&gt; &lt;span class="nx"&gt;compile&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#hardhat-benefits"&gt;
  &lt;/a&gt;
  Hardhat benefits
&lt;/h4&gt;

&lt;p&gt;A few of the most common benefits of using Hardhat as your DApp framework include the following. Remember, these are the most common, you might have a personalized benefit, too:&lt;/p&gt;

&lt;p&gt;First, Hardhat is under active maintenance because it is one of the most used frameworks for building decentralized applications.&lt;/p&gt;

&lt;p&gt;This can be attributed to its open source format with large community support thanks to &lt;a href="https://github.com/nomiclabs/hardhat"&gt;over 17k users on GitHub&lt;/a&gt; and &lt;a href="https://discord.com/invite/TETZs2KK4k"&gt;an active Discord community with 4.6k members&lt;/a&gt; at the time of posting this article. It is continuously under development and growing quickly.&lt;/p&gt;

&lt;p&gt;And, &lt;a href="https://hardhat.org/guides/waffle-testing.html"&gt;with its technology based in JavaScript and TypeScript&lt;/a&gt;, it’s easy for JavaScript developers to pick up.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#hardhat-disadvantages"&gt;
  &lt;/a&gt;
  Hardhat disadvantages
&lt;/h4&gt;

&lt;p&gt;One main disadvantage of Hardhat is that it is clearly for professionals and not beginners since its documentation is fairly brief on how to get started. Beginners building DApps might need to try other frameworks like Truffle before looking into Hardhat.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#truffle"&gt;
  &lt;/a&gt;
  Truffle
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://blog.logrocket.com/truffle-suite-tutorial-develop-ethereum-smart-contracts/"&gt;Truffle is another framework for building decentralized applications on the Ethereum blockchain&lt;/a&gt;. It is the most popular and one of the pioneer frameworks. It offers the aid of compilation, deployment, and testing.&lt;/p&gt;

&lt;p&gt;Most other frameworks followed Truffle’s path, and if you are someone new in DApp development, you will most likely encounter Truffle due to its beginner-friendly setup.&lt;/p&gt;

&lt;p&gt;It can also be used for other earned value management-compatible (EVM) blockchains like Binance Smart Chain, Hyperledger, Polygon, and more. It also supports the Solidity and Vyper languages.&lt;/p&gt;

&lt;p&gt;And, if you are familiar with Node.js, it is an edge because Truffle is written in JavaScript.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#truffle-installation"&gt;
  &lt;/a&gt;
  Truffle installation
&lt;/h4&gt;

&lt;p&gt;You must have Node.js installed on your PC to begin. Installation is easy, you just run this command in your project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt; &lt;span class="nx"&gt;truffle&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, initialize Truffle in your project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;truffle&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If successful, this is what you should see below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Starting&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;================&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;Copying&lt;/span&gt; &lt;span class="nx"&gt;project&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;macbookpro&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Desktop&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;dapp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;truffle&lt;/span&gt;

&lt;span class="nx"&gt;Init&lt;/span&gt; &lt;span class="nx"&gt;successful&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sweet&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;

&lt;span class="nx"&gt;Try&lt;/span&gt; &lt;span class="nx"&gt;our&lt;/span&gt; &lt;span class="nx"&gt;scaffold&lt;/span&gt; &lt;span class="nx"&gt;commands&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;started&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;truffle&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt; &lt;span class="nx"&gt;contract&lt;/span&gt; &lt;span class="nx"&gt;YourContractName&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;scaffold&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;contract&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;truffle&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="nx"&gt;YourTestName&lt;/span&gt;         &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;scaffold&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;

&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//trufflesuite.com/docs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The project structure is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;dapp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;truffle&lt;/span&gt; &lt;span class="nx"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nx"&gt;contracts&lt;/span&gt;
&lt;span class="nx"&gt;migrations&lt;/span&gt;
&lt;span class="nx"&gt;test&lt;/span&gt;
&lt;span class="nx"&gt;truffle&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#the-truffle-network"&gt;
  &lt;/a&gt;
  The Truffle network
&lt;/h4&gt;

&lt;p&gt;Truffle offers a development network to run and test DApps without needing to deploy to the mainnet and &lt;a href="https://blog.logrocket.com/complete-guide-blockchain-testing/"&gt;serves as a local development blockchain for testing&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the &lt;code&gt;truffle-config.js&lt;/code&gt; file, the network object comes with development and advance network configurations:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;networks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;development&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;127.0.0.1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8545&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;network_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// match any network&lt;/span&gt;
    &lt;span class="na"&gt;websockets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;live&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;178.25.19.88&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Random IP for example purposes (do not use)&lt;/span&gt;
    &lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;network_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="c1"&gt;// Ethereum public network&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The development configuration is the default network where you run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;truffle&lt;/span&gt; &lt;span class="nx"&gt;migrate&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;network&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To compile your smart contracts, use the command below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;truffle&lt;/span&gt; &lt;span class="nx"&gt;compile&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#truffle-benefits"&gt;
  &lt;/a&gt;
  Truffle benefits
&lt;/h4&gt;

&lt;p&gt;Due to its popularity and widespread usage, Truffle has wide support from its users, &lt;a href="https://github.com/trufflesuite/truffle"&gt;with over 35k GitHub users at the time of posting&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And, like Hardhat, maintenance is continuous to provide active support, and Truffle supports local blockchain, testnet, and deploys to the mainnet easily.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#truffle-disadvantages"&gt;
  &lt;/a&gt;
  Truffle disadvantages
&lt;/h4&gt;

&lt;p&gt;Debugging in Truffle is not as easy as Hardhat because Truffle requires you to create events and throw them into a log, making you look for that event. Whereas in Hardhat, you have a &lt;code&gt;console.log&lt;/code&gt; prompting messages on the terminal, making you debug faster.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#embark"&gt;
  &lt;/a&gt;
  Embark
&lt;/h3&gt;

&lt;p&gt;Embark is another framework for the EVM blockchain that is regarded as a full-stack framework. This means the framework offers the solution of building an entire decentralized application’s frontend and backend simultaneously.&lt;/p&gt;

&lt;p&gt;Embark watches for changes in your &lt;a href="https://blog.logrocket.com/complete-guide-blockchain-testing/#creating-smart-contract"&gt;Solidity smart contracts&lt;/a&gt; and frontend (HTML and JavaScript) code, and redeploys them to the blockchain network.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#embark-installation"&gt;
  &lt;/a&gt;
  Embark installation
&lt;/h4&gt;

&lt;p&gt;Before installing Embark, ensure you have Node.js installed on your computer. Also, Embark requires you to have the following installed as well:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  The &lt;a href="https://framework.embarklabs.io/docs/installation.html#Ethereum-Client-Optional"&gt;Ethereum Client&lt;/a&gt; that provides a blockchain network to test our application&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/decentralized-data-storage-using-ipfs-and-react-a-tutorial-with-examples/"&gt;IPFS that helps store files&lt;/a&gt; in a decentralized manner&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While these are optional, it is still recommended to install them.&lt;/p&gt;

&lt;p&gt;Installing Embark is pretty straightforward:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;embark&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To begin working with Embark, we must first run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;embark&lt;/span&gt; &lt;span class="nx"&gt;demo&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;embark_demo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This creates a scaffold application with all required folders to work with. With that in sight, you run the application to spin up the Ethereum and IPFS nodes. Remember, Embark watches for changes in your code so it redeploys:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;embark&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#the-embark-network"&gt;
  &lt;/a&gt;
  The Embark network
&lt;/h4&gt;

&lt;p&gt;Remember we must still connect to a blockchain network so we can test it through interacting; Embark can work with clients such as Geth or Parity.&lt;/p&gt;

&lt;p&gt;In the &lt;code&gt;config/blockchain.js&lt;/code&gt; file, you can configure the blockchain you want. The below code is a sample from Embark’s documentation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;client&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;geth&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;development&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="na"&gt;clientConfig&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;miningMode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dev&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;testnet&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://external-node.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;accounts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;mnemonic&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;12 word mnemonic&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#embarks-benefits"&gt;
  &lt;/a&gt;
  Embark’s benefits
&lt;/h4&gt;

&lt;p&gt;Embark has slightly more stars from the GitHub community than Hardhat, &lt;a href="https://github.com/embarklabs/embark"&gt;coming in at about 3.4k stars&lt;/a&gt;. It also comes with a UI dashboard that gives a survey of the processes Embark is working on for those interested in deploying to the web rather than a console.&lt;/p&gt;

&lt;p&gt;And, as stated previously, it’s a framework that helps build full-stack solutions, which other frameworks mentioned in this article cannot do.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#embark-disadvantages"&gt;
  &lt;/a&gt;
  Embark disadvantages
&lt;/h4&gt;

&lt;p&gt;From my observation when trying to run Embark, I ran into some errors while installing. After that, there were warnings on my terminal when I checked the currently installed version.&lt;/p&gt;

&lt;p&gt;Also, the project looks stale because there have been no contributions to it for 14 months at the time of writing this article.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#brownie"&gt;
  &lt;/a&gt;
  Brownie
&lt;/h3&gt;

&lt;p&gt;Brownie is a framework that builds applications for the EVM but is Python-based, meaning it supports the programming language Vyper, a Python smart contract language. Brownie also supports Solidity.&lt;/p&gt;

&lt;p&gt;Unlike other frameworks mentioned in this article, Brownie’s test language is Python using &lt;a href="https://github.com/HypothesisWorks/hypothesis/tree/master/hypothesis-python"&gt;hypothesis&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Overall, Brownie handles deployment, testing, and debugging. Deployment is easy when deploying to the local or testnet blockchain.&lt;/p&gt;

&lt;p&gt;Brownie also supports a mainnet fork, which takes a live snapshot of the current blockchain if you want to communicate with certain smart contracts that are not available on the local or testnet blockchain.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#brownie-installation"&gt;
  &lt;/a&gt;
  Brownie installation
&lt;/h4&gt;

&lt;p&gt;Installation can be done via &lt;code&gt;pipx&lt;/code&gt; or &lt;code&gt;pip&lt;/code&gt;, but &lt;code&gt;pipx&lt;/code&gt; is the recommended way by Brownie.&lt;/p&gt;

&lt;p&gt;Install &lt;code&gt;pipx&lt;/code&gt; if you don’t have it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;pipx&lt;/span&gt;
&lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;pipx&lt;/span&gt; &lt;span class="n"&gt;ensurepath&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, install Brownie:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;pipx&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;eth&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;brownie&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#the-brownie-network"&gt;
  &lt;/a&gt;
  The Brownie network
&lt;/h4&gt;

&lt;p&gt;Brownie offers development and live environments that allow testing. These environments can be configured on the terminal using a few commands.&lt;/p&gt;

&lt;p&gt;To view existing networks, use the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;brownie&lt;/span&gt; &lt;span class="nx"&gt;networks&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt;
&lt;span class="nx"&gt;Brownie&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;Python&lt;/span&gt; &lt;span class="nx"&gt;development&lt;/span&gt; &lt;span class="nx"&gt;framework&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;Ethereum&lt;/span&gt;

&lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;following&lt;/span&gt; &lt;span class="nx"&gt;networks&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;declared&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="nx"&gt;Ethereum&lt;/span&gt;
  &lt;span class="err"&gt;├─&lt;/span&gt;&lt;span class="nx"&gt;Mainnet&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Infura&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;mainnet&lt;/span&gt;
  &lt;span class="err"&gt;├─&lt;/span&gt;&lt;span class="nx"&gt;Ropsten&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Infura&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;ropsten&lt;/span&gt;
  &lt;span class="err"&gt;├─&lt;/span&gt;&lt;span class="nx"&gt;Rinkeby&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Infura&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;rinkeby&lt;/span&gt;
  &lt;span class="err"&gt;├─&lt;/span&gt;&lt;span class="nx"&gt;Goerli&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Infura&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;goerli&lt;/span&gt;
  &lt;span class="err"&gt;└─&lt;/span&gt;&lt;span class="nx"&gt;Kovan&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Infura&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;kovan&lt;/span&gt;

&lt;span class="nx"&gt;Ethereum&lt;/span&gt; &lt;span class="nx"&gt;Classic&lt;/span&gt;
  &lt;span class="err"&gt;├─&lt;/span&gt;&lt;span class="nx"&gt;Mainnet&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;etc&lt;/span&gt;
  &lt;span class="err"&gt;└─&lt;/span&gt;&lt;span class="nx"&gt;Kotti&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;kotti&lt;/span&gt;

&lt;span class="nx"&gt;Development&lt;/span&gt;
  &lt;span class="err"&gt;├─&lt;/span&gt;&lt;span class="nx"&gt;Ganache&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;CLI&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;development&lt;/span&gt;
  &lt;span class="err"&gt;└─&lt;/span&gt;&lt;span class="nx"&gt;Ganache&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;CLI&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Mainnet&lt;/span&gt; &lt;span class="nx"&gt;Fork&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;mainnet&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;fork&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To add a new network, add the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;brownie&lt;/span&gt; &lt;span class="nx"&gt;networks&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#brownie-benefits"&gt;
  &lt;/a&gt;
  Brownie benefits
&lt;/h4&gt;

&lt;p&gt;Brownie has a built-in console for project interaction, which other frameworks do not offer. For example, adding a network through the console lets you run a command to add a network quickly rather than writing it in your codebase.&lt;/p&gt;

&lt;p&gt;It is also superior to others since it fully supports Solidity and Vyper, which are two different smart contract languages.&lt;/p&gt;

&lt;p&gt;And, with its interactive mode when running tests, if a test fails, it stops and shows in the console, alerting the user.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#brownie-disadvantages"&gt;
  &lt;/a&gt;
  Brownie disadvantages
&lt;/h4&gt;

&lt;p&gt;Because Brownie is a Python-based framework, JavaScript devs will not be able to easily use the framework.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#openzeppelin"&gt;
  &lt;/a&gt;
  OpenZeppelin
&lt;/h3&gt;

&lt;p&gt;OpenZepplin is a toolkit with plugins that help build smart contracts faster. For example, it has &lt;a href="https://blog.logrocket.com/create-deploy-erc-20-token-ethereum-blockchain/"&gt;major standard tokens like ERC-20 and ERC-721&lt;/a&gt; implementations and more.&lt;/p&gt;

&lt;p&gt;To use any of the smart contracts in OpenZeppelin, you must import them into your own smart contract. Note that OpenZeppelin is actually distributed as an npm package, meaning you must install Node.js first.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#openzeppelin-installation"&gt;
  &lt;/a&gt;
  OpenZeppelin installation
&lt;/h4&gt;

&lt;p&gt;To install OpenZeppelin, use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;openzeppelin&lt;/span&gt;&lt;span class="sr"&gt;/cl&lt;/span&gt;&lt;span class="err"&gt;i
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To set up an OpenZeppelin project, use the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;openzeppelin&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With an example smart contract from OpenZeppelin’s documentation written below, we must compile the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// contracts/Counter.sol
pragma solidity ^0.5.0;

contract Counter {
    uint256 public value;

    function increase() public {
      value++;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To compile, run the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;oz&lt;/span&gt; &lt;span class="nx"&gt;compile&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use &lt;code&gt;openzeppelin compile&lt;/code&gt; or &lt;code&gt;oz compile&lt;/code&gt;, but &lt;code&gt;oz&lt;/code&gt; is just a short command to pick.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-openzeppelin-network"&gt;
  &lt;/a&gt;
  The OpenZeppelin network
&lt;/h4&gt;

&lt;p&gt;Deploying our smart contract is just as easy as compiling them; OpenZeppelin uses &lt;a href="https://blog.logrocket.com/develop-test-deploy-smart-contracts-ganache/"&gt;Ganache as a network for development&lt;/a&gt; where you can have a local blockchain. You should install Ganache if you do not have it yet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;ganache&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;cli&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To start a new process, run the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;ganache&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;cli&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;deterministic&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, deploy the smart contracts:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;oz&lt;/span&gt; &lt;span class="nx"&gt;deploy&lt;/span&gt;
&lt;span class="err"&gt;✓&lt;/span&gt; &lt;span class="nx"&gt;Compiled&lt;/span&gt; &lt;span class="nx"&gt;contracts&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;solc&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;e560f70d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;kind&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;deployment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;upgradeable&lt;/span&gt;
&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Pick&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;network&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;development&lt;/span&gt;
&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Pick&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;contract&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;instantiate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;
&lt;span class="err"&gt;✓&lt;/span&gt; &lt;span class="nx"&gt;Added&lt;/span&gt; &lt;span class="nx"&gt;contract&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;
&lt;span class="err"&gt;✓&lt;/span&gt; &lt;span class="nx"&gt;Contract&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt; &lt;span class="nx"&gt;deployed&lt;/span&gt;
&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Call&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;initialize&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;instance&lt;/span&gt; &lt;span class="nx"&gt;after&lt;/span&gt; &lt;span class="nx"&gt;creating&lt;/span&gt; &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;No&lt;/span&gt;
&lt;span class="err"&gt;✓&lt;/span&gt; &lt;span class="nx"&gt;Setting&lt;/span&gt; &lt;span class="nx"&gt;everything&lt;/span&gt; &lt;span class="nx"&gt;up&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt; &lt;span class="nx"&gt;contract&lt;/span&gt; &lt;span class="nx"&gt;instances&lt;/span&gt;
&lt;span class="err"&gt;✓&lt;/span&gt; &lt;span class="nx"&gt;Instance&lt;/span&gt; &lt;span class="nx"&gt;created&lt;/span&gt; &lt;span class="nx"&gt;at&lt;/span&gt; &lt;span class="mh"&gt;0xCfEB869F69431e42cdB54A4F4f105C19C080A601&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#openzeppelin-benefits"&gt;
  &lt;/a&gt;
  OpenZeppelin benefits
&lt;/h4&gt;

&lt;p&gt;OpenZeppelin has many implemented functionalities, like creating an ERC-20. Because this is already available within OpenZeppelin, you do not need to reinvent the wheel, saving time when developing.&lt;/p&gt;

&lt;p&gt;It also has thorough documentation, helping you understand what OpenZeppelin offers. Most of its contract functionalities are upgradeable, meaning you can modify the plugins yourself.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#openzeppelin-disadvantages"&gt;
  &lt;/a&gt;
  OpenZeppelin disadvantages
&lt;/h4&gt;

&lt;p&gt;OpenZeppelin provides upgradeable contracts, but the downside is that there's an admin role to handle implementation, which can impose security risks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-choose-the-right-framework-for-your-dapp-project"&gt;
  &lt;/a&gt;
  How to choose the right framework for your DApp project
&lt;/h2&gt;

&lt;p&gt;The best way to choose the right framework for a project is to understand what you want to build and what necessary toolkit you need. Perhaps you want something that is Python-based, which definitely points to the Brownie framework as your only option.&lt;/p&gt;

&lt;p&gt;Another aspect to consider when choosing a framework is understanding its community and support for that selected framework. What if there is a major bug? Could you and your team fix it? Or is the community strong enough to help fix it?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;With the recent rise in the development of DApps, more tools have spun up to help build applications faster. The most common and most used are Hardhat and Truffle, but this is not limited to all developers.&lt;/p&gt;

&lt;p&gt;If you have a project in mind, skim through each framework’s documentation to see which suits you best. Note that these frameworks are constantly undergoing maintenance and might need your support as well since they are open source in Web3.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#logrocket-full-visibility-into-your-web-apps"&gt;
  &lt;/a&gt;
  &lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt;: Full visibility into your web apps
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8FGBNR-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2017/03/1d0cd-1s_rmyo6nbrasp-xtvbaxfg.png" alt="LogRocket Dashboard Free Trial Banner" width="880" height="496"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt; is a frontend application monitoring solution that lets you replay problems as if they happened in your own browser. Instead of guessing why errors happen, or asking users for screenshots and log dumps, LogRocket lets you replay the session to quickly understand what went wrong. It works perfectly with any app, regardless of framework, and has plugins to log additional context from Redux, Vuex, and @ngrx/store.&lt;/p&gt;

&lt;p&gt;In addition to logging Redux actions and state, LogRocket records console logs, JavaScript errors, stacktraces, network requests/responses with headers + bodies, browser metadata, and custom logs. It also instruments the DOM to record the HTML and CSS on the page, recreating pixel-perfect videos of even the most complex single-page apps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;Try it for free&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
      <category>programming</category>
      <category>discuss</category>
    </item>
    <item>
      <title>How To Set Up Continuous Integration And Deployment With CircleCI</title>
      <author>Mariam Adedeji</author>
      <pubDate>Mon, 29 Nov 2021 19:15:00 +0000</pubDate>
      <link>https://dev.to/mariehposa/how-to-set-up-continuous-integration-and-deployment-with-circleci-1pe9</link>
      <guid>https://dev.to/mariehposa/how-to-set-up-continuous-integration-and-deployment-with-circleci-1pe9</guid>
      <description>&lt;p&gt;In this tutorial, I will be demonstrating how to set up continuous integration and continuous deployment with CircleCI. At the end of this article, you would have deployed a Node application to Heroku and have subsequent builds automatically deployed on successful testing via CircleCI.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-circleci-and-why-should-you-use-it"&gt;
  &lt;/a&gt;
  What is CircleCI and why should you use it?
&lt;/h2&gt;

&lt;p&gt;CircleCI is a platform for continuous integration and continuous deployment which is used by developers to automate testing, building and deployment of applications. It is free and has a strong community, so finding support is not a problem.  CircleCI is also easily configured and I hope to prove this with this article, so please, read on ☺️.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;If you’d like to follow along with this tutorial, please make sure the following requirements are met:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A running Node app with its tests passing. If you don’t have one, you can fork this &lt;a href="https://github.com/mariehposa/circleci-test"&gt;project&lt;/a&gt; and follow its documentation to set it up.&lt;/li&gt;
&lt;li&gt;A CircleCI account. You can sign up &lt;a href="https://circleci.com/signup"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A Heroku app. You can sign up &lt;a href="https://signup.heroku.com"&gt;here&lt;/a&gt; for the account and follow this &lt;a href="https://trailhead.salesforce.com/en/content/learn/projects/develop-heroku-applications/create-a-heroku-app"&gt;tutorial&lt;/a&gt; to create a Heroku app.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Now, let’s get started!&lt;/p&gt;

&lt;p&gt;The first step will be to log in to your CircleCI account. Successful login should display your account dashboard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8U5k87GX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/118406392-ceaef980-b673-11eb-8fef-d10b650934fb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8U5k87GX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/118406392-ceaef980-b673-11eb-8fef-d10b650934fb.png" alt="image" width="880" height="382"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before we do any actual work, let’s connect the &lt;strong&gt;Node app&lt;/strong&gt; to CircleCI. &lt;/p&gt;

&lt;p&gt;On the left sidebar, click on &lt;strong&gt;Projects&lt;/strong&gt;, then click on the &lt;strong&gt;Setup project&lt;/strong&gt; button for the Node app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NRtUUFs9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/118406463-1d5c9380-b674-11eb-82c2-b5f110283e3b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NRtUUFs9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/118406463-1d5c9380-b674-11eb-82c2-b5f110283e3b.png" alt="image" width="880" height="324"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select &lt;strong&gt;Write your own using our starter config.yml template&lt;/strong&gt; for the config.yml file and click on &lt;strong&gt;Let's Go&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Then select &lt;strong&gt;Node&lt;/strong&gt; as a sample config for the project, and click on &lt;strong&gt;Commit and Run&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AmI3HZMK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/118406554-3feeac80-b674-11eb-9030-0d74179874c0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AmI3HZMK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/118406554-3feeac80-b674-11eb-9030-0d74179874c0.png" alt="image" width="880" height="446"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Go to the Node app GitHub repo and merge the pull request from CircleCI.&lt;/p&gt;

&lt;p&gt;Now we need to add &lt;strong&gt;HEROKU_APP_NAME&lt;/strong&gt; and &lt;strong&gt;HEROKU_API_KEY&lt;/strong&gt; to the project environment variables so that CircleCI can connect to the Heroku app. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HEROKU_APP_NAME&lt;/strong&gt; is the name of your Heroku app. I named mine &lt;strong&gt;circleci-test-ma&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HEROKU_API_KEY&lt;/strong&gt; is your Heroku account API key.&lt;/p&gt;

&lt;p&gt;To get your &lt;strong&gt;HEROKU_API_KEY&lt;/strong&gt;, go to your &lt;strong&gt;Heroku Dashboard&lt;/strong&gt;, click on &lt;strong&gt;Account Settings&lt;/strong&gt;, then scroll down to the &lt;strong&gt;API Key section&lt;/strong&gt; and click on &lt;strong&gt;Reveal&lt;/strong&gt; to copy your &lt;strong&gt;API key&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iWKel08b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/118405857-a8885a00-b671-11eb-99b3-a253d3747c5e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iWKel08b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/118405857-a8885a00-b671-11eb-99b3-a253d3747c5e.png" alt="image" width="880" height="382"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, navigate back to the CircleCI dashboard. Click on the &lt;strong&gt;Project Settings&lt;/strong&gt; for the Node app, and then click on &lt;strong&gt;Environment Variables&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;On the &lt;strong&gt;Environment Variables&lt;/strong&gt; page, create two variables named &lt;strong&gt;HEROKU_APP_NAME&lt;/strong&gt; and &lt;strong&gt;HEROKU_API_KEY&lt;/strong&gt; and give them their respective values as gotten from your Heroku dashboard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bmYzArTw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/118406301-62cc9100-b673-11eb-9ab2-a4e253a282c9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bmYzArTw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/118406301-62cc9100-b673-11eb-9ab2-a4e253a282c9.png" alt="image" width="880" height="446"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Go back to the Node app on your editor. Remove the default configuration inside the &lt;strong&gt;config.yml&lt;/strong&gt; file(config from CircleCI) and replace it with the following config.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version: 2.1
orbs:
  node: circleci/node@1.1.6
  heroku: circleci/heroku@0.0.10
workflows:
  heroku_deploy:
    jobs:
      - build
      - heroku/deploy-via-git:  
          requires:
            - build
          filters:
            branches:
              only: main
jobs:
  build:
    docker:
      - image: circleci/node:10.16.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Run test
          command: npm test
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s take a minute to break down this config file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version: 2.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;version 2.1&lt;/code&gt; is used to have access to &lt;code&gt;orbs&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;orbs:
  node: circleci/node@1.1.6
  heroku: circleci/heroku@0.0.10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;orbs&lt;/code&gt; enable us to integrate with software just with a single line of code. For example, we made use of JavaScript, that is why we use an orb that points to that with &lt;code&gt;circleci/node@1.1.6&lt;/code&gt;. The orb &lt;code&gt;circleci/heroku@0.0.10&lt;/code&gt; points to Heroku since we’re also using that for deployment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;workflows:
  heroku_deploy:
    jobs:
      - build
      - heroku/deploy-via-git:  
          requires:
            - build
          filters:
            branches:
              only: main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;workflow&lt;/code&gt; specifies how &lt;code&gt;jobs&lt;/code&gt; should be run. Here, we made the build run before deploying to Heroku. &lt;code&gt;heroku/deploy-via-git&lt;/code&gt; is used to deploy changes from GitHub to Heroku. &lt;code&gt;require&lt;/code&gt; is used inside &lt;code&gt;heroku/deploy-via-git&lt;/code&gt; to delay deployment until the build is done. The &lt;code&gt;filters&lt;/code&gt; block is used to specify the main branch for deployment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;jobs:
  build:
    docker:
      - image: circleci/node:10.16.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Run test
          command: npm test
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;jobs&lt;/code&gt; are typically a series of steps. Here we use &lt;code&gt;restore_cache&lt;/code&gt; to restore the dependencies that were installed in the previous builds. Then we run &lt;code&gt;npm install&lt;/code&gt; to install new dependencies and cache them too to prevent having to re-install. We then run the &lt;code&gt;npm test&lt;/code&gt; command to run the unit tests.&lt;/p&gt;

&lt;p&gt;Commit the changes and push to GitHub. You can check the &lt;strong&gt;build&lt;/strong&gt; on CircleCI, it should return &lt;strong&gt;Success&lt;/strong&gt;, depending on whether your Node app passes all tests (you should be fine if you simply clone the repo and made no changes).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IteF7LsZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/118406254-226d1300-b673-11eb-9aa0-5afb8ae938cb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IteF7LsZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/118406254-226d1300-b673-11eb-9aa0-5afb8ae938cb.png" alt="image" width="880" height="371"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also check out the deployed version of the Node app on your Heroku dashboard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DhHvRoZw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/118406043-978c1880-b672-11eb-95a9-2e38ad1effc8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DhHvRoZw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/118406043-978c1880-b672-11eb-95a9-2e38ad1effc8.png" alt="circleci" width="802" height="378"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That’s it! At this point, any changes you make to the project should get deployed as soon as they are pushed to the branch we specified in the &lt;strong&gt;config file&lt;/strong&gt;. It’s always advisable to do sanity checks, so make sure to push a small change and see it deployed!&lt;/p&gt;

&lt;p&gt;If you found this article helpful, please leave a heart or a comment. If you have any questions, please let me know in the comment section.&lt;/p&gt;

&lt;p&gt;Also, don’t forget to follow me for more articles. Thank you.&lt;/p&gt;

</description>
      <category>circleci</category>
      <category>node</category>
      <category>heroku</category>
      <category>devops</category>
    </item>
    <item>
      <title>Notification with Audio in JavaScript</title>
      <author>Walter Nascimento</author>
      <pubDate>Mon, 29 Nov 2021 18:41:39 +0000</pubDate>
      <link>https://dev.to/walternascimentobarroso/notification-with-audio-in-javascript-4iao</link>
      <guid>https://dev.to/walternascimentobarroso/notification-with-audio-in-javascript-4iao</guid>
      <description>&lt;p&gt;&lt;a href="https://medium.com/walternascimentobarroso-pt/notifica%C3%A7%C3%A3o-com-audio-no-javascript-327791111e70"&gt;[Clique aqui para ler em português]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We always need a feedback to our user about some information, whether it’s a finalized registration or something removed, and today one of the best ways to give feedback to our users is with notification, so let’s create a notification using javascript and stay more professional we will add an audio whenever the notification is called.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h2&gt;

&lt;p&gt;First let’s create the interface, we’ll do something simple, using just HTML.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Click here&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To display our notification, let’s just create one button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;buttonEl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Message&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;icon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://via.placeholder.com/50x50&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;song&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;notification.mp3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;buttonEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;notifyMe&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;notifyMe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Notification&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This browser does not support Desktop notifications&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;permission&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;granted&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;callNotify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;permission&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;denied&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestPermission&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;permission&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;permission&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;granted&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;callNotify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callNotify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;icone&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;icone&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Audio&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;song&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;play&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our javascript code we have our constants that have the message title, the message an icon and an audio file.&lt;/p&gt;

&lt;p&gt;For the notification, a function called &lt;strong&gt;notifyMe&lt;/strong&gt; was created that will be executed whenever we click on the button.&lt;/p&gt;

&lt;p&gt;In the &lt;strong&gt;notifyMe&lt;/strong&gt; function, we first check if the browser supports notification, then we check if the user has already allowed to be notified, and if not, then we check if he hasn’t denied it either, and then the notification api itself makes the request to the user checking whether or not he authorizes the sending of notification.&lt;/p&gt;

&lt;p&gt;Finally, we have the &lt;strong&gt;callNotify&lt;/strong&gt; function in which the notification is displayed with the title message and icon that we defined, and we still use the browser’s own audio api so that whenever this function is called, play in the audio file.&lt;/p&gt;

&lt;p&gt;ready simple like that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;See below for the complete working project.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/WalterNascimento/embed/KKmVXQd?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;if you can't see it &lt;a href="https://codepen.io/WalterNascimento/pen/KKmVXQd"&gt;click here&lt;/a&gt; and see the final result&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#youtube"&gt;
  &lt;/a&gt;
  Youtube
&lt;/h2&gt;

&lt;p&gt;If you prefer to watch it, see the development on youtube.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Lig_iQCeyS4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h2&gt;

&lt;p&gt;If you have any questions, complaints or tips, you can leave them here in the comments. I will be happy to answer!&lt;/p&gt;

&lt;p&gt;😊😊 See you later! 😊😊&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#support-me"&gt;
  &lt;/a&gt;
  Support Me
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCXm0xRtDRrdnvkW24WmkBqA"&gt;Youtube - WalterNascimentoBarroso&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/walternascimentobarroso"&gt;Github - WalterNascimentoBarroso&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codepen.io"&gt;Codepen - WalterNascimentoBarroso&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>javascript</category>
      <category>notification</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Wasabi, Storj, Backblaze et al, are promising 80%+ savings compared to Amazon S3... What's the catch?</title>
      <author>Cloud BS</author>
      <pubDate>Mon, 29 Nov 2021 18:38:21 +0000</pubDate>
      <link>https://dev.to/cloud_bs/wasabi-storj-backblaze-et-al-are-promising-80-savings-compared-to-amazon-s3-whats-the-catch-4h62</link>
      <guid>https://dev.to/cloud_bs/wasabi-storj-backblaze-et-al-are-promising-80-savings-compared-to-amazon-s3-whats-the-catch-4h62</guid>
      <description>&lt;p&gt;Vendors are Promising 80%+ Savings on Object Storage Compared To Amazon S3.&lt;/p&gt;

&lt;p&gt;We're asking, what's the catch?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our Methods&lt;/strong&gt;&lt;br&gt;
To build this report, we:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mapped every object storage feature in a massive matrix&lt;/li&gt;
&lt;li&gt;Tested and benchmarked tools&lt;/li&gt;
&lt;li&gt;Interviewed CTOs and engineering managers&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Don’t ask me why, but I took off my adblock the other day. I don’t know how they do it, but Wasabi took up 8 out of 16 display ad slots on the page.&lt;/p&gt;

&lt;p&gt;They were adamant, &lt;em&gt;“we’re 1/5 the price of Amazon S3.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0YBjvC97--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0ji4xb7hsji7x9zq53u.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0YBjvC97--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0ji4xb7hsji7x9zq53u.gif" alt="Ads for Wasabi" width="700" height="306"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While I’m probably on some retargeting list, the point remains:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Object storage providers are hungry to take Amazon S3’s market share.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Our take is that they will win against Amazon S3 in many use cases. Watch out, though! Unless you know what you’re getting into, you’ll get burned 🔥.&lt;/p&gt;

&lt;p&gt;The specialized storage providers we're focusing on are Wasabi, Backblaze B2 and Storj DCS. However, these points will apply to Digital Ocean Spaces, Linode Object Storage and Vultr Object Storage as well.&lt;/p&gt;

&lt;p&gt;Here’s what we’ll tell you:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The “gotcha” that every low-cost provider has 

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Integration&lt;/strong&gt;: How robust their integrations are &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Interoperability&lt;/strong&gt;: How fully-featured their S3 API is&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Pricing&lt;/strong&gt;: How they still might manage to bill you obscene amounts&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Performance&lt;/strong&gt;: Where they suck in terms of performance&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Management&lt;/strong&gt;: What basic management features are they missing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Gotchas of Wasabi and Backblaze B2&lt;/li&gt;
&lt;li&gt;When Wasabi can kick you off their platform&lt;/li&gt;
&lt;li&gt;The reliability risks of Backblaze B2&lt;/li&gt;
&lt;li&gt;Gotchas of Storj DCS&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#gotchas-of-every-single-lowcost-object-storage-provider"&gt;
  &lt;/a&gt;
  Gotchas of Every Single Low-Cost Object Storage Provider
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AlJBiTwD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfrqydpcw8c81wiikon4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AlJBiTwD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfrqydpcw8c81wiikon4.jpg" alt="Two men arguing" width="576" height="576"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#integrations-or-lack-thereof"&gt;
  &lt;/a&gt;
  Integrations (or lack thereof)
&lt;/h3&gt;

&lt;p&gt;Integration with other services is the most significant advantage of the big cloud storage providers like AWS, Azure, or Google Cloud Platform.&lt;/p&gt;

&lt;p&gt;Are you doing anything other than storing and serving files? Are you analyzing your unstructured data with Amazon Athena or Google BigQuery? Low-cost providers might end up being &lt;em&gt;more expensive&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;To use a non-native storage service, you’ll have to pay for the additional egress and engineering time it takes to integrate.&lt;/p&gt;

&lt;p&gt;In some cases, saving on the total cost of storage makes it worth it. In others, you’ll end up losing money.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#an-s3-compatible-api"&gt;
  &lt;/a&gt;
  An S3 “Compatible” API
&lt;/h3&gt;

&lt;p&gt;Want pre-signed URLs for your customers to upload straight to your storage safely? Unfortunately, you’re not in luck with Storj DCS, Wasabi, or Backblaze B2. And generally, you will always have to rewrite some stuff to make things work, no matter how “100%” compatible the vendor’s S3 API is.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hQTnhYSm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mv67c4bb56fl2higs3ge.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hQTnhYSm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mv67c4bb56fl2higs3ge.jpg" alt="meme depicting bart simpson hitting Homer simpson with a chair. The text on Homer says 'Thinking you don't need to update your code', thinking you don't need to update your code', the text on Bart says 'An S3 Compatible API'" width="880" height="595"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For example, looking at one specific aspect of the S3 API, Amazon S3 has plenty of settings on the S3 Multi-part Upload configuration that we find are rarely consistent with anyone else’s implementation of the S3 API.&lt;/p&gt;

&lt;p&gt;To be fair, most vendors have done a decent job implementing the core components of the S3 API, but it's imperative to know if they cover what you need that isn’t core. Several standard implementations of the S3 API have significant differences between them in compliance with the S3 standard. For example, some vendors put up endpoints that can take S3-like requests and convert them to native requests for their platform. Others don’t have a specialized endpoint, so they try to make their native endpoint look as much as possible, like Amazon S3’s API.&lt;/p&gt;

&lt;p&gt;Generally, the most significant differences between Amazon’s native API and other implementations revolve around concurrency and data transfer. Several specialized services related to S3 would be hard to run without the AWS backbone (i.e., where you pull from or how you transit data). For example, S3 Transfer Acceleration won’t be compatible with another provider because AWS uses proprietary algorithms to reroute data rapidly within AWS.&lt;/p&gt;

&lt;p&gt;If an engineer enabled accelerated code on your storage and then has to swap that out, then it’s not codeless migration to any one of these specialized providers, which in turn impacts your TCO. If you’re lucky in this case, your engineers have a habit of wrapping code to make it agnostic.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h3&gt;

&lt;p&gt;There’s a bucket of broad-based but lower-cost providers that mete out at about 50-90% the cost of Amazon S3 ($21-23/TB/mo) for standard storage. These vendors are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cloudflare R2 ($15/TB/mo)&lt;/li&gt;
&lt;li&gt;Digital Ocean Spaces ($20/TB/mo)&lt;/li&gt;
&lt;li&gt;Vultr Object Storage ($20/TB/mo)&lt;/li&gt;
&lt;li&gt;Linode Object Storage ($20/TB/mo)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On the other hand, the specialized (i.e., storage-only) providers are much much cheaper, sometimes at under 30% of the cost of Amazon S3 for standard storage, like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Backblaze B2 ($5/TB/mo)&lt;/li&gt;
&lt;li&gt;Storj DCS ($4/TB/mo)&lt;/li&gt;
&lt;li&gt;Wasabi ($5.99/TB/mo)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The specialized providers tend to have better data transfer fees. In addition, like Digital Ocean, Cloudflare R2, and Linode, some package together data transfer with standard storage in their pricing or offer it for free.&lt;/p&gt;

&lt;p&gt;While the pricing of the storage-only providers is attractive, they come with “gotchas” of their own:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--98yBUfrg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fn8pgjautigr4cz1uscu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--98yBUfrg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fn8pgjautigr4cz1uscu.jpg" alt="meme of two men arguing" width="779" height="463"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Backblaze B2 data needs to be replicated and paid for twice over to meet data redundancy requirements that some projects need.&lt;/li&gt;
&lt;li&gt;Storj charges extra “Per Segment” fees that add up quickly if you’re storing lots of small objects.&lt;/li&gt;
&lt;li&gt;Wasabi charges for three months worth of object retention, including overwrites. If you upload a file and replace it soon after, you’re still paying for both objects for the entire three months.&lt;/li&gt;
&lt;li&gt;Wasabi has a single-tier pricing structure for object storage yet does not offer a product directly comparable to Amazon S3’s standard storage tier in terms of accessibility.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#performance"&gt;
  &lt;/a&gt;
  Performance
&lt;/h3&gt;

&lt;p&gt;Amazon S3 and storage solutions provided by the broad-based Big 3 providers are the go-to choice for most enterprise use cases because of the general low latency you can achieve. Generally, you can expect lower latency if your compute instances are in the same data center or on the same backbone as your object storage service.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jsMZ1LgR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2hlt1jksusddd51znds.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jsMZ1LgR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2hlt1jksusddd51znds.jpg" alt="Iceberg image with text saying 'What developer think go into benchmarks' above the iceberg. Below the iceberg states 'What goes into a good benchmark'" width="880" height="612"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#management"&gt;
  &lt;/a&gt;
  Management
&lt;/h3&gt;

&lt;p&gt;Need to meet a compliance requirement, like HIPAA? Or need to meet standard requirements for access management (i.e., IAM)? Unfortunately, several low-cost object storage providers don’t score well in terms of meeting compliance requirements. In contrast, others lack the management features you and/or your compliance and security officers are undoubtedly used to, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Robust Identity and Access Management (IAM)&lt;/li&gt;
&lt;li&gt;Versioning&lt;/li&gt;
&lt;li&gt;Tagging of resources&lt;/li&gt;
&lt;li&gt;Life Cycle Management (for buckets)&lt;/li&gt;
&lt;li&gt;Detailed Logging&lt;/li&gt;
&lt;li&gt;Detailed Costing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition, some of these low-cost providers don’t have some of the features you might not think you need now but could come in very handy later:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Google Cloud Storage supports 3rd party billing to share the costs of accessing data with the organizations or users that access your data.&lt;/li&gt;
&lt;li&gt;Amazon S3 has a robust (and largely unmatched) storage analytics suite called S3 Storage Lens to get visibility into your security profile and opportunities to increase efficiency.&lt;/li&gt;
&lt;li&gt;Azure Blob Storage has a point-in-time restore feature that can be a life-saver if data becomes corrupted.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#gotchas-specific-to-wasabi-and-backblaze-b2"&gt;
  &lt;/a&gt;
  Gotchas Specific To Wasabi and Backblaze B2
&lt;/h2&gt;

&lt;p&gt;The “gotchas” shared by both Wasabi and Backblaze B2 fall into four buckets:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Fewer regions&lt;/strong&gt;, which can impact data geo-redundancy&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fewer features&lt;/strong&gt;, like eventing, which can impact development time and integration with other cloud services&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;One storage class&lt;/strong&gt; (or two if you count Reserved Capacity Storage), which provides simplicity at the cost of flexibility&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;[Note] Not necessarily a “gotcha,” but vendors like Backblaze don’t always meet the specific compliance requirements of some industries.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fewer-regions"&gt;
  &lt;/a&gt;
  Fewer regions
&lt;/h3&gt;

&lt;p&gt;The Big 3 has far more regions and zones to replicate your data across. More than one has tiers that will replicate your data inter-zonally and inter-regionally several times over by default. While smaller vendors can replicate your data as well, they generally do so within a single zone (i.e., a single data center).&lt;/p&gt;

&lt;p&gt;If your business case requires your data to survive a catastrophic event that affects the single data center your data is stored in, Backblaze B2 and Wasabi might not be a good fit. Only sometimes do they have multiple zones within a region.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gtqVMPzV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vzh698iguzfnx9y1ie1l.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gtqVMPzV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vzh698iguzfnx9y1ie1l.jpg" alt="Simpson meme stating 'When finance asks you to lower the cloud bill but compliance asks you for multi-AZ availability. A simpsons character is below saying '(chuckles) I'm in danger'" width="880" height="545"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fewer-features"&gt;
  &lt;/a&gt;
  Fewer features
&lt;/h3&gt;

&lt;p&gt;On object storage, Backblaze and Wasabi already have fewer features than the Big 3 storage alternatives. However, they &lt;strong&gt;are also single-purpose vendors&lt;/strong&gt;, which can add development complexity to your team when building full-fledged applications that span many kinds of cloud services.&lt;/p&gt;

&lt;p&gt;For example, let’s say you had to connect your storage service seamlessly to your data science or ML pipeline - is that going to work? &lt;strong&gt;The worst aspect of the feature limitations we encountered was the lack of any serverless or eventing features&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DhuFReeu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ldd7vs9vpjqyy87i7n4u.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DhuFReeu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ldd7vs9vpjqyy87i7n4u.jpg" alt="Spongebob, titled as a 'Specialized Provider' looking at a piece of paper saying 'Any event about your data', and then burning it." width="624" height="728"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#one-storage-class"&gt;
  &lt;/a&gt;
  One storage class
&lt;/h3&gt;

&lt;p&gt;While it’s a feature of Wasabi and Backblaze B2 to have simple and/or single-tier pricing, this can also be a bug depending on the use case. Here are some examples:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If you have something that you need to store (e.g., for compliance reasons), but you will never access it, AWS’s Glacier Deep will be a lot cheaper than Backblaze B2 or Wasabi.&lt;/li&gt;
&lt;li&gt;If you need faster or accelerated access to your data, you can pay for that on Amazon, but you can’t with Backblaze B2 or Wasabi.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Suppose money is no object and your team is willing to deal with a bit of complexity. In that case, Amazon S3, Google Cloud Storage, and Azure Blob Storage are usually better choices because of their flexibility.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-wasabi-can-kick-you-off-their-platform"&gt;
  &lt;/a&gt;
  When Wasabi Can Kick You Off Their Platform
&lt;/h2&gt;

&lt;p&gt;Wasabi is an excellent choice for "hot archive” storage wherein you:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Have to store a lot of files,&lt;/li&gt;
&lt;li&gt;Rarely access files,&lt;/li&gt;
&lt;li&gt;Rarely change or delete files,&lt;/li&gt;
&lt;li&gt;Need fast access (the “hot” part) to those files from time to time (but not always).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;On the surface, Wasabi looks appealing with a simple pricing structure ($5.99/TB/mo) that comes with free egress and free operations. How can Wasabi afford this, you ask? Well, their business model relies on their user-base keeping their data stored (and unchanged) for some time and not consuming more than their fair share of resources, which they regulate via a handful of fair use policies.&lt;/p&gt;

&lt;p&gt;This kind of setup makes Wasabi nearly perfect for use cases like storing body-cam footage. Body-cam footage tends to create lots of large video files. So, you’re going to need quick access to some files. And, you’re rarely (if ever) changing or deleting the files.&lt;/p&gt;

&lt;p&gt;Now, if you’re off from where they want you on any of these usage dimensions, Wasabi will make you pay or show you the door, as they "reserve the right to limit or suspend your service" based on your usage patterns.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wfnBpTkT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqhu3kyecwri6x10j1oz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wfnBpTkT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqhu3kyecwri6x10j1oz.jpg" alt="Cat in the hat about to hit with a baseball bat. Text of threatening baseball bat holder says 'Wasabi seeing you egress more per month than you store.' Text from person being threatened says 'You trying to save some money'" width="880" height="530"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Are you transferring lots of data relative to your storage volume?&lt;/strong&gt; You have to keep your monthly egress lower than your volume of active storage (e.g., if you have 1 TB of storage on your account, Wasabi only wants you to egress/transfer/download 1 TB a month).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Are you deleting or replacing files?&lt;/strong&gt; Each uploaded object has a minimum storage period of 90 days. You will pay for 90 days of storage, no matter what. This policy even applies to "overwritten" files.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Example: Let's say you upload headshot.jpg, make a change, and upload headshot.jpg again. Wasabi will charge you for both files for a minimum of 90 days.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Are you running lots of API operations relative to your storage volume?&lt;/strong&gt; Then, Wasabi “dynamically controls” the allocation you have to run various operations based on your storage volume.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bottom Line:&lt;/strong&gt; If you need hot archival storage, Wasabi is an excellent platform. If you're not a good fit, as shown above, Wasabi can cause many headaches.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-reliability-risks-of-backblaze-b2"&gt;
  &lt;/a&gt;
  The Reliability Risks of Backblaze B2
&lt;/h2&gt;

&lt;p&gt;The industry standard set by Amazon S3 is multi-AZ (availability zone) redundancy. After saving your files, they get backed up across multiple physical data centers. This is not the case with Backblaze B2.&lt;/p&gt;

&lt;p&gt;When you use a Big 3 provider, like Azure Blob Storage or Amazon S3, you’re often paying for reliable storage that a vast swath of enterprises with low-risk tolerance can bet the farm on. Azure has a wide range of options for replication (which has a considerable impact on the reliability of your storage), including LRS (Low Redundancy Storage) if you want to save some cost. Amazon S3, by default, replicates that across three separate zones. To get the equivalent on Backblaze B2, well… you need to pay for it as their bargain pricing is for a single zone only. If, like many other organizations, you need multi-AZ redundancy, it costs about twice as much.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gotchas-of-storj-dcs"&gt;
  &lt;/a&gt;
  Gotchas of Storj DCS
&lt;/h2&gt;

&lt;p&gt;Storj DCS is the least expensive option listed among all cloud object storage providers. It also has, theoretically, the highest level of data redundancy because they have a tokenized economy that pays a decentralized network of node operators to store data for you all across the world. And, despite hosting theoretically everywhere with a bunch of parties unknown to you, your data is impossible to read by anyone other than you — it’s default end-to-end encryption.&lt;/p&gt;

&lt;p&gt;In short, here's how it works. Storj:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Encrypts the objects&lt;/li&gt;
&lt;li&gt;Splits them into smaller pieces&lt;/li&gt;
&lt;li&gt;Globally distributes to their node operators&lt;/li&gt;
&lt;li&gt;Retrieves them when you're ready&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Their tech solves issues like "what if a node goes offline" and more, but we're left with two main problems possibly inherent to the technology.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#storj-dcs-does-not-have-a-data-redundancy-sla"&gt;
  &lt;/a&gt;
  Storj DCS does not have a data redundancy SLA
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;There is no data redundancy SLA for Storj DCS.&lt;/strong&gt; So how do you explain that to your CTO/CIO/VP/SRE? To their credit, Storj DCS has enterprise-grade SLAs for most other aspects of the storage service, and it stands to reason that data redundancy should be pretty good thanks to its sprawling global network. However, for some companies, a data redundancy SLA may be a challenging requirement to work around.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q2W05W8K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jy8t2woajb5vu1z9phn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q2W05W8K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jy8t2woajb5vu1z9phn.jpg" alt="Woman explaining to mother meme. Woman is trying to explain and says: 'Storj explaining they don't need a durability SLA because they split your files into 80 pieces and only need 29 to retrieve the object.' Mom, titled CTO, looks back confused." width="700" height="682"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#storj-dcs-will-be-costly-if-you-have-lots-of-small-files"&gt;
  &lt;/a&gt;
  Storj DCS will be costly if you have lots of small files
&lt;/h3&gt;

&lt;p&gt;Unfortunately, Storj DCS’s network and economics do not work if you store lots of small files. (IoT use cases with billions of 4K files, we’re looking at you!) Storj DCS’s smallest billing increment for a file is 64MB, and you’ll be charged $0.0000088 for each file under that threshold or each incremental 64MB part of a larger file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--65Ao6HHR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7m5f2v60elpvo34hukxx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--65Ao6HHR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7m5f2v60elpvo34hukxx.jpg" alt="Homer Simpson, posing as Storj. The front of his beautiful body says '4TB', the back of his body reveals he only achieved his beauty through pulling back his fat. This back fat is titled 'Per-Segment Fees'" width="680" height="765"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloudflare-r2-is-coming"&gt;
  &lt;/a&gt;
  Cloudflare R2 is Coming
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MeEB5tWO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0v2aer0ns1pr7pung03.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MeEB5tWO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0v2aer0ns1pr7pung03.jpg" alt="Jim Halbert from the office, titled 'Cloudflare R2' looking ominously through the blinds." width="800" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cloudflare R2 has caught the eyes of the industry by claiming they’ll offer free egress.&lt;/p&gt;

&lt;p&gt;The Cloud BS team has already been talking to the Cloudflare team about running tests as soon as possible. If you want to get that content before it’s public, &lt;a href="https://cloudbs.dev/"&gt;sign up for our newsletter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>webdev</category>
      <category>programming</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Pitch Your Idea for the Secret Ingredient Challenge at AWS re:Invent!</title>
      <author>Jenna Pederson</author>
      <pubDate>Mon, 29 Nov 2021 18:30:32 +0000</pubDate>
      <link>https://dev.to/aws/pitch-your-idea-for-the-secret-ingredient-challenge-at-aws-reinvent-13be</link>
      <guid>https://dev.to/aws/pitch-your-idea-for-the-secret-ingredient-challenge-at-aws-reinvent-13be</guid>
      <description>&lt;p&gt;🏆 &lt;em&gt;Enter today's challenge &lt;a href="https://eventbox.dev/survey/QLJNW88"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The AWS on Air show is challenging you to pitch your ideas for the Secret Ingredient Challenge at &lt;a href="https://reinvent.awsevents.com/"&gt;AWS re:Invent&lt;/a&gt; this week!&lt;/p&gt;

&lt;p&gt;This challenge was inspired by cooking shows where you're given a set of ingredients and challenged to make something tasty and creative. Sometimes those ingredients are harmonious, and sometimes they're not. Often during the AWS on Air show, hosts and guests will talk about creative ways they would use new services that were launched and what business problem they could solve.&lt;/p&gt;

&lt;p&gt;And so the Secret Ingredient Challenge was born! Now, we'd love to hear your fun and creative ideas for what you'd build with AWS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-things-first-what-prizes-could-i-win"&gt;
  &lt;/a&gt;
  First things first. What prizes could I win?!
&lt;/h2&gt;

&lt;p&gt;There will be one prize winner for each challenge:&lt;/p&gt;

&lt;p&gt;Challenge 1: Apple AirPods Pro (valued at $249 USD) and $150 in AWS&lt;br&gt;
Credits&lt;br&gt;
Challenge 2: Apple iPad Pro (valued at $1,199 USD)&lt;br&gt;
Challenge 3: Nvidia GeForce RTX 3080 (valued at $700 USD)&lt;br&gt;
Challenge 4: Nintendo Switch (valued at $392 USD) and $150 in AWS&lt;br&gt;
Credits&lt;/p&gt;

&lt;p&gt;Sound fun? Read on for more on how this works and where to hear the challenges each day.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-it-work"&gt;
  &lt;/a&gt;
  How does it work?
&lt;/h2&gt;

&lt;p&gt;Each challenge has a theme related to the day's keynote announcements and will challenge you to submit an idea. Challenges will be announced during the AWS on Air show during re:Invent and on the &lt;a href="https://twitter.com/awsdevelopers"&gt;@awsdevelopers Twitter account&lt;/a&gt;. We will collect entries until 6pm PT the same day the challenge was announced. AWS judges will rank these idea submissions each day based on the following criteria:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Quality of the idea, including uniqueness, creativity and ingenuity&lt;/li&gt;
&lt;li&gt;Scalability of the solution&lt;/li&gt;
&lt;li&gt;Potential impact of the idea&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Winners will be announced during the AWS on Air show the following morning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-and-where-is-it-happening"&gt;
  &lt;/a&gt;
  When and where is it happening?
&lt;/h2&gt;

&lt;p&gt;AWS re:Invent is happening November 29 - December 3, 2021. The challenges and winners will be announced during the AWS on Air show each morning on &lt;a href="https://www.twitch.tv/aws"&gt;Twitch&lt;/a&gt;, &lt;a href="https://www.linkedin.com/company/amazon-web-services/videos/"&gt;LinkedIn Live&lt;/a&gt;, and &lt;a href="https://twitter.com/AWSonAir"&gt;Twitter&lt;/a&gt; and in the expo hall at re:Invent. If you miss out on the live announcement, check back here for the day's challenge and a link to enter your submission.&lt;/p&gt;

&lt;p&gt;Got your thinking cap on? Ready to submit your idea for today's challenge?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enter-the-challenges"&gt;
  &lt;/a&gt;
  Enter the Challenges
&lt;/h2&gt;

&lt;p&gt;Here are the challenges announced so far. Challenges and a link to enter will be added here each morning after the announcement. The current day's challenge is noted by ACTIVE CHALLENGE below.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#challenge-1-completed-challenge"&gt;
  &lt;/a&gt;
  Challenge 1 (completed challenge)
&lt;/h3&gt;

&lt;p&gt;Submissions closed. Winner will be announced Monday, November 29, 2021 at 9am PT.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Challenge&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;How would you leverage open-source tools to build an event registration platform on AWS?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#challenge-2-active-challenge"&gt;
  &lt;/a&gt;
  Challenge 2 (ACTIVE CHALLENGE)
&lt;/h3&gt;

&lt;p&gt;Announced during the AWS on Air show on Monday, November 29, 2021 at 9am PT. Entries accepted until Monday, November 29, 2021 at 6pm PT and a winner will be announced on Tuesday, November 30, 2021 at 10:45am PT.&lt;/p&gt;

&lt;p&gt;❗️❗️❗️ Enter challenge 2 &lt;a href="https://eventbox.dev/survey/QLJNW88"&gt;here&lt;/a&gt;❗️❗️❗️&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Challenge&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Pitch a security startup that protects laptops using AWS IoT, AWS Sagemaker, and Amazon S3?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example submission (NOT a valid contest entry)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;TypeKey is an IOT device that captures keystroke data  on laptops to identify who is using the device. By leveraging federated machine learning and strong auditing enabled by Sagemaker and S3, our customers data is secure, and PII is striped using Amazon Comprehend. Our solution is great for companies concerned about insider threats or malicious actors getting access to laptops, as we can detect abnormal behavior on the key stroke level.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#challenge-3"&gt;
  &lt;/a&gt;
  Challenge 3
&lt;/h3&gt;

&lt;p&gt;To be announced during the AWS on Air show on November 30, 2021 at 10:45am PT. Entries accepted until Tuesday, November 30, 2021 at 6pm PT and a winner will be announced on Wednesday, December 1, 2021 at 9:45am PT.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#challenge-4"&gt;
  &lt;/a&gt;
  Challenge 4
&lt;/h3&gt;

&lt;p&gt;To be announced during the AWS on Air show on December 1, 2021 at 9:45am PT. Entries accepted until Wednesday, December 1, 2021 at 6pm PT and a winner will be announced on Thursday, December 2, 2021 at 10:45am PT.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NO PURCHASE NECESSARY. 18+. US only. Eligibility restrictions apply. See terms and conditions &lt;a href="https://eventbox.dev/terms/secret-ingredient-v6.html"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Like what you read? Follow me here on &lt;a href="https://dev.to/jennapederson"&gt;Dev.to&lt;/a&gt; or on &lt;a href="https://twitter.com/jennapederson"&gt;Twitter&lt;/a&gt; to stay updated!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>reinvent</category>
    </item>
    <item>
      <title>Creating a custom VSCode Terminal Profile for using Rosetta on an M1 Mac (Apple Silicon)</title>
      <author>Mark Witt</author>
      <pubDate>Mon, 29 Nov 2021 18:29:45 +0000</pubDate>
      <link>https://dev.to/markwitt_me/creating-a-custom-vscode-terminal-profile-for-using-rosetta-on-an-m1-mac-apple-silicon-2gb2</link>
      <guid>https://dev.to/markwitt_me/creating-a-custom-vscode-terminal-profile-for-using-rosetta-on-an-m1-mac-apple-silicon-2gb2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-do-this"&gt;
  &lt;/a&gt;
  Why do this?
&lt;/h2&gt;

&lt;p&gt;Many programs and packages still do not support the ARM architecture used on the new Apple M1 chip.&lt;br&gt;
If you are a developer dealing with older codebases, you may have already had issues installing npm dependencies or running specific tools.&lt;/p&gt;

&lt;p&gt;Luckily, Apple provides us with the &lt;a href="https://support.apple.com/en-us/HT211861"&gt;Rosetta&lt;/a&gt; emulation layer.&lt;br&gt;
It enables us to emulate the x86 architecture to run all the programs made for older Macs, with a little performance decrease when compared to apps optimized for M1.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#rosetta-terminal"&gt;
  &lt;/a&gt;
  Rosetta Terminal
&lt;/h2&gt;

&lt;p&gt;When installing build tools like CocoaPods, you have to run your whole terminal session with Rosetta enabled.&lt;/p&gt;

&lt;p&gt;A prevalent practice to achieve this is to create a copy of the Terminal.app, click "Get Info" and enable the flag "Open using Rosetta". Now you have a second terminal that is always running as Rosetta.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q1DCDjtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/noy7hict7wowtefyc7uk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q1DCDjtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/noy7hict7wowtefyc7uk.png" alt="RosyTerm copy of Terminal app using Rosetta" width="880" height="1239"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-do-this-in-vscode"&gt;
  &lt;/a&gt;
  How to do this in VSCode
&lt;/h2&gt;

&lt;p&gt;I very much enjoy using the integrated Terminal in VSCode because I don't have to switch windows so often and can continue coding while running processes like building my app or installing dependencies.&lt;/p&gt;

&lt;p&gt;How to create a custom terminal profile:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open Visual Studio Code&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;cmd+shift+p&lt;/code&gt; to open the Command Palette.&lt;/li&gt;
&lt;li&gt;Type "Open Settings (JSON)" and press enter&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the settings.json file, search for the property &lt;code&gt;terminal.integrated.profiles.osx&lt;/code&gt;, it should look similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"terminal.integrated.profiles.osx": {
    "bash": {
    "path": "bash",
    "args": ["-l"],
    "icon": "terminal-bash"
    },
    "zsh": {
    "path": "zsh",
    "args": ["-l"]
    },
    "fish": {
    "path": "fish",
    "args": ["-l"]
    },
    "tmux": {
    "path": "tmux",
    "icon": "terminal-tmux"
    },
    "pwsh": {
    "path": "pwsh",
    "icon": "terminal-powershell"
    }
}
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Add this property:&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"terminal.integrated.profiles.osx": {
 ....,
  "rosetta": {
    "path": "arch",
    "args": ["-x86_64", "zsh", "-l"],
    "overrideName": true
  }
}
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Save the file&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Tada! You now have a dedicated rosetta Terminal profile in VSCode&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Click the dropdown arrow at the right side of your VSCode terminal. You should see the option "rosetta".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yP647Qm6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udj6pmf4jvehywq3u2b7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yP647Qm6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udj6pmf4jvehywq3u2b7.png" alt="Rosetta profile in terminal dropdown" width="676" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If it doesn't work or you have anything else you want to tell me, feel free to hit me up anytime on &lt;a href="https://twitter.com/markwitt_me"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Fixing Office Interop on 64-Bit Windows 10 ()</title>
      <author>The Sharp Ninja</author>
      <pubDate>Mon, 29 Nov 2021 18:27:53 +0000</pubDate>
      <link>https://dev.to/sharpninja/fixing-office-interop-on-64-bit-windows-10--4bmp</link>
      <guid>https://dev.to/sharpninja/fixing-office-interop-on-64-bit-windows-10--4bmp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The Problem
&lt;/h2&gt;

&lt;p&gt;If you are using Office Interop from .net Framework, then you are actually invoking a DCOM server through proxies included in the Office Interop tools.  For Microsoft Word, the actual CLASSID to be loaded is &lt;code&gt;{000209FF-0000-0000-C000-000000000046}&lt;/code&gt;.  It appears that Word gets a different CLASSID for 64-Bit, &lt;code&gt;{00020905-0000-0000-C000-000000000046}&lt;/code&gt;.  Because of this, attempting to use Word through Office Interop fails with...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Retrieving the COM class factory for component with CLSID {000209FF-0000-0000-C000-000000000046} failed due to the following error: 80080005 Server execution failed (Exception from HRESULT: 0x80080005 (CO_E_SERVER_EXEC_FAILURE)).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#the-solution"&gt;
  &lt;/a&gt;
  The Solution
&lt;/h2&gt;

&lt;p&gt;Uninstalling the 64-bit version of Office, and installing the 32-Bit version should fix our issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-uninstall-office"&gt;
  &lt;/a&gt;
  Step 1: Uninstall Office
&lt;/h3&gt;

&lt;p&gt;I'll cut straight to the chase.  You will need the Office uninstall support tool.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://support.microsoft.com/en-us/office/uninstall-office-from-a-pc-9dd49b83-264a-477a-8fcc-2fdf5dbf61d8"&gt;Download Office uninstall support tool&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Expand Option 2 and click Download.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zpUj4Wr0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qefjket41v1ig0ozi45u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zpUj4Wr0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qefjket41v1ig0ozi45u.png" alt="Download Uninstall Tool" width="880" height="257"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Answer the questions in the uninstall tool and select the installation of Office you wish to remove.  Make sure you have ended all Office applications including OneNote and Teams before continuing.  The install will take a few minutes depending on the speed of your storage system.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: The Uninstall requires a Reboot&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#step-2-dowload-microsoft-365-offline-installer-32bit"&gt;
  &lt;/a&gt;
  Step 2: Dowload Microsoft 365 Offline Installer (32-Bit)
&lt;/h3&gt;

&lt;p&gt;Next, visit &lt;a href="https://support.microsoft.com/en-us/office/use-the-office-offline-installer-f0a85fe7-118f-41cb-a791-d59cef96ad1c?ui=en-us&amp;amp;rs=en-us&amp;amp;ad=us#OfficePlans=signinorgid"&gt;Use the Office offline installer&lt;/a&gt;.  Select your plan.  In my case it is &lt;code&gt;Office for Business&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#download-and-install-the-office-deployment-tool"&gt;
  &lt;/a&gt;
  Download and install the Office Deployment Tool
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Create a folder on your hard drive and name it ODT. For this example, we'll create it on the &lt;code&gt;c:\&lt;/code&gt; drive, like so: &lt;code&gt;c:\ODT&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Download the &lt;code&gt;OfficeDeployment Tool&lt;/code&gt; from the Microsoft Download Center. Select Save As and save it to your downloads folder.&lt;/li&gt;
&lt;li&gt;In your downloads folder, double-click the Office Deployment Tool exe file to install it.&lt;/li&gt;
&lt;li&gt;If you see the User Account Control prompt that says, Do you want to allow this app to make changes to your device?, click Yes.&lt;/li&gt;
&lt;li&gt;Accept the Microsoft Software License Terms, and then click Continue.&lt;/li&gt;
&lt;li&gt;In the Browse for Folder dialog, select the &lt;code&gt;ODT&lt;/code&gt; folder you created in earlier, and then click OK.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#download-and-install-office"&gt;
  &lt;/a&gt;
  Download and install Office
&lt;/h4&gt;

&lt;p&gt;The file downloaded and extracted to &lt;code&gt;C:\ODT&lt;/code&gt; includes four XML files with configuration for downloading and installing Office.  Pick the one that matches your use case.  For me,  I need to install the Office2021Enterprise version in 32-bits.  I modify the XML file to match this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;Configuration&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;Add&lt;/span&gt; &lt;span class="na"&gt;OfficeClientEdition=&lt;/span&gt;&lt;span class="s"&gt;"32"&lt;/span&gt; &lt;span class="na"&gt;Channel=&lt;/span&gt;&lt;span class="s"&gt;"PerpetualVL2021"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;Product&lt;/span&gt; &lt;span class="na"&gt;ID=&lt;/span&gt;&lt;span class="s"&gt;"ProPlus2021Volume"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;Language&lt;/span&gt; &lt;span class="na"&gt;ID=&lt;/span&gt;&lt;span class="s"&gt;"en-us"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;ExcludeApp&lt;/span&gt; &lt;span class="na"&gt;ID=&lt;/span&gt;&lt;span class="s"&gt;"Lync"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/Product&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;Product&lt;/span&gt; &lt;span class="na"&gt;ID=&lt;/span&gt;&lt;span class="s"&gt;"VisioPro2021Volume"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;Language&lt;/span&gt; &lt;span class="na"&gt;ID=&lt;/span&gt;&lt;span class="s"&gt;"en-us"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/Product&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;Product&lt;/span&gt; &lt;span class="na"&gt;ID=&lt;/span&gt;&lt;span class="s"&gt;"ProjectPro2021Volume"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;Language&lt;/span&gt; &lt;span class="na"&gt;ID=&lt;/span&gt;&lt;span class="s"&gt;"en-us"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/Product&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/Add&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;Remove&lt;/span&gt; &lt;span class="na"&gt;All=&lt;/span&gt;&lt;span class="s"&gt;"True"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class="c"&gt;&amp;lt;!--  &amp;lt;RemoveMSI All="True" /&amp;gt; --&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;Display&lt;/span&gt; &lt;span class="na"&gt;Level=&lt;/span&gt;&lt;span class="s"&gt;"None"&lt;/span&gt; &lt;span class="na"&gt;AcceptEULA=&lt;/span&gt;&lt;span class="s"&gt;"TRUE"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;Property&lt;/span&gt; &lt;span class="na"&gt;Name=&lt;/span&gt;&lt;span class="s"&gt;"AUTOACTIVATE"&lt;/span&gt; &lt;span class="na"&gt;Value=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/Configuration&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that I've changed OfficeLientEdition from &lt;code&gt;64&lt;/code&gt; to &lt;code&gt;32&lt;/code&gt;.  I have also incommented some properties to autoregister and accept the EULA as part of the install.&lt;/p&gt;

&lt;p&gt;After saving this file, open a Windows PowerShell window and navigate to &lt;code&gt;C:\ODT&lt;/code&gt;.  Then enter...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;\setup.exe&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/download&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;configuration-Office2021Enterprise.xml&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are installing a different version, then replace the name of the XML file.&lt;/p&gt;

&lt;p&gt;This will download the installation files.  When the prompt returns, enter...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;\setup.exe&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/configure&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;configuration-Office2021Enterprise.xml&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will install the version you selected.  Run the following command in an Administrative Windows PowerShell...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;gwmi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Win32_COMSetting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;?&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;TypeLibraryId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"000000000046"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ProgId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Format-Table&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;TypeLibraryId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;ProgId&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see our missing GUID &lt;code&gt;{000209FF-0000-0000-C000-000000000046}&lt;/code&gt;.&lt;/p&gt;

</description>
      <category>office</category>
      <category>dotnet</category>
      <category>64bit</category>
    </item>
    <item>
      <title>My secret trick for writing great React components</title>
      <author>Victor Ocnarescu</author>
      <pubDate>Mon, 29 Nov 2021 18:24:28 +0000</pubDate>
      <link>https://dev.to/victorocna/my-secret-trick-for-writing-great-react-components-fb8</link>
      <guid>https://dev.to/victorocna/my-secret-trick-for-writing-great-react-components-fb8</guid>
      <description>&lt;p&gt;I have a confession to make. I do not write a single test for my React components. Yes, you read that right, not a single one. You might wonder how I keep track of complex React projects with many many components. Here's my trick:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#always-write-react-components-that-you-can-read-without-scrolling"&gt;
  &lt;/a&gt;
  Always write React components that you can read without scrolling.
&lt;/h2&gt;

&lt;p&gt;As a rule of thumb, if you cannot read a React component without scrolling, then I bet it does more than one thing. It has more than one responsibility, more than one single purpose.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thinking-in-react"&gt;
  &lt;/a&gt;
  Thinking in React
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The first thing you’ll want to do is to draw boxes around every component (and subcomponent) in the mock and give them all names.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/docs/thinking-in-react.html#step-1-break-the-ui-into-a-component-hierarchy"&gt;This is an actual quote from the React docs&lt;/a&gt; that apparently everybody forgot to read.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e9cRAWuB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reactjs.org/static/9381f09e609723a8bb6e4ba1a7713b46/90cbd/thinking-in-react-components.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e9cRAWuB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reactjs.org/static/9381f09e609723a8bb6e4ba1a7713b46/90cbd/thinking-in-react-components.png" alt="Thinking in React" width="605" height="391"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you follow this advice every component that you write will do one and only one thing, will serve only one purpose. If it ends up growing, it should be decomposed into smaller subcomponents.&lt;/p&gt;

&lt;p&gt;What about complex functions that manipulate data? This is also simple: I just create a pure function with all the logic, save it in a file and just use it in my React components.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-see-some-code"&gt;
  &lt;/a&gt;
  Let's see some code
&lt;/h2&gt;

&lt;p&gt;Let's assume I want to add React Context to one of my components.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AwesomeComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;defaults&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;local&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;theme.mode&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initialTheme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;defaults&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setTheme&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialTheme&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ThemeContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Provider&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setTheme&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"awesome-component"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;everything else...&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;ThemeContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Provider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first part of the component uses the &lt;code&gt;useState&lt;/code&gt; React hook. It also initializes the state with some default values taken from some options cached values.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#first-improvement"&gt;
  &lt;/a&gt;
  First improvement
&lt;/h3&gt;

&lt;p&gt;The defaults can really grow over time to many other options, not just &lt;code&gt;mode&lt;/code&gt;. Let's make a function that initializes the state. This function will have a single purpose: initializing the state.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AwesomeComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setTheme&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;themable&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ThemeContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Provider&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setTheme&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"awesome-component"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;everything else...&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;ThemeContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Provider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#second-improvement"&gt;
  &lt;/a&gt;
  Second improvement
&lt;/h3&gt;

&lt;p&gt;The component still does more than it should. Let's move the hard-to-read React context code in a separate component and just implement it in our main component. This way we will not care how the context is initialized, we will care only that the context WAS initialized.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AwesomeComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Theme&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"awesome-component"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;everything else...&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Theme&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#more-improvements"&gt;
  &lt;/a&gt;
  More improvements
&lt;/h3&gt;

&lt;p&gt;If you start thinking this way in React you will notice these small changes everywhere in your projects. And your projects will become better and better.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Code clutter&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We're all guilty of it. Junior devs, senior devs, fullstack devs. We all have written God classes in OOP or huge React components without splitting them by purpose. &lt;/p&gt;

&lt;p&gt;But this has to change, otherwise the complex project you are working on is going to become a complex monster project.&lt;/p&gt;

&lt;p&gt;And it has to change fast. So next time you plan to write some React component, hook or just a plain function: why not split it in multiple files, each one with a single responsibility? The world of programming would be a much better place.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>discuss</category>
    </item>
    <item>
      <title>GCP security best practices</title>
      <author>Miguel</author>
      <pubDate>Mon, 29 Nov 2021 18:22:50 +0000</pubDate>
      <link>https://dev.to/miguel000/gcp-security-best-practices-566f</link>
      <guid>https://dev.to/miguel000/gcp-security-best-practices-566f</guid>
      <description>&lt;p&gt;You’ve got a problem to solve and turned to Google Cloud Platform and follow &lt;strong&gt;GCP security best practices&lt;/strong&gt; to build and host your solution. You create your account and are all set to brew some coffee and sit down at your workstation to architect, code, build, and deploy. Except… you aren’t.&lt;/p&gt;

&lt;p&gt;There are many knobs you must tweak and practices to put into action if you want your &lt;strong&gt;solution&lt;/strong&gt; to be &lt;strong&gt;operative, secure, reliable, performant, and cost effective&lt;/strong&gt;. First things first, the best time to do that is now – right from the beginning, before you start to design and engineer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gcp-shared-responsibility-model"&gt;
  &lt;/a&gt;
  GCP shared responsibility model
&lt;/h2&gt;

&lt;p&gt;The scope of Google Cloud products and services ranges from conventional &lt;a href="https://cloud.google.com/learn/what-is-iaas"&gt;Infrastructure as a Service&lt;/a&gt; (IaaS) to Platform as a Service (PaaS) and &lt;a href="https://cloud.google.com/marketplace/docs/partners/integrated-saas"&gt;Software as a Service&lt;/a&gt; (SaaS). As shown in the figure, the traditional boundaries of responsibility between users and cloud providers change based on the service they choose.&lt;/p&gt;

&lt;p&gt;At the very least, as part of their &lt;strong&gt;common responsibility for security&lt;/strong&gt;, public cloud providers need to be able to provide you with a solid and secure foundation. Also, providers need to empower you to understand and implement your own parts of the shared responsibility model.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://sysdig.com/wp-content/uploads/GCP-security-Best-practices-02.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--231F7Tal--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/GCP-security-Best-practices-02.png" alt="Shared responsibility model for On-prem, Iaas, Paas and saas." width="880" height="557"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#initial-setup-gcp-security-best-practices"&gt;
  &lt;/a&gt;
  Initial setup GCP security best practices
&lt;/h2&gt;

&lt;p&gt;First, a word of caution: &lt;strong&gt;Never use a non-corporate account.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Instead, use a fully managed corporate Google account to improve visibility, auditing, and control of access to Cloud Platform resources. &lt;strong&gt;Don’t use email accounts outside of your organization&lt;/strong&gt;, such as personal accounts, for business purposes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.google.com/identity"&gt;Cloud Identity&lt;/a&gt; is a stand-alone Identity-as-a-Service (IDaaS) that gives Google Cloud users access to many of the identity management features that &lt;a href="https://workspace.google.com/"&gt;Google Workspace&lt;/a&gt; provides. It is a suite of secure cloud-native collaboration and productivity applications from Google. Through the Cloud Identity management layer, you can enable or disable access to various Google solutions for members of your organization, including Google Cloud Platform (GCP).&lt;/p&gt;

&lt;p&gt;Signing up for Cloud Identity also creates an organizational node for your domain. This helps you map your corporate structure and controls to Google Cloud resources through the Google Cloud resource hierarchy.&lt;/p&gt;

&lt;p&gt;Now, &lt;strong&gt;activating Multi-Factor Authentication (MFA) is the most important thing you want to do&lt;/strong&gt;. Do this for every user account you create in your system if you want to have a security-first mindset, especially crucial for administrators. MFA, along with strong passwords, are the most effective way to secure user’s accounts against improper access.&lt;/p&gt;

&lt;p&gt;Now that you are set, let’s dig into the &lt;strong&gt;GCP security best practices&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#identity-and-access-management-iam"&gt;
  &lt;/a&gt;
  Identity and Access Management (IAM)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://cloud.google.com/iam"&gt;GCP Identity and Access Management (IAM)&lt;/a&gt; helps enforce least privilege access control to your cloud resources. You can use IAM to restrict who is authenticated (signed in) and authorized (has permissions) to use resources.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-ensure-that-mfa-is-enabled-for-all-user-accounts"&gt;
  &lt;/a&gt;
  1. Ensure that MFA is enabled for all user accounts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Multi-factor authentication&lt;/strong&gt; requires more than one mechanism to authenticate a user. This secures user logins from attackers exploiting stolen or weak credentials. By default, multi-factor authentication is not set.&lt;/p&gt;

&lt;p&gt;Make sure that for each Google Cloud Platform project, folder, or organization, multi-factor authentication for each account is set and, if not, &lt;a href="https://support.google.com/accounts/answer/185839"&gt;set it up&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-ensure-security-key-enforcement-for-admin-accounts"&gt;
  &lt;/a&gt;
  2. Ensure Security Key enforcement for admin accounts
&lt;/h3&gt;

&lt;p&gt;GCP users with Organization Administrator roles have the highest level of privilege in the organization.&lt;/p&gt;

&lt;p&gt;These accounts should be protected with the strongest form of two-factor authentication: &lt;strong&gt;Security Key Enforcement&lt;/strong&gt;. Ensure that admins use Security Keys to log in instead of weaker second factors, like SMS or &lt;a href="https://pages.nist.gov/800-63-3/sp800-63b.html#singlefactorOTP"&gt;one-time passwords&lt;/a&gt; (OTP). Security Keys are actual &lt;strong&gt;physical keys&lt;/strong&gt; used to access Google Organization Administrator Accounts. They send an encrypted signature rather than a code, ensuring that logins cannot be phished.&lt;/p&gt;

&lt;p&gt;Identify users with &lt;em&gt;Organization Administrator&lt;/em&gt; privileges:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud organizations get-iam-policy ORGANIZATION\_ID
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Look for members granted the role &lt;em&gt;”roles/resourcemanager.organizationAdmin”&lt;/em&gt; and then manually verify that &lt;strong&gt;Security Key Enforcement&lt;/strong&gt; has been enabled for each account. If not enabled, take it seriously and &lt;a href="https://cloud.google.com/titan-security-key"&gt;enable it immediately&lt;/a&gt;. By default, Security Key Enforcement is not enabled for Organization Administrators.&lt;/p&gt;

&lt;p&gt;If an organization administrator loses access to their security key, the user may not be able to access their account. For this reason, it is important to &lt;a href="https://workspace.google.com/learn-more/key_for_working_smarter_faster_and_more_securely.html"&gt;configure backup security keys&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#%C2%A0other-gcp-security-iam-best-practices-include"&gt;
  &lt;/a&gt;
   Other GCP security IAM best practices include:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  Service accounts should not have Admin privileges.&lt;/li&gt;
&lt;li&gt;  IAM users should not be assigned the &lt;strong&gt;Service Account User&lt;/strong&gt; or &lt;strong&gt;Service Account Token Creator&lt;/strong&gt; roles at project level.&lt;/li&gt;
&lt;li&gt;  User-managed / external keys for service accounts should be rotated every 90 days or less.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Separation of duties&lt;/strong&gt; should be enforced while assigning service account related roles to users.&lt;/li&gt;
&lt;li&gt;  Separation of duties should be enforced while assigning KMS related roles to users.&lt;/li&gt;
&lt;li&gt;  API keys should not be created for a project.&lt;/li&gt;
&lt;li&gt;  API keys should be restricted to use by only specified Hosts and Apps.&lt;/li&gt;
&lt;li&gt;  API keys should be restricted to only APIs that the application needs access to.&lt;/li&gt;
&lt;li&gt;  API keys should be rotated every 90 days or less.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#key-management-service-kms"&gt;
  &lt;/a&gt;
  Key Management Service (KMS)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://cloud.google.com/security-key-management"&gt;GCP Cloud Key Management Service&lt;/a&gt; (KMS) is a cloud-hosted key management service that allows you to manage symmetric and asymmetric encryption keys for your cloud services in the same way as onprem. It lets you create, use, rotate, and destroy AES 256, RSA 2048, RSA 3072, RSA 4096, EC P256, and EC P384 encryption keys.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-check-for-anonymously-or-publicly-accessible-cloud-kms-keys"&gt;
  &lt;/a&gt;
  3. Check for anonymously or publicly accessible Cloud KMS keys
&lt;/h3&gt;

&lt;p&gt;Anyone can access the dataset by granting permissions to &lt;code&gt;allUsers&lt;/code&gt; or &lt;code&gt;allAuthenticatedUsers&lt;/code&gt;. Such access may not be desirable if sensitive data is stored in that location.&lt;/p&gt;

&lt;p&gt;In this case, make sure that &lt;strong&gt;anonymous and/or public access&lt;/strong&gt; to a Cloud KMS encryption key &lt;strong&gt;is not allowed&lt;/strong&gt;. By default, Cloud KMS does not allow access to &lt;code&gt;allUsers&lt;/code&gt; or &lt;code&gt;allAuthenticatedUsers&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;List all Cloud KMS keys:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud kms keys list --keyring=KEY\_RING\_NAME --location=global --format=json | jq '.\[\].name'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remove IAM policy binding for a KMS key to remove access to &lt;code&gt;allUsers&lt;/code&gt; and &lt;code&gt;allAuthenticatedUsers&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud kms keys remove-iam-policy-binding KEY\_NAME --keyring=KEY\_RING\_NAME --location=global --member=allUsers --role=ROLE
gcloud kms keys remove-iam-policy-binding KEY\_NAME --keyring=KEY\_RING\_NAME --location=global --member=allAuthenticatedUsers --role=ROLE
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The following is a &lt;a href="https://cloudcustodian.io/docs/gcp/examples/kms-cryptokey.html"&gt;Cloud Custodian rule&lt;/a&gt; for detecting the existence of anonymously or publicly accessible Cloud KMS keys:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;\- name: anonymously-or-publicly-accessible-cloud-kms-keys
  description: |
    It is recommended that the IAM policy on Cloud KMS cryptokeys should
    restrict anonymous and/or public access.
  resource: gcp.kms-cryptokey
  filters:
    - type: iam-policy
      key: "bindings\[\*\].members\[\]"
      op: intersect
      value: \["allUsers", "allAuthenticatedUsers"\]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#cloud-storage"&gt;
  &lt;/a&gt;
  Cloud Storage
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://cloud.google.com/storage"&gt;Google Cloud Storage&lt;/a&gt; lets you store any amount of data in namespaces called &lt;em&gt;“buckets&lt;/em&gt;.&lt;em&gt;”&lt;/em&gt; These buckets are an appealing target for any attacker who wants to get hold of your data, so you must take great care in securing them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-ensure-that-cloud-storage-buckets-are-not-anonymously-or-publicly-accessible"&gt;
  &lt;/a&gt;
  4. Ensure that Cloud Storage buckets are not anonymously or publicly accessible
&lt;/h3&gt;

&lt;p&gt;Allowing anonymous or public access gives everyone permission to access bucket content. Such access may not be desirable if you are storing sensitive data. Therefore, make sure that &lt;strong&gt;anonymous or public access to the bucket is not allowed&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;List all buckets in a project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gsutil ls
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Check the IAM Policy&lt;/strong&gt; for each bucket returned from the above command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gsutil iam get gs://BUCKET\_NAME
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;No role should contain &lt;code&gt;allUsers&lt;/code&gt; or &lt;code&gt;allAuthenticatedUsers&lt;/code&gt; as a member. If that’s not the case, you’ll want to remove them with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gsutil iam ch -d allUsers gs://BUCKET\_NAME
gsutil iam ch -d allAuthenticatedUsers gs://BUCKET\_NAME
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, you might want to prevent Storage buckets from becoming publicly accessible by &lt;a href="https://console.cloud.google.com/projectselector/iam-admin/orgpolicies/iam-allowedPolicyMemberDomains?supportedpurview=project,folder,organizationId&amp;amp;orgonly=true"&gt;setting up the Domain restricted sharing organization policy&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#compute-engine"&gt;
  &lt;/a&gt;
  Compute Engine
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://cloud.google.com/compute"&gt;Compunte Engine&lt;/a&gt; provides security and customizable compute service that lets you create and run virtual machines on Google’s infrastructure.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-ensure-vm-disks-for-critical-vms-are-encrypted-with-customersupplied-encryption-keys-csek"&gt;
  &lt;/a&gt;
  5. Ensure VM disks for critical VMs are encrypted with Customer-Supplied Encryption Keys (CSEK)
&lt;/h3&gt;

&lt;p&gt;By default, the Compute Engine service &lt;strong&gt;encrypts all data at rest&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Cloud services manage this type of encryption without any additional action from users or applications. However, if you want full control over instance disk encryption, you can provide your own encryption key.&lt;/p&gt;

&lt;p&gt;These custom keys, also known as &lt;a href="https://cloud.google.com/security/encryption/customer-supplied-encryption-keys"&gt;Customer-Supplied Encryption Keys&lt;/a&gt; (CSEKs), are used by Google Compute Engine to protect the Google-generated keys used to encrypt and decrypt instance data. The Compute Engine service does not store CSEK on the server and cannot access protected data unless you specify the required key.&lt;/p&gt;

&lt;p&gt;At the very least, &lt;strong&gt;business critical VMs should have VM disks encrypted with CSEK&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;By default, VM disks are encrypted with Google-managed keys. They are not encrypted with Customer-Supplied Encryption Keys.&lt;/p&gt;

&lt;p&gt;Currently, there is no way to update the encryption of an existing disk, so you should create a new disk with &lt;code&gt;Encryption&lt;/code&gt; set to &lt;code&gt;Customer supplied&lt;/code&gt;. A word of caution is necessary here:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;⚠️ If you lose your encryption key, you will not be able to recover the data&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In the &lt;a href="https://cloud.google.com/compute/docs/gcloud-compute"&gt;gcloud compute tool&lt;/a&gt;, encrypt a disk using the &lt;code&gt;--csek-key-file&lt;/code&gt; flag during instance creation. If you are using an RSA-wrapped key, use the gcloud beta component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud beta compute instances create INSTANCE\_NAME --csek-key-file=key-file.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To encrypt a standalone persistent disk use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud beta compute disks create DISK\_NAME --csek-key-file=key-file.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is your duty to generate and manage your key. You must provide a key that is a 256-bit string encoded in RFC 4648 standard base64 to the Compute Engine. A sample &lt;code&gt;key-file.json&lt;/code&gt; looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;\[
  {
    "uri": "https://www.googleapis.com/compute/v1/projects/myproject/zones/us-
central1-a/disks/example-disk",
    "key": "acXTX3rxrKAFTF0tYVLvydU1riRZTvUNC4g5I11NY-c=",
    "key-type": "raw"
  },
  {
    "uri":
"https://www.googleapis.com/compute/v1/projects/myproject/global/snapshots/my
-private-snapshot",
    "key":
"ieCx/NcW06PcT7Ep1X6LUTc/hLvUDYyzSZPPVCVPTVEohpeHASqC8uw5TzyO9U+Fka9JFHz0mBib
XUInrC/jEk014kCK/NPjYgEMOyssZ4ZINPKxlUh2zn1bV+MCaTICrdmuSBTWlUUiFoDD6PYznLwh8
ZNdaheCeZ8ewEXgFQ8V+sDroLaN3Xs3MDTXQEMMoNUXMCZEIpg9Vtp9x2oeQ5lAbtt7bYAAHf5l+g
JWw3sUfs0/Glw5fpdjT8Uggrr+RMZezGrltJEF293rvTIjWOEB3z5OHyHwQkvdrPDFcTqsLfh+8Hr
8g+mf+7zVPEC8nEbqpdl3GPv3A7AwpFp7MA=="
    "key-type": "rsa-encrypted"
  }
\]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#%C2%A0other-gcp-security-best-practices-for-compute-engine-include"&gt;
  &lt;/a&gt;
   Other GCP security best practices for Compute Engine include:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  Ensure that instances are not configured to use the default service account.&lt;/li&gt;
&lt;li&gt;  Ensure that instances are not configured to use the default service account with full access to all Cloud APIs.&lt;/li&gt;
&lt;li&gt;  Ensure oslogin is enabled for a Project.&lt;/li&gt;
&lt;li&gt;  Ensure that IP forwarding is not enabled on Instances.&lt;/li&gt;
&lt;li&gt;  Ensure Compute instances are launched with Shielded VM enabled.&lt;/li&gt;
&lt;li&gt;  Ensure that Compute instances do not have public IP addresses.&lt;/li&gt;
&lt;li&gt;  Ensure that App Engine applications enforce HTTPS connections.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#google-kubernetes-engine-service-gke"&gt;
  &lt;/a&gt;
  Google Kubernetes Engine Service (GKE)
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://cloud.google.com/kubernetes-engine"&gt;Google Kubernetes Engine&lt;/a&gt; (GKE) provides a managed environment for deploying, managing, and scaling containerized applications using the Google infrastructure. A GKE environment consists of multiple machines (specifically, Compute Engine instances) grouped together to form a cluster.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-enable-applicationlayer-secrets-encryption-for-gke-clusters"&gt;
  &lt;/a&gt;
  6. Enable application-layer secrets encryption for GKE clusters
&lt;/h3&gt;

&lt;p&gt;Application-layer secret encryption provides an &lt;strong&gt;additional layer of security&lt;/strong&gt; for sensitive data, such as Kubernetes secrets stored on &lt;code&gt;etcd&lt;/code&gt;. This feature allows you to use Cloud KMS managed encryption keys to encrypt data at the application layer and protect it from attackers accessing offline copies of &lt;code&gt;etcd&lt;/code&gt;. Enabling application-layer secret encryption in a GKE cluster is considered a security best practice &lt;strong&gt;for applications that store sensitive data&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Create a key ring to store the CMK:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud kms keyrings create KEY\_RING\_NAME --location=REGION --project=PROJECT\_NAME --format="table(name)"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, create a new Cloud KMS Customer-Managed Key (CMK) within the KMS key ring created at the previous step:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud kms keys create KEY\_NAME --location=REGION --keyring=KEY\_RING\_NAME --purpose=encryption --protection-level=software --rotation-period=90d --format="table(name)"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And lastly, assign the Cloud KMS &lt;em&gt;“CryptoKey Encrypter/Decrypter”&lt;/em&gt; role to the appropriate service account:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud projects add-iam-policy-binding PROJECT\_ID --member=serviceAccount:service-PROJECT\_NUMBER@container-engine-robot.iam.gserviceaccount.com --role=roles/cloudkms.cryptoKeyEncrypterDecrypter
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The final step is to enable application-layer secrets encryption for the selected cluster, using the Cloud KMS Customer-Managed Key (CMK) created in the previous steps:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud container clusters update CLUSTER --region=REGION --project=PROJECT\_NAME --database-encryption-key=projects/PROJECT\_NAME/locations/REGION/keyRings/KEY\_RING\_NAME/cryptoKeys/KEY\_NAME
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-enable-gke-cluster-node-encryption-with-customermanaged-keys"&gt;
  &lt;/a&gt;
  7. Enable GKE cluster node encryption with customer-managed keys
&lt;/h3&gt;

&lt;p&gt;To give you more control over the GKE data encryption / decryption process, make sure your Google Kubernetes Engine (GKE) cluster node is &lt;strong&gt;encrypted with a customer-managed key&lt;/strong&gt; (CMK). You can use the Cloud Key Management Service (Cloud KMS) to create and manage your own customer-managed keys (CMKs). Cloud KMS provides secure and efficient cryptographic key management, controlled key rotation, and revocation mechanisms.&lt;/p&gt;

&lt;p&gt;At this point, you should already have a key ring where you store the CMKs, as well as customer-managed keys. You will use them here too.&lt;/p&gt;

&lt;p&gt;To enable GKE cluster node encryption, &lt;strong&gt;you will need to re-create the node pool&lt;/strong&gt;. For this, use the name of the cluster node pool that you want to re-create as an identifier parameter and custom output filtering to describe the configuration information available for the selected node pool:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud container node-pools describe NODE\_POOL --cluster=CLUSTER\_NAME --region=REGION --format=json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, using the information returned in the previous step, create a new Google Cloud GKE cluster node pool, encrypted with your customer-managed key (CMK):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud beta container node-pools create NODE\_POOL --cluster=CLUSTER\_NAME --region=REGION --disk-type=pd-standard --disk-size=150 --boot-disk-kms-key=projects/PROJECT/locations/REGION/keyRings/KEY\_RING\_NAME/cryptoKeys/KEY\_NAME
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once your new cluster node pool is working properly, you can delete the original node pool to stop adding invoices to your Google Cloud account.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;⚠️ Take good care to delete the old pool and not the new one!&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud container node-pools delete NODE\_POOL --cluster=CLUSTER\_NAME --region=REGION
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-restrict-network-access-to-gke-clusters"&gt;
  &lt;/a&gt;
  8. Restrict network access to GKE clusters
&lt;/h3&gt;

&lt;p&gt;To limit your exposure to the Internet, make sure your Google Kubernetes Engine (GKE) cluster is configured with a master authorized network. Master authorized networks allow you to &lt;strong&gt;whitelist specific IP addresses and/or IP address ranges to access cluster master endpoints&lt;/strong&gt; using HTTPS.&lt;/p&gt;

&lt;p&gt;Adding a master authorized network can provide &lt;strong&gt;network-level protection&lt;/strong&gt; and additional security benefits to your GKE cluster. Authorized networks allow access to a particular set of trusted IP addresses, such as those originating from a secure network. This helps protect access to the GKE cluster if the cluster’s authentication or authorization mechanism is vulnerable.&lt;/p&gt;

&lt;p&gt;Add authorized networks to the selected GKE cluster to grant access to the cluster master from the trusted IP addresses / IP ranges that you define:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud container clusters update CLUSTER\_NAME --zone=REGION --enable-master-authorized-networks --master-authorized-networks=CIDR\_1,CIDR\_2,...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the previous command, you can specify multiple CIDRs (up to 50) separated by a comma.&lt;/p&gt;

&lt;p&gt;The above are the most important best practices for GKE, since not adhering to them poses a high risk, but there are other security best practices you might want to adhere to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Enable auto-repair for GKE cluster nodes.&lt;/li&gt;
&lt;li&gt;  Enable auto-upgrade for GKE cluster nodes.&lt;/li&gt;
&lt;li&gt;  Enable integrity monitoring for GKE cluster nodes.&lt;/li&gt;
&lt;li&gt;  Enable secure boot for GKE cluster nodes.&lt;/li&gt;
&lt;li&gt;  Use shielded GKE cluster nodes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cloud-logging"&gt;
  &lt;/a&gt;
  Cloud Logging
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://cloud.google.com/logging"&gt;Cloud Logging&lt;/a&gt; is a fully managed service that allows you to store, search, analyze, monitor, and alert log data and events from Google Cloud and Amazon Web Services. You can collect log data from over 150 popular application components, onprem systems, and hybrid cloud systems.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-ensure-that-cloud-audit-logging-is-configured-properly-across-all-services-and-all-users-from-a-project"&gt;
  &lt;/a&gt;
  9. Ensure that Cloud Audit Logging is configured properly across all services and all users from a project
&lt;/h3&gt;

&lt;p&gt;Cloud Audit Logging maintains two audit logs for each project, folder, and organization:&lt;/p&gt;

&lt;p&gt;Admin Activity and Data Access. Admin Activity logs contain log entries for API calls or other administrative actions that modify the configuration or metadata of resources. These are enabled for all services and cannot be configured. On the other hand, &lt;strong&gt;Data Access audit logs&lt;/strong&gt; record API calls that create, modify, or read user-provided data. These are disabled by default and &lt;strong&gt;should be enabled&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It is recommended to have an effective default audit config configured in such a way that you can log user activity tracking, as well as changes (tampering) to user data. Logs should be captured for all users.&lt;/p&gt;

&lt;p&gt;For this, you will need to edit the project’s policy. First, download it as a &lt;code&gt;yaml&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud projects get-iam-policy PROJECT\_ID &amp;gt; /tmp/project\_policy.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, edit &lt;code&gt;/tmp/project_policy.yaml&lt;/code&gt; adding or changing only the audit logs configuration to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;auditConfigs:
- auditLogConfigs:
  - logType: DATA\_WRITE
  - logType: DATA\_READ
  service: allServices
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please note that &lt;code&gt;exemptedMembers&lt;/code&gt; is not set as audit logging should be enabled for all the users. Last, update the policy with the new changes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud projects set-iam-policy PROJECT\_ID /tmp/project\_policy.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;⚠️ Enabling the Data Access audit logs might result in your project being charged for the additional logs usage.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-enable-logs-router-encryption-with-customermanaged-keys"&gt;
  &lt;/a&gt;
  10. Enable logs router encryption with customer-managed keys
&lt;/h3&gt;

&lt;p&gt;Make sure your Google Cloud Logs Router data is encrypted with a customer-managed key (CMK) to give you &lt;strong&gt;complete control over the data encryption and decryption&lt;/strong&gt; process, as well as to meet your compliance requirements.&lt;/p&gt;

&lt;p&gt;You will want to add a policy, binding to the IAM policy of the CMK, to assign the Cloud KMS &lt;em&gt;“CryptoKey Encrypter/Decrypter”&lt;/em&gt; role to the necessary service account.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud kms keys add-iam-policy-binding KEY\_ID --keyring=KEY\_RING\_NAME --location=global --member=serviceAccount:PROJECT\_NUMBER@gcp-sa-logging.iam.gserviceaccount.com --role=roles/cloudkms.cryptoKeyEncrypterDecrypter
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#cloud-sql"&gt;
  &lt;/a&gt;
  Cloud SQL
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://cloud.google.com/sql"&gt;Cloud SQL&lt;/a&gt; is a fully managed relational database service for MySQL, PostgreSQL, and SQL Server. Run the same relational databases you know with their rich extension collections, configuration flags and developer ecosystem, but without the hassle of self management.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-ensure-that-cloud-sql-database-instances-are-not-open-to-the-world"&gt;
  &lt;/a&gt;
  11. Ensure that Cloud SQL database instances are not open to the world
&lt;/h3&gt;

&lt;p&gt;Only trusted / known required IPs should be whitelisted to connect in order to minimize the attack surface of the database server instance. The allowed networks must not have an IP / network configured to 0.0.0.0/0 that allows access to the instance from anywhere in the world. Note that allowed networks apply only to instances with public IPs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud sql instances patch INSTANCE_NAME --authorized-networks=IP_ADDR1,IP_ADDR2...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To prevent new SQL instances from being configured to accept incoming connections from any IP addresses, set up a Restrict Authorized Networks on Cloud SQL instances Organization Policy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bigquery"&gt;
  &lt;/a&gt;
  BigQuery
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://cloud.google.com/bigquery"&gt;BigQuery&lt;/a&gt; is a serverless, highly-scalable, and cost-effective cloud data warehouse with an in-memory BI Engine and machine learning built in.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-ensure-that-bigquery-datasets-are-not-anonymously-or-publicly-accessible"&gt;
  &lt;/a&gt;
  12. Ensure that BigQuery datasets are not anonymously or publicly accessible
&lt;/h3&gt;

&lt;p&gt;You don’t want to allow anonymous or public access in your BigQuery dataset’s IAM policies. Anyone can access the dataset by granting permissions to &lt;code&gt;allUsers&lt;/code&gt; or &lt;code&gt;allAuthenticatedUsers&lt;/code&gt;. &lt;strong&gt;Such access may not be desirable if sensitive data is stored&lt;/strong&gt; on the dataset. Therefore, make sure that anonymous and/or public access to the dataset is not allowed.&lt;/p&gt;

&lt;p&gt;To do this, you will need to edit the data set information. First you need to retrieve said information into your local filesystem:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bq show --format=prettyjson PROJECT\_ID:DATASET\_NAME &amp;gt; dataset\_info.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, in the access section of &lt;code&gt;dataset_info.json&lt;/code&gt;, update the dataset information to remove all roles containing &lt;code&gt;allUsers&lt;/code&gt; or &lt;code&gt;allAuthenticatedUsers&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Finally, update the dataset:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bq update --source=dataset\_info.json PROJECT\_ID:DATASET\_NAME
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can prevent BigQuery dataset from becoming publicly accessible by &lt;a href="https://console.cloud.google.com/projectselector2/iam-admin/orgpolicies/iam-allowedPolicyMemberDomains"&gt;setting up the Domain restricted sharing organization policy&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#compliance-standards-amp-benchmarks"&gt;
  &lt;/a&gt;
  Compliance Standards &amp;amp; Benchmarks
&lt;/h2&gt;

&lt;p&gt;Setting up all the detection rules and maintaining your GCP environment to keep it secure is an ongoing effort that can take a big chunk of your time – even more so if you don’t have some kind of roadmap to guide you during this continuous work.&lt;/p&gt;

&lt;p&gt;You will be better off following the compliance standard(s) relevant to your industry, since they provide all the requirements needed to effectively secure your cloud environment.&lt;/p&gt;

&lt;p&gt;Because of the ongoing nature of securing your infrastructure and complying with a security standard, you might also want to recurrently run benchmarks, such as CIS Google Cloud Platform Foundation Benchmark, which will audit your system and report any unconformity it might find.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Jumping to the cloud opens a new world of possibilities, but it also requires learning a new set of &lt;strong&gt;Google Cloud Platform security best practices&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Each new cloud service you leverage has its own set of potential dangers you need to be aware of.&lt;/p&gt;

&lt;p&gt;Luckily, cloud native security tools like &lt;a href="http://falco.org/"&gt;Falco&lt;/a&gt; and &lt;a href="https://cloudcustodian.io/"&gt;Cloud Custodian&lt;/a&gt; can guide you through these &lt;strong&gt;Google Cloud Platform security best practices&lt;/strong&gt;, and help you meet your compliance requirements.&lt;/p&gt;

</description>
      <category>gcp</category>
      <category>cloud</category>
      <category>security</category>
      <category>devops</category>
    </item>
    <item>
      <title>Web design principles</title>
      <author>Rakesh Potnuru</author>
      <pubDate>Mon, 29 Nov 2021 18:14:46 +0000</pubDate>
      <link>https://dev.to/rakeshpotnuru/web-design-principles-1p2k</link>
      <guid>https://dev.to/rakeshpotnuru/web-design-principles-1p2k</guid>
      <description>&lt;p&gt;When people visit your website, the first thing they feel is the design. Even if your website has great functionality, poor design can make those functionalities worthless. So in this blog, I will introduce a few web design principles and their history. I will also share some resources that can help you to design your website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Let's get started
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#1-color"&gt;
  &lt;/a&gt;
  1. Color
&lt;/h2&gt;

&lt;p&gt;Choosing a right color is very important and you can't just choose your favorite color. &lt;br&gt;
A colorful website does not mean using all the different colors, be consistent and choose a single color as your theme color. When picking colors think about the mood of your color palette.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;u&gt;The five moods of color&lt;/u&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-red"&gt;
  &lt;/a&gt;
  - Red
&lt;/h3&gt;

&lt;p&gt;Red resembles &lt;strong&gt;Love&lt;/strong&gt;, &lt;strong&gt;Energy&lt;/strong&gt; and &lt;strong&gt;Intensity&lt;/strong&gt;. It is the most powerful, strongest and brightest in the color wheel. Red theme is mostly used in e-commerce, entertainment and fashion websites.&lt;br&gt;
With great power comes great responsibility - using too much red creates a negative impression on your design. Also, red is not suitable for nature-related websites.&lt;br&gt;
Examples:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--owoaR8bc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzw1y8ssa4mxbh5rjffp.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--owoaR8bc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzw1y8ssa4mxbh5rjffp.gif" alt="red themed websites" width="880" height="451"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-yellow"&gt;
  &lt;/a&gt;
  - Yellow
&lt;/h3&gt;

&lt;p&gt;Yellow is for &lt;strong&gt;Joy&lt;/strong&gt;, &lt;strong&gt;Intellect&lt;/strong&gt; and &lt;strong&gt;Attention&lt;/strong&gt;. You should be careful with yellow because using bright yellow as background can hurt user eyes especially when your website needs to be used for a long time. Yellow is great for headings, logos, buttons, etc. So to sum up, if your website is something that users need to spend more time then yellow is not the best choice.&lt;/p&gt;

&lt;p&gt;Good examples of yellow themed websites:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U7CMlrwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05vcal641ypyvt4aho7o.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U7CMlrwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05vcal641ypyvt4aho7o.gif" alt="yellow themed websites" width="801" height="487"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-green"&gt;
  &lt;/a&gt;
  - Green
&lt;/h3&gt;

&lt;p&gt;Green is about &lt;strong&gt;Freshness&lt;/strong&gt;, &lt;strong&gt;Safety&lt;/strong&gt; and &lt;strong&gt;Growth&lt;/strong&gt;. That's why most grocery, nutrition, organic products companies use green color palette. That's how they convey the freshness of their products digitally. So if your website is food or nature related, then green is your choice.&lt;/p&gt;

&lt;p&gt;Here are some examples:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mZfV3LBm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/89spmp6n566oiuz7zmii.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mZfV3LBm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/89spmp6n566oiuz7zmii.gif" alt="green themed websites" width="880" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-blue"&gt;
  &lt;/a&gt;
  - Blue
&lt;/h3&gt;

&lt;p&gt;Blue - &lt;strong&gt;Stability&lt;/strong&gt;, &lt;strong&gt;Trust&lt;/strong&gt;, and &lt;strong&gt;Serenity&lt;/strong&gt;. Now you know why most of the financial companies, cryptocurrency companies websites are blue. Also some major social media sites like &lt;a href="https://twitter.com/rakesh_at_tweet"&gt;twitter&lt;/a&gt;, linkedin are blue themed because they make people feel safe, trust and positive using their platform. So use social media to spread positivity 😉.&lt;/p&gt;

&lt;p&gt;Examples:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--htuGaI0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kaz0xrb08m07ibhw3w86.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--htuGaI0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kaz0xrb08m07ibhw3w86.gif" alt="blue themed websites" width="880" height="433"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-purple"&gt;
  &lt;/a&gt;
  - Purple
&lt;/h3&gt;

&lt;p&gt;Finally purple, purple shows &lt;strong&gt;Royalty&lt;/strong&gt;, &lt;strong&gt;Wealth&lt;/strong&gt; and &lt;strong&gt;Femininity&lt;/strong&gt;. The words say it all. So the websites which are targeted at women will more likely use purple.&lt;/p&gt;

&lt;p&gt;Examples:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fIVG73pn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxr8aiojcp5ocngimj95.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fIVG73pn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxr8aiojcp5ocngimj95.gif" alt="purple themed websites" width="880" height="490"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hence, depending upon what message you want to convey users through your website choose the right color.&lt;br&gt;
Of course you don't just use a single color throughout your website, so use these two tools to combine colors matching your theme color.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://color.adobe.com/create/color-wheel"&gt;Adobe Color&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://colorhunt.co"&gt;Color Hunt&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#2-typography"&gt;
  &lt;/a&gt;
  2. Typography
&lt;/h2&gt;

&lt;p&gt;Typography is another important part of a website. I saw so many websites fail at choosing the font. If your website has more reading content then font really matters. Let's see some history about fonts.&lt;br&gt;
There are two large font families.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-serif"&gt;
  &lt;/a&gt;
  - Serif
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HN716mV---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ipo4gzd4qc0h5425eaa7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HN716mV---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ipo4gzd4qc0h5425eaa7.jpg" alt="F" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Serif font is inspired by olden days marble carvings. It is hard to carve 90 degree angles, so that's why serif font has triangle type curvature. Serif typeface makes you feel serious, authoritative and old. Serif has many sub-types like old style, transitional and modern. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--flTcrKcj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/auaqgnpec6uy32zuaypr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--flTcrKcj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/auaqgnpec6uy32zuaypr.jpg" alt="E" width="473" height="631"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like colors fonts also have moods.&lt;br&gt;
Now serif font is seen as &lt;strong&gt;Traditional&lt;/strong&gt;, &lt;strong&gt;Stable&lt;/strong&gt; and &lt;strong&gt;Respectable&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;VOGUE is the best example for serif typeface.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ut4-nd18--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5sa917z17j24st9xdnq1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ut4-nd18--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5sa917z17j24st9xdnq1.jpg" alt="vogue" width="496" height="600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-sans-serif"&gt;
  &lt;/a&gt;
  - Sans Serif
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DeLw1jZi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6wht6ktsllm5o0rqe9ww.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DeLw1jZi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6wht6ktsllm5o0rqe9ww.jpg" alt="sans f" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sans serif is &lt;strong&gt;Sensible&lt;/strong&gt;, &lt;strong&gt;Simple&lt;/strong&gt; and &lt;strong&gt;Straightforward&lt;/strong&gt;. Sans serif have perfect right angles. Mostly startups tend to use sans serif typeface. You can use sans serif for body text because it makes text more readable.&lt;/p&gt;

&lt;p&gt;Tip-1 💡: When choosing fonts don't choose more than two different fonts.&lt;br&gt;
Tip-2 💡: Avoid using these fonts - &lt;strong&gt;comic sans&lt;/strong&gt;, &lt;strong&gt;kristen&lt;/strong&gt;, &lt;strong&gt;curlz&lt;/strong&gt;, &lt;strong&gt;viner&lt;/strong&gt; and &lt;strong&gt;papyrus&lt;/strong&gt;. These fonts are difficult to read and are only for fun.&lt;/p&gt;

&lt;p&gt;Before deciding a font family, go through &lt;a href="https://www.cssfontstack.com"&gt;cssfontstack&lt;/a&gt; to know which fonts are safe to use.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#3-user-interface-ui"&gt;
  &lt;/a&gt;
  3. User Interface (UI)
&lt;/h2&gt;

&lt;p&gt;After learning about color theory and typography, the next thing you need to know about is User Interface design. UI is about how you use and arrange things on your website. There are five factors of UI - &lt;strong&gt;1.Hierarchy&lt;/strong&gt;, &lt;strong&gt;2.Layout&lt;/strong&gt;, &lt;strong&gt;3.Alignment&lt;/strong&gt; &lt;strong&gt;4.Whitespace&lt;/strong&gt; and &lt;strong&gt;5.Audience&lt;/strong&gt;. Let's understand these factors with examples.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-hierarchy"&gt;
  &lt;/a&gt;
  - Hierarchy
&lt;/h3&gt;

&lt;p&gt;A quick example of text hierarchy:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gBxMvwAa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t8e24eiiq7sukhp05qa5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gBxMvwAa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t8e24eiiq7sukhp05qa5.png" alt="text hierarchy example" width="880" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here the main thing is whose certificate is that and for that left one is more appropriate. User may not have time to read all the text, for that highlight the most important information first hierarchically.&lt;/p&gt;

&lt;p&gt;Example for color hierarchy:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a7dkvTXJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62dwyq11s4psv5xbikku.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a7dkvTXJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62dwyq11s4psv5xbikku.png" alt="color hierarchy example" width="880" height="452"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See the spots highlighted by green boxes. These are the things most of the people consider about a product, right? So that is color hierarchy. Use color cleverly to highlight the things that need to attract the users.&lt;/p&gt;

&lt;p&gt;Example for size hierarchy:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jTHUarO6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8nx5xybkyw8hvnokd6wa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jTHUarO6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8nx5xybkyw8hvnokd6wa.png" alt="size hierarchy example" width="880" height="451"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now see this Netflix signup page. Here 1 &amp;gt; 2 &amp;gt; 3 in size. The first thing they want to show visitors is what Netflix is about. The second preferred thing is they want your email. And the third thing is small compared to other two because they don't consider it that much.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-layout"&gt;
  &lt;/a&gt;
  - Layout
&lt;/h3&gt;

&lt;p&gt;Layout is about how you arrange your website elements. Don't be so bland by putting everything at same place like Wikipedia. Separate elements to different parts. If there is so much text, cut each line to 60 characters. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9DUeJ4Ey--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z7cuuoz9zama73x1vehq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9DUeJ4Ey--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z7cuuoz9zama73x1vehq.gif" alt="layout example" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check this out - &lt;a href="https://csslayout.io"&gt;csslayout&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-alignment"&gt;
  &lt;/a&gt;
  - Alignment
&lt;/h3&gt;

&lt;p&gt;Alignment is about how you position an element relative to other element.&lt;/p&gt;

&lt;p&gt;See this example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b1bXJ_FY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ndzp9dlz8m974e3ziem.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b1bXJ_FY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ndzp9dlz8m974e3ziem.gif" alt="alignment example" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Got the difference? Even both websites has same content just alignment of different elements makes big difference.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-whitespace"&gt;
  &lt;/a&gt;
  - Whitespace
&lt;/h3&gt;

&lt;p&gt;Whitespace refers to space around elements.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V8jnradB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcte0vsmilzw8vrqkwea.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V8jnradB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcte0vsmilzw8vrqkwea.gif" alt="whitespace example" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-audience"&gt;
  &lt;/a&gt;
  - Audience
&lt;/h3&gt;

&lt;p&gt;Yes, audience is a factor of UI. Know your target audience, design for your audience. For example, the theme for &lt;strong&gt;YouTube&lt;/strong&gt; and &lt;strong&gt;YouTube kids&lt;/strong&gt; is different.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PmO_0tes--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ulee23axj8t8ecfr38av.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PmO_0tes--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ulee23axj8t8ecfr38av.gif" alt="audience example" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All the games websites theme is completely different from other websites.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--axUwWA8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9vchqn84r6bt4i84oo3t.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--axUwWA8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9vchqn84r6bt4i84oo3t.gif" alt="games websites" width="880" height="449"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#4-user-experience-ux"&gt;
  &lt;/a&gt;
  4. User Experience (UX)
&lt;/h2&gt;

&lt;p&gt;Let's move onto UX. Until now we tried to attract the users, now we need to impress the user. While UI attracts the user, UX makes the user comfortable using your website. Again, there are five factors you need to consider in UX - &lt;strong&gt;1.Simplicity&lt;/strong&gt;, &lt;strong&gt;2.Consistency&lt;/strong&gt;, &lt;strong&gt;3.Reading Patterns&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-simplicity"&gt;
  &lt;/a&gt;
  - Simplicity
&lt;/h3&gt;

&lt;p&gt;Too much content at same place brings headache to the users as they can't understand where to look. Keep things simple by arranging and reducing the content. Simple is beautiful. Amazon website has bad UI and UX(If you know the reason comment below), but there are so many e-commerce websites with simple design.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-consistency"&gt;
  &lt;/a&gt;
  - Consistency
&lt;/h3&gt;

&lt;p&gt;Consistency makes your website easy to understand and easy to navigate, especially if your website is used by non-tech people or kids or old people. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-reading-patterns"&gt;
  &lt;/a&gt;
  - Reading Patterns
&lt;/h3&gt;

&lt;p&gt;Reading patterns refers to how a user looks your website. There are some layouts called Z-layout, F-layout etc.., which can used to design the layout of your elements.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#flayout"&gt;
  &lt;/a&gt;
  F-Layout
&lt;/h4&gt;

&lt;p&gt;In f-layout important content will be on left side.&lt;br&gt;
See this example,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FKXBS-8U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sdmjuak824fop9g50t4g.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FKXBS-8U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sdmjuak824fop9g50t4g.jpg" alt="f-layout example" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#zlayout"&gt;
  &lt;/a&gt;
  Z-Layout
&lt;/h4&gt;

&lt;p&gt;Z-Layout includes logo(1), signup button(2) or something like that, some text(3) and call to action button(4).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l9KRenb3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ofpfcrlzb47f9c3zxvj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l9KRenb3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ofpfcrlzb47f9c3zxvj.jpg" alt="z-layout example" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-all-platform-design"&gt;
  &lt;/a&gt;
  5. All platform design
&lt;/h2&gt;

&lt;p&gt;At the end of day, you don't just create website for desktop only, it needs to be responsive among different devices.&lt;/p&gt;




&lt;p&gt;So, if you follow these principles, then you can make a great design.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6DxpB11G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rc4hli4014g008j02b51.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6DxpB11G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rc4hli4014g008j02b51.gif" alt="great" width="498" height="259"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;What other principles would you consider for a good web design? &lt;br&gt;
Comment below 👇&lt;/p&gt;




&lt;p&gt;Hope this helps you!&lt;br&gt;
Save for reference.&lt;br&gt;
Follow for more awesomeness 😀.&lt;br&gt;
You can connect with me on &lt;a href="https://twitter.com/rakesh_at_tweet"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/rakesh-potnuru-067a8b1b1"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>design</category>
    </item>
    <item>
      <title>How To Improve Your Productivity.</title>
      <author>Bonnie!</author>
      <pubDate>Mon, 29 Nov 2021 18:08:32 +0000</pubDate>
      <link>https://dev.to/the_greatbonnie/how-to-improve-your-productivity-4297</link>
      <guid>https://dev.to/the_greatbonnie/how-to-improve-your-productivity-4297</guid>
      <description>&lt;p&gt;I have been struggling to get things done because of procrastinating and a lack of self-discipline.&lt;/p&gt;

&lt;p&gt;I decided to bring that to an end and research ways I could improve my productivity to get more things done.&lt;/p&gt;

&lt;p&gt;I discovered some of the methods I have been using and that you too can use to beat procrastination, build self-discipline and get more things done.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-the-202020-formula"&gt;
  &lt;/a&gt;
  1. The 20/20/20 Formula
&lt;/h3&gt;

&lt;p&gt;This is a morning routine I have installed in my life to help me manage my mornings.&lt;/p&gt;

&lt;p&gt;It involves dividing the first hour after waking up into three sections of twenty minutes each.&lt;/p&gt;

&lt;p&gt;The first twenty minutes of the formula require that you move.&lt;/p&gt;

&lt;p&gt;It involves doing some exercise or workout first thing every morning.&lt;/p&gt;

&lt;p&gt;This will revolutionize the quality of your days.&lt;/p&gt;

&lt;p&gt;The second twenty minutes are supposed to be for reflecting, praying, meditating, or planning for the day.&lt;/p&gt;

&lt;p&gt;This will help you boost your self-awareness, dissolve stress, fuel your happiness and restore your inner peace.&lt;/p&gt;

&lt;p&gt;The third twenty minutes are centered around ensuring that you are inspired or motivated.&lt;/p&gt;

&lt;p&gt;Use this time to watch or read something that inspires you or motivates you to go for what you want for yourself in life.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-the-90901-rule"&gt;
  &lt;/a&gt;
  2. The 90/90/1 Rule
&lt;/h3&gt;

&lt;p&gt;This rule suggests that for the next 90 days, schedule yourself to invest the first 90 minutes of your workday on one activity that when completed at world-class, will cause you to own your field.&lt;/p&gt;

&lt;p&gt;This 90-minute period must be completely free of any noise and interruptions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-the-6010-method"&gt;
  &lt;/a&gt;
  3. The 60/10 Method
&lt;/h3&gt;

&lt;p&gt;This method suggests that you work at your best for 60 minutes straight while sitting or standing quietly.&lt;/p&gt;

&lt;p&gt;Just concentrate and create the highest results you can possibly make.&lt;/p&gt;

&lt;p&gt;After your 60-minute productivity sprint is done, refuel for 10 minutes.&lt;/p&gt;

&lt;p&gt;Start over again and repeat.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-the-daily-5-concept"&gt;
  &lt;/a&gt;
  4. The Daily 5 Concept
&lt;/h3&gt;

&lt;p&gt;This concept suggests that you list five things you wish to accomplish over the day.&lt;/p&gt;

&lt;p&gt;Start with the most important thing that needs to get done and move in that order.&lt;/p&gt;

&lt;p&gt;This will help you feel that your day was one that was well spent.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-the-weekly-design-system"&gt;
  &lt;/a&gt;
  5. The Weekly Design System
&lt;/h3&gt;

&lt;p&gt;This system suggests that you set aside 30 minutes early each Sunday morning to create your "Blueprint for a beautiful week."&lt;/p&gt;

&lt;p&gt;Start the process by reflecting on the highlights from the just-finished week. &lt;/p&gt;

&lt;p&gt;Then record the lessons you learned and improvements for making the coming week.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>motivation</category>
    </item>
    <item>
      <title>Learn Python</title>
      <author>Vijay Patel</author>
      <pubDate>Mon, 29 Nov 2021 17:52:44 +0000</pubDate>
      <link>https://dev.to/easyawslearn/learn-python-fo5</link>
      <guid>https://dev.to/easyawslearn/learn-python-fo5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Python&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Python is an interpreted high-level general-purpose programming language. Its design philosophy emphasizes code readability with its use of significant indentation. Its language constructs as well as its object-oriented approach aim to help programmers write clear, logical code for small and large-scale projects.&lt;/p&gt;

&lt;p&gt;It supports multiple programming paradigms, including structured (particularly, procedural), object-oriented and functional programming. It is often described as a "batteries included" language due to its comprehensive standard library.&lt;/p&gt;

&lt;p&gt;It was created by Guido van Rossum, and released in 1991.&lt;/p&gt;

&lt;p&gt;It is used for:&lt;br&gt;
web development (server-side),&lt;br&gt;
software development,&lt;br&gt;
mathematics,&lt;br&gt;
system scripting.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/25J4Ruv7E_U"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cLJm5rAA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s7fwblbz1pr4z97sreku.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What can Python do?&lt;/strong&gt;&lt;br&gt;
Python can be used on a server to create web applications.&lt;br&gt;
Python can be used alongside software to create workflows.&lt;br&gt;
Python can connect to database systems. It can also read and modify files.&lt;br&gt;
Python can be used to handle big data and perform complex mathematics.&lt;br&gt;
Python can be used for rapid prototyping, or for production-ready software development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why Python?&lt;/strong&gt;&lt;br&gt;
Python works on different platforms (Windows, Mac, Linux, Raspberry Pi, etc).&lt;br&gt;
Python has a simple syntax similar to the English language.&lt;br&gt;
Python has syntax that allows developers to write programs with fewer lines than some other programming languages.&lt;br&gt;
Python runs on an interpreter system, meaning that code can be executed as soon as it is written. This means that prototyping can be very quick.&lt;br&gt;
Python can be treated in a procedural way, an object-oriented way or a functional way.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=6YVS-qUxukc&amp;amp;t=74s"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VIPToo8q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xhnddhekdd4r0px9t8r.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#python-installation"&gt;
  &lt;/a&gt;
  Python Installation:
&lt;/h2&gt;

&lt;p&gt;Many PCs and Macs will have python already installed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=ycTc1zAR_iA&amp;amp;t=4s"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h3l0s1xU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltb2ok6th4n2axx6acvl.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To check if you have python installed on a Windows PC, search in the start bar for Python or run the following on the Command Line&lt;br&gt;
 &lt;code&gt;(cmd.exe):&lt;br&gt;
   C:\Users\Your Name&amp;gt;python --version&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To check if you have python installed on a Linux or Mac, then on linux open the command line or on Mac open the Terminal and type:&lt;br&gt;
&lt;code&gt;python --version&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#python-syntax-and-comments"&gt;
  &lt;/a&gt;
  Python Syntax and Comments:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=ncbTQeqUb90&amp;amp;t=49s"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--htSnUJtV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vsfir2fyznpssihhd9zk.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Python syntax can be executed by writing directly in the Command Line:&lt;br&gt;
&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; print("Hello, World!")&lt;br&gt;
Hello, World!&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Or by creating a python file on the server, using the .py file extension, and running it in the Command Line:&lt;br&gt;
C:\Users\Your Name&amp;gt;python myfile.py&lt;br&gt;
Python Indentation:&lt;br&gt;
Indentation refers to the spaces at the beginning of a code line.&lt;br&gt;
Where in other programming languages the indentation in code is for readability only, the indentation in Python is very important.&lt;br&gt;
Python uses indentation to indicate a block of code.&lt;br&gt;
Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if 5 &amp;gt; 2:
  print("Five is greater than two!")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Single-Line Comments:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Comments can be used to explain Python code.&lt;br&gt;
Comments can be used to make the code more readable.&lt;br&gt;
Comments can be used to prevent execution when testing code.&lt;/p&gt;

&lt;p&gt;Comments start with a #, and Python will ignore them:&lt;br&gt;
Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#This is a comment
print("Hello, World!")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;**Multi-Line Comments:&lt;br&gt;
**Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"""
This is a comment
written in
more than just one line
"""
print("Hello, World!")

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#python-variable-and-data-types"&gt;
  &lt;/a&gt;
  Python Variable and Data Types:
&lt;/h2&gt;

&lt;p&gt;Variables are containers for storing data values.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=raShdX__8BE&amp;amp;t=5s"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kwjDpi20--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xcnqabo09koy7lna64ra.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Creating Variables:&lt;/strong&gt;&lt;br&gt;
Python has no command for declaring a variable.&lt;br&gt;
A variable is created the moment you first assign a value to it.&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;x = 5
y = "John"
print(x)
print(y)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Get the Type:&lt;/strong&gt;&lt;br&gt;
You can get the data type of a variable with the type() function.&lt;br&gt;
Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;x = 5
y = "John"
print(type(x))
print(type(y))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;**Case-Sensitive:&lt;br&gt;
**Variable names are case-sensitive.&lt;br&gt;
Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;This will create two variables:
a = 4
A = "Sally"
#A will not overwrite a
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Built-in Data Types:&lt;/strong&gt;&lt;br&gt;
In programming, data type is an important concept.&lt;br&gt;
Variables can store data of different types, and different types can do different things.&lt;br&gt;
Python has the following data types built-in by default, in these categories:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Text Type: str&lt;br&gt;
Numeric Types: int, float, complex&lt;br&gt;
Sequence Types: list, tuple, range&lt;br&gt;
Mapping Type: dict&lt;br&gt;
Set Types: set, frozenset&lt;br&gt;
Boolean Type: bool&lt;br&gt;
Binary Types: bytes, bytearray, memoryview&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#python-conditions-and-if-statements"&gt;
  &lt;/a&gt;
  Python Conditions and If statements:
&lt;/h2&gt;

&lt;p&gt;Python supports the usual logical conditions from mathematics:&lt;br&gt;
Equals: a == b&lt;br&gt;
Not Equals: a != b&lt;br&gt;
Less than: a &amp;lt; b&lt;br&gt;
Less than or equal to: a &amp;lt;= b&lt;br&gt;
Greater than: a &amp;gt; b&lt;br&gt;
Greater than or equal to: a &amp;gt;= b&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=BasLA6W7Yhs"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nDS5kxdh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7l34rff5a8d2yq8ox9ia.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These conditions can be used in several ways, most commonly in "if statements" and loops.&lt;br&gt;
An "if statement" is written by using the if keyword.&lt;/p&gt;

&lt;p&gt;Example&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If statement:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;a = 33
b = 200
if b &amp;gt; a:
  print("b is greater than a")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Indentation:&lt;/strong&gt;&lt;br&gt;
Python relies on indentation (whitespace at the beginning of a line) to define scope in the code. Other programming languages often use curly-brackets for this purpose.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Elif:&lt;/strong&gt;&lt;br&gt;
The elif keyword is pythons way of saying "if the previous conditions were not true, then try this condition".&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;a = 33
b = 33
if b &amp;gt; a:
  print("b is greater than a")
elif a == b:
  print("a and b are equal")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Getting the Data Type:&lt;/strong&gt;&lt;br&gt;
You can get the data type of any object by using the type() function:&lt;br&gt;
Example&lt;br&gt;
Print the data type of the variable x:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;x = 5
print(type(x))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#python-loops"&gt;
  &lt;/a&gt;
  Python Loops:
&lt;/h2&gt;

&lt;p&gt;Python has two primitive loop commands:&lt;br&gt;
while loops&lt;br&gt;
for loops&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The while Loop:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=89aw4fD9YeQ&amp;amp;t=19s"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--knQie06p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ojvvhvrwl4qqwyd5d992.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With the while loop we can execute a set of statements as long as a condition is true.&lt;br&gt;
Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Print i as long as i is less than 6:
i = 1
while i &amp;lt; 6:
  print(i)
  i += 1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Python For Loops:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A for loop is used for iterating over a sequence (that is either a list, a tuple, a dictionary, a set, or a string).&lt;br&gt;
This is less like the for keyword in other programming languages, and works more like an iterator method as found in other object-orientated programming languages.&lt;br&gt;
With the for loop we can execute a set of statements, once for each item in a list, tuple, set etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=cSdunnrI0ds"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o6IHnUJr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2q12l58b0qq0jft3kj6.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Example&lt;/p&gt;

&lt;p&gt;Print each fruit in a fruit list:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fruits = ["apple", "banana", "cherry"]
for x in fruits:
  print(x)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Looping Through a String:&lt;/strong&gt;&lt;br&gt;
Even strings are iterable objects, they contain a sequence of characters:&lt;br&gt;
Example&lt;br&gt;
Loop through the letters in the word "banana":&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for x in "banana":
  print(x)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#break-continue-and-pass"&gt;
  &lt;/a&gt;
  Break, Continue, and Pass:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=css_ijwXOHw"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IlUZ0SpL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wxjp3vf0r689jrcm1fov.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Break Statement:&lt;/strong&gt;&lt;br&gt;
With the break statement we can stop the loop before it has looped through all the items:&lt;br&gt;
Example&lt;br&gt;
Exit the loop when x is "banana":&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fruits = ["apple", "banana", "cherry"]
for x in fruits:
  print(x)
  if x == "banana":
    break
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Continue Statement:&lt;/strong&gt;&lt;br&gt;
With the continue statement we can stop the current iteration of the loop, and continue with the next:&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
Do not print banana:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fruits = ["apple", "banana", "cherry"]
for x in fruits:
  if x == "banana":
    continue
  print(x)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Pass Statement:&lt;/strong&gt;&lt;br&gt;
for loops cannot be empty, but if you for some reason have a for loop with no content, put in the pass statement to avoid getting an error.&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for x in [0, 1, 2]:
  pass
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#python-for-else"&gt;
  &lt;/a&gt;
  Python For Else:
&lt;/h2&gt;

&lt;p&gt;The else keyword in a for loop specifies a block of code to be executed when the loop is finished:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=1-woqHzS9n0&amp;amp;t=2s"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZiavEFyS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o6dmp15jgsx0jir45oxh.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
Print all numbers from 0 to 5, and print a message when the loop has ended:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for x in range(6):
  print(x)
else:
  print("Finally finished!")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#python-functions"&gt;
  &lt;/a&gt;
  Python Functions:
&lt;/h2&gt;

&lt;p&gt;A function is a block of code which only runs when it is called.&lt;br&gt;
You can pass data, known as parameters, into a function.&lt;br&gt;
A function can return data as a result.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Qy6bVkOegwU&amp;amp;t=37s"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--te4iQ_KE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iyelhy1m4x2qkm0rj1ql.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Creating a Function:&lt;/strong&gt;&lt;br&gt;
In Python a function is defined using the def keyword:&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def my_function():
  print("Hello from a function")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Calling a Function:&lt;/strong&gt;&lt;br&gt;
To call a function, use the function name followed by parenthesis:&lt;br&gt;
Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def my_function():
  print("Hello from a function")
my_function()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Arguments:&lt;/strong&gt;&lt;br&gt;
Information can be passed into functions as arguments.&lt;br&gt;
Arguments are specified after the function name, inside the parentheses. You can add as many arguments as you want, just separate them with a comma.&lt;br&gt;
The following example has a function with one argument (fname). When the function is called, we pass along a first name, which is used inside the function to print the full name:&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def my_function(fname):
  print(fname + " Refsnes")

my_function("Emil")
my_function("Tobias")
my_function("Linus")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Number of Arguments:&lt;/strong&gt;&lt;br&gt;
By default, a function must be called with the correct number of arguments. Meaning that if your function expects 2 arguments, you have to call the function with 2 arguments, not more, and not less.&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
This function expects 2 arguments, and gets 2 arguments:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def my_function(fname, lname):
  print(fname + " " + lname)

my_function("Emil", "Refsnes")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Default Parameter Value:&lt;/strong&gt;&lt;br&gt;
The following example shows how to use a default parameter value.&lt;br&gt;
If we call the function without argument, it uses the default value:&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def my_function(country = "Norway"):
  print("I am from " + country)

my_function("Sweden")
my_function("India")
my_function()
my_function("Brazil")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#python-lambda"&gt;
  &lt;/a&gt;
  Python Lambda:
&lt;/h2&gt;

&lt;p&gt;A lambda function is a small anonymous function.&lt;br&gt;
A lambda function can take any number of arguments, but can only have one expression.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=VkGBzKq7dRs&amp;amp;t=3s"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gOsYGrdt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9pm4jz3fejx5vr2fb8p.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;lambda arguments : expression&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The expression is executed and the result is returned:&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
Add 10 to argument a, and return the result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;x = lambda a : a + 10
print(x(5))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Why Use Lambda Functions?&lt;/strong&gt;&lt;br&gt;
The power of lambda is better shown when you use them as an anonymous function inside another function.&lt;br&gt;
Say you have a function definition that takes one argument, and that argument will be multiplied with an unknown number:&lt;br&gt;
&lt;code&gt;def myfunc(n):&lt;br&gt;
  return lambda a : a * n&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Use that function definition to make a function that always doubles the number you send in:&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def myfunc(n):
  return lambda a : a * n

mydoubler = myfunc(2)

print(mydoubler(11))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#python-arrays"&gt;
  &lt;/a&gt;
  Python Arrays:
&lt;/h2&gt;

&lt;p&gt;Note: Python does not have built-in support for Arrays, but Python Lists can be used instead.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=G7z19LQcH3g"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PGO7k-0q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wtxyj8x4elk5o0dxseoh.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is an Array?&lt;/strong&gt;&lt;br&gt;
An array is a special variable, which can hold more than one value at a time.&lt;br&gt;
If you have a list of items (a list of car names, for example), storing the cars in single variables could look like this:&lt;br&gt;
&lt;code&gt;car1 = "Ford"&lt;br&gt;
car2 = "Volvo"&lt;br&gt;
car3 = "BMW"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;However, what if you want to loop through the cars and find a specific one? And what if you had not 3 cars, but 300?&lt;br&gt;
The solution is an array!&lt;br&gt;
An array can hold many values under a single name, and you can access the values by referring to an index number.&lt;/p&gt;

&lt;p&gt;Access the Elements of an Array:&lt;br&gt;
You refer to an array element by referring to the index number.&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
Get the value of the first array item:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;x = cars[0]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Adding Array Elements:&lt;/strong&gt;&lt;br&gt;
You can use the append() method to add an element to an array.&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
Add one more element to the cars array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cars.append("Honda")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Removing Array Elements:&lt;/strong&gt;&lt;br&gt;
You can use the pop() method to remove an element from the array.&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
Delete the second element of the cars array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cars.pop(1)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also use the remove() method to remove an element from the array.&lt;br&gt;
Example&lt;br&gt;
Delete the element that has the value "Volvo":&lt;br&gt;
&lt;strong&gt;cars.remove("Volvo")&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>python</category>
    </item>
  </channel>
</rss>
