<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>I made a 'new tab' browser extension/theme</title>
      <author>Virej Dasani</author>
      <pubDate>Sun, 18 Apr 2021 05:46:38 +0000</pubDate>
      <link>https://dev.to/virejdasani/i-made-a-browser-new-tab-theme-1pkd</link>
      <guid>https://dev.to/virejdasani/i-made-a-browser-new-tab-theme-1pkd</guid>
      <description>&lt;h2&gt;
  &lt;a href="#luminous-new-tab"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/virejdasani/LuminousNewTab/blob/master/README.md"&gt;Luminous New Tab&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;is a beautiful and open-source new tab browser extension that has an animated gradient background. New tabs will show the time, weather and let you do Google searches too! &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BWXQjgYy9-w"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Luminous New Tab is available for &lt;a href="https://chrome.google.com/webstore/detail/luminous-new-tab/gakanaedbiohimbhbddcilejbpdmobdo"&gt;Google Chrome&lt;/a&gt; and &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/luminous-tab/"&gt;Firefox&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I made Luminous New Tab because of the lack of minimal, ad-free New Tab extensions. I feel it gives a nice vibe to the browser and is quite useful. &lt;br&gt;
Let me know what you think about Luminous New Tab&lt;br&gt;
And if you decide to get it for your browser, please leave a review, thanks!&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#download-for-chrome-or-firefox"&gt;
  &lt;/a&gt;
  Download for &lt;a href="https://chrome.google.com/webstore/detail/luminous-new-tab/gakanaedbiohimbhbddcilejbpdmobdo"&gt;Chrome&lt;/a&gt; or &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/luminous-tab/"&gt;Firefox&lt;/a&gt;
&lt;/h4&gt;
&lt;h4&gt;
  &lt;a href="#luminous-new-tab-on-github"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/virejdasani/LuminousNewTab/"&gt;Luminous New Tab on GitHub&lt;/a&gt;
&lt;/h4&gt;
&lt;h3&gt;
  &lt;a href="#follow-me-on-dev"&gt;
  &lt;/a&gt;
  Follow me on &lt;a href="https://dev.to/virejdasani/"&gt;Dev&lt;/a&gt;
&lt;/h3&gt;
&lt;h3&gt;
  &lt;a href="#check-out-some-of-my-other-projects-and-follow-me-on-my-socials-from-my-website-here"&gt;
  &lt;/a&gt;
  Check out some of my other projects and follow me on my socials from my website &lt;a href="http://www.virej.ml/"&gt;here&lt;/a&gt;
&lt;/h3&gt;
&lt;/blockquote&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>‚ú®10 CMD Commands to make you stand out!‚ú®</title>
      <author>Kaiwalya Koparkar</author>
      <pubDate>Sun, 18 Apr 2021 05:34:46 +0000</pubDate>
      <link>https://dev.to/kaiwalyakoparkar/10-cmd-commands-to-make-you-stand-out-5hgk</link>
      <guid>https://dev.to/kaiwalyakoparkar/10-cmd-commands-to-make-you-stand-out-5hgk</guid>
      <description>&lt;p&gt;In this blog, I am not going to describe the common commands. Here I am going to tell you the commands which will help you stand out of the crowd using a command prompt&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-assoc"&gt;
  &lt;/a&gt;
  üìå 1. Assoc:
&lt;/h2&gt;

&lt;p&gt;Most files in Windows are associated with a specific program that is assigned to open the file by default. At times, remembering these associations can become confusing. You can remind yourself by entering the command assoc to display a full list of filename extensions and program associations.&lt;br&gt;
You can also extend the command to change file associations. For example, &lt;code&gt;assoc .txt=&lt;/code&gt; will change the file association for text files to whatever program you enter after the equal sign.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-cipher"&gt;
  &lt;/a&gt;
  üìå 2. Cipher:
&lt;/h2&gt;

&lt;p&gt;Deleting files on a mechanical hard drive doesn't really delete them at all. Instead, it marks the files as no longer accessible and the space they took up as free. The files remain recoverable until the system overwrites them with new data, which can take some time.&lt;br&gt;
The &lt;code&gt;cipher&lt;/code&gt; command, however, wipes a directory by writing random data to it. To wipe your C drive, for example, you'd use the &lt;code&gt;cipher /w:d&lt;/code&gt; command, which will wipe free space on the drive.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-driverquery"&gt;
  &lt;/a&gt;
  üìå 3. Driverquery
&lt;/h2&gt;

&lt;p&gt;Drivers remain among the most important software installed on a PC. Improperly configured or missing drivers can cause all sorts of trouble, so it's good to have access to a list of what's on your PC. That's exactly what the driver query command does. You can extend it to &lt;code&gt;driver query -v&lt;/code&gt; to obtain more information, including the directory in which the driver is installed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-file-compare"&gt;
  &lt;/a&gt;
  üìå 4. File Compare:
&lt;/h2&gt;

&lt;p&gt;You can use this command to identify differences in text between two files. It's particularly useful for writers and programmers trying to find small changes between two versions of a file. Simply type &lt;code&gt;fc&lt;/code&gt; and then the directory path and file name of the two files you want to compare.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-ipconfig"&gt;
  &lt;/a&gt;
  üìå 5. Ipconfig:
&lt;/h2&gt;

&lt;p&gt;This command relays the IP address that your computer is currently using. However, if you're behind a router (like most computers today), you'll instead receive the local network address of the router.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-netstat"&gt;
  &lt;/a&gt;
  üìå 6. Netstat:
&lt;/h2&gt;

&lt;p&gt;Entering the command &lt;code&gt;netstat -an&lt;/code&gt; will provide you with a list of currently open ports and related IP addresses. This command will also tell you what state the port is in; listening, established, or closed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-ping"&gt;
  &lt;/a&gt;
  üìå 7. Ping:
&lt;/h2&gt;

&lt;p&gt;Typing ping followed by an IP address or web domain will send a series of test packets to the specified address. If they arrive and are returned, you know the device is capable of communicating with your PC; if it fails, you know that there's something blocking communication between the device and your computer. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-pathping"&gt;
  &lt;/a&gt;
  üìå 8. PathPing:
&lt;/h2&gt;

&lt;p&gt;This is a more advanced version of ping that's useful if there are multiple routers between your PC and the device you're testing. Like ping, you use this command by typing &lt;code&gt;pathping&lt;/code&gt; followed by the IP address, but unlike ping, &lt;code&gt;pathping&lt;/code&gt; also relays some information about the route the test packets take.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-tracert"&gt;
  &lt;/a&gt;
  üìå 9. Tracert:
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;tracert&lt;/code&gt; command is similar to &lt;code&gt;pathping&lt;/code&gt;. Once again, type &lt;code&gt;tracert&lt;/code&gt; followed by the IP address or domain you'd like to trace. You'll receive information about each step in the route between your PC and the target. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-powercfg"&gt;
  &lt;/a&gt;
  üìå 10. Powercfg:
&lt;/h2&gt;

&lt;p&gt;Powercfg is a very powerful command for managing and tracking how your computer uses energy. You can use the command &lt;code&gt;powercfg&lt;/code&gt; hibernate on and &lt;code&gt;powercfg&lt;/code&gt; hibernate off to manage hibernation, and you can also use the command &lt;code&gt;powercfg /a&lt;/code&gt; to view the power-saving states currently available on your PC.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  ‚ù§Ô∏è Thank you for reading ‚ù§Ô∏è
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;üåè Like | Follow | Share üåè&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>todayilearned</category>
      <category>tooling</category>
      <category>tutorial</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Top 10 JavaScript Interview Questions and Answers you should know - Junior and Senior</title>
      <author>angelo.miranda</author>
      <pubDate>Sun, 18 Apr 2021 04:54:06 +0000</pubDate>
      <link>https://dev.to/angelomiranda/top-10-javascript-interview-questions-and-answers-you-should-know-junior-and-senior-3943</link>
      <guid>https://dev.to/angelomiranda/top-10-javascript-interview-questions-and-answers-you-should-know-junior-and-senior-3943</guid>
      <description>&lt;p&gt;It is important to be prepared prior to a job interview as you only have 1Ô∏è‚É£ chance to impress and convince the interviewers that you are the one they are looking for. Typically, you will meet up with different engineers who will ask very hard questions, and unfortunately, you will most likely not get the job ü§¶üôÖ if one of them says 'NO' üö´ especially the senior ranking interviewer.&lt;/p&gt;

&lt;p&gt;There would be a time for an engineer to look for a new role whether it is driven by a new challenge, more money, or to move to a different place. &lt;/p&gt;

&lt;p&gt;In this case, it is vital to be completely ready and and know the common questions that are commonly asked so you are able to answer correctly and confidently. I have compiled the top 1Ô∏è‚É£0Ô∏è‚É£ Q&amp;amp;A for both Junior and Senior that is guaranteed to be asked on a job interview. I am in the process of writing/compiling HTML and CSS Q&amp;amp;A which I will post here when I get done.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mid-senior-level-questions-and-answers"&gt;
  &lt;/a&gt;
  Mid - Senior Level Questions and Answers
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-what-is-a-closure"&gt;
  &lt;/a&gt;
  1. What is a closure?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Closure is a function in a function. The inner function has access to the outer's function scope and parameters even after the outer function has returned.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-what-are-the-differences-between-call-apply-and-bind"&gt;
  &lt;/a&gt;
  2. What are the differences between call, apply, and bind?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;call&lt;/strong&gt; and &lt;strong&gt;apply&lt;/strong&gt; immediately calls a function while &lt;strong&gt;bind&lt;/strong&gt; creates a new function that can be invoked in the future. Arguments with &lt;strong&gt;call&lt;/strong&gt; are passed in one by one, separated with a comma while &lt;strong&gt;apply&lt;/strong&gt; expects an array as its argument.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#3-what-is-an-event-loop"&gt;
  &lt;/a&gt;
  3. What is an event loop?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;An &lt;strong&gt;event loop&lt;/strong&gt; is responsible for executing javascript code, collecting and processing events, and executing queued sub-tasks.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#4-what-is-currying-function"&gt;
  &lt;/a&gt;
  4. What is currying function?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A currying function is the process of taking a function with multiple arguments and turning it into a sequence of functions each with a single argument.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Curried functions are a great way to improve¬†code reusability¬†and¬†functional composition&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#5-what-is-prototype-in-javascript"&gt;
  &lt;/a&gt;
  5. What is prototype in javascript?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Prototypes are the mechanism by which JavaScript objects inherit from another object. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#6-what-is-memoization"&gt;
  &lt;/a&gt;
  6. What is memoization?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Memoization&lt;/strong&gt; is an optimization technique by storing the result of expensive function calls and returning the cached results when the same inputs occur again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#7-what-is-a-higherorder-function"&gt;
  &lt;/a&gt;
  7. What is a higher-order function?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;a higher-order function is a function that accepts another function as an argument or returns a function as a return value or both of them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Map, filter and reduce are some examples of higher-order functions that are already built-in to JavaScript.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#8-what-is-event-delegation"&gt;
  &lt;/a&gt;
  8. What is event delegation?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Event delegation is a pattern of adding a single event listener to a parent element instead of multiple elements.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#9-name-some-ways-to-handle-asynchronous-operation-in-javascript"&gt;
  &lt;/a&gt;
  9. Name some ways to handle asynchronous operation in javascript
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Callback&lt;/strong&gt; is a function that is used to notify the calling instance &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Promise&lt;/strong&gt;¬†is an object representing the eventual completion or failure of an asynchronous operation. A pending promise can either be¬†fulfilled¬†with a value or¬†rejected¬†with a reason.&lt;br&gt;
Callbacks are attached to the returned promises that make handling of asynchronous code easier and more readable. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;async/await&lt;/strong&gt; is a new addition to ES2017 which is syntactic sugar on top of promises and make asynchronous code look synchronous code&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#10-what-is-recursion"&gt;
  &lt;/a&gt;
  10. What is recursion?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Recursion&lt;/strong&gt; is a technique for iterating over an operation by having a function call itself repeatedly until it arrives at a result. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This is most effective for solving problems like sorting or traversing the nodes of complex or non-linear data structures&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don't feel like reading? Here is a video - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/O1UizGrR79U"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#entry-junior-level-questions-and-answers"&gt;
  &lt;/a&gt;
  Entry - Junior Level Questions and Answers
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-what-is-javascript"&gt;
  &lt;/a&gt;
  1. What is Javascript?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;it is the scripting language of the web that was initially intended to run on the browser. Today, JavaScript is used in the server. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-what-is-ecmascript"&gt;
  &lt;/a&gt;
  2. What is ECMAScript?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;is a standard specification for scripting languages. JavaScript is based on ECMAScript.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#3-what-is-the-difference-between-and-"&gt;
  &lt;/a&gt;
  3. What is the difference between == and ===?
&lt;/h3&gt;

&lt;p&gt;== compares values&lt;br&gt;
=== compares both type and value&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#4-what-is-a-promise"&gt;
  &lt;/a&gt;
  4. What is a promise?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;is an object that may produce a single value sometime in the future with either a resolved value or a reason for not being resolved&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#5-what-is-strict-mode-in-js"&gt;
  &lt;/a&gt;
  5. What is strict mode in JS?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;it is useful for writing secure JS code. It prevents some bugs from happening and throws more exceptions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#6-what-is-the-difference-between-null-and-undefined"&gt;
  &lt;/a&gt;
  6. What is the difference between null and undefined?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;null&lt;/strong&gt; type is an object that is explicitly assigned to a variable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;undefined&lt;/strong&gt; type is undefined where the variable has been declared but has no assigned value&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#7-what-is-ajax"&gt;
  &lt;/a&gt;
  7. What is AJAX?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;stands for Asynchronous JavaScript and XML. We can send data to the server and get data without refreshing the page.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#8-explain-the-difference-between-synchronous-and-asynchronous"&gt;
  &lt;/a&gt;
  8. Explain the difference between synchronous and asynchronous.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Synchronous&lt;/strong&gt; is blocking operation while &lt;strong&gt;asynchronous&lt;/strong&gt; is not. Synchronous complete the current code before the next code is executed while asynchronous continue on the next code without completing the current code&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#9-what-are-the-differences-between-var-let-and-const"&gt;
  &lt;/a&gt;
  9. What are the differences between var, let, and const
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;var&lt;/strong&gt; is scoped to a function. &lt;strong&gt;let&lt;/strong&gt; and &lt;strong&gt;const&lt;/strong&gt; are block-scoped. Accessible to nearest curly braces (function, if-else, for-loop)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#10-what-is-the-dom"&gt;
  &lt;/a&gt;
  10. What is the DOM?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;it stands for Document Object Model. This can be used to access and change the document structure, style, and content.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don't feel like reading? Here is a video - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-AZuoPleqC8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>jobinterview</category>
      <category>junior</category>
      <category>senior</category>
    </item>
    <item>
      <title>Supercharge Your Website Using PWA: Installable Website</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 18 Apr 2021 04:51:53 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/supercharge-your-website-using-pwa-installable-website-32i3</link>
      <guid>https://dev.to/ruppysuppy/supercharge-your-website-using-pwa-installable-website-32i3</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-a-raw-pwa-endraw-"&gt;
  &lt;/a&gt;
  What is a &lt;code&gt;PWA&lt;/code&gt;?
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Progressive Web Apps&lt;/strong&gt; (&lt;code&gt;PWA&lt;/code&gt;) are &lt;strong&gt;web applications&lt;/strong&gt; that have been designed so they are &lt;strong&gt;capable&lt;/strong&gt; (utilize native features), &lt;strong&gt;reliable&lt;/strong&gt; (work even in offline mode), and &lt;strong&gt;installable&lt;/strong&gt;. These three pillars transform them into an experience that feels like a platform-specific application.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-use-raw-pwa-endraw-"&gt;
  &lt;/a&gt;
  Why use &lt;code&gt;PWA&lt;/code&gt;?
&lt;/h1&gt;

&lt;p&gt;At their heart, &lt;strong&gt;Progressive Web Apps&lt;/strong&gt; are just web applications. Using progressive enhancement, new capabilities are enabled in modern browsers. Using &lt;code&gt;service workers&lt;/code&gt; and a &lt;code&gt;web app manifest&lt;/code&gt;, a web application can be converted into a &lt;code&gt;PWA&lt;/code&gt;. If the new capabilities aren't available, users still get the core experience.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---9kRmHF1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wg6fsytyd1lbzhp55ys9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---9kRmHF1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wg6fsytyd1lbzhp55ys9.PNG" alt="Comparison between native app, web app and pwa"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As it can be seen from the picture above, &lt;code&gt;PWA&lt;/code&gt; offers the best of both worlds by delivering a web experience your users will love, using the latest web features to bring enhanced &lt;strong&gt;capabilities&lt;/strong&gt; and &lt;strong&gt;reliability&lt;/strong&gt;, &lt;strong&gt;Progressive Web Apps&lt;/strong&gt; allow what you build to be installed by anyone, anywhere, on any device with a &lt;strong&gt;single codebase&lt;/strong&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h1&gt;

&lt;p&gt;The requirements for a website to be turned into a &lt;code&gt;PWA&lt;/code&gt; are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The website itself (served over &lt;code&gt;https&lt;/code&gt; or from &lt;code&gt;localhost&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;manifest.json&lt;/code&gt; (provides information about a &lt;strong&gt;web application&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;service worker&lt;/code&gt; (a &lt;strong&gt;script&lt;/strong&gt; that allows &lt;strong&gt;intercepting&lt;/strong&gt; and &lt;strong&gt;control&lt;/strong&gt; of how a &lt;strong&gt;web browser&lt;/strong&gt; handles its &lt;code&gt;network requests&lt;/code&gt; and &lt;code&gt;asset caching&lt;/code&gt;.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here we will not be focusing on creating a website, but on making an existing website installable. To follow along just use a basic website like the one given below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;PWA: Installable website&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Test&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Its possible to style the site or add scripts, but for the purpose of adding &lt;code&gt;PWA&lt;/code&gt; installation feature, this will suffice.&lt;/p&gt;

&lt;p&gt;The defination of &lt;code&gt;manifest.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;name of the application&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"short_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;short name for the application&amp;gt; (can be same as name)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"start_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;start url for the website&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"display"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;display mode for the website&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;description of the application&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"background_color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;color&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"theme_color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;color&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"orientation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;orientation&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"icons"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"src"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;image source&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"sizes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;widthxheight&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"image/png"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;An example &lt;code&gt;manifest.json&lt;/code&gt; would look like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"PWA: Installable website"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"short_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Installable PWA"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"index.html"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"display"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"standalone"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"App for testing PWA features"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"background_color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#ffffff"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"theme_color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#000000"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"orientation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"portrait-primary"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"icons"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"src"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"image/icon-24.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"sizes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"24x24"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"image/png"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"src"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"image/icon-32.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"sizes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"32x32"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"image/png"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"src"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"image/icon-48.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"sizes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"48x48"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"image/png"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"src"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"image/icon-64.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"sizes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"64x64"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"image/png"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"src"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"image/icon-128.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"sizes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"128x128"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"image/png"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"src"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"image/icon-256.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"sizes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"256x256"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"image/png"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To add the manifest to the website, add the following in the &lt;code&gt;head&lt;/code&gt; section&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"manifest"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"manifest.json"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Its a good practice to add the following in the &lt;code&gt;head&lt;/code&gt; section as well for &lt;strong&gt;iOS&lt;/strong&gt; support&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"apple-touch-icon"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"image/icon-24.png"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"apple-touch-icon"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"image/icon-32.png"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"apple-touch-icon"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"image/icon-48.png"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"apple-touch-icon"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"image/icon-64.png"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"apple-touch-icon"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"image/icon-72.png"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"apple-touch-icon"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"image/icon-96.png"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"apple-touch-icon"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"image/icon-128.png"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"apple-touch-icon"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"image/icon-256.png"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"apple-mobile-web-app-status-bar"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"#db4938"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"theme-color"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"#db4938"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now only the &lt;code&gt;service worker&lt;/code&gt; is left to be dealt with.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;service-worker.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;STATIC_CACHE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;static-cache-v1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;static_assets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/index.html&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/script.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/image/icon-24.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/image/icon-32.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/image/icon-48.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/image/icon-64.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/image/icon-72.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/image/icon-96.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/image/icon-128.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/image/icon-256.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;// storing static assets in cache on service worker install&lt;/span&gt;
&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;install&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;waitUntil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;caches&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;STATIC_CACHE&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;static_assets&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// returning static assets from cache&lt;/span&gt;
&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fetch&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;respondWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;caches&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are required to handle the &lt;code&gt;fetch&lt;/code&gt; event to enable installation.&lt;/p&gt;

&lt;p&gt;Enable the &lt;code&gt;service worker&lt;/code&gt; by adding the following script in the website&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;serviceWorker&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;serviceWorker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/service-worker.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Service worker is not supported&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the last piece of the puzzle, serving the website on &lt;code&gt;localhost&lt;/code&gt;. If you are using &lt;strong&gt;VS Code&lt;/strong&gt;, you can easily do it using the &lt;a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer"&gt;live server&lt;/a&gt; extension (recommended for beginners).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mKkjiM3K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7ihpyv0law1di89773h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mKkjiM3K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7ihpyv0law1di89773h.png" alt="Installable website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The installation icon on the top right of the url-bar signifies its now installable. Click it to install the &lt;code&gt;pwa&lt;/code&gt; on your device.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: This is just a brief overview. In a production grade &lt;code&gt;pwa&lt;/code&gt; its more advisible to periodically refresh the &lt;strong&gt;static assets&lt;/strong&gt; as well to ensure that the user don't access outdated content.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://web.dev/what-are-pwas/"&gt;web.dev/what-are-pwas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps"&gt;MDN Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Reach out to me on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.linkedin.com/in/tapajyoti-bose-429a601a0"&gt;LinkedIn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Portfolio&lt;/a&gt; (For freelance projects, reach out through the contact form)&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>pwa</category>
      <category>webdev</category>
      <category>ux</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Pixxia - Compress your Images in Optimal Quality for FREE</title>
      <author>Dhruv Panchal</author>
      <pubDate>Sun, 18 Apr 2021 04:45:06 +0000</pubDate>
      <link>https://dev.to/dhhruv/pixxia-compress-your-images-in-optimal-quality-for-free-8mi</link>
      <guid>https://dev.to/dhhruv/pixxia-compress-your-images-in-optimal-quality-for-free-8mi</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction:
&lt;/h2&gt;

&lt;p&gt;The above script uses lossy compression methods to reduce the document size of your JPG/PNG files. This is achieved by rounding up the (R,G,B) values from each pixel of it's unit digit in your image, therefore lesser number of bytes are required to store the information. Sometimes, there are major changes in the bytes stored well as sometimes there are minor changes so it depends entirely on the pixels of the image.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dhhruv"&gt;
        dhhruv
      &lt;/a&gt; / &lt;a href="https://github.com/dhhruv/Pixxia"&gt;
        Pixxia
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üñº Pixxia uses lossy compression methods to reduce the document size of your JPG/PNG files
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#image-comparison"&gt;
  &lt;/a&gt;
  Image Comparison:
&lt;/h2&gt;


&lt;h4&gt;Image 1:&lt;/h4&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9WZx0U_0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/72680045/110210445-c5f1b880-7eb7-11eb-9a11-b1943089cc07.png"&gt;



&lt;h4&gt;Image 2:&lt;/h4&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3E0cGgoU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/72680045/110210444-c427f500-7eb7-11eb-8dd7-72f73c58f5fe.png"&gt;


&lt;blockquote&gt;
&lt;p&gt;For Images &amp;gt;= 6 MB you may see a great compression ratio as compared to the images which are smaller than that.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://github.com/dhhruv/Pixxia/releases/download/1.0.0/Pixxia.exe"&gt;Download Pixxia.exe for Windows&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setup-windows"&gt;
  &lt;/a&gt;
  Setup (Windows):
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Install Python&lt;/li&gt;
&lt;li&gt;Clone this repository
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/dhhruv/Pixxia.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Install, create and activate virtual environment.
For instance we create a virtual environment named 'venv'.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install virtualenv
python -m virtualenv venv
venv\Scripts\activate.bat
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Install dependencies
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;
    &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iEfevdqM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/72680045/110210540-1d902400-7eb8-11eb-85e7-917f006069ec.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iEfevdqM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/72680045/110210540-1d902400-7eb8-11eb-85e7-917f006069ec.PNG"&gt;&lt;/a&gt;
&lt;/p&gt;



&lt;p&gt;&lt;a href="https://github.com/dhhruv/Pixxia/releases/download/1.0.0/Pixxia.exe"&gt;Download Pixxia.exe for Windows&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-"&gt;
  &lt;/a&gt;
  How To Use !
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Click SELECT INPUT FOLDER Button to select the INPUT FOLDER which contains all the Images to be Compressed/Optimized.&lt;/li&gt;
&lt;li&gt;Click SELECT OUTPUT FOLDER Button to select the OUTPUT FOLDER which will contain all the the Compressed/Optimized Images.&lt;/li&gt;
&lt;li&gt;Hit the COMPRESS Button and the INPUT FOLDER containing Supported Image Formats will be Compressed and saved in the OUTPUT FOLDER.&lt;/li&gt;
&lt;li&gt;Click CLEAR Button to reset the input fields and status bar. (If needed)&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTE: Recommended to keep INPUT and OUTPUT Folder different for your ease to differentiate between Optimized and Unoptimized Images.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#important-note"&gt;
  &lt;/a&gt;
  Important Note:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;This Script goes through each pixel of every supported image in the INPUT folder so it'll take more time than usual to process the Image.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;This Script is just a Prototype so results may be unexpected.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;The Authors will not be responsible for any kind of loss of data so it is essential to have a Backup of Original Data placed in the Input Folder. Read the &lt;a href="https://github.com/dhhruv/Pixxia/blob/master/LICENSE"&gt;LICENSE&lt;/a&gt; for more information.&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, stay tuned for further updates on GitHub:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dhhruv"&gt;
        dhhruv
      &lt;/a&gt; / &lt;a href="https://github.com/dhhruv/Pixxia"&gt;
        Pixxia
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üñº Pixxia uses lossy compression methods to reduce the document size of your JPG/PNG files
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://github.com/dhhruv/Pixxia/releases/download/1.0.0/Pixxia.exe"&gt;Download Pixxia.exe for Windows&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#image-credits"&gt;
  &lt;/a&gt;
  Image Credits:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://unsplash.com/"&gt;Unsplash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>codenewbie</category>
      <category>productivity</category>
      <category>beginners</category>
      <category>python</category>
    </item>
    <item>
      <title>How To Build Tabs only with HTML and CSS</title>
      <author>Pawan Bhayde</author>
      <pubDate>Sun, 18 Apr 2021 04:35:42 +0000</pubDate>
      <link>https://dev.to/pawanbhayde/how-to-build-tabs-only-with-html-and-css-3lfk</link>
      <guid>https://dev.to/pawanbhayde/how-to-build-tabs-only-with-html-and-css-3lfk</guid>
      <description>&lt;p&gt;There are several ways to provide navigation on a web site. Tabbed navigation is one of them; menu, sidebar, etc.The key of implementing tabs without Javascript is to use radio buttons.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We connect radio buttons with labels.&lt;/li&gt;
&lt;li&gt;When label is clicked, only one radio button is checked as 
selected.&lt;/li&gt;
&lt;li&gt;Only matching contents of selected radio button is visible.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/o3TGeisrkyw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Read Blog Post And Download Source Code:- &lt;a href="https://www.websitemakers.xyz/2021/04/how-to-build-tabs-only-with-css.html"&gt;https://www.websitemakers.xyz/2021/04/how-to-build-tabs-only-with-css.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Html Code &lt;a href="https://www.websitemakers.xyz/2021/04/how-to-build-tabs-only-with-css.html"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Css Code &lt;a href="https://www.websitemakers.xyz/2021/04/how-to-build-tabs-only-with-css.html"&gt;Download&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Chatbot para twitch com Javascript</title>
      <author>Victor Castro</author>
      <pubDate>Sun, 18 Apr 2021 04:25:06 +0000</pubDate>
      <link>https://dev.to/acaverna/chatbot-para-twitch-com-javascript-1oi9</link>
      <guid>https://dev.to/acaverna/chatbot-para-twitch-com-javascript-1oi9</guid>
      <description>&lt;p&gt;Ol√° nesse tutorial vamos criar um chatbot para a &lt;a href="https://www.twitch.tv/"&gt;twitch.tv&lt;/a&gt; utilizando javascript com a biblioteca &lt;a href="https://tmijs.com/"&gt;tmi.js&lt;/a&gt;. Utilizar um chatbot no seu canal √© uma das formas de voc√™ engajar os seus viewers, pois, voc√™ pode criar jogos e outras brincadeiras para divertir o seu p√∫blico durante as lives. Um dos exemplos √© criar um comando de duelo para que o seu chat fique duelando no chat. Outra coisa que voc√™ pode fazer √© criar funcionalidade para que o seu bot ajude na modera√ß√£o da sua live.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ferramentas"&gt;
  &lt;/a&gt;
  Ferramentas
&lt;/h2&gt;

&lt;p&gt;Para criar esse projeto iremos utilizar as seguintes tecnologias:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://nodejs.org/pt-br/"&gt;node.js&lt;/a&gt; - Que √© um runtime javascript. Voc√™ pode baixar ele &lt;a href="https://nodejs.org/pt-br/download/"&gt;aqui&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="(https://www.npmjs.com/package/nodemon)"&gt;nodemon&lt;/a&gt; - Que √© uma ferramenta que monitora o sistema de arquivos da sua aplica√ß√£o e reinicia automaticamente ap√≥s uma modifica√ß√£o.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.npmjs.com/get-npm"&gt;npm&lt;/a&gt; - Que √© um gerenciador de pacote javascript. Por padr√£o ele j√° vem instalado junto com o node.js, mas caso voc√™ queira tamb√©m pode utilizar o &lt;a href="https://yarnpkg.com/"&gt;yarn&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://tmijs.com/"&gt;tmi.js&lt;/a&gt; - Biblioteca para se conectar no chat da twitch utilizando o protocolo &lt;a href="https://pt.wikipedia.org/wiki/Internet_Relay_Chat"&gt;IRC&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Editor de texto - Voc√™ pode utilizar um editor de texto da sua prefer√™ncia, no meu caso irei utilizar o &lt;a href="https://code.visualstudio.com/"&gt;Vscode&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#iniciando-projeto"&gt;
  &lt;/a&gt;
  Iniciando Projeto
&lt;/h2&gt;

&lt;p&gt;Apos a instala√ß√£o do node iremos iniciar o nosso projeto utilizando o seguinte comando:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm init -y&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Se voc√™ olhar na pasta do seu projeto √© para ter criado um arquivo chamado 'package.json' √© nele que fica as configura√ß√µes do nosso projeto.&lt;/p&gt;

&lt;p&gt;Caso voc√™ queira saber mais sobre o npm init voc√™ pode descobrir mais &lt;a href="https://docs.npmjs.com/cli/v7/commands/npm-init"&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#instala%C3%A7%C3%A3o-de-deped%C3%AAncias"&gt;
  &lt;/a&gt;
  Instala√ß√£o de deped√™ncias
&lt;/h2&gt;

&lt;p&gt;Agora vamos instalar as bibliotecas necess√°rias para o nosso projeto.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install tmi.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install --save-dev nodemon&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ap√≥s rodar esses comandos se voc√™ olhar no seu projeto voc√™ deve ter a pasta 'node_modules' e o arquivo 'package-lock.json' no seu projeto.&lt;/p&gt;

&lt;p&gt;Agora iremos criar scripts para facilitar na hora de rodar o nosso bot. Dentro do arquivo &lt;code&gt;package.json&lt;/code&gt; iremos modificar a propriedade &lt;code&gt;scripts&lt;/code&gt; e adicionar o seguinte c√≥digo.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node index.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dev"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nodemon index.js"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;O &lt;code&gt;start&lt;/code&gt; serve para rodar o nosso quando finalizado. J√° o &lt;code&gt;dev&lt;/code&gt; serve para rodar o nosso bot enquanto estivermos trabalhando nele, pois, ele vai executar usando o nodemon e facilitar√° nosso trabalho enquanto estivermos modificando ele reiniciando automaticamente o nosso bot.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#criando-arquivo-de-configura%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  Criando arquivo de configura√ß√£o
&lt;/h2&gt;

&lt;p&gt;Agora precisando criar um arquivo chamado &lt;code&gt;.env&lt;/code&gt; nele ficara guardado as vari√°veis de configura√ß√µes nosso bot. Logo abaixo podemos ver como voc√™ devera deixar o arquivo depois de criado. Voc√™ devera substituir kastrinhobot pelo nome do seu nome, kastr0walker pelo nome do seu canal e TOKEN pelo token que voc√™ deve gerar &lt;a href="https://twitchapps.com/tmi/"&gt;aqui&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NOME_BOT=kastrinhobot
NOME_CANAL=kastr0walker
TOKEN_BOT=TOKEN
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#criando-nosso-primeiro-comando"&gt;
  &lt;/a&gt;
  Criando nosso primeiro comando
&lt;/h2&gt;

&lt;p&gt;Agora est√° na hora de colocar a m√£o na massa e fazer o nosso primeiro comando no bot. A primeira coisa que precisamos fazer √© importar as bibliotecas necess√°rias para o nosso projeto funcionar.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tmi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;tmi.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Agora iremos salvar em vari√°veis as configura√ß√µes que adicionamos no nosso arquivo &lt;code&gt;.env&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;NOME_BOT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NOME_BOT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;NOME_CANAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NOME_CANAL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;TOKEN_BOT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TOKEN_BOT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Devemos tamb√©m criar um objeto para adicionar as informa√ß√µes do nosso bot.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;opts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;identity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NOME_BOT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;TOKEN_BOT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;channels&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;NOME_CANAL&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Devemos instanciar um novo objeto do tipo &lt;code&gt;tmi.client&lt;/code&gt; passando como par√¢metro o objeto que contem as configura√ß√µes do nosso bot.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;tmi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Devemos criar uma fun√ß√£o para ser executada toda vez que o bot detectar que uma mensagem foi enviada no chat. No nosso caso definimos essa fun√ß√£o como &lt;code&gt;recivedMessage&lt;/code&gt; nela recebemos quatro par√¢metros.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;target&lt;/strong&gt; - Esse par√¢metro recebe o nome do canal no qual o bot recebeu a mensagem.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;context&lt;/strong&gt; - Esse √© um objeto na qual fica armazenado algumas informa√ß√µes do usu√°rio que mandou mensagem no chat. Podemos achar nele o nome do usu√°rio, se √© sub ou mod de um canal dentre outras informa√ß√µes. Voc√™ pode conseguir mais informa√ß√µes colocando um &lt;code&gt;console.log(context)&lt;/code&gt; dentro da fun√ß√£o.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;msg&lt;/strong&gt; - Esse √© uma string contendo a mensagem que foi enviada no chat.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;bot&lt;/strong&gt; - Esse √© um booleano que retorna verdadeiro caso a mensagem recebida seja do nosso pr√≥prio bot.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O nosso primeiro comando que vamo criar √© para o bot mandar uma mensagem de "Ol√° Mundo!" caso algu√©m digite &lt;code&gt;!ola&lt;/code&gt; no chat. Para isso verificamos se a mensagem recebida √© igual a &lt;code&gt;!ola&lt;/code&gt; caso seja n√≥s chamamos o m√©todo say do nosso client. Esse m√©todo √© respons√°vel por fazer com que o bot mande uma mensagem no chat. Ele recebe dois par√¢metros o primeiro √© o nome do canal na qual o bot vai mandar a mensagem. O segundo par√¢metro √© uma string contendo a mensagem na qual o bot vai enviar.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;recivedMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Verifica se a mensagem recebido √© do nosso bot&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;!ola&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Ol√° Mundo!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Agora precisamos fazer com que o nosso bot se conecte no chat e comece a escutar as mensagens que s√£o enviadas nele.&lt;br&gt;
Para isso utilizamos as seguintes fun√ß√µes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;client.on("message", recivedMessage)&lt;/strong&gt; - Essa fun√ß√£o vai fazer com que o bot fique escutando o nosso chat e execute a fun√ß√£o &lt;code&gt;recivedMessage&lt;/code&gt; toda vez que uma mensagem √© recebida.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;client.on("connected", () =&amp;gt; {})&lt;/strong&gt; - Essa fun√ß√£o vai fazer com que o nosso bot mande "O bot t√° on!" no nosso chat ao se conectar.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;client.connet()&lt;/strong&gt; - Essa fun√ß√£o vai fazer com que o nosso bot se conecte com o chat do nosso canal.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;recivedMessage&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;connected&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;NOME_CANAL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;O bot t√° on!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ap√≥s isso salve o seu arquivo e execute no seu terminal o seguinte comando:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm start&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Pront agora o bot deve est√° conectado no seu canal e j√° sendo poss√≠vel interagir com ele digitando &lt;code&gt;!ola&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Agora que voc√™ entendeu a base de como criar o seu primeiro bot. Voc√™ pode utilizar a sua imagina√ß√£o e desenvolver v√°rias funcionalidades legais para o seu bot. Se voc√™ quiser se inspirar com ideias para o seu bot esse s√£o alguns bots na qual j√° contribui no desenvolvimento.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/levxyca/pandadomalbot"&gt;pandadomalbot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/acaverna/acaverna-bot"&gt;acaverna&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/acaverna/deninho-bot"&gt;deninhobot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pxlrose/pixelrbot"&gt;pixelrbot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kastrowalker/kastrinhobot"&gt;kastrinhobot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para esse tutorial utilizei como base esse &lt;a href="https://github.com/jpbrab0/twitchtvbot-js-template"&gt;reposit√≥rio&lt;/a&gt;. Obrigado por ler meu artigo e boa sorte com as suas cria√ß√µes.&lt;/p&gt;

</description>
      <category>braziliandevs</category>
      <category>javascript</category>
      <category>chatbot</category>
      <category>tmijs</category>
    </item>
    <item>
      <title>Why you might not be learning as effectively</title>
      <author>Estee Tey</author>
      <pubDate>Sun, 18 Apr 2021 04:21:59 +0000</pubDate>
      <link>https://dev.to/lyqht/why-you-might-not-be-learning-as-effectively-18o9</link>
      <guid>https://dev.to/lyqht/why-you-might-not-be-learning-as-effectively-18o9</guid>
      <description>&lt;p&gt;As a #CodeNewbie, a common means of learning here is to: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;read articles to improve your knowledge,&lt;/li&gt;
&lt;li&gt;and later write your own to internalize your learning.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, I want to point it out explicitly that... &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Your learning style could be a reason why you feel that you are not learning as much as you intend to &lt;em&gt;despite doing the actions above&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;How you learn&lt;/strong&gt; affects heavily: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;how much you are enjoying&lt;/em&gt; the stuff you learn and &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;the pace that you are learning&lt;/em&gt; them. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Therefore it will be beneficial for you if you can identify what kind of learner you are and what you can do to learn better.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#learner-archetypes"&gt;
  &lt;/a&gt;
  Learner Archetypes
&lt;/h2&gt;

&lt;p&gt;There are 4 common learner archetypes according to the &lt;a href="https://educationonline.ku.edu/community/4-different-learning-styles-to-know"&gt;&lt;strong&gt;VARK&lt;/strong&gt; model&lt;/a&gt; (&lt;strong&gt;V&lt;/strong&gt;isual, &lt;strong&gt;A&lt;/strong&gt;uditory, &lt;strong&gt;R&lt;/strong&gt;eading/Writing, &lt;strong&gt;K&lt;/strong&gt;inesthetic). &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ek6y-SM0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.mysimpleshow.com/wp-content/uploads/2016/11/04145930/500x300_VARK_Oct_27_2016.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ek6y-SM0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.mysimpleshow.com/wp-content/uploads/2016/11/04145930/500x300_VARK_Oct_27_2016.png" alt="https://www.mysimpleshow.com/wp-content/uploads/2016/11/04145930/500x300_VARK_Oct_27_2016.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Image retrieved from &lt;a href="https://www.mysimpleshow.com/learning-styles-the-vark-model/"&gt;mysimpleshow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Below is my subjective view on how the 4 types of learners would learn and how content creators can cater their content for the various kinds of learners.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Visual&lt;/strong&gt; üñºÔ∏è

&lt;ul&gt;
&lt;li&gt;For visual learners, pictures are especially louder than words for them.&lt;/li&gt;
&lt;li&gt;Including images such as charts, screenshots, memes (use with precaution, consider your target audience) in articles will help these learners learn better. Break down into bullet points instead of giving text walls.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Auditory&lt;/strong&gt; üí¨

&lt;ul&gt;
&lt;li&gt;Most people &lt;a href="https://www.thinkonyourfeet.com/think-words-images/"&gt;think in words rather than pictures&lt;/a&gt;. For auditory learners, they take this same process to the external world to learn.&lt;/li&gt;
&lt;li&gt;They would be the main supporters of podcasts, audiobooks and narrated tech videos.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Reading&lt;/strong&gt;/&lt;strong&gt;Writing&lt;/strong&gt; üìù

&lt;ul&gt;
&lt;li&gt;The nature of programming &lt;em&gt;languages&lt;/em&gt; meant that **there is no running away from text, articles and documentation for learning the syntax and concepts of programming. Every CodeNewbie has a side of a Reading/Writing Learner.&lt;/li&gt;
&lt;li&gt;However, with how static text can be, it will be great if every writer puts in more thought in how and why they are writing articles for their target audience.&lt;/li&gt;
&lt;li&gt;Given that the speed of reading is faster than listening, that there are learning platforms popping up which emphasize on this fact such as &lt;a href="http://educative.io"&gt;educative.io&lt;/a&gt;, &lt;a href="https://www.codecademy.com/"&gt;codeacademy&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Kinesthetic&lt;/strong&gt; üôå

&lt;ul&gt;
&lt;li&gt;The hands-on learners!&lt;/li&gt;
&lt;li&gt;By hands-on, it may differ from person to person on whether they learn effectively by following a tutorial guide in hands-on or they experiment for themselves.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Aside from the &lt;strong&gt;VARK&lt;/strong&gt; model of learner archetypes, there's also another renowned categorization of learners illustrated as &lt;a href="https://notes.fundersandfounders.com/post/55187809751/types-of-learners"&gt;an infographic by Funders &amp;amp; Founders&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aV0Q57DA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://64.media.tumblr.com/f26e3143dcf0322227285b88f9cbc1db/tumblr_mpsanrnCp21s6bw99o1_1280.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aV0Q57DA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://64.media.tumblr.com/f26e3143dcf0322227285b88f9cbc1db/tumblr_mpsanrnCp21s6bw99o1_1280.png" alt="https://64.media.tumblr.com/f26e3143dcf0322227285b88f9cbc1db/tumblr_mpsanrnCp21s6bw99o1_1280.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see there's some overlap of learner types, and these archetypes again are not absolute. &lt;/p&gt;

&lt;p&gt;You could be a &lt;em&gt;mix&lt;/em&gt; of the archetypes! You may prefer having a mix of different mediums to spice up your learning  ‚ú® These archetypes just make it easier for you to identify your learning style. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#learning-routine"&gt;
  &lt;/a&gt;
  Learning Routine
&lt;/h2&gt;

&lt;p&gt;Sometimes, aside from your learning style, your routine also matters. &lt;/p&gt;

&lt;p&gt;e.g. I have a developer friend who likes to head to the gym physically after work before he heads onto the mental gym and learn üí™&lt;/p&gt;

&lt;p&gt;For me, I'm pretty lazy when it comes to physical exercise nowadays with COVID19. But if I still feel like being productive after work, I will make sure to take a nice shower üöø, physically walk out of my house üö∂‚Äç‚ôÄÔ∏è and grab a good dinner üçö before staring at my computer again.&lt;/p&gt;

&lt;p&gt;Both of these routines are intentional to force a &lt;strong&gt;cognitive switch from work mode to learning mode.&lt;/strong&gt; Sometimes you could even have a &lt;em&gt;parenting&lt;/em&gt; mode or a &lt;em&gt;play&lt;/em&gt; mode, it is important to relax and be conscious about your mental state - be aware whether you are ready for learning.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Knowing what helps you to learn better&lt;/strong&gt; is beneficial for you in choosing the resources you pursue &lt;em&gt;in the limited time that you have set aside for productivity,&lt;/em&gt; and also how you might want to structure your routine to learn. &lt;/p&gt;

&lt;p&gt;So what archetype are you? Is there any learning routine you are taking on now that you would like to share with the community? And what else do you want to see #CodeNewbie to help you improve your learning experience? Let's discuss~ üéµ&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>discuss</category>
      <category>productivity</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>002 - Forced Myself to Launch My Site For A /uses Page (CCwF 2021)</title>
      <author>Joshua Cerbito</author>
      <pubDate>Sun, 18 Apr 2021 04:10:40 +0000</pubDate>
      <link>https://dev.to/cerbito/002-forced-myself-to-launch-my-site-for-a-uses-page-ccwf-2021-4l2o</link>
      <guid>https://dev.to/cerbito/002-forced-myself-to-launch-my-site-for-a-uses-page-ccwf-2021-4l2o</guid>
      <description>&lt;p&gt;üëã Hello again! And welcome back to the "Coding Challenges with Friends" series. If you're interested in the said series, you may want to check out the first two posts (Part 0, Part 1). Enjoy!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are no code snippets in this post, so if you just want to look at the output, you may simply scroll past the following wall of text and click the links below. üëå &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The second challenge was inspired by Wes Bos' &lt;a href="https://uses.tech"&gt;uses.tech&lt;/a&gt;, which in a sense is an extension of his &lt;a href="https://wesbos.com/uses"&gt;/uses&lt;/a&gt; page. Compared to the last challenge, this one is objectively easier since it's technically just a page with a bunch of lists. But for a lazy-ass person like me, the most difficult part of doing a &lt;code&gt;/uses&lt;/code&gt; page is that part that comes before the &lt;code&gt;/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I could've easily just created a blank webapp with a /uses page, get a random domain name from vercel, and call it a day. But I wanted to finish the challenge properly. And in keeping with the CCwF tradition, I had to do something I've never done before, so here's a list things that I've done for the first time:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Use &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; - React is my comfort place, and for these challenges, I really wanted to stay away from it to force myself to learn new things. But the combination of &lt;a href="https://medium.com/@baphemot/whats-server-side-rendering-and-do-i-need-it-cb42dc059b38"&gt;SSR&lt;/a&gt;, fantastic routing and history management, and no-hassle deployment to Vercel was hard to say no to. And since I haven't used Next.js before, I decided to give myself a free React-pass this time around.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use &lt;a href="https://www.framer.com/motion/"&gt;Framer Motion&lt;/a&gt; - I've been seeing this library for quite a while now but never had the chance to use it until now. Thanks to its &lt;code&gt;AnimatedSharedLayout&lt;/code&gt;, I was able to make page-to-page layout transitions without re-rendering (and therefore resetting) my animated background.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Launch my personal site. That's right. In my 12 years as a professional Web Developer &amp;amp; Designer, I've never, not once, launched a personal site. It's the usual cycle of starting the said project based on a general idea, then trying to implement the best tech approach available, then procrastinating, and then going back to the project after a few months only to realize that the codebase already looks dated. But not today.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For someone my age and in an agency role that's more managerial than creative, I can easily not care about these things anymore and expect to have a relatively stable life. But I'm glad that I have friends who challenge me to do new things and to never stop growing. And speaking of these friends, they also finished the challenge! So if you're interested in our sites or the things that we use on a daily basis, try visiting the links below.&lt;/p&gt;

&lt;p&gt;Mine - &lt;a href="https://www.cerbito.com"&gt;cerbito.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/eacayan"&gt;Ellice&lt;/a&gt;'s - &lt;a href="https://www.acayan.xyz"&gt;acayan.xyz&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/oieeaaaa"&gt;Joimee&lt;/a&gt;'s - &lt;a href="https://cajandab.vercel.app/"&gt;cajandab.vercel.app&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You may also want to check out other people's setups over at &lt;a href="https://uses.tech"&gt;uses.tech&lt;/a&gt;. And while you're at it, why not join the challenge and make yours as well? Cheers!&lt;/p&gt;

</description>
      <category>challenge</category>
      <category>webdev</category>
      <category>ccwf2021</category>
    </item>
    <item>
      <title>Awesome CSS Layout Resources For Beginners</title>
      <author>Kiran Raj R</author>
      <pubDate>Sun, 18 Apr 2021 03:08:40 +0000</pubDate>
      <link>https://dev.to/kiranrajvjd/awesome-css-layout-resources-for-beginners-508a</link>
      <guid>https://dev.to/kiranrajvjd/awesome-css-layout-resources-for-beginners-508a</guid>
      <description>&lt;p&gt;Here is a list of awesome CSS layout generators and layout examples. The list contains Flexbox based layout generators and Grid based layout generators. Use the resources to study how to create a layout and then create your own designs, these resources are for the beginners or it can be used for a quick simple web design needs.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#css-grid-based-layout-generator"&gt;
  &lt;/a&gt;
  CSS Grid Based Layout Generator
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://grid.layoutit.com/"&gt;Layoutit&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aRZFt17H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3gu9fwf9r7o149zjpzm.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cssgrid-generator.netlify.app/"&gt;CSS Grid Generator by Sarah&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GlKhPrGx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yvqt7kbkl9uj0efa9h2b.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://griddy.io/"&gt;Griddy.io&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m_IFmZm_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9x5uifncaa598pufdbk.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://css-grid-layout-generator.pw/"&gt;CSS Grid Layout Generator.PW&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--waXzxQGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7su8kkmm8gtncqnzozg7.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.cssportal.com/layout-generator/"&gt;CSS Portal.Com&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oaAwcpRY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umyxh3eczuij7gcxsha8.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.gridcss.com/"&gt;GridCSS&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tfY0wmT_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4e8boo1nk2dqdk3o43b.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cssgr.id/"&gt;CSSgr&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2lEAf4mX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n32iaxcgz0bkp7uwrjd2.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#flexbox-based-layout-generator"&gt;
  &lt;/a&gt;
  Flexbox based Layout Generator
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://loading.io/flexbox/"&gt;Loading.io&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xEkt8I1o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1c2fjzk804g2t55sqsx.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://flexbox.buildwithreact.com/"&gt;Flexbox.Buildwithreact.com&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xcsdYbKd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fdjeitfwvnonxoidp0r8.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.mycssbuilder.com/"&gt;My CSS Builder&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ThNkE2r---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b66n0j7f46uhv1ohqbr6.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#layout-example-collections-with-code"&gt;
  &lt;/a&gt;
  Layout Example Collections With Code
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://purecss.io/layouts/"&gt;Purecss&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FOHxRT0D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkjjlkzcxyl8l2t841l1.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://gridbyexample.com/examples/page-layout/"&gt;Grid By Example&lt;/a&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gIaFHPm_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q7iplwxll778osj2cnav.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.quackit.com/html/templates/css_grid_templates.cfm"&gt;Quackit.com&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dwLHHtH2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fhgxd2bh85pzubiums8q.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://csslayout.io/"&gt;CSS Layout.io&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VWA_3mhL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ts2m9nkd3pmft8ve8o9q.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you have any other resources please mention in the comment section, so it can be useful to me and others who browse the page. In case of any broken links or mistakes do let me know. Thank you and happy coding :)&lt;br&gt;
&lt;a href="https://dev.to/kiranrajvjd/20-awesome-css-code-generators-27gp"&gt;20+ Awesome CSS Code Generator Resources&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/kiranrajvjd/awesome-35-svg-resources-for-your-next-web-project-5c15"&gt;40+ Awesome SVG Resources for Web Developers&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>49 Days of Ruby: Day 22 - Duck Typing</title>
      <author>Ben Greenberg</author>
      <pubDate>Sun, 18 Apr 2021 03:00:15 +0000</pubDate>
      <link>https://dev.to/bengreenberg/49-days-of-ruby-day-22-duck-typing-27h</link>
      <guid>https://dev.to/bengreenberg/49-days-of-ruby-day-22-duck-typing-27h</guid>
      <description>&lt;p&gt;&lt;strong&gt;Welcome to day 22 of the 49 Days of Ruby! üéâ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you have been reading about Ruby, you might have come across a term called &lt;em&gt;duck typing&lt;/em&gt;. Today we are going to spend some time discussing this idea and how it pertains to your code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-duck-typing"&gt;
  &lt;/a&gt;
  What is Duck Typing?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;If it walks like a duck, then it is a duck.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Have you heard that expression before? If so, that's pretty much duck typing!&lt;/p&gt;

&lt;p&gt;Ruby is less concerned about the &lt;em&gt;type&lt;/em&gt; of a thing, and more about what it does. &lt;em&gt;(We are going to cover types tomorrow!)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Take a look at the following example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Duck&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;walk&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"I'm walking"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Turkey&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;walk&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"I'm walking"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Did you notice that both &lt;code&gt;Duck&lt;/code&gt; and &lt;code&gt;Turkey&lt;/code&gt; have a &lt;code&gt;#walk&lt;/code&gt; method? Does that make a &lt;code&gt;Turkey&lt;/code&gt; a &lt;code&gt;Duck&lt;/code&gt;? Well, if we're following duck typing, then it really doesn't matter. As long as an Object responds to a method then that's all that really matters.&lt;/p&gt;

&lt;p&gt;How do we check if it knows that method (or message, is another way of stating it)?&lt;/p&gt;

&lt;p&gt;We can try the &lt;code&gt;#respond_to?&lt;/code&gt; Ruby method, which does what it sounds like. It checks if an Object recognizes the message you are sending it. Continuing our example of a &lt;code&gt;Duck&lt;/code&gt; and a &lt;code&gt;Turkey&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;Duck&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;respond_to?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:walk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# =&amp;gt; true&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;Turkey&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;respond_to?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:walk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# =&amp;gt; true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;They both know &lt;code&gt;#walk&lt;/code&gt; so for all intents and purposes you can treat both the &lt;code&gt;Duck&lt;/code&gt; and the &lt;code&gt;Turkey&lt;/code&gt; as a &lt;code&gt;Duck&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;That's it for today! See you tomorrow as we discuss typing in Ruby.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Come back tomorrow for the next installment of 49 Days of Ruby! You can join the conversation on Twitter with the hashtag &lt;a href="https://twitter.com/hashtag/49daysofruby"&gt;#49daysofruby&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>ruby</category>
    </item>
    <item>
      <title>ü§î What really makes you a software developer? </title>
      <author>Daniel Diaz</author>
      <pubDate>Sun, 18 Apr 2021 02:54:13 +0000</pubDate>
      <link>https://dev.to/developerroad/what-really-makes-you-a-software-developer-n7g</link>
      <guid>https://dev.to/developerroad/what-really-makes-you-a-software-developer-n7g</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-this-question"&gt;
  &lt;/a&gt;
  Why this question? üòÉ
&lt;/h2&gt;

&lt;p&gt;Lastly, I'm trying to enhance my personal brand, and as a result of that, I've also had to describe myself.&lt;/p&gt;

&lt;p&gt;I had the temptation of present myself as a software developer, but some doubts seized me.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-in-fact-a-software-developer"&gt;
  &lt;/a&gt;
  What is in fact a software developer?
&lt;/h2&gt;

&lt;p&gt;What makes you one?&lt;/p&gt;

&lt;p&gt;How much time or experience do you need to be considered a software developer? ü§î&lt;/p&gt;

&lt;p&gt;I'd like the incredible community of DEV to answer these questions and share knowledge, and opinions in the comments below üòå.&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>watercooler</category>
      <category>career</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
