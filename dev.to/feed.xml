<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Build your next admin panel in a 5 minute with¬†beautiful Ant Design!</title>
      <author>√ñmer Faruk APLAK</author>
      <pubDate>Fri, 24 Sep 2021 12:35:01 +0000</pubDate>
      <link>https://dev.to/pankod/build-your-next-admin-panel-in-a-5-minute-with-beautiful-ant-design-38bl</link>
      <guid>https://dev.to/pankod/build-your-next-admin-panel-in-a-5-minute-with-beautiful-ant-design-38bl</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7j03R78A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fqo2c1380bf9cid27o57.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7j03R78A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fqo2c1380bf9cid27o57.png" alt="refine - react framework admin panel"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;
&lt;a href="https://github.com/pankod/refine"&gt;GitHub&lt;/a&gt; | &lt;a href="https://refine.dev/docs"&gt;Tutorial&lt;/a&gt; | &lt;a href="https://example.refine.dev"&gt;Demo&lt;/a&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#what-is%C2%A0refine"&gt;
  &lt;/a&gt;
  What is¬†refine?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://refine.dev/"&gt;&lt;strong&gt;refine&lt;/strong&gt;&lt;/a&gt; offers lots of out-of-the box functionality for rapid development, without compromising extreme customizability. Use-cases include, but are not limited to &lt;em&gt;admin panels&lt;/em&gt;, &lt;em&gt;B2B applications&lt;/em&gt; and &lt;em&gt;dashboards&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Your API is supported, out of the box! Connects to any REST or GraphQL custom backend.&lt;/p&gt;

&lt;p&gt;Built-in support for&lt;br&gt;
NestJs CRUD, Airtable, Strapi, Strapi GraphQL, Supabase, and Altogic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;Higher-level frontend frameworks can save you a lot time, but they typically offer you a trade-off between speed and flexibility. &lt;/p&gt;

&lt;p&gt;After many years of experience in developing B2B frontend applications and working with popular frameworks, we came up with a new approach to tackle this dilemma. This is how &lt;strong&gt;refine&lt;/strong&gt; is born.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;refine&lt;/strong&gt; is a collection of helper &lt;code&gt;hooks&lt;/code&gt;, &lt;code&gt;components&lt;/code&gt; and &lt;code&gt;providers&lt;/code&gt;. They are all decoupled from your UI components and business logic, so they never keep you from customizing your UI or coding your own flow.&lt;/p&gt;

&lt;p&gt;As &lt;strong&gt;refine&lt;/strong&gt; is totally &lt;em&gt;unopinionated&lt;/em&gt; about UI and logic, it's strongly &lt;em&gt;opinionated&lt;/em&gt; about three parts of your application:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;API Networking&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;State Management&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Authentication &amp;amp; Authorization&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We believe, these are the most important components of a data-intensive frontend application and should be handled in a robust way by leveraging industry best practices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;refine&lt;/strong&gt; guarantees you a perfect implementation of these building blocks in your project, so you can focus on your development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#architechture"&gt;
  &lt;/a&gt;
  Architechture
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;refine&lt;/strong&gt; makes extensive use of &lt;a href="https://reactjs.org/docs/hooks-reference.html#gatsby-focus-wrapper"&gt;hooks&lt;/a&gt; as a default way for interacting with your components. &lt;br&gt;
Under the hood, &lt;strong&gt;refine&lt;/strong&gt; relies heavily to &lt;a href="https://react-query.tanstack.com/"&gt;React Query&lt;/a&gt; for data handling, caching and state management. &lt;br&gt;
Access to external sources and API's happen via providers which are basically plug-in type components for extendibility.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-features"&gt;
  &lt;/a&gt;
  Key features
&lt;/h2&gt;

&lt;p&gt;‚öôÔ∏è &lt;strong&gt;Zero-configuration&lt;/strong&gt;: One-line setup with &lt;a href="https://github.com/pankod/superplate"&gt;superplate&lt;/a&gt;. It takes less than a minute to start a project.&lt;/p&gt;

&lt;p&gt;üì¶ &lt;strong&gt;Out-of-the-box&lt;/strong&gt; : Routing, networking, authentication, state management, i18n and UI.&lt;/p&gt;

&lt;p&gt;üîå &lt;strong&gt;Backend Agnostic&lt;/strong&gt; : Connects to any custom backend. Built-in support for &lt;a href="https://github.com/pankod/refine/tree/master/packages/simple-rest"&gt;REST API&lt;/a&gt;, &lt;a href="https://github.com/pankod/refine/tree/master/packages/graphql"&gt;GraphQL&lt;/a&gt;, &lt;a href="https://github.com/pankod/refine/tree/master/packages/nestjsx-crud"&gt;NestJs CRUD&lt;/a&gt;, &lt;a href="https://github.com/pankod/refine/tree/master/packages/airtable"&gt;Airtable&lt;/a&gt;, &lt;a href="https://github.com/pankod/refine/tree/master/packages/strapi"&gt;Strapi&lt;/a&gt;, &lt;a href="https://github.com/pankod/refine/tree/master/packages/strapi-graphql"&gt;Strapi GraphQL&lt;/a&gt;, &lt;a href="https://github.com/pankod/refine/tree/master/packages/supabase"&gt;Supabase&lt;/a&gt; and &lt;a href="https://github.com/pankod/refine/tree/master/packages/altogic"&gt;Altogic&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;üìù &lt;strong&gt;Native Typescript Core&lt;/strong&gt; : You can always opt out for plain Javascript.&lt;/p&gt;

&lt;p&gt;üîò &lt;strong&gt;Decoupled UI&lt;/strong&gt; : UI components are exposed directly without encapsulation. You have full control on UI elements.&lt;/p&gt;

&lt;p&gt;üêú &lt;strong&gt;Powerful Default UI&lt;/strong&gt; : Works seamlessly with integrated &lt;a href="https://ant.design/"&gt;Ant Design System&lt;/a&gt;. (Support for multiple UI frameworks is on the Roadmap)&lt;/p&gt;

&lt;p&gt;üìù &lt;strong&gt;Boilerplate-free Code&lt;/strong&gt; : Keeps your codebase clean and readable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/pankod/refine"&gt;GitHub&lt;/a&gt; | &lt;a href="https://refine.dev/docs"&gt;Tutorial&lt;/a&gt; | &lt;a href="https://example.refine.dev"&gt;Demo&lt;/a&gt;&lt;/p&gt;

</description>
      <category>antdesign</category>
      <category>react</category>
      <category>admin</category>
      <category>reactquery</category>
    </item>
    <item>
      <title>üò° Fine...you want CSS art you got it! üí™ My first ever CSS art.</title>
      <author>InHuOfficial</author>
      <pubDate>Fri, 24 Sep 2021 12:30:44 +0000</pubDate>
      <link>https://dev.to/inhuofficial/fine-you-want-css-art-you-got-it-my-first-ever-css-art-2ka7</link>
      <guid>https://dev.to/inhuofficial/fine-you-want-css-art-you-got-it-my-first-ever-css-art-2ka7</guid>
      <description>&lt;p&gt;In my last post I recreated an image in SVG to prove how easy it is compared to CSS. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/css-art-pfft-try-svg-art-2o0n" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Rate my SVG art! [Compared to CSS art]&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial „Éª Sep 23 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codepen&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;All the CSS fans came to shout at me for bashing CSS or not using it...so now I have built the same image in CSS, hopefully that makes everybody happy! üòâ &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#original-image"&gt;
  &lt;/a&gt;
  Original image
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T0RcmQrS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--sRZfn1nC--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://i.pinimg.com/originals/15/3a/be/153abee445a48e98bc10d8a29d6b7a16.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T0RcmQrS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--sRZfn1nC--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://i.pinimg.com/originals/15/3a/be/153abee445a48e98bc10d8a29d6b7a16.jpg" alt="Livai Ackerman"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css-version"&gt;
  &lt;/a&gt;
  CSS version
&lt;/h3&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/x8qvmkz2/3//embedded/result,html,css//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;


&lt;center&gt;&lt;strong&gt;See, CSS art is easy too! üòâ&lt;/strong&gt;&lt;/center&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ok-wow-how-did-you-do-that"&gt;
  &lt;/a&gt;
  OK wow, how did you do that?
&lt;/h2&gt;

&lt;p&gt;In the previous post I cheated and created an SVG of the image. &lt;/p&gt;

&lt;p&gt;This post is no different, I cheated again!&lt;/p&gt;

&lt;p&gt;All I did was write a little script (well, actually it was quite a monstrous script as you can't have curves in polygons!) that converted the SVG &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; information into &lt;code&gt;polygon()&lt;/code&gt; coordinates that CSS can understand.&lt;/p&gt;

&lt;p&gt;The script also had to grab the styling information and generate the HTML and CSS.&lt;/p&gt;

&lt;p&gt;So we have 977 &lt;code&gt;&amp;lt;divs&amp;gt;&lt;/code&gt;, each with auto generated IDs...that correspond to CSS rules...that are all using clip paths...to draw shapes and with classes to set the colours. Talk about excessively complicated! ü§£&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-happy-now"&gt;
  &lt;/a&gt;
  You happy now?
&lt;/h2&gt;

&lt;p&gt;All the CSS mega fans will now be happy that I have finally drawn my first piece of CSS art...can I go back to my precious SVGs now? üòãü§£&lt;/p&gt;

&lt;p&gt;As always, this was just a bit of fun, I am only kidding, CSS art is cool, especially when done with skill rather than cheating like me!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Have a great weekend everybody!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>codepen</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Making SQLite Easy with Codesphere!</title>
      <author>Saji Wang</author>
      <pubDate>Fri, 24 Sep 2021 12:27:32 +0000</pubDate>
      <link>https://dev.to/codesphere/making-sqlite-easy-with-codesphere-3eme</link>
      <guid>https://dev.to/codesphere/making-sqlite-easy-with-codesphere-3eme</guid>
      <description>&lt;p&gt;Working with SQLite just got a whole lot easier! &lt;a href="https://link.codesphere.com/DU"&gt;Codesphere&lt;/a&gt; is happy to announce a new UI for creating and managing your SQLite databases!&lt;/p&gt;

&lt;p&gt;Let's talk about how!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#setting-up-your%C2%A0database"&gt;
  &lt;/a&gt;
  Setting Up Your¬†Database
&lt;/h3&gt;

&lt;p&gt;To create a new database file, navigate to the infrastructure tab in Codesphere's IDE and select SQLite.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VnS411i2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bdki3rn34ug2lhkd7ld0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VnS411i2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bdki3rn34ug2lhkd7ld0.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can then create and name a new database, and Codesphere will automatically create the DB file for your database:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MNZBAlFI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6zdgicm7fuj4gxekll8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MNZBAlFI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6zdgicm7fuj4gxekll8.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We'll name our database user_info, and then click on it to enter the SQL Query Editor Tab&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6-f_mmTG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ja8cdlkmpfw174m8e2v1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6-f_mmTG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ja8cdlkmpfw174m8e2v1.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Query Editor Tab will allow you to easily run SQL queries to make ad-hoc insertions and deletions, view data, and set up and organize tables.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#making-queries-in-the-codesphere-ui"&gt;
  &lt;/a&gt;
  Making Queries in the Codesphere UI
&lt;/h3&gt;

&lt;p&gt;To start off, we can create a table with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CREATE TABLE user_info (
¬†name varchar(255),
¬†age int,
¬†active boolean
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sovoWWHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/61kf5hem7j7vrwtmxtz4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sovoWWHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/61kf5hem7j7vrwtmxtz4.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To populate that table with a row:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;INSERT INTO user_info
VALUES ('John Doe', 25, true);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mIs8JFF4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g55j5jtutpyd9ots7pn4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mIs8JFF4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g55j5jtutpyd9ots7pn4.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And then we can grab those values with:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SELECT * FROM user_info&lt;/code&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#making-queries-from%C2%A0nodejs"&gt;
  &lt;/a&gt;
  Making Queries from¬†NodeJS
&lt;/h3&gt;

&lt;p&gt;You'll notice that the¬†&lt;code&gt;.db&lt;/code&gt; file is in your file tree.&lt;/p&gt;

&lt;p&gt;In NodeJS, you can access this database by installing sqlite3&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install sqlite3&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And running the following code&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;






&lt;p&gt;So what project are you going to use SQLite for?&lt;br&gt;
Let us know down below!&lt;/p&gt;

&lt;p&gt;Happy Coding from your friends at &lt;a href="https://link.codesphere.com/DU"&gt;Codesphere&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>sql</category>
      <category>sqlite</category>
      <category>database</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Image Creation, Management, and Registry(Part 2)</title>
      <author>Deepak Porwal</author>
      <pubDate>Fri, 24 Sep 2021 12:20:03 +0000</pubDate>
      <link>https://dev.to/dporwal/image-creation-management-and-registry-part-2-514n</link>
      <guid>https://dev.to/dporwal/image-creation-management-and-registry-part-2-514n</guid>
      <description>&lt;h3&gt;
  &lt;a href="#tagging-docker-images"&gt;
  &lt;/a&gt;
  Tagging Docker Images
&lt;/h3&gt;

&lt;p&gt;Docker tags convey useful information about a specific image version/variant.&lt;/p&gt;

&lt;p&gt;They are aliases to the ID of your image which often look like this: 8f5487c8b942&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Assigning tag while building image&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; demo:v1 &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OI2PLHzH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/66oevbn09oar0jucqwfi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OI2PLHzH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/66oevbn09oar0jucqwfi.png" alt="tagwhilebuilding"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Assigning tag if no tag default&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Lets build a image without tag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker build &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QUP1Px7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n9fdul4imevpfqv4fwok.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QUP1Px7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n9fdul4imevpfqv4fwok.png" alt="imagewithouttag"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now lets assign tag to the existing image without tag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker tag adc07a47930e demo:v2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x1jWyzOY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9cld0l6hi2x6ppebzl19.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x1jWyzOY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9cld0l6hi2x6ppebzl19.png" alt="tagtonontagimage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;tag for existing tag of the image&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This will create another image with the same IMAGE ID.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker tag demo:v2 demo2:v3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8YKVu6sY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b256kouqt0fqyxa6f2p1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YKVu6sY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b256kouqt0fqyxa6f2p1.png" alt="existingtagofimage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#docker-commit"&gt;
  &lt;/a&gt;
  Docker Commit
&lt;/h3&gt;

&lt;p&gt;Whenever you make changes inside the container, it can be useful to commit a container‚Äôs file changes or settings into a new image.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By default, the container being committed and its processes will be paused while the image is committed.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker container commit CONTAINER-ID myimage01
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Created a container containing context01.txt file in root directory.&lt;br&gt;
Then committed the container to the images and then creating another container from the same image, where we can see the same file/changes made present.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dgJJL2G5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8pi3p9ioln0dpubjg8np.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dgJJL2G5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8pi3p9ioln0dpubjg8np.png" alt="imagecomitting"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can also define the Commands while committing the images from the containers.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;&lt;em&gt;--change&lt;/em&gt;&lt;/strong&gt; option will apply Dockerfile instructions to the image that is created. &lt;/p&gt;

&lt;p&gt;Supported Dockerfile instructions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CMD | ENTRYPOINT | ENV | EXPOSE&lt;/li&gt;
&lt;li&gt;LABEL | ONBUILD | USER | VOLUME | WORKDIR&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker container commit &lt;span class="nt"&gt;--change&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'CMD ["ash"]'&lt;/span&gt; modified-container
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3TNTdFXm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3tbq76wfliek4up6a5mn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3TNTdFXm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3tbq76wfliek4up6a5mn.png" alt="commandcommit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#docker-image-layers"&gt;
  &lt;/a&gt;
  Docker Image Layers
&lt;/h3&gt;

&lt;p&gt;A Docker image is built up from a series of layers. &lt;br&gt;
Each layer represents an instruction in the image‚Äôs Dockerfile.&lt;/p&gt;

&lt;p&gt;Here is the best resource I found for the presentation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RrOKaQ9H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1z78h3fi0c3xzo6gde3k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RrOKaQ9H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1z78h3fi0c3xzo6gde3k.png" alt="Docker Layer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As, the container have the R/W layer a top layer which is connected with the base image.&lt;br&gt;
OR we can say that one base image is connected to different containers by Writable layer.&lt;/p&gt;

&lt;p&gt;Lets, see some scenarios. Will build a docker image using dockerfile and will check the layers.&lt;/p&gt;

&lt;p&gt;Dockerfile:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; ubuntu&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nb"&gt;dd &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/zero &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/root/file1.txt &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1M &lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;100
&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nb"&gt;dd &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/zero &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/root/file2.txt &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1M &lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;100
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Command to check the layers of the image, where &lt;em&gt;layerdemo01&lt;/em&gt; is the image name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker image &lt;span class="nb"&gt;history &lt;/span&gt;layerdemo1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Below Screenshot clearly shows how 2 layers are of same volume, as they are not adding the volume of previous layer. Every layer has its separate size according to the command or the changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ilu-Piwi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5v63hvqjy8xk5e0l00k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ilu-Piwi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5v63hvqjy8xk5e0l00k.png" alt="layerdemo1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, lets try to remove these files and I found that 2 layers were created with &lt;em&gt;0B&lt;/em&gt; but the image still contains the same &lt;em&gt;282MB&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;So, Basically here we have 5 layers.&lt;br&gt;
Layer1 -&amp;gt; FROM Ubuntu&lt;br&gt;
Layer2 -&amp;gt; RUN dd if=/dev/zero of=/root/file1.txt bs=1M count=100&lt;br&gt;
Layer3 -&amp;gt; RUN dd if=/dev/zero of=/root/file2.txt bs=1M count=100&lt;br&gt;
Layer4 -&amp;gt; RUN rm -f /root/file1.txt&lt;br&gt;
Layer5 -&amp;gt; RUN rm -f /root/file2.txt&lt;/p&gt;

&lt;p&gt;Here Only Layer4 and Layer5 is dealing with the removing of those files, but the file are still there in Layer3 and Layer2.&lt;br&gt;
That is the reason image still have the same volume.&lt;/p&gt;

&lt;p&gt;Dockerfile:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; ubuntu&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nb"&gt;dd &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/zero &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/root/file1.txt &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1M &lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;100
&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nb"&gt;dd &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/zero &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/root/file2.txt &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1M &lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;100
&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; /root/file1.txt
&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; /root/file2.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wsIKTVat--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i87878a7umfaimy78ele.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wsIKTVat--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i87878a7umfaimy78ele.png" alt="layerdemo2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the requirement where we need to remove the files after creation, we can use &lt;strong&gt;&lt;em&gt;&amp;amp;&amp;amp;&lt;/em&gt;&lt;/strong&gt; to run both the command at one-go.&lt;br&gt;
This will conserve the volume of the image&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; ubuntu&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nb"&gt;dd &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/zero &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/root/file1.txt &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1M &lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;100 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; /root/file1.txt
&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nb"&gt;dd &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/zero &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/root/file2.txt &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1M &lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;100 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; /root/file2.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#managing-images-using-cli"&gt;
  &lt;/a&gt;
  Managing Images using CLI
&lt;/h3&gt;

&lt;p&gt;So basically the best practice of using the command for images is&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker image &amp;lt;command&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;docker pull ubuntu == docker image pull ubuntu&lt;/li&gt;
&lt;li&gt;docker images      == docker image ls&lt;/li&gt;
&lt;li&gt;docker image build&lt;/li&gt;
&lt;li&gt;docker image history&lt;/li&gt;
&lt;li&gt;docker image import&lt;/li&gt;
&lt;li&gt;docker image inspect&lt;/li&gt;
&lt;li&gt;docker image load&lt;/li&gt;
&lt;li&gt;docker image prune&lt;/li&gt;
&lt;li&gt;docker image push&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--anukaeh1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3328zrmkkk4ha6w2dxh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--anukaeh1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3328zrmkkk4ha6w2dxh.png" alt="dockerImageCLI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inspecting-docker-images"&gt;
  &lt;/a&gt;
  Inspecting Docker Images
&lt;/h3&gt;

&lt;p&gt;A Docker Image contains lots of information, some of these  include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creation Date&lt;/li&gt;
&lt;li&gt;Command&lt;/li&gt;
&lt;li&gt;Environment Variables&lt;/li&gt;
&lt;li&gt;Architecture&lt;/li&gt;
&lt;li&gt;OS&lt;/li&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;docker image inspect command allows us to see all the information associated with a docker image.&lt;/p&gt;

&lt;p&gt;Suppose we need to get the particular field from the inspect data.&lt;br&gt;
e.g &lt;em&gt;Hostname&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;we can use&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker image inspect ubuntu | &lt;span class="nb"&gt;grep&lt;/span&gt; &lt;span class="s1"&gt;'Hostname'&lt;/span&gt;
docker image inspect ubuntu &lt;span class="nt"&gt;--format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'{{.Id}}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are certain things that have parent child details. Like, ContainerConfig have Hostname, Domainname etc.&lt;br&gt;
But, this will only gives the values not the key.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker image inspect ubuntu &lt;span class="nt"&gt;--format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'{{.ContainerConfig}}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want the key and value both.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker image inspect ubuntu &lt;span class="nt"&gt;--format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'{{json .ContainerConfig}}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you just want the hostname value you can use below caommand to filter out the information from the inspect data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker image inspect ubuntu &lt;span class="nt"&gt;--format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'{{.ContainerConfig.Hostname}}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bhUz2UTo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/huttfah416t7y0oo259a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bhUz2UTo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/huttfah416t7y0oo259a.png" alt="imageInspect"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#docker-image-prune"&gt;
  &lt;/a&gt;
  Docker Image prune
&lt;/h3&gt;

&lt;p&gt;Docker image prune command allows us to clean up unused images.&lt;br&gt;
By default, the below command will only clean up dangling images.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Dangling Images = Image without Tags and Image not referenced by any container&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To prune all the images that has no container refrenced, we can use below commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker image prune &lt;span class="nt"&gt;-a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to remove all the images only which don't have tag associated, you can use below commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker image prune
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Before Prune we had these many images.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VY9Tr4XO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p858p1yrkhbqig7x6m57.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VY9Tr4XO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p858p1yrkhbqig7x6m57.png" alt="before prune"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After running prune command.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--htHZ8nSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ufr24srx8nbityzmgx42.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--htHZ8nSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ufr24srx8nbityzmgx42.png" alt="after prune"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Those images got removed which were not referenced to the container. &lt;/p&gt;

&lt;p&gt;Here is the below command the image without the tag ( &lt;em&gt;&lt;/em&gt; ) tag which is a Dangling image, but it can't be prune because it has containers associated.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yWnoZfA0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4k9ilj35snt15x8e1vox.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yWnoZfA0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4k9ilj35snt15x8e1vox.png" alt="imageprune"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flattening-docker-images"&gt;
  &lt;/a&gt;
  Flattening Docker Images
&lt;/h3&gt;

&lt;p&gt;Modifying Image in a single Layer or specific Layer.&lt;/p&gt;

&lt;p&gt;As we know ubuntu has many layers. So, to merge all layers to the single layer. There is one approach that to,&lt;br&gt;
&lt;em&gt;Import and Export to a container&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker &lt;span class="nb"&gt;export &lt;/span&gt;myubuntu &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; myubuntudemo.tar
&lt;span class="nb"&gt;cat &lt;/span&gt;myubuntudemo.tar | docker import - myubuntu:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4q04scNh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zb563g3p1e8cunng1dyj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4q04scNh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zb563g3p1e8cunng1dyj.png" alt="layerscompress"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#building-docker-registry"&gt;
  &lt;/a&gt;
  Building Docker Registry
&lt;/h3&gt;

&lt;p&gt;A Registry a stateless, highly scalable server-side application that stores and lets you distribute Docker images.&lt;/p&gt;

&lt;p&gt;Docker Hub is the simplest example that all of us must have used.&lt;/p&gt;

&lt;p&gt;There are various types of registry available, which includes:&lt;/p&gt;

&lt;p&gt;Docker Registry&lt;br&gt;
Docker Trusted Registry&lt;br&gt;
Private Repository (AWS ECR)&lt;br&gt;
Docker Hub&lt;/p&gt;

&lt;p&gt;To push the image to a central registry like DockerHub, there are three steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Authenticate your Docker client to the Docker Registry
 Refrence for setting up Docker Registry
 &lt;a href="https://hub.docker.com/_/registry/"&gt;https://hub.docker.com/_/registry/&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; 5000:5000 &lt;span class="nt"&gt;--restart&lt;/span&gt; always &lt;span class="nt"&gt;--name&lt;/span&gt; registry registry:2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--peaV7Ob6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0gj55o4pybeg22bgaei5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--peaV7Ob6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0gj55o4pybeg22bgaei5.png" alt="setupdockerregistry"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Tag Docker Image with Registry Repository and optional image tag.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker tag myubuntu:latest localhost:5000/myubuntu
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Push Image using docker push command
To push the docker image to the &lt;strong&gt;&lt;em&gt;AWS ECR&lt;/em&gt;&lt;/strong&gt;.
Refrence: 
&lt;a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-push-ecr-image.html"&gt;https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-push-ecr-image.html&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; docker push localhost:5000/myubuntu
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s_w0OdSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5n9z7p4qfptfv4fe0v6h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s_w0OdSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5n9z7p4qfptfv4fe0v6h.png" alt="dockerpush"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, lets pull the image from the registry. For that first we need to untag the registy located image and then delete the image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker pull localhost:5000/myubuntu
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hf3MHh5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fozzdim19jz8ym0mukul.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hf3MHh5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fozzdim19jz8ym0mukul.png" alt="dockerpull"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pushing-docker-image-to-docker-hub"&gt;
  &lt;/a&gt;
  Pushing Docker Image to Docker Hub
&lt;/h3&gt;

&lt;p&gt;I have my account on Docker Hub and created had 1 repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--alzrFA0N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03n9xtmtkrod7d94f12m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--alzrFA0N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03n9xtmtkrod7d94f12m.png" alt="dockerhubrepo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, first we will login to the docker hub by CLI and then create the tag and push it. Then before pulling the image I have removed the tag to the image and removed all the containers associated to that container and then pull the image from the Docker Hub Repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker login
docker tag busybox deepakporwal95/mydemo:v1
docker push deepakporwal95/mydemo:v1
docker pull deepakporwal95/mydemo:v1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Pushing out custom image to docker hub.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1211XtL7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ylb4uxcjgn32jrjenrj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1211XtL7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ylb4uxcjgn32jrjenrj.png" alt="pushingtodockerhub"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Pulling the image from Docker Hub.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c_NdSBRG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qkwsup11b3p6wtwdmn6x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c_NdSBRG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qkwsup11b3p6wtwdmn6x.png" alt="PullingdockerImage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#searcing-and-filtering-images-from-docker-hub"&gt;
  &lt;/a&gt;
  Searcing and Filtering Images from Docker Hub
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Search for Busybox image&lt;/td&gt;
&lt;td&gt;docker search busybox&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Search for Busybox image with Max Result of 5&lt;/td&gt;
&lt;td&gt;docker search busybox --limit 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Filter only official images&lt;/td&gt;
&lt;td&gt;docker search --filter is-official=true nginx&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;On searching nginx images.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jPE-60HE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9x2ttuiivlbf9329vnp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jPE-60HE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9x2ttuiivlbf9329vnp.png" alt="searchnginx"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will limit the number of results.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--21X-FITG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1rqcoejp597zwc844wmw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--21X-FITG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1rqcoejp597zwc844wmw.png" alt="limit search"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On searching images from Docker Hub we get many results. We can filter those results by three filter supporters.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;stars&lt;/li&gt;
&lt;li&gt;is-automated&lt;/li&gt;
&lt;li&gt;is-official
This will bring to us specific required result only.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ftOpExQl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/syjoirsygccneej8ty8b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ftOpExQl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/syjoirsygccneej8ty8b.png" alt="niginx official"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#moving-images-across-hosts"&gt;
  &lt;/a&gt;
  Moving Images Across Hosts
&lt;/h3&gt;

&lt;p&gt;Suppose we want to send docker image to other hosts or instances from admin box or master server. In this case we save the image as a zip and then transfer that image to host and at last will load that image in the host.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8a5EJezU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u60rh7uyc7emwd82las5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8a5EJezU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u60rh7uyc7emwd82las5.png" alt="movingimageaccroos"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cache-in-docker"&gt;
  &lt;/a&gt;
  Cache in Docker
&lt;/h3&gt;

&lt;p&gt;While building a container or image it uses the cache of each layer which has been already been there.&lt;/p&gt;

&lt;p&gt;Here is the Dockerfile and requirements.txt details that we will be using for this usecase.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Dockerfile&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; python:3.7-slim-buster&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;pip &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--quiet&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt
&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; ["python", "server.py"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;requirements.txt&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;certifi==2018.8.24
chardet==3.0.4
Click==7.0
cycler==0.10.0
decorator==4.3.0
defusedxml==0.5.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XIOQgJ4r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/erjzx6gbjfrly9755ncz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XIOQgJ4r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/erjzx6gbjfrly9755ncz.png" alt="Requirements"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here are the commands that will be using to build the images.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; without-cache &lt;span class="nb"&gt;.&lt;/span&gt;
docker build &lt;span class="nt"&gt;-t&lt;/span&gt; with-cache &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;without cache&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cxu-fwcz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2zo5xp70bl1iylv8ux7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cxu-fwcz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2zo5xp70bl1iylv8ux7.png" alt="withoutcache"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;with cache&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7OMoU_kv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1tibdgqoxq7027wqohda.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7OMoU_kv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1tibdgqoxq7027wqohda.png" alt="with cache"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;References:&lt;br&gt;
&lt;a href="https://docs.docker.com/get-docker/"&gt;Official Docker&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.udemy.com/course/docker-certified-associate/"&gt;Udemy Course&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:&lt;br&gt;
&lt;a href="https://in.linkedin.com/in/zealvora"&gt;Zeal Vora&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/dporwal/image-creation-management-and-registry-part-1-pk9"&gt;Prev: Image Creation, Management, and Registry(Part 1)&lt;/a&gt;&lt;/p&gt;

</description>
      <category>docker</category>
      <category>linux</category>
      <category>devops</category>
      <category>microservices</category>
    </item>
    <item>
      <title>Handling exceptions in JavaScript : Key points ‚≠êÔ∏è</title>
      <author>_CODE</author>
      <pubDate>Fri, 24 Sep 2021 12:13:57 +0000</pubDate>
      <link>https://dev.to/underscorecode/handling-exceptions-in-javascript-key-points-27je</link>
      <guid>https://dev.to/underscorecode/handling-exceptions-in-javascript-key-points-27je</guid>
      <description>&lt;p&gt;Hello, everybody! üëãüèº&lt;/p&gt;

&lt;p&gt;In today's article we'll be talking about &lt;strong&gt;exceptions&lt;/strong&gt; in JavaScript: what they are, different types, declaration and how to handle and deal with them appropriately.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#first-things-first-main-concepts"&gt;
  &lt;/a&gt;
  First things first: Main concepts üßê
&lt;/h1&gt;

&lt;p&gt;Let's first have a look at the main concepts of exception handling to have a clear and concise idea of what they exactly mean in programming.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-an-exception"&gt;
  &lt;/a&gt;
  What is an exception? üö´
&lt;/h3&gt;

&lt;p&gt;An &lt;em&gt;exception&lt;/em&gt; is an anomalous condition that breaks the regular execution of the code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-does-handle-an-exception-mean"&gt;
  &lt;/a&gt;
  What does &lt;em&gt;handle an exception&lt;/em&gt; mean? üëâüèº
&lt;/h3&gt;

&lt;p&gt;Exception handling is the method by which an exception is &lt;em&gt;caught&lt;/em&gt; and managed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#then-how-can-we-handle-exceptions-in-javascript-%F0%9F%95%B9"&gt;
  &lt;/a&gt;
  Then, how can we handle exceptions in JavaScript? üïπ
&lt;/h3&gt;

&lt;p&gt;To handle exceptions we'll use the &lt;strong&gt;try...catch&lt;/strong&gt; statement provided by JavaScript.&lt;/p&gt;

&lt;p&gt;As easy as that üòä&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-trycatch-statement"&gt;
  &lt;/a&gt;
  The &lt;em&gt;try...catch&lt;/em&gt; statement ü§†
&lt;/h1&gt;

&lt;p&gt;The &lt;strong&gt;&lt;em&gt;try...catch&lt;/em&gt;&lt;/strong&gt; statement is a block that &lt;strong&gt;tries to perform&lt;/strong&gt; one or several actions that &lt;strong&gt;can lead to error conditions&lt;/strong&gt; and defines the instructions to &lt;strong&gt;handle such errors&lt;/strong&gt; appropriately in case they happen to occur.&lt;/p&gt;

&lt;p&gt;Let's see the structure for this statement:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="cm"&gt;/*
 * Action(s) to be performed that can lead
 * to an anomalous condition.
 */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="cm"&gt;/*
 * Error / exception handling.
 */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="cm"&gt;/*
 * Instruction(s) to be executed after
 * the try...catch statement ends.
 */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Things to consider:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Curly braces &lt;strong&gt;must be used&lt;/strong&gt; anytime, even for one line statements within the blocks.&lt;/li&gt;
&lt;li&gt;A &lt;em&gt;catch&lt;/em&gt; or a &lt;em&gt;finally&lt;/em&gt; block &lt;strong&gt;must be defined&lt;/strong&gt; as part of the &lt;em&gt;try...catch&lt;/em&gt; statement, but neither of them are mandatory separately.&lt;/li&gt;
&lt;li&gt;The previous point results in the following types of &lt;em&gt;try...catch&lt;/em&gt; statements:

&lt;ul&gt;
&lt;li&gt;try...catch&lt;/li&gt;
&lt;li&gt;try...finally&lt;/li&gt;
&lt;li&gt;try...catch...finally&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#the-throw-statement"&gt;
  &lt;/a&gt;
  The &lt;em&gt;throw&lt;/em&gt; statement üé≥
&lt;/h1&gt;

&lt;p&gt;The &lt;strong&gt;&lt;em&gt;throw&lt;/em&gt;&lt;/strong&gt; statement, as its own name indicates, &lt;strong&gt;throws an exception&lt;/strong&gt; when something wrong occurs within the function or block it is declared.&lt;/p&gt;

&lt;p&gt;When a &lt;em&gt;throw&lt;/em&gt; statement is found, the execution of the current function stops and the &lt;strong&gt;control is shifted to the catch&lt;/strong&gt; block.&lt;/p&gt;

&lt;p&gt;A very simple example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Something went wrong!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*
 * Output:
 * Error: Something went wrong!
 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;A throw statement &lt;strong&gt;is usually called within the&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;try&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;block&lt;/strong&gt;, but that doesn't mean that can't be called within a &lt;em&gt;catch&lt;/em&gt; block (to &lt;em&gt;rethrow&lt;/em&gt; an exception once it has been caught) or a &lt;em&gt;finally&lt;/em&gt; block (to throw an exception no matter which previous block has been executed).&lt;/p&gt;

&lt;p&gt;‚ñ´Ô∏è Rethrowing an exception in the &lt;em&gt;catch&lt;/em&gt; block:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;üôÑ&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*
 * Output:
 * Error: üôÑ
 * Error: üôÑ
 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;‚ñ´Ô∏è Throwing an exception in the &lt;em&gt;finally&lt;/em&gt; block:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Error - try block&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Error - catch block&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//Note that this exception is never caught&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Error - finally block&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*
 * Output:
 * Error: Error - try block
 * Error: Error - finally block
 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#userdefined-exceptions"&gt;
  &lt;/a&gt;
  User-defined exceptions üë®üèª‚Äçüíªüë©üèª‚Äçüíª
&lt;/h1&gt;

&lt;p&gt;A &lt;em&gt;user-defined&lt;/em&gt; exception is a custom exception that can contain &lt;strong&gt;any valid expression&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The following statements are all correct:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Error!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let's see an example where an &lt;strong&gt;object is thrown&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Note that object properties become accessible once the exception is caught, through the &lt;em&gt;error&lt;/em&gt; itself:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;UserException&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;UserException&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;There was an error üôÉ&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;UserException&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*
 * Output:
 * UserException: There was an error üôÉ
 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;JavaScript &lt;strong&gt;built-in errors&lt;/strong&gt; can also be used as objects for user-defined exceptions and be thrown accordingly.&lt;/p&gt;

&lt;p&gt;Take a look at the following example, where a &lt;strong&gt;&lt;em&gt;TypeError&lt;/em&gt;&lt;/strong&gt; error is thrown if the type of the required value is not &lt;em&gt;String&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;TypeException&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;There was an error regarding the data type.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;city&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;setCity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cityName&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cityName&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cityName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TypeException&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setCity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--- City name has been set correctly.---&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--- The execution has finished ---&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*
 * Output: 
 * TypeError: There was an error regarding the data type.
 * --- The execution has finished. ---
 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#conditional-catch-blocks"&gt;
  &lt;/a&gt;
  Conditional &lt;em&gt;catch&lt;/em&gt; blocks üöÄ
&lt;/h1&gt;

&lt;p&gt;There may be occasions where the &lt;em&gt;try...catch&lt;/em&gt; block throws &lt;strong&gt;different types of exceptions&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In order to handle each of them in a proper way, we can use &lt;strong&gt;&lt;em&gt;if...else&lt;/em&gt;&lt;/strong&gt; statements within the &lt;em&gt;catch&lt;/em&gt; block.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;setMonth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;monthValue&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;monthValue&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;monthValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;monthValue&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;monthValue&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;RangeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;monthValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;month&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;monthValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setMonth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`-- Month &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; has been set correctly ---`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;errorInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Please enter a number [1-12]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nx"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Wrong data type: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;errorInfo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nx"&gt;RangeError&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Out of range: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;errorInfo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*
 * Output: 
 * Out of range: -5. Please enter a number [1-12].
 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We could also use a &lt;strong&gt;&lt;em&gt;switch&lt;/em&gt;&lt;/strong&gt; statement to handle multiple exceptions, being both examples equivalent:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setMonth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`-- Month &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; has been set correctly ---`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;errorInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Please enter a number [1-12]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TypeError&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Wrong data type: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;errorInfo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;RangeError&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Out of range: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;errorInfo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*
 * Output: 
 * Out of range: -5. Please enter a number [1-12].
 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#summary-key-points"&gt;
  &lt;/a&gt;
  Summary: key points üí´
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Exceptions are error conditions that &lt;strong&gt;break the normal flow&lt;/strong&gt; of the code execution.&lt;/li&gt;
&lt;li&gt;An exception can be &lt;strong&gt;any kind of expression&lt;/strong&gt;: a number, a string, an object...&lt;/li&gt;
&lt;li&gt;Exceptions should be thrown and handled appropriately in order &lt;strong&gt;to not crash the app&lt;/strong&gt; and let the user know that something &lt;strong&gt;didn't go as expected&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;JavaScript &lt;strong&gt;built-in errors can be used&lt;/strong&gt; as throwable objects for user-defined exceptions.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Multiple exceptions&lt;/strong&gt; can be handled within the same catch block.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;‚ö°Ô∏è Related post on Instagram:&lt;/p&gt;


&lt;div class="instagram-position"&gt;
  &lt;iframe id="instagram-liquid-tag" src="https://www.instagram.com/p/CTCVoSDjH9t/embed/captioned"&gt;
  &lt;/iframe&gt;
  
&lt;/div&gt;






&lt;p&gt;And that's all for today! üòá&lt;/p&gt;

&lt;p&gt;A big thanks for reading  ü§ó  and don't hesitate to reach out to me if you have any questions or doubts about today's article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/XFuQ4InwtXBE4DDPHM/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/XFuQ4InwtXBE4DDPHM/giphy.gif" alt='Rachel Green from Friends TV Show behind a desk saying "Ask me anything"'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope you found this article useful and I see you all in the next üëãüèº&lt;/p&gt;




&lt;p&gt;üéâ Don't forget to follow &lt;a class="mentioned-user" href="https://dev.to/underscorecode"&gt;@underscorecode&lt;/a&gt;
 on &lt;a href="https://instagram.com/underscorecode"&gt;Instagram&lt;/a&gt; and &lt;a href="https://twitter.com/underscorecode"&gt;Twitter&lt;/a&gt; for more daily webdev content: info, challenges, quizzes &amp;amp; more üíú&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#and-last-but-not-least-a-quick-friendly-reminder-before-we-go"&gt;
  &lt;/a&gt;
  And last but not least... A quick friendly reminder before we go üòä
&lt;/h4&gt;

&lt;p&gt;We all know there are million ways to get things done when it comes to programming and development, and we're here to &lt;strong&gt;help and learn&lt;/strong&gt;, so, if you know another possible way to do what others are sharing (&lt;strong&gt;not better, not worse, just different&lt;/strong&gt;), feel free to share it if you feel like it, but, please, &lt;strong&gt;always be kind and respectful&lt;/strong&gt; with the author and the rest of the community. Thank you and happy coding!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>programming</category>
    </item>
    <item>
      <title>My next project.</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Fri, 24 Sep 2021 12:04:37 +0000</pubDate>
      <link>https://dev.to/abhirajb/my-next-project-34c1</link>
      <guid>https://dev.to/abhirajb/my-next-project-34c1</guid>
      <description>&lt;p&gt;No, I won't talk about an app or website I am working on.&lt;/p&gt;

&lt;p&gt;My next project will be (is) &lt;a href="https://github.com/visualway"&gt;Visualway&lt;/a&gt;&lt;br&gt;
Visualway is a non-profit startup/organization which will create apps and services to ease one's workflow.&lt;/p&gt;

&lt;p&gt;You might have read my blogs on CSS, JS and HTML.&lt;br&gt;
&lt;em&gt;shit i messed up the order&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But I created this organization to not only improve myself as a developer and diversify in frameworks and languages but also really help others too.&lt;/p&gt;

&lt;p&gt;You can follow us on Twitter right now.&lt;br&gt;
&lt;a href="https://twitter.com/visualwayorg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--opAxX3tY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Twitter-1DA1F2%3Fstyle%3Dfor-the-badge%26logo%3Dtwitter%26logoColor%3Dwhite" alt="twitter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So I have already released a note-taking app on React under VW. You can read all about it below. &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/visualway" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MOQ7OZVB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--adZG1_NO--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/4732/2e16d3a6-d647-41eb-9de8-08fc8b3594c8.png" alt="Visualway"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I3Zc_2Z4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--UdQa_QBS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/685929/957550ef-dba4-424d-b0ee-bd5b3f9d2872.jpeg" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/visualway/introducing-noteture-4bhb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Introducing Noteture&lt;/h2&gt;
      &lt;h3&gt;Abhiraj Bhowmick for Visualway „Éª Sep 22 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Before I end this post, I would like to ask you, my readers, to help me in this journey. If you are a dev or writer, hit me up on email or twitter (sadly there won't be any money involved). &lt;/p&gt;

&lt;p&gt;Or maybe you can follow us on Twitter and star the repo, so you don't miss my progress along this journey. &lt;/p&gt;

&lt;p&gt;Ciao.&lt;br&gt;
Visualway - &lt;a href="https://dev.to/visualway"&gt;https://dev.to/visualway&lt;/a&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>CTR as been added to Binance Smart BlockChain.</title>
      <author>Cryptourism.io</author>
      <pubDate>Fri, 24 Sep 2021 12:03:21 +0000</pubDate>
      <link>https://dev.to/cryptourism/ctr-as-been-added-to-binance-smart-blockchain-246d</link>
      <guid>https://dev.to/cryptourism/ctr-as-been-added-to-binance-smart-blockchain-246d</guid>
      <description>&lt;p&gt;Is with extreme pleasure I am announcing the acceptance of CTR Token to the Binance Smart Chain. After hard work and determination the team achieved a main goal of using Binance‚Äôs Blockchain and be recognized as a credible token in the cryptocurrency space increasing security, cheap transfers and transactions in a couple of seconds.&lt;/p&gt;

&lt;p&gt;All this will guarantee the use of one the most advanced Blockchain‚Äôs in the World.&lt;/p&gt;

&lt;p&gt;Is NOW OFFICIAL and we are getting stronger!&lt;br&gt;
Check our Airdrop Referral Program until it last since only 3% are allocated for the Bounty Campaign.&lt;/p&gt;

&lt;p&gt;Visit us today at &lt;a href="https://cryptourism.io/"&gt;https://cryptourism.io/&lt;/a&gt; to be part of the first Decentralized Tourism Investment.&lt;/p&gt;

</description>
      <category>bitcoin</category>
      <category>crypto</category>
      <category>ico</category>
      <category>cryptourism</category>
    </item>
    <item>
      <title>Using Python to Capitalize the first letter of a string</title>
      <author>hrishikesh1990</author>
      <pubDate>Fri, 24 Sep 2021 11:43:47 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/using-python-to-capitalize-the-first-letter-of-a-string-29me</link>
      <guid>https://dev.to/hrishikesh1990/using-python-to-capitalize-the-first-letter-of-a-string-29me</guid>
      <description>&lt;p&gt;In this short tutorial, we look at how you could use Python to Capitalize the first letter. We also look at all the other methods that can be used to change cases.&lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#how-do-you-capitalize-the-first-letter-of-a-string"&gt;How do you capitalize the first letter of a string?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-upper-lower-and-tittle"&gt;Using upper(), lower() and tittle()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts-python-capitalize-first-letter"&gt;Closing thoughts - Python capitalize first letter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While using Python you would deal with a lot of strings and sometimes you might want to display them in a particular case. This may not be a problem if the string is hardcoded, however, while using dynamic data e.g.: Displaying the user name on the top of the screen. The data for this might contain strings in various cases so it is important to fail-proof such instances.&lt;/p&gt;

&lt;p&gt;This article is a tutorial about the same.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-capitalize-the-first-letter-of-a-string"&gt;
  &lt;/a&gt;
  How do you capitalize the first letter of a string?
&lt;/h2&gt;

&lt;p&gt;The first letter of a string can be capitalized using the &lt;code&gt;capitalize()&lt;/code&gt; function. This method returns a string with the first letter capitalized. If you are looking to capitalize the first letter of the entire string the &lt;code&gt;title()&lt;/code&gt; function should be used.&lt;/p&gt;

&lt;p&gt;The following is the syntax to use python to capitalize first letter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here ‚Äústring‚Äù refers to the string you are looking to capitalize&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-python-capitalize-first-letter"&gt;
  &lt;/a&gt;
  Code - Python capitalize first letter
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;flexiple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"join are freelance community"&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flexiple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flexiple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output of the code is as follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;Join&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;freelance&lt;/span&gt; &lt;span class="n"&gt;community&lt;/span&gt;
&lt;span class="n"&gt;join&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;freelance&lt;/span&gt; &lt;span class="n"&gt;community&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see above, the first letter of the first string was capitalized. After which I have again printed the original string to show you that the original string has not been changed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-upper-lower-and-tittle"&gt;
  &lt;/a&gt;
  Using upper(), lower() and tittle():
&lt;/h2&gt;

&lt;p&gt;Apart from using Python to capitalize the first letter it can also be used to change other cases.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;upper()&lt;/code&gt; method for example returns a string with all the characters in the upper case and the &lt;code&gt;lower()&lt;/code&gt; method does the opposite.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;title()&lt;/code&gt; method is used to capitalize the first letter of all the words in a string.&lt;/p&gt;

&lt;p&gt;The syntax is similar to capitalize, you can see the implementation in the code section below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;flexiple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"join are freelance community"&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flexiple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flexiple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flexiple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flexiple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output of this code is as follows&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;ARE&lt;/span&gt; &lt;span class="n"&gt;FREELANCE&lt;/span&gt; &lt;span class="n"&gt;COMMUNITY&lt;/span&gt;
&lt;span class="n"&gt;join&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;freelance&lt;/span&gt; &lt;span class="n"&gt;community&lt;/span&gt;
&lt;span class="n"&gt;Join&lt;/span&gt; &lt;span class="n"&gt;Are&lt;/span&gt; &lt;span class="n"&gt;Freelance&lt;/span&gt; &lt;span class="n"&gt;Community&lt;/span&gt;
&lt;span class="n"&gt;join&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;freelance&lt;/span&gt; &lt;span class="n"&gt;community&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see in each method the case is changed accordingly and I have again printed the string to show that the original string has not changed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts-python-capitalize-first-letter"&gt;
  &lt;/a&gt;
  Closing Thoughts - Python capitalize first letter
&lt;/h2&gt;

&lt;p&gt;Learning to use Python to capitalize the first letter of a string may not be a very important topic but this is something that developers are expected to know.&lt;/p&gt;

&lt;p&gt;Practicing and being aware of the various methods would help you when you face such cases.&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Will the promise resolve? üåé</title>
      <author>Ingo Steinke</author>
      <pubDate>Fri, 24 Sep 2021 10:54:11 +0000</pubDate>
      <link>https://dev.to/ingosteinke/will-the-promise-resolve-2dh9</link>
      <guid>https://dev.to/ingosteinke/will-the-promise-resolve-2dh9</guid>
      <description>&lt;p&gt;Thank goodness it's Friday! and not just any other Friday...&lt;br&gt;
Just a short post to state that it is possible to work AND campaign on the same day, but it is impossible to save humanity without changing anything.&lt;/p&gt;

&lt;p&gt;I support sustainable development, environmentalism, and Developers For Future, which is why I made this nerdy T-shirt that I will wear at the Fridays for Future protests today.&lt;/p&gt;

&lt;p&gt;This is the pseudo code written on my shirt:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;climateAction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;election&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;election&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;strike&lt;/span&gt;

&lt;span class="nx"&gt;Will&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;devsForFuture&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;developers4Future&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;globalClimateStrike&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--efcdVxUH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fnmplteyedjaztb85tun.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--efcdVxUH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fnmplteyedjaztb85tun.jpg" alt="Ingo Steinke sitting at his desk in front of a keyboard wearing a t-shirt with pseudo-code: climateAction = async election =&amp;gt; await Promise.resolve(election) || strike() Will the promise resolve? #devsForFuture #developers4future climateStrike"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>devlive</category>
      <category>motivation</category>
      <category>sustainability</category>
    </item>
    <item>
      <title>Make your own API under 30 lines of code</title>
      <author>Shreyas Pahune</author>
      <pubDate>Fri, 24 Sep 2021 10:31:03 +0000</pubDate>
      <link>https://dev.to/shreyazz/make-your-own-api-under-30-lines-of-code-4doh</link>
      <guid>https://dev.to/shreyazz/make-your-own-api-under-30-lines-of-code-4doh</guid>
      <description>&lt;h1&gt;
  &lt;a href="#make-your-own-api-under-30-lines-of-code"&gt;
  &lt;/a&gt;
  Make your own API under 30 lines of code
&lt;/h1&gt;

&lt;p&gt;Hey readers üëãüèª, in this blog we are going to discuss about making our own API in just 30 lines of code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#topics-covered-"&gt;
  &lt;/a&gt;
  Topics Covered :
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;What is an API.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tech used to make one.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to code it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to deploy it (FOR FREE).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Those who all know what APIs are and don't want to know anything else then 'How to code it', you can skip to that part directly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#what-is-an-api-"&gt;
  &lt;/a&gt;
  What is an API :
&lt;/h3&gt;

&lt;p&gt;API stands for &lt;strong&gt;Application Programming Interface&lt;/strong&gt;, which is a way for computer to talk to each other. APIs are just like website, except the UI part, it sends a &lt;strong&gt;request&lt;/strong&gt; to a server and in return the server send a &lt;strong&gt;response&lt;/strong&gt; . &lt;/p&gt;

&lt;p&gt;Most APIs which we use are &lt;strong&gt;RESTFUL APIs&lt;/strong&gt;, which means they follow a set of protocols/rules .&lt;/p&gt;

&lt;p&gt;You all already know what URLs are, but APIs use &lt;strong&gt;URIs&lt;/strong&gt; which stands for &lt;strong&gt;Uniform Resource Identifiers&lt;/strong&gt; and they help to differentiate between data on a server.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RUQdIL7E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hk7ihl7yd6zormxja38h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RUQdIL7E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hk7ihl7yd6zormxja38h.png" alt="api"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There can me many more end points, like here in the above image the end point is &lt;code&gt;/names&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;There are many requests we can make to the server but most common ones are :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GET: Reading the data.&lt;/li&gt;
&lt;li&gt;POST: Creating new data.&lt;/li&gt;
&lt;li&gt;PATCH: Updating new data.&lt;/li&gt;
&lt;li&gt;DELETE: Delete new data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have talked a lot about requesting, let's talk about responses.&lt;/p&gt;

&lt;p&gt;There is a thing called status code, which tells you about the response you got from the server. The responses can be divided into 3 levels.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2** Level (200-300) : Everything was fine, the response is fetched.&lt;/li&gt;
&lt;li&gt;4** Level (400-500): There was something with our request, and the data is not fetched.&lt;/li&gt;
&lt;li&gt;5** Level (500+):  Server has failed to send the data.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#tech-used-to-make-an-api"&gt;
  &lt;/a&gt;
  Tech used to make an API:
&lt;/h3&gt;

&lt;p&gt;I have used :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;li&gt;Node.JS

&lt;ul&gt;
&lt;li&gt;Express JS&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Replit (for deployment)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-to-code-an-api"&gt;
  &lt;/a&gt;
  How to code an API:
&lt;/h3&gt;

&lt;p&gt;This is going to be the most important part of the blog.&lt;/p&gt;

&lt;p&gt;In this blog, I am going to make an API which returns the details of devices available at an electronic shop.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPhone 13&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;White&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OnePlus 9&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Oneplus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPhone 12&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Purple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above is an object which we want the API to return.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By this point I am assuming that you all have initialized npm and installed express &lt;/p&gt;

&lt;p&gt;npm init -y (Initializes NPM)&lt;/p&gt;

&lt;p&gt;npm i express (Install Express)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#steps-"&gt;
  &lt;/a&gt;
  Steps :
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Step 1: We have to import express in our project.

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;const express = require('express');&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Step 2 : Initialize a variable to call the main &lt;code&gt;express()&lt;/code&gt; method.

&lt;ul&gt;
&lt;li&gt; &lt;code&gt;const app = express();&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Step 3: Setup a port.

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;const PORT = 8080;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Step 4: Use a &lt;a href="https://en.wikipedia.org/wiki/Middleware"&gt;middleware&lt;/a&gt; to parse the data into json.

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;app.use(express.json());&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Step 5: Add the Product Object to the file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Till now the code looks like :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPhone 13&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;White&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OnePlus 9&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Oneplus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPhone 12&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Purple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Step 6: Make the server listen to our port / Start the server.

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;app.listen(PORT, () =&amp;gt; console.log('server is üü¢'))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;.listen()&lt;/code&gt; is a function, which starts the server and listens at the port assigned.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The code is üëáüèª&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPhone 13&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;White&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OnePlus 9&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Oneplus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPhone 12&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Purple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`API üü¢`&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Step 7: Make a function which handles &lt;code&gt;GET&lt;/code&gt; Requests.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For this we have an in-built function called as &lt;code&gt;.get(resource-link, callBack-Function)&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/products&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Here we are setting the resource-link as &lt;code&gt;/products&lt;/code&gt; which means the user can get the data when he heads to &lt;code&gt;www.xyz.com/products&lt;/code&gt;. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the callback function, we have 2 parameters one is for request and another is for response. &lt;/li&gt;
&lt;li&gt;Now as a server, when a user sends get request we have to respond to that and send data.&lt;/li&gt;
&lt;li&gt;In agreement to the above point, we are sending the data using &lt;code&gt;res&lt;/code&gt;  (response parameter).&lt;/li&gt;
&lt;li&gt;To send the data we use &lt;code&gt;.send()&lt;/code&gt; method, and additionally we are also sending the &lt;code&gt;status code&lt;/code&gt; using &lt;code&gt;.status()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;That's It!! Your API is ready üéâ&lt;/strong&gt; and right now you can start your &lt;code&gt;localhost&lt;/code&gt; server and head on to &lt;code&gt;http://localhost:3000/products&lt;/code&gt; and you will be able to see the data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-deploy-your-api-for-free-"&gt;
  &lt;/a&gt;
  How to deploy your API for FREE :
&lt;/h3&gt;

&lt;p&gt;If we do not deploy our API, then what is the use of it?&lt;/p&gt;

&lt;p&gt;Deployment in simple terms is making your API go live for 27x7, you can use it whenever you like.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By this point I am assuming that you all have a Replit Account &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The steps are really simple :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Step 1: Make a new project in replit account under the section of Node.JS&lt;/li&gt;
&lt;li&gt;Copy Paste the code you just wrote in your text editor / IDE.&lt;/li&gt;
&lt;li&gt;On the right hand side, you'll see a package section.

&lt;ul&gt;
&lt;li&gt;Go inside it and download express.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Run the code.&lt;/li&gt;
&lt;li&gt;You'll see a URI on the right hand side of the screen like this üëáüèª&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oYPPmzpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c26ht9dpznkwx8dx7wwm.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oYPPmzpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c26ht9dpznkwx8dx7wwm.PNG" alt="link"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now head on to the link and write &lt;code&gt;/products&lt;/code&gt; or the any endpoint which you created and you'll be able to see the data in json format.&lt;/p&gt;




&lt;p&gt;Thank you so much for reading the whole blog üëèüèª, I really appreciate it.&lt;/p&gt;

&lt;p&gt;Till then...good bye !&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Resources For Front - End Developers</title>
      <author>SumantaGitWeb</author>
      <pubDate>Fri, 24 Sep 2021 10:22:09 +0000</pubDate>
      <link>https://dev.to/sumanta_thefrontdev/resources-for-front-end-developers-57lb</link>
      <guid>https://dev.to/sumanta_thefrontdev/resources-for-front-end-developers-57lb</guid>
      <description>&lt;p&gt;&lt;b&gt;Hello!!&lt;/b&gt;&lt;br&gt;
Hope You all are doing great..&lt;/p&gt;

&lt;p&gt;Today I am here with my first post which is some useful resources for &lt;strong&gt;Front - End Developers.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So Here are they:&lt;/p&gt;

&lt;p&gt;1) Tailwind CSS&lt;br&gt;
It Says : "A utility-first CSS framework packed with classes like flex, pt-4, text-center and rotate-90 that can be composed to build any design, directly in your markup."&lt;/p&gt;

&lt;p&gt;2) Alpine JS&lt;br&gt;
It Says : "Your new, lightweight, JavaScript framework."&lt;/p&gt;

&lt;p&gt;3) UnSplash&lt;br&gt;
It Says : "The internet‚Äôs source of freely-usable images.&lt;br&gt;
Powered by creators everywhere."&lt;/p&gt;

&lt;p&gt;4) UnDraw&lt;br&gt;
It Says : "Open-source illustrations for any idea you can imagine and create."&lt;/p&gt;

&lt;p&gt;5) GSAP(Green Sock Animation Platform)&lt;br&gt;
It Says : "Professional-grade JavaScript animation for the modern web"&lt;/p&gt;

&lt;p&gt;6) Three JS&lt;br&gt;
It Says : "Three.js is a cross-browser JavaScript library and application programming interface used to create and display animated 3D computer graphics in a web browser using WebGL. The source code is hosted in a repository on GitHub."&lt;/p&gt;

&lt;p&gt;7) Anime JS&lt;br&gt;
It Says : "Anime.js (/Àà√¶n.…ô.me…™/) is a lightweight JavaScript animation library with a simple, yet powerful API.&lt;br&gt;
It works with CSS properties, SVG, DOM attributes and JavaScript Objects."&lt;/p&gt;

</description>
      <category>webdev</category>
    </item>
    <item>
      <title>How to pick an open-source project to contribute to?</title>
      <author>Pragati Verma</author>
      <pubDate>Fri, 24 Sep 2021 09:47:05 +0000</pubDate>
      <link>https://dev.to/pragativerma18/how-to-pick-an-open-source-project-to-contribute-to-4kak</link>
      <guid>https://dev.to/pragativerma18/how-to-pick-an-open-source-project-to-contribute-to-4kak</guid>
      <description>&lt;p&gt;Contributing to the open-source community and projects can be intimidating even for seasoned developers, let alone newcomers. One of the major problems I‚Äôve had as an early-career developer has been figuring out how to find the project that aligns with my interests as well as the skills that I want to practice. &lt;/p&gt;

&lt;p&gt;Having figured that out, I am here to help beginners understand what they need to consider when determining what open source project to work on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#determine-your-goals"&gt;
  &lt;/a&gt;
  Determine your goals
&lt;/h2&gt;

&lt;p&gt;The starting point would be sitting down and jotting down a list of goals that you hope to accomplish through contributing to an open-source project. If any of your goals seem vague, sit down with them and flesh them out until they are explicit and actionable. The more explicit your goals are, the easier it is to judge if you can meet them. &lt;/p&gt;

&lt;p&gt;Beware that you don't start thinking of this as a competition or contest, and want to contribute only because others are doing it, or you have heard a lot about it, or want some swags or benefits out of it apart from the networking and learning involved. &lt;/p&gt;

&lt;p&gt;Moreover, don't think that these skills necessarily have to be technical skills, in fact, open-source is much more than that. You can contribute to open-source with all kinds of skills ranging from documentation to graphic design, to QA and testing, to project management.&lt;/p&gt;

&lt;p&gt;Here are some questions to consider as you plan to contribute to a possible open-source project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What skills do I possess to contribute to a project?&lt;/li&gt;
&lt;li&gt;What skills do I wish to bring to a project?&lt;/li&gt;
&lt;li&gt;What are my passions/hobbies?&lt;/li&gt;
&lt;li&gt;How much time am I prepared to devote to a project?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When I decided I wanted to work on an open-source project, I knew that I wanted to work on my frontend skills and build new features on a React or Vue application. That's why I chose React Native and then Adobe Docs as my projects during the MLH Fellowship.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To know more about my journey at the MLH Fellowship, &lt;a href="https://itispragativerma.medium.com/my-journey-at-the-mlh-fellowship-a1145e260c09"&gt;read this&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/pragativerma18" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kl_m4K1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--JR-0Kc_W--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/242611/68277387-0fa0-4c79-ad6f-4be3ddc940b7.jpeg" alt="pragativerma18"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pragativerma18/my-journey-at-the-mlh-fellowship-428d" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;My Journey at the MLH Fellowship&lt;/h2&gt;
      &lt;h3&gt;Pragati Verma „Éª Apr 30 „Éª 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#mlhgrad&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#computerscience&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#finding-potential-projects"&gt;
  &lt;/a&gt;
  Finding potential projects
&lt;/h2&gt;

&lt;p&gt;Finding potential projects isn't that hard, you just have to keep looking, or perhaps learn to look at the right place. Here are some good places to look for interesting projects:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-technology"&gt;
  &lt;/a&gt;
  Using technology
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href="https://up-for-grabs.net/"&gt;Up for Grabs&lt;/a&gt;&lt;/strong&gt; - You can search for projects by name, by label, or by tag. A tag can be the language that the project uses.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href="https://goodfirstissue.dev/"&gt;Good First Issues&lt;/a&gt;&lt;/strong&gt; - You can browse by language&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.firsttimersonly.com/"&gt;First Timers Only&lt;/a&gt;&lt;/strong&gt;- Compilation of resources for beginners&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/MunGell/awesome-for-beginners"&gt;Awesome For Beginners&lt;/a&gt;&lt;/strong&gt; - Collection of beginner-friendly projects, sorted according to the programming languages.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#participate-in-open-source-programs"&gt;
  &lt;/a&gt;
  Participate in Open Source Programs
&lt;/h3&gt;

&lt;p&gt;Participating in open-source programs is the easiest and the quickest way to familiarize yourself with the open-source community, and projects. &lt;/p&gt;

&lt;p&gt;These are some of the best beginner-friendly open-source programs -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fellowship.mlh.io/programs/prep"&gt;MLH Fellowship Prep Program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gssoc.girlscript.tech/"&gt;GirlScript Summer Of Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#by-interest"&gt;
  &lt;/a&gt;
  By interest
&lt;/h3&gt;

&lt;p&gt;You can also search for projects based on your interests. The easiest method to do this is to first determine what interests you, then search the Internet (or GitHub) for open source projects relating to your interests. You may occasionally come across specific interest groups that work on open source projects, for example - &lt;a href="https://djangogirls.org/en/"&gt;Django Girls&lt;/a&gt;, &lt;a href="https://www.womenwhocode.com/"&gt;Women Who Code&lt;/a&gt;, etc.&lt;/p&gt;

&lt;p&gt;Once you've compiled a list of prospective projects to which you can help by contributing, you can begin narrowing down your options. Good potential initiatives will fit within the above-mentioned goals and have the following characteristics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A free and open-source license &lt;/li&gt;
&lt;li&gt;Indicators of ongoing development (ensure that it hasn't been inactive for a very long time)&lt;/li&gt;
&lt;li&gt;Guidelines for contributor activity (look for Contributing guidelines, code of conduct, wiki, etc in the GitHub repository).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's discuss these characteristics in a little bit more detail to get a deeper understanding of what to look for in these potential projects to find the most suitable one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understanding-open-source-licenses"&gt;
  &lt;/a&gt;
  Understanding Open source licenses
&lt;/h2&gt;

&lt;p&gt;Open source licenses are often overlooked, but they are an essential component of any open-source project as they govern what you can and cannot do with an open-source project. Before you start contributing to a possible project, it's important looking at the license it is utilizing if it has one.&lt;/p&gt;

&lt;p&gt;While there are many different types of open-source licenses to choose from, there are two main categories: &lt;strong&gt;copyleft&lt;/strong&gt; and &lt;strong&gt;permissive&lt;/strong&gt;. Anyone who works on these licensed projects must be able to read, alter, and share the source code under both types of licenses. However, the two licenses differ in terms of what the user can do with the work and whether the derivative work should be under the same terms as the original work or under different terms.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dA5AEZ0u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://janelia-flyem.github.io/images/open_licenses.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dA5AEZ0u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://janelia-flyem.github.io/images/open_licenses.png" alt="Open Source Lincenses"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Copyleft License&lt;/strong&gt;: A copyleft license prevents a derivative work from being relicensed under a more restrictive license. For example - The GNU Public License (GPL), the GNU Lesser General Public License (LGPL), and the Mozilla Public License.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Permissive License&lt;/strong&gt;: A permissive license permits the creator of a derivative work to change the derivative work's license. It also permits a creator to incorporate a work released under a permissive license into a proprietary work, with the derivative remaining proprietary.&lt;/p&gt;

&lt;p&gt;A permissive license does not obligate the creator of a derivative work to make the derivative work available under a free or open-source license. The Apache License and the MIT License are two popular permissive licenses.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Read more about Open-Source Licenses &lt;a href="https://snyk.io/learn/open-source-licenses/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#determining-signs-of-active-development"&gt;
  &lt;/a&gt;
  Determining signs of active development
&lt;/h2&gt;

&lt;p&gt;Next, look at the history of your possible project to see if it is still active, both in terms of discussion and development activity. &lt;/p&gt;

&lt;p&gt;Some questions to consider while calculating activity levels are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do those who ask questions get answers?&lt;/li&gt;
&lt;li&gt;Is the project welcoming to existing contributors?&lt;/li&gt;
&lt;li&gt;What is the tone of the project's participants (i.e., are they pleasant, or does communication appear cold and uptight?)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#contributor-guidelines"&gt;
  &lt;/a&gt;
  Contributor Guidelines
&lt;/h2&gt;

&lt;p&gt;Finally, find out if your proposed project currently has any guidelines in place for contributors. This is not needed, but it can help you determine whether the project is designed with other contributors in mind, and it can help you determine whether your first contribution will go easily or whether there will be some hiccups along the way. &lt;/p&gt;

&lt;p&gt;Here are some questions to get you started:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Is there any information on how to get the project started? (Look for a readme or wiki)&lt;/li&gt;
&lt;li&gt;Are there any concerns that you can begin to help with? (Look for Open Issues)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;After you've evaluated and analyzed the projects based on the above metrics, it's time to prioritize your potential projects. When you've narrowed your selection of projects down to a few finalists, you can put them to the test by selecting an issue and generating a pull request for each.&lt;/p&gt;

&lt;p&gt;And to ensure that you make meaningful and effective contributions, you can refer to this article on &lt;a href="https://dev.to/pragativerma18/open-source-best-practices-902"&gt;Open Source Best Practices&lt;/a&gt;.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/pragativerma18" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kl_m4K1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--JR-0Kc_W--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/242611/68277387-0fa0-4c79-ad6f-4be3ddc940b7.jpeg" alt="pragativerma18"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pragativerma18/open-source-best-practices-902" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Open Source Best Practices&lt;/h2&gt;
      &lt;h3&gt;Pragati Verma „Éª May 15 „Éª 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#computerscience&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;I hope this advice has given you a better sense of what to look for in an open-source project. These questions are not written in stone; you can refer to them on a frequent basis to determine whether you're on the correct track towards your objectives.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sQnfl9gQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://octodex.github.com/images/hubot.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sQnfl9gQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://octodex.github.com/images/hubot.jpg" alt="Octocat"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is all that I learned along my journey in open-source. I hope that the practices mentioned above take you closer to your next &lt;strong&gt;(effective)&lt;/strong&gt; open-source contribution and help you fulfill your chance to give back to the community, one commit at a time!&lt;/p&gt;

&lt;p&gt;If you find this insightful, do let me know your views in the comments. Also, any kind of feedback is welcome. In case you want to connect with me, follow the links below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/pragativerma18/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://github.com/PragatiVerma18/"&gt;GitHub&lt;/a&gt; | &lt;a href="https://twitter.com/pragati_verma18"&gt;Twitter&lt;/a&gt; | &lt;a href="http://medium.com/@itispragativerma"&gt;Medium&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>hacktoberfest</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
