<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Linux - Find in Multiple Folders and Delete Files Within</title>
      <author>Eyal Lapid</author>
      <pubDate>Sun, 19 Dec 2021 08:05:07 +0000</pubDate>
      <link>https://dev.to/elpddev/find-in-multiple-folders-and-delete-files-within-4keb</link>
      <guid>https://dev.to/elpddev/find-in-multiple-folders-and-delete-files-within-4keb</guid>
      <description>&lt;p&gt;This is a worknote.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scenario"&gt;
  &lt;/a&gt;
  Scenario
&lt;/h2&gt;

&lt;p&gt;In a Javascript monorepo, there was a need to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;delete all dist folders files, not the folders themselfs&lt;/li&gt;
&lt;li&gt;but without touching the .gitignore in the folders&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;find ./packages &lt;span class="nt"&gt;-name&lt;/span&gt; &lt;span class="s2"&gt;"dist"&lt;/span&gt; &lt;span class="nt"&gt;-type&lt;/span&gt; d&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="k"&gt;for &lt;/span&gt;i &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$dir&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do &lt;/span&gt;find &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="nt"&gt;-type&lt;/span&gt; f &lt;span class="se"&gt;\(&lt;/span&gt; &lt;span class="nt"&gt;-iname&lt;/span&gt; &lt;span class="s2"&gt;"*"&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nt"&gt;-iname&lt;/span&gt; &lt;span class="s2"&gt;".gitignore"&lt;/span&gt; &lt;span class="se"&gt;\)&lt;/span&gt; &lt;span class="nt"&gt;-exec&lt;/span&gt; &lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; +&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Find all &lt;code&gt;dist&lt;/code&gt; folders in the monorepo&lt;/li&gt;
&lt;li&gt;Iterate over the folders set and collect all files within them, excluding .gitignore&lt;/li&gt;
&lt;li&gt;Delete all sets of found files.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#solution-walkthrough"&gt;
  &lt;/a&gt;
  Solution Walkthrough
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#find-all-folders-with-specific-name"&gt;
  &lt;/a&gt;
  Find all folders with specific name
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;find ./packages &lt;span class="nt"&gt;-name&lt;/span&gt; &lt;span class="s2"&gt;"dist"&lt;/span&gt; &lt;span class="nt"&gt;-type&lt;/span&gt; d
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;find&lt;/code&gt; - &lt;a href="https://man7.org/linux/man-pages/man1/find.1.html"&gt;find&lt;/a&gt; - find files. Allow filtering.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;./packages&lt;/code&gt; - target root folder to start the search from.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-name "dist"&lt;/code&gt; - filter only object with the name "dist".&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-type d&lt;/code&gt; - filter only object with type of directory.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#execute-bash-expression"&gt;
  &lt;/a&gt;
  Execute Bash Expression
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://tldp.org/LDP/abs/html/commandsub.html"&gt;Exectute&lt;/a&gt; an expression in bash and put the results in a local variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#find-all-relevant-files-in-a-fo-raw-er"&gt;
  &lt;/a&gt;
  Find all relevant files in a fo`er
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
find $i -type f \( -iname "*" ! -iname ".gitignore" \)&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$i&lt;/code&gt; - Variabe containing the folder name from the &lt;code&gt;for&lt;/code&gt; iteration.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-type f&lt;/code&gt; - filter object only of type of &lt;code&gt;file&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-iname&lt;/code&gt; - From the docs: Like &lt;code&gt;-name&lt;/code&gt;, but the match is case insensitive.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;!&lt;/code&gt; - From the docs: &lt;code&gt;!&lt;/code&gt; expr True if expr is false.  This character will also usually need protection from interpretation by the shell.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\(&lt;/code&gt; - From the docs: ( expr ) Force precedence.  Since parentheses are special to the shell, you will normally need to quote them.  Many of the examples in this manual page use backslashes for this purpose: &lt;code&gt;\(...\)' instead of &lt;/code&gt;(...)`&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="k"&gt;for &lt;/span&gt;i &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$dir&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do &lt;/span&gt;find &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="nt"&gt;-type&lt;/span&gt; f &lt;span class="se"&gt;\(&lt;/span&gt; &lt;span class="nt"&gt;-iname&lt;/span&gt; &lt;span class="s2"&gt;"*"&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nt"&gt;-iname&lt;/span&gt; &lt;span class="s2"&gt;".gitignore"&lt;/span&gt; &lt;span class="se"&gt;\)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#run-through-folders-set-and-execute-find-on-them"&gt;
  &lt;/a&gt;
  Run through folders set and execute find on them
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="k"&gt;for &lt;/span&gt;i &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$dir&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do &lt;/span&gt;find &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;for&lt;/code&gt; - &lt;a href="https://www.gnu.org/software/bash/manual/html_node/Looping-Constructs.html"&gt;for loop&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$i&lt;/code&gt; - iteration variable&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#execute-delete-on-found-set"&gt;
  &lt;/a&gt;
  Execute delete on found set
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;find $i -exec rm {} +
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;-exec&lt;/code&gt; - From the docs: Execute command; true if 0 status is returned.  All following arguments to find are taken to be arguments to the command until an argument consisting of `;' is encountered.&lt;/p&gt;

&lt;p&gt;The string `{}' is replaced by the current file name being processed everywhere it occurs in the arguments to the command, not just in arguments where it is alone, as in some versions of find.&lt;/p&gt;

</description>
      <category>linux</category>
      <category>bash</category>
      <category>worknote</category>
    </item>
    <item>
      <title>CouchDB clients in Javascript</title>
      <author>Jordan Soo Yen Yih</author>
      <pubDate>Sun, 19 Dec 2021 07:42:11 +0000</pubDate>
      <link>https://dev.to/yenyih/couchdb-clients-in-javascript-25d9</link>
      <guid>https://dev.to/yenyih/couchdb-clients-in-javascript-25d9</guid>
      <description>&lt;p&gt;&lt;a href="https://couchdb.apache.org/"&gt;Apache CouchDB&lt;/a&gt; is an open source NoSQL document database that collects and stores data in JSON-based document formats. Since CouchDB makes use of HTTP protocol, therefore we can use any HTTP client to connect with CouchDB. However, there are some existing CouchDB client libraries that are very easy and convenience to use. Below I would like to share 3 libraries that I frequent use to connect with CouchDB.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1-nano"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://github.com/apache/couchdb-nano"&gt;Nano&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Offical Apache CouchDB library for Node.js.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save nano
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#connect-to-couchdb-server"&gt;
  &lt;/a&gt;
  Connect to CouchDB server
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const nano = require('nano')('http://localhost:5984');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-a-new-database"&gt;
  &lt;/a&gt;
  Create a new database
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nano.db.create('blogs');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#use-an-existing-database"&gt;
  &lt;/a&gt;
  Use an existing database
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const blogs = nano.db.use('blogs');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it, easy peasy.😎 Now we can perform some queries with &lt;code&gt;blogs&lt;/code&gt;. &lt;code&gt;nano&lt;/code&gt; underlying is making HTTP API calls to CouchDB service. Such operations are asynchronous, we can use either &lt;code&gt;Promises&lt;/code&gt; or &lt;code&gt;Callbacks&lt;/code&gt; to receive the asynchronous data back from the library.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#promises"&gt;
  &lt;/a&gt;
  Promises
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blogs.get('post-A').then(response =&amp;gt; {
  // succeeded
  console.info(response);
}).catch(err =&amp;gt; {
  // failed
  console.error(err)
})
});

// OR

try {
  const response = await blogs.get('post-A')
  // succeeded
  console.log(response)
} catch (e) {
  // failed
  console.error(e)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#callbacks"&gt;
  &lt;/a&gt;
  Callbacks
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blogs.get('post-A', (err, data) =&amp;gt; {
  // errors are in 'err' &amp;amp; response is in 'data'
})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nano even supports stream which mean we can proxy the whatever requests from CouchDB to the end user.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blogs.listAsStream()
  .on('error', (e) =&amp;gt; console.error('error', e))
  .pipe(process.stdout)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Easy to use.&lt;/li&gt;
&lt;li&gt;CouchDB API compatible.&lt;/li&gt;
&lt;li&gt;Supports Stream.&lt;/li&gt;
&lt;li&gt;The vast majority of library calls return native Promises.&lt;/li&gt;
&lt;li&gt;Detailed TypeScript definitions are built in.&lt;/li&gt;
&lt;li&gt;Easy to debug as errors are proxied directly from CouchDB: if you know CouchDB you already know &lt;code&gt;nano&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Cannot use in browser. Only Nodejs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-pouchdb"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://pouchdb.com/"&gt;PouchDB&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;An open-source JavaScript database inspired by Apache CouchDB that is designed to run well within the browser. However, PouchDB also runs in Node.js and can be used as a direct interface to CouchDB-compatible servers. The API works the same in every environment, so you can spend less time worrying about browser differences, and more time writing clean, consistent code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// For browser
npm install pouchdb-browser

// For Node
npm install pouchdb-node
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;PouchDB supports custom builds, meaning you can pick and choose the features of PouchDB that you want to use, potentially resulting in smaller bundle sizes and faster build times. Both &lt;code&gt;pouchdb-browser&lt;/code&gt; and &lt;code&gt;pouchdb-node&lt;/code&gt; contains the replication, HTTP, and map/reduce plugins. I personally prefer pick and choose the features of PouchDB I want instead of using &lt;code&gt;pouchdb-browser&lt;/code&gt; or &lt;code&gt;pouchdb-node&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const PouchDB = require('pouchdb-core')
  .plugin(require('pouchdb-adapter-http'))
  .plugin(require('pouchdb-mapreduce'))
  .plugin(require('pouchdb-replication'));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#connect-to-a-couchdb-database"&gt;
  &lt;/a&gt;
  Connect to a CouchDB database
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const blogs = new PouchDB('http://localhost:5984/blogs');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-a-new-database"&gt;
  &lt;/a&gt;
  Create a new database
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const blogs = new PouchDB('blogs');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#query"&gt;
  &lt;/a&gt;
  Query
&lt;/h3&gt;

&lt;p&gt;PouchDB also supports &lt;code&gt;Promises&lt;/code&gt; and &lt;code&gt;Callbacks&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blogs.get('post-A').then(doc =&amp;gt; {
  // handle doc
}).catch(err =&amp;gt; {
  console.log(err);
});

// OR

try {
  const doc = await blogs.get('post-A');
} catch (err) {
  console.log(err);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blogs.get('post-A', function(err, doc) {
  if (err) { return console.log(err); }
  // handle doc
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Easy to learn &amp;amp; use.&lt;/li&gt;
&lt;li&gt;Works in all modern browsers and Nodejs.&lt;/li&gt;
&lt;li&gt;Lightweight&lt;/li&gt;
&lt;li&gt;Support Offline&lt;/li&gt;
&lt;li&gt;Support Custom Builds / Plugins&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Not fully support CouchDB API, one of the example is you cannot use CouchDB's &lt;code&gt;update function&lt;/code&gt; via PouchDB.&lt;/li&gt;
&lt;li&gt;Official library doesn't come with Stream. However, since PouchDB supports custom builds, you still can do stream with external PouchDB projects.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;There is a a list of known plugins, tools and projects can be used with PouchDB. You can find it &lt;a href="https://pouchdb.com/external.html"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#3-axios"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://github.com/axios/axios"&gt;Axios&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;If you are a javascript developer, you should probably already know about axios. It is a Promise based HTTP client for the browser and node.js.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save axios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#connect-to-couchdb-server"&gt;
  &lt;/a&gt;
  Connect to CouchDB server
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const couchdb = axios.create({
  baseURL: 'http://localhost:5984',
  timeout: 1000,
  headers: { 'X-Custom-Header': 'foobar'}
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-a-new-database"&gt;
  &lt;/a&gt;
  Create a new database
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;couchdb.put('/blogs').then(response =&amp;gt; {
  // succeeded
}).catch(err =&amp;gt; {
  // failed
});

// OR

try {
  const response = await couchdb.put('/blogs');
  console.info(response.data);
} catch (err) {
  console.error(err);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#query"&gt;
  &lt;/a&gt;
  Query
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;couchdb.get('/blogs/post-A').then(response =&amp;gt; {
  console.info(response.data);
}).catch(err =&amp;gt; {
  console.error(err);
});

// OR

try {
  const response = await couchdb.get('/blogs/post-A');
  console.info(response.data);
} catch (err) {
  console.error(err);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Works in all modern browsers and Nodejs.&lt;/li&gt;
&lt;li&gt;Supports the Promise API&lt;/li&gt;
&lt;li&gt;Intercept request and response&lt;/li&gt;
&lt;li&gt;Transform request and response data&lt;/li&gt;
&lt;li&gt;Cancel requests&lt;/li&gt;
&lt;li&gt;Automatic transforms for JSON data&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Codes are not as clean/minimal as PouchDB. In order to achieve minimal of code with axios, you will need to spend extra time to build your own factory functions on top of axios.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for Reading.
&lt;/h2&gt;

&lt;p&gt;If you know any other interesting libraries that play well with CouchDB, please leave comments below to share with me. Thank you.☺&lt;/p&gt;

</description>
      <category>database</category>
      <category>javascript</category>
      <category>node</category>
    </item>
    <item>
      <title>How I Created a Crowdfunding Platform with Web3 &amp; Micro-Frontends</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 19 Dec 2021 06:32:06 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/how-i-created-a-crowdfunding-platform-with-web3-micro-frontends-3pb2</link>
      <guid>https://dev.to/ruppysuppy/how-i-created-a-crowdfunding-platform-with-web3-micro-frontends-3pb2</guid>
      <description>&lt;p&gt;Over the past few months, I was learning about &lt;strong&gt;Micro-Frontend&lt;/strong&gt; &amp;amp; &lt;strong&gt;Web3 Technologies&lt;/strong&gt;. As the best way to learn is to &lt;em&gt;try things hands-on&lt;/em&gt;, so I built up a small side-project to test out my understanding of the topics.&lt;/p&gt;

&lt;p&gt;The aim of the project was to create a &lt;strong&gt;Crowdfunding&lt;/strong&gt; Platform based on the &lt;strong&gt;Ethereum Blockchain&lt;/strong&gt; utilizing &lt;strong&gt;Micro-Frontend Architecture&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can dive into the source code here&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ruppysuppy"&gt;
        ruppysuppy
      &lt;/a&gt; / &lt;a href="https://github.com/ruppysuppy/Crypto-Crowdfund"&gt;
        Crypto-Crowdfund
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🤑💰 Crowdfunding Platform backed by Ethereum Blockchain to bring your creative projects to life
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;And the website here: &lt;a href="https://crypto-crowdfund.web.app/"&gt;https://crypto-crowdfund.web.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You need a &lt;strong&gt;&lt;a href="https://metamask.io/"&gt;MetaMask&lt;/a&gt; Wallet&lt;/strong&gt; to interact with the blockchain&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#smart-contract"&gt;
  &lt;/a&gt;
  Smart Contract
&lt;/h1&gt;

&lt;p&gt;You can interact with &lt;strong&gt;Ethereum Blockchain&lt;/strong&gt; using &lt;strong&gt;Smart Contracts&lt;/strong&gt;, so let's create one as per our requirement. The &lt;strong&gt;Contracts&lt;/strong&gt; used in the project is available &lt;a href="https://github.com/ruppysuppy/Crypto-Crowdfund/blob/main/packages/smart-contract/contracts/Campaign.sol"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Making changes to a deployed &lt;strong&gt;Smart Contracts&lt;/strong&gt; is not possible, and you have to &lt;em&gt;re-deploy&lt;/em&gt; the contract, which costs &lt;strong&gt;Ethereum coins&lt;/strong&gt; as &lt;strong&gt;Gas Fee&lt;/strong&gt;. So it is essential that you &lt;a href="https://github.com/ruppysuppy/Crypto-Crowdfund/tree/main/packages/smart-contract/test"&gt;extensively test&lt;/a&gt; the contract before deploying&lt;/p&gt;

&lt;p&gt;Since storing data in the &lt;strong&gt;Smart Contracts&lt;/strong&gt; incur &lt;strong&gt;Gas Fee&lt;/strong&gt; too, only the essential data, such as the &lt;strong&gt;Campaign Manager&lt;/strong&gt;, the &lt;strong&gt;Votes for a Transaction Request&lt;/strong&gt;, etc are stored on the &lt;strong&gt;Blockchain&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#potential-improvements"&gt;
  &lt;/a&gt;
  Potential Improvements
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Split the &lt;strong&gt;Campaign Factory&lt;/strong&gt; and the &lt;strong&gt;Campaign&lt;/strong&gt; into separate files containing only the given &lt;strong&gt;Smart Contract&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Add the &lt;strong&gt;Manager functionality&lt;/strong&gt; as a separate &lt;strong&gt;Smart Contract&lt;/strong&gt; and add it to the &lt;strong&gt;Campaign&lt;/strong&gt; using inheritance&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#microfrontend"&gt;
  &lt;/a&gt;
  Micro-Frontend
&lt;/h1&gt;

&lt;p&gt;With the &lt;strong&gt;Smart Contract&lt;/strong&gt; out of the way, let's focus on the &lt;strong&gt;Micro-Frontend&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VCvhYbjg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ja1v7dql1s8ilsps3w9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VCvhYbjg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ja1v7dql1s8ilsps3w9.gif" alt="Let's Focus" width="498" height="498"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Micro-Frontend architecture&lt;/strong&gt; is a design approach in which a Frontend app is decomposed into &lt;strong&gt;individual, independent “micro-apps”&lt;/strong&gt; working &lt;em&gt;loosely together&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Was &lt;strong&gt;Micro-Frontend Architecture&lt;/strong&gt; essential for this project?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The answer to that is a definite &lt;strong&gt;NO&lt;/strong&gt;. Then why did I use it? &lt;em&gt;Just to put what I learned to practice&lt;/em&gt;. &lt;strong&gt;Micro-Frontend Architecture&lt;/strong&gt; is useful only when working with &lt;em&gt;large teams&lt;/em&gt;, &lt;em&gt;where the role of each team is to work on only a small sub-section of the project&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Micro-Frontend&lt;/strong&gt; was implemented using &lt;strong&gt;Webpack's Module Federation Plugin&lt;/strong&gt;. If you want to learn how to implement &lt;strong&gt;Micro-Frontends&lt;/strong&gt; from scratch, you are highly encouraged to check out &lt;a href="https://dev.to/ruppysuppy/micro-frontends-the-next-gen-way-to-build-web-apps-16da"&gt;this article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Webpack&lt;/strong&gt; config for each of the sub-apps and the container follow the same method. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make a &lt;code&gt;common config&lt;/code&gt; file with the shared &lt;strong&gt;config&lt;/strong&gt; for &lt;strong&gt;dev&lt;/strong&gt; &amp;amp; &lt;strong&gt;prod&lt;/strong&gt; build, for example:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// imports ...&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// all shared config ...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make a &lt;code&gt;dev config&lt;/code&gt; and merge it with the &lt;code&gt;common config&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;webpack-merge&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// other imports ...&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;devConfig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// all development config ...&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;commonConfig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;devConfig&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finally make a &lt;code&gt;prod config&lt;/code&gt; and merge it with the &lt;code&gt;common config&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;webpack-merge&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// other imports ...&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;prodConfig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// all production config ...&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;commonConfig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;prodConfig&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can check out all the configuration files &lt;a href="https://github.com/ruppysuppy/Crypto-Crowdfund/search?l=JavaScript&amp;amp;q=webpack"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; In the project all the &lt;strong&gt;sub-apps&lt;/strong&gt; use &lt;strong&gt;React&lt;/strong&gt;, but you can very well use any other &lt;em&gt;library&lt;/em&gt; or &lt;em&gt;framework&lt;/em&gt; in any of them&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#marketing"&gt;
  &lt;/a&gt;
  Marketing
&lt;/h2&gt;

&lt;p&gt;Let's start with the simplest &lt;strong&gt;sub-app&lt;/strong&gt;, the &lt;a href="https://github.com/ruppysuppy/Crypto-Crowdfund/tree/main/packages/marketing"&gt;Marketing sub-app&lt;/a&gt; is only responsible for rendering the &lt;em&gt;home&lt;/em&gt;, &lt;em&gt;about&lt;/em&gt;, &lt;em&gt;faq&lt;/em&gt;, &lt;em&gt;terms-and-conditions&lt;/em&gt;, &lt;em&gt;privacy-policy&lt;/em&gt;, and &lt;em&gt;disclaimer&lt;/em&gt; pages, and doesn't have much functionality apart from this.&lt;/p&gt;

&lt;p&gt;Just as the &lt;strong&gt;Micro-Frontend sub-apps&lt;/strong&gt; should only expose generic functions to avoid &lt;em&gt;library&lt;/em&gt; or &lt;em&gt;framework&lt;/em&gt; dependency between &lt;strong&gt;sub-apps&lt;/strong&gt; and the &lt;strong&gt;container&lt;/strong&gt;, the &lt;strong&gt;Marketing sub-apps&lt;/strong&gt; exposes a &lt;code&gt;mount&lt;/code&gt; function which takes simple objects as &lt;em&gt;params&lt;/em&gt;. It has the following signature:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Mount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;mountPoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;defaultHistory&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;History&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;MemoryHistory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;initialPath&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;isAuthenticated&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;HOME&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;ABOUT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;FAQ&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;TERMS_AND_CONDITIONS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;PRIVACY_POLICY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;DISCLAIMER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;CAMPAIGNS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;SIGN_IN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nl"&gt;onNavigate&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;pathname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;onParentNavigate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;pathname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Using the &lt;code&gt;mount&lt;/code&gt; function, the container can mount the &lt;strong&gt;sub-app&lt;/strong&gt; as per requirement. &lt;code&gt;defaultHistory&lt;/code&gt;, &lt;code&gt;onNavigate&lt;/code&gt; and &lt;code&gt;onParentNavigate&lt;/code&gt; are used to keep both the container and the &lt;strong&gt;sub-app&lt;/strong&gt; in sync and avoid some nasty bugs.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#auth"&gt;
  &lt;/a&gt;
  Auth
&lt;/h2&gt;

&lt;p&gt;Next up is the &lt;a href="https://github.com/ruppysuppy/Crypto-Crowdfund/tree/main/packages/auth"&gt;Auth sub-app&lt;/a&gt;. It uses &lt;strong&gt;Firebase&lt;/strong&gt; authentication to &lt;strong&gt;sign-in&lt;/strong&gt; and &lt;strong&gt;sign-up&lt;/strong&gt; users and grants them the required permissions. &lt;/p&gt;

&lt;p&gt;It works similarly as the &lt;strong&gt;Marketing sub-app&lt;/strong&gt;, by exposing the &lt;code&gt;mount&lt;/code&gt; function with a similar set of &lt;em&gt;params&lt;/em&gt; and handling the &lt;em&gt;sign-in&lt;/em&gt; and &lt;em&gt;sign-up&lt;/em&gt; pages &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#potential-improvements"&gt;
  &lt;/a&gt;
  Potential Improvements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use a method to &lt;strong&gt;sign-in&lt;/strong&gt; only using the &lt;a href="https://metamask.io/"&gt;MetaMask&lt;/a&gt; account, removing the need to &lt;strong&gt;sign-in&lt;/strong&gt; in two places to get full access to the application&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#blockchain"&gt;
  &lt;/a&gt;
  Blockchain
&lt;/h2&gt;

&lt;p&gt;Finally, we are at the most difficult to understand &lt;strong&gt;sub-app&lt;/strong&gt; of all, the &lt;a href="https://github.com/ruppysuppy/Crypto-Crowdfund/tree/main/packages/blockchain"&gt;Blockchain sub-app&lt;/a&gt; is the meat of the project, enabling users to interact with the &lt;strong&gt;backend&lt;/strong&gt; &amp;amp; the &lt;strong&gt;blockchain&lt;/strong&gt; (to interact with the &lt;strong&gt;blockchain&lt;/strong&gt;, you need a &lt;a href="https://metamask.io/"&gt;MetaMask&lt;/a&gt; extension on your browser). &lt;/p&gt;

&lt;p&gt;It handles the &lt;em&gt;account&lt;/em&gt;, &lt;em&gt;campaign&lt;/em&gt;, &lt;em&gt;campaigns&lt;/em&gt; and &lt;em&gt;create-campaign&lt;/em&gt; pages.&lt;/p&gt;

&lt;p&gt;As mentioned previously, &lt;em&gt;only the essential data is stored on the contracts&lt;/em&gt;, saving the rest on &lt;strong&gt;Cloud Firestore&lt;/strong&gt;. The data from the campaigns are fetched from the addresses residing on the &lt;strong&gt;Blockchain&lt;/strong&gt;, and then data from &lt;strong&gt;Firestore&lt;/strong&gt; is merged to generate the complete data for a given &lt;strong&gt;Campaign&lt;/strong&gt;. Only the creator of the &lt;strong&gt;Campaign&lt;/strong&gt; can modify the data on &lt;strong&gt;Firestore&lt;/strong&gt; or create &lt;strong&gt;Transaction Request&lt;/strong&gt; to spend the available funds, which the Contributors can approve.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#potential-improvements"&gt;
  &lt;/a&gt;
  Potential Improvements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Using &lt;em&gt;image uploads&lt;/em&gt; in place of &lt;em&gt;add url to image&lt;/em&gt; for both the cover image and the user profile picture (skipped it as the main focus was on integrating &lt;strong&gt;web3&lt;/strong&gt; &amp;amp; &lt;strong&gt;micro-frontend&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#container"&gt;
  &lt;/a&gt;
  Container
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://github.com/ruppysuppy/Crypto-Crowdfund/tree/main/packages/container"&gt;Container&lt;/a&gt; is responsible for &lt;em&gt;condensing all the &lt;strong&gt;sub-apps&lt;/strong&gt; into a single application&lt;/em&gt; and &lt;em&gt;controlling what is displayed on the screen&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#potential-improvements"&gt;
  &lt;/a&gt;
  Potential Improvements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Improvised &lt;strong&gt;UI/UX&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h1&gt;

&lt;p&gt;It's finally over...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N_zznmOx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qmw8ndm93q9ytu13kfh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N_zznmOx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qmw8ndm93q9ytu13kfh.gif" alt="Relief" width="498" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This article presented a &lt;em&gt;brief overview&lt;/em&gt; of the project, you can always dive into the &lt;strong&gt;source code&lt;/strong&gt; and &lt;em&gt;check out the project line by line&lt;/em&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ruppysuppy"&gt;
        ruppysuppy
      &lt;/a&gt; / &lt;a href="https://github.com/ruppysuppy/Crypto-Crowdfund"&gt;
        Crypto-Crowdfund
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🤑💰 Crowdfunding Platform backed by Ethereum Blockchain to bring your creative projects to life
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Happy Developing!&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Need a &lt;strong&gt;Top Rated Front-End Development Freelancer&lt;/strong&gt; to chop away your development woes? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to see what I am working on? Check out my &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Personal Website&lt;/a&gt; and &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to connect? Reach out to me on &lt;a href="https://www.linkedin.com/in/tapajyoti-bose/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a freelancer who will start off as a &lt;strong&gt;Digital Nomad&lt;/strong&gt; in mid-2022. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for &lt;strong&gt;Weekly new Tidbits&lt;/strong&gt; on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are a few commonly asked questions I get. So, I hope this &lt;strong&gt;FAQ&lt;/strong&gt; section solves your issues.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;I am a beginner, how should I learn Front-End Web Dev?&lt;/strong&gt;&lt;br&gt;
Look into the following articles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/ruppysuppy/front-end-developer-roadmap-zero-to-hero-4pkf"&gt;Front End Development Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/ruppysuppy/5-projects-to-master-front-end-development-57p"&gt;Front End Project Ideas&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you mentor me?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Sorry, I am already under a lot of workload and would not have the time to mentor anyone.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you like to collaborate on our site?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
As mentioned in the &lt;em&gt;previous question&lt;/em&gt;, I am in a time crunch, so I would have to pass on such opportunities.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>webdev</category>
      <category>typescript</category>
      <category>webpack</category>
      <category>web3</category>
    </item>
    <item>
      <title>How to install tarball (.tar) files in linux</title>
      <author>Arbitrary</author>
      <pubDate>Sun, 19 Dec 2021 06:04:10 +0000</pubDate>
      <link>https://dev.to/arbitrary/how-to-install-tarball-tar-files-in-linux-33aa</link>
      <guid>https://dev.to/arbitrary/how-to-install-tarball-tar-files-in-linux-33aa</guid>
      <description>&lt;p&gt;Does it happen to you that you that whenever you want to install a piece of software you're give either a &lt;code&gt;.deb&lt;/code&gt; file or a &lt;code&gt;.tar&lt;/code&gt; file. Installing &lt;code&gt;.deb&lt;/code&gt; files is easy, it's just like how you do in windows, but &lt;code&gt;.tar&lt;/code&gt; files are a pain specially for beginners. &lt;br&gt;
In this simple tutorial we'll learn how to download and install &lt;code&gt;.tar&lt;/code&gt; file. I'll use Ubuntu but it should work in most Linux distros. I'll install *&lt;em&gt;waterfox web browser *&lt;/em&gt; but the process is similar for all the tarball (.tar) installation files.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  tldr;
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;download the tar file&lt;/li&gt;
&lt;li&gt;extract it to some location&lt;/li&gt;
&lt;li&gt;create a desktop entry for running the application&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#detailed-method"&gt;
  &lt;/a&gt;
  Detailed method
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#step-1-download-the-raw-tar-endraw-file-and-then-move-it-to-the-directory-where-you-want-to-install-it"&gt;
  &lt;/a&gt;
  Step 1 :download the &lt;code&gt;.tar&lt;/code&gt; file and then move it to the directory where you want to install it.
&lt;/h3&gt;

&lt;p&gt;After downloading the file open the terminal in current directory to move the file to &lt;code&gt;/opt&lt;/code&gt; directory using the following command.&lt;br&gt;
you can change the filename and target directory accordingly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo mv  waterfox-G4.0.5.en-US.linux-x86_64.tar.bz2 /opt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-2-extract-the-raw-tar-endraw-file"&gt;
  &lt;/a&gt;
  Step 2: Extract the &lt;code&gt;.tar&lt;/code&gt; file
&lt;/h3&gt;

&lt;p&gt;first goto the directory where you moved the &lt;code&gt;.tar&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd /opt/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To extract the &lt;code&gt;.tar&lt;/code&gt; file present in the current directory to use the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo tar xjf waterfox-G4.0.5.en-US.linux-x86_64.tar.bz2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;you can replace the &lt;code&gt;.tar&lt;/code&gt; filename i.e. &lt;code&gt;waterfox-G4.0.5.en-US.linux-x86_64.tar.bz2&lt;/code&gt; as per your filename.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-create-desktop-entry-with-appropriate-permissions"&gt;
  &lt;/a&gt;
  Step 3: Create desktop entry with appropriate permissions
&lt;/h3&gt;

&lt;p&gt;make yourself owner of the extracted repository&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo chown -R $USER /opt/waterfox
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a desktop entry so that you don't need to come to this directory to launch the application. &lt;br&gt;
run the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gedit ~/.local/share/applications/waterfox.desktop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;it'll open gedit text editor where you need to insert the specifications of the desktop entry.&lt;br&gt;
paste the following in the editor and save.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Desktop Entry]
Name=Waterfox
Exec=/opt/waterfox/waterfox %u
Terminal=false
Icon=/opt/waterfox/browser/chrome/icons/default/default128.png
Type=Application
Categories=Application;Network;X-Developer;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Again, change the various parameters and paths according to your setup.&lt;/p&gt;

&lt;p&gt;Desktop entry has many parameters but only a few are required but you should add at least these. You can read more at &lt;a href="https://specifications.freedesktop.org/desktop-entry-spec/desktop-entry-spec-0.9.3.html"&gt;Desktop Entry Standard&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally you need to make your desktop entry executable using the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;chmod +x ~/.local/share/applications/waterfox.desktop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;you can change the name of desktop entry accordingly.&lt;/p&gt;

&lt;p&gt;finally you can remove the &lt;code&gt;.tar&lt;/code&gt; file using the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo rm -rf waterfox*.tar.bz2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>linux</category>
      <category>ubuntu</category>
      <category>tutorial</category>
      <category>tar</category>
    </item>
    <item>
      <title>Connect Server with Express Engine- EJS Work as a Frontend</title>
      <author>Deepak</author>
      <pubDate>Sun, 19 Dec 2021 05:05:01 +0000</pubDate>
      <link>https://dev.to/deepakjaiswal/connect-server-with-express-engine-ejs-work-as-a-frontend-5do9</link>
      <guid>https://dev.to/deepakjaiswal/connect-server-with-express-engine-ejs-work-as-a-frontend-5do9</guid>
      <description>&lt;p&gt;many of user does not understand how we create our data to frontend in react so this article help for you.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;first we install&lt;/p&gt;

&lt;p&gt;npm install ejs&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;then set some cofigurations in your project&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;first make folder views
&lt;code&gt;app.set('view engine','ejs');&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#indexejs"&gt;
  &lt;/a&gt;
  index.ejs
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
`&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;title&amp;gt;Express Engine&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;%= heading  %&amp;gt; 
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;`
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in our index.js we simple render the page index.ejs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;`app.get('/',(req,res)=&amp;gt;{

   res.render('index.ejs',{heading:"first Page"});
})`
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;EJS work as a component based like in react &lt;/p&gt;

&lt;p&gt;simply use include file&lt;/p&gt;

&lt;p&gt;&lt;code&gt;include('header.ejs')&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;some developers are think ejs is tough for us but don&lt;code&gt;t worry about this is a simple like you work on html but some operation map array of content then use it like you use php as server .&lt;br&gt;
&lt;/code&gt;&amp;lt;% array.forEach(item=&amp;gt;{}) %&amp;gt;`&lt;/p&gt;

&lt;p&gt;we can do everything using ejs.&lt;/p&gt;

</description>
      <category>node</category>
      <category>express</category>
      <category>ejs</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Dockerfile for Go</title>
      <author>Young Yoshie</author>
      <pubDate>Sun, 19 Dec 2021 04:46:17 +0000</pubDate>
      <link>https://dev.to/youngyoshie/dockerfile-for-go-4jjp</link>
      <guid>https://dev.to/youngyoshie/dockerfile-for-go-4jjp</guid>
      <description>&lt;p&gt;Each time I start a new Go project, I repeat many steps.&lt;br&gt;
Like set up &lt;code&gt;.gitignore&lt;/code&gt;, CI configs, Dockerfile, ...&lt;/p&gt;

&lt;p&gt;So I decide to have a baseline Dockerfile like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; golang:1.18beta1-bullseye as builder&lt;/span&gt;

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /build&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; go.mod .&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; go.sum .&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; vendor .&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nv"&gt;CGO_ENABLED&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0 &lt;span class="nv"&gt;GOOS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;linux &lt;span class="nv"&gt;GOARCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;amd64 &lt;span class="nv"&gt;GOAMD64&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;v3 go build &lt;span class="nt"&gt;-o&lt;/span&gt; ./app main.go

&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; gcr.io/distroless/base-debian11&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; --from=builder /build/app /app&lt;/span&gt;

&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; ["/app"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I use &lt;a href="https://docs.docker.com/develop/develop-images/multistage-build/"&gt;multi-stage build&lt;/a&gt; to keep my image size small.&lt;br&gt;
First stage is &lt;a href="https://hub.docker.com/_/golang"&gt;Go official image&lt;/a&gt;,&lt;br&gt;
second stage is &lt;a href="https://github.com/GoogleContainerTools/distroless"&gt;Distroless&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Before Distroless, I use &lt;a href="https://hub.docker.com/_/alpine"&gt;Alpine official image&lt;/a&gt;,&lt;br&gt;
There is a whole discussion on the Internet to choose which is the best base image for Go.&lt;br&gt;
After reading some blogs, I discover Distroless as a small and secure base image.&lt;br&gt;
So I stick with it for a while.&lt;/p&gt;

&lt;p&gt;Also, remember to match Distroless Debian version with Go official image Debian version.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; golang:1.18beta1-bullseye as builder&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is Go image I use as a build stage.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /build&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; go.mod .&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; go.sum .&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; vendor .&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I use &lt;code&gt;/build&lt;/code&gt; to emphasize that I am building something in that directory.&lt;/p&gt;

&lt;p&gt;The 4 &lt;code&gt;COPY&lt;/code&gt; lines are familiar if you use Go enough.&lt;br&gt;
First is &lt;code&gt;go.mod&lt;/code&gt; and &lt;code&gt;go.sum&lt;/code&gt; because it defines Go modules.&lt;br&gt;
The second is &lt;code&gt;vendor&lt;/code&gt; because I use it a lot, this is not necessary but I use it because I don't want each time I build Dockerfile, I need to redownload Go modules.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nv"&gt;CGO_ENABLED&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0 &lt;span class="nv"&gt;GOOS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;linux &lt;span class="nv"&gt;GOARCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;amd64 &lt;span class="nv"&gt;GOAMD64&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;v3 go build &lt;span class="nt"&gt;-o&lt;/span&gt; ./app main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is where I build Go program.&lt;br&gt;
&lt;code&gt;CGO_ENABLED=0&lt;/code&gt; because I don't want to mess with C libraries.&lt;br&gt;
&lt;code&gt;GOOS=linux GOARCH=amd64&lt;/code&gt; is easy to explain, Linux with x86-64.&lt;br&gt;
&lt;code&gt;GOAMD64=v3&lt;/code&gt; is new since &lt;a href="https://tip.golang.org/doc/go1.18#amd64"&gt;Go 1.18&lt;/a&gt;,&lt;br&gt;
I use v3 because I read about AMD64 version in &lt;a href="https://gitlab.archlinux.org/archlinux/rfcs/-/blob/master/rfcs/0002-march.rst"&gt;Arch Linux rfcs&lt;/a&gt;. TLDR's newer computers are already x86-64-v3.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; gcr.io/distroless/base-debian11&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; --from=builder /build/app /app&lt;/span&gt;

&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; ["/app"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, I copy &lt;code&gt;app&lt;/code&gt; to Distroless base image.&lt;/p&gt;

</description>
      <category>linux</category>
      <category>go</category>
      <category>docker</category>
    </item>
    <item>
      <title>How much increment should I expect after 1yr in startup? </title>
      <author>Shubham Kumar</author>
      <pubDate>Sun, 19 Dec 2021 03:51:55 +0000</pubDate>
      <link>https://dev.to/shubham2270/how-much-increment-should-i-expect-after-1yr-in-startup-3olh</link>
      <guid>https://dev.to/shubham2270/how-much-increment-should-i-expect-after-1yr-in-startup-3olh</guid>
      <description>&lt;p&gt;I have overall 2yrs of experience as frontend dev I'm about to finish 1yr in my current startup company. How much percent increment should I expect in my monthly pay?&lt;/p&gt;

</description>
      <category>help</category>
      <category>career</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Guess Number Game with Android</title>
      <author>R0land013</author>
      <pubDate>Sun, 19 Dec 2021 03:51:05 +0000</pubDate>
      <link>https://dev.to/r0land013/guess-number-game-with-android-k0l</link>
      <guid>https://dev.to/r0land013/guess-number-game-with-android-k0l</guid>
      <description>&lt;p&gt;In this post I show you a simple game for practicing android development. It uses &lt;strong&gt;MVP&lt;/strong&gt; design pattern. &lt;br&gt;
&lt;strong&gt;You can find the code of this app&lt;/strong&gt; &lt;a href="https://github.com/R0land013/guess-number-android-app"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The game is called 'Guess Number'. The target is to guess a number between 1 and 100, using 10 intents or less.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2ixQjqE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l2grt4x7z3hhi808k6yh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2ixQjqE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l2grt4x7z3hhi808k6yh.jpg" alt="Main view" width="262" height="448"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a simple challenge for android beginners. It uses some basic components of android apps, as &lt;strong&gt;Activities&lt;/strong&gt;, &lt;strong&gt;Intents&lt;/strong&gt; and &lt;strong&gt;Fragments&lt;/strong&gt;. Also the app uses some simple styles and other sources.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yIKa7xMq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xy2anoluq5g5xfj1ttxh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yIKa7xMq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xy2anoluq5g5xfj1ttxh.jpg" alt="Result view" width="262" height="448"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ldw5-YZz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0y5coyh9x9cps7a9224f.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ldw5-YZz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0y5coyh9x9cps7a9224f.jpg" alt="About view" width="261" height="448"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>android</category>
      <category>java</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Tips to Pass your AWS Certification on the 1st Try</title>
      <author>speechycode</author>
      <pubDate>Sun, 19 Dec 2021 03:50:17 +0000</pubDate>
      <link>https://dev.to/speechycode/tips-to-pass-your-aws-certification-on-the-1st-try-2p58</link>
      <guid>https://dev.to/speechycode/tips-to-pass-your-aws-certification-on-the-1st-try-2p58</guid>
      <description>&lt;p&gt;What is the AWS Certified Cloud Practitioner Exam? In short, it is a 65 question multiple-choice exam that tests  basic understanding of IT services and their use in the AWS Cloud platform.&lt;/p&gt;

&lt;p&gt;Several people have asked me what resources I used to pass the AWS Cloud Practitioner Exam. Scroll down for a list of the top 5 resources and tips that will help you pass your exam on your first try:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1) FreeCodeCamp &amp;amp; Andrew Brown's course&lt;/strong&gt;&lt;br&gt;
This FREE YouTube course covers everything that you need to know to pass the exam! Andrew Brown utilizes lecture slides and follow-along labs to help you fully understand each and every concept.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://youtu.be/SOTamWNgDKc"&gt;https://youtu.be/SOTamWNgDKc&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--prtFmv4l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oo9e8f6pqek1r4ypvv97.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--prtFmv4l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oo9e8f6pqek1r4ypvv97.png" alt="Freecodecamp" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;2) Hiroko Nishimura’s Introduction to AWS for Non-Engineers&lt;/strong&gt;&lt;br&gt;
This is a 4-part video course created in partnership with Linkedin Learning to help you begin learning about AWS and Cloud Computing from zero!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.linkedin.com/learning/paths/prepare-for-the-aws-certified-cloud-practitioner-exam"&gt;https://www.linkedin.com/learning/paths/prepare-for-the-aws-certified-cloud-practitioner-exam&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SC6lBnR1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4n6ij2m9tfter37wzqt4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SC6lBnR1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4n6ij2m9tfter37wzqt4.png" alt="Linkedin Learning" width="880" height="391"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;3) Utilize Online and Handwritten Flashcards&lt;/strong&gt;&lt;br&gt;
Science has proven that handwritten notes and flashcards are powerful in supporting the brain's capacity for retrieval of information. Create flashcard sets by hand as you study. You can also utilize Quizlet for online flashcards! &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://quizlet.com/search?query=Aws-Certified-Cloud-Practitioner"&gt;https://quizlet.com/search?query=Aws-Certified-Cloud-Practitioner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O1b17-tN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zuokzyy7l9acmc8noc4x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O1b17-tN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zuokzyy7l9acmc8noc4x.png" alt="Quizlet" width="880" height="330"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;4) AWS Whitepapers&lt;/strong&gt;&lt;br&gt;
The "AWS Well-Architected Framework" whitepaper and the Overview of Amazon Web Services" whitepaper are highly useful for the exam! Read through these whitepapers to improve your understanding of each service and the best practices for designing and operating reliable, secure, efficient, and cost-effective systems in the cloud!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.aws.amazon.com/wellarchitected/latest/framework/welcome.html"&gt;https://docs.aws.amazon.com/wellarchitected/latest/framework/welcome.html&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.aws.amazon.com/whitepapers/latest/aws-overview/introduction.html"&gt;https://docs.aws.amazon.com/whitepapers/latest/aws-overview/introduction.html&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9BhVEoRx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/koc56rsp2d7oeyvuzpwb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9BhVEoRx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/koc56rsp2d7oeyvuzpwb.png" alt="whitepaper" width="768" height="308"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;5) AWS Practice Exams&lt;/strong&gt;&lt;br&gt;
Take a full-length practice exam as often as possible. This will help you become more familiar with the type of questions that will appear on the exam. See the link below of an official AWS practice set of questions!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://d1.awsstatic.com/training-and-certification/docs-cloud-practitioner/AWS-Certified-Cloud-Practitioner_Sample-Questions.pdf"&gt;https://d1.awsstatic.com/training-and-certification/docs-cloud-practitioner/AWS-Certified-Cloud-Practitioner_Sample-Questions.pdf&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nRqkrSjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0h53wkjqowwh0n1nugql.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nRqkrSjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0h53wkjqowwh0n1nugql.png" alt="exam" width="880" height="169"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Good Luck!&lt;/em&gt; 🍀&lt;/p&gt;

</description>
      <category>aws</category>
      <category>beginners</category>
      <category>newbie</category>
      <category>career</category>
    </item>
    <item>
      <title>Easy to use software Documentation Builder</title>
      <author>Martin Tonev</author>
      <pubDate>Sun, 19 Dec 2021 03:19:34 +0000</pubDate>
      <link>https://dev.to/martintonev/easy-to-use-software-documentation-builder-51ab</link>
      <guid>https://dev.to/martintonev/easy-to-use-software-documentation-builder-51ab</guid>
      <description>&lt;p&gt;I`ve created this product because I always struggle with generating documentation in HTML or Word format.&lt;br&gt;
It is just a bit boring to make a menu and all the connected sections. Also, there are always so many revisions you end with 10 different files.&lt;/p&gt;

&lt;p&gt;So I create an online tool to build the navigation and storing the text after I quickly add my&lt;br&gt;
navigation and text I can share the URL to the product or export it to PDF.&lt;/p&gt;

&lt;p&gt;Also, I can manage all the revisions in one place&lt;/p&gt;

&lt;p&gt;It just saves time and boring stuff to do every time you lunch a new product.&lt;/p&gt;

&lt;p&gt;Check it out: &lt;a href="https://create-documentation-online.com/"&gt;https://create-documentation-online.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>dev</category>
    </item>
    <item>
      <title>C Pattern And Programming Examples for Beginners</title>
      <author>rrtutors</author>
      <pubDate>Sun, 19 Dec 2021 03:16:35 +0000</pubDate>
      <link>https://dev.to/rrtutors/c-pattern-and-programming-examples-for-beginners-21a1</link>
      <guid>https://dev.to/rrtutors/c-pattern-and-programming-examples-for-beginners-21a1</guid>
      <description>&lt;p&gt;The best way to learn &lt;a href="https://rrtutors.com/c/"&gt;C programming&lt;/a&gt; is by practicing examples. here attached few examples on basic concepts of C programming. You are advised to take the references from these examples&lt;br&gt;
And also added few C Pattern Examples, will add more soon.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZX_USbq7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58jeft7tapbotjfxtk1q.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZX_USbq7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58jeft7tapbotjfxtk1q.JPG" alt="C Pattern Examples" width="853" height="437"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rrtutors.com/c-program-to-compare-two-integers"&gt;C Program to compare two integers&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-compare-three-integers"&gt;C Program to compare three integers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rrtutors.com/c-program-to-find-even-or-odd"&gt;C Program to check given number Even or Odd&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-find-armstrong"&gt;C Program to check given number Armstrong or not&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rrtutors.com/c-program-to-calculate-average"&gt;C Program to Average of the numbers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rrtutors.com/c-program-to-reverse-line-string"&gt;C Program to Reverse a Line String&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rrtutors.com/c-program-to-reverse-words-line-string"&gt;C Program to Reverse words in a Line String&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rrtutors.com/c-program-to-print-pattern-start-triagle"&gt;C Program to Print * pattern in down side triangle &lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-sum-of-an-arrays"&gt;C Program to Sum of an Array &lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-avaerage-of-array"&gt;C Program to Average of Array &lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-concatenate-array"&gt;C Program to Concatenate Two Array &lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-circular-linked-list"&gt;Circular LinkedList with C Program&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-factorial-number"&gt;Factorial of number C Program&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-polindrome-number"&gt;C Program to check a Number Polindrome or Not&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-UsingScanf"&gt;C program to take input from user using scanf&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-AdditionOfNumberUsingFunction"&gt;C Program to Addition Of Number Using Function&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-CalculateAreaAndCircumferenceOfCircle"&gt;C Program to Calculate Area and Circumference of circle&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-CalculateFactorialUsingFunction"&gt;C Program To Calculate Factorial of a Number using Function&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-CalculateGrossSalary"&gt;C Program to Program to Calculate Gross Salary&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-CheckPositiveNegative"&gt;C program to check whether a number is positive, negative&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-DistanceAndLengthConverter"&gt;C Program to Distance and Length Conversion&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-LeapYear"&gt;C Program to Check Year is Leap Year or Not&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-PowerNumber"&gt;C Program to Find Power of a number using for Loop&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-SelectionSort"&gt;C Program to Sort Array Elements Using Selection Sort Algorithm&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c-program-to-covert-temerature"&gt;C Program to Convert Temperature from Celsius to Fahrenheit degrees&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c/programs/insert-element-into-array.php"&gt; C Program to Insert Element into an Array&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c/programs/c-program-to-difference-between-two-arrays.php"&gt; C Program to find difference between two arrays&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c/programs/c-program-to-find-same-elements-in-two-arrays.php"&gt; C Program to find similar elements from two arrays&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c/programs/c-program-to-merge-two-sorted-arrays.php"&gt; C Program to Merge two sorted arrays into single array&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rrtutors.com/c/programs/c-program-to-multiply-matrices.php"&gt; C Program to Multiply two matrices&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pattern Examples&lt;br&gt;
&lt;a href="https://www.rrtutors.com/c/pattern/index.php"&gt;C * Pattern and Number Pattern examples&lt;/a&gt;&lt;/p&gt;

</description>
      <category>c</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Public Solving: Secret Santa in JavaScript</title>
      <author>Chris Bongers</author>
      <pubDate>Sun, 19 Dec 2021 02:57:15 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/public-solving-secret-santa-in-javascript-525e</link>
      <guid>https://dev.to/dailydevtips1/public-solving-secret-santa-in-javascript-525e</guid>
      <description>&lt;p&gt;The elves want us to make a secret Santa script for today's tasks.&lt;/p&gt;

&lt;p&gt;If you are unaware of this, it's basically a system where we get provided a list of names, and we must assign random people to each other.&lt;br&gt;
These people must then buy gifts for each other.&lt;/p&gt;

&lt;p&gt;They have given us some rules to work with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Everyone should have a secret Santa&lt;/li&gt;
&lt;li&gt;You cannot be your own secret Santa&lt;/li&gt;
&lt;li&gt;When there are duplicate names, we should throw an error&lt;/li&gt;
&lt;li&gt;The secret Santa's should be randomized &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://github.com/devadvent/puzzle-8"&gt;You can find the puzzle here.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#thinking-about-the-solution"&gt;
  &lt;/a&gt;
  Thinking about the solution
&lt;/h2&gt;

&lt;p&gt;This is actually a pretty hard one, and it took me a while to get it completely working in order.&lt;/p&gt;

&lt;p&gt;The main issue is that it needs to be randomized.&lt;/p&gt;

&lt;p&gt;Let's take some examples.&lt;/p&gt;

&lt;p&gt;We have the following names: &lt;code&gt;Bob&lt;/code&gt;, &lt;code&gt;Anna&lt;/code&gt;, &lt;code&gt;Jim&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When we run the script, we start with &lt;code&gt;Bob&lt;/code&gt;, his secret Santa will be &lt;code&gt;Anna&lt;/code&gt;.&lt;br&gt;
Then we get to &lt;code&gt;Anna&lt;/code&gt;, and let's just assign &lt;code&gt;Bob&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But wait, now we can't assign anyone to &lt;code&gt;Jim&lt;/code&gt;...&lt;/p&gt;

&lt;p&gt;As you can see, it gets a bit complicated.&lt;br&gt;
But no worries, we'll sort it out to be bulletproof.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-secret-santa-in-javascript"&gt;
  &lt;/a&gt;
  Creating secret Santa in JavaScript
&lt;/h2&gt;

&lt;p&gt;Let's start with the most straightforward task. Luckily, we can throw an error if there are duplicate names in the name array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hasDuplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;DUPLICATE_NAMES&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This &lt;code&gt;hasDuplicates&lt;/code&gt; function is provided by the puzzle, but it looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hasDuplicates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we need to loop over all the names, we could opt for the &lt;a href="https://daily-dev-tips.com/posts/javascript-map-method/"&gt;&lt;code&gt;map&lt;/code&gt; method&lt;/a&gt;, but this will bring one edge case (more later).&lt;/p&gt;

&lt;p&gt;So I decided to go with the &lt;a href="https://daily-dev-tips.com/posts/javascript-reduce-method/"&gt;&lt;code&gt;reduce&lt;/code&gt; method&lt;/a&gt; instead.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Todo&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is what the basic reduce looks like. We get the &lt;code&gt;acc&lt;/code&gt; variable which is basically the previous value.&lt;br&gt;
And initially, the default value, which we set to &lt;code&gt;[]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is already great, but we want to keep track of our assigned names.&lt;/p&gt;

&lt;p&gt;I decided to create a new variable outside the function to randomly sort the names.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;secretSantaNames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we want to retrieve one of those names, but it cannot be our own name.&lt;/p&gt;

&lt;p&gt;For this, we simply use the &lt;a href="https://daily-dev-tips.com/posts/javascript-sort-array-of-objects-by-value/"&gt;&lt;code&gt;sort&lt;/code&gt; method&lt;/a&gt; and return the first hit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;secretSanta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;secretSantaNames&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;secretSantaName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;secretSantaName&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;
&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The filter makes sure we don't match the user's reduce loop name.&lt;/p&gt;

&lt;p&gt;Then we need to remove this name from our array of possible secret Santa's for the next name.&lt;/p&gt;

&lt;p&gt;This is an excellent opportunity for the &lt;a href="https://daily-dev-tips.com/posts/vanilla-javascript-slice-vs-splice/"&gt;&lt;code&gt;splice&lt;/code&gt; method&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;secretSantaNames&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;splice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;secretSantaNames&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;secretSanta&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note: the splice method manipulates the original array!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And then, we can modify the &lt;code&gt;acc&lt;/code&gt; variable and push this option match to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;secretSanta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Right, almost there.&lt;br&gt;
However, there is a slight edge case where we could still have one name not assigned as we described in the problem.&lt;/p&gt;

&lt;p&gt;To solve this, I decided to check if our &lt;code&gt;secretSanta&lt;/code&gt; is undefined and swap this one with the first match.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: Remember I said the reduce would be easier than map. This is why.&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;secretSanta&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Edge case where last person was assigned to their own name&lt;/span&gt;
  &lt;span class="c1"&gt;// Simply swap with the first one.&lt;/span&gt;
  &lt;span class="nx"&gt;secretSanta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;secretSanta&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;secretSanta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This function will only fire if the secret Santa is undefined and simply swap this one with the first hit.&lt;br&gt;
This will also work, as we only have one name left.&lt;/p&gt;

&lt;p&gt;Let's try it out by running the tests.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ERcAg8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638979472708/FxHJVlt38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ERcAg8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638979472708/FxHJVlt38.png" alt="Test going green" width="630" height="262"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And yes, we did it!&lt;/p&gt;

&lt;p&gt;I would love to hear what you think of my approach or what you would do differently.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
  </channel>
</rss>
