<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Frameworks without a Framework: The next (big) thing</title>
      <author>Siddharth</author>
      <pubDate>Wed, 13 Oct 2021 13:26:19 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/frameworks-without-a-framework-the-next-big-thing-4id4</link>
      <guid>https://dev.to/siddharthshyniben/frameworks-without-a-framework-the-next-big-thing-4id4</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Wait, this framework compiles to JavaScript only?! Thanks, I'll pass &lt;strong&gt;– Frontend developers in 2023&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I've been developing &lt;a href="https://github.com/sleekjs/sleek"&gt;Sleek&lt;/a&gt; for the past week. It's a compiled framework without a framework like Svelte. There's no docs yet, so don't check it out. I'll post when it's ready.&lt;/p&gt;

&lt;p&gt;One thing which prompted me to build a new framework was Svelte. Yes, in both ways. Consider this Svelte component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello {name}!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What do you think it outputs? Here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* App.svelte generated by Svelte v3.43.2 */&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;SvelteComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;detach&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;noop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;safe_not_equal&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;svelte/internal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;create_fragment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;h1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;h1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Hello &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;anchor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;anchor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;p&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;noop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;noop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;o&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;noop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;detaching&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;detaching&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;detach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;SvelteComponent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;create_fragment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;safe_not_equal&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I can see a bunch of imports, &lt;code&gt;create_fragment()&lt;/code&gt;, and a &lt;code&gt;class extends SvelteComponent&lt;/code&gt;. This is a huge file – and that's not even counting the imports. And the HTML? Svelte only generates a template. There is no real HTML. There is not even an &lt;code&gt;HTML&lt;/code&gt; tab in the &lt;a href="https://svelte.dev/repl/"&gt;Repl&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's look at what the same thing outputs in Sleek:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- ...excluded head, body, etc. --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello world&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- ...excluded /body, etc. --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it. No JavaScript, just plain simple HTML. And it's wayyy more fast than having to load a bunch of imports, and having to use the DOM to embed an otherwise static element.&lt;/p&gt;

&lt;p&gt;Now you say "wait, that is definitely not any real world code". Well, this is the precursor to a bigger problem: everything is in JavaScript. Suppose you have this totally static form:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"action_page.php"&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"post"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"imgcontainer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img_avatar2.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Avatar"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"avatar"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"uname"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;b&amp;gt;&lt;/span&gt;Username&lt;span class="nt"&gt;&amp;lt;/b&amp;gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Enter Username"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"uname"&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"psw"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;b&amp;gt;&lt;/span&gt;Password&lt;span class="nt"&gt;&amp;lt;/b&amp;gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Enter Password"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"psw"&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Login&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;checked=&lt;/span&gt;&lt;span class="s"&gt;"checked"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"remember"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Remember me
    &lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"background-color:#f1f1f1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"cancelbtn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Cancel&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"psw"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Forgot &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;password?&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It also compiles to JavaScript?!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* App.svelte generated by Svelte v3.43.2 */&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;SvelteComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;detach&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;noop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;safe_not_equal&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;svelte/internal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;create_fragment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;div class="imgcontainer"&amp;gt;&amp;lt;img src="img_avatar2.png" alt="Avatar" class="avatar"/&amp;gt;&amp;lt;/div&amp;gt; 

  &amp;lt;div class="container"&amp;gt;&amp;lt;label for="uname"&amp;gt;&amp;lt;b&amp;gt;Username&amp;lt;/b&amp;gt;&amp;lt;/label&amp;gt; 
    &amp;lt;input type="text" placeholder="Enter Username" name="uname" required=""/&amp;gt; 

    &amp;lt;label for="psw"&amp;gt;&amp;lt;b&amp;gt;Password&amp;lt;/b&amp;gt;&amp;lt;/label&amp;gt; 
    &amp;lt;input type="password" placeholder="Enter Password" name="psw" required=""/&amp;gt; 

    &amp;lt;button type="submit"&amp;gt;Login&amp;lt;/button&amp;gt; 
    &amp;lt;label&amp;gt;&amp;lt;input type="checkbox" checked="checked" name="remember"/&amp;gt; Remember me&amp;lt;/label&amp;gt;&amp;lt;/div&amp;gt; 

  &amp;lt;div class="container" style="background-color:#f1f1f1"&amp;gt;&amp;lt;button type="button" class="cancelbtn"&amp;gt;Cancel&amp;lt;/button&amp;gt; 
    &amp;lt;span class="psw"&amp;gt;Forgot &amp;lt;a href="#"&amp;gt;password?&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;action&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;action_page.php&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;method&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;post&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;anchor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;anchor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;p&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;noop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;noop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;o&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;noop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;detaching&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;detaching&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;detach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;SvelteComponent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;create_fragment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;safe_not_equal&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The best thing to do would be to put that in the HTML, and just make the reactive stuff reactive. That is what Sleek does.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#were-just-getting-started"&gt;
  &lt;/a&gt;
  We're just getting started
&lt;/h2&gt;

&lt;p&gt;Sleek is &lt;em&gt;very&lt;/em&gt; new. We're still adding some essential features and testing (but no bugs found yet 🎉). There are some essential features to work on: SSR, docs, Started kits, Integrations, stores, you name it.&lt;/p&gt;

&lt;p&gt;But we've already got most of the features in there, and soon &lt;a href="https://github.com/sleekjs/sleek"&gt;Sleek&lt;/a&gt; might help kickstart the next era of frontend development.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>DataDog vs Grafana - Key features &amp; differences</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Wed, 13 Oct 2021 13:07:52 +0000</pubDate>
      <link>https://dev.to/signoz/datadog-vs-grafana-key-features-differences-2bmp</link>
      <guid>https://dev.to/signoz/datadog-vs-grafana-key-features-differences-2bmp</guid>
      <description>&lt;p&gt;DataDog is a paid SaaS tool that provides a range of products for monitoring applications and tech infrastructure. While Grafana is an open-source web visualization tool that can be used with a variety of data sources to create dashboards.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Grafana is primarily used to visualize your time-series database data into meaningful charts from which you can draw insights. Grafana can be used to build an open-source stack for APM, time-series, and logs monitoring. &lt;/p&gt;

&lt;p&gt;In this article, we will compare DataDog with Grafana based on the following categories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Getting Started&lt;/li&gt;
&lt;li&gt;Monitoring use-cases&lt;/li&gt;
&lt;li&gt;User Experience&lt;/li&gt;
&lt;li&gt;Pricing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will also explore the key features of DataDog and Grafana.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;While DataDog and Grafana are great monitoring tools, they have their limitations. DataDog is an enterprise SaaS tool with complex pricing tiers. Grafana is an open-source monitoring tool that needs support and maintenance to set up and scale.&lt;br&gt;&lt;br&gt;
And that's where &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; comes into the picture. It is an open-source APM tool that comes with great user experience in terms of getting started and web user experience. It's an open-source alternative to DataDog.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#comparing-datadog-and-grafana"&gt;
  &lt;/a&gt;
  Comparing DataDog and Grafana
&lt;/h2&gt;

&lt;p&gt;The disadvantage of DataDog is that it does not specialize in any one domain. And the good thing about Grafana is that it can be combined with specialized tools for monitoring your application.&lt;/p&gt;

&lt;p&gt;The disadvantage of using Grafana is the cost and bandwidth required to maintain it. GrafanaLabs, the company behind Grafana, also offers a cloud version that aims to provide a fully managed observability stack.&lt;/p&gt;

&lt;p&gt;Some of the key differences between DataDog and Grafana:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h3&gt;

&lt;p&gt;You need to sign up for a DataDog account and then install DataDog agents on your host. The DataDog agent can be installed on many platforms either directly or as a containerized version. The agent reports events and metrics from the host.&lt;/p&gt;

&lt;p&gt;For getting started with Grafana, you first need to install it. Check out the different &lt;a href="https://grafana.com/docs/grafana/latest/installation/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;operating systems and requirements&lt;/b&gt;&lt;/a&gt; for installation. Once Grafana is installed you can connect it to your desired data source and start visualizing the data.&lt;/p&gt;

&lt;p&gt;Some of the popular data sources that Grafana supports are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Prometheus&lt;/li&gt;
&lt;li&gt;Jaeger&lt;/li&gt;
&lt;li&gt;Zipkin&lt;/li&gt;
&lt;li&gt;AWS CloudWatch&lt;/li&gt;
&lt;li&gt;Graphite&lt;/li&gt;
&lt;li&gt;Azure Monitor&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#monitoring-usecases"&gt;
  &lt;/a&gt;
  Monitoring use-cases
&lt;/h3&gt;

&lt;p&gt;DataDog has an extensive list of monitoring services it offers. List of all monitoring products that DataDog provides:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Log Management&lt;/li&gt;
&lt;li&gt;APM&lt;/li&gt;
&lt;li&gt;Security Monitoring&lt;/li&gt;
&lt;li&gt;Infrastructure Monitoring&lt;/li&gt;
&lt;li&gt;Network Monitoring&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Grafana can be combined with popular tools for monitoring use-cases:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ElasticSearch(for logs)&lt;/li&gt;
&lt;li&gt;Prometheus(for metrics)&lt;/li&gt;
&lt;li&gt;Jaeger(for traces)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#user-experience"&gt;
  &lt;/a&gt;
  User Experience
&lt;/h3&gt;

&lt;p&gt;With DataDog, everything comes out of the box. Based on the plan you purchase, DataDog provides in-built dashboards and widgets to take care of popular use-cases of monitoring.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w4Bufpgq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/10/datadog_vs_grafana_datadog_dashboard-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w4Bufpgq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/10/datadog_vs_grafana_datadog_dashboard-min.jpg" alt="DataDog dashboard"&gt;&lt;/a&gt;DataDog account comes with in-built charts for things like metrics, traces and logs&lt;/p&gt;

&lt;p&gt;Grafana is a popular open-source analytics and visualization tool. But you need to set up these dashboards and panels which requires some bandwidth. You can build a powerful dashboard by selecting a data source and then combining panels associated with different data sources.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UDjZ-TQw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/observability_tools_grafana-min.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UDjZ-TQw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/observability_tools_grafana-min.png" alt="Grafana dashboard"&gt;&lt;/a&gt;Grafana Dashboard&lt;/p&gt;

&lt;p&gt;Another great point to consider is that you can build an open-source monitoring stack using Grafana and other open-source specialized tools meant for monitoring like Prometheus.  You can host this stack within your infra, which takes care of data privacy concerns.&lt;/p&gt;

&lt;p&gt;DataDog is a third-party SaaS vendor and your data will be sent to DataDog cloud for analyses and visualization.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h3&gt;

&lt;p&gt;The ease of use and the varied use-cases that DataDog provides are not cheap. DataDog is an expensive enterprise monitoring tool that has many different pricing tiers which vary on your use-cases. For example, infrastructure enterprise monitoring starts at $23 per host per month while its APM sand continuous profiler starts at $40 per host per month.&lt;/p&gt;

&lt;p&gt;The open-source version of Grafana comes for free, although you do need to account for the cost of data storage and networking. GrafanaLabs offers paid cloud plans starting at $49 per month, which scale up based on usage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-features-of-datadog"&gt;
  &lt;/a&gt;
  Key Features of DataDog
&lt;/h2&gt;

&lt;p&gt;DataDog is an enterprise SaaS tool that offers an array of services in the monitoring domain. Some of the key features of the DataDog monitoring platform includes:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#log-management"&gt;
  &lt;/a&gt;
  Log Management
&lt;/h3&gt;

&lt;p&gt;DataDog offers scalable log ingestion and analytics through its log management product. You can search, filter, and analyze log data through its dashboard. You can route all your logs from one central control panel.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#application-performance-monitoring"&gt;
  &lt;/a&gt;
  Application performance monitoring**
&lt;/h3&gt;

&lt;p&gt;DataDog's APM tool provides end-to-end distributed tracing from frontend devices to databases. You can connect the collected traces to infrastructure metrics, network calls, and live processes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security-monitoring"&gt;
  &lt;/a&gt;
  Security monitoring
&lt;/h3&gt;

&lt;p&gt;Using DataDog security monitoring, you can analyze operational and security logs in real-time. It provides built-in threshold and anomaly detection rules to detect threats quickly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#network-monitoring"&gt;
  &lt;/a&gt;
  Network monitoring
&lt;/h3&gt;

&lt;p&gt;With DataDog network monitoring, you can analyze traffic as it flows across applications, containers, availability zones, and on-premise servers. You can track key network metrics like TCP retransmits, latency, and connection churn.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#real-user-monitoring"&gt;
  &lt;/a&gt;
  Real user monitoring
&lt;/h3&gt;

&lt;p&gt;With DataDog's real user Monitoring, you can have end-to-end visibility into user journeys for web and mobile applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-features-of-grafana"&gt;
  &lt;/a&gt;
  Key Features of Grafana
&lt;/h2&gt;

&lt;p&gt;Grafana is an open-source dashboard tool. The biggest feature of Grafana is that you can use it to combine different data sources and then visualize data in a central dashboard. It also comes with admin features for effective collaboration with the team.&lt;/p&gt;

&lt;p&gt;Some of the key features of Grafana are: &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flexible-dashboards"&gt;
  &lt;/a&gt;
  Flexible dashboards
&lt;/h3&gt;

&lt;p&gt;Grafana provides a lot of panels that can be used for building dashboards. To build dashboards that suit your needs, you can choose from multiple chart types like heatmaps, histograms, pie charts, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uT57mQSM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/10/datadog_vs_grafana_grafana_visualizations-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uT57mQSM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/10/datadog_vs_grafana_grafana_visualizations-min.jpg" alt="Grafana visualization options"&gt;&lt;/a&gt;Grafana visualization widgets for creating dashboards&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#plugins"&gt;
  &lt;/a&gt;
  Plugins
&lt;/h3&gt;

&lt;p&gt;Grafana provides an extensive set of plugins to extend Grafana capabilities. Some of the plugins that Grafana offers are:&lt;br&gt;
    - Data Source plugins&lt;br&gt;
    - App plugins&lt;br&gt;
    - Panel Plugins&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#alerting-system"&gt;
  &lt;/a&gt;
  Alerting system
&lt;/h3&gt;

&lt;p&gt;Grafana provides a central UI to set and manage alerts with a central UI.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#a-better-alternative-to-datadog-and-grafana-signoz"&gt;
  &lt;/a&gt;
  A better alternative to DataDog and Grafana - SigNoz
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; is a full-stack open-source application performance monitoring and observability tool which can be used in place of DataDog and Grafana. SigNoz is built to give SaaS like user experience combined with the perks of open-source software. Developer tools should be developer first, and SigNoz was built by developers to address the gap between SaaS vendors and open-source software.&lt;/p&gt;

&lt;p&gt;Key architecture features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Native OpenTelemetry support&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
SigNoz is built to support &lt;a href="https://opentelemetry.io/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;OpenTelemetry&lt;/b&gt;&lt;/a&gt; natively, which is quietly becoming the world standard to generate and manage telemetry data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Flexible and scalable Database storage&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
SigNoz provides users flexibility in terms of storage. You can choose between ClickHouse or Kafka + Druid as your backend storage while installing SigNoz.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6BdjoEB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/SigNoz_architecture_clickhouse.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6BdjoEB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/SigNoz_architecture_clickhouse.png" alt="Architecture of SigNoz with OpenTelemetry and ClickHouse"&gt;&lt;/a&gt;Architecture of SigNoz with ClickHouse as storage backend and OpenTelemetry for code instrumentatiion&lt;/p&gt;

&lt;p&gt;SigNoz comes with out of box visualization of things like RED metrics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OKFqZ_PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_charts_application_metrics.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OKFqZ_PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_charts_application_metrics.png" alt="SigNoz UI showing the popular RED metrics"&gt;&lt;/a&gt;SigNoz UI showing application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/p&gt;

&lt;p&gt;You can also use flamegraphs to visualize spans from your trace data. All of this comes out of the box with SigNoz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FOoIlefK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_flamegraphs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FOoIlefK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_flamegraphs.png" alt="Flamegraphs used to visualize spans of distributed tracing in SigNoz UI"&gt;&lt;/a&gt;Flamegraphs showing exact duration taken by each spans - a concept of distributed tracing&lt;/p&gt;

&lt;p&gt;You can also build custom metrics dashboard for your infrastructure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NgbBDuMT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/10/signoz_custom_dashboard-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NgbBDuMT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/10/signoz_custom_dashboard-min.jpg" alt="SigNoz custom metrics dashboard"&gt;&lt;/a&gt;You can also build a custom metrics dashboard for your infrastructure&lt;/p&gt;

&lt;p&gt;Some of the things SigNoz can help you track:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact request trace to figure out issues in downstream services, slow DB queries, call to 3rd party services like payment gateways, etc&lt;/li&gt;
&lt;li&gt;Filter traces by service name, operation, latency, error, tags/annotations.&lt;/li&gt;
&lt;li&gt;Run aggregates on trace data&lt;/li&gt;
&lt;li&gt;Unified UI for both metrics and traces&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#getting-started-with-signoz"&gt;
  &lt;/a&gt;
  Getting started with SigNoz
&lt;/h2&gt;

&lt;p&gt;If you have docker installed, getting started with SigNoz just takes three easy steps at the command line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;git&lt;/span&gt; &lt;span class="nx"&gt;clone&lt;/span&gt; &lt;span class="nx"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//github.com/SigNoz/signoz.git&lt;/span&gt;
&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;signoz&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;deploy&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can read more about deploying SigNoz from its &lt;a href="https://signoz.io/docs/deployment/docker/"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can check out SigNoz's GitHub repo here 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#related-content"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Related Content&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://signoz.io/blog/jaeger-vs-zipkin/"&gt;Jaeger vs Zipkin&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://signoz.io/blog/jaeger-vs-signoz/"&gt;Jaeger vs SigNoz&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://signoz.io/blog/opentelemetry-spring-boot/"&gt;Monitor Spring Boot App with SigNoz and OpenTelemetry&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>kubernetes</category>
      <category>microservices</category>
      <category>monitoring</category>
    </item>
    <item>
      <title>Gitpod : How to use kubectl and manage Kubernetes clusters ?</title>
      <author>Florian Lacrampe</author>
      <pubDate>Wed, 13 Oct 2021 13:00:57 +0000</pubDate>
      <link>https://dev.to/stack-labs/gitpod-how-to-use-kubectl-and-manage-kubernetes-clusters--4edp</link>
      <guid>https://dev.to/stack-labs/gitpod-how-to-use-kubectl-and-manage-kubernetes-clusters--4edp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://gitpod.io"&gt;Gitpod&lt;/a&gt; is a Ready-to-Code development platform which allow users to quickly contribute on projects. This platform is powered by VS-Code online.&lt;/p&gt;

&lt;p&gt;GitOps is now a standard approach to manage applications and infrastructure delivery. Gitpod is very usefull for that, because you can offer to anyone a Ready-to-Use platform to administrate and contribute.&lt;/p&gt;

&lt;p&gt;Gitpod simplifying project startup ! All the tools you use will be available in the VS-Code terminal.&lt;/p&gt;

&lt;p&gt;Here, i will share my experience with Gitpod to administrate and contribute on Kubernetes projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Gitpod account on gitpod.io (Or self-hosted instance)&lt;/li&gt;
&lt;li&gt;Gitlab / Github account (or private Git server)&lt;/li&gt;
&lt;li&gt;Working Kubernetes cluster&lt;/li&gt;
&lt;li&gt;A web browser !&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-init-git-project"&gt;
  &lt;/a&gt;
  1. Init git project
&lt;/h3&gt;

&lt;p&gt;First, you need to create en empty git project and open it with Gitpod.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tips: You can install web-browser extension to quickly open git projects with Gitpod : &lt;a href="https://www.gitpod.io/docs/browser-extension/"&gt;https://www.gitpod.io/docs/browser-extension/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#2-set-up-gitpodyml"&gt;
  &lt;/a&gt;
  2. Set up .gitpod.yml
&lt;/h3&gt;

&lt;p&gt;Gitpod allow user to specify environments settings like :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Environment Docker image&lt;/li&gt;
&lt;li&gt;VS-Code extensions&lt;/li&gt;
&lt;li&gt;Startup tasks&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here, we want to manage and administrate a Kubernetes cluster. &lt;/p&gt;

&lt;p&gt;Unfortunately, official Gitpod environment image does not contain Kubernetes administration tools (kubectl, Helm, Kustomize etc..).&lt;/p&gt;

&lt;p&gt;So, we going to change default image to use a custom image with all needed tools.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#use-image-from-docker-hub-easy-method-"&gt;
  &lt;/a&gt;
  Use image from Docker Hub (Easy method !)
&lt;/h4&gt;

&lt;p&gt;I recently publish a Docker image with useful tools to manage Kubernetes cluster through Gitpod.&lt;/p&gt;

&lt;p&gt;Project : &lt;a href="https://github.com/quadeare/gitpod-kubectl"&gt;https://github.com/quadeare/gitpod-kubectl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can test this Gitpod environement by opening this project with Gitpod :&lt;br&gt;
&lt;a href="https://gitpod.io/#https://gitlab.com/quadeare/gitpod-kubectl.git"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ucaV8MME--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gitpod.io/button/open-in-gitpod.svg" alt="Open in Gitpod"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create a &lt;code&gt;.gitpod.yml&lt;/code&gt; file and copy the following content :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;image: quadeare/gitpod-kubectl:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, commit and push &lt;code&gt;.gitpod.yml&lt;/code&gt;. Then, restart Gitpod workspace (close and open).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#use-local-dockerfile-take-control-"&gt;
  &lt;/a&gt;
  Use local Dockerfile (Take control !)
&lt;/h4&gt;

&lt;p&gt;You can also build you own Docker image (by using Gitpod) and remain self-sufficient without having to depend on an external image.&lt;/p&gt;

&lt;p&gt;So, you can create a simple .gitpod.yml file with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;image:
  file: .gitpod.Dockerfile
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, create .gitpod.Dockerfile like that :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM gitpod/workspace-base:latest

ARG KUBECTL_VERSION=v1.22.2

RUN curl -LO https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl &amp;amp;&amp;amp; \
    chmod +x ./kubectl &amp;amp;&amp;amp; \
    sudo mv ./kubectl /usr/local/bin/kubectl &amp;amp;&amp;amp; \
    mkdir ~/.kube

RUN set -x; cd "$(mktemp -d)" &amp;amp;&amp;amp; \
    OS="$(uname | tr '[:upper:]' '[:lower:]')" &amp;amp;&amp;amp; \
    ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" &amp;amp;&amp;amp; \
    curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/krew.tar.gz" &amp;amp;&amp;amp; \
    tar zxvf krew.tar.gz &amp;amp;&amp;amp; \
    KREW=./krew-"${OS}_${ARCH}" &amp;amp;&amp;amp; \
    "$KREW" install krew &amp;amp;&amp;amp; \
    echo 'export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"' &amp;gt;&amp;gt; /home/gitpod/.bashrc

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, commit and push &lt;code&gt;.gitpod.yml&lt;/code&gt;/&lt;code&gt;.gitpod.Dockerfile&lt;/code&gt;. Then, restart Gitpod workspace (close and open).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-add-your-kubeconfig-as-gitpod-secret"&gt;
  &lt;/a&gt;
  3. Add your kubeconfig as Gitpod secret
&lt;/h3&gt;

&lt;p&gt;To administrate your Kubernetes cluster from Gitpod, you need to add Kubeconfig content as secret on Gitpod.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Gitpod supports encrypted, user-specific environment variables. They are stored as part of your user settings and can be used to set access tokens, or pass any other kind of user-specific information to your workspaces.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#convert-kubeconfig-to-base64"&gt;
  &lt;/a&gt;
  Convert Kubeconfig to base64
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cat kubeconfig | base64 -w 0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#copy-kubeconfig-base64-format-to-gitpod"&gt;
  &lt;/a&gt;
  Copy Kubeconfig (base64 format) to Gitpod
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8wznjSXr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzlxjinkjvqygure9wht.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8wznjSXr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzlxjinkjvqygure9wht.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0B6NuOKl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5nj798iufhgpw4nct3oq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0B6NuOKl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5nj798iufhgpw4nct3oq.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can add multiple kubeconfig secret with same variable same (ex : K8S_CTX) by using project scope.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iBiAOAHr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7aa28kiz2pb0rfxla4cb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iBiAOAHr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7aa28kiz2pb0rfxla4cb.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-configure-your-project-to-extract-kubeconfig"&gt;
  &lt;/a&gt;
  4. Configure your project to extract kubeconfig
&lt;/h3&gt;

&lt;p&gt;Now, edit your &lt;code&gt;.gitpod.yml&lt;/code&gt; file and add this following content :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;tasks:
  - name: Set Glados K8s context
    command: echo $K8S_CTX | base64 -d &amp;gt; ~/.kube/config
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, commit and push &lt;code&gt;.gitpod.yml&lt;/code&gt;. Then, restart Gitpod workspace (close and open).&lt;/p&gt;

&lt;p&gt;Now, you should be able to administrate your Kubernetes cluster with Kubectl, Helm or even with VS-Code by using Kubernetes extension.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#kubectl-and-helm-commands"&gt;
  &lt;/a&gt;
  Kubectl and Helm commands
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--64kcrdAm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otxn0m616uheq44r1x3o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--64kcrdAm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otxn0m616uheq44r1x3o.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#vscode-kubernetes-extension"&gt;
  &lt;/a&gt;
  VS-Code Kubernetes extension
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X7FNQF3h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dp1uynfrrrdwpw9kvqxx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X7FNQF3h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dp1uynfrrrdwpw9kvqxx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Gitpod can be very useful to quickly get a handle on Kubernetes clusters without having to install all tools (Kubectl, Krew plugins, Kustomize etc..).&lt;/p&gt;

&lt;p&gt;However, it may be necessary to ask security question :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Are Gitpod secrets really secured ?&lt;/li&gt;
&lt;li&gt;Are Gitpod workspace perfectly isolated ?&lt;/li&gt;
&lt;li&gt;Is it reasonable to put kubernetes cluster connection informations on Gitpod?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In my case, i prefer to install self-hosted Gitpod to keep my secrets/workspaces in secure place, but that may not be enough.&lt;/p&gt;

&lt;p&gt;Moreover, it should not replace an automation by continuous integration. It's very convenient to talk directly to a Kubernetes cluster, but Gitpod should not become a Kubernetes deployment solution. It should be used only for troobleshooting or testing.&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>gitpod</category>
      <category>docker</category>
      <category>productivity</category>
    </item>
    <item>
      <title>dev.to works for organic traffic to your repo</title>
      <author>domonic</author>
      <pubDate>Wed, 13 Oct 2021 12:46:48 +0000</pubDate>
      <link>https://dev.to/domonic/devto-works-for-organic-traffic-to-your-repo-5a3g</link>
      <guid>https://dev.to/domonic/devto-works-for-organic-traffic-to-your-repo-5a3g</guid>
      <description>&lt;p&gt;I've only posted one thing on here. but have 11 repo views in 2 weeks. so that's pretty decent for the low effort vs twitter which you have to do about 20 spammy tweets per repo view.&lt;/p&gt;

&lt;p&gt;pip install domonic --upgrade&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/byteface/domonic/"&gt;https://github.com/byteface/domonic/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;not sure quite how it works still. but here's another post. where do they go? what makes my feed? is it like twitter where you follow people?&lt;/p&gt;

</description>
      <category>python</category>
      <category>javascript</category>
      <category>html</category>
      <category>devops</category>
    </item>
    <item>
      <title>Divide and Conquer</title>
      <author>Amira Abdelhalim</author>
      <pubDate>Wed, 13 Oct 2021 12:23:58 +0000</pubDate>
      <link>https://dev.to/amiraabdelhalim/divide-and-conquer-p0d</link>
      <guid>https://dev.to/amiraabdelhalim/divide-and-conquer-p0d</guid>
      <description>&lt;h2&gt;
  &lt;a href="#divide-and-conquer"&gt;
  &lt;/a&gt;
  Divide and Conquer
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;it is a well-known recursive technique for solving problems. D&amp;amp;C gives a new way to think about solving problem.&lt;br&gt;
To solve a problem using D&amp;amp;C technique, there are two steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;figure out the base case(the simplest possible case).&lt;/li&gt;
&lt;li&gt;divide the problem until it becomes the base case.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;D&amp;amp;C isn't a simple algorithm that is applied to a problem. it is a way of thinking about the problem.&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If we want to know the sum of numbers in an array... let's think of the simplest base case we can have.&lt;br&gt;
The simplest case is to have an array of 0 or 1 item. so in each step we need to take our array closer to an empty array.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_NKJzEa9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xp9v0sd0o9opj7xmoqg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_NKJzEa9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xp9v0sd0o9opj7xmoqg.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#quicksort"&gt;
  &lt;/a&gt;
  Quicksort
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Quicksort is one of the algorithms that is built on divide and conquer technique. It is a sorting algorithm faster than selection sort and it is frequently used in real life.&lt;br&gt;
let's say we want to sort an array using quicksort what are the steps we shall do to have a sorted array.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;pick an element from the array, this element is called the &lt;em&gt;pivot&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;find the elements smaller than the pivot then the elements greater than the pivot. &lt;code&gt;this process is called partitioning&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;[33, 10]&lt;/code&gt; &lt;code&gt;(33)&lt;/code&gt; &lt;code&gt;[50, 34]&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;if sub-arrays are sorted we just need to combine them together.&lt;/li&gt;
&lt;li&gt;if sub-arrays are not sorted then repeat the first 2 steps until having a sorted array.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

</description>
    </item>
    <item>
      <title>PSA:The Risks of Remote JDWP Debugging</title>
      <author>Shai Almog</author>
      <pubDate>Wed, 13 Oct 2021 12:20:37 +0000</pubDate>
      <link>https://dev.to/codenameone/psathe-risks-of-remote-jdwp-debugging-dbh</link>
      <guid>https://dev.to/codenameone/psathe-risks-of-remote-jdwp-debugging-dbh</guid>
      <description>&lt;p&gt;&lt;strong&gt;It isn't so much a security risk as it is a wide open door with everything labeled for anyone to take freely and matches to burn it all down...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When I teach or lecture and mention security I always love the analogy of security as an Onion. This is a common cliché yet it’s still a powerful analogy for people who are new to the concepts. The equivalent analogy I would pick for remote debugging is like leaving your front door open with all your valuables piled in easy to spot and well labeled boxes. Calling JDWP insecure doesn’t make any sense. It wasn’t designed to be secure so it isn’t...&lt;/p&gt;

&lt;p&gt;Java Debug Wire Protocol (AKA JDWP) was designed for testing internally. Over the past few years I’ve run into quite a few individuals that made the mistake of leaving it on even in production!&lt;/p&gt;

&lt;p&gt;That’s INSANE!&lt;/p&gt;

&lt;p&gt;Even internally it’s a HUGE risk with  &lt;a href="https://www.idwatchdog.com/insider-threats-and-data-breaches/"&gt;60% of breaches originating from inside the organization&lt;/a&gt; . Well...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tn6fMz09--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634113444886/ChPfwGtMr.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tn6fMz09--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634113444886/ChPfwGtMr.jpeg" alt="drew-scream.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This isn’t just a security risk, that could essentially give every hacker the “keys” to your server and full access to your server code… It’s also a serious stability hazard that could easily crash your production servers. &lt;/p&gt;

&lt;p&gt;Even for staging this is a problematic case. Staging servers are sometimes exposed to the internet but might serve as a stepping stone to the internal servers (e.g. same host so they slide under the firewall rule). Hackers can easily “hop” into the “real” servers once they are able to hack (or enter an open door really) the remote debug protocol.&lt;/p&gt;

&lt;p&gt;Before I proceed I’d like to clarify my bias: I work for  &lt;a href="https://lightrun.com/"&gt;Lightrun&lt;/a&gt;. We implement a tool that in many respects is a replacement for a debugger designed to work securely in staging and production. Still, you should read this even if you have no intention of using Lightrun since the facts I list below are still applicable to anyone using remote debugging.&lt;/p&gt;

&lt;p&gt;Another thing I’d like to point out is that I’m not a security expert. I did read a few excellent articles on the subject from security experts such as  &lt;a href="https://blog.aquasec.com/jdwp-misconfiguration-container-images"&gt;Assaf Morag&lt;/a&gt; . I think they are great if you’re a security researcher or a devops. This article focuses on the perspective of developers.&lt;/p&gt;

&lt;p&gt;Notice you don’t need to be a security expert to understand these concepts and inherent flaws. In that sense this post is much simpler than the one from Assaf. This post is also heavily biased towards Java since that’s my main field of expertise, but the situation isn’t much better in other languages/platforms.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#insecure-by-design"&gt;
  &lt;/a&gt;
  Insecure By Design
&lt;/h2&gt;

&lt;p&gt;Most remote debugging protocols such as JDWP are a product of a different era. An era that gave us telnet and HTTP. Most aren’t even encrypted by default. Just leaving JDWP enabled  &lt;a href="https://nvd.nist.gov/vuln/detail/CVE-2018-5486"&gt;warrants a CVE&lt;/a&gt; . &lt;/p&gt;

&lt;p&gt;JDWP effectively allows remote code execution. Lets you access all the bytecode of the server which is effectively almost the same as giving access to your full server source code. It lets attackers do almost anything since it wasn’t designed with security in mind. &lt;/p&gt;

&lt;p&gt;I won’t even get into the complexities of man in the middle attacks etc. That’s just insane.&lt;/p&gt;

&lt;p&gt;I think the best mitigation is to tunnel the connection over SSH. It doesn’t solve all the problems but it’s at least not a huge hole like we normally have. Instead of enabling remote debugging as you normally would in the past, just enable it to your servers localhost as such:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;java &lt;span class="nt"&gt;-agentlib&lt;/span&gt;:jdwp&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;transport&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;dt_socket,server&lt;span class="o"&gt;=&lt;/span&gt;y,address&lt;span class="o"&gt;=&lt;/span&gt;9000 ApplicationName
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To connect to this remotely you will need SSH access to the machine and execute the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ssh remoteUser@remoteHost &lt;span class="nt"&gt;-L&lt;/span&gt; 9000:127.0.0.1:9000 &lt;span class="nt"&gt;-N&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you need credentials for the command also add them there. This will open a tunnel between your local machine’s port 9000 and the remote one. You will be able to debug on localhost but it would work as a standard remote debugger. The only difference is that it wouldn’t be as bad in terms of security.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#crash-and-burn"&gt;
  &lt;/a&gt;
  Crash and Burn
&lt;/h2&gt;

&lt;p&gt;Unfortunately such workarounds don’t impact everything else that is broken in the debug protocols. Some operations in the debugger require more than one step in terms of the protocol. As a result you could send a request to the debuggee, lose your connection and the debuggee could be stuck in a problematic state. &lt;/p&gt;

&lt;p&gt;This is an inherent limitation of the JDWP protocol and can’t be worked around in a standard debugger.&lt;/p&gt;

&lt;p&gt;The problem is that even unintentional actions can demolish a server. A simple conditional breakpoint that invokes a method as part of the condition can demolish server performance and crash it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#information-sifting"&gt;
  &lt;/a&gt;
  Information Sifting
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ni7quZih--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634113633044/LJZGiwg5X.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ni7quZih--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634113633044/LJZGiwg5X.jpeg" alt="office-space.jpg"&gt;&lt;/a&gt;&lt;br&gt;
In the cult classic office space the heroes sift pennies from transactions. Big organizations block a lot of this access and rightly so. &lt;/p&gt;

&lt;p&gt;Imagine if all your colleagues had debug access to your server… All you need is one conditional breakpoint on the user login code and you have the password of a person you can hack. If you’re smart you’ll try that password on a different site without anyone knowing so it can't even be traced to you. &lt;/p&gt;

&lt;p&gt;Seriously don’t do that!&lt;/p&gt;

&lt;p&gt;This is a very real risk of placing JDWP on servers and something you need to keep in mind.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-we-solved-these-issues-at-lightrun"&gt;
  &lt;/a&gt;
  How we Solved these Issues at Lightrun
&lt;/h2&gt;

&lt;p&gt;Pretty much all of those problems don’t exist in Lightrun. Before I go into that, Lightrun doesn’t just let you start debugging… You need to authenticate. There’s an access system with corporate compliance, user roles that provide specific permissions etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#insecure-by-design"&gt;
  &lt;/a&gt;
  Insecure By Design
&lt;/h3&gt;

&lt;p&gt;Lightrun doesn’t use JDWP and instead uses a custom agent. This means that there is no need to open an additional port to your service. &lt;/p&gt;

&lt;p&gt;The agent connects to a management server so information is always pulled, never pushed. Furthermore, connections use certificate pinning to block man in the middle attacks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#crash-and-burn"&gt;
  &lt;/a&gt;
  Crash and Burn
&lt;/h3&gt;

&lt;p&gt;Operations on Lightrun are executed using a fail-safe mechanism and a Sandbox.&lt;/p&gt;

&lt;p&gt;Operations sent to the agent are atomic so a connection failure won’t impact the agent. &lt;/p&gt;

&lt;p&gt;Furthermore, conditions and expressions are sandboxed and checked. If too much CPU is used or a write operation is detected the operation is discarded or rate limited. You will get a printout that rate limiting occurred and your server will remain stable and performant.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#information-sifting"&gt;
  &lt;/a&gt;
  Information Sifting
&lt;/h3&gt;

&lt;p&gt;Lightrun has PII reduction and blocklists. This means that Lightrun can detect problematic patterns in logs such as credit card numbers. It can then block those numbers from entering the logs.&lt;/p&gt;

&lt;p&gt;This is fully configurable per install so you can configure this for social security numbers etc.&lt;/p&gt;

&lt;p&gt;Blocklists let you define classes, files etc. that are blocked to debugging. Just exclude the authentication and authorization packages once you finish debugging the initial setup and a malicious developer won’t be able to place a snapshot there.&lt;/p&gt;

&lt;p&gt;Finally everything in Lightrun is audited. That means that even if you forgot to limit access this would all be logged. Any snapshot (breakpoint) or log added by the user is added to the audit log. So a malicious developer would leave a digital trail we can follow.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;Don’t use remote debugging unless you REALLY have to and then make sure no one can access your system… Even under those circumstances be vigilant and tunnel your connections via SSH.&lt;/p&gt;

&lt;p&gt;Be careful with conditional breakpoints and other similarly elaborate debugger features. They are a recipe for disaster in such situations. &lt;/p&gt;

&lt;p&gt;Be aware that you’re effectively giving every user who has access to the server the keys to the kingdom. Not just the source and the DB, access to all the encrypted data too such as passwords!&lt;/p&gt;

&lt;p&gt;I hope you found this useful and keep safe out there with your deployments. Follow me on  &lt;a href="https://twitter.com/debugagent"&gt;twitter.com/debugagent&lt;/a&gt;  for updates and more.&lt;/p&gt;

</description>
      <category>security</category>
      <category>devops</category>
      <category>java</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>Open AI Codex - React</title>
      <author>Bhagvan Kommadi</author>
      <pubDate>Wed, 13 Oct 2021 12:18:23 +0000</pubDate>
      <link>https://dev.to/bhagvank/open-ai-codex-react-18im</link>
      <guid>https://dev.to/bhagvank/open-ai-codex-react-18im</guid>
      <description>&lt;p&gt;i tried generating code using openai codex. You can access the application at :&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bhagvank.pythonanywhere.com/"&gt;http://bhagvank.pythonanywhere.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Demo: &lt;a href="https://youtu.be/NcSr71kB17E"&gt;https://youtu.be/NcSr71kB17E&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can try the input below:&lt;br&gt;
//React component to show sentiment text inside a div&lt;/p&gt;

&lt;p&gt;const&lt;/p&gt;

</description>
      <category>openai</category>
      <category>react</category>
      <category>codex</category>
      <category>javascript</category>
    </item>
    <item>
      <title>JavaScript not equal and Comparison Operators Explained</title>
      <author>hrishikesh1990</author>
      <pubDate>Wed, 13 Oct 2021 11:37:47 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/javascript-not-equal-and-comparison-operators-explained-1d2i</link>
      <guid>https://dev.to/hrishikesh1990/javascript-not-equal-and-comparison-operators-explained-1d2i</guid>
      <description>&lt;p&gt;In this tutorial, you will learn about JavaScript not equal to operator, and the other Comparison operators along with examples.&lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents-javascript-not-equal"&gt;
  &lt;/a&gt;
  Table of Contents - JavaScript Not Equal:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-are-comparison-operators-in-js"&gt;What are Comparison Operators in JS?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-is-in-js"&gt;What is “!=” in JS?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-comparison-operators"&gt;Other Comparison Operators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts-javascript-not-equal"&gt;Closing thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-are-comparison-operators-in-js"&gt;
  &lt;/a&gt;
  What are Comparison Operators in JS?
&lt;/h2&gt;

&lt;p&gt;Comparison operators in programming languages are used to compare two values. These operators return a boolean value (true or false) based on the condition. Hence these operators are used in decision making or as conditional statements for loops.&lt;/p&gt;

&lt;p&gt;Given its vast usage, every developer should understand the functionality of each operator. This article is a good starting point for the same, however, we do emphasize more on the JavaScript not equal (!= &amp;amp; !==) operators.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-in-js"&gt;
  &lt;/a&gt;
  What is “!=” in JS?
&lt;/h2&gt;

&lt;p&gt;The JavaScript not equal or inequality operator (!=) checks whether two values are not equal and returns a boolean value. This operator tries to compare values irrespective of whether they are of different types.&lt;/p&gt;

&lt;p&gt;However, the “!==” or Strict inequality operator does not attempt to do so and returns false if the values are unequal or of different types.&lt;/p&gt;

&lt;p&gt;Both these operators solve different purposes and hence I would recommend practicing them to facilitate further understanding.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-and-explanation"&gt;
  &lt;/a&gt;
  Code and Explanation:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: true&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: false&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;10&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: false&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;10&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the first case, it returned true as the values were different. In the second and third cases, it returned a false cause the values are the same. Do note that in the latter case even though we passed 10 as a string the operator was able to compare both the values.&lt;/p&gt;

&lt;p&gt;In the last case, we used the strict inequality operator and it returned true as the values were of different types.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-comparison-operators"&gt;
  &lt;/a&gt;
  Other Comparison Operators:
&lt;/h2&gt;

&lt;p&gt;Apart from the JavaScript not equal and Strict inequality operators, we have a few other operators that solve different use cases. We have added a brief about them below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Equal to (==) - Check if two values are equal&lt;/li&gt;
&lt;li&gt;Strict equal to (===) - Checks is two values are equal and of similar type&lt;/li&gt;
&lt;li&gt;Greater than (&amp;gt;) - Checks if the value on the left is greater than the value on the right&lt;/li&gt;
&lt;li&gt;Greater than or equal to (&amp;gt;=) - Checks if the value is greater than or equal to the value on the right&lt;/li&gt;
&lt;li&gt;Less than (&amp;lt;) - Checks if the value on the left is less than the value on the right&lt;/li&gt;
&lt;li&gt;Less than or equal to (&amp;lt;=) - Checks if the value is less than or equal to the value on the right&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#code-and-explanation"&gt;
  &lt;/a&gt;
  Code and Explanation:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: false&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;10&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: false&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: false&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: false&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#closing-thoughts-javascript-not-equal"&gt;
  &lt;/a&gt;
  Closing thoughts - JavaScript not equal:
&lt;/h2&gt;

&lt;p&gt;In this tutorial, we covered the JavaScript not equal and the other comparison operators. As a next step do spend some quality time practicing the operators understand how they differ from each other and also try breaking them.&lt;/p&gt;

&lt;p&gt;Once you are done with comparison operators do have a look at logical operators.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Webpack 5 : Guide for beginners</title>
      <author>anitaparmar26</author>
      <pubDate>Wed, 13 Oct 2021 11:31:53 +0000</pubDate>
      <link>https://dev.to/anitaparmar26/webpack-5-guide-for-beginners-314c</link>
      <guid>https://dev.to/anitaparmar26/webpack-5-guide-for-beginners-314c</guid>
      <description>&lt;p&gt;So many times heard from dev that they don't understand how to configure webpack because of the config file. Today we learn how to use webpack to set up bundle styles, JavaScript, images, and fonts for the web.&lt;/p&gt;

&lt;p&gt;The first time using webpack lots of questions would be whirling around, it can be difficult to understand how it works and how it should be used. My goal is to help you understand webpack.&lt;/p&gt;

&lt;p&gt;Let's dive into webpack Initialization.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-is-webpack-5"&gt;
  &lt;/a&gt;
  What is webpack 5?
&lt;/h4&gt;

&lt;p&gt;In short, &lt;a href="https://webpack.js.org/"&gt;webpack&lt;/a&gt; is a static module bundler for modern JavaScript applications. It’s impossible to mention all tools and it’s unnecessary for a beginner’s guide like this.&lt;/p&gt;

&lt;p&gt;Instead, I'll try to put a small core list to start.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Basic Configuration &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Entry point &lt;/li&gt;
&lt;li&gt;Output&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Loaders&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Styles&lt;/li&gt;
&lt;li&gt;Images&lt;/li&gt;
&lt;li&gt;Fonts&lt;/li&gt;
&lt;li&gt;Babel (JavaScript)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Plugins&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTML Template&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Mode&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Development&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#getting-started-with-webpack-basic-configuration"&gt;
  &lt;/a&gt;
  Getting started with Webpack Basic Configuration
&lt;/h5&gt;

&lt;p&gt;First, create a directory for your project to live and start the project. There before We will begin by creating the following directory structure:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wbOCkgoP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dwraey45nprkq7n61ijh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wbOCkgoP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dwraey45nprkq7n61ijh.png" alt="Webpack"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-create-project"&gt;
  &lt;/a&gt;
  1. Create Project
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir webpack-setup
cd webpack- setup
npm init -y # creates a default package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#2-webpack-setup"&gt;
  &lt;/a&gt;
  2. Webpack setup
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install webpack webpack-cli –-save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will make an src/app folder to contain all source files. I will start by creating a simple index.js file&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-basic-configuration"&gt;
  &lt;/a&gt;
  3. Basic Configuration
&lt;/h4&gt;

&lt;p&gt;Let’s create a webpack.config.js at the root of the project.&lt;br&gt;
Touch webpack.config.js&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#4-entry-amp-output"&gt;
  &lt;/a&gt;
  4. Entry &amp;amp; Output
&lt;/h4&gt;

&lt;p&gt;In this example, we'll set the entry point to the src/index.js. We'll have it output in the dist folder, which is where production code gets built. The [name] in the output will be main.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9YKUyNuY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7tt21bej5g6n6qoevc5u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9YKUyNuY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7tt21bej5g6n6qoevc5u.png" alt="Webpack"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#5-build-webpack"&gt;
  &lt;/a&gt;
  5. Build Webpack
&lt;/h4&gt;

&lt;p&gt;To run the script, we can make a build script that runs the webpack command.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ku2Z16uS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kc1xbzeku1tr4ou5zx6z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ku2Z16uS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kc1xbzeku1tr4ou5zx6z.png" alt="Webpack"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#6-now-you-can-run-it"&gt;
  &lt;/a&gt;
  6. Now you can run it.
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The dist folder has been created with main.bundle.js.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e9jcLxCb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jz6iyht89lsmqga3l7mz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e9jcLxCb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jz6iyht89lsmqga3l7mz.png" alt="Webpack"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So we now have webpack building successfully.&lt;/p&gt;

&lt;p&gt;We will start with &lt;strong&gt;Loaders&lt;/strong&gt; in our example&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#1-styles"&gt;
  &lt;/a&gt;
  1. Styles
&lt;/h4&gt;

&lt;p&gt;For style, we will install style loader and SCSS, PostCSS, CSS loader packages.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;sass-loader – for SCSS and CSS compile&lt;/li&gt;
&lt;li&gt;node-sass – for node sass&lt;/li&gt;
&lt;li&gt;postcss-loader - Process CSS with PostCSS&lt;/li&gt;
&lt;li&gt;css-loader – resolve CSS imports&lt;/li&gt;
&lt;li&gt;style-loader – inject CSS into the Dom
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i sass-loader postcss-loader css-loader style-loader postcss-preset-env node-sass --save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We will make postCSS.config.js file and add it to the root.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4mN8dmBT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gk0wjhajebxxicx5n1f0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4mN8dmBT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gk0wjhajebxxicx5n1f0.png" alt="Webpack"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, add all loader in webpack config file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vky-uPrG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpx6tebijaaxugbjveac.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vky-uPrG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpx6tebijaaxugbjveac.png" alt="Webpack"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Run to build, you'll see the Sass and PostCSS have been applied.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#2-images"&gt;
  &lt;/a&gt;
  2. Images
&lt;/h4&gt;

&lt;p&gt;Create src/images and add an image to it, then try to import it into your index.js file.&lt;/p&gt;

&lt;p&gt;Once load the file-loader configured in the webpack.config.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i file-loader --save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SLFWBn07--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53iu402gjlcjmsvit8u2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SLFWBn07--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53iu402gjlcjmsvit8u2.png" alt="Webpack"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will get an option for output files where we want the exact path (dist/assets/images/**.jpg).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-fonts"&gt;
  &lt;/a&gt;
  3. Fonts
&lt;/h4&gt;

&lt;p&gt;First, put your font files into one folder of your project's application. &lt;/p&gt;

&lt;p&gt;Need to load url-loader for features.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i --save-dev url-loader
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D56N8MsX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qu6aecqal6yvpxzzwy9c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D56N8MsX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qu6aecqal6yvpxzzwy9c.png" alt="Webpack"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-javascript"&gt;
  &lt;/a&gt;
  4. Javascript
&lt;/h4&gt;

&lt;p&gt;We are using &lt;code&gt;babel-loader&lt;/code&gt; for js. Babel is next-generation JavaScript. There are a few additional dependencies for Babel as well.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;babel-loader - Transpile files with webpack.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/@babel/core"&gt;@babel/core&lt;/a&gt; - Backwards compatible JavaScript&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://babeljs.io/docs/en/babel-preset-env"&gt;@babel/preset-env&lt;/a&gt; - Smart defaults for Babel&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://babeljs.io/docs/en/babel-plugin-proposal-class-properties"&gt;@babel/plugin-proposal-class-properties&lt;/a&gt; - Custom Babel config
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i -D babel-loader @babel/core @babel/preset-env @babel/preset-env @babel/plugin-proposal-class-properties
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we will add some code for load js in webpack.config.js.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--21UaFtmp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u5xazqm8iao8d6npkjix.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--21UaFtmp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u5xazqm8iao8d6npkjix.png" alt="Webpack"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We create a .babelrc file in the root of the project for Babel Plugins. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4V1o9fLl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jip3n31mhxoy4pqcg6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4V1o9fLl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jip3n31mhxoy4pqcg6g.png" alt="Webpack"&gt;&lt;/a&gt;&lt;br&gt;
Run npm build, all code set without any error.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#5-plugins-for-html"&gt;
  &lt;/a&gt;
  5. Plugins for HTML
&lt;/h4&gt;

&lt;p&gt;How can configuring webpack to generate HTML with &lt;br&gt;
&lt;a href="https://webpack.js.org/plugins/html-webpack-plugin/"&gt;HtmlWebpackPlugin&lt;/a&gt; which create file from a template. First, install the plugin.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install html-webpack-plugin --save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a template.html file in the src folder. We can pass a hash of configuration '&lt;strong&gt;title&lt;/strong&gt;' options to html-webpack-plugin. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zQnTV6QX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u6symboe77tntzihaoem.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQnTV6QX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u6symboe77tntzihaoem.png" alt="Webpack"&gt;&lt;/a&gt;&lt;br&gt;
And also add code in webpack config file to build HTML&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mofjmk1D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zchpdn9sj2w4kbkrc4fx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mofjmk1D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zchpdn9sj2w4kbkrc4fx.png" alt="Webpack"&gt;&lt;/a&gt;&lt;br&gt;
Now run a build again. See the dist folder now contains an &lt;br&gt;
index.html with the bundle.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#6-mode-of-development"&gt;
  &lt;/a&gt;
  6. Mode of Development
&lt;/h4&gt;

&lt;p&gt;To set up for development, we will install &lt;code&gt;webpack-dev-server&lt;/code&gt;. Webpack gives us the option to easily install a server with live &lt;br&gt;
reloading.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/webpack/webpack-dev-server"&gt;webpack-dev-server&lt;/a&gt; - Development server for webpack
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev webpack-dev-server
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Again add a line &lt;code&gt;mode:'development'&lt;/code&gt; to webpack.config.js file. and for run server add a script in package.json:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WJ-ieiIv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vll5vo6z6qg8dbbjyww.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WJ-ieiIv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vll5vo6z6qg8dbbjyww.png" alt="Webpack"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z44afqlO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m25fpgqm6g8dbszfotjh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z44afqlO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m25fpgqm6g8dbszfotjh.png" alt="Webpack"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When running this command, a link to &lt;strong&gt;localhost:8080&lt;/strong&gt; will automatically pop up in your browser&lt;/p&gt;

&lt;p&gt;That shall be enough to get you to start with webpack! We've covered all (Basic,Plugins,Loaders) of the basic Webpack concepts. For further exploration of webpack’s capabilities we recommend official docs &lt;a href="https://webpack.js.org/"&gt;Webpack&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope you like it guys here we end our Webpack basic setup! Thank you so much for reading the post.&lt;/p&gt;

&lt;p&gt;Happy Coding :)&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>webpack</category>
      <category>webdev</category>
    </item>
    <item>
      <title>I built a dating site</title>
      <author>Sonam Shukla</author>
      <pubDate>Wed, 13 Oct 2021 11:29:18 +0000</pubDate>
      <link>https://dev.to/sonam_shukla_707cc1e27f23/i-built-a-dating-site-51fn</link>
      <guid>https://dev.to/sonam_shukla_707cc1e27f23/i-built-a-dating-site-51fn</guid>
      <description>&lt;p&gt;Hello! I used to be active here and on the Discord, and the stream of people making stuff gave me the impetus to get my head down and build something myself. So thank you all for being busy and infecting me with your enthusiasm.&lt;/p&gt;

&lt;p&gt;lovehabibi.com&lt;/p&gt;

&lt;p&gt;Yeah, all other domains taken. It's a dating site because the world needs more dating sites. I haven't posted the link anywhere else so don't expect to find your dreamboat. Unless your idea of a dreamboat is me.&lt;/p&gt;

&lt;p&gt;The premise is that photos are hidden by default. You have to strike up a conversation with someone before you can request to view their photos. When they accept, both users can see each others' photos. There is a toggle in settings to disable sharing at any time.&lt;/p&gt;

&lt;p&gt;Hopefully that will lead to lengthy profiles and a reduction in 'Hey' messages. Who knows.&lt;/p&gt;

&lt;p&gt;The main purpose for building the site is to get experience in tech I don't normally get to use - this is my first time with Node, Vue, post-css, uploads (without a plugin), websockets - and as such I tried to build as much of it myself as possible.&lt;/p&gt;

&lt;p&gt;Some tech:Postgresql, Node, Express, ws, Passport, multer, sharp.Vue, Vuex, and Vue plugins for sockets, validation, meta, and i18n (strings in but not switchable).&lt;/p&gt;

&lt;p&gt;CSS is all from scratch, as well the photo upload component (may be iffy...), photo viewer, the terms as you can probably tell.&lt;/p&gt;

&lt;p&gt;It has taken 18 months to get to this state and although that translates to between 0 and 8 hours a week, it feels like it has been such a long slog. My interest is starting to wane so I've decided to put it out there despite knowing there are bugs. And that really rankles but I need to get over it.&lt;/p&gt;

&lt;p&gt;I failed to appreciate just how big a project this would turn out to be. I thought along the lines of DB, forms, messaging, photos... ease! Nope.&lt;/p&gt;

&lt;p&gt;Thanks for taking a look&lt;/p&gt;

&lt;p&gt;P.S. I'm no designer. It is bare, I know.&lt;/p&gt;

&lt;p&gt;Regards:&lt;br&gt;
Sonam&lt;br&gt;
&lt;a href="https://www.reddit.com/user/MDrX/"&gt;https://www.reddit.com/user/MDrX/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://datingexpat.fun/"&gt;https://datingexpat.fun/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/sonam_shukla_707cc1e27f23"&gt;https://dev.to/sonam_shukla_707cc1e27f23&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>php</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Deploying a Kotlin App to Heroku</title>
      <author>Michael Bogan</author>
      <pubDate>Wed, 13 Oct 2021 11:24:52 +0000</pubDate>
      <link>https://dev.to/heroku/deploying-a-kotlin-app-to-heroku-5d0g</link>
      <guid>https://dev.to/heroku/deploying-a-kotlin-app-to-heroku-5d0g</guid>
      <description>&lt;p&gt;Since its earliest release, Java has touted itself as a "&lt;a href="https://en.wikipedia.org/wiki/Write_once,_run_anywhere"&gt;write once, run everywhere&lt;/a&gt;" programming language. The idea was that a programmer could develop an app in Java, have it compiled down to bytecode, and become an executable that can run on any platform, regardless of operating system or platform. It was able to do so in part by a runtime known as the Java Virtual Machine, or &lt;a href="https://en.wikipedia.org/wiki/Java_virtual_machine"&gt;JVM&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;To Java's credit, the JVM was (and still is!) an incredibly fine-tuned runtime that abstracted away a computer's underlying hardware. While Java as a programming language survives to this day, it is often viewed as cumbersome, stodgy, and representative of an outdated approach to implementing solutions. &lt;/p&gt;

&lt;p&gt;In the last 10 years, more and more languages that run on the JVM have developed, but look and feel nothing like Java. One such language is &lt;a href="https://en.wikipedia.org/wiki/Kotlin_(programming_language)"&gt;Kotlin&lt;/a&gt;. Because of the JVM, it has no real performance advantages over regular Java. Still, its strength lies in the fact that it prioritizes legibility in a way that Java does not. Consider, for example, printing a substring in Java:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Java
String input = "What is the answer to the Ultimate Question of Life, the Universe, and Everything? 42";
String answer = input.substring(input.indexOf("?") + 1);
System.out.println(answer);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You must first get the index of the character you want to be in the substring, add one (since strings are zero-indexed), and call &lt;code&gt;System.out.println&lt;/code&gt; to write to stdout.&lt;/p&gt;

&lt;p&gt;In Kotlin, this is much shorter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Kotlin
val input = "What is the answer to the Ultimate Question of Life, the Universe, and Everything? 42"
val answer = input.substringAfter("?")
println(answer)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Kotlin has garnered so much interest that&lt;a href="https://techcrunch.com/2019/05/07/kotlin-is-now-googles-preferred-language-for-android-app-development/"&gt; Google even recommends it over Java for developing Android apps&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;In this post, we'll take a quick look at how to develop an app in Kotlin. We'll build a simple API with a PostgreSQL database and deploy it to Heroku to see it live.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;Before we begin, you'll need to make sure you've got the following software installed on your machine: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://signup.heroku.com/"&gt;An account on Heroku&lt;/a&gt;. This is completely free and doesn't require any payment information.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://devcenter.heroku.com/articles/heroku-cli#download-and-install"&gt;The Heroku CLI&lt;/a&gt;. Once your application is on Heroku, this will make managing it much easier.&lt;/li&gt;
&lt;li&gt;You'll need to have &lt;a href="https://kotlinlang.org/docs/command-line.html"&gt;Kotlin&lt;/a&gt; installed (&amp;gt;= 1.4).&lt;/li&gt;
&lt;li&gt;You'll also need &lt;a href="https://gradle.org/install/"&gt;Gradle&lt;/a&gt; installed (&amp;gt;= 7.0).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You will also need to be a little familiar with &lt;a href="https://git-scm.com"&gt;Git&lt;/a&gt; and have it installed on your machine.&lt;/p&gt;

&lt;p&gt;We’re going to be using &lt;a href="https://www.jetbrains.com/help/idea/get-started-with-kotlin.html"&gt;the IntelliJ&lt;/a&gt; IDE for this Kotlin app. Their documentation provides some guidance on how to create a new project. Make sure you select the following options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We want to create a Kotlin application that uses Gradle as a build system&lt;/li&gt;
&lt;li&gt;Set the name of the project to kotlin-api&lt;/li&gt;
&lt;li&gt;Set the JDK version to 16. If you don’t have this version installed, you can select &lt;strong&gt;Download JDK&lt;/strong&gt;… from the dropdown, then choose &lt;strong&gt;Oracle Open JDK&lt;/strong&gt; version 16&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After the IDE sets everything up, you should have a directory structure that looks roughly like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kotlin-api
├── build.gradle.kts
└── src
    ├── main
    │   ├── kotlin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our Kotlin files will be kept in &lt;code&gt;src/main/kotlin&lt;/code&gt;, and our build logic will be in &lt;em&gt;build.gradle.kts&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h2&gt;

&lt;p&gt;Gradle is a build tool for a variety of languages. It also acts as a dependency management tool, similar to Maven. You’ll already have some lines in your &lt;em&gt;build.gradle.kts&lt;/em&gt; file, which the IDE automatically added to be helpful. You can delete all of that, and paste in these lines instead:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;plugins {
    id("java")
    id("org.jetbrains.kotlin.jvm") version "1.5.10"
    id("org.springframework.boot") version "2.4.3"

    id("io.spring.dependency-management") version "1.0.11.RELEASE"
}

group "com.example"
version "0.0.1"

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib") 

    implementation("org.springframework.boot:spring-boot-starter-web")    
    implementation("org.springframework.boot:spring-boot-starter")

    developmentOnly("org.springframework.boot:spring-boot-devtools")
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These lines specify our project's dependencies and where to find them. For example, we want to use  &lt;code&gt;[org.springframework.boot](https://plugins.gradle.org/plugin/org.springframework.boot)&lt;/code&gt; at version 2.4.3, which is why it's defined within the &lt;code&gt;plugins&lt;/code&gt; block. We point out the repositories where the packages can be found—at &lt;code&gt;mavenCentral()&lt;/code&gt;—and which exposed classes we want to use (&lt;code&gt;implementation( "org.springframework.boot:spring-boot-starter-web")&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Let's create two small files to test our setup. Create a file called &lt;code&gt;Application.kt&lt;/code&gt; in the &lt;em&gt;src/main/kotlin&lt;/em&gt; folder and paste in the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.example

import org.springframework.boot.SpringApplication
import org.springframework.boot.autoconfigure.SpringBootApplication

@SpringBootApplication
open class Application

fun main(args: Array&amp;lt;String&amp;gt;) {
    SpringApplication.run(Application::class.java, *args)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This starts a default app using the Spring framework. The real magic happens in this next file, &lt;code&gt;Controller.kt&lt;/code&gt;, which you should create alongside &lt;code&gt;Application.kt&lt;/code&gt; in &lt;em&gt;src/main/kotlin&lt;/em&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.example

import org.springframework.web.bind.annotation.GetMapping
import org.springframework.web.bind.annotation.PathVariable
import org.springframework.web.bind.annotation.RestController

@RestController
class GreetingController {

    @GetMapping("/{name}")
    fun get(@PathVariable name: String) = "Hello, $name"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we define a route (&lt;code&gt;@GetMapping("/{name}")&lt;/code&gt;), where &lt;code&gt;{name}&lt;/code&gt; is a dynamic value. By placing this decorator over a Kotlin method (&lt;code&gt;fun get&lt;/code&gt;, or "a function named get"), we're able to match the route to whatever behavior we want—in this case, returning a greeting with the path name for a &lt;code&gt;GET&lt;/code&gt; request. &lt;/p&gt;

&lt;p&gt;In order for the IDE to know how to launch our application, we need to create &lt;a href="https://www.jetbrains.com/help/idea/run-debug-configuration.html"&gt;a run configuration&lt;/a&gt;. At the top of the IDE menu, click the button that says &lt;strong&gt;Add Configuration…&lt;/strong&gt;. Select &lt;strong&gt;Add new run configuration&lt;/strong&gt;, then choose Gradle from the list. For the Gradle project name, enter kotlin-api. In the Tasks field, type &lt;code&gt;bootRun&lt;/code&gt;. &lt;code&gt;&lt;a href="https://docs.spring.io/spring-boot/docs/2.5.0/gradle-plugin/reference/htmlsingle/#running-your-application"&gt;bootRun&lt;/a&gt;&lt;/code&gt; is a Gradle task provided by the Spring framework which will compile our code and start the server. Click &lt;strong&gt;Ok&lt;/strong&gt;; you should now have a green Play button in your IDE menu bar. When you click on this, the IDE will execute  &lt;code&gt;gradle bootRun&lt;/code&gt; to build this Kotlin app and start the server. When that finishes, navigate to &lt;code&gt;http:&lt;em&gt;//localhost:8080/world&lt;/em&gt;&lt;/code&gt;. You should see a nice greeting.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interacting-with-the-database"&gt;
  &lt;/a&gt;
  Interacting with the database
&lt;/h2&gt;

&lt;p&gt;Now, let's get to the (somewhat) serious stuff. Suppose we wanted to attach a database to this project. In a Maven/Java world, we'd need to update an XML file and add a reference to a JAR file. In Gradle, we can get by with just adding a few lines to our &lt;code&gt;build.gradle.kts&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dependencies {
    # ...

    implementation("com.zaxxer:HikariCP:4.0.3")
    runtimeOnly("org.postgresql:postgresql")

    # ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we've included &lt;a href="https://github.com/brettwooldridge/HikariCP"&gt;HikariCP&lt;/a&gt; in our project, which is a popular database connection driver. We also indicate that we want to "load" the &lt;code&gt;org.postgresql&lt;/code&gt; library during runtime. With just these two lines, we've let our configuration know that we want to interact with a PostgreSQL database. If you already have a PostgreSQL database running locally, that's great. You'll be able to continue the rest of this guide locally and see the results when browsing localhost. If you don't have PostgreSQL, don't fret—we'll show you just how easy it is to deploy this app on Heroku, which will take care of the infrastructure for you. &lt;/p&gt;

&lt;p&gt;Head back to &lt;code&gt;Controller.kt&lt;/code&gt;, and replace it with the contents below. This takes some of what we had from before but adds to it. We'll go over the changes shortly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.example
import org.springframework.web.bind.annotation.GetMapping
import org.springframework.web.bind.annotation.PathVariable
import org.springframework.web.bind.annotation.RestController
import org.springframework.web.bind.annotation.PostMapping
import org.springframework.web.bind.annotation.RequestBody
import org.springframework.http.MediaType
import com.zaxxer.hikari.HikariConfig
import com.zaxxer.hikari.HikariDataSource
import java.net.URI
import javax.sql.DataSource

@RestController
class GreetingController {

   val dataSource = dataSource()
   val connection = dataSource.connection

   @GetMapping("/{name}")

   fun get(@PathVariable name: String) = "Hello, $name"

   @PostMapping(value = ["/add-name"], consumes = [MediaType.TEXT_PLAIN_VALUE])
   fun post(@RequestBody requestBody: String) : String {
       initDb()
       val stmt = connection.createStatement()
       stmt.executeUpdate("INSERT INTO names values('$requestBody')")
       return "Added $requestBody"
   }

   @GetMapping("/everyone")

   fun getAll() : String {
       initDb()
       val stmt = connection.createStatement()
       val rs = stmt.executeQuery("SELECT name FROM names")
       val output = ArrayList&amp;lt;String&amp;gt;()
       while (rs.next()) {
           output.add(rs.getString("name"))
       }
       val names = output.joinToString(", ")
       return "Here are the names: $names"
   }

   internal fun initDb() {
       val stmt = connection.createStatement()
       stmt.executeUpdate("CREATE TABLE IF NOT EXISTS names (name text)")
   }

   internal fun dataSource(): HikariDataSource {
       val config = HikariConfig()
       var dbUri = URI(System.getenv("DATABASE_URL") ?: "postgresql://localhost:5432/")
       var dbUserInfo =  dbUri.getUserInfo()
       var username: String?; var password: String?;
       if (dbUserInfo != null) {
           username = dbUserInfo.split(":").get(0)
           password = dbUserInfo.split(":").get(1)
       } else {
           username = System.getenv("DATABASE_USERNAME") ?: null
           password = System.getenv("DATABASE_PASSWORD") ?: null
       }
       if (username != null) {
           config.setUsername(username)
       }
       if (password != null) {
           config.setPassword(password)
       }
       val dbUrl = "jdbc:postgresql://${dbUri.getHost()}:${dbUri.getPort()}${dbUri.getPath()}"
       config.setJdbcUrl(dbUrl)
       return HikariDataSource(config)
   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's quite a lot going on here! Let's start from the bottom. We define a function called &lt;code&gt;dataSource&lt;/code&gt; which provides a connection to our database. Because we're building&lt;a href="https://12factor.net/config"&gt; a 12-Factor app&lt;/a&gt;, our database credentials are stored in an environment variable called &lt;code&gt;DATABASE_URL&lt;/code&gt;. We fetch that URL and pull out the username and password from it if one exists. If not, we check another two environment variables for that information—&lt;code&gt;DATABASE_USERNAME&lt;/code&gt; and &lt;code&gt;DATABASE_PASSWORD&lt;/code&gt;. We then put all that information together into a format that the database connector needs. The &lt;code&gt;initDb&lt;/code&gt; function creates a table called &lt;code&gt;names&lt;/code&gt;, with a single text column called &lt;code&gt;name&lt;/code&gt;. The &lt;code&gt;/everyone&lt;/code&gt; endpoint has a &lt;code&gt;@GetMapping&lt;/code&gt; decorator just like before. This defines a &lt;code&gt;GET /everyone&lt;/code&gt; route, which gets all the names from the database.&lt;/p&gt;

&lt;p&gt;Finally, we've added something rather new: a &lt;code&gt;@PostMapping&lt;/code&gt; decorator. Here, we need to define what types of content this &lt;code&gt;POST&lt;/code&gt; route can accept. In this case, it &lt;code&gt;consumes&lt;/code&gt; a &lt;code&gt;TEXT_PLAIN_VALUE&lt;/code&gt; media type (in other words, &lt;code&gt;"Content-Type: text/plain"&lt;/code&gt;). Whatever string of information we put in the request body will be added to the database. In just a few lines, we've built a small API that we can add to and query.&lt;/p&gt;

&lt;p&gt;If you start this server now—and if you have PostgreSQL running locally—you should be able to interact with it. Try making the following request:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ curl -H "Content-Type: text/plain" -X POST http://localhost:8080/add-name -d 'Frank'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you navigate to &lt;code&gt;http://localhost:8080/everyone&lt;/code&gt;, you'll see that &lt;code&gt;Frank&lt;/code&gt; was included.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploying-to-heroku"&gt;
  &lt;/a&gt;
  Deploying to Heroku
&lt;/h2&gt;

&lt;p&gt;It's time to see just how easy it is to get Kotlin running on Heroku. First, we need to create a file that's specific to Heroku:&lt;a href="https://devcenter.heroku.com/articles/procfile"&gt; the Procfile&lt;/a&gt;. This text file defines how our application should boot and run. &lt;/p&gt;

&lt;p&gt;Create a file named &lt;em&gt;Procfile&lt;/em&gt; in the root level directory, right next to your &lt;em&gt;build.gradle.kts&lt;/em&gt; file. Copy-paste the following lines into it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;web: java -jar build/libs/kotlin-api.jar --server.port=$PORT
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we're saying that we want Heroku to run &lt;code&gt;java -jar build/libs/kotlin-api.jar&lt;/code&gt;. That JAR is packaged and built during the deployment process; Heroku will create it automatically for us because it knows how to execute the Gradle task to do so. We are also binding the &lt;code&gt;$PORT&lt;/code&gt; environment variable so that Heroku knows which port the server is listening to.&lt;/p&gt;

&lt;p&gt;Next, run the following Git commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git init
$ git add .
$ git commit -m "Preparing my first Kotlin app"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we have the Heroku CLI installed, we can &lt;a href="https://devcenter.heroku.com/articles/creating-apps"&gt;call heroku create on the command line to generate an app&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku create
Creating app... done, ⬢ desolate-plains-67007
Created http://desolate-plains-67007.herokuapp.com/ | git@heroku.com:desolate-plains-67007.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your app will be assigned a random name—in this example, it's &lt;code&gt;desolate-plains-67007&lt;/code&gt;—as well as a publicly accessible URL.&lt;/p&gt;

&lt;p&gt;In order to provision a database, we use the &lt;code&gt;&lt;a href="https://devcenter.heroku.com/articles/heroku-cli-commands#heroku-addons-all-app-app"&gt;heroku addons&lt;/a&gt;&lt;/code&gt; command. Calling it without arguments will let us know if any exist:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku addons
No add-ons for app desolate-plains-67007.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;No add-ons exist for our app, which makes sense—we just created it! To add a PostgreSQL database, we can use the &lt;code&gt;addons:create&lt;/code&gt; command like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku addons:create heroku-postgresql:hobby-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Heroku offers several tiers of PostgreSQL databases. &lt;code&gt;hobby-dev&lt;/code&gt; is the free tier, so we can play around with this without paying a dime.&lt;/p&gt;

&lt;p&gt;Your code is ready, your Heroku app is configured—you’re ready to deploy. This is the easy part! Just type out the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git push heroku master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your code will be pushed to Heroku. From that point on, Heroku will take over. You'll see your build logs scrolling through your terminal. This will show you what Heroku is installing on your behalf and where you are in the build process. After it’s complete, you can visit your special URL in the browser (in this case, &lt;code&gt;https://desolate-plains-67007.herokuapp.com&lt;/code&gt;) and interact with the API on the internet!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-more"&gt;
  &lt;/a&gt;
  Learning more
&lt;/h2&gt;

&lt;p&gt;Kotlin's &lt;a href="https://blog.heroku.com/rise-of-kotlin"&gt;performant design and legible syntax&lt;/a&gt;—combined with the ease of Gradle—make it ideal for enterprises that need to rely on battle-tested Java packages. Because of its interoperability with Java, Kotlin is ideal as a transitional language; vast swaths of Java code can be converted into Kotlin while still maintaining a functional app. Deploying to Heroku is smooth, and I didn't even take advantage of the different ways to &lt;a href="https://devcenter.heroku.com/categories/java-support"&gt;fine-tune Java and JVM-based apps for deployment&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>java</category>
      <category>kotlin</category>
      <category>architecture</category>
    </item>
    <item>
      <title>what is DeFi?</title>
      <author>arz digital</author>
      <pubDate>Wed, 13 Oct 2021 11:03:59 +0000</pubDate>
      <link>https://dev.to/zohaspotlight/what-is-defi-3la9</link>
      <guid>https://dev.to/zohaspotlight/what-is-defi-3la9</guid>
      <description>&lt;p&gt;DeFi draws inspiration from blockchain, the technology behind the digital currency bitcoin, which allows several entities to hold a copy of a history of transactions, meaning it isn't controlled by a single, central source. That's important because centralized systems and human gatekeepers can limit the speed and sophistication of transactions while offering users less direct control over their money. DeFi is distinct because it expands the use of blockchain from simple value transfer to more complex financial use cases.&lt;/p&gt;

&lt;p&gt;Bitcoin and many other digital-native assets stand out from legacy digital payment methods, such as those run by Visa and PayPal, in that they remove all middlemen from transactions. When you pay with a credit card for coffee at a cafe, a financial institution sits between you and the business, with control over the transaction, retaining the authority to stop or pause it and record it in its private ledger. With bitcoin, those institutions are cut out of the picture.&lt;/p&gt;

&lt;p&gt;Direct purchases aren't the only type of transaction or contract overseen by big companies; financial applications such as loans, insurance, crowdfunding, derivatives, betting and more are also in their control. Cutting out middlemen from all kinds of transactions is one of the primary advantages of DeFi.&lt;/p&gt;

&lt;p&gt;Before it was commonly known as decentralized finance, the idea of DeFi was often called "open finance."&lt;/p&gt;

</description>
      <category>blockchain</category>
    </item>
  </channel>
</rss>
