<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Voici comment traduire du text à l'aide de Google Translate en 3 lignes de code seulement !!!</title>
      <author> Eric Le Codeur</author>
      <pubDate>Sun, 06 Jun 2021 20:23:48 +0000</pubDate>
      <link>https://dev.to/ericlecodeur/voici-comment-traduire-du-text-a-l-aide-de-google-translate-en-3-lignes-de-code-seulement-3382</link>
      <guid>https://dev.to/ericlecodeur/voici-comment-traduire-du-text-a-l-aide-de-google-translate-en-3-lignes-de-code-seulement-3382</guid>
      <description>&lt;p&gt;&lt;a href="https://twitter.com/EricLeCodeur"&gt;Suivez-moi sur Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Truc et Astuce Python:&lt;br&gt;
Traduire du text à l'aide de Google Translate en 3 lignes de code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# pip3 install googletrans==3.1.0a0
&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;googletrans&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Translator&lt;/span&gt;

&lt;span class="n"&gt;translator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Translator&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;translator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Bonjour, ceci est un application web qui permet de truduire un text."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"fr"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Consulter la librairie GoogleTrans pour tous les détails: &lt;a href="https://github.com/ssut/py-googletrans"&gt;https://github.com/ssut/py-googletrans&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Nginx Serving Compressed Multiple Static Files w/ Unique Paths using Docker for Improved Performance</title>
      <author>alxizr</author>
      <pubDate>Sun, 06 Jun 2021 20:00:53 +0000</pubDate>
      <link>https://dev.to/alxizr/nginx-serving-compressed-multiple-static-files-w-unique-paths-using-docker-for-improved-performance-501g</link>
      <guid>https://dev.to/alxizr/nginx-serving-compressed-multiple-static-files-w-unique-paths-using-docker-for-improved-performance-501g</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;In this setup we will configure the &lt;strong&gt;nginx&lt;/strong&gt; server to serve multiple static files on different paths with gzip, media, js and css enabled. This scenario may fit well with Microfrontends (MFE) architechture where each individual route may serve a complete isolated application's production build version and by implementing the concept we will discuss here in this article you will also gain performance improvement.&lt;br&gt;
This is a simple starter guide on how to get you up and running and in case you should want to implement this kind of setup, you will have to add in your additional custom configurations that suits your needs best.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  📓 📓 📓 Prerequisites 📓 📓 📓
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/get-docker/"&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/_/nginx"&gt;Nginx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/downloads/"&gt;Bash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#getting-started-guide"&gt;
  &lt;/a&gt;
  🏃🏃🏃 Getting started guide 🏃🏃🏃
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;we will be working with vscode and the integrated bash terminal&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;open vscode&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;open bash integrated termianl&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  ctrl + &lt;span class="nb"&gt;shift&lt;/span&gt; + &lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or you can choose the &lt;strong&gt;'view'&lt;/strong&gt; tab in the menu and then click on &lt;strong&gt;'Terminal'&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create a project folder and cd into it
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;mkdir&lt;/span&gt; &amp;lt;project_name&amp;gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;project_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;create a Dockerfile file
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;touch &lt;/span&gt;Dockerfile
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;you will excuse me if i skip the .dockerignore file as we are not focusing on Docker here but rather on what we want to achieve with nginx.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create a nginx.conf file
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;touch &lt;/span&gt;nginx.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;We now will take a look on the overview of the configuration files and for a more detailed information we will have towards the end of the article or you can read the repo as well.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#dockerfile-file-content-description"&gt;
  &lt;/a&gt;
  Dockerfile file content description
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="c"&gt;# base image to build on: we use a lightweight image&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; nginx:alpine&lt;/span&gt;

&lt;span class="c"&gt;# You may want to clear defaults on producion server - set working directory to nginx asset directory and then remove default nginx static assets; uncomment these next 2 lines&lt;/span&gt;
&lt;span class="c"&gt;# WORKDIR /usr/share/nginx/html&lt;/span&gt;
&lt;span class="c"&gt;# RUN rm -rf ./*&lt;/span&gt;

&lt;span class="c"&gt;# repeat this line for each application you fancy serving on different route&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; ./&amp;lt;app_build_dir&amp;gt; ./usr/share/nginx/html/&amp;lt;app_build_dir&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;# override the default nginx configuration file with our own&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; ./nginx.conf ./etc/nginx/conf.d/default.conf&lt;/span&gt;

&lt;span class="c"&gt;# expose the port your server should support (80/443..)&lt;/span&gt;
&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; &amp;lt;port&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pay attention: If you come from any Nginx background with Docker, do not add this command in the Dockerfile file&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ENTRYPOINT &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"nginx"&lt;/span&gt;, &lt;span class="s2"&gt;"-g"&lt;/span&gt;, &lt;span class="s2"&gt;"daemon off;"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;The reason we don't add it is because we override the default configurations and we want to control the custom behaviour of our nginx server.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#nginxconf-file-content-description"&gt;
  &lt;/a&gt;
  nginx.conf file content description
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nginx"&gt;&lt;code&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                  &lt;span class="c1"&gt;# default port&lt;/span&gt;
    &lt;span class="kn"&gt;root&lt;/span&gt; &lt;span class="n"&gt;/usr/share/nginx/html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;# absolute paths only&lt;/span&gt;
    &lt;span class="kn"&gt;gzip&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                    &lt;span class="c1"&gt;# enable compression&lt;/span&gt;


    &lt;span class="c1"&gt;# nginx default config&lt;/span&gt;
    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="n"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;index&lt;/span&gt; &lt;span class="s"&gt;index.html&lt;/span&gt; &lt;span class="s"&gt;index.htm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


    &lt;span class="c1"&gt;# repeat this block as many times as you need&lt;/span&gt;
    &lt;span class="c1"&gt;# my application page&lt;/span&gt;
    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="n"&gt;/&amp;lt;my_app&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;index&lt;/span&gt; &lt;span class="s"&gt;index.html&lt;/span&gt; &lt;span class="s"&gt;index.htm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt;&lt;span class="n"&gt;/&lt;/span&gt; &lt;span class="n"&gt;/index.html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;# set up gzip config&lt;/span&gt;
    &lt;span class="c1"&gt;# set up assets (javascript, css, media files)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#adding-in-our-applications"&gt;
  &lt;/a&gt;
  💪💪💪 Adding in our applications 💪💪💪
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Before we move forward we would actually need to get our project(s) available for us to use and deploy on to the nginx server. We can use basically anything we want for serving html, css and javascript for example React or Angular, but i am not going to go and implement this extra step as this is out of focus, but rather mimic a production build of a frontend framework by just creating 3 folders with an index.html file.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Again in the terminal pointing to the root of the project run these 2 commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;Home,Profile,Dashboard&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;touch&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;Home,Profile,Dashboard&lt;span class="o"&gt;}&lt;/span&gt;/index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now open all the index.html files, add some html skeleton for home, profile and dashboard applications.&lt;/p&gt;

&lt;p&gt;Here is an example. Just copy and paste it and don't forget to update the heading for each directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Profile&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"//localhost:8080/home/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Home &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"//localhost:8080/profile/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Profile &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"//localhost:8080/dashboard/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Dashboard &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;_Change_This_ page&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;I want to take a moment and explain what just happened in this last step. We are acting as we have 3 different frontend projects that we want to serve on 3 different routes. In this case we are just implementing the bare minimum for the static html because this article is not about the static assets but rather on how to use them with nginx.&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#mini-recap"&gt;
  &lt;/a&gt;
  ⏰ ⏰ ⏰ Mini Recap ⏰ ⏰ ⏰
&lt;/h2&gt;

&lt;p&gt;As for this stage we should have one project folder which contains 2 configuration files (Dockerfile and nginx.conf) and 3 folders (Home, Profile and Dashboard) with index.html files in them that represents a full blown production build application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;project
|
|_  Dockerfile
|_  nginx.conf
|
|___Home
|   |_  index.html
|
|___Profile
|   |_  index.html
|
|___Dashboard
    |_  index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The only part that is missing here, before we can apply our settings are the exact contents of the Dockerfile and the nginx.conf files. Let's quickly see what they are.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#filling-the-missing-pieces"&gt;
  &lt;/a&gt;
  🔨 🔨 🔨 Filling the missing pieces 🔨 🔨 🔨
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#dockerfile"&gt;
  &lt;/a&gt;
  Dockerfile
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;
    FROM nginx:alpine

    COPY ./Home ./usr/share/nginx/html/home
    COPY ./Profile ./usr/share/nginx/html/profile
    COPY ./Dashboard ./usr/share/nginx/html/dashboard

    COPY ./nginx.conf ./etc/nginx/conf.d/default.conf

    EXPOSE 80
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#nginxconf"&gt;
  &lt;/a&gt;
  nginx.conf
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nginx"&gt;&lt;code&gt;
    &lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;listen&lt;/span&gt;          &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;root&lt;/span&gt;            &lt;span class="n"&gt;/usr/share/nginx/html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kn"&gt;include&lt;/span&gt;         &lt;span class="n"&gt;/etc/nginx/mime.types&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;default_type&lt;/span&gt;    &lt;span class="nc"&gt;application/octet-stream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kn"&gt;gzip&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;gzip_disable&lt;/span&gt; &lt;span class="s"&gt;"msie6"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kn"&gt;gzip_vary&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;gzip_proxied&lt;/span&gt; &lt;span class="s"&gt;any&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;gzip_comp_level&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;gzip_buffers&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="mi"&gt;8k&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;gzip_http_version&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="s"&gt;.1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;gzip_min_length&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kn"&gt;gzip_types&lt;/span&gt;  &lt;span class="nc"&gt;font/eot&lt;/span&gt;
                    &lt;span class="nc"&gt;font/otf&lt;/span&gt;
                    &lt;span class="nc"&gt;font/ttf&lt;/span&gt;
                    &lt;span class="nc"&gt;image/svg&lt;/span&gt;&lt;span class="s"&gt;+xml&lt;/span&gt;
                    &lt;span class="nc"&gt;text/css&lt;/span&gt;
                    &lt;span class="nc"&gt;text/javascript&lt;/span&gt;
                    &lt;span class="nc"&gt;text/plain&lt;/span&gt;
                    &lt;span class="nc"&gt;text/xml&lt;/span&gt;
                    &lt;span class="nc"&gt;application/atom&lt;/span&gt;&lt;span class="s"&gt;+xml&lt;/span&gt;
                    &lt;span class="nc"&gt;application/geo&lt;/span&gt;&lt;span class="s"&gt;+json&lt;/span&gt;
                    &lt;span class="nc"&gt;application/javascript&lt;/span&gt;
                    &lt;span class="nc"&gt;application/x-javascript&lt;/span&gt;
                    &lt;span class="nc"&gt;application/json&lt;/span&gt;
                    &lt;span class="nc"&gt;application/ld&lt;/span&gt;&lt;span class="s"&gt;+json&lt;/span&gt;
                    &lt;span class="nc"&gt;application/manifest&lt;/span&gt;&lt;span class="s"&gt;+json&lt;/span&gt;
                    &lt;span class="nc"&gt;application/rdf&lt;/span&gt;&lt;span class="s"&gt;+xml&lt;/span&gt;
                    &lt;span class="nc"&gt;application/rss&lt;/span&gt;&lt;span class="s"&gt;+xml&lt;/span&gt;
                    &lt;span class="nc"&gt;application/xhtml&lt;/span&gt;&lt;span class="s"&gt;+xml&lt;/span&gt;
                    &lt;span class="nc"&gt;application/xml&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


        &lt;span class="c1"&gt;# home page&lt;/span&gt;
        &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="n"&gt;/home&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kn"&gt;index&lt;/span&gt; &lt;span class="s"&gt;index.html&lt;/span&gt; &lt;span class="s"&gt;index.htm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt;&lt;span class="n"&gt;/&lt;/span&gt; &lt;span class="n"&gt;/index.html&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;# dashboard page&lt;/span&gt;
        &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="n"&gt;/dashboard&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kn"&gt;index&lt;/span&gt; &lt;span class="s"&gt;index.html&lt;/span&gt; &lt;span class="s"&gt;index.htm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt;&lt;span class="n"&gt;/&lt;/span&gt; &lt;span class="n"&gt;/index.html&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="c1"&gt;# profile page&lt;/span&gt;
        &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="n"&gt;/profile&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kn"&gt;index&lt;/span&gt; &lt;span class="s"&gt;index.html&lt;/span&gt; &lt;span class="s"&gt;index.htm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt;&lt;span class="n"&gt;/&lt;/span&gt; &lt;span class="n"&gt;/index.html&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;# root - nginx default&lt;/span&gt;
        &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="n"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kn"&gt;index&lt;/span&gt; &lt;span class="s"&gt;index.html&lt;/span&gt; &lt;span class="s"&gt;index.htm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;


        &lt;span class="c1"&gt;# Javascript and CSS files&lt;/span&gt;
        &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;*&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="s"&gt;.(?:css|js)&lt;/span&gt;$ &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kn"&gt;expires&lt;/span&gt; &lt;span class="s"&gt;1y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kn"&gt;access_log&lt;/span&gt; &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kn"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;Cache-Control&lt;/span&gt; &lt;span class="s"&gt;"public"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;


        &lt;span class="c1"&gt;# Media: images, icons, video, audio, HTC&lt;/span&gt;
        &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;*&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="s"&gt;.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)&lt;/span&gt;$ &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kn"&gt;expires&lt;/span&gt; &lt;span class="mi"&gt;1M&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kn"&gt;access_log&lt;/span&gt; &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kn"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;Cache-Control&lt;/span&gt; &lt;span class="s"&gt;"public"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;


        &lt;span class="c1"&gt;# Any route containing a file extension (e.g. /devicesfile.js)&lt;/span&gt;
        &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt; &lt;span class="sr"&gt;^.+\..+$&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#putting-theory-2-practice"&gt;
  &lt;/a&gt;
  🎹 🎹 🎹 Putting theory 2 practice 🎹 🎹 🎹
&lt;/h2&gt;

&lt;p&gt;Now after we set up our Nginx server as for what and how it should behave, we will build our very own custom version of it and then run it to see that everything works as expected!&lt;/p&gt;

&lt;p&gt;Let's open a terminal from inside the project root folder and run the next command. We would want to '&lt;a href="https://docs.docker.com/engine/reference/commandline/tag/"&gt;tag&lt;/a&gt;' our custom image so we can address it by name and not by its id, to do it simply by adding the -t flag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    &lt;span class="nv"&gt;$ &lt;/span&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; &amp;lt;my_custom_tag_image&amp;gt; &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;and for the docker less experienced ones, this is what you need to type and run, pay attention to spacing and the dot!
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    &lt;span class="nv"&gt;$ &lt;/span&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; multi_nginx &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next step is to run the image in a container and we will accomplish it by running the next command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    &lt;span class="nv"&gt;$ &lt;/span&gt;docker run &lt;span class="nt"&gt;-p&lt;/span&gt; &amp;lt;out_port&amp;gt;:&amp;lt;in_port&amp;gt; &amp;lt;my_custom_tag_image&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Pay attention that we specify the our local port to a container's inner port which can be anything but defaults to 80 or 443, this is the exact port number we exposed inside the Dockerfile configuration file. (I used port 8080)&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;and again for the docker less experienced ones, this is what you need to type and run
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    &lt;span class="nv"&gt;$ &lt;/span&gt;docker run &lt;span class="nt"&gt;-p&lt;/span&gt; 8080:80 multi_nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;pay a little attention, if you do come from a docker background, to the fact we don't run the container in a &lt;a href="https://docs.docker.com/engine/reference/commandline/run/#options"&gt;detached&lt;/a&gt; mode with the -d flag because we want to see the nginx server logs every route it should serve.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Our final step is to open a browser and browse to the container root path on &lt;a href="http://localhost:8080/"&gt;localhost:8080&lt;/a&gt;. In this demo we have 3 different paths that are isolated from one another &lt;a href="http://localhost:8080/home/"&gt;home&lt;/a&gt;, &lt;a href="http://localhost:8080/profile/"&gt;profile&lt;/a&gt; and &lt;a href="http://localhost:8080/dashboard/"&gt;dashboard&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you very much for staying all the way through this article and hope that you may have learned something. until the next time.&lt;/p&gt;

&lt;p&gt;Goodbye&lt;/p&gt;

</description>
      <category>nginx</category>
      <category>docker</category>
      <category>webdev</category>
      <category>devops</category>
    </item>
    <item>
      <title>DDD: Fun with Languages</title>
      <author>manish srivastava</author>
      <pubDate>Sun, 06 Jun 2021 19:58:28 +0000</pubDate>
      <link>https://dev.to/manishfoodtechs/ddd-fun-with-languages-3fgn</link>
      <guid>https://dev.to/manishfoodtechs/ddd-fun-with-languages-3fgn</guid>
      <description>&lt;p&gt;In Caption DDD stands for  dumb, dumber and dumbest like me.&lt;/p&gt;

&lt;p&gt;So all DDDs , we are going to learn few computer  languages together in this series of its kind. &lt;br&gt;
It will include python, c++, go,  javascript and Rust .&lt;/p&gt;

&lt;p&gt;This series is not going to be complex. You don't need to have any prior programming  knowledge. Just follow with me.&lt;/p&gt;

&lt;p&gt;Prerequisites:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You have seen a computer.&lt;/li&gt;
&lt;li&gt;Made a search on google once in your life.&lt;/li&gt;
&lt;li&gt;You know there are parts like RAM, HDD and Processor in computer.&lt;/li&gt;
&lt;li&gt;Machine understand 0 and 1.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you have above prerequisites, Believe me you have all capabilities to be a good programmer.&lt;br&gt;
Yes believe me.&lt;/p&gt;

&lt;p&gt;For a while let's forget about programming languages. Let's brush up our pre primary school knowledge. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#i-believe"&gt;
  &lt;/a&gt;
  I believe
&lt;/h1&gt;

&lt;p&gt;You know a,b,c d.... &lt;br&gt;
You know integers 1,2,3.... &lt;br&gt;
You know decimal numbers 1.59, 3.75 ....&lt;br&gt;
You know sentences like "a for Apple".....&lt;br&gt;
You know 😂 this laughing face too...&lt;br&gt;
You know God is true and Satan is false.&lt;/p&gt;

&lt;p&gt;Great. You are 2% programmer now.&lt;/p&gt;

&lt;p&gt;Just like any human languages, programming languages too have their own grammer and script ( way of writing).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-programming-languages"&gt;
  &lt;/a&gt;
  In programming languages:
&lt;/h3&gt;

&lt;p&gt;a,b,c are called chars.&lt;br&gt;
"Apple" is called string. &lt;br&gt;
1,2,3 are called integers (int)&lt;br&gt;
1.5,2.75 these decimal numbers are called floats.&lt;br&gt;
and 😂 is symbol ASCII symbols (chars)&lt;br&gt;
Any statement outcome is either 'true' or 'false' is called Boolean.&lt;/p&gt;

&lt;p&gt;Int, chars, string, floats, Boolean are almost common types in every language. &lt;/p&gt;

&lt;p&gt;Further, in computer science there are two types of languages low level languages and high level languages.&lt;/p&gt;

&lt;p&gt;Many definitions and differences available in Google. For now, being DDD it's enough to know programs written in low level languages are limited to machine only while you can share High level language program from one machine to another. Like python and c++.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#moving-further"&gt;
  &lt;/a&gt;
  Moving further:
&lt;/h3&gt;

&lt;p&gt;Suppose you have only 2 blank pages in your note book. And I ask you to write chars, strings, floats and some booleans. But remember, I will keep dectating and it's your headache to ensure whatever I have dectated gets within two pages. It's difficult?&lt;/p&gt;

&lt;p&gt;Yes it is. This resource management makes you a better programmer.Today many programmers write programs but they are unable to do resource managements like memory leakages etc. I will talk about this later.&lt;/p&gt;

&lt;p&gt;Instead of writing long sentences you can opted for short hand notes. This is good way. But you should know like steno about short hand . This 'short hand'  are  'functions and classes' in programming languages.&lt;br&gt;
Use of functions and classes are not mandatory as like short hand but like short hand they are fast and resource friendly. &lt;/p&gt;

&lt;p&gt;Function as a Service (faas) is a new term in world of programming. As DDD, we can keep faas for later stages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-do-some-arithmetic-and-algebra"&gt;
  &lt;/a&gt;
  Let's do some arithmetic and algebra.
&lt;/h3&gt;

&lt;p&gt;But before we start let me tell you .... a unit law. You can't add distance into weight. &lt;/p&gt;

&lt;p&gt;10 meters + 10 kgs = Error.&lt;br&gt;
10 meters + 10 meters =20m&lt;/p&gt;

&lt;p&gt;These units you can say &lt;br&gt;
are called 'type' in programming language .&lt;br&gt;
The good rule book says two different types can't be added.&lt;/p&gt;

&lt;p&gt;Like &lt;br&gt;
1 + a = error&lt;br&gt;
Int + char = error.&lt;br&gt;
'Apple" + 'd' = Appled &lt;/p&gt;

&lt;p&gt;Oops!!! In last example we added a string with char .&lt;/p&gt;

&lt;p&gt;In many languages it is possible chars and string addition but in RUST language it is not easily possible.&lt;br&gt;
X:char = '10';&lt;br&gt;
Y: int = 10;&lt;br&gt;
Z= X + Y; error&lt;br&gt;
X == Y ; error&lt;br&gt;
X === Y ; FALSE&lt;/p&gt;

&lt;p&gt;As a good programmer we should avoid this of mixing units. The reason is responsible resource utilisation. &lt;/p&gt;

&lt;p&gt;Further, any programming language want us to define your variable type.&lt;/p&gt;

&lt;p&gt;For example if &lt;br&gt;
distance (d) = speed x time;&lt;br&gt;
d will be a integer or float.&lt;/p&gt;

&lt;p&gt;So, int d = speed*time;&lt;br&gt;
Or  float d = speed*time;&lt;/p&gt;

&lt;p&gt;String Add ="New Delhi zip 2345789"&lt;/p&gt;

&lt;p&gt;Almost in all programming languages arithmetic symbols are same. Except one well known is * for multiplication.&lt;/p&gt;

&lt;p&gt;int X=2;&lt;br&gt;
float Y=3.50;&lt;br&gt;
Z=x+y;&lt;/p&gt;

&lt;p&gt;What is value of Z ? &lt;br&gt;
It's not 5.50 . Because there is no variable is x or y? They are capital X (2) and Y (3).&lt;/p&gt;

&lt;p&gt;It may possible that programming language may ask you to define x ,y. But few programming language may neglect x,y and no error will be thrown. Even if there is no error you have wasted precious time of your RAM to calculate x+y. &lt;br&gt;
You may ask. Computers and servers are so fast then, why we need to worry? We will take this question at later stage.&lt;/p&gt;

&lt;p&gt;For now, you are free to code the way you want. &lt;/p&gt;

&lt;p&gt;But before we start programming we should know about binary, bits , Bytes etc.&lt;/p&gt;

&lt;p&gt;You can't be a good programmer if you don't understand how your codes makes your machine to work behind to compile it.&lt;br&gt;
How your chars,int,string variables are stored ?&lt;/p&gt;

&lt;p&gt;Above all questions are very simple. We will have look to them in next part.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Running C++17 on Mac M1</title>
      <author>Ayush Pattnaik</author>
      <pubDate>Sun, 06 Jun 2021 19:41:32 +0000</pubDate>
      <link>https://dev.to/ayushpattnaik/running-c-17-on-mac-m1-47cp</link>
      <guid>https://dev.to/ayushpattnaik/running-c-17-on-mac-m1-47cp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#having-problems-using-raw-stl-endraw-functions-of-raw-c14-endraw-or-raw-c17-endraw-"&gt;
  &lt;/a&gt;
  Having problems using &lt;code&gt;STL&lt;/code&gt; functions_ of &lt;code&gt;C++14&lt;/code&gt; or &lt;code&gt;C++17&lt;/code&gt;?
&lt;/h2&gt;

&lt;p&gt;Wrote a piece of code in &lt;code&gt;C++&lt;/code&gt; and encountered that &lt;code&gt;STL&lt;/code&gt; functions are not supported by the default clang compiler on Mac? &lt;br&gt;
For example, this piece of code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&amp;lt;bits/stdc++.h&amp;gt;
&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;gcd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Compiling the code with &lt;code&gt;gnu&lt;/code&gt; or &lt;code&gt;clang&lt;/code&gt; compilers and getting this error?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;@User-MacBook-Air % clang++ test.cpp
test.cpp:5:11: error: use of undeclared identifier &lt;span class="s1"&gt;'gcd'&lt;/span&gt;
    int &lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;gcd&lt;span class="o"&gt;(&lt;/span&gt;2,3&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          ^
1 error generated.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#so-what-happened-here"&gt;
  &lt;/a&gt;
  So what happened here?
&lt;/h2&gt;

&lt;p&gt;Let's check our &lt;code&gt;c++&lt;/code&gt; version.&lt;/p&gt;

&lt;p&gt;When you run &lt;code&gt;clang --version&lt;/code&gt;, you will get something like this and would be pretty confused even if your &lt;code&gt;clang/gnu&lt;/code&gt; is up-to-date but you still can't figure out your &lt;code&gt;c++&lt;/code&gt; version:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;   Apple clang version 12.0.5 &lt;span class="o"&gt;(&lt;/span&gt;clang-1205.0.22.9&lt;span class="o"&gt;)&lt;/span&gt;
   Target: arm64-apple-darwin20.4.0
   Thread model: posix
   InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#this-happens-because"&gt;
  &lt;/a&gt;
  This happens because
&lt;/h3&gt;

&lt;p&gt;The gcd() function is a STL function from c++14 and above.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;But by default, Clang builds &lt;code&gt;C++&lt;/code&gt; code according to the &lt;code&gt;C++98&lt;/code&gt; standard, with many &lt;code&gt;C++11&lt;/code&gt; features accepted as extensions.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#what-to-do"&gt;
  &lt;/a&gt;
  What to do?
&lt;/h3&gt;

&lt;p&gt;After going through many websites and resources, I was finally able to compile the correct methods to use c++17 on mac.&lt;br&gt;
So in order to use STL functions of &lt;code&gt;c++17&lt;/code&gt; or &lt;code&gt;c++14&lt;/code&gt; or upper versions, you need to specify the version of C++ to be used which goes like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; &lt;span class="nt"&gt;-std&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;c++&lt;span class="o"&gt;{&lt;/span&gt;version&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;filename&lt;span class="o"&gt;}&lt;/span&gt;.cpp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;appending the c++ version to -std option.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For &lt;code&gt;clang&lt;/code&gt; compilers:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
 clang++ &lt;span class="nt"&gt;--std&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;c++17 &lt;span class="o"&gt;{&lt;/span&gt;filename&lt;span class="o"&gt;}&lt;/span&gt;.cpp

&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For &lt;code&gt;gnu&lt;/code&gt; compilers:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
 g++ &lt;span class="nt"&gt;--std&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;gnu++17 &lt;span class="o"&gt;{&lt;/span&gt;filename&lt;span class="o"&gt;}&lt;/span&gt;.cpp

&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;My &lt;strong&gt;Personal choice&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
 c++ &lt;span class="nt"&gt;--std&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;gnu++17 &lt;span class="o"&gt;{&lt;/span&gt;filename&lt;span class="o"&gt;}&lt;/span&gt;.cpp

&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;And that's it, you're done!&lt;/p&gt;

&lt;p&gt;Also free feel to share other ways in the comments!!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NJ5VqvaZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--T2Dqk-Zz--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_66%252Cw_880/https://media1.giphy.com/media/Ga1UmWZ9jdYOc/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NJ5VqvaZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--T2Dqk-Zz--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_66%252Cw_880/https://media1.giphy.com/media/Ga1UmWZ9jdYOc/giphy.gif" alt="pride"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>cpp</category>
      <category>codenewbie</category>
      <category>programming</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>I made an open source platform to learn Computer Science . Check it if you are interested in MERN stack

</title>
      <author>Abdulrahman</author>
      <pubDate>Sun, 06 Jun 2021 19:37:41 +0000</pubDate>
      <link>https://dev.to/alotaibidev/intro-to-data-structure-and-algorithms-nlj</link>
      <guid>https://dev.to/alotaibidev/intro-to-data-structure-and-algorithms-nlj</guid>
      <description>&lt;p&gt;Learn to build any SaaS product through devKamet, an interactive platform to learn the essentials of Computer Science, Data Structures, Algorithms, and Operating Systems using Golang 👩‍🚀&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FGcGwTFr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo1qrdwayex2szmpryes.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FGcGwTFr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo1qrdwayex2szmpryes.png" alt="screely-1621832305861"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is for people who wants to learn more about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Frontend architecture&lt;/li&gt;
&lt;li&gt;Application server architecture&lt;/li&gt;
&lt;li&gt;Modern codebase with current tech stack&lt;/li&gt;
&lt;li&gt;How to connect to the server properly&lt;/li&gt;
&lt;li&gt;How to re-use your UI very fast and efficiently&lt;/li&gt;
&lt;li&gt;React Authorization, State management with reducer &amp;amp; context&lt;/li&gt;
&lt;li&gt;JWT Authentication&lt;/li&gt;
&lt;li&gt;medium to large codebase&lt;/li&gt;
&lt;li&gt;How to create in browser IDE to code in almost any language&lt;/li&gt;
&lt;li&gt;And so much more!
The work is still in-progress , I open source it to see if someone will find it useful and learn more from the codebase and the whole repo ✨
&lt;a href="https://github.com/abdulrahmanAlotaibi/devkamet"&gt;Check the Github repo&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Javascript under the hood - synchronous by nature</title>
      <author>Arika O</author>
      <pubDate>Sun, 06 Jun 2021 19:16:35 +0000</pubDate>
      <link>https://dev.to/arikaturika/javascript-under-the-hood-synchronous-by-nature-110k</link>
      <guid>https://dev.to/arikaturika/javascript-under-the-hood-synchronous-by-nature-110k</guid>
      <description>&lt;p&gt;I recently decided to dig deeper into how Javascript actually works, so I thought, why not create a series of articles explaining concepts like &lt;code&gt;engines&lt;/code&gt;, &lt;code&gt;single threaded&lt;/code&gt;, &lt;code&gt;async&lt;/code&gt;,  &lt;code&gt;event loops&lt;/code&gt; (and more) in a simple way and share it with others? One thing I noticed about some of the learning resources out there is that they focus too much on writing code and too little on explaining the &lt;code&gt;hows and whys&lt;/code&gt; of a programming language. Because of that, waking up with knowledge gaps it's almost inevitable so I'm hoping these articles will help me (and you) fill some of those gaps.&lt;/p&gt;

&lt;p&gt;If along the way, I miss to mention something or you feel I wrongly/ incompletely explained some of the concepts, feel free to give me a heads up in the comments and I'll rectify the errors. Let's start.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;ABOUT JAVASCRIPT&lt;/strong&gt;&lt;br&gt;
Although Javascript is mostly presented as a scripting language for web browsers, it can live and work very well in non browsers environments like &lt;code&gt;AdobeAcrobat&lt;/code&gt; (where it's used for form handling), &lt;code&gt;Apache CouchDB&lt;/code&gt; (a NoSQL type database where Javascript it's used as its query language) or &lt;code&gt;NodeJs&lt;/code&gt; (a back-end run time environment which lets us run Javascript outside browsers). For now, I'm going to primarely focus on Javascript used in the browser.&lt;/p&gt;

&lt;p&gt;The first things beginners learn about &lt;code&gt;Javascript&lt;/code&gt; is that it's an &lt;code&gt;interpreted&lt;/code&gt;, &lt;code&gt;single-threaded&lt;/code&gt;, &lt;code&gt;non-blocking&lt;/code&gt; and &lt;code&gt;asynchronous&lt;/code&gt; programming language. What do these things mean?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;INTERPRETED&lt;/strong&gt; &lt;br&gt;
Means that it needs an &lt;code&gt;interpereter&lt;/code&gt; to be translated into machine code (code that computers understand). At the opposite end we have &lt;code&gt;compiled languages&lt;/code&gt;, which don't need an interpreter (for example &lt;code&gt;C&lt;/code&gt; or &lt;code&gt;C++&lt;/code&gt;). Interpereters ar commonly referred to as "engines". Each browser uses a different engine to translate Javascript as the most popular ones are &lt;code&gt;V8&lt;/code&gt; for Chrome, &lt;code&gt;Webkit&lt;/code&gt; for Safari and &lt;code&gt;Quantum&lt;/code&gt; for Firefox. Whenever a browser receives JS code, the engine starts parsing it. It first checks for errors, and if none are found, it starts reading the code from top to bottom.&lt;/p&gt;

&lt;p&gt;An list of all the task the &lt;code&gt;V8 engine&lt;/code&gt; can take care of, might look like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Compiles and executes JS code&lt;/li&gt;
&lt;li&gt;Handles the call stack (runs our JS functions in some order)&lt;/li&gt;
&lt;li&gt;Managing memory allocation for objects (the memory heap)&lt;/li&gt;
&lt;li&gt;Garbage collection (of objects which are no longer in use)&lt;/li&gt;
&lt;li&gt;Provide all the data types, operators, objects and functions&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Don't worry about what all these things mean, they will all be explained in this series.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;SINGLE THREADED&lt;/strong&gt; &lt;br&gt;
Means that Javascript can only do one thing at a time (it has one call stack and one memory heap - we'll explain these later), it can't multi-task. The opposite of this is &lt;code&gt;multithreaded&lt;/code&gt;, which means that multimple parts of an application can be run at the same time.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SYNCHRONOUS&lt;/strong&gt;&lt;br&gt;
Although presented as a non-blocking, asynchronous programming language, Javascript follows a synchronous execution model. As the name suggests, synchronous means to be in a sequence, i.e. every statement of the code gets executed one by one. So, basically a statement has to wait for the earlier statement to get executed. If we take the code below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;it will print, as expected:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the second console.log to happen, the first needs to finish and for the third to happend, the second needs to finish. This is how synchronicity works. When we have small pieces of code, this isn't a problem, but if we have expensive operations, something called a &lt;code&gt;blocking bahaviour&lt;/code&gt; will become apparent.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BLOCKING&lt;/strong&gt;&lt;br&gt;
By default, Javascript is blocking. This means that if we have a function that will take a long time to execute, the browser will get stuck and nothing else can be accessed on the webpage until the expensive function doesn't end execution. To see this in action, open any web page, then go to the console and run the function bellow. If you try to interact with the browser while the &lt;code&gt;expensiveFunction&lt;/code&gt; is running, you will see this is not possible (not only the webpage you just opened it's unresponsive but the whole browser).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expensiveFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`i = &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; and j = &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;expensiveFunction&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the next article we'll start talking about the complete Javascript runtime environment (which means much more than the Javascript engine), I'll draw a scheme of how things work and interact with eachother and explain two very important concepts: the &lt;code&gt;stack&lt;/code&gt; and the &lt;code&gt;heap&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Image source: *Mati Mango/ @mati on &lt;a href="https://www.pexels.com/@mati"&gt;Pexels&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to become a Successful Developer </title>
      <author>Krowser Web Services </author>
      <pubDate>Sun, 06 Jun 2021 18:56:31 +0000</pubDate>
      <link>https://dev.to/krowser/how-to-become-a-successful-developer-4h2g</link>
      <guid>https://dev.to/krowser/how-to-become-a-successful-developer-4h2g</guid>
      <description>&lt;p&gt;For me, being a software developer is one of the best jobs in the world. I love to code and getting paid for it is just awesome. But the weather isn’t always bright, and I’ve struggled so many times in my career that I’m constantly reflecting on my situation and trying to remind myself what I’m capable of.&lt;/p&gt;

&lt;p&gt;To support you and your careers, I’ve written down seven pieces of advice I found to be very important for my career. Spend time trying each of them and see if they help you in your current situation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don’t Sell Yourself Short&lt;/strong&gt;&lt;br&gt;
This is one of the most important lessons I had to learn, and it took me about 10 years to realize it. These days, if you work in tech, and specifically as a software engineer, you’re a scarce resource. Normally, I don’t like it when people see their staff as resources because they’re humans after all. But in this case, I used the term to underline the importance and to make this as clear as possible for you:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Companies need you, not the other way around.&lt;/strong&gt;
Let me elaborate on this some more. The U.S. market alone is currently facing a 500,000+ shortage in software developers. This gap will increase exponentially over the next five to 10 years due to increasing demand and demographic changes. The same applies to other countries and continents.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All the countless hours you put into learning new technologies, all the nights you spent working on your coding skills — it pays off.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Software engineer is probably the job with the highest demand.&lt;/strong&gt;
Being aware of this — and more importantly, being able to use this — will not only give you better career opportunities with higher salaries, but it will ultimately result in much higher self-confidence. And that will help you not only in business but also in life.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Invest in You and Your Career&lt;/strong&gt;&lt;br&gt;
The tech industry is one of the fastest-changing industries today — if not the fastest. Sometimes, it’s hard to keep track of the ever-evolving ecosystem of software development, especially when it comes to web development. But to stay relevant, every engineer must keep learning new technologies, programming languages, frameworks, techniques, best practices, skills, etc.&lt;/p&gt;

&lt;p&gt;The good thing about being a software engineer is that learning can be done from home or the office most of the time, and you can choose from a variety of sources, such as books, eBooks, blog posts, online courses, trainings, podcasts, and more.&lt;/p&gt;

&lt;p&gt;However, when learning something new, you need to invest both money and time. Prices vary heavily between formats and so does quality. But what matters most for the majority of us is time. Time is precious, and time is scarce. Many engineers have full-time jobs, and learning happens before or after work, or during the weekend and holidays. So it almost always becomes a trade-off between family, free time for yourself, and learning.&lt;/p&gt;

&lt;p&gt;But it’s necessary to invest in your skills and career. So here’s what you really should do:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You need to invest smartly.&lt;/strong&gt;&lt;br&gt;
And when I say invest smartly, I mean that you shouldn’t follow every new framework or technology blindly.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Don’t practice React.js today, Vue.js tomorrow, and Angular next week.&lt;/li&gt;
&lt;li&gt;Don’t learn advanced JavaScript concepts if you haven’t mastered the basics yet.&lt;/li&gt;
&lt;li&gt;Don’t switch between courses, books, and trainings.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Rather, you should check in with yourself. See where you’re standing now.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do you like working on the front end or back end?&lt;/li&gt;
&lt;li&gt;Are you a visual type or do you love numbers?&lt;/li&gt;
&lt;li&gt;What projects are you currently working on and what will help you with them?&lt;/li&gt;
&lt;li&gt;What technologies, frameworks, and languages are in demand in your area?&lt;/li&gt;
&lt;li&gt;Do you want to learn something new for a concrete reason (new job, higher salary, change of careers) or just for fun?&lt;/li&gt;
&lt;li&gt;What technologies are already established but still hot topics?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have a time budget and dedicate it to what’s important to you. Check courses and their quality before spending time on them. And if you choose to spend your precious time on something, be committed and stick to it. We tend to lose interest after some time and chase the next cool thing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don’t do that — be smart!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Leave Toxic Bosses and Workplaces&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“When you are 20 to 30 years old, you should follow a good boss and join a good company to learn how to do things properly.” — Jack Ma (Alibaba)&lt;/p&gt;

&lt;p&gt;That’s a good point from Jack Ma. But what it doesn’t say is what you should do when you realize that your boss or your current job isn’t what you expected when you began working for the company.&lt;/p&gt;

&lt;p&gt;Having a boss who doesn’t support you isn’t good for you, your self-confidence, and your career. Having a boss that actively (maybe even intentionally) hurts your career is even worse. Some bosses are sociopaths, or they’re just very difficult to deal with. Some are just not good leaders.&lt;/p&gt;

&lt;p&gt;In the end, if you come to the conclusion that for one or another reason you can’t bring your A-Game because of your boss, I would advise changing your job more often than not. I know from my own experience and from many others:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Bosses don’t change.&lt;/strong&gt;
Many of us are a bit lazy when it comes to changing jobs, and some are afraid. And then we tend to think that it’s not so bad after all — only to realize a few weeks later that nothing changed and it’s still bad. You’re a software engineer in high demand. Don’t let some incapable person or a toxic workplace drag you down.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;There are others out there that deserve you more.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Consider Doing a Side Hustle&lt;/strong&gt;&lt;br&gt;
I love doing side projects even if I’m in a permanent role. It’s not the money that keeps me motivated to do so, even though money is a valid reason as well (but more money does come with more pressure…). But the reason I like doing side projects is because they help me constantly challenge my mind.&lt;/p&gt;

&lt;p&gt;When you work on products or services for companies and clients, it’s not uncommon that you use the technologies your company uses or the client requests. While I still love coding, that can become boring after some time, and you might not be using the latest tech. Many companies still use Java 6,7, or 8 even though we already have Java 11. Or PHP without frameworks like Laravel.&lt;/p&gt;

&lt;p&gt;My point is that a side hustle — even if it will consume time — will be good for your career in the long run because you can stay up-to-date with new tech, work on open source projects and add them to your portfolio and CV, and engage with the community, which is beneficial for your network.&lt;/p&gt;

&lt;p&gt;Side projects let you learn new things and keep you motivated.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Work on Your LinkedIn Profile&lt;/strong&gt;&lt;br&gt;
Taking care of one or more social profiles is something I didn’t spend much time on in the early years of my career. I was fresh from university, I applied for three or four jobs, and I was hired for one of them. Everything seemed fine, and I thought I would work for that company my whole life.&lt;/p&gt;

&lt;p&gt;Boy was I wrong. Not only did my feelings about the job change, but I was constantly jealous of co-workers receiving calls from headhunters and recruiters.&lt;/p&gt;

&lt;p&gt;Even today, I see many, many extremely talented engineers stay in their positions with the same salary they had years ago because nobody knows what they’re capable of.&lt;/p&gt;

&lt;p&gt;Having a profile on LinkedIn will give you exposure to recruiters, potential employers, and like-minded people. It will help you present your skills, connect with other people who share the same interests, and find new job opportunities. But let me state something very important for you:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A poorly maintained profile is worse than no profile.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You should spend some of your precious time and/or money enhancing and updating your profile constantly. I’ll share with you a few tips based on my experience with LinkedIn over the past couple of years.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Have a profile picture that represents you in a good manner. No party pictures, but as a developer you also don’t need to wear a suit.&lt;/li&gt;
&lt;li&gt;Have a profile slogan that tells what you’re capable of and what you have to offer. Something like, “Senior JavaScript Developer with 10 years of professional working experience.”&lt;/li&gt;
&lt;li&gt;Use the summary for two to three sentences about who you are and what your major skills are.&lt;/li&gt;
&lt;li&gt;Describe each of your job experiences with one to two short sentences, and optimize for keywords like Java, React, and HTML that recruiters and algorithms look for.&lt;/li&gt;
&lt;li&gt;Skills and endorsements are a great way to stand out from others. List all your technical and non-technical skills (I would suggest listing more technical skills) and try to get endorsed for each of them. Ask your friends and colleagues for endorsements, endorse other peoples’ skills and ask nicely if they’ll endorse yours as well, or join LinkedIn groups (e.g. JavaScript) and ask for mutual endorsements. Don’t forget that you can have your three top skills be sticky, and they will show up first in your profile. Make use of that!&lt;/li&gt;
&lt;li&gt;Certificates are optional. If you have them, show them.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Don’t Hesitate to Ask Questions&lt;/strong&gt;&lt;br&gt;
One thing that I often recognize with myself and others is that as we get more experience— especially when we get a new title like team lead or senior developer — we think that we can no longer ask questions because that would undermine our reputation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is completely wrong!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Whether you’re just starting your career as a software developer or have 10+ years experience, if you don’t know something, ask! Nobody knows everything. Nobody can know everything. The software industry constantly changes at a furious speed.&lt;/p&gt;

&lt;p&gt;In addition, asking questions from time to time will help you establish a healthy relationship with your co-workers. If junior developers notice that their opinions are being heard, it will help increase their self-confidence.&lt;/p&gt;

&lt;p&gt;And by asking questions, we can discover new solutions to problems that we would have never thought of because the longer we work in a certain environment, the more we’re stuck in terms of our thinking.&lt;/p&gt;

&lt;p&gt;So I encourage you, beginner to professional, keep asking questions. Not only will it help you personally, but it will also help your environment.&lt;/p&gt;

&lt;p&gt;Being a software engineer that knows how to write clean and maintainable code, how to deploy code into cloud services, and how to fix bugs in emergency situations is, of course, a great thing. But in today’s world, that’s simply not enough.&lt;/p&gt;

&lt;p&gt;If you want to become a senior developer, you need to work on other skills as well. Most of the time, you’re working in a team. One of the biggest threats for any project is miscommunication. You constantly have to communicate — with other developers, with product managers, with project sponsors, with clients. You have to present new ideas and features and defend measures that your team committed to.&lt;/p&gt;

&lt;p&gt;Improving your communication skills doesn’t have to be difficult. Often, it’s the small things that matter. Listen to others respectfully, don’t interrupt when other people are talking, and restrain your ego.&lt;/p&gt;

&lt;p&gt;Many companies offer training for their staff that deals with social skills. While many developers think these are a waste of time because nothing will be coded, that’s exactly the wrong approach.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don’t be that type of person!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A smart developer knows their strengths and weaknesses. Be open-minded, try out things even if other’s try to talk you out of it, and stay in control of your career.&lt;/p&gt;

&lt;p&gt;These are some major things I discovered during my career in the software industry. It helped me a lot to work on each of the topics, and I really hope that it will help you too!&lt;/p&gt;

</description>
      <category>career</category>
      <category>javascript</category>
      <category>python</category>
      <category>css</category>
    </item>
    <item>
      <title>Quick Tips: How to fix "Image elements do not have explicit width and height" in Page Speed Insights / Lighthouse</title>
      <author>InHuOfficial</author>
      <pubDate>Sun, 06 Jun 2021 18:49:32 +0000</pubDate>
      <link>https://dev.to/inhuofficial/quick-tips-how-to-fix-image-elements-do-not-have-explicit-width-and-height-in-page-speed-insights-lighthouse-3776</link>
      <guid>https://dev.to/inhuofficial/quick-tips-how-to-fix-image-elements-do-not-have-explicit-width-and-height-in-page-speed-insights-lighthouse-3776</guid>
      <description>&lt;p&gt;If you have run your website through &lt;a href="https://github.com/GoogleChrome/lighthouse"&gt;Google Lighthouse&lt;/a&gt;, &lt;a href="https://developers.google.com/speed/pagespeed/insights/"&gt;Page Speed Insights&lt;/a&gt;, &lt;a href="https://web.dev/measure/"&gt;web.dev measure&lt;/a&gt; etc. you may have seen an action point of "Image elements do not have explicit width and height". &lt;/p&gt;

&lt;p&gt;So how do we fix it?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-short-answer"&gt;
  &lt;/a&gt;
  The short Answer
&lt;/h2&gt;

&lt;p&gt;All you need to do is add the images &lt;em&gt;native&lt;/em&gt; width and height to the image. &lt;/p&gt;

&lt;p&gt;You can do this with the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; attributes, defining the sizes in pixels. &lt;/p&gt;

&lt;p&gt;This then allows the browser calculate an aspect ratio (the ratio of the width to the height) and allocate enough space for the image before it loads.&lt;/p&gt;

&lt;p&gt;So for an image that is 1600 pixels wide by 900 pixels tall:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"1600"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"900"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"your-image.jpg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#long-answer"&gt;
  &lt;/a&gt;
  Long Answer
&lt;/h2&gt;

&lt;p&gt;Lets take a typical example.&lt;/p&gt;

&lt;p&gt;You have the following in your CSS file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This gives the browser enough information to calculate the images width as it can look at it's parent container width and calculate how wide the image should be.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;height: auto&lt;/code&gt; however, is where the problem lies. It does not give the image an explicit height, but instead it is instructing the browser to make the image whatever height it thinks is appropriate based on the width of the image.&lt;/p&gt;

&lt;p&gt;The problem with this is that the browser does not know the width or height of the original image when the HTML is parsed. It only finds out how large the image is when it starts downloading.&lt;/p&gt;

&lt;p&gt;For this reason the following happens:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The browser downloads your HTML&lt;/li&gt;
&lt;li&gt;it finds an image element and looks for any styles associated with it (which you should have &lt;a href="https://www.smashingmagazine.com/2015/08/understanding-critical-css/"&gt;inlined as part of your critical CSS&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;it then renders the image element but does not know the height so gives it a 0 pixel height&lt;/li&gt;
&lt;li&gt;it then requests the image and finds out it is 1600 pixels by 900 pixels&lt;/li&gt;
&lt;li&gt;it then uses that information to create an aspect ratio of 16:9&lt;/li&gt;
&lt;li&gt;it then revisits the image element it found earlier, looks at the calculated width (let's say it is 400 pixels on the screen) and applies the aspect ratio to calculate the height (400 / 16 * 9 = 300px).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This results in what is known as a Layout Shift. This is then added to the &lt;a href="https://web.dev/cls/"&gt;Cumulative Layout Shift (CLS)&lt;/a&gt; on the site.&lt;/p&gt;

&lt;p&gt;As this is part of &lt;a href="https://web.dev/learn-web-vitals/"&gt;Google's web vitals&lt;/a&gt; and is very soon to be a metric that affects your search rankings, it is something you want to fix &lt;strong&gt;now&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-fix-it"&gt;
  &lt;/a&gt;
  How to fix it
&lt;/h2&gt;

&lt;p&gt;There are a few ways to fix this, but here are two of the recommended ways to fix it, with the first being the preferred / best practice.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#option-1-define-the-width-and-height-of-the-image-using-the-raw-width-endraw-and-raw-height-endraw-attributes"&gt;
  &lt;/a&gt;
  Option 1 - define the width and height of the image using the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; attributes.
&lt;/h3&gt;

&lt;p&gt;The first option is to define the width and height of the image using the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; attributes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"1600"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"900"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"some-image.webp"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice how the attributes do not include the units (pixels), they should be defined as integers.&lt;/p&gt;

&lt;p&gt;In modern browsers this will then be used to calculate an aspect ratio for the image.&lt;/p&gt;

&lt;p&gt;If you remember back to the previous section where we described the order of events in a browser, calculating the aspect ratio happened after the image element had been rendered as we didn't know the height of the image yet.&lt;/p&gt;

&lt;p&gt;By applying a &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; attribute the browser can now calculate the aspect ratio &lt;strong&gt;before&lt;/strong&gt; it renders the image element and can reserve enough space for the image once it downloads.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/optimize-cls/?utm_source=lighthouse&amp;amp;utm_medium=devtools#modern-best-practice"&gt;Using the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; attributes is the recommended best practice to avoid layout shifts from images.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Top tip:&lt;/strong&gt; One thing to note is that the browser will still obey and CSS sizing you apply. &lt;/p&gt;

&lt;p&gt;So if you apply &lt;code&gt;width:100%&lt;/code&gt; and &lt;code&gt;height:auto&lt;/code&gt; as in the original CSS example it will still work correctly and obey your CSS rules. The only difference is that it can now calculate how big &lt;code&gt;height: auto&lt;/code&gt; needs to be.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bonus tip:&lt;/strong&gt; Another interesting thing is that your height and width attributes only need to be the correct aspect ratio. So all of the following would result in the same behaviour as the ratio between the width and the height is the same:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;img width=1600 height=900&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;img width=800 height=450&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;img width=160  height=90 &amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is worth noting though that using as close as possible to the correct size is recommended just in case something goes wrong with your CSS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#option-2-aspect-ratio-boxes"&gt;
  &lt;/a&gt;
  Option 2 - "aspect ratio boxes"
&lt;/h2&gt;

&lt;p&gt;This technique is also known as "the CSS padding hack".&lt;/p&gt;

&lt;p&gt;What we do here is instead of defining the width and height on the image, we define the height of the image as a percentage of the width within our CSS file.&lt;/p&gt;

&lt;p&gt;In order to achieve this we give our image a height of zero pixels (which is how it would render initially remember) and then use &lt;code&gt;padding-top&lt;/code&gt; to allocate the correct amount of space in the document to avoid a layout shift.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"image-div"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.image-div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* not necessary if div is empty and other styles do not interfere */&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* not necessary if div is empty and other styles do not interfere */&lt;/span&gt;
  &lt;span class="nl"&gt;padding-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;56.25%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/*aspect ratio of 16:9 at 100% width requires a 56.25% height*/&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(/my-image.webp)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or, if you don't need to &lt;a href="https://caniuse.com/calc"&gt;support Internet Explorer you can use &lt;code&gt;calc()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css-using-raw-calc-endraw-"&gt;
  &lt;/a&gt;
  CSS using &lt;code&gt;calc()&lt;/code&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.image-div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* not necessary if div is empty and other styles do not interfere */&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* not necessary if div is empty and other styles do not interfere */&lt;/span&gt;
  &lt;span class="nl"&gt;padding-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;900&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;1600&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c"&gt;/*aspect ratio of 16:9, notice how we reverse the values as we are calculating the height from the width this time*/&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(/my-image.webp)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://css-tricks.com/aspect-ratio-boxes/"&gt;This padding technique is explained in more detail in this article from CSS tricks&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-would-you-use-this"&gt;
  &lt;/a&gt;
  Why would you use this?
&lt;/h4&gt;

&lt;p&gt;Obviously it is a bit of a hack and it requires you to use a background image on a div.&lt;/p&gt;

&lt;p&gt;It is also not useful for anything other than decorative images as you cannot define an &lt;code&gt;alt&lt;/code&gt; attribute for people who use assistive tech or have images switched off.&lt;/p&gt;

&lt;p&gt;But it does have the advantage of keeping your HTML clean if you are a purist...but I don't think that is a good enough reason to use it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-if-you-dont-know-the-exact-dimensions-of-the-image"&gt;
  &lt;/a&gt;
  What if you don't know the exact dimensions of the image?
&lt;/h2&gt;

&lt;p&gt;Both the above techniques have one big flaw that you may have spotted.&lt;/p&gt;

&lt;p&gt;When designing the page you have to know the width and height of the image to calculate the aspect ratio / add the appropriate width and height.&lt;/p&gt;

&lt;p&gt;Obviously the solution is to handle this on the back end and use caching techniques to store the width and height attributes but this may not be possible.&lt;/p&gt;

&lt;p&gt;If you are trying to fix this issue on an existing site that has thousands of images, or you cannot calculate the image width and height etc. you may have to make a minor compromise.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-fixed-height-container"&gt;
  &lt;/a&gt;
  The fixed height container
&lt;/h3&gt;

&lt;p&gt;Lets assume that all images on your site lie somewhere between a 1:1 aspect ratio and a 16:9 aspect ratio.&lt;/p&gt;

&lt;p&gt;What we could do is add a container around all of our images that has a fixed height.&lt;/p&gt;

&lt;p&gt;That way a browser is able to allocate space for the container on the page instead of the image. &lt;/p&gt;

&lt;p&gt;The downside is you will end up with white space at the bottom of that container for images that are not the same aspect ratio.&lt;/p&gt;

&lt;p&gt;The following fiddle demonstrates this technique:&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/2dc0hjan//embedded/result,html,css//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I added &lt;code&gt;background-color: #ccc&lt;/code&gt; to the container to show where the extra white space would be. &lt;/p&gt;

&lt;p&gt;This technique is probably best used when images on a site are &lt;em&gt;similar&lt;/em&gt; aspect ratios (some are 16:9, some are 16:10 for example) as the extra white space will not be as noticeable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;To wrap up, Cumulative Layout Shift needs to be minimised for a great user experience and soon to maintain your Search Engine Rankings.&lt;/p&gt;

&lt;p&gt;The 3 techniques described above should hopefully let you fix this issue on your site if you haven't already done so.&lt;/p&gt;

&lt;p&gt;I would recommend finding a way to automate adding a &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; attribute to your images for 99% of scenarios.&lt;/p&gt;

&lt;p&gt;The only time this won't work is if you serve images with a different aspect ratio depending on the screen size (known as art direction) using the &lt;code&gt;srcset&lt;/code&gt; attribute. In that scenario you will have to either use media queries and the padding hack or the fixed height container technique. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#for-the-algo"&gt;
  &lt;/a&gt;
  For the Algo!
&lt;/h2&gt;

&lt;p&gt;My new sign off experiment! &lt;/p&gt;

&lt;p&gt;If you enjoyed this article, give it a ❤, if you thought it was special give it a 🦄 and above all, don't forget:&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Leave a comment for the algorithm! Especially if you have a scenario where you think the above techniques won't work 😁!  &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>beginners</category>
    </item>
    <item>
      <title>I'm a newbie. Should I create contents?</title>
      <author>Juliana Gaioso</author>
      <pubDate>Sun, 06 Jun 2021 18:48:11 +0000</pubDate>
      <link>https://dev.to/juligaioso/i-m-a-newbie-should-i-create-contents-3ne0</link>
      <guid>https://dev.to/juligaioso/i-m-a-newbie-should-i-create-contents-3ne0</guid>
      <description>&lt;p&gt;&lt;strong&gt;Short Answer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Long Answer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There is no one person who's know everything. As the same, has no one person who's know nothing. All content you're been creating should be at the same level of the challenges you're passing by in your career. And if you don't feel challenged, maybe this have to be your actual challenge, and you have to talk about it.&lt;br&gt;
A regular person work for thirty years or more. Over this years, a different types of skills can be demanded, and probably never two times at the same way. So, if you really feel and if you really want to share with the community something relevant, I'm a hundred per cent sure you have a thing to say. And if you share what you want to say, I totally believe who someone in someplace can be helped for this.&lt;br&gt;
And if even so you don't feel good enough to share technical stuffs, share your experiences, your fears, your way to solve this feeling. Soft skills are a skill too.&lt;/p&gt;

</description>
      <category>braziliandevs</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Useful Resources to Learn Quantum Computing</title>
      <author>Bala Priya</author>
      <pubDate>Sun, 06 Jun 2021 18:39:33 +0000</pubDate>
      <link>https://dev.to/balapriya/useful-resources-to-learn-quantum-computing-414k</link>
      <guid>https://dev.to/balapriya/useful-resources-to-learn-quantum-computing-414k</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Have you always been fascinated by the world of qubits, and are curious to learn Quantum Computing?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this post, I’ve prepared a comprehensive list of a few great resources that’d help you to learn the basics of Quantum Computing, while also simulating your own quantum circuits.&lt;br&gt;
The list includes lectures, tutorials and suggested reading to understand quantum phenomena and algorithms.&lt;/p&gt;

&lt;p&gt;You can follow along by coding your circuits in IBM Qiskit — an open source framework that enables you to run quantum algorithms on IBM’s quantum processors through IBM Quantum Experience.&lt;/p&gt;

&lt;p&gt;The resources are mentioned in no particular order, except that Coding with Qiskit Season 1 should ideally be covered before Season 2 for a better learning experience!😀&lt;/p&gt;

&lt;p&gt;To start using Qiskit, a beginner-level understanding of Python and an IBM Quantum Experience account are required. You can sign up for your free IBM Quantum Experience account here.&lt;/p&gt;

&lt;p&gt;If you’re new to Python, no worries! There are several resources that’d help you to hit the ground running.&lt;br&gt;
We would be happy to write a post with suggested resources to learn Python as a beginner in another post.&lt;br&gt;
Do let us know in the comments.&lt;/p&gt;

&lt;p&gt;Read ahead to find some of the best free resources to get started with your quantum journey learning&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#1-qiskit-foundations-coding-with-qiskit-season-1"&gt;
  &lt;/a&gt;
  1. Qiskit Foundations — Coding with Qiskit Season 1
&lt;/h2&gt;

&lt;p&gt;In this series, instructor Abraham Asfaw walks the learners through foundational concepts of Qiskit including the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Installing Qiskit &lt;/li&gt;
&lt;li&gt;Hello World! of Quantum Computing&lt;/li&gt;
&lt;li&gt;Basics of Quantum Circuits&lt;/li&gt;
&lt;li&gt;Quantum Teleportation Algorithm&lt;/li&gt;
&lt;li&gt;Bernstein-Vazirani Algorithm &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/a1NZC5rqQD8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#2-qiskit-algorithms-coding-with-qiskit-season-2"&gt;
  &lt;/a&gt;
  2. Qiskit Algorithms — Coding with Qiskit Season 2
&lt;/h2&gt;

&lt;p&gt;This series, run by Jin-Sung Kim, a Quantum Researcher at IBM covers relatively advanced concepts and popular quantum algorithms including the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basics of Quantum Algorithms&lt;/li&gt;
&lt;li&gt;Shor’s Algorithm&lt;/li&gt;
&lt;li&gt;Grover’s Algorithm&lt;/li&gt;
&lt;li&gt;Variational Quantum Eigensolvers and &lt;/li&gt;
&lt;li&gt;Quantum Support Vector Machines&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/R9FjVUIZeY8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#3-ibm-qiskit-summer-school-2020"&gt;
  &lt;/a&gt;
  3. IBM Qiskit Summer School 2020
&lt;/h2&gt;

&lt;p&gt;The first edition of the Qiskit Global Summer School was organized in July 2020. Thanks to IBM Quantum, the lectures from the summer school are available on YouTube for anyone to watch. The lectures in the playlist covers theoretical foundations of Quantum Computation in greater detail while also focusing on programming with Qiskit. Are you ready to dive in?😀&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Rs2TzarBX5I"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#4-qiskit-textbook"&gt;
  &lt;/a&gt;
  4. Qiskit Textbook
&lt;/h2&gt;

&lt;p&gt;The Qiskit textbook is more of a recommended reference to read through and follow along if you’re looking for a semester-long course in Quantum Computing. The interactive Jupyter notebooks can be run on IBM Quantum Experience as you progress through the textbook. The textbook is freely available online and you may read it here.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5-programs-by-the-coding-school"&gt;
  &lt;/a&gt;
  5. Programs by The Coding School
&lt;/h2&gt;

&lt;p&gt;The Coding School, in association with IBM Quantum runs several programs to educate learners — from middle school students to those in workforce, to provide foundational to advanced knowledge of Quantum Computing. They trained 8000+ learners in their Qubit x Qubit initiative, over a period of two semesters from October 2020 to May 2021. This ‘Introduction to Quantum Computing’ course, taught by leading researchers in the field, was an enriching learning experience with weekly lectures, labs and assignments. Here’s an outline of the course:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Math Foundations of Quantum Computing — Linear Algebra&lt;/li&gt;
&lt;li&gt;Working with Quantum gates&lt;/li&gt;
&lt;li&gt;Quantum Mechanics&lt;/li&gt;
&lt;li&gt;Coding with Qiskit&lt;/li&gt;
&lt;li&gt;Quantum Algorithms&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;They have several other programs and summer programs as well, which also offer need-based scholarships to learners. You can check their past and upcoming programs here. &lt;a href="https://www.qubitbyqubit.org/programs"&gt;https://www.qubitbyqubit.org/programs&lt;/a&gt;&lt;/p&gt;




&lt;ol&gt;
&lt;li&gt;Michael Nielsen’s Lecture Series
Michael Nielsen’s, ‘Quantum Computing for the Determined‘ playlist is a good reference for the theoretical aspects of Quantum Computing, starting from what a qubit is and gradually building up to cover more advanced topics. Here’s a rough outline of what the lectures cover:&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;Working with Qubits&lt;/li&gt;
&lt;li&gt;Quantum gates&lt;/li&gt;
&lt;li&gt;Quantum Mechanics&lt;/li&gt;
&lt;li&gt;Superdense Coding&lt;/li&gt;
&lt;li&gt;Quantum Teleportation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/X2q1PuI2RFI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;Hope you all found this post useful. Thank you for reading.😀&lt;br&gt;
Have a great time learning Quantum Computing!✨&lt;/p&gt;




&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@lazycreekimages?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Michael Dziedzic&lt;/a&gt; on &lt;a href="https://unsplash.com/@lazycreekimages?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>programming</category>
      <category>python</category>
      <category>beginners</category>
    </item>
    <item>
      <title>My Dev Journey: Week 5</title>
      <author>Harry York</author>
      <pubDate>Sun, 06 Jun 2021 18:22:06 +0000</pubDate>
      <link>https://dev.to/harryyork97/my-dev-journey-week-5-24fd</link>
      <guid>https://dev.to/harryyork97/my-dev-journey-week-5-24fd</guid>
      <description>&lt;p&gt;This week was another 4 day week, thanks to the bank-holiday Monday we had, whilst I was itching to get going this week, it was really refreshing to split two distinct parts of the bootcamp up, by having a long weekend.&lt;/p&gt;

&lt;p&gt;This week is the start of the back-end block, and just like the JavaScript fundementals block it will last for 3 weeks, and oh boy has it been a fun start to the world of backend!&lt;/p&gt;

&lt;p&gt;If you've enjoyed any of my blog series, then maybe consider following me on &lt;a href="https://twitter.com/grand_oldduke"&gt;Twitter&lt;/a&gt; and &lt;a href="https://github.com/harryyork97"&gt;GitHub&lt;/a&gt; 😁&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-ive-learnt-this-week"&gt;
  &lt;/a&gt;
  What I've learnt this week
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#node-http"&gt;
  &lt;/a&gt;
  Node HTTP
&lt;/h3&gt;

&lt;p&gt;We started our first week in back-end off by creating our own local servers using the node HTTP module, whilst it was fun to start the back-end section, I couldn't help but think there was better way to do this every step of the day.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#expressjs"&gt;
  &lt;/a&gt;
  Express.js
&lt;/h3&gt;

&lt;p&gt;As is common now at Northcoders, we get shown a way to accomplish a goal, usually in a legacy or verbose way, that we can then build upon the fundemental understanding with frameworks or modern tools that can improve your workflow as a developer. This is especially true of the idea of moving from Node's HTTP module, to something like Express.js. We started out by refactoring our code from Day 1, but in a way that uses Express to make the whole process a little less bloated.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mvc-pattern"&gt;
  &lt;/a&gt;
  MVC Pattern
&lt;/h3&gt;

&lt;p&gt;We also spent some time learning about the MVC pattern and implementing the ideas into some working examples. The MVC has been good to learn because a concern of mine was with how needlessly large some of the files were becomming for our app sprints.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#introduction-sql"&gt;
  &lt;/a&gt;
  Introduction SQL
&lt;/h3&gt;

&lt;p&gt;Wow! I really enjoyed starting to work with SQL, its been great to take a small break at the back end of this week, and dip my toes into the luke warm waters of another language. I can for sure see why many people on the course preferred to &lt;em&gt;not&lt;/em&gt; do the SQL stuff, but I actually really enjoyed it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources-ive-found-useful-this-week"&gt;
  &lt;/a&gt;
  Resources I've found useful this week
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#sqlbolt"&gt;
  &lt;/a&gt;
  SQLBolt
&lt;/h3&gt;

&lt;p&gt;For sure, &lt;a href="https://sqlbolt.com/"&gt;SQLBolt&lt;/a&gt; was a lot of fun, and for me a great way of picking up the basics of SQL in small chunks and easily digestible. My only advice is get a solid understanding of the difference of longitude and latitude, because in my head the words kind of mesh together and lose all meaning (just because I was fidelling around with the longitude/latitude challenge for ages).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#insomnia"&gt;
  &lt;/a&gt;
  Insomnia
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://insomnia.rest/"&gt;Insomnia&lt;/a&gt; was great for sending and receiving data to the local servers we were creating and display all the info I need at this stage in a really simple way.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#expressjs-and-node-http-docs"&gt;
  &lt;/a&gt;
  Express.js and Node HTTP docs
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://expressjs.com/"&gt;Express&lt;/a&gt; docs and the &lt;a href="https://nodejs.org/api/http.html"&gt;Node HTTP&lt;/a&gt; docs have been great for answering queries in a quick way as usual with all of the relavant docs to all of the tech we've used so far at Northcoders.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#w3schools"&gt;
  &lt;/a&gt;
  W3Schools
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/sql/sql_intro.asp"&gt;W3Schools&lt;/a&gt; is an absolutely fantastic resource for any JS and SQL queries, as well as many other languages.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>bootcamp</category>
    </item>
    <item>
      <title>🔥Awesome Developer Portfolio Page for your Projects 📱 (responsive)</title>
      <author>Roden</author>
      <pubDate>Sun, 06 Jun 2021 18:13:16 +0000</pubDate>
      <link>https://dev.to/kerthin/awesome-developer-portfolio-page-for-your-projects-responsive-2npp</link>
      <guid>https://dev.to/kerthin/awesome-developer-portfolio-page-for-your-projects-responsive-2npp</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CDCPSdsV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r71aga7o90pawsgd1wpn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CDCPSdsV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r71aga7o90pawsgd1wpn.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Portfolio Page&lt;/p&gt;

&lt;p&gt;Creating your own portfolio is not always an easy task. We can say that the most important thing is the projects themselves and you will definitely be right. But it is also very important how you present your projects before they are evaluated. That's why we need beautiful portfolio pages. &lt;strong&gt;In order to be able not only to show our projects, but also to present them beautifully&lt;/strong&gt;.&lt;/p&gt;

&lt;h1&gt;HTML&lt;/h1&gt;

&lt;p&gt;The entire work is written using the &lt;code&gt;PUG&lt;/code&gt; preprocessor, but if you need &lt;code&gt;regular HTML&lt;/code&gt;, you can use the &lt;code&gt;Codepen compiler&lt;/code&gt; (it is located at the bottom of the article) to interpret &lt;code&gt;PUG&lt;/code&gt; in &lt;code&gt;HTML&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In order to &lt;code&gt;create new cards&lt;/code&gt; for your projects in &lt;code&gt;HTML&lt;/code&gt;, you should use a &lt;code&gt;specially created mixin&lt;/code&gt; and insert the data you need (the name and what technologies were used when creating the project):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Portfolio Card Mixin&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//-- Portfolio Card Wrap&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;portfolioCardWrap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clearfix&lt;/span&gt;
    &lt;span class="nx"&gt;mixin&lt;/span&gt; &lt;span class="nx"&gt;portfolioCardMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;imgProjectClass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;portfolioCardName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;portfolioCardTechnologies&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;portfolioCard&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;portfolioCard__img&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;`portfolioCard__img_&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;imgProjectClass&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;portfolioCard__about&lt;/span&gt;
                &lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;portfolioCard__name&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;portfolioCardName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;portfolioCard__technologies&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;portfolioCardTechnologies&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;portfolioCardMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;gwent&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;card game ui&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;html,scss,react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;portfolioCardMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;prado&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;prado museum&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;html,scss,react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;portfolioCardMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;spiele&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;spiele museum&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pug,scss,js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;portfolioCardMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cuphead&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cuphead&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pug,scss,js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;portfolioCardMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;calculator&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;calculator&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pug,scss,js,ts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;portfolioCardMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;player&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;music player&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pug,scss,react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;portfolioCardMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mobile&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;old mobile&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;html,css,js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;portfolioCardMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;artGallery&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;art gallery&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pug,scss,js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;portfolioCardMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tree&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;geometric&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pug,scss,js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;CSS&lt;/h1&gt;

&lt;p&gt;To create styles, I used the &lt;code&gt;SASS&lt;/code&gt; preprocessor with the &lt;code&gt;SCSS&lt;/code&gt; syntax.&lt;br&gt;
To &lt;code&gt;reset the styles&lt;/code&gt;, I used the &lt;code&gt;reset.css&lt;/code&gt; library with the addition of the &lt;code&gt;box-sizing: border-box;&lt;/code&gt; property. It is inserted into the code.&lt;/p&gt;

&lt;p&gt;In order to &lt;code&gt;insert the images&lt;/code&gt; you need into the &lt;code&gt;presentation&lt;/code&gt; (the page with a yellow background), you need to use a &lt;code&gt;special mixin&lt;/code&gt;, which &lt;code&gt;contains 7 slots&lt;/code&gt; for your images (you can insert &lt;code&gt;only 7 images&lt;/code&gt; on the presentation page):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Project Img Path&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/*____________________________________________________________
## Project Image Path Mixin
____________________________________________________________*/&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;mixin&lt;/span&gt; &lt;span class="nx"&gt;projectImgPathMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$underlineWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$presentationClassModification&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$presentMainImg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$detailImg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$detailImg2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$detailImg3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$detailImg4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$portfolioLgImg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$portfolioMdImg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;presentation_&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;$presentationClassModification&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;presentMain__titleUnderline&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;$underlineWidth&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;presentMain__img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#{$presentMainImg}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;detailItem&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;nth&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;detailItem__img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#{$detailImg1}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;nth&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;detailItem__img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#{$detailImg2}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;nth&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;detailItem__img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#{$detailImg3}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;nth&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;detailItem__img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#{$detailImg4}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;portfolioImg_lg&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#{$portfolioLgImg}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;portfolioImg_md&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#{$portfolioMdImg}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Prado&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;include&lt;/span&gt; &lt;span class="nx"&gt;projectImgPathMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;53px&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;prado&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://i.pinimg.com/originals/da/d2/be/dad2bec273660ef57d1b5b8226cdd9fa.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://i.pinimg.com/originals/ff/5a/75/ff5a75072701ac21e976857f4a8e4cc8.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://i.pinimg.com/originals/f3/9c/1f/f39c1ffd297b392afdce9f1c38ff44b1.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://i.pinimg.com/originals/1a/e0/f7/1ae0f7edfe962e0ab3cc1ccfbad381c0.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://i.pinimg.com/originals/c0/52/04/c052041d1ff7f0392d189038b919ff03.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://i.pinimg.com/originals/b7/3d/e0/b73de097933f05ba0a51dbc129b8ec61.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://i.pinimg.com/originals/c0/49/eb/c049eb8e05385fae7a136042505f53e0.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Spiele Museum&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;include&lt;/span&gt; &lt;span class="nx"&gt;projectImgPathMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;65px&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;spiele&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://i.pinimg.com/originals/57/1f/d4/571fd4a327d7b1bc1df135d8392ed26f.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://i.pinimg.com/originals/c8/7e/8a/c87e8a698ae1b4835464f2304945f84a.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://i.pinimg.com/originals/32/0b/31/320b31ee5d039a9e335b9b5be2a1000e.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://i.pinimg.com/originals/de/19/0c/de190c623f727f13114e3139ad503eda.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://i.pinimg.com/originals/a4/3a/97/a43a9788ff5635ab2559a5281e49ccf9.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://i.pinimg.com/originals/5e/74/82/5e7482f21acbfd060991b44b0946a924.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://i.pinimg.com/originals/c5/de/0c/c5de0cc134bfba07aff16db8ae06b666.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, in this mixin, it is very important to &lt;code&gt;specify the name of the project&lt;/code&gt;, so that the &lt;code&gt;images correspond&lt;/code&gt; to the selected project.&lt;/p&gt;

&lt;h1&gt;JS&lt;/h1&gt;

&lt;p&gt;When creating this project, I used such &lt;code&gt;JS libraries&lt;/code&gt; as: &lt;code&gt;anime.js&lt;/code&gt; and &lt;code&gt;reavelRx.js&lt;/code&gt;. They are needed to trigger &lt;code&gt;transition animation&lt;/code&gt; when clicked.&lt;/p&gt;

&lt;p&gt;In our js file, we used an &lt;code&gt;array of data&lt;/code&gt; so that when you &lt;code&gt;click on a particular project&lt;/code&gt;, the &lt;code&gt;presentation page&lt;/code&gt; (a page with a yellow background) is assigned the necessary &lt;code&gt;data&lt;/code&gt; (classes, links, and text) to display detailed information about the project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Array of projects data&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;wrapClass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;presentation_prado&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Prado.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;demoHref&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://kerthin.github.io/pradoMuseum-templateSait/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;descriptTitle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Learning the best artists&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;descriptParagraph&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lorem ipsum dolor, sit amet consectetur adipisicing elit. Beatae omnis reiciendis dignissimos cum, rem temporibus, consequatur ad ut facilis aspernatur deserunt dolore quidem cumque odit quo repudiandae veritatis enim, maiores soluta, repellendus!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://github.com/Kerthin/pradoMuseum-templateSait&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="nx"&gt;detailTitle_1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Fillaf Andini&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;detailSubtitle_1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;UI/UX Designer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;detailParagraph_1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Delectus, distinctio. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Delectus, distinctio.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="nx"&gt;detailTitle_2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hils Joe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;detailSubtitle_2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Editor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;detailParagraph_2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Delectus, distinctio. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Delectus, distinctio.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="nx"&gt;detailTitle_3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Werfa Egle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;detailSubtitle_3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content Creator&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;detailParagraph_3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Delectus, distinctio. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Delectus, distinctio.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="nx"&gt;detailTitle_4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Andinosas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;detailSubtitle_4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Marketing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;detailParagraph_4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Delectus, distinctio. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Delectus, distinctio.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;wrapClass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;presentation_spiele&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Spiele.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;demoHref&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://kerthin.github.io/computerSpieleMuseum-templateSait/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;descriptTitle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Dive into the past of your&amp;lt;br/&amp;gt;favorite video games.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;descriptParagraph&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lorem ipsum dolor, sit amet consectetur adipisicing elit. Beatae omnis reiciendis dignissimos cum, rem temporibus, consequatur ad ut facilis aspernatur deserunt dolore quidem cumque odit quo repudiandae veritatis enim, maiores soluta, repellendus!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://github.com/Kerthin/computerSpieleMuseum-templateSait&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="nx"&gt;detailTitle_1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Fillas Andini&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;detailSubtitle_1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;UI/UX Designer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;detailParagraph_1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Delectus, distinctio. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Delectus, distinctio.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="nx"&gt;detailTitle_2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hils Joe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;detailSubtitle_2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Editor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;detailParagraph_2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Delectus, distinctio. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Delectus, distinctio.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="nx"&gt;detailTitle_3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Werfa Egle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;detailSubtitle_3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content Creator&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;detailParagraph_3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Delectus, distinctio. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Delectus, distinctio.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="nx"&gt;detailTitle_4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Andinosas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;detailSubtitle_4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Marketing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;detailParagraph_4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Delectus, distinctio. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Delectus, distinctio.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want your data to be displayed on the presentation page, then you just need to enter the data in this array.&lt;/p&gt;

&lt;p&gt;In order to &lt;code&gt;edit the transition animation&lt;/code&gt;, you should refer to this part of the code (&lt;code&gt;line 281&lt;/code&gt;):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Transition animation&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;revealer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reveal&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;bgcolor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#f7e0b5&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rl&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;700&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;onCover&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;contentEl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;revealerEl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;popupMenu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;js-popupMenu_open&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;contentEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;opacity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And in order to &lt;code&gt;edit the closing animation&lt;/code&gt;, you need to refer to this part of the code (&lt;code&gt;line 311&lt;/code&gt;):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Closing transition animation&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;revealer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reveal&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;bgcolor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#f7e0b5&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lr&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;700&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;onCover&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;contentEl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;revealerEl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;popupMenu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;js-popupMenu_open&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;contentEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;opacity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;Responsive&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M9jGw_Pe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ge8v5iyd3v2girvkp3y4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M9jGw_Pe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ge8v5iyd3v2girvkp3y4.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The site is adapted for screen resolutions such as:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;@media 1680px&lt;/code&gt;&lt;br&gt;
&lt;code&gt;@media 1680px&lt;/code&gt;&lt;br&gt;
&lt;code&gt;@media 1440px&lt;/code&gt;&lt;br&gt;
&lt;code&gt;@media 1280px&lt;/code&gt;&lt;br&gt;
&lt;code&gt;@media 1024px&lt;/code&gt;&lt;br&gt;
&lt;code&gt;@media 960px&lt;/code&gt;&lt;br&gt;
&lt;code&gt;@media 848px&lt;/code&gt;&lt;br&gt;
&lt;code&gt;@media 768px&lt;/code&gt;&lt;br&gt;
&lt;code&gt;@media 642px&lt;/code&gt;&lt;br&gt;
&lt;code&gt;@media 576px&lt;/code&gt;&lt;br&gt;
&lt;code&gt;@media 414px&lt;/code&gt;&lt;br&gt;
&lt;code&gt;@media 375px&lt;/code&gt;&lt;br&gt;
&lt;code&gt;@media 320px&lt;/code&gt;&lt;br&gt;
&lt;code&gt;@media iPad&lt;/code&gt; (portrait)&lt;/p&gt;

&lt;h1&gt;UX&lt;/h1&gt;

&lt;p&gt;In order to go to the presentation page of a specific project, you just need to click on the card on the portfolio page.&lt;/p&gt;

&lt;p&gt;After that, you will be redirected to the presentation section (a page with a yellow background), where you will need to &lt;code&gt;click on the presentation&lt;/code&gt; so that it opens and you can &lt;code&gt;scroll&lt;/code&gt; through it.&lt;/p&gt;

&lt;p&gt;In order to close it and return to the main page of the portfolio, you need to &lt;code&gt;click the round button in the upper-left corner&lt;/code&gt;, after which you will be returned back.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Close button&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UgVN1Q19--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4fj6cog0r6td6n9jomd.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UgVN1Q19--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4fj6cog0r6td6n9jomd.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also on the page at different corners are links to &lt;code&gt;Demo pages&lt;/code&gt; and &lt;code&gt;GitHub project pages&lt;/code&gt;, which you can specify in the &lt;code&gt;array in JS&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;CodePen&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Demo:&lt;/strong&gt;&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/Astap/embed/JjWvVWj?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;The End&lt;/h1&gt;

&lt;p&gt;Well, that's it, dear Friends. Thank you for taking the time to do my work, I tried very hard to make you like it. See you later. 😘&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>webdev</category>
      <category>css</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
