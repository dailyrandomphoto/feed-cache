<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The LANd of Computer Networking</title>
      <author>thesystemsprogrammer</author>
      <pubDate>Wed, 26 May 2021 04:40:47 +0000</pubDate>
      <link>https://dev.to/thesystemsprogrammer/the-land-of-computer-networking-57n5</link>
      <guid>https://dev.to/thesystemsprogrammer/the-land-of-computer-networking-57n5</guid>
      <description>&lt;p&gt;To understand how your laptop at home talks to Google’s servers in a galaxy far far away, you first need to understand how your laptop at home (or in a data center) talks to another computer located in the same physical location. To do that, all the computers must be connected in some way so that they can transfer signals to each other. Let’s assume that we’re only interested in wired connections at the moment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-land"&gt;
  &lt;/a&gt;
  The LANd
&lt;/h2&gt;

&lt;p&gt;One way to connect computers to each other is give all computers a direct connection to each other. Let’s say we have 3 computers, computer A would have 2 ports so that it can talk to computers B and C.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h-RxvgFU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/607faaa72189681ba155d94f/60a98827d932b6ec70ab339f_3pHZOmNsbsfbqBpfN2Eby7aRMwzKSx_fmfdujqsyadpCl1JNm0fETsBSDVnTKf7jXezjry1uqM3WiYopiGNMQandM58e3s_ts0XiGKsbhKaI1pdrq1vNOwZbkbYlmmKBNqV2-DEq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h-RxvgFU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/607faaa72189681ba155d94f/60a98827d932b6ec70ab339f_3pHZOmNsbsfbqBpfN2Eby7aRMwzKSx_fmfdujqsyadpCl1JNm0fETsBSDVnTKf7jXezjry1uqM3WiYopiGNMQandM58e3s_ts0XiGKsbhKaI1pdrq1vNOwZbkbYlmmKBNqV2-DEq.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Doesn’t seem so bad, right? Well, let’s now think about a network with 100 computers. Each computer would need 99 ports. In total, that’s almost 10,000 ports for this network! Clearly, this model would only work at a small scale.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--myqZElRb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/607faaa72189681ba155d94f/60a9883c824b7d10ab5539b0_nP0xGGMJ_0SDY3P0i3cEN30lfbUhJcyqUHd4Co4NCJrlCTCegPusAZWc5b1PXZVT9Kvdpywt2tFk7jmzP_14MRnWe1XfB2H73ZppeR_oGxrrvyo_5tKLzzXIRxUEjzykXxANJwnd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--myqZElRb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/607faaa72189681ba155d94f/60a9883c824b7d10ab5539b0_nP0xGGMJ_0SDY3P0i3cEN30lfbUhJcyqUHd4Co4NCJrlCTCegPusAZWc5b1PXZVT9Kvdpywt2tFk7jmzP_14MRnWe1XfB2H73ZppeR_oGxrrvyo_5tKLzzXIRxUEjzykXxANJwnd.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another way to handle this is to have a centralized hub. All data sent by a computer is received by the hub. The hub then forwards all data to all the other computers connected to the hub. The intended computer receives the data and all other computers drop the data. Now how many connections do we need? For 100 computers on this network, we’d only need 100 connections! Each computer just needs to be wired to the hub and it will be able to communicate to any other computer on the network. This is known as the “star” network topology, when all computers in a network are connected to one central hub.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E12aYSUn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/607faaa72189681ba155d94f/60a9884b68784a4e461d155b_-GAuSr3lsy8htsJB2C7vkHQgSalXY5qySHKOVi1-qPwgn0gTx96DFDxE3qX1ZYtxaPycftZlDiFC30Z892esj_DrDFx8sCThjkcgjMX1f5dbZOE55gbHlCdc-UHFCPa3IY5PASVp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E12aYSUn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/607faaa72189681ba155d94f/60a9884b68784a4e461d155b_-GAuSr3lsy8htsJB2C7vkHQgSalXY5qySHKOVi1-qPwgn0gTx96DFDxE3qX1ZYtxaPycftZlDiFC30Z892esj_DrDFx8sCThjkcgjMX1f5dbZOE55gbHlCdc-UHFCPa3IY5PASVp.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One downside of this approach, however, is each computer would be receiving data that is not intended for it. The hub doesn’t know anything about where its incoming data should be routed too, it only knows to forward all data it receives to all other computers on the network. This not only may be a security issue, but it also wastes bandwidth. We could be transferring data from computer C to D while computer A is trying to talk to computer B! The problem gets even worse as more computers are connected to the hub. For every additional computer connected to the hub, every sent message on the network needs to be sent to one additional computer.&lt;/p&gt;

&lt;p&gt;How can we solve this problem? Let’s break down our 100 computer hub network into two 50 computer hub networks and connect the 50 computer hub networks to each other using a bridge. Let’s call the first 50 computer hub network Network 1 and the second 50 computer hub network Network 2. The goal of this is to have a mechanism for allowing all computers on the larger 100 computer network to talk to each other, but messages not intended for Network 2 from Network 1, don’t need to be broadcasted to Network 2 computers and vice-versa. The hubs on Network 1 and Network 2 are now going to be connected to each other using this bridge.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6FN6BGkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/607faaa72189681ba155d94f/60a9885c469300bd77844f59_QAy53jgXb-q-ENNk31fWwWt8qvI4PjPGoJK9BaE6oIhGNlA8kaAKrg3HDu50fuSRt3EW5mPgoi9j-DbUOP5LhQDUFgFc4C7xurs0DYphsHWnkrocQx4qS-VA8375ugDrIQi3Pz86.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6FN6BGkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/607faaa72189681ba155d94f/60a9885c469300bd77844f59_QAy53jgXb-q-ENNk31fWwWt8qvI4PjPGoJK9BaE6oIhGNlA8kaAKrg3HDu50fuSRt3EW5mPgoi9j-DbUOP5LhQDUFgFc4C7xurs0DYphsHWnkrocQx4qS-VA8375ugDrIQi3Pz86.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The bridge is slightly smarter than a hub. It doesn’t just blindly forward packets to computers that aren’t the destination. Instead, it has an idea of which computers are in Network 1 and which computers are in Network 2. To do this, the bridge needs to know which computers are on Network 1 and which computers are on Network 2; it needs a forwarding table. The main way this is done is through some added support by the computers on the network and a learning mechanism. To make this possible, each computer on the network will be assigned an address. In practice, the addresses of these computers are known as MAC addresses. When a computer wants to send a message, it will include the address of the sender and the address of the receiver in the message. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TyPy7oMy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/607faaa72189681ba155d94f/60a9885ca468fe6d2b00e30c_jhLreuLBpO9wFXRM_W5cf9nWSTm1ygJBAYKilJ6uboo7TgKZHQnrCh5SRqciYKefA8nNrBtP7zYRb2eEkocL1CP_uc0ToWYBIVURVuQZZwVlLP5b71-Xt58M3YhkAkJ42j3DKqSO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TyPy7oMy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/607faaa72189681ba155d94f/60a9885ca468fe6d2b00e30c_jhLreuLBpO9wFXRM_W5cf9nWSTm1ygJBAYKilJ6uboo7TgKZHQnrCh5SRqciYKefA8nNrBtP7zYRb2eEkocL1CP_uc0ToWYBIVURVuQZZwVlLP5b71-Xt58M3YhkAkJ42j3DKqSO.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Initially, say computer A on Network 1 wants to send data to computer B on Network 2. Computer A will send the data to the hub which will broadcast the message to all computers on Network 1. Additionally, the hub will forward the message to the bridge. The bridge will then note that computer A sent it information on port 1 which is associated with Network 1. The bridge needs to know whether it should drop or forward the message on to Network 2. Because the bridge doesn’t yet have any information of which network computer B is on, it forwards the information to the hub on Network 2 even though computer B may not be in Network 2. In turn, the hub on Network 2 broadcasts the message to all computers on the network and computer B is one of those computers that will receive the message. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xREGh1r9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/607faaa72189681ba155d94f/60a9885c2c2e016e2ba16eeb_5snMAFZxMuAN0c9UqJI3hOAD3MznQi8oQNa_YowJlI8k-r4hggO8QkW2xJJ8kSr1myhQGUMEG_qLw_ZYfrISwUGjup19Ls61wFadw3d_Yy_bw-YIIIPHVY3q8yyqDD7oEv8az7KJ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xREGh1r9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/607faaa72189681ba155d94f/60a9885c2c2e016e2ba16eeb_5snMAFZxMuAN0c9UqJI3hOAD3MznQi8oQNa_YowJlI8k-r4hggO8QkW2xJJ8kSr1myhQGUMEG_qLw_ZYfrISwUGjup19Ls61wFadw3d_Yy_bw-YIIIPHVY3q8yyqDD7oEv8az7KJ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, say computer C, a computer on Network 1 wants to send a message to computer A (which is also on Network 1). The hub in Network 1 receives the message and sends it to all computers on Network 1. Additionally, it sends the message to the bridge. The bridge recognizes that the message is intended for computer A. Previously, it had noted down that computer A had sent data from Network 1, so the bridge knows it can safely drop (instead of forward) the message to Network 2. &lt;/p&gt;

&lt;p&gt;Why is this more efficient? Now, after a computer in Network 1 has sent its first message, any message that it is intended to receive after that from another computer in Network 1 does not need to be broadcasted to Network 2, saving bandwidth.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#switching-it-up"&gt;
  &lt;/a&gt;
  Switching it Up
&lt;/h2&gt;

&lt;p&gt;Now, I hate to switch things up on you, but everything we just discussed, that’s old tech! But, it’s important to understand that so you can appreciate what is used in modern networking. Introducing the packet switch! &lt;/p&gt;

&lt;p&gt;The packet switch has mostly made the physical usage of bridges and hubs obsolete although the concepts that they were built upon are still used today. One thing you may have wondered is, why don’t we use the intelligence of a bridge knowing to forward messages or drop them in a hub. A packet switch has that functionality! It acts as a hub but is able to make smarter routing decisions which further reduces bandwidth consumption. When computer Z on Network 3, which is connected by a packet switch, wants to send a message to computer Y on Network 3, the packet switch forwards the message directly to computer Y instead of sending it to Computer X as well. It can do this because it has routing information and learns it in a similar way that bridges learn routing information.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rzCc7TtL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/607faaa72189681ba155d94f/60a98b2dcb6bcd6526d3ea5f_PiJp-P8lNL3r7_t77-lGeTTHtMsH-L5JC1es1Nx9tGko4OjwIRR0YNLH9ou2o5hCiPZiSDmEBlwMqhBigR9rO45RuQ1YO3p-2mwhK-1pBzQhutU3sIsuQmkzhbFd7eyeuPT0ii_0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rzCc7TtL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/607faaa72189681ba155d94f/60a98b2dcb6bcd6526d3ea5f_PiJp-P8lNL3r7_t77-lGeTTHtMsH-L5JC1es1Nx9tGko4OjwIRR0YNLH9ou2o5hCiPZiSDmEBlwMqhBigR9rO45RuQ1YO3p-2mwhK-1pBzQhutU3sIsuQmkzhbFd7eyeuPT0ii_0.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Packet switches take advantage of dedicated hardware that make the routing and forwarding calculation extremely fast. Because of this, they are generally more expensive than hubs and bridges. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Now that we know how computers in the same physical location can talk to each other, let’s explore how computers in different physical locations talk to each other. This is what the next post will be about.&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>systems</category>
      <category>firstyearincode</category>
      <category>programming</category>
    </item>
    <item>
      <title>Deploy a Simple Website Using Github Pages</title>
      <author>Pranav Viswanathan</author>
      <pubDate>Wed, 26 May 2021 04:21:05 +0000</pubDate>
      <link>https://dev.to/pranavviswanathan/deploy-a-simple-website-using-github-pages-1jl</link>
      <guid>https://dev.to/pranavviswanathan/deploy-a-simple-website-using-github-pages-1jl</guid>
      <description>&lt;p&gt;&lt;strong&gt;So what is github pages?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Github pages is a feature in github that allows you to deploy static webpages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How do I do it?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Its actually really simple, lemme walk you through it:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Step 1:&lt;/em&gt;&lt;br&gt;
Make a github repository.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Step 2:&lt;/em&gt;&lt;br&gt;
Upload a simple .html page with the name as index.html. It is important to note that the name of the web page &lt;strong&gt;MUST&lt;/strong&gt; be index.html&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Step 3:&lt;/em&gt;&lt;br&gt;
Go to &lt;br&gt;
Repository setting -&amp;gt; Pages.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Step 4:&lt;/em&gt;&lt;br&gt;
Set the branch to main and save. You will see a " is ready to be published."&lt;/p&gt;

&lt;p&gt;In a few minutes, your website will be ready to view!&lt;br&gt;
And that's it, 4 simple steps and then you have you first webste deployed using gitub pages.&lt;/p&gt;

</description>
      <category>github</category>
      <category>opensource</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Enabling Quake Mode on Windows Terminal</title>
      <author>Michael Crump</author>
      <pubDate>Wed, 26 May 2021 03:59:10 +0000</pubDate>
      <link>https://dev.to/mbcrump/enabling-quake-mode-on-windows-terminal-161i</link>
      <guid>https://dev.to/mbcrump/enabling-quake-mode-on-windows-terminal-161i</guid>
      <description>&lt;p&gt;Hello everyone, &lt;/p&gt;

&lt;p&gt;I just got my hands on the new Windows Terminal preview and wanted to share how to enable "Quake Mode" which allows you to open a new terminal instance from anywhere in Windows by pressing the Win + ` key. &lt;/p&gt;

&lt;p&gt;You must be using the latest version of Windows Terminal Preview.  &lt;/p&gt;

&lt;p&gt;Just place this code in your "actions" section: &lt;/p&gt;

&lt;p&gt;{ "command": { "action": "globalSummon", "name": "_quake", "dropdownDuration": 200, "toggleVisibility": true, "monitor": "any", "desktop": "toCurrent" }, "keys": "win+`" },&lt;/p&gt;

&lt;p&gt;Read the &lt;a href="https://docs.microsoft.com/en-us/windows/terminal/customize-settings/actions#global-commands"&gt;docs&lt;/a&gt; for more information on the Global Commands that you can use.&lt;/p&gt;

&lt;p&gt;Or you can watch the video below and hopefully you'll find it helpful! &lt;/p&gt;

&lt;p&gt;Video (6 mins)&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/vVy8XnDnslU"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;

&lt;p&gt;Conclusion&lt;/p&gt;

&lt;p&gt;Feel free to checkout my &lt;a href="https://twitch.tv/mbcrump"&gt;Twitch streams&lt;/a&gt; as we learn about security and app development or you can watch the condensed version of all of my streams by subscribing to my &lt;a href="https://youtube.com/mbcrump"&gt;YouTube&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Stay connected with me on social platforms for daily software development news.&lt;/p&gt;

&lt;p&gt;-&lt;a href="https://twitter.com/intent/follow?screen_name=mbcrump"&gt;Twitter&lt;/a&gt; | &lt;a href="https://twitch.tv/mbcrump"&gt;Twitch&lt;/a&gt; | &lt;a href="https://instagram.com/mbcrump"&gt;Instagram&lt;/a&gt; | &lt;a href="https://youtube.com/mbcrump"&gt;YouTube&lt;/a&gt; | &lt;a href="https://github.com/mbcrump"&gt;GitHub&lt;/a&gt; | &lt;a href="https://www.michaelcrump.net"&gt;Website&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>productivity</category>
      <category>terminal</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Cheatsheet for the Regex Cheatsheet, Part VIII: Pattern Modifiers</title>
      <author>Analogy | Absence | Example</author>
      <pubDate>Wed, 26 May 2021 03:39:42 +0000</pubDate>
      <link>https://dev.to/mathlete/cheatsheet-for-the-regex-cheatsheet-part-viii-pattern-modifiers-24la</link>
      <guid>https://dev.to/mathlete/cheatsheet-for-the-regex-cheatsheet-part-viii-pattern-modifiers-24la</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;I was recently doing a code challenge for a job interview that required me to strip out all nonalphabetic characters. "Ah! I should use Regular Expressions for this!" I thought in triumph, impressed that I even knew what regular expressions &lt;em&gt;were&lt;/em&gt;. That fleeting moment of glory faded once I decided to brush up on regular expressions and landed on the encouragingly-named &lt;a href="https://cheatography.com/davechild/cheat-sheets/regular-expressions/"&gt;Regular Expressions Cheatsheet&lt;/a&gt;. I had no idea how to use it!&lt;/p&gt;

&lt;p&gt;So, for people like me, here is a &lt;em&gt;Cheatsheet for the Regex Cheatsheet, Part VIII: Pattern Modifiers&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tbBAqSXY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rdweg8wkwafvg1sdzkmq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tbBAqSXY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rdweg8wkwafvg1sdzkmq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-pattern-modifiers"&gt;
  &lt;/a&gt;
  What are Pattern Modifiers?
&lt;/h2&gt;

&lt;p&gt;Pattern modifiers aka flags modify the behavior of the regex search you are performing. Again, this will be better understood through example, so read on! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#anatomy-of-a-regular-expression"&gt;
  &lt;/a&gt;
  Anatomy of a regular expression
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Forward slashes go on either end like so: &lt;code&gt;/&lt;/code&gt;something&lt;code&gt;/&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;g&lt;/code&gt; for "global" at the end to find every instance, like so: &lt;code&gt;/&lt;/code&gt;something&lt;code&gt;/g&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;m&lt;/code&gt; to "multi line" to the beginning/end of each line, not just the beginning/end of each string, like &lt;code&gt;/&lt;/code&gt;something&lt;code&gt;/g&lt;/code&gt; or &lt;code&gt;/&lt;/code&gt;something&lt;code&gt;/gm&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#pattern-modifiers"&gt;
  &lt;/a&gt;
  Pattern Modifiers
&lt;/h2&gt;

&lt;p&gt;To illustrate pattern modifiers, let's revisit a regex from &lt;a href="https://dev.to/mathlete/cheatsheet-for-the-regex-cheatsheet-part-vii-groups-ranges-32ne"&gt;Groups &amp;amp; Ranges&lt;/a&gt; where we are searching for vowels:&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#-raw-xyz-endraw-range-of-characters-raw-x-endraw-or-raw-y-endraw-or-raw-z-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;[xyz]&lt;/code&gt; Range of characters (&lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; or &lt;code&gt;z&lt;/code&gt;)
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;[aeiou]&lt;/code&gt; is used in &lt;code&gt;/[aeiou]/&lt;/code&gt; (with no modifiers) to find the the &lt;em&gt;only&lt;/em&gt; first vowel:
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;A lion roared&lt;/em&gt;&lt;/p&gt;




&lt;h5&gt;
  &lt;a href="#-raw-g-endraw-global-match-continue-searching-after-the-initial-match"&gt;
  &lt;/a&gt;
  &lt;code&gt;g&lt;/code&gt; Global match: Continue searching after the initial match
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;g&lt;/code&gt; can be added like this &lt;code&gt;/[aeiou]/g&lt;/code&gt; to find &lt;em&gt;all&lt;/em&gt; the lowercase vowels:
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;A lion roared&lt;/em&gt;&lt;/p&gt;




&lt;h5&gt;
  &lt;a href="#-raw-i-endraw-case-insensitive-match"&gt;
  &lt;/a&gt;
  &lt;code&gt;i&lt;/code&gt; Case Insensitive match
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;i&lt;/code&gt; can be added like this &lt;code&gt;/[aeiou]/gi&lt;/code&gt; to find all the lowercase &lt;em&gt;and uppercase&lt;/em&gt; vowels:
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;A lion roared&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#dunce-corner"&gt;
  &lt;/a&gt;
  Dunce Corner
&lt;/h2&gt;

&lt;h5&gt;
  &lt;a href="#-raw-m-endraw-multiline"&gt;
  &lt;/a&gt;
  &lt;code&gt;m&lt;/code&gt; Multiline
&lt;/h5&gt;

&lt;p&gt;I don't get this. &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/multiline"&gt;MDN Web Docs&lt;/a&gt; says:&lt;/p&gt;

&lt;p&gt;"...if "m" is used, &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; change from matching at only the start or end of the entire string to the start or end of &lt;strong&gt;any&lt;/strong&gt; line within the string."&lt;/p&gt;




&lt;h5&gt;
  &lt;a href="#-raw-s-endraw-single-line"&gt;
  &lt;/a&gt;
  &lt;code&gt;s&lt;/code&gt; Single line
&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Maybe&lt;/em&gt; this is explained in (this MDN Doc)[&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/dotAll"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/dotAll&lt;/a&gt;], but I still don't get it.&lt;/p&gt;




&lt;p&gt;I don't think the following are supported in Javascript. Reach out in the comments in you know better.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#-raw-x-endraw-allow-comments-and-whitespace-in-pattern"&gt;
  &lt;/a&gt;
  &lt;code&gt;x&lt;/code&gt; Allow comments and whitespace in pattern
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#-raw-u-endraw-ungreedy-pattern"&gt;
  &lt;/a&gt;
  &lt;code&gt;U&lt;/code&gt; Ungreedy pattern
&lt;/h5&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>What is Null Safety Operator in PHP 8 and why is it next big thing in PHP</title>
      <author>Lakhveer Bawa</author>
      <pubDate>Wed, 26 May 2021 02:40:44 +0000</pubDate>
      <link>https://dev.to/bawa_geek/what-is-null-safety-operator-in-php-8-and-why-is-it-next-big-thing-in-php-377b</link>
      <guid>https://dev.to/bawa_geek/what-is-null-safety-operator-in-php-8-and-why-is-it-next-big-thing-in-php-377b</guid>
      <description>&lt;p&gt;PHP is known to have a very bad reputation among developers because of its loose type system and little weak technical design.&lt;br&gt;
However with every new version, PHP is changing the perception of developers.&lt;br&gt;
Recent improvements in PHP 7 and then PHP 8 brought many features that you would only see in languages like Java, C++, Dart etc.&lt;/p&gt;

&lt;p&gt;One of those features/improvement brought by PHP 8 is easier Null Safety.&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#null-safety-has-lot-of-significance-in-programming-as-program-crashes-caused-by-null-values-are-highly-popular"&gt;
  &lt;/a&gt;
  Null Safety has lot of significance in programming as, Program Crashes caused by Null Values are highly popular.
&lt;/h5&gt;
&lt;h2&gt;
  &lt;a href="#what-is-null-safety-operator"&gt;
  &lt;/a&gt;
  What is Null Safety Operator:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/Xepskm6YoEEifd1rb7/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/Xepskm6YoEEifd1rb7/giphy.gif" alt="wondering"&gt;&lt;/a&gt;&lt;br&gt;
Null-safe operator is a new syntax in PHP 8.0, that provides optional chaining feature to PHP.&lt;/p&gt;

&lt;p&gt;The null-safe operator allows reading the value of property and method return value chaining, where the null-safe operator short-circuits the retrieval if the value is null, without causing any errors.&lt;/p&gt;

&lt;p&gt;The syntax is similar to the property/method access operator (-&amp;gt;), and following the nullable type pattern, the null-safe operator is ?-&amp;gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$foo&lt;/span&gt;&lt;span class="o"&gt;?-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="o"&gt;?-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Null safe operator silently returns null if the expression to the left side evaluates to null.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getAddress&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;?Address&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Address&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getCountry&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nv"&gt;$country&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$customer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getAddress&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getCountry&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the snippet above, the Customer::getAddress() method return value is nullable; It can return a null value, or an object of Address class.&lt;/p&gt;

&lt;p&gt;The $customer-&amp;gt;getAddress()-&amp;gt;getCountry() chain is not "null safe", because the return value of getAddress can be null, and PHP throws an error when it tries to call getCountry() method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nc"&gt;Fatal&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Uncaught&lt;/span&gt; &lt;span class="nc"&gt;Error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Call&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;member&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getCountry&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kt"&gt;on&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To safely access the address, it was necessary to check the null return values before further accessing the return value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$customer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getAddress&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$country&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$address&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nv"&gt;$address&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getCountry&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$customer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getAddress&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$country&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$address&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getCountry&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$country&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The null-safe operator solves this by short-circuiting the property/method access, and returning null immediately if the left side of the operator is null, without executing the rest of the expression.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://php.watch/versions/8.0"&gt;PHP 8 new Features&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/QEIC6GZIEGStO/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/QEIC6GZIEGStO/giphy.gif" alt="bye"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>php</category>
    </item>
    <item>
      <title>Stripe Goes No-Code — Stripe Payment Links Explained</title>
      <author>swyx</author>
      <pubDate>Wed, 26 May 2021 02:17:37 +0000</pubDate>
      <link>https://dev.to/swyx/stripe-goes-no-code-stripe-payment-links-explained-4im</link>
      <guid>https://dev.to/swyx/stripe-goes-no-code-stripe-payment-links-explained-4im</guid>
      <description>&lt;p&gt;It's official: With the new &lt;a href="https://stripe.com/en-sg/payments/payment-links"&gt;Payment Links&lt;/a&gt; feature, Stripe has entered the No Code market.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/bLNFJNoL9e8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-its-a-big-deal"&gt;
  &lt;/a&gt;
  Why It's a Big Deal
&lt;/h2&gt;

&lt;p&gt;You can think of the process of getting money from your customers to yourself in 3 stages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Running a Server for backend logic and secrets&lt;/li&gt;
&lt;li&gt;Building a Frontend UI for customers to enter in their payment details and complete their purchase&lt;/li&gt;
&lt;li&gt;Creating a &lt;a href="https://stripe.com/docs/payments/payment-intents#:~:text=Each%20PaymentIntent%20typically%20correlates%20with,collect%2C%20and%20the%20desired%20currency."&gt;&lt;code&gt;PaymentIntent&lt;/code&gt;&lt;/a&gt; to track a single customer session from end to end. These must be created uniquely for each transaction.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of these stages are immensely technical. &lt;br&gt;
Stripe's recent product releases have progressively eliminated each one of these stages, opening Stripe up to the 99.6% of humanity that doesn't code!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#towards-stripe-checkout"&gt;
  &lt;/a&gt;
  Towards Stripe Checkout
&lt;/h2&gt;

&lt;p&gt;Stripe's roots are famously developer centric. The default approach was to only offer a serverside SDK, and let you &lt;a href="https://stripe.com/docs/payments/integration-builder"&gt;wire everything else up yourself&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This gives you maximum control, but it can mean a lot of code to write and maintain. You not only have to code up an attractive, reassuring UI for people to enter their credit card details (though &lt;a href="https://stripe.com/en-sg/payments/elements"&gt;Stripe Elements&lt;/a&gt; makes that easier), you also have to continually run a server just to take even a small one-off payment. If your server goes down , or you screw up some JavaScript, there goes your money!&lt;/p&gt;

&lt;p&gt;So along comes &lt;a href="https://stripe.com/en-sg/payments/elements"&gt;Stripe Checkout&lt;/a&gt;, where Stripe hosts your UI:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EMzAeaWh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://b.stripecdn.com/docs/assets/overview.6a4ea4b380bea93a5be8a820f3eb7c35.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EMzAeaWh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://b.stripecdn.com/docs/assets/overview.6a4ea4b380bea93a5be8a820f3eb7c35.gif" alt="https://b.stripecdn.com/docs/assets/overview.6a4ea4b380bea93a5be8a820f3eb7c35.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wonderful! You not only don't have to code the UI or host it, Stripe is continually improving the checkout page on your behalf. It is even hosting it &lt;strong&gt;on their domain&lt;/strong&gt;, and most people will trust a Stripe domain over your own when entering in their credit card details.&lt;/p&gt;

&lt;p&gt;But.&lt;/p&gt;

&lt;p&gt;Look upon &lt;a href="https://stripe.com/docs/payments/accept-a-payment?platform=web&amp;amp;ui=checkout#create-a-checkout-session"&gt;the Stripe Checkout docs&lt;/a&gt; and realize that the &lt;code&gt;PaymentIntent&lt;/code&gt; section is not handled at all - you STILL have to write some code and run at least a serverless function to get this thing working!&lt;/p&gt;

&lt;p&gt;I know this all too well because I spent a day learning and debugging this when I was &lt;a href="https://dev.to/swyx/lessons-and-regrets-from-my-25000-launch-3aaa"&gt;launching my self published book&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stripe-payment-links"&gt;
  &lt;/a&gt;
  Stripe Payment Links
&lt;/h2&gt;

&lt;p&gt;Since everyone was writing little serverless functions to coordinate all the &lt;code&gt;PaymentIntent&lt;/code&gt; creation and offer a nice URL for all this, the natural next step is for Stripe to do it for you instead!&lt;/p&gt;

&lt;p&gt;You can think of &lt;a href="https://stripe.com/en-sg/payments/payment-links"&gt;Stripe Payment Links&lt;/a&gt; as a thin layer atop of Stripe Checkout:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---CU1_WGu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ald99mra5o9qjjt1xui5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---CU1_WGu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ald99mra5o9qjjt1xui5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the interface between your user and your business is just a simple URL - the web's firstborn API. &lt;/p&gt;

&lt;p&gt;Getting started with it could not be easier.&lt;/p&gt;

&lt;p&gt;Assuming you have some &lt;a href="https://stripe.com/docs/billing/prices-guide"&gt;products and prices already set up&lt;/a&gt; in Stripe, head to your Stripe Dashboard and look for "Payment links" under the Products section. &lt;a href="https://dashboard.stripe.com/payment-links"&gt;Here is a direct link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From here you can create a New link for each product, in seconds.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gy43-o5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j91nd0eohyyrpika39dw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gy43-o5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j91nd0eohyyrpika39dw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The final Payment link will just look like this: &lt;a href="https://buy.stripe.com/4gwcQB0I9dVpeIw5km"&gt;https://buy.stripe.com/4gwcQB0I9dVpeIw5km&lt;/a&gt; (yes, that's a real Payment link URL!). You can now use it inside of low and no code setups like HTML, Wordpress, or WebFlow.&lt;/p&gt;

&lt;p&gt;But perhaps the biggest 🤯 of all is that &lt;strong&gt;you don't even need a website to take the money over the Internet anymore&lt;/strong&gt;. You can now drop that link over a Discord or Slack app, or even place it as your "link in bio". &lt;/p&gt;

&lt;p&gt;That's the beauty of the URL - it's accepted everywhere. As all the best payment solutions should be.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comparisons"&gt;
  &lt;/a&gt;
  Comparisons
&lt;/h2&gt;

&lt;p&gt;Now that Stripe is handling all three stages of the ecommerce process for the first time, it is inevitable to start comparing it to other vendors that have done the same since forever. Before Stripe, you could easily have spun up a Shopify or Gumroad site and taken payments that way. Is Stripe now going for their lunch?&lt;/p&gt;

&lt;p&gt;I don't have any inside info on this, but my intuition is: No. People hire Gumroad and Shopify to do very different jobs. &lt;/p&gt;

&lt;p&gt;For example, Gumroad: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;acts as a &lt;a href="https://www.digitalocean.com/blog/starter-apps-for-any-indie-business/#:~:text=Gumroad%20had%20the%20features%20Adam,him%20of%20those%20burdens%20too."&gt;Merchant of Record&lt;/a&gt; (to drastically simplify tax collection and compliance)&lt;/li&gt;
&lt;li&gt;provides social proof (in the form of customer reviews)&lt;/li&gt;
&lt;li&gt;platform traffic and revenue via &lt;a href="https://gumroad.com/discover"&gt;its Discover marketplace&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;fulfilment (aka if you are selling digital content, it hosts your files for your customers to download)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In exchange for all that, it takes &lt;a href="https://sacra.com/research/gumroad-android-creator-economy/"&gt;6.5% of your sales&lt;/a&gt;. Stripe Payment Links are available for no extra charge on Stripe's standard &lt;a href="https://stripe.com/en-sg/pricing"&gt;integrated pricing&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>tech</category>
      <category>stripe</category>
      <category>creators</category>
    </item>
    <item>
      <title>Top 10 sites / extensions you should use if you are a Frontend Developer 😎</title>
      <author>Luis Cutiopala</author>
      <pubDate>Wed, 26 May 2021 02:10:04 +0000</pubDate>
      <link>https://dev.to/cutioluis/top-10-sites-extensions-you-should-use-if-you-are-a-frontend-developer-1110</link>
      <guid>https://dev.to/cutioluis/top-10-sites-extensions-you-should-use-if-you-are-a-frontend-developer-1110</guid>
      <description>&lt;h1&gt;
  &lt;a href="#cssgradient-%F0%9F%96%8C"&gt;
  &lt;/a&gt;
  &lt;a href="https://cssgradient.io/gradient-backgrounds/"&gt;CssGradient&lt;/a&gt; 🖌
&lt;/h1&gt;

&lt;p&gt;Here you will find gradients of all types so that your website is at another level&lt;br&gt;
&lt;a href="https://dev.toIMAGEN"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yyLkCGlV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG%3Ftoken%3DAOR56HJDVC54H2RGL3F4BDTAVWRFS" alt="IMAGEN" title="IMAGEN"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#color-picker"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/color-picker/clkoagfbjkilljcajbbielofkeokbhma/related?hl=es"&gt;Color Picker&lt;/a&gt;🎈
&lt;/h1&gt;

&lt;p&gt;Look for that color that you like from your favorite website&lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG?token=AOR56HJBTRRO2MVF3RMNX4LAVWSLA"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C6jbKw-G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG%3Ftoken%3DAOR56HJBTRRO2MVF3RMNX4LAVWSLA" alt="Imagen" title="Imagen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#glyphy"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.glyphy.io/?ref=blog.moeminmamdouh.com"&gt; Glyphy&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Glyphy es una sencilla herramienta en línea que te permite copiar fácilmente caracteres y símbolos especiales (también conocidos como glifos) al portapapeles de tu dispositivo para que luego puedas pegarlos en cualquier documento o aplicación que desees.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG?token=AOR56HLQXTPZ5YWWOPRZFTLAVWTBW"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--plkq2Koi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG%3Ftoken%3DAOR56HLQXTPZ5YWWOPRZFTLAVWTBW" alt="Imagen" title="Imagen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#haikeiapp"&gt;
  &lt;/a&gt;
  &lt;a href="https://app.haikei.app/"&gt;Haikei.app &lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This is my favorite, you can generate patterns like: globs, waves, Blurry Gradients etc.&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/cutioluis/images/main/3.PNG?token=AOR56HKMZHSUYME5LCK746TAVWVV2"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZRyYDbrP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/3.PNG%3Ftoken%3DAOR56HKMZHSUYME5LCK746TAVWVV2" alt="asd" title="asd"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rayso"&gt;
  &lt;/a&gt;
  &lt;a href="https://ray.so/"&gt;Ray.so&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Transform your code to an impressive and very colorful card&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/cutioluis/images/main/2.PNG?token=AOR56HIG2KJX4TJSBDS3JILAVWVOQ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8lt351Xz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/2.PNG%3Ftoken%3DAOR56HIG2KJX4TJSBDS3JILAVWVOQ" alt="g" title="g"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#icomoon"&gt;
  &lt;/a&gt;
  &lt;a href="https://icomoon.io/"&gt;IcoMoon&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Find all the icons for your website in svg, png and even imported css formats&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG?token=AOR56HL5RCR22FFVAT3JG2TAVWUWW"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yrAwSbNa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG%3Ftoken%3DAOR56HL5RCR22FFVAT3JG2TAVWUWW" alt="img" title="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#neumorphismio"&gt;
  &lt;/a&gt;
  &lt;a href="https://neumorphism.io/#e0e0e0"&gt;Neumorphism.io &lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Create awesome shadows ready to implement in all your Css&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/cutioluis/images/main/4.PNG?token=AOR56HPENEK7OKZJRTTVD6TAVWWZM"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VjNEBQa3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/4.PNG%3Ftoken%3DAOR56HPENEK7OKZJRTTVD6TAVWWZM" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#andi"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.ssa.gov/accessibility/andi/help/install.html"&gt;ANDI&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;ANDI is like having an expert at your side, helping you ensure your website is meeting accessibility standards. Include ANDI in screenshots during your manual accessibility review. Use ANDI during development to help you build accessible websites.&lt;/p&gt;

&lt;p&gt;Whether you're an accessibility expert or you're new to Section 508 compliance, ADA compliance, or WCAG standards, you should definitely check out ANDI.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#editormd"&gt;
  &lt;/a&gt;
  &lt;a href="https://pandao.github.io/editor.md/en.html"&gt;Editor.md&lt;/a&gt;  🍳
&lt;/h1&gt;

&lt;p&gt;Editor.md is a markdown Editor if you don't know much about md this tool will help you, it will be used to make descriptions of your GitHub file or make notes&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#react-developer-tools"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?utm_source=chrome-ntp-icon"&gt;React Developer Tools&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;React Developer Tools is a Chrome DevTools extension for the open-source React JavaScript library. It allows you to inspect the React component hierarchies in the Chrome Developer Tools.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>@okikio/animate - the animejs-esque animation library built on the Web Animation API</title>
      <author>Okiki</author>
      <pubDate>Wed, 26 May 2021 01:17:57 +0000</pubDate>
      <link>https://dev.to/okikio/okikio-animate-animejs-but-built-on-the-web-animation-api-nin</link>
      <guid>https://dev.to/okikio/okikio-animate-animejs-but-built-on-the-web-animation-api-nin</guid>
      <description>&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-is-the-web-animation-api"&gt;What is the Web Animation API?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-does-okikioanimate-fit-in"&gt;How does @okikio/animate fit in?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#examples--demos"&gt;Examples &amp;amp; Demos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;TLDR&lt;/strong&gt; &lt;code&gt;@okikio/animate&lt;/code&gt; is basically &lt;code&gt;animejs&lt;/code&gt; but built on the Web Animation API.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/@okikio/animate"&gt;&lt;code&gt;@okikio/animate&lt;/code&gt;&lt;/a&gt; is an animation library for the modern web. It was inspired by animate plus, and animejs; &lt;a href="https://www.npmjs.com/package/@okikio/animate"&gt;@okikio/animate&lt;/a&gt; is a Javascript animation library focused on performance and ease of use. It  utilizes the Web Animation API to deliver butter smooth animations at a small size, it weighs &lt;strong&gt;~5.36 KB&lt;/strong&gt; (minified and gzipped).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-web-animation-api"&gt;
  &lt;/a&gt;
  What is the Web Animation API?
&lt;/h2&gt;

&lt;p&gt;The Web Animations API lets us construct animations and control their playback with JavaScript. The Web Animations API opens the browser’s animation engine to developers and manipulation by JavaScript. This API was designed to underlie implementations of both CSS Animations and CSS Transitions, and leaves the door open to future animation effects. It is one of the most performant ways to animate on the Web, letting the browser make its own internal optimizations without hacks, coercion, or Window.requestAnimationFrame().&lt;/p&gt;

&lt;p&gt;With the Web Animations API, we can move interactive animations from stylesheets to JavaScript, separating presentation from behavior. We no longer need to rely on DOM-heavy techniques such as writing CSS properties and scoping classes onto elements to control playback direction. And unlike pure, declarative CSS, JavaScript also lets us dynamically set values from properties to durations. For building custom animation libraries and creating interactive animations, the Web Animations API might be the perfect tool for the job. Let's see what it can do! &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API/Using_the_Web_Animations_API"&gt;MDN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The API hooks into right into the browsers CSS Animations &amp;amp; Transitions in order to produce highly efficient animations, it is by far the most efficient way to create animataions on the Web.&lt;/p&gt;

&lt;p&gt;For the rest of this article I will be refering to the Web Animation API as WAAPI.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-okikioanimate-fit-in"&gt;
  &lt;/a&gt;
  How does &lt;a class="mentioned-user" href="https://dev.to/okikio"&gt;@okikio&lt;/a&gt;
/animate fit in?
&lt;/h2&gt;

&lt;p&gt;The WAAPI is very open in design it is functional on it's own but it's not the most developer friendly or intuitive API, so, I developed &lt;code&gt;@okikio/animate&lt;/code&gt; to act as an efficient wrapper around the WAAPI, to introduce the features you know and love from other more mature animation libraries with some added features to the high performance nature of the WAAPI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/okikio/native/tree/master/packages/animate#readme"&gt;Read more...&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;@okikio/animate&lt;/code&gt; is heavily inspired by &lt;a href="https://animejs.com/"&gt;animejs&lt;/a&gt; and &lt;a href="https://github.com/bendc/animateplus"&gt;animateplus&lt;/a&gt;, as such it uses very similar API's and formats.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@okikio/animate&lt;/code&gt; create animations by creating instances of &lt;code&gt;Animate&lt;/code&gt;, a class that acts as a wrapper around the Web Animation API. To create new instances of the &lt;code&gt;Animate&lt;/code&gt; class, you can either import the &lt;code&gt;Animate&lt;/code&gt; class and do this, &lt;code&gt;new Animate({ ... })&lt;/code&gt; or import the &lt;code&gt;animate&lt;/code&gt; (lowercase) method and do this, &lt;code&gt;animate({ ... })&lt;/code&gt;. The &lt;code&gt;animate&lt;/code&gt; method creates new instances of the &lt;code&gt;Animate&lt;/code&gt; class and passes the options it recieves as arguments to the &lt;code&gt;Animate&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Animate&lt;/code&gt; class recieves a set of targets to animate, it then creates a list of Web Animation API &lt;code&gt;Animation&lt;/code&gt; instances, along side a main animation, which is small &lt;code&gt;Animation&lt;/code&gt; instance that is set to animate the opacity of a non visible element, the &lt;code&gt;Animate&lt;/code&gt; class then plays each &lt;code&gt;Animation&lt;/code&gt; instances keyframes including the main animation.&lt;/p&gt;

&lt;p&gt;The main animation is there to ensure accuracy in different browser vendor implementation of the Web Animation API. The main animation is stored in &lt;code&gt;Animate.prototype.mainAnimation: Animation&lt;/code&gt;, the other &lt;code&gt;Animation&lt;/code&gt; instances are stored in a &lt;code&gt;Manager&lt;/code&gt; (from &lt;a href="https://www.npmjs.com/package/@okikio/manager"&gt;@okikio/manager&lt;/a&gt;) &lt;code&gt;Animate.prototype.animations: Manager&amp;lt;HTMLElement, Animation&amp;gt;&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@okikio/animate&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Do note, on the web you need to do this, if you installed it via the script tag:&lt;/span&gt;
&lt;span class="c1"&gt;// const { animate } = window.animate;&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="c1"&gt;// Units are added automatically for transform CSS Properties&lt;/span&gt;
        &lt;span class="na"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// In miliseconds&lt;/span&gt;
        &lt;span class="na"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The Animation is done...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/okikio/embed/mdPwNbJ?height=600&amp;amp;default-tab=js,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You can basically port all your code from &lt;code&gt;animejs&lt;/code&gt; to &lt;code&gt;@okikio/animate&lt;/code&gt; with little to no issues.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;@okikio/animate&lt;/code&gt; only supports automatic units on transform functions e.g. translateX, translate, scale, skew, etc..., it also supports the &lt;code&gt;targets&lt;/code&gt; keyword for settings targets and functions as animation options.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.el&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;

    &lt;span class="c1"&gt;// You need to put units on CSS properties that are not transforms&lt;/span&gt;
    &lt;span class="na"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;500px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;total&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// ...&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#examples-amp-demos"&gt;
  &lt;/a&gt;
  Examples &amp;amp; Demos
&lt;/h2&gt;

&lt;p&gt;You can check out some more complex examples at &lt;a href="https://okikio.github.io/native/demo/animate"&gt;okikio.github.io/native/demo/animate&lt;/a&gt;, and &lt;a href="https://codepen.io/collection/rxOEBO"&gt;codepen.io/collection/rxOEBO&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;@okikio/animate&lt;/code&gt; is a wrapper around the Web Animation API that allows uou to use all the features you love from &lt;code&gt;animejs&lt;/code&gt; and other animation libraries, in a small and concise package.&lt;/p&gt;

&lt;p&gt;Read more about it on &lt;a href="https://npmjs.com/package/@okikio/animate"&gt;npm&lt;/a&gt; or &lt;a href="https://github.com/okikio/native/tree/master/packages/animate#readme"&gt;Github&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>webanimation</category>
      <category>typescript</category>
      <category>webperf</category>
    </item>
    <item>
      <title>5 Steps to become Frontend Developer</title>
      <author>Chadi</author>
      <pubDate>Wed, 26 May 2021 00:13:26 +0000</pubDate>
      <link>https://dev.to/chadi/5-steps-to-become-frontend-developer-5151</link>
      <guid>https://dev.to/chadi/5-steps-to-become-frontend-developer-5151</guid>
      <description>&lt;p&gt;1- you should learn Html and Css basics.&lt;br&gt;
2- You have an idea about Responsive Web Designs&lt;br&gt;
3- You learn Css framework &lt;br&gt;
4- Take a look at UI/UX&lt;br&gt;
5- Learn javascript&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How can you send automated messages via WhatsApp with Node.js</title>
      <author>Carlos Sánchez</author>
      <pubDate>Tue, 25 May 2021 23:36:03 +0000</pubDate>
      <link>https://dev.to/carlosvldz/how-can-you-send-automated-messages-via-whatsapp-with-node-js-5387</link>
      <guid>https://dev.to/carlosvldz/how-can-you-send-automated-messages-via-whatsapp-with-node-js-5387</guid>
      <description>&lt;h1&gt;
  &lt;a href="#how-you-can-use-nodejs-to-send-messages-via-whatsapp-with-twilios-api"&gt;
  &lt;/a&gt;
  How you can use Node.js to send messages via WhatsApp with Twilio's API.
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#first-here-the-things-that-you-need"&gt;
  &lt;/a&gt;
  First, here the things that you need:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Node and npm installed&lt;/li&gt;
&lt;li&gt;Create an account with  &lt;a href="https://www.twilio.com/try-twilio"&gt;Twilio&lt;/a&gt;  (it's free)&lt;/li&gt;
&lt;li&gt;And finally, Twilio and dotenv library&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you sign up for the Twilio account, activate the Sandbox for Whatsapp. This enable you a shared phone number and allows you to test with WhatsApp service. &lt;/p&gt;

&lt;p&gt;Then you have to opt in sending a message to the phone number provided from the sandbox. The message should say "join mass-there", if everything is ok you will receive a confirmation response. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sMULpDVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7iqeiows90zf0mrx8n6d.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sMULpDVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7iqeiows90zf0mrx8n6d.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#now-lets-start-with-nodejs"&gt;
  &lt;/a&gt;
  Now let's start with Node.js
&lt;/h2&gt;

&lt;p&gt;Once you are in the directory where is created the project, in the terminal run the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init -y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install twilio@3.30.0 dotenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first one to iniciate a &lt;strong&gt;package.json&lt;/strong&gt; and the second one for install the dependencies.&lt;/p&gt;

&lt;p&gt;The next step is create the file &lt;strong&gt;index.js&lt;/strong&gt; with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const { config } = require('./config');

const accountSid = config.sid;
const authToken = config.token;
const client = require('twilio') (accountSid, authToken);

client.messages.create({
    from: 'whatsapp:+14155238886',
    body: 'Hello world this is CarlosVldz!!!',
    to: 'whatsapp:+5215555555555'
}).then(message =&amp;gt; console.log(message.sid));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(Don't forget replace the phone numbers in this example with your sandbox number and a personal number.)&lt;/p&gt;

&lt;p&gt;Finally I used &lt;strong&gt;dotenv&lt;/strong&gt; to configure the environment variables &lt;strong&gt;TWILIO_ACCOUNT_SID&lt;/strong&gt; and &lt;strong&gt;TWILIO_AUTH_TOKEN&lt;/strong&gt; with their values from the account credentials. You can find both in your Twilio console. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.env.example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;TWILIO_ACCOUNT_SID = "Your account sid"

TWILIO_AUTH_TOKEN = "Your auth token"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your terminal run this last command to send the WhatsApp message:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your phone check WhatsApp and you should have a new chat like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eQapZqlu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1gk54d2el2ysovnwx6h7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eQapZqlu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1gk54d2el2ysovnwx6h7.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope you liked! (:&lt;/p&gt;

</description>
      <category>node</category>
      <category>twilio</category>
      <category>whatsapp</category>
      <category>automated</category>
    </item>
    <item>
      <title>Entendendo as funções Map, reduce e filter</title>
      <author>Keren Arielle</author>
      <pubDate>Tue, 25 May 2021 23:30:09 +0000</pubDate>
      <link>https://dev.to/kerenarielle/entendendo-as-funcoes-map-reduce-e-filter-hj7</link>
      <guid>https://dev.to/kerenarielle/entendendo-as-funcoes-map-reduce-e-filter-hj7</guid>
      <description>&lt;p&gt;A vida de um programador é baseada em alterar um array quase todos os dias. Quem nunca precisou extrair um dado de alguma API que retorna um array gigante?. &lt;/p&gt;

&lt;p&gt;No post de hoje vou contar um pouco de cada função de manipulação de array.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#map"&gt;
  &lt;/a&gt;
  MAP
&lt;/h2&gt;

&lt;p&gt;É possível percorrer todos os item do array, executar alguma transformação nesses itens e retornar um novo array sem modificar o atual.&lt;/p&gt;

&lt;p&gt;VAMOS AO EXEMPLO:&lt;/p&gt;

&lt;p&gt;Você tem um array de número:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fyVzRWbw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mp4jcsnklh7je6svil6f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fyVzRWbw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mp4jcsnklh7je6svil6f.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Eu quero que nesse array todos os número sejam multiplicado por 2, então você faria um &lt;strong&gt;MAP&lt;/strong&gt; desse array, pegando o item e multiplicando por dois. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_AIlpHkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7hx2huv7whlqbvio8b6t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_AIlpHkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7hx2huv7whlqbvio8b6t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Porém o map sempre retorna um array &lt;em&gt;novo&lt;/em&gt;, ele não modifica o atual, por conta disso atribui esse novo retorno na variável &lt;strong&gt;resultArray&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#filter"&gt;
  &lt;/a&gt;
  Filter
&lt;/h2&gt;

&lt;p&gt;Como o próprio nome já diz filtro! Ele é usado para quando precisamos fazer um filtro dentro do array. &lt;/p&gt;

&lt;p&gt;Também retorna um novo array, porém dessa vez só com elementos selecionados. &lt;/p&gt;

&lt;p&gt;VAMOS AO EXEMPLO:&lt;/p&gt;

&lt;p&gt;Dessa vez teremos um array com número de 1 até 10.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dtRDKUiF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebg0rh5g5uz199yujecu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtRDKUiF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebg0rh5g5uz199yujecu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pensando em usar o filtre, eu quero que ele filtre por números que sejam pares. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;O resultado seria:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v3FysLrZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0sidsuloezc1555hfroi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v3FysLrZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0sidsuloezc1555hfroi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reduce"&gt;
  &lt;/a&gt;
  Reduce
&lt;/h2&gt;

&lt;p&gt;O Reduce muito das vezes parece ser o mais complicado de entender, mas a ideia de usar ele é para retornar um único valor. &lt;/p&gt;

&lt;p&gt;VAMOS AO EXEMPLO:&lt;/p&gt;

&lt;p&gt;Abaixo vou ter um array com diversos número e vou utilizar o reduce para fazer a soma de todos eles e me retornar somente um dados. &lt;/p&gt;

&lt;p&gt;O retorno desse array será 41. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vkv28tia--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qerrucc68ldc6gigfcp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vkv28tia--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qerrucc68ldc6gigfcp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Building a Simple Secure API REST with Node.js</title>
      <author>Carlos Sánchez</author>
      <pubDate>Tue, 25 May 2021 23:18:18 +0000</pubDate>
      <link>https://dev.to/carlosvldz/building-a-simple-secure-api-rest-with-node-js-3576</link>
      <guid>https://dev.to/carlosvldz/building-a-simple-secure-api-rest-with-node-js-3576</guid>
      <description>&lt;p&gt;This time we learn to create a secure API REST with CRUD operations like Create, Read, Update and Delete.&lt;/p&gt;

&lt;p&gt;This development include a public and private API, for security we use JWT for authentication and Bcrypt for hashing our passwords. The database engine is run by MongoDB.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#first-lets-go-over-the-basics"&gt;
  &lt;/a&gt;
  First let's go over the basics.
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#what-is-rest-api-nodejs-jwt-bcrypt-mongodb-and-express"&gt;
  &lt;/a&gt;
  What is REST API, Node.Js, JWT, Bcrypt, MongoDB and Express?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;REST API:&lt;/strong&gt; it's an interface between systems that use HTTP protocol for obtain data and perform operations. In this case we will use the most important operations: POST, GET, PUT and DELETE.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Node.Js:&lt;/strong&gt; it's a runtime environment based in JavaScript for the server side, is asynchronous and event oriented architecture. Based on Google's V8 engine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JWT:&lt;/strong&gt; it's an open standard ( &lt;a href="https://tools.ietf.org/html/rfc7519"&gt;RFC-7519&lt;/a&gt; ) based in JSON to create a token that serves to send data between applications and services, guaranteeing that is authentic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bcrypt:&lt;/strong&gt; is a password hashing function, based on Blowfish encryption and incorporates a salt fragment to generate the hash associated with each password, preventing two identical passwords generating the same hash.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MongoDB:&lt;/strong&gt; it's a document-oriented NoSQL database, storing BSON data structures.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Express.Js:&lt;/strong&gt; is a framework designed for Node.Js, it helps us to create web applications more efficiently.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-we-going-to-do"&gt;
  &lt;/a&gt;
  What are we going to do?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;User registry through a form, the required data: Name, Email and Password.&lt;/li&gt;
&lt;li&gt;The user must authenticate with email and password.&lt;/li&gt;
&lt;li&gt;To consume the protected routes, the user must send the token in the header.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lets-start"&gt;
  &lt;/a&gt;
  Let's start!!
&lt;/h2&gt;

&lt;p&gt;First we gonna create the directory where we saved the project and then we run the command &lt;strong&gt;npm init&lt;/strong&gt; for start the project&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zCi5BZh1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nrlb5ork73mrlk0sx70v.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zCi5BZh1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nrlb5ork73mrlk0sx70v.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once run this command it creates a new file with the name &lt;strong&gt;package.json&lt;/strong&gt;. This file contains the project configuration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "name": "simplesecureapirest",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" &amp;amp;&amp;amp; exit 1"
  },
  "author": "",
  "license": "MIT"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install the following dependencies with the command: &lt;strong&gt;npm install&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install express mongoose bcryptjs jsonwebtoken morgan
npm install nodemon -D
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After install the dependencies the file &lt;strong&gt;package.json&lt;/strong&gt; will contain the list of dependencies and devDependencies (as we specified for nodemon).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"dependencies": {
    "bcryptjs": "^2.4.3",
    "express": "^4.17.1",
    "jsonwebtoken": "^8.5.1",
    "mongoose": "^5.11.8",
    "morgan": "^1.10.0"
  },
  "devDependencies": {
    "nodemon": "^2.0.6"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#mvc-pattern-model-view-controller"&gt;
  &lt;/a&gt;
  MVC Pattern (Model View Controller)
&lt;/h2&gt;

&lt;p&gt;It's a style of software architecture that separates components into objects, one for the application data, another for the user view and control logic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-server"&gt;
  &lt;/a&gt;
  Creating the server
&lt;/h2&gt;

&lt;p&gt;Inside the directory that we created at the beginning, create a new file &lt;strong&gt;server.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express');
const morgan = require('morgan');
const pkg = require('./package.json');


const app = express();


// Settings
app.set('pkg', pkg);


// Middleware
app.use(morgan('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));


// Routes


// Welcome Route
app.get('/', (req, res) =&amp;gt; {
    res.json({
        author: app.get('pkg').author,
        name: app.get('pkg').name,
        description: app.get('pkg').description,
        version:app.get('pkg').version
    })
})


app.listen(3000, () =&amp;gt; {
    console.log('Server running on port: 3000')
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And to validate that everything is correct, start the server with command:&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;npm run dev&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i7FamkhO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v63t3eefoguk3mgkyj95.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i7FamkhO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v63t3eefoguk3mgkyj95.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then we access the following address from any browser &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; it should answer the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// 20201224010027
// http://localhost:3000/


{
  "author": "CarlosVldz",
  "name": "simplesecureapirest",
  "description": "A simple API REST",
  "version": "1.0.0"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-models-and-entities-with-nodejs"&gt;
  &lt;/a&gt;
  Creating models and entities with Node.Js
&lt;/h2&gt;

&lt;p&gt;Models are representations of the database and will represent a single record/document. In this case and a practical example we will use a collection to save the information of our users and another collection for books information.&lt;/p&gt;

&lt;p&gt;Create the User model with its respective fields (when we create a new User we're creating an instance of that model).&lt;/p&gt;

&lt;p&gt;In the project directory we create the &lt;strong&gt;models&lt;/strong&gt; folder and the &lt;strong&gt;User.js&lt;/strong&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');


// Define Schema
const userSchema = new mongoose.Schema({
    name: {
        type: String,
        required: true,
        trim: true
    },
    email: {
        type: String,
        required: true,
        trim: true
    },
    password: {
        type: String,
        required: true,
        trim: true
    }
});


// Hash password before save in DB
userSchema.statics.encryptPassword = async (password) =&amp;gt; {
    const salt = await bcrypt.genSalt(10)
    return await bcrypt.hash(password, salt)
};


// Compare password 
userSchema.statics.comparePassword = async (password, receivedPassword) =&amp;gt; {
    return await bcrypt.compare(password, receivedPassword)
};


module.exports = mongoose.model('User', userSchema);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-controllers"&gt;
  &lt;/a&gt;
  Creating controllers
&lt;/h2&gt;

&lt;p&gt;In the directory of our project create the folder &lt;strong&gt;controllers&lt;/strong&gt; and inside the controller for the model created in the previous step &lt;strong&gt;auth.controller.js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this controller we will define two methods to create or register users &lt;strong&gt;"signUp"&lt;/strong&gt; and to authenticate or start session &lt;strong&gt;"logIn"&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const User = require('../models/User');
const jwt = require('jsonwebtoken');


exports.signUp = async (req, res) =&amp;gt; {
    const { name, email, password } = req.body;


    const newUser = new User({
        name, email, password: await User.encryptPassword(password)
    })


    const savedUser = await newUser.save();
    console.log(savedUser);


    const newToken = jwt.sign({ id: savedUser._id }, 'secretKey', {
        expiresIn: 86400 // one day
    })


    res.status(200).json({ newToken })
}


exports.logIn = async (req, res) =&amp;gt; {
    const userExist = await User.findOne({ email: req.body.email });


    if (!userExist) return res.status(400).json({
        message: 'User not exists'
    })


    const matchPassword = await User.comparePassword(req.body.password, userExist.password)


    if (!matchPassword) return res.status(401).json({
        token: null,
        message: 'Invalid password'
    })
    console.log(userExist)


    const token = jwt.sign({ id: userExist._id }, 'secretKey', {
        expiresIn: 86400
    })


    return res.json({
        _id: userExist._id,
        name: userExist._id,
        message: 'Auth Succesful',
        token: token
    })

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-routes"&gt;
  &lt;/a&gt;
  Creating routes
&lt;/h2&gt;

&lt;p&gt;We will proceed with the creation of the routes for the methods of the previous step, within our directory create the folder &lt;strong&gt;routes&lt;/strong&gt; and the file &lt;strong&gt;auth.routes.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express');


const router = express.Router();


const authCtrl = require('../controllers/auth.controller');


router.post('/signup', authCtrl.signUp);


router.post('/login', authCtrl.logIn);



module.exports = router;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-the-crud-for-books-collection"&gt;
  &lt;/a&gt;
  Creating the CRUD for books collection
&lt;/h2&gt;

&lt;p&gt;With this we can &lt;strong&gt;create&lt;/strong&gt;, &lt;strong&gt;read&lt;/strong&gt;, &lt;strong&gt;update&lt;/strong&gt; and &lt;strong&gt;delete&lt;/strong&gt; data, inside the &lt;strong&gt;controllers&lt;/strong&gt; folder create the file &lt;strong&gt;book.controller.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const Book = require('../models/Book');


exports.findAllBooks = async (req, res) =&amp;gt; {
    try {
        const books = await Book.find();
        res.json(books)
    } catch (error) {
        res.status(500).json({
            message: error.message || "Something goes wrong retieving the tasks"
        })
    }
};


exports.createBook = async (req, res) =&amp;gt; {
    try {
        const newBook = new Book({
            name: req.body.name,
            author: req.body.author,
            status: req.body.status ? req.body.status : false
        });
        const bookSaved = await newBook.save();
        res.json(bookSaved)
    } catch (error) {
        res.status(500).json({
            message: error.message || "Something goes wrong creating a book"
        })
    }
};


exports.findOneBook = async (req, res) =&amp;gt; {
    const { id } = req.params;
    try {
        const book = await Book.findById(id)
        if(!book) return res.status(404).json({
            message: `Book with id ${id} does not exists!`
        });
        res.json(book)
    } catch (error) {
        res.status(500).json({
            message: error.message || `Error retrieving book with id: ${id}`
        })
    }
};


exports.deleteBook = async (req, res) =&amp;gt; {
    const { id } = req.params;
    try {
        const data = await Book.findByIdAndDelete(id)
        res.json({
            message: `${data.name} - Book were deleted successfully!`
        })
    } catch (error) {
        res.status(500).json({
            message: `Cannot delete book with id ${id}`
        })
    }
}


exports.updateBook = async (req, res) =&amp;gt; {
    const {id} = req.params;
    try {
        await Book.findByIdAndUpdate(id, req.body)
    res.json({
        message: "Book was updated successfully"
    })
    } catch (error) {
        res.status(500).json({
            message: `Cannot update book with id: ${id}`
        })
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now create the model for books &lt;strong&gt;Book.js&lt;/strong&gt; inside the folder &lt;strong&gt;models&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const mongoose = require('mongoose');


// Define schema
const bookSchema = new mongoose.Schema({
    name: {
        type: String,
        required: true,
        trim: true
    },
    author: {
        type: String,
        required: true,
        trim: true
    },
    status: {
        type: Boolean,
        default: false
    }
});

module.exports = mongoose.model('Book', bookSchema);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the route handler for the records of the books &lt;strong&gt;book.routes.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express');


const router = express.Router();


const bookCtrl = require('../controllers/book.controller');


router.get('/', bookCtrl.findAllBooks);


router.get('/:id', bookCtrl.findOneBook);


router.post('/', bookCtrl.createBook);


router.put('/:id', bookCtrl.updateBook);


router.delete('/:id', bookCtrl.deleteBook);


module.exports = router;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Modify the &lt;strong&gt;server.js&lt;/strong&gt; file to add the new routes that we create in the last steps.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express');
const morgan = require('morgan');
const mongoose = require('./config/database');
const pkg = require('../package.json');


const authRoutes = require('./routes/auth.routes');
const bookRoutes = require('./routes/book.routes');


const app = express();


// DB settings
mongoose.connection.on('error', console.error.bind(console, 'DB Connection Errror'));


// Settings
app.set('pkg', pkg);


// Middleware
app.use(morgan('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));


// Routes
app.use('/api/auth', authRoutes);
app.use('/api/books', bookRoutes);


// Welcome Route
app.get('/', (req, res) =&amp;gt; {
    res.json({
        author: app.get('pkg').author,
        name: app.get('pkg').name,
        description: app.get('pkg').description,
        version:app.get('pkg').version
    })
})


app.listen(3000, () =&amp;gt; { console.log('Server running on port: 3000')

});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the configuration file for our database connection and one middleware to validate our JWT, which will authorize us to create, modify and delete any book in our records. &lt;br&gt;
The routes to list one or all the books it's not necessary provide a token to consult.&lt;/p&gt;

&lt;p&gt;Inside the root directory create the &lt;strong&gt;config&lt;/strong&gt; folder and &lt;strong&gt;database.js&lt;/strong&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const mongoose = require('mongoose');


// Config DB Connection
const mongoDB = 'mongodb://localhost/secureAPI';

mongoose.connect(mongoDB, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
    useFindAndModify: false,
    useCreateIndex: true
});
mongoose.Promise = global.Promise;


module.exports = mongoose;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then create the &lt;strong&gt;middleware&lt;/strong&gt; folder and inside the &lt;strong&gt;authToken.js&lt;/strong&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const jwt = require('jsonwebtoken');
const User = require('../models/User');


exports.verifyToken = async (req, res, next) =&amp;gt; {
    try {
        const token = req.headers["x-access-token"];
    if (!token) return res.status(403).json({
        message: "No token provided"
    })
        const decoded = jwt.verify(token, 'secretKey')
        req.userId = decoded.id;


        const user = await User.findById(req.userId, { password: 0 })
        if (!user) return res.status(404).json({
            message: "No user found"
        })
        next();
    } catch (error) {
        return res.status(401).json({
            message: "Unauthorized"
        })
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally we modify our &lt;strong&gt;book.routes.js&lt;/strong&gt; file to specify the protected routes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express');


const router = express.Router();


const bookCtrl = require('../controllers/book.controller');
const authToken = require('../middleware/authToken');


router.get('/', bookCtrl.findAllBooks);


router.get('/:id', bookCtrl.findOneBook);


router.post('/', [authToken.verifyToken], bookCtrl.createBook);


router.put('/:id', [authToken.verifyToken], bookCtrl.updateBook);


router.delete('/:id', [authToken.verifyToken], bookCtrl.deleteBook);



module.exports = router;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Testing our API&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In my case I use Postman, but you can use Insomnia or any other tool that allows you to test REST services.&lt;/p&gt;

&lt;p&gt;Let's see some operations:&lt;/p&gt;

&lt;p&gt;To list all the books&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--urTV06TO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4uxqagx9b5r2njsooa4s.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--urTV06TO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4uxqagx9b5r2njsooa4s.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In case to provide an invalid token&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LfUQsTdz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5lr7ephj7wndt5vtfz0t.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LfUQsTdz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5lr7ephj7wndt5vtfz0t.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In case to not provide any token&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3ZKuR27L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yrserexocskepy8vq9do.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3ZKuR27L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yrserexocskepy8vq9do.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the following link you can find the &lt;strong&gt;API&lt;/strong&gt; documentation, which contains all the routes of our CRUD for books and login and registry of new users.&lt;br&gt;
 &lt;a href="https://documenter.getpostman.com/view/12403851/TVsxBRaR"&gt;https://documenter.getpostman.com/view/12403851/TVsxBRaR&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;You can find the full code on my  &lt;a href="https://github.com/carlosvldz/simpleSecureAPIREST"&gt;GitHub&lt;/a&gt; .&lt;/p&gt;

</description>
      <category>node</category>
      <category>express</category>
      <category>mongodb</category>
      <category>restapi</category>
    </item>
  </channel>
</rss>
