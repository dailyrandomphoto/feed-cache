<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>AWS Key Management Service Best Practices | AWS White Paper Summary
</title>
      <author>Salah Elhossiny</author>
      <pubDate>Mon, 15 Nov 2021 11:52:58 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/aws-key-management-service-best-practices-aws-white-paper-summary-3ci3</link>
      <guid>https://dev.to/awsmenacommunity/aws-key-management-service-best-practices-aws-white-paper-summary-3ci3</guid>
      <description>&lt;p&gt;AWS Key Management Service (AWS KMS) is a managed service that allows you to concentrate on the cryptographic needs of your applications while Amazon Web Services (AWS) manages availability, physical security, logical access control, and maintenance of the underlying infrastructure. &lt;/p&gt;

&lt;p&gt;Further, AWS KMS allows you to audit usage of your keys by providing logs of all API calls made on them to help you meet compliance and regulatory requirements.&lt;/p&gt;

&lt;p&gt;Customers want to know how to effectively implement AWS KMS in their environment. &lt;/p&gt;

&lt;p&gt;This whitepaper discusses how to use AWS KMS for each capability described in the AWS Cloud Adoption Framework Security Perspective whitepaper, including the differences between the different types of customer master keys, using AWS KMS key policies to ensure least privilege, auditing the use of the keys, and listing some use cases that work to protect sensitive information within AWS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#identity-and-access-management"&gt;
  &lt;/a&gt;
  Identity and Access Management
&lt;/h3&gt;

&lt;p&gt;The Identity and Access Management capability provides guidance on determining the controls for access management within AWS KMS to secure your infrastructure according to established best practices and internal policies.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#aws-kms-and-iam-policies"&gt;
  &lt;/a&gt;
  AWS KMS and IAM Policies
&lt;/h4&gt;

&lt;p&gt;You can use AWS Identity and Access Management (IAM) policies in combination with key policies to control access to your customer master keys (CMKs) in AWS KMS. &lt;/p&gt;

&lt;p&gt;This section discusses using IAM in the context of AWS KMS.  It doesn’t provide detailed information about the IAM service. &lt;/p&gt;

&lt;p&gt;Policies attached to IAM identities (that is, users, groups, and roles) are called identity-based policies (or IAM policies). &lt;/p&gt;

&lt;p&gt;Policies attached to resources outside of IAM are called resource-based policies. &lt;/p&gt;

&lt;p&gt;In AWS KMS, you must attach resource-based policies to your customer master keys (CMKs). &lt;/p&gt;

&lt;p&gt;These are called key policies. All KMS CMKs have a key policy, and you must use it to control access to a CMK. &lt;/p&gt;

&lt;p&gt;IAM policies by themselves are not sufficient to allow access to a CMK, although you can use them in combination with a CMK key policy. &lt;/p&gt;

&lt;p&gt;To do so, ensure that the CMK key policy includes the policy statement that enables IAM policies.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#key-policies"&gt;
  &lt;/a&gt;
  Key Policies
&lt;/h4&gt;

&lt;p&gt;Key policies are the primary way to control access to CMKs in AWS KMS. Each CMK has a key policy attached to it that defines permissions on the use and management of the key. &lt;/p&gt;

&lt;p&gt;The default policy enables any principals you define, as well as enables the root user in the account to add IAM policies that reference the key. &lt;/p&gt;

&lt;p&gt;We recommend that you edit the default CMK policy to align with your organization’s best practices for least privilege. &lt;/p&gt;

&lt;p&gt;To access an encrypted resource, the principal needs to have permissions to use the resource, as well as to use the encryption key that protects the resource. &lt;/p&gt;

&lt;p&gt;If the principal does not have the necessary permissions for either of those actions, the request to use the encrypted resource will be denied.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#least-privilege-separation-of-duties"&gt;
  &lt;/a&gt;
  Least Privilege / Separation of Duties
&lt;/h4&gt;

&lt;p&gt;Key policies specify a resource, action, effect, principal, and conditions to grant access to CMKs. &lt;/p&gt;

&lt;p&gt;Key policies allow you to push more granular permissions to CMKs to enforce least privilege. &lt;/p&gt;

&lt;p&gt;For example, an application might make a KMS API call to encrypt data but there is no use case for that same application to decrypt data. &lt;/p&gt;

&lt;p&gt;In that use case, a key policy could grant access to the kms:Encrypt action but not kms:Decrypt and reduce the possibility for exposure. &lt;/p&gt;

&lt;p&gt;Additionally, AWS allows you to separate the usage permissions from administration permissions associated with the key. &lt;/p&gt;

&lt;p&gt;This means that an individual may have the ability to manipulate the key policy, but might not have the necessary permissions to use the key for cryptographic functions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cross-account-sharing-of-keys"&gt;
  &lt;/a&gt;
  Cross Account Sharing of Keys
&lt;/h3&gt;

&lt;p&gt;Delegation of permissions to a CMK within AWS KMS can occur when you include the root principal of a trusted account within the CMK key policy. &lt;/p&gt;

&lt;p&gt;The trusted account then has the ability to further delegate these permissions to IAM users and roles within their own account using IAM policies. &lt;/p&gt;

&lt;p&gt;While this approach may simplify the management of the key policy, it also relies on the trusted accounts to ensure that the delegated permissions are managed. &lt;/p&gt;

&lt;p&gt;The other approach would be to explicitly manage permissions to all authorized users using only the KMS key policy, which could make the key policy complex and less manageable. &lt;/p&gt;

&lt;p&gt;Regardless of the approach you take, the specific trust should be broken out on a per key basis to ensure that you adhere to the least privilege model.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cmk-grants"&gt;
  &lt;/a&gt;
  CMK Grants
&lt;/h3&gt;

&lt;p&gt;Key policy changes follow the same permissions model used for policy editing elsewhere in AWS. &lt;/p&gt;

&lt;p&gt;That is, users either have permission to change the key policy or they do not. &lt;/p&gt;

&lt;p&gt;Users with the PutKeyPolicy permission for a CMK can completely replace the key policy for a CMK with a different key policy of their choice. &lt;/p&gt;

&lt;p&gt;You can use key policies to allow other principals to access a CMK, but key policies work best for relatively static assignments of permissions. &lt;/p&gt;

&lt;p&gt;To enable more granular permissions management, you can use grants. &lt;/p&gt;

&lt;p&gt;Grants are useful when you want to define scoped-down, temporary permissions to use your CMK on your behalf in the absence of a direct API call from you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#encryption-context"&gt;
  &lt;/a&gt;
  Encryption Context
&lt;/h3&gt;

&lt;p&gt;In addition to limiting permission to the AWS KMS APIs, AWS KMS also gives you the ability to add an additional layer of authentication for your KMS API calls utilizing encryption context. &lt;/p&gt;

&lt;p&gt;The encryption context is a key-value pair of additional data that you want associated with AWS KMS-protected information. &lt;/p&gt;

&lt;p&gt;This is then incorporated into the additional authenticated data (AAD) of the authenticated encryption in AWS KMS-encrypted ciphertexts. &lt;/p&gt;

&lt;p&gt;If you submit the encryption context value in the encryption operation, you are required to pass it in the corresponding decryption operation. &lt;/p&gt;

&lt;p&gt;You can use the encryption context inside your policies to enforce tighter controls for your encrypted resources.&lt;/p&gt;

&lt;p&gt;Because the encryption context is logged in CloudTrail, you can get more insight into the usage of your keys from an audit perspective. &lt;/p&gt;

&lt;p&gt;Be aware that the encryption context is not encrypted and will be visible within CloudTrail logs. &lt;/p&gt;

&lt;p&gt;The encryption context should not be considered sensitive information and should not require secrecy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#multifactor-authentication"&gt;
  &lt;/a&gt;
  Multi-Factor Authentication
&lt;/h3&gt;

&lt;p&gt;To provide an additional layer of security over specific actions, you can implement an additional layer of protection using multi-factor authentication (MFA) on critical KMS API calls. &lt;/p&gt;

&lt;p&gt;Some of those calls are PutKeyPolicy, ScheduleKeyDeletion, DeleteAlias, and DeleteImportedKeyMaterial. &lt;/p&gt;

&lt;p&gt;This can be accomplished through a conditional statement within the key policy that checks for when or if an MFA device was used as part of authentication.&lt;/p&gt;

&lt;p&gt;If someone attempts to perform one of the critical AWS KMS actions, the following CMK policy will validate that their MFA was authenticated within the last 300 seconds, or 5 minutes, before performing the action.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"Sid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"MFACriticalKMSEvents"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"Effect"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Allow"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"Principal"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"AWS"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"arn:aws:iam::111122223333:user/ExampleUser"&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"Action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="s2"&gt;"kms:DeleteAlias"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="s2"&gt;"kms:DeleteImportedKeyMaterial"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="s2"&gt;"kms:PutKeyPolicy"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="s2"&gt;"kms:ScheduleKeyDeletion"&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"Resource"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"Condition"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;" NumericLessThan "&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nl"&gt;"aws: MultiFactorAuthAge"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"300"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#detective-controls"&gt;
  &lt;/a&gt;
  Detective Controls
&lt;/h3&gt;

&lt;p&gt;The Detective Controls capability ensures that you properly configure AWS KMS to log the necessary information you need to gain greater visibility into your environment.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#cmk-auditing"&gt;
  &lt;/a&gt;
  CMK Auditing
&lt;/h4&gt;

&lt;p&gt;AWS KMS is integrated with CloudTrail. To audit the usage of your keys in AWS KMS, you should enable CloudTrail logging in your AWS account. &lt;/p&gt;

&lt;p&gt;This ensures that all KMS API calls made on keys in your AWS account are automatically logged in files that are then delivered to an Amazon Simple Storage Service (S3) bucket that you specify. Using the information collected by CloudTrail, you can determine what request was made, the source IP address from which the request was made, who made the request, when it was made, and so on. &lt;/p&gt;

&lt;p&gt;AWS KMS integrates natively with many other AWS services to make monitoring easy. &lt;/p&gt;

&lt;p&gt;You can use these AWS services, or your existing security tool suite, to monitor your CloudTrail logs for specific actions such as ScheduleKeyDeletion, PutKeyPolicy, DeleteAlias, DisableKey, DeleteImportedKeyMaterial on your KMS key. Furthermore, AWS KMS emits Amazon CloudWatch Events when your CMK is rotated, deleted, and imported key material in your CMK expires.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#cmk-use-validation"&gt;
  &lt;/a&gt;
  CMK Use Validation
&lt;/h4&gt;

&lt;p&gt;In addition to capturing audit data associated with key management and use, you should ensure that the data you are reviewing aligns with your established best practices and policies. One method is to continuously monitor and verify the CloudTrail logs as they come in. &lt;/p&gt;

&lt;p&gt;Another method is to use AWS Config rules. By using AWS Config rules you can ensure that the configuration of many of the AWS services are set up appropriately. &lt;/p&gt;

&lt;p&gt;For example, with EBS volumes you can use the AWS Config rule ENCRYPTED_VOLUMES to validate that attached EBS volumes are encrypted.&lt;/p&gt;

&lt;p&gt;A CMK can have a tag applied to it for a variety of purposes. &lt;/p&gt;

&lt;p&gt;The most common use is to correlate a specific CMK back to a business category (such as a cost center, application name, or owner). &lt;/p&gt;

&lt;p&gt;The tags can then be used to verify that the correct CMK is being used for a given action. &lt;/p&gt;

&lt;p&gt;For example, in CloudTrail logs, for a given KMS action you can verify that the CMK being used belongs to the same business category as the resource that it’s being used on. Previously, this might have required a look up within a resource catalog, but now this external lookup is not required because of tagging within AWS KMS as well as many of the other AWS services.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#infrastructure-security"&gt;
  &lt;/a&gt;
  Infrastructure Security
&lt;/h3&gt;

&lt;p&gt;The Infrastructure Security capability provides you with best practices on how to configure AWS KMS to ensure that you have an agile implementation that can scale with your business while protecting your sensitive information.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#customer-master-keys"&gt;
  &lt;/a&gt;
  Customer Master Keys
&lt;/h4&gt;

&lt;p&gt;Within AWS KMS, your key hierarchy starts with a CMK. A CMK can be used to directly encrypt data blocks up to 4 KB or it can be used to secure data keys, which protect underlying data of any size.&lt;/p&gt;

&lt;p&gt;CMKs can be broken down into two general types: AWS-managed and customer-managed. &lt;/p&gt;

&lt;p&gt;An AWSmanaged CMK is created when you choose to enable server-side encryption of an AWS resource under the AWS-managed CMK for that service for the first time (e.g., SSE-KMS). &lt;/p&gt;

&lt;p&gt;The AWS-managed CMK is unique to your AWS account and the Region in which it’s used. &lt;/p&gt;

&lt;p&gt;An AWS-managed CMK can only be used to protect resources within the specific AWS service for which it’s created. It does not provide the level of granular control that a customer-managed CMK provides. &lt;/p&gt;

&lt;p&gt;For more control, a best practice is to use a customer-managed CMK in all supported AWS services and in your applications. A customer-managed CMK is created at your request and should be configured based upon your explicit use case.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rbnUAkQP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/141607731-83fbeec0-91e6-4d36-b18a-e75090acc6a1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rbnUAkQP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/141607731-83fbeec0-91e6-4d36-b18a-e75090acc6a1.png" alt="1" width="593" height="245"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#key-creation-and-management"&gt;
  &lt;/a&gt;
  Key Creation and Management
&lt;/h4&gt;

&lt;p&gt;Since AWS makes creating and managing keys easy through the use of AWS KMS, we recommend that you have a plan for how to use the service to best control the blast radius around individual keys.&lt;/p&gt;

&lt;p&gt;Previously, you may have used the same key across different geographic regions, environments, or even applications. With AWS KMS, you should define data classification levels and have at least one CMK per level. &lt;/p&gt;

&lt;p&gt;For example, you could define a CMK for data classified as “Confidential,” and so on. This ensures that authorized users only have permissions for the key material that they require to complete their job.&lt;/p&gt;

&lt;p&gt;You should also decide how you want to manage usage of AWS KMS. &lt;/p&gt;

&lt;p&gt;Creating KMS keys within each account that requires the ability to encrypt and decrypt sensitive data works best for most customers, but another option is to share the CMKs from a few centralized accounts. &lt;/p&gt;

&lt;p&gt;Maintaining the CMKs in the same account as the majority of the infrastructure using them helps users provision and run AWS services that use those keys. AWS services don’t allow for cross-account searching unless the principal doing the searching has explicit List* permissions on resources owned by the external account. &lt;/p&gt;

&lt;p&gt;This can also only be accomplished via the CLI or SDK, and not through service console-based searches. Additionally, by storing the credentials in the local accounts, it might be easier to delegate permissions to individuals who know the IAM principals that require access to the specific CMKs. &lt;/p&gt;

&lt;p&gt;If you were sharing the keys via a centralized model, the AWS KMS administrators would need to know the full Amazon Resource Name (ARN) for all users of the CMKs to ensure least privilege. &lt;/p&gt;

&lt;p&gt;Otherwise, the administrators might provide overly permissive permissions on the keys.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#key-aliases"&gt;
  &lt;/a&gt;
  Key Aliases
&lt;/h4&gt;

&lt;p&gt;A key alias allows you to abstract key users away from the underlying Region-specific key ID and key ARN. &lt;/p&gt;

&lt;p&gt;Authorized individuals can create a key alias that allows their applications to use a specific CMK independent of the Region or rotation schedule. &lt;/p&gt;

&lt;p&gt;Thus, multi-Region applications can use the same key alias to refer to KMS keys in multiple Regions without worrying about the key ID or the key ARN. &lt;/p&gt;

&lt;p&gt;You can also trigger manual rotation of a CMK by pointing a given key alias to a different CMK. Similar to how Domain Name Services (DNS) allows the abstraction of IP addresses, a key alias does the same for the key ID. &lt;/p&gt;

&lt;p&gt;When you are creating a key alias, we recommend that you determine a naming scheme that can be applied across your accounts such as alias/Environment-Function-Service Team.&lt;/p&gt;

&lt;p&gt;It should be noted that CMK aliases can’t be used within policies. This is because the mapping of aliases to keys can be manipulated outside the policy, which would allow for an escalation of privilege. Therefore, key IDs must be used in KMS key policies, IAM policies, and KMS grants.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-aws-kms-at-scale"&gt;
  &lt;/a&gt;
  Using AWS KMS at Scale
&lt;/h3&gt;

&lt;p&gt;AWS recommends using envelope encryption to scale your KMS implementation. Envelope encryption is the practice of encrypting plaintext data with a unique data key, and then encrypting the data key with a key encryption key (KEK). Within AWS KMS, the CMK is the KEK. &lt;/p&gt;

&lt;p&gt;You can encrypt your message with the data key and then encrypt the data key with the CMK. Then the encrypted data key can be stored along with the encrypted message. &lt;/p&gt;

&lt;p&gt;You can cache the plaintext version of the data key for repeated use, reducing the number of requests to AWS KMS. Additionally, envelope encryption can help to design your application for disaster recovery. You can move your encrypted data as-is between Regions and only have to re-encrypt the data keys with the Region-specific CMKs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-protection"&gt;
  &lt;/a&gt;
  Data Protection
&lt;/h3&gt;

&lt;p&gt;The Data Protection capability addresses some of the common AWS use cases for using AWS KMS within your organization to protect your sensitive information.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#common-aws-kms-use-cases"&gt;
  &lt;/a&gt;
  Common AWS KMS Use Cases
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#encrypting-pci-data-using-aws-kms"&gt;
  &lt;/a&gt;
  Encrypting PCI Data Using AWS KMS
&lt;/h5&gt;

&lt;p&gt;Since security and quality controls in AWS KMS have been validated and certified to meet the requirements of PCI DSS Level 1 certification, you can directly encrypt Primary Account Number (PAN) data with an AWS KMS CMK. &lt;/p&gt;

&lt;p&gt;The use of a CMK to directly encrypt data removes some of the burden of managing encryption libraries. &lt;/p&gt;

&lt;p&gt;Additionally, a CMK can’t be exported from AWS KMS, which alleviates the concern about the encryption key being stored in an insecure manner. As all KMS requests are logged in CloudTrail, use of the CMK can be audited by reviewing the CloudTrail logs. &lt;/p&gt;

&lt;p&gt;It’s important to be aware of the requests per second limit when designing applications that use the CMK directly to protect Payment Card Industry (PCI) data.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#secret-management-using-aws-kms-and-amazon-s3"&gt;
  &lt;/a&gt;
  Secret Management Using AWS KMS and Amazon S3
&lt;/h5&gt;

&lt;p&gt;Although AWS KMS primarily provides key management functions, you can leverage AWS KMS and Amazon S3 to build your own secret management solution.&lt;/p&gt;

&lt;p&gt;Create a new Amazon s3 bucket to hold your secrets. Deploy a bucket policy onto the bucket to limit access to only authorized individuals and services. The secrets stored in the bucket utilize a predefined prefix per file to allow for granular control of access to the secrets. &lt;/p&gt;

&lt;p&gt;Each secret, when placed in the S3 bucket, is encrypted using a specific customer-managed KMS key. Furthermore, due to the highly sensitive nature of the information being stored within this bucket, S3 access logging or CloudTrail Data Events are enabled for audit purposes. Then, when a user or service requires access to the secret, they assume an identity within AWS that has permissions to use both the object in the S3 bucket as well as the KMS key. An application that runs in an EC2 instance uses an instance role that has the necessary permissions.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#encrypting-lambda-environment-variables"&gt;
  &lt;/a&gt;
  Encrypting Lambda Environment Variables
&lt;/h5&gt;

&lt;p&gt;By default, when you create or update Lambda functions that use environment variables, those variables are encrypted using AWS KMS. When your Lambda function is invoked, those values are decrypted and made available to the Lambda code. You have the option to use the default KMS key for Lambda or specify a specific CMK of your choice.&lt;/p&gt;

&lt;p&gt;To further protect your environment variables, you should select the “Enable encryption helpers” checkbox. By selecting this option, your environment variables will also be individually encrypted using a CMK of your choice, and then your Lambda function will have to specifically decrypt each encrypted environment variable that is needed.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#encrypting-data-within-systems-manager-parameter-store"&gt;
  &lt;/a&gt;
  Encrypting Data within Systems Manager Parameter Store
&lt;/h5&gt;

&lt;p&gt;Amazon EC2 Systems Manager is a collection of capabilities that can help you automate management tasks at scale. &lt;/p&gt;

&lt;p&gt;To efficiently store and reference sensitive configuration data such as passwords, license keys, and certificates, the Parameter Store lets you protect sensitive information within secure string parameters.&lt;/p&gt;

&lt;p&gt;A secure string is any sensitive data that needs to be stored and referenced in a secure manner. &lt;/p&gt;

&lt;p&gt;If you have data that you don't want users to alter or reference in clear text, such as domain join passwords or license keys, then specify those values using the Secure String data type. You should use secure strings in the following circumstances:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You want to use data/parameters across AWS services without exposing the values as clear text in commands, functions, agent logs, or CloudTrail logs.&lt;/li&gt;
&lt;li&gt;You want to control who has access to sensitive data.&lt;/li&gt;
&lt;li&gt;You want to be able to audit when sensitive data is accessed using CloudTrail.&lt;/li&gt;
&lt;li&gt;You want AWS-level encryption for your sensitive data and you want to bring your own encryption keys to manage access.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By selecting this option when you create your parameter, the Systems Manager encrypts that value when it’s passed into a command and decrypts it when processing it on the managed instance. The encryption is handled by AWS KMS and can be either a default KMS key for the Systems Manager or you can specify a specific CMK per parameter.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#enforcing-data-at-rest-encryption-within-aws-services"&gt;
  &lt;/a&gt;
  Enforcing Data at Rest Encryption within AWS Services
&lt;/h3&gt;

&lt;p&gt;Your organization might require the encryption of all data that meets a specific classification. Depending on the specific service, you can enforce data encryption policies through preventative or detective controls. For some services like Amazon S3, a policy can prevent storing unencrypted data. For other services, the most efficient mechanism is to monitor the creation of storage resources and check whether encryption is enabled appropriately. In the event that unencrypted storage is created, you have a number of possible responses ranging from deleting the storage resource to notifying an administrator.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;AWS KMS provides your organization with a fully managed service to centrally control your encryption keys. Its native integration with other AWS services makes it easier for AWS KMS to encrypt the data that you store and process.&lt;/p&gt;

&lt;p&gt;By taking the time to properly architect and implement AWS KMS, you can ensure that your encryption keys are secure and available for applications and their authorized users. Additionally, you can show your auditors detailed logs associated with your key usage.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/kms-best-practices.pdf#welcome"&gt; Original paper &lt;/a&gt; &lt;/p&gt;

</description>
      <category>aws</category>
      <category>security</category>
      <category>cloud</category>
    </item>
    <item>
      <title>In-House vs Outsourced Software Development</title>
      <author>Metricoid Technology Solutions</author>
      <pubDate>Mon, 15 Nov 2021 11:48:10 +0000</pubDate>
      <link>https://dev.to/metricoid_technology/in-house-vs-outsourced-software-development-90</link>
      <guid>https://dev.to/metricoid_technology/in-house-vs-outsourced-software-development-90</guid>
      <description>&lt;p&gt;&lt;strong&gt;What is In-House Software Development?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Insourcing is another term for in-house development. It involves the presence of critical &lt;a href="https://metricoidtech.com/custom-web-development/"&gt;software development&lt;/a&gt; talent within the firm. No outside expertise is required because everyone working on the project is employed by that firm.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of In-House software development:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It's a group of professionals from the same country/city as you, with similar cultural and linguistic backgrounds, who work for the same company.&lt;/li&gt;
&lt;li&gt;You may simply adapt the project to your business by making relevant adjustments during the development phase.&lt;/li&gt;
&lt;li&gt;Internal experts improve their abilities in the construction of the project you started, and they quickly become highly focused professionals.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages of In-House software development:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The cost of assembling and sustaining a development team must be taken into account. Working with an In-House &lt;a href="https://metricoidtech.com/hire-dedicated-developers/"&gt;software developer&lt;/a&gt; is more expensive than an external service provider.&lt;/li&gt;
&lt;li&gt;A specialized project needs the participation of individuals who possess a certain skill set. If the team lacks that skill set, a new candidate must be found. This can also happen if the project is modified or enlarged.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://metricoidtech.com/product-development/"&gt;Developing software applications&lt;/a&gt; is frequently not the company's core business. Such a project can be quite stressful on in-house IT resources. Employee dissatisfaction and poor project outcomes are the results of work overload.&lt;/li&gt;
&lt;li&gt;Employee resignation is one of the most significant hazards in in-house software development. Companies can leave after investing considerable resources in their adaption, and you'll need to reinvest in new team members.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What is Outsourced Software Development?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://metricoidtech.com/"&gt;Software outsourcing&lt;/a&gt; is a business arrangement in which a corporation collaborates with a third-party company to build software rather than relying on its own staff.&lt;/li&gt;
&lt;li&gt;The conventional outsourcing approach was primarily used to reduce operating costs, but software outsourcing is now seen as a growth strategy that may help firms drive digital transformation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Outsourcing Software Development:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The most apparent benefit of outsourcing sophisticated technical tasks is that you are no longer limited to applicants within driving distance or even inside the same nation.&lt;/li&gt;
&lt;li&gt;Companies may save time and money by eliminating the requirement to recruit and verify skilled developers.
External development teams are generally well-versed in the subject. When new challenges occur as the project advances, no additional members are required because the knowledge is already present.&lt;/li&gt;
&lt;li&gt;Without a long hiring process or an unpleasant dismissal procedure, the team may simply be grown or lowered as needed.
Payment dates can be arranged if required when engaging an external firm. This will significantly improve the company's cash flow.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages Of Outsourcing Software Development:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The majority of project contact takes place via written technological channels such as email, rather than in person. These sorts of impersonal communication don't have the same impact and might lead to misconceptions or misinterpretations.&lt;/li&gt;
&lt;li&gt;Miscommunication might lead to a distrustful relationship. An outsourced development project requires a high level of trust.
A vital step is to find the correct companion. Both parties must agree to acknowledge each other, meet on time, and report in a way that meets everyone's requirements and goals.&lt;/li&gt;
&lt;li&gt;Another downside of outsourcing software development is the possibility of lower-quality code.&lt;/li&gt;
&lt;li&gt;One of the most significant hazards of outsourcing is losing control over how work is performed, managed, or, worse, the data and insights associated with outsourced projects.&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>Day 38 of 100 Days of Code &amp; Scrum: Styling Next.js &lt;Image&gt; With a Wrapper</title>
      <author>Rammina</author>
      <pubDate>Mon, 15 Nov 2021 11:29:49 +0000</pubDate>
      <link>https://dev.to/rammina/day-38-of-100-days-of-code-scrum-styling-nextjs-with-a-wrapper-1fpc</link>
      <guid>https://dev.to/rammina/day-38-of-100-days-of-code-scrum-styling-nextjs-with-a-wrapper-1fpc</guid>
      <description>&lt;p&gt;Greetings, everyone!&lt;/p&gt;

&lt;p&gt;Today, I started to gain some momentum for working on my company website. I finished setting up AWS SES, Lambda, and API Gateway for my email contact form. Now, all there is left to do is to actually code the frontend contact form with proper styling.&lt;/p&gt;

&lt;p&gt;What really grinds my gears is Next.js' &lt;code&gt;&amp;lt;Image /&amp;gt;&lt;/code&gt; which has a really weird inline styling effect. the workaround is really annoying, which is to wrap a &lt;code&gt;&amp;lt;div className&amp;gt;&lt;/code&gt; around it to add custom CSS styling. I don't like this, because it adds up an extra node/element for every &lt;code&gt;&amp;lt;Image /&amp;gt;&lt;/code&gt; I need to style in my application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--se1mpq7q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rw4zd5pqwjqqthx12ysh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--se1mpq7q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rw4zd5pqwjqqthx12ysh.png" alt="Messed Up Styling" width="880" height="433"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Yikes...&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Oh, and I still don't have my Internet back. However, I will make do with whatever bandwidth I have.&lt;/p&gt;

&lt;p&gt;Anyway, let's move on to my daily report!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I planned out what I will be doing for this week, and I noticed that I am being overwhelmed by various interesting things that I want to learn and work on. I decided to prioritize my main objective first, which is the website MVP.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I learned and worked on today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nextjs"&gt;
  &lt;/a&gt;
  Next.js
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;coded my services section for the homepage.&lt;/li&gt;
&lt;li&gt;finished the mobile styling for the skeleton layout.&lt;/li&gt;
&lt;li&gt;the desktop version is also okay, but could use some size changes.&lt;/li&gt;
&lt;li&gt;had to fix a lot of my &lt;code&gt;&amp;lt;Image /&amp;gt;&lt;/code&gt; and wrap them around with &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; so I could add styling.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#aws"&gt;
  &lt;/a&gt;
  AWS
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;finished setting up AWS SES, Lambda, and API Gateway for my email contact form.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I did some practice flashcards for Scrum.&lt;/li&gt;
&lt;li&gt;reviewed some of the things I've learned before.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have a great start to your week, everyone!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vercel/next.js/discussions/22861"&gt;Enable styling of next/image outer wrapper | GitHub Discussions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/basics/create-nextjs-app?utm_source=next-site&amp;amp;utm_medium=nav-cta&amp;amp;utm_campaign=next-website"&gt;Official Next.js tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/intro.html"&gt;The Typescript Handbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cover-image"&gt;
  &lt;/a&gt;
  Cover Image
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://unsplash.com/photos/c2zx23qmTlU"&gt;laura adai on Unsplash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#other-media"&gt;
  &lt;/a&gt;
  Other Media
&lt;/h3&gt;

&lt;p&gt;Feel free to reach out to me in other media!&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://twitter.com/RamminaR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C341ckO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636792959/twitter-logo_laoyfu_pdbagm.png" alt="Twitter logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://github.com/Rammina"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4ZlXeay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636795051/GitHub-Emblem2_epcp8r.png" alt="Github logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>MongoDB Atlas for a SaaS</title>
      <author>Adrian Twarog</author>
      <pubDate>Mon, 15 Nov 2021 11:01:35 +0000</pubDate>
      <link>https://dev.to/adriantwarog/mongodb-atlas-for-a-saas-1971</link>
      <guid>https://dev.to/adriantwarog/mongodb-atlas-for-a-saas-1971</guid>
      <description>&lt;p&gt;I decided to build a SaaS last month called Enhance AI, using OpenAI with GPT-3 to perform some interesting applications of AI to help programmers save time coding.&lt;/p&gt;

&lt;p&gt;I needed to pick a good database for this SaaS. As the title suggests, I ended up picking MongoDB, however how I came to this conclusion took some research.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/14pAPdAowYc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Youtube Video: &lt;a href="https://youtu.be/14pAPdAowYc"&gt;Creating a SaaS Database&lt;/a&gt;&lt;br&gt;
The SaaS: &lt;a href="https://www.enhanceai.ai"&gt;Enhance AI&lt;/a&gt;&lt;br&gt;
MongoDB Atlas: &lt;a href="https://www.mongodb.com/cloud/atlas/register?utm_campaign=adrian_twarog&amp;amp;utm_source=youtube&amp;amp;utm_medium=influencers&amp;amp;utm_content=saas_database_in_7_days"&gt;&lt;/a&gt;&lt;a href="https://www.mongodb.com/cloud/atlas/"&gt;https://www.mongodb.com/cloud/atlas/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;This will cover what I learned by picking and implementing MongoDB Atlas for my project and my thoughts. If you're expecting something technical, this won't be for you.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Defining the scope and requirements&lt;/li&gt;
&lt;li&gt;Picking databases&lt;/li&gt;
&lt;li&gt;Deciding local vs cloud database&lt;/li&gt;
&lt;li&gt;Setting up the database schema&lt;/li&gt;
&lt;li&gt;Creating the API routes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7VjLV7mR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28w6of5vdfz50bo4gx7c.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7VjLV7mR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28w6of5vdfz50bo4gx7c.gif" alt="Mongodb Atlas" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#defining-the-scope-amp-requirements"&gt;
  &lt;/a&gt;
  Defining the Scope &amp;amp; Requirements
&lt;/h2&gt;

&lt;p&gt;The first thing you want to consider is your goal for a project. Mine was to build a startup, in 30 days or less. This means I needed to build fast, and have good documentation whenever I encountered problems.&lt;/p&gt;

&lt;p&gt;There was lots of options like firestore, or mysql, however one of the most common startup stacks is called MERN, which is Mongo, Express, React and Nodejs. There are lots of youtube videos on how to set them up (now one more!) and I was quite confident as I had worked with each one of those technologies in the past.&lt;/p&gt;

&lt;p&gt;The other requirements was working with JSON objects, which Mongo does quite well as because of the fact that it's a document/collection based database. And finally the fact that it's quite flexible in the fact that it's schema can easily be changed on the fly meant I believe it was a good choice for my startup.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CoXaU1x2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4tz440c5dqs0zzgc7fx2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CoXaU1x2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4tz440c5dqs0zzgc7fx2.gif" alt="Mongodb Atlas" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#deciding-local-vs-cloud-databases"&gt;
  &lt;/a&gt;
  Deciding local vs cloud databases
&lt;/h2&gt;

&lt;p&gt;It's 2021 and soon to be 2022. You are no longer limited to setup an entire production workstation with all items installed, such as a web server, database, files and more. Microservices and cloud services now allow you to distribute all your technologies.&lt;/p&gt;

&lt;p&gt;So the question of hosting the database locally or online is an actual decision to make. There are a few advantages and disadvantages to both approaches. Yes you have more control if everything is locally on your machine, but by comparison, having a cloud version of a database means it's accessible anywhere.&lt;/p&gt;

&lt;p&gt;As I often swap computers, work remotely, and want more flexibility, I had a look at the cloud version of MongoDb. It's called MongoDB Atlas. I have the option to connect directly to it via my vscode with a plugin, which is quite useful. On top of that, you can scale and grow it with your needs.&lt;/p&gt;

&lt;p&gt;Other than that, the setup is exactly the same for connecting it to your project, minus the requirement to install and actually host the database on the machine. This meant I got to save time and effort and simply copy paste the url of the database from Mongo and I was up and running in minutes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zcTuZc4E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/durn1081rk4ein00agct.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zcTuZc4E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/durn1081rk4ein00agct.gif" alt="Mongodb Atlas" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-the-database-schema"&gt;
  &lt;/a&gt;
  Setting up the Database Schema
&lt;/h2&gt;

&lt;p&gt;Every website and application (hopefully) is unique. However there are some items which remain the same, such as the requirement for users, authentication, etc. I took a few days to plan out how I wanted to structure my database before actually implementing it.&lt;/p&gt;

&lt;p&gt;The main difference was the fact that I was using OpenAI, and I wanted to make sure that could help improve my GPT-3 outputs overtime, so I made sure to also implement a history schema. Using express, I setup mongoose as it's one of the easier ways to define a schema, which I could later use in my routes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oCfl_2le--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6iwlozn0cd5q00woo52.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oCfl_2le--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6iwlozn0cd5q00woo52.gif" alt="Mongodb Atlas" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-the-api"&gt;
  &lt;/a&gt;
  Creating the API
&lt;/h2&gt;

&lt;p&gt;With the database picked, the cloud setup, the schema defined, I was able to implement the API with ease. &lt;/p&gt;

&lt;p&gt;Most of the requests could be simple GET, POST requests which are then using the findOne command using mongoose with mongo no different to if I was using it locally.&lt;/p&gt;

&lt;p&gt;I originally thought I might get some significant delays by using the cloud version of MongoDB, however the server was quite fast and I never had any such delays.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;While this was a brief overview of using MongoDB Atlas, it's worthwhile that people try it over the alternative of running up a database locally and manually. You will get the same results with less time and have more flexibility moving forward.&lt;/p&gt;

&lt;p&gt;I've done a while video which goes more into depth about this journey but hopefully this gives you a good idea of some of the items I learned during this time.&lt;/p&gt;

&lt;p&gt;MongoDB Atlas: &lt;a href="https://www.mongodb.com/cloud/atlas/register?utm_campaign=adrian_twarog&amp;amp;utm_source=youtube&amp;amp;utm_medium=influencers&amp;amp;utm_content=saas_database_in_7_days"&gt;&lt;/a&gt;&lt;a href="https://www.mongodb.com/cloud/atlas/"&gt;https://www.mongodb.com/cloud/atlas/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Youtube Video: &lt;a href="https://youtu.be/14pAPdAowYc"&gt;Creating a SaaS Database&lt;/a&gt;&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mDVDstIy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FDaXu1LUcAAfBha.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ugr_G7WG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1268445996192632834/Ufosoga3_normal.jpg" alt="Adrian Twarog 🦘 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Adrian Twarog 🦘
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @adrian_twarog
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Creating a SaaS Database in 9.49 mins&lt;br&gt;&lt;br&gt;- Picking a Database&lt;br&gt;- Using Local versus Cloud&lt;br&gt;- Backups &amp;amp; Security&lt;br&gt;- Setting up schema&lt;br&gt;- Setting up the collations, documents&lt;br&gt;- Connecting it to an API&lt;br&gt;- Plug-in to VSCODE&lt;br&gt;- Accessing it remotely&lt;br&gt;&lt;br&gt;And much more, check out 🔗 link 👇 below 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      07:09 AM - 05 Nov 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1456518992781144067" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1456518992781144067" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1456518992781144067" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#follow-and-support-me"&gt;
  &lt;/a&gt;
  Follow and support me:
&lt;/h2&gt;

&lt;p&gt;Special thanks if you subscribe to my channel :)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCvM5YYWwfLwpcQgbRr68JLQ?sub_confirmation=1"&gt;🎞️ Youtube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/intent/follow?screen_name=adrian_twarog"&gt;🐦 Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>mongodb</category>
      <category>database</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Tools to Make React Documentation a Piece of Cake! 👨‍💻</title>
      <author>Charu Veluthoor</author>
      <pubDate>Mon, 15 Nov 2021 10:31:55 +0000</pubDate>
      <link>https://dev.to/aviyel/tools-to-make-react-documentation-a-piece-of-cake-278p</link>
      <guid>https://dev.to/aviyel/tools-to-make-react-documentation-a-piece-of-cake-278p</guid>
      <description>&lt;p&gt;Documenting React components might be a cumbersome task for many. However, with the right set of tools and practices, you can make your docs look seamless and codes efficient. &lt;/p&gt;

&lt;p&gt;Join Sankalp Swami and Aviyel for an interesting conversation on tools he uses to document React components. Get the list of most usable documentation tools, learn how to document React components, and build your first doc in an instant. &lt;br&gt;
Join us to get hands-on experience with React, open-source, and a personalized evening with Sankalp. &lt;/p&gt;

&lt;p&gt;Save the Date: 📆 November 20th, 2021&lt;br&gt;
Time: 9:30 AM IST&lt;br&gt;
Register Here 👉 &lt;a href="https://bit.ly/3cdf74F"&gt;https://bit.ly/3cdf74F&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Impressed? Check out the rest of our events!&lt;br&gt;
Happy building, &lt;br&gt;
Team Aviyel&lt;/p&gt;

</description>
      <category>react</category>
      <category>devops</category>
      <category>devrel</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Building a Map Application with Amplify Geo and Vue.js</title>
      <author>Yasunori Kirimoto</author>
      <pubDate>Mon, 15 Nov 2021 10:31:53 +0000</pubDate>
      <link>https://dev.to/aws-builders/building-a-map-application-with-amplify-geo-and-vuejs-2226</link>
      <guid>https://dev.to/aws-builders/building-a-map-application-with-amplify-geo-and-vuejs-2226</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dujY6Q-b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-068_01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dujY6Q-b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-068_01.png" alt="img" width="880" height="180"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#i-built-a-map-application-using-amplify-geo-and-vuejs-tada"&gt;
  &lt;/a&gt;
  I built a map application using Amplify Geo and Vue.js 🎉
&lt;/h3&gt;

&lt;p&gt;Amplify Geo was officially released to the public the other day, so I got to try it out.&lt;br&gt;
Amplify Geo is a feature of AWS Amplify that allows you to build Amazon Location Service easier!&lt;/p&gt;



&lt;p&gt;Advance Preparation&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setting up AWS Amplify and Vue.js to the login feature&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://dev.to/aws-builders/building-a-login-function-with-aws-amplify-amplify-ui-vue-and-vue-3-4043"&gt;Building a login function with AWS Amplify, Amplify UI Vue, and Vue 3&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-amplify-geo"&gt;
  &lt;/a&gt;
  Setting up Amplify Geo
&lt;/h2&gt;

&lt;p&gt;First, we will configure Amplify Geo.&lt;br&gt;
&lt;a href="https://day-journal.com/memo/aws-amplify-004"&gt;Add location feature (map)&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;If you only need a location function (map), you can implement it with these two commands!&lt;br&gt;
Amazon Location Service requires AWS console configuration and role configuration, but Amplify Geo does all of that for you!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;amplify add geo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;amplify push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This completes the configuration of Amplify Geo.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#frontend"&gt;
  &lt;/a&gt;
  Frontend
&lt;/h2&gt;

&lt;p&gt;Next, let's build the actual map application.&lt;/p&gt;

&lt;p&gt;Once Amplify and Vue.js are configured, it's just a matter of adding a new "MapPane.vue" and changing some of the code.&lt;/p&gt;



&lt;p&gt;execution environment&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;node v16.10.0
&lt;/li&gt;
&lt;li&gt;npm v7.24.0 &lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Install MapLibre GL JS v1 and MapLibre GL JS Amplify, a wrapper library, in advance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;maplibre-gl@1.15.2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;maplibre-gl-js-amplify
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;Overall composition&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ktTxjZqY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-068_02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ktTxjZqY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-068_02.png" alt="img" width="232" height="565"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#packagejson"&gt;
  &lt;/a&gt;
  package.json
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"amplify-geo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0.1.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"private"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"serve"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vue-cli-service serve"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vue-cli-service build"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"lint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vue-cli-service lint"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@aws-amplify/ui-components"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.9.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"aws-amplify"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.3.4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"core-js"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^3.6.5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"maplibre-gl"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.15.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"maplibre-gl-js-amplify"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.1.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"vue"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^3.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"vue-router"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.0.0-0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"vuex"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.0.0-0"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@vue/cli-plugin-babel"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"~4.5.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@vue/cli-plugin-eslint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"~4.5.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@vue/cli-plugin-router"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"~4.5.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@vue/cli-plugin-vuex"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"~4.5.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@vue/cli-service"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"~4.5.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@vue/compiler-sfc"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^3.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"babel-eslint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^10.1.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"eslint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^6.7.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"eslint-plugin-vue"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^7.0.0"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"eslintConfig"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"root"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"env"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"node"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"extends"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"plugin:vue/vue3-essential"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"eslint:recommended"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"parserOptions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"parser"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"babel-eslint"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"rules"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"browserslist"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"&amp;gt; 1%"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"last 2 versions"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"not dead"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;/src&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#mainjs"&gt;
  &lt;/a&gt;
  main.js
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./router&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./store&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;maplibre-gl/dist/maplibre-gl.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;applyPolyfills&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;defineCustomElements&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-amplify/ui-components/loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Amplify&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-amplify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;awsconfig&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./aws-exports&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;Amplify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;awsconfig&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;applyPolyfills&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;defineCustomElements&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isCustomElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;amplify-&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;Load MapLibre GL JS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;maplibre-gl/dist/maplibre-gl.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;/src/views&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#homevue"&gt;
  &lt;/a&gt;
  Home.vue
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"home"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Amplify Geo&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;MapPane&amp;gt;&amp;lt;/MapPane&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;amplify-sign-out&amp;gt;&amp;lt;/amplify-sign-out&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MapPane&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@/components/MapPane.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Home&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;MapPane&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;Set the map component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;MapPane&amp;gt;&amp;lt;/MapPane&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;Loads the map component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MapPane&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@/components/MapPane.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;home&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;MapPane&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;







&lt;p&gt;/src/components&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#mappanevue"&gt;
  &lt;/a&gt;
  MapPane.vue
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;'mapPane'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;'map'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createMap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;drawPoints&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;maplibre-gl-js-amplify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MapPane&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;mounted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mapCreate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;mapCreate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;createMap&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                    &lt;span class="na"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;map&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;139.7648&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;35.6794&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                    &lt;span class="na"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;bearing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;64.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;pitch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;});&lt;/span&gt;

                &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;load&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;drawPoints&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pointsSource&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="p"&gt;[&lt;/span&gt;
                            &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="na"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;139.7646&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;35.6827&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                                &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Point01&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="na"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Main Points&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="p"&gt;},&lt;/span&gt;
                            &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="na"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;139.7720&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;35.6768&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                                &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Point02&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="p"&gt;},&lt;/span&gt;
                            &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="na"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;139.7607&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;35.6759&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                            &lt;span class="p"&gt;},&lt;/span&gt;
                        &lt;span class="p"&gt;],&lt;/span&gt;
                        &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="na"&gt;showCluster&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="na"&gt;unclusteredOptions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="na"&gt;showMarkerPopup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="na"&gt;defaultColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#005773&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
                            &lt;span class="p"&gt;},&lt;/span&gt;
                            &lt;span class="na"&gt;clusterOptions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="na"&gt;showCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="na"&gt;fillColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#005773&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
                            &lt;span class="p"&gt;},&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt; &lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nf"&gt;#map&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;800px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;Load the map and marker functions in MapLibre GL JS Amplify.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createMap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;drawPoints&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;maplibre-gl-js-amplify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;Set up the map in MapLibre GL JS Amplify.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;createMap&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;map&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;139.7648&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;35.6794&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;bearing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;64.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;pitch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;Set the marker in MapLibre GL JS Amplify.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;drawPoints&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pointsSource&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;139.7646&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;35.6827&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Point01&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Main Points&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;139.7720&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;35.6768&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Point02&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;139.7607&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;35.6759&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;showCluster&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;unclusteredOptions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;showMarkerPopup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;defaultColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#005773&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;clusterOptions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;showCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;fillColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#005773&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;Let's check with a simple local server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run serve
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;Start up a local server and try logging in 💡 &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3f0uRa-c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://day-journal.com/memo/images/try-068_00.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3f0uRa-c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://day-journal.com/memo/images/try-068_00.gif" alt="img" width="880" height="696"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#i-was-able-to-build-a-map-application-using-amplify-geo-combined-with-vuejs-thumbsup"&gt;
  &lt;/a&gt;
  I was able to build a map application using Amplify Geo combined with Vue.js 👍
&lt;/h4&gt;

&lt;p&gt;Using Amplify Geo eliminates the need to configure settings and roles in the AWS console, making it easier to build than using Amazon Location Service as it is. However, when customizing beyond the existing functions, MapLibre GL JS needs to be directly loaded and developed, and it seems that more complex customization can be done by using it in combination with the necessary parts of Amplify Geo. I'll keep exploring this 👍 &lt;/p&gt;

</description>
      <category>amazonlocationservice</category>
      <category>vue</category>
      <category>awsamplify</category>
      <category>maplibre</category>
    </item>
    <item>
      <title>Love React? Join Mohmed Ishak in Documenting React Components Using Open Source Tool on Aviyel</title>
      <author>Charu Veluthoor</author>
      <pubDate>Mon, 15 Nov 2021 10:27:41 +0000</pubDate>
      <link>https://dev.to/charuthekutty/love-react-join-mohmed-ishak-in-documenting-react-components-using-open-source-tool-on-aviyel-16e6</link>
      <guid>https://dev.to/charuthekutty/love-react-join-mohmed-ishak-in-documenting-react-components-using-open-source-tool-on-aviyel-16e6</guid>
      <description>&lt;p&gt;If you are into frontend, chances are you might have used React at least once in your career. In case, you are looking for documenting your React components but are stuck with the know-how, then Aviyel comes to your rescue. &lt;/p&gt;

&lt;p&gt;We bring to you Mohmed Ishak, a React developer, and open source enthusiast to get you started. Ishak will use Docz to build an SEO-friendly, production-ready doc site. What more? A chance to impress your future boss with all your developer skills.&lt;/p&gt;

&lt;p&gt;Join us to get hands-on experience with Docz, open-source, React, and a personalized evening with Ishak. &lt;/p&gt;

&lt;p&gt;Mark your Calendar: 📆 November 19th, 2021&lt;br&gt;
Time: 9:30 AM IST&lt;/p&gt;

&lt;p&gt;Register NOW 👉 &lt;a href="https://bit.ly/3FivARO"&gt;https://bit.ly/3FivARO&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Impressed? Check out the rest of our events!&lt;br&gt;
Let’s build open source together!&lt;br&gt;
Team Aviyel&lt;/p&gt;

</description>
      <category>react</category>
      <category>opensource</category>
      <category>reactnative</category>
      <category>eventsinyourcity</category>
    </item>
    <item>
      <title>How important is your website traffic?</title>
      <author>Reza</author>
      <pubDate>Mon, 15 Nov 2021 10:24:37 +0000</pubDate>
      <link>https://dev.to/rezaufc/how-important-is-your-website-traffic-k62</link>
      <guid>https://dev.to/rezaufc/how-important-is-your-website-traffic-k62</guid>
      <description>&lt;h2&gt;&lt;b&gt;Why is your website traffic important?&lt;b&gt;&lt;/b&gt;&lt;h2&gt;&lt;/h2&gt;

&lt;/b&gt;&lt;/h2&gt;
&lt;p&gt;The number of visitors to your website is important because this equals the number of opportunities your business has at giving an impression, generating qualified leads, sharing your brand, and building relationships. It's good to know that more website traffic doesn’t just mean more money and more sales, but it matters how you deal with your website visitors and how to engage with them. &lt;/p&gt;


&lt;h2&gt;&lt;b&gt;How to increase the quality of the website traffic?&lt;b&gt;&lt;/b&gt;&lt;h2&gt;&lt;/h2&gt;

&lt;/b&gt;&lt;/h2&gt;
&lt;p&gt;Increasing the quality of service for your website visitors is a challenge that requires extra tools in order to manage and get the best result out of it. Imagine customers are visiting your physical store or your office, wouldn't you welcome them and start talking to them? The answer is of course someone from your office would go and start the conversation with the visitors. &lt;br&gt;
This is what we are providing to the market in order to make it possible to start the conversation with the live website visitors. &lt;/p&gt;

&lt;p&gt;This is the way that will increase the quality of your service to the website traffic that is live visiting your digital company. There is a big impression that says: “Quality is never an accident. It is always the result of intelligent effort.” - John Ruskin&lt;/p&gt;

&lt;p&gt;So now you have this in mind that if you can start talking with your website visitors, then you have the opportunity to get closer to them and offer them your services or products, and even assist them to find the most suitable choice for them. Isn't it amazing rather than just checking the simple numbers going up and down? &lt;/p&gt;


&lt;h2&gt;&lt;b&gt;How can you start talking with live website visitors?&lt;b&gt;&lt;/b&gt;&lt;h2&gt;&lt;/h2&gt;

&lt;/b&gt;&lt;/h2&gt;
&lt;p&gt;Thanks to the technology of YolloChat, this is now available on the system as a live visitor engagement. This is the way that you can start tracking your live website traffic and see how many pages visited and what is the current page that the visitor is online. &lt;br&gt;
To enable this function you just need to add the mini chat on your website, then you are ready to start chatting with your website live visitors. &lt;/p&gt;

&lt;p&gt;Engaging with website live visitors has numbers of benefits for your company: &lt;br&gt;
1- Engaging more in a chat with visitors for more personalized invitations and offers. &lt;br&gt;
2- Create an efficient relationship with customers. &lt;br&gt;
3- Let your customers experience, better level of care and support from your company.&lt;br&gt;
4- Increase your sales by better understanding your customer behavior and having the chance to offer or assist them while they are thinking about your product or services.&lt;br&gt;
Watch the video on YouTube: &lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=SQt9SbevNl0"&gt;https://www.youtube.com/watch?v=SQt9SbevNl0&lt;/a&gt; &lt;/p&gt;


&lt;h2&gt;&lt;b&gt;How much does it cost to start chatting with website live visitors?&lt;b&gt;&lt;/b&gt;&lt;h2&gt;&lt;/h2&gt;

&lt;/b&gt;&lt;/h2&gt;
&lt;p&gt;Live visitor engagement tool is one of the FREE features that are available for all types of companies to install and start providing support to website live visitors.&lt;br&gt;
Visit the link below to create your free account:&lt;br&gt;
&lt;a href="https://yollochat.com/small-business.html"&gt;https://yollochat.com/small-business.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All you need is just to hit the button to register on YolloChat, and fill up the information about your company and invite your agents to get responsibility to start chatting with your website live visitors. To make it more personalized the environment, there are two options:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;1- Platform interface for Agents&lt;b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;This option is available to let the agents customize the style of the system, that they will feel more comfortable and productive to work better and happier.&lt;/p&gt;
 

&lt;p&gt;&lt;b&gt;2- Chat widget interface&lt;b&gt;&lt;/b&gt; &lt;br&gt;
&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;This is the most exciting part of the YolloChat system which will allow you to fully customize the look of mini chat to fit the style of your company website. This is not the only option available! even you have access to control all the parameters happening into the system such as:&lt;/p&gt;
 

&lt;ul&gt;
&lt;li&gt;Set your welcome message&lt;/li&gt;
&lt;li&gt;Set terms and conditions&lt;/li&gt;
&lt;li&gt;Accept new message&lt;/li&gt;
&lt;li&gt;Set your Mini Chat look and style!&lt;/li&gt;
&lt;li&gt;Get context about issues upfront&lt;/li&gt;
&lt;li&gt;Share your reply time&lt;/li&gt;
&lt;li&gt;Ask to rate the conversation and get feedback&lt;/li&gt;
&lt;li&gt;Offline email notification&lt;/li&gt;
&lt;li&gt;Ticket priority&lt;/li&gt;
&lt;li&gt;Show an offline notice for your user&lt;/li&gt;
&lt;li&gt;Show a special notice in your mini chat&lt;/li&gt;
&lt;li&gt;Keep your Mini Chat secure&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>wordpress</category>
      <category>webdev</category>
      <category>discuss</category>
      <category>programming</category>
    </item>
    <item>
      <title>A beginner's guide to Javascript development using Firebase V9. Part 2 - coding a simple webapp</title>
      <author>MartinJ</author>
      <pubDate>Mon, 15 Nov 2021 10:15:22 +0000</pubDate>
      <link>https://dev.to/mjoycemilburn/a-beginners-guide-to-javascript-development-using-firebase-v9-part-2-coding-a-simple-webapp-4e5i</link>
      <guid>https://dev.to/mjoycemilburn/a-beginners-guide-to-javascript-development-using-firebase-v9-part-2-coding-a-simple-webapp-4e5i</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;A previous post, (&lt;a href="https://dev.to/mjoycemilburn/a-beginners-guide-to-javascript-development-using-firebase-v9-part-1-project-configuration-5bo3"&gt;Firebase V9. Part1 - project configuration&lt;/a&gt;), described the steps you need to follow to get yourself to the point where you could start coding. Here, at last is your chance to write some javascript - you've certainly earned it!. &lt;/p&gt;

&lt;p&gt;If you've read my initial &lt;a href="https://dev.to/mjoycemilburn/a-path-through-the-jungle-a-quick-and-easy-and-completely-free-way-of-achieving-practical-results-in-the-world-of-it-21ei"&gt;"Jungle"&lt;/a&gt; post, you may have written some code already. Remember this?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;there&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hourOfDay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 0-23&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hourOfDay&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Copy this over the content of index.html in the public folder, rerun the deploy command and refresh the &lt;code&gt;https://fir-expts-app.web.app&lt;/code&gt; tab - the screen should now display "hello" in an appropriate colour, depending on the time of day.&lt;/p&gt;

&lt;p&gt;Yes, it's that easy! But don't get over-confident - there's a lot still to learn! &lt;/p&gt;

&lt;p&gt;What I'm going to do now is introduce you immediately to the Firebase functions that read and write data from a Firestore database. The example I've chosen is a simple "CRUD" (create, read, update and delete) application that will show you the basics. It's a good old-fashioned "shopping list" maintenance script.&lt;/p&gt;

&lt;p&gt;When the shopping list webapp runs it's going to display a screen along the following lines:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yf-zImHh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qk8xbrmgdsp3p7qmu331.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yf-zImHh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qk8xbrmgdsp3p7qmu331.png" alt="Shopping List screen" width="880" height="297"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I know this isn't going to win any trophies for quality user-interface design, but please bear with me - I'm trying to keep things as simple as possible so that we can concentrate on the Firebase issues. However, if you were to give my code a try, you'd find that it &lt;strong&gt;does&lt;/strong&gt; work. User &lt;code&gt;ab@gmail.com&lt;/code&gt; could run this script to pull down a current copy of their shopping list, insert a new item with the "Add Item" button and amend and remove existing items with the Add and Delete buttons.&lt;/p&gt;

&lt;p&gt;The way I'm approaching the design for this webapp is to use an index.html file to lay out a skeleton for this screen. Here's the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"text-align: center;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Shopping list for :
        &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"useremail"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;

        &lt;span class="c"&gt;&amp;lt;!-- [userPurchase] [update button] [delete button] to be added dynamically here--&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"usershoppinglist"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;'text'&lt;/span&gt; &lt;span class="na"&gt;maxlength=&lt;/span&gt;&lt;span class="s"&gt;'30'&lt;/span&gt; &lt;span class="na"&gt;size=&lt;/span&gt;&lt;span class="s"&gt;'20'&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;'newpurchaseitem'&lt;/span&gt; &lt;span class="na"&gt;autocomplete=&lt;/span&gt;&lt;span class="s"&gt;'off'&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"additembutton"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Add Item&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"index.js"&lt;/span&gt; &lt;span class="na"&gt;async&lt;/span&gt; &lt;span class="na"&gt;defer&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll notice immediately that quite a few things are missing from this code. For a start, there's nothing in the code for the &lt;code&gt;Shopping list for :&lt;/code&gt; header identifying the owner of the list - just an empty &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; with a &lt;code&gt;useremail&lt;/code&gt; id. Likewise the content of the shopping list block is identified but not specified. How is this ever going to work? &lt;/p&gt;

&lt;p&gt;The information we need here exists in a Firestore database but can only be displayed when we retrieve it. So, we're going to make this work by adding some logic to our system - a bunch of javascript code that can be started up when the html file is loaded and that will perform the necessary database access tasks as required. Once the code has done its job, we can use the techniques that were first introduced in the original "Jungle" post to "insert" the missing html into the screen skeleton.&lt;/p&gt;

&lt;p&gt;You might wonder, if I'm generating html code in javascript, why I bother with the html skeleton at all - why not just generate &lt;strong&gt;everything&lt;/strong&gt; inside the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tags?  The answer is that the skeleton is a great way of documenting the "structure" for your code. When html is generated inside javascript you'll find its clarity is seriously compromised and you start to lose track of the overall design. By contrast, when the design is defined in raw html, neatly indented and highlighted by the code-formatting tools in your IDE, it's much easier to see what's going on. I find it helpful to add "code comments" too, documenting the intended structure for any "missing" bits&lt;/p&gt;

&lt;p&gt;Another difference between the code I'm showing you now and the examples I've used so far is that I'm no longer coding the javascript directly inside the html file. Instead, there's a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; entry that simply refers the browser to an independent &lt;code&gt;index.js&lt;/code&gt; file. This paves the way for use of special performance features introduced by Firebase 9. Note that the &lt;code&gt;type&lt;/code&gt; of the script is declared to be &lt;code&gt;module&lt;/code&gt; - more on this shortly.&lt;/p&gt;

&lt;p&gt;In passing, I'd just like to mention that this style of development, wherein html code is dynamically-generated by javascript code is the hallmark of "single-page app" architectures, a term first introduced above in the context of firebase initialisation using the CLI. In the past it would be common for an application to present its users with an array of options laid out as tabs at the top of a screen display. The usual practice was to develop the code associated with each tab as a separate html file. The tabs would then be implemented as buttons each specifying an onclick referencing the file that was to be opened. This arrangement made life complicated for the developer, however, and the use of javascript in the application has opened up the opportunity to keep the code together in a "single-page app". See &lt;a href="https://www.bloomreach.com/en/blog/2018/07/what-is-a-single-page-application.html"&gt;What is a single-page app&lt;/a&gt; for further background.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#simple-firebase-crud-code"&gt;
  &lt;/a&gt;
  Simple Firebase CRUD code
&lt;/h3&gt;

&lt;p&gt;As you've seen, when the shopping list webapp runs, the first thing that it needs to do is to display the current shopping list content. I've said that we're going to get this from a Firestore database so it's time for you to see what one of these looks like. In this section we're going to start by creating a database.&lt;/p&gt;

&lt;p&gt;The data structure I have in mind for this application might go something like the following:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rh5fmeD6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0aiov5fi49cqrg3n6mw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rh5fmeD6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0aiov5fi49cqrg3n6mw.png" alt="Test data structure" width="600" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, the "shopping list" data just consists of pairs of email addresses and purchase items. The idea is that the system should permit many different users to share the same database - the email fields will allow us to keep their shopping lists separate. If things take off, perhaps we'll have millions of users! &lt;/p&gt;

&lt;p&gt;In Cloud Firestore's NoSQL data model, data is stored in "documents" that contain fields mapping to values. These documents in turn are stored in "collections". A database thus consists of a set of collections inside each of which data is stored in documents. &lt;/p&gt;

&lt;p&gt;The modelling of data structures and the design of databases to hold them is an extremely important aspect of system design, well beyond the scope of this simple introduction. Suffice to say that the facilities provided by Google within the Firestore framework are a sophisticated response to the requirements of modern IT applications. You might find it useful to use the web to read around the subject - &lt;a href="https://www.couchbase.com/resources/why-nosql"&gt;Why successful enterprises rely on NoSQL&lt;/a&gt; might be a good place to start.&lt;/p&gt;

&lt;p&gt;One important element of data modelling is the identification of "keys" - data fields that can be used (generally in combination) to uniquely identify documents. Often there's a natural key - for example "city name" in a collection of documents describing the characteristics of individual cities. Annoyingly, in our userShoppingLists collection, there isn't a natural key - but this is quite commonly the case and so you'll not be too surprised to find that Firestore is happy to generate artificial keys automatically in this situation.&lt;/p&gt;

&lt;p&gt;Much of Google's Firestore documentation &lt;/p&gt;

&lt;p&gt;Actually, I've chosen this example precisely because its documents &lt;strong&gt;don't&lt;/strong&gt; have a natural key (much of Google's Firestore documentation decribes cases where a single field provides a natural key - something that in my experience is really quite unusual) and so my example pushes Firestore a bit harder. Firestore code for the two cases (natural key v generated key) is slightly different, the generated key form being a bit more complicated. But the advantage of using automatically-generated keys is that this approach can be used in all situations and so your code can follow a single style.&lt;/p&gt;

&lt;p&gt;It's time now to go back to the &lt;a href="https://console.firebase.google.com/"&gt;Firebase console &lt;/a&gt; for our webapp project. Select the "Firestore Database" tool from the column on the left and proceed to initialise the database.&lt;/p&gt;

&lt;p&gt;After a certain amount of preamble during which you specify a starting mode for security rules (select &lt;code&gt;test&lt;/code&gt; for now - we'll put things on a production level later) and select a geographical location for the google servers that will hold your data (for UK users, anything starting with eu will be fine for a test development). Click "done" to "provision" your database and reveal the Firestore "collections management page" for the project.&lt;/p&gt;

&lt;p&gt;It has to be said that the "management page" is a seriously tedious way of entering test data, but the screen works pretty well for the basic task of specifying and structuring collections in the first place. I don't think I can significantly improve on Google's documentation for this procedure, so I'll simply refer you to &lt;a href="https://cloud.google.com/firestore/docs/using-console"&gt;Managing Firestore with the console&lt;/a&gt; at this point. Try to create a collection called userShoppingLists for the data shown above. Remember that I have said that documents in the userShoppingLists collection should use automatically-generated keys. You should end up with something like the following:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s9eW_1dn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sxw3ycmu0tk1wvqls6t8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s9eW_1dn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sxw3ycmu0tk1wvqls6t8.png" alt="Firestore Collections Management Screen" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Those curious code in the userShoppingLists column are the automatically-generated keys for individual shopping list entries.&lt;/p&gt;

&lt;p&gt;Right, with all this preamble concluded, let's concentrate on the application logic and the Firebase code located in the index.js file. Here it is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// see https://firebase.google.com/docs/web/setup for latest browser modules source ref&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;initializeApp&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://www.gstatic.com/firebasejs/9.4.0/firebase-app.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;getFirestore&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;getDocs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;where&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;orderBy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;addDoc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updateDoc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;deleteDoc&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://www.gstatic.com/firebasejs/9.4.0/firebase-firestore.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firebaseConfig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;AIzaSyAPJ44X28caId8c3brUDM6FnKK5vQje6qM&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;authDomain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fir-expts-app.firebaseapp.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;projectId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fir-expts-app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;storageBucket&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fir-expts-app.appspot.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;messagingSenderId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1070731254062&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;appId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1:1070731254062:web:1e21b61bd95caeacdbc2bf&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;measurementId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;G-Q87QDR1F9T&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firebaseApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;initializeApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firebaseConfig&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getFirestore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firebaseApp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ab@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;useremail&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;additembutton&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;onclick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;addShoppingListDocument&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;displayShoppingList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;displayShoppingList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// retrieve the shoppingList documents for email and turn them into entries &lt;/span&gt;
    &lt;span class="c1"&gt;// in an editable Shopping List table&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userShoppingList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userShoppingListsCollection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;userShoppingLists&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userShoppingListsQuery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userShoppingListsCollection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;userEmail&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;==&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;orderBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;userPurchase&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;asc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userShoppingListsSnapshot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getDocs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userShoppingListsQuery&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;userShoppingListsSnapshot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;userShoppingList&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;`
        &amp;lt;input type='text' maxlength='30' size='20' id='o`&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;`' autocomplete='off'
            placeholder='`&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;userPurchase&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;`'
            value='`&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;userPurchase&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;`'&amp;gt;
            &amp;lt;button id =  'e`&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;`'&amp;gt;Update&amp;lt;/button&amp;gt;
            &amp;lt;button id =  'd`&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;`'&amp;gt;Delete&amp;lt;/button&amp;gt;&amp;lt;br&amp;gt;
            `&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;usershoppinglist&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;userShoppingList&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;userShoppingListsSnapshot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;e&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;onclick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;updateShoppingListDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;d&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;onclick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;deleteShoppingListDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;updateShoppingListDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// update the userPurchase field for document id&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newUserPurchase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;o&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;docRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;userShoppingLists&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;updateDoc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;docRef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;userPurchase&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newUserPurchase&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;deleteShoppingListDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// delete the document for document id&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;docRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;userShoppingLists&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;deleteDoc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;docRef&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;displayShoppingList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addShoppingListDocument&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// add a new document&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newUserPurchase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;newpurchaseitem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;docRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;addDoc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;userShoppingLists&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;userEmail&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;userPurchase&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newUserPurchase&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nx"&gt;displayShoppingList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;newpurchaseitem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The script starts with a bunch of &lt;code&gt;import&lt;/code&gt; statements. Firebase 9 delivers its library code to the application via "modules", one for each major function group (eg "authentication"). When we &lt;code&gt;import&lt;/code&gt; one of these, we must also declare the component functions that we want to use - the aim being to minimize the size of the application. &lt;/p&gt;

&lt;p&gt;One consequence of using module &lt;code&gt;import&lt;/code&gt; statements in a script is that a javascript file that contains them itself becomes a module - more on this later.&lt;/p&gt;

&lt;p&gt;Because in this post I want to concentrate on the essentials of Firestore coding, I've chosen to use the "browser module" form of the Firebase modules - files with an https:// address drawn down at run time from the web. In a production application, you'd use modules that you first draw down into your terminal environment and which you "package" into your javascript using a tool like "webpack" prior to deployment. This is more efficient, but since efficiency isn't an issue just now and deploying your project when you use "proper" modules adds complications (because browsers don't understand these) I've chosen to avoid this complication just now. So, "browser modules" it is.&lt;/p&gt;

&lt;p&gt;Immediately after the &lt;code&gt;import&lt;/code&gt; statements we get our first sight of a firebase function in action - an &lt;code&gt;initializeApp()&lt;/code&gt; call that will give our webapp (running in our browser) a &lt;code&gt;db&lt;/code&gt; object linking it to our database (sitting out on the web in the Google cloud). This link is delivered with reference to a &lt;code&gt;firebaseConfig&lt;/code&gt; json supplying all the necessary keys (see &lt;a href="https://eloquentjavascript.net/"&gt;Eloquent Javascript&lt;/a&gt; for a description of the json format). The contents of this json were defined when we created our Firebase project and can be found by opening the Firebase console for the project and clicking the gear wheel icon to view the project properties. I got these into my index.js file by simply copying and pasting. &lt;/p&gt;

&lt;p&gt;Once the webapp has successfully created its &lt;code&gt;db&lt;/code&gt; object, it's free to do anything it likes with this database. We'll talk about the security implications of this later, but for now let's just concentrate on applying this new-found freedom and using it to read a shopping list!&lt;/p&gt;

&lt;p&gt;If you scan down the remainder of the code you'll see it consists largely of four functions, one for each of the four CRUD operations. The first thing to note is how compact the codet is. For example, the &lt;code&gt;deleteShoppingListDocument(id)&lt;/code&gt; function used to delete a document with id &lt;code&gt;id&lt;/code&gt; from the userShoppingLists collection is just three lines long (and one of those is not strictly anything to do with the deletion process because it simply refreshes the screen to confirm the successful completion of the deletion operation). This, I suggest, is a modern miracle - in the past, such functions would have used sa whole bunch of complicated javascript calling an equally sophisticated piece of PHP code (or similar host-based language) stored in a separate file and hosted on a separate device. &lt;/p&gt;

&lt;p&gt;Sticking with the &lt;code&gt;deleteShoppingListDocument(id)&lt;/code&gt; function, note that the core of this is a call to a deleteDoc() function preceded by an &lt;code&gt;await&lt;/code&gt; keyword (an extension added to the javascript language only relatively recently). I spent some time in my previous "Jungle" post describing the "asynchronous" nature of javascript calls to file IO (input/output) functions. This is an example. In normal circumstances, a deleteDoc() call will certainly &lt;strong&gt;initiate&lt;/strong&gt; the necessary deletion action, but control flow in the program making the call will pass immediately to the next statement - ie, without waiting for the deleteDoc() result. In the present case, unless we take some special precautions, the &lt;code&gt;displayShoppingList(email)&lt;/code&gt; in the next statement might well simply show an unchanged display (because the deletion hasn't taken place yet)&lt;/p&gt;

&lt;p&gt;However, in the case of this particular piece of code, we've used the &lt;code&gt;await&lt;/code&gt; keyword. As a result, control doesn't reach the screen refresh call until the deleteDoc() has finished. Note that a call to deleteShoppingListDocument() itself won't wait for a result though. You still need to keep your wits about you when you're working with asynchronous operations!&lt;/p&gt;

&lt;p&gt;Note also that in order to use the &lt;code&gt;await&lt;/code&gt; keyword we have had to declare the parent &lt;code&gt;deleteShoppingListDocument(id)&lt;/code&gt;  function as &lt;code&gt;asynch&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I'm not going to go into detail about the precise form of the individual Firestore functions used to perform the CRUD operations - I think it's best if I refer you to Google's documentation at &lt;a href="https://firebase.google.com/docs/firestore/manage-data/add-data"&gt;Add data to Cloud Firestore&lt;/a&gt;. But there's one wrinkle that I &lt;strong&gt;do&lt;/strong&gt; want to mention.&lt;/p&gt;

&lt;p&gt;If you look at the code for the &lt;code&gt;additembutton&lt;/code&gt; button in the index.html file, you'll see that it doesn't specify what's to happen when the button is clicked. Normally I'd have done this by including an &lt;code&gt;onclick =&lt;/code&gt; clause to direct the button to the appropriate CRUD function. While this is an arrangement you might have used freely in the past with "ordinary" scripts, I'm afraid that we have to do things differently when we're using modular scripts.&lt;/p&gt;

&lt;p&gt;In this case, if you tried the conventional approach, when you clicked the button you'd find that your program would tell you that "your onclick function is undefined". What? But it's there - in the script! &lt;/p&gt;

&lt;p&gt;Well it might be in the script, but the script is declared as type module (it has to be in order to enable us to use the &lt;code&gt;import&lt;/code&gt; keyword to load our Firebase api functions) and the "namespace" for a module (ie the collection of variable and function names referenced in the script) are only available to that module. In particular, they're not available to the DOM. This arrangement is designed to ensure that modules don't interfere with each other (ie so they're 'modular'). &lt;/p&gt;

&lt;p&gt;What we have to do is add the onclick to the button dynamically &lt;strong&gt;in the module&lt;/strong&gt; once the DOM has loaded. So if you  back at the code for index.js you'll see that one of its first actions is to launch the following statement:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;document.getElementById('additembutton').onclick = function () { addShoppingListDocument() };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This completes the setup of the button and allows us to use it in the DOM.&lt;/p&gt;

&lt;p&gt;Things get a little more complicated in the displayShoppingList() function where we dynamically generate html to display complete buttons alongside the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; items on which they are to act (and note, in passing, how confused the html code specification is here - perhaps you'll see now why I was concerned to use the index.html file to define the layout aspect of the webapp). In this case you might think we could generate a button complete with its onclick specification all at the same time. But if you tried this, having inserted the code block into the DOM with the&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;document.getElementById('usershoppinglist').innerHTML = userShoppingList;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;instruction, you'd find that your new buttons failed in exactly the same way as previously described. What we have to do is first generate the code &lt;strong&gt;without&lt;/strong&gt; the onclick specification, update the DOM and &lt;strong&gt;then&lt;/strong&gt; add the onclicks. This explains the second&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    userShoppingListsSnapshot.forEach(function(doc) {
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;loop in the displayShoppingList() function's code. &lt;/p&gt;

&lt;p&gt;This is a nuisance, (entirely consequent on Firebase Version 9's move to a modular approach) but a small price to pay for the gains one obtains elsewhere through the use of the Firebase api. &lt;/p&gt;

&lt;p&gt;Now that I've homed in on the forEach structure, I think I should also say a bit about this too. "Queries" are used to get "snapshot" subsets of the documents in a collection in response to a specification of selection and sorting criteria. They're documented at &lt;a href="https://cloud.google.com/firestore/docs/query-data/queries"&gt;Querying and filtering data &lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once you've got a snapshot, the foreach construct allows you to work your way through all the documents that it contains. For each &lt;code&gt;doc&lt;/code&gt;, you have access to both its data items (as doc.data()."item name") as well as the document id itself (as doc.id). In this particular instance I use the document id as a convenient way of applying an identifier to the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements and supplying parameters to their onclick functions.&lt;/p&gt;

&lt;p&gt;Something else you should know about queries is that they will almost always need to be supported by an index (ie a quick way for Firestore to check which documents match selection criteria without reading them the whole collection). The data tab in the Firestore Database tool gives you a method of creating indexes, but you might actually find it easier just to let your queries fail and pick up the consequences in the browser system tool. This is because the error announcing such a failure will include a helpful link that, when clicked, will create the index for you. This is a seriously useful arrangement. Thank you Google!&lt;/p&gt;

&lt;p&gt;In summary, there are quite a few other "wrinkles" to using firestore functions on complex data structures, but overall, I'll think you'll find that everything works pretty smoothly. My own experience has been overwhelmingly positive - a &lt;strong&gt;huge&lt;/strong&gt; improvement over the technologies I've used previously.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-a-login-and-securing-the-database-from-unauthorised-access"&gt;
  &lt;/a&gt;
  Adding a login and securing the database from unauthorised access
&lt;/h3&gt;

&lt;p&gt;But we can't relax just yet. There's still a large hole in the functionality of this webapp because, when we initially configured our database, we created it as a "test" deployment.  Currently we're connecting to our firestore database by referencing our firebaseConfig data item with all its apikeys etc. Anybody skilled in the use of browser tools will be able to read this from our webapp and there's nothing at present to stop them copying this to their own webapp and thus gaining access to our database. &lt;/p&gt;

&lt;p&gt;Rather than trying to hide the firebaseConfig item (a fruitless task), Google provides a cloud-based arrangement, stored within our Firebase project and thus accessible only to us (via our Google account), that allows us to specify the tasks (read, write etc) that can be performed against specified criteria (eg "user logged into our project"). What I mean by "logged in" in this instance means "having presented a user id and password that matches the settings for a table of users also defined in our Firebase project". So, it's time to look at adding a login function to our webapp.&lt;/p&gt;

&lt;p&gt;The Firebase arrangements for protecting our database are defined using "rules" that we define using a simple coding system in the Firebase Console for our project.&lt;/p&gt;

&lt;p&gt;If we select the Firestore Database tool on the console and click the rules tab, we'll see the current rule specification. At this stage this will still be set to the initial "test" state and will look something like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
     allow read, write: if true;
    }  
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is basically saying "allow everybody both read and write access to everything". Only firestore apis are permitted to access firestore cloud data and every firestore api call (eg, deleteDoc()) asked to perform a read or write operation on a document will first inspect the project's rules to see whether or not that proposed action is permitted. While our rules remain as above, the api calls will allow everything. &lt;/p&gt;

&lt;p&gt;In our case, what we want is to arrange firstly that documents are only available to "logged-in" users and secondly that those users can only see documents stamped by their user-id (userEmail. The rule specification in this case needs to be changed to :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;service cloud.firestore {
  match /databases/{database}/documents {

    match /userShoppingLists/{document} {
        allow read, write : if request.auth != null &amp;amp;&amp;amp; request.auth.token.email == resource.data.userEmail;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See Google's documentation at &lt;a href="https://firebase.google.com/docs/rules/basics"&gt;Basic Security Rules&lt;/a&gt; for a description of the rules-specification language -  a wonderfully powerful and flexible arrangement. At the same time, however, it has to be said that the language can be difficult to work with. Fortunately the specification tab comes equipped with a "playground" that allows you to check out the validity of your rules before you publish them (ie, apply them to the live database).&lt;/p&gt;

&lt;p&gt;So far so good. But once your rules are updated as indicated above published, you'll find that your app won't work any more. If you "inspect" the code in the browser, you'll see that your database access commands are being rejected with "insufficient privilege" messages. THe problem of course is that the rules have now been set to allow database access only to users who are "logged in". How do your users get to be "logged-in"?&lt;/p&gt;

&lt;p&gt;The short answer is "by using one of the methods that Firebase provides to log them in".&lt;/p&gt;

&lt;p&gt;Quite the easiest way to achieve this (since we're using Google services ourselves) is to accept users as logged in if they're logged in with Google. To do this we simply replace the temporary &lt;code&gt;email = "ab@gmail.com";&lt;/code&gt; "fudge" setting a fixed email address, together with the window.onload function that launches the app by the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;provider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;GoogleAuthProvider&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getAuth&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="nx"&gt;signInWithPopup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// This gives you a Google Access Token. You can use it to access the Google API.&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;credential&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;GoogleAuthProvider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credentialFromResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;credential&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accessToken&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;// The signed-in user info.&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;useremail&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;additembutton&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;onclick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;addShoppingListDocument&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="nx"&gt;displayShoppingList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;// ...&lt;/span&gt;
    &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Please sign into your Google a/c to proceed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need to add a new import statement at the top of the code to draw in the new GoogleAuthProvider, signInWithPopup functions we're going to reference:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getAuth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;GoogleAuthProvider&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;signInWithPopup&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://www.gstatic.com/firebasejs/9.4.0/firebase-auth.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, to authorise Google login as a valid way of accessing the webapp, we need to click the "Signin-in-method" tab for the Firebase console's Authentication tool and enable Google as a "permitted sign-in provider". &lt;/p&gt;

&lt;p&gt;If you now redeploy the webapp, you'll find that it displays a popup window that checks for the existence of a logged-in Google account on your device. If it finds one, the popup disappears and the application displays the shopping list for the logged in email. If it &lt;strong&gt;can't&lt;/strong&gt; find one, the popup asks you to log in with one. Neat - this is seriously powerful IT and a great saver of development effort!&lt;/p&gt;

&lt;p&gt;If the account used to access the webapp is new to the project (in which case, of course, the webapp will display an empty shopping list, ready for the user to add purchase items), logging in also adds the account id to the Firebase console's list of application users for your project (thus allowing you to keep track of who's using it). You'll find this list under the Users tab of the Console's Authentication tool&lt;/p&gt;

&lt;p&gt;Recognising that not everybody wants to use Google sign-in for authentication, Firebase offers numerous alternative sign-in providers such as Twitter and Facebook. But if you want to be a bit more conventional and customise your own arrangements for registering users, Firebase functions are available for this as well. You can see an example of this arrangement in the &lt;code&gt;bablite.web.app&lt;/code&gt; pilot referenced earlier. Just start it up in the browser and "inspect" its index.js code to see how customised registration is achieved..&lt;/p&gt;

&lt;p&gt;Google's documentation for the various signon methods can be found at &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://firebase.google.com/docs/auth/web/google-signin"&gt;login with google&lt;/a&gt; and &lt;/li&gt;
&lt;li&gt;&lt;a href="https://firebase.google.com/docs/auth/web/password-auth"&gt;login with email&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-else-is-there-to-say"&gt;
  &lt;/a&gt;
  What else is there to say?
&lt;/h3&gt;

&lt;p&gt;If you've been following this post just to try out the technology, you can give yourself a pat on the back and stop now - you've seen a seriously useful application, advertised on the web and secured from malicious activity. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;But suppose you wanted to put this on a production basis with real users - perhaps users who are paying you for the privilege of using your app? In such a case you might want to look at the firebase emulator.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The firebase emulator&lt;/strong&gt;: Want to make some changes to your code? How do you do this without upsetting your users while you test the changes? What you need is somewhere else to source the webapp and perhaps another database as well. The firebase emulator allow you to run your webapp from files on your own machine and, if you choose, run it against a local Firebase database. This sounds as if this might be rather difficult to arrange, but actually the firebase design makes it really straightforward by providing an "emulator" system. Once you've installed the emulator you'll find you have access to exactly the same facilities that you enjoy in the live Firebase console. It's easy to install and operate too.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you've got a serious production webapp and want to keep ahead of the competition , you may also be concerned about efficiency. If you want your product to be "lean and mean" you need to look at the "tree-shaking" arrangements that Firebase 9 offers.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Webpack and "tree shaking"&lt;/strong&gt;: Google has really pulled out all the stops in version 9 to ensure that the code it produces meets the latest expectations for efficiency and resilience.  Sadly, because the procedure I've described thus far uses "browser modules" the code as described above can't take advantage of the new arrangements. But once again, the procedure is easier to apply than you might imagine. Basically, it just boils down to reverting the code to reference "proper" modules and using a terminal session to run &lt;code&gt;ẁebpack&lt;/code&gt; -a third-party piece of software - to produce a "compressed" version of the initial index.js file.This is then deployed in its place. It's really just a question of getting your "workflow" organised. You might also want to consider version control issues and bring Github into the picture as well.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A large webapp will need to cover a lot of ground - you'll need to work hard to keep the code tight and maintainable. Firebase "functions" let you both organise the code and spread the processing load.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Firebase Functions and Background tasks&lt;/strong&gt;: It makes sense to configure certain elements of your application's operations as background events. An example might be the despatch of an email when a user signs up for a new account. Situations like this will arise in many different situations and, since these actions are generally "secondary" to the main purpose of their parent transaction, it makes sense to handle them as background tasks. Firebase "functions" enable us to code these background tasks in javascript and launch them in response to trigger events fired by their parent transactions.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;There's a lot more to Cloud Services than Firestore databases. You may find you have a need for hosted "conventional" storage.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud storage&lt;/strong&gt;: How would you use your webapp to upload a conventional file into the Google cloud and read it back once it arrives there? Cloud Storage is available to provide an answer to this and any other storage requirements that don't conveniently fit into the database collection structures we've seen so far.&lt;/p&gt;

&lt;p&gt;However, I think you've suffered enough for now. But watch out for future posts in this series.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>firebase</category>
      <category>webdev</category>
    </item>
    <item>
      <title>A beginner's guide to Javascript development using Firebase V9. Part 1 - project configuration</title>
      <author>MartinJ</author>
      <pubDate>Mon, 15 Nov 2021 10:14:20 +0000</pubDate>
      <link>https://dev.to/mjoycemilburn/a-beginners-guide-to-javascript-development-using-firebase-v9-part-1-project-configuration-5bo3</link>
      <guid>https://dev.to/mjoycemilburn/a-beginners-guide-to-javascript-development-using-firebase-v9-part-1-project-configuration-5bo3</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;A previous post, (&lt;a href="https://dev.to/mjoycemilburn/a-path-through-the-jungle-a-quick-and-easy-and-completely-free-way-of-achieving-practical-results-in-the-world-of-it-21ei"&gt;A Path through the Jungle&lt;/a&gt;), showed in outline how a smart enthusiast, armed with nothing more than a knowledge of basic html and javascript could achieve very useful results in IT through the use of  Google's Firebase Cloud development system. The result of their efforts would be a "webapp", hosted for free on the web by Google, accessed via a browser on any type of web-enabled device and capable of performing really serious tasks. Sounds interesting?&lt;/p&gt;

&lt;p&gt;As an example of what can be achieved this way you might like to check out my own 'hobbyhorse'  webapp pilot at &lt;a href="https://bablite.web.app"&gt;https://bablite.web.app&lt;/a&gt; (use userid &lt;code&gt;guest@gmail.com&lt;/code&gt; with password &lt;code&gt;babliteguest&lt;/code&gt;). Not interested in Scottish Gaelic? Oh, well, never mind, just take note of the scope of this application and keep reading.&lt;/p&gt;

&lt;p&gt;Major changes consequent on the release of Firebase V9 this summer (Aug '21) have meant that the web is now cluttered with much out-of-date documentation. The general principles are getting obscured and so it seemed that this might be a good time to flesh out the brief introduction in the original post. &lt;/p&gt;

&lt;p&gt;But if you're an experienced developer who's just looking for a quick description of the changes, please accept my apologies now. This is a loooong post because it's intended for absolute beginners and concentrates more on the "why" and "wherefore" than the bald "how".&lt;/p&gt;

&lt;p&gt;Anyway - for those new to this game - if you've been following my suggestions thus far, you'll have got a basic grip of coding programming instructions using the html and javascript language. You'll also have got yourself familiar with the idea of using an IDE such as VSCode to create and edit the source files for these instructions. Very good. The next step is to consider how you might actually go about using Google Cloud services to build a webapp - executable code and shared data "hosted" (ie stored) remotely on the web and available to anyone who might wish to access it via the internet.&lt;/p&gt;

&lt;p&gt;In simple terms, what we're about here is arranging a mechanism to transfer our local project (ie, the collection of files that we've developed on our own hardware) up into the Cloud. Google refers to this process as "deployment". &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yDPQAbnO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uowjh5oz9ldkkhkjvxsr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yDPQAbnO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uowjh5oz9ldkkhkjvxsr.png" alt="Deployment" width="693" height="443"&gt;&lt;/a&gt;&lt;br&gt;
In the diagram above, "Assets" refers to the collection of resources - icon files and graphic images etc - that you reference in your code and which therefore need to accompany your webapp into the cloud. Once you get your head round the concept, the process is actually pretty routine. With everything  correctly configured, you can "redeploy" changes to your application with just a couple of keystrokes. But getting your head round the multitudinous components of Google Cloud services and setting them up correctly in the first place represents quite a steep learning curve. So buckle up for a bumpy initial ride. Don't worry - it'll be worth it!&lt;/p&gt;

&lt;p&gt;If you've never used Google's services before you'll need to negotiate four separate steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Obtain a Google gmail account&lt;/li&gt;
&lt;li&gt;Create a Firebase project under this account&lt;/li&gt;
&lt;li&gt;Use the "Hosting tool" to register the webapp&lt;/li&gt;
&lt;li&gt;Set up your local "Deployment" environment&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#step-1-obtain-a-google-gmail-account"&gt;
  &lt;/a&gt;
  Step 1 - Obtain a Google gmail account
&lt;/h3&gt;

&lt;p&gt;You may have a gmail account already of course. If not, follow instructions at &lt;a href="https://support.google.com/accounts/answer/27441?hl=en"&gt;Create a Google Account&lt;/a&gt; to get one. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-2-create-a-firebase-project-and-reserve-your-webapps-url"&gt;
  &lt;/a&gt;
  Step 2- Create a Firebase project and reserve your webapp's URL
&lt;/h3&gt;

&lt;p&gt;Launch the &lt;a href="https://console.firebase.google.com/"&gt;Google Firebase console&lt;/a&gt; to create your Firebase Project. Click "add project" and note the advice about Google Cloud projects in general. Google Firebase projects are just a special case of a wider class of Google projects that can be viewed at the parent &lt;a href="https://console.cloud.google.com/"&gt;Google Cloud console&lt;/a&gt;. We can safely ignore the cloud console for now.&lt;/p&gt;

&lt;p&gt;The next stage is to specify a project-id for the webapp - the "root" of its url (which will actually take the form 'project-id'.web.app). It's important that you get this right as, once the project-id is registered, you can't change it. Worse, once you've "claimed" a project id, nobody else can claim it either, even though you may subsequently have deleted it!&lt;/p&gt;

&lt;p&gt;Matters are complicated by Google first asking you to supply a "Project name" for the parent project and then proposing a Project-id based on this (ie, rather than the other way around). It's odd that they should do this as the Project Name is the least of your worries (it serves only to distinguish projects within your Google account and can be edited at any time). But this is how things work at November 2021. As an example, you might enter "My New Webapp" as the project name, for which Google would then propose a Project-id such as my-new-webapp-39959. However, you're then free to edit the proposed project Id and massage it into a more acceptable form - subject to the constraint, as mentioned above, that nobody else has used your proposed id. The Project-id must also be at least six characters long and can only use numbers, lower-case characters and hyphens. &lt;/p&gt;

&lt;p&gt;In the examples that follow I've used a project I registered with a Project-id of  "fir-expts-app" for a project named "Firebase Experiments"&lt;/p&gt;

&lt;p&gt;Once you've finished wrestling with Google over your Project-id, click "Continue" to reveal a page that talks about "Google analytics". This is something you can safely ignore at this stage (it's only generally relevant to the investigation of performance issues on live apps), so decline this and continue.&lt;/p&gt;

&lt;p&gt;The lights now dim a little as Google registers your project. Then, after you've clicked a final "continue", you'll find yourself in the main Firebase Console window for your project. You'll spend quite a lot of time on this page and its sub-pages during the development process, so best get used to it. Here's a screenshot&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sU1zYLkA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71pjd8wofylmddif29jq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sU1zYLkA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71pjd8wofylmddif29jq.png" alt="Firebase Console Window" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The left-hand side of the screen is devoted to tool tabs and I've increased the screen character size a little so we can concentrate on the Project Overview gearwheel and the "Build" tool stack below this As you may imagine the full tool stack is a lot more extensive but, for the present, this is all we need.&lt;/p&gt;

&lt;p&gt;Note also that the Test Firebase Project is automatically registered at this stage for the "Spark plan". I've said previously that using Google's Cloud Services is free, and the "Spark plan" does indeed give you access to most services free of charge. However, once your usage strays outside certain (extremely generous) limits you will be asked to register for paid plans. See &lt;a href="https://firebase.google.com/pricing"&gt;Firebase Pricing Plans&lt;/a&gt; for details.&lt;/p&gt;

&lt;p&gt;Firebase, as you'll slowly come to appreciate, is made up of a number of distinct "modules", each addressing different aspects of the system. Not all of these are necessarily relevant to any given application and in this post I'm just going to concentrate on the following three:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Authentication&lt;/strong&gt; - specification of the way that users identify themselves to the application, and management of individual registrations&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Firestore Database&lt;/strong&gt; - the specification and management of a "NoSQL" database for the application and the specification of security rules to protect it.e&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Hosting&lt;/strong&gt; - registration of the type of application that's being developed (a webapp in this case).&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#step-3-use-the-hosting-tool-to-register-the-webapp"&gt;
  &lt;/a&gt;
  Step 3 -  use the "Hosting tool" to register the webapp
&lt;/h3&gt;

&lt;p&gt;Click the "Hosting" tab in the Firebase console to reveal the following window: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3AmvvDE2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w0vr0uekzkiix8umi60n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3AmvvDE2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w0vr0uekzkiix8umi60n.png" alt="Firebase Project Settings" width="880" height="316"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click the &amp;lt;/&amp;gt; icon to tell Firebase you're developing a webapp, supply a nickname in the screen that follows (I suggest you just use your Project-id to avoid further  confusion) and then click "Register" to complete the Firebase side of the hosting setup.&lt;/p&gt;

&lt;p&gt;You might as well close down the Firebase console now. Though the Hosting window still has plenty of advice about what to do next, in practice you're on your own here. The Firebase advice, while very good at telling you "what" to do, isn't so helpful when it comes to "why" and "wherefore". If you're not too familiar with the tools you are now expected to use, all of this could leave you seriously confused if things start to go wrong. Let's take things a bit more thoughtfully.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-4-set-up-your-local-deployment-environment"&gt;
  &lt;/a&gt;
  Step 4- set up your local "Deployment" environment
&lt;/h3&gt;

&lt;p&gt;The aim of this step is to use Google utilities to create files and folders, both in your "project" (ie the folder of files that you're going to build up in your PC or Mac to hold the code for your webapp) and elsewhere. These will ultimately allow you to run the "deployment process. This is a big step, so best take a deep breath now.&lt;/p&gt;

&lt;p&gt;Let's imagine that you've already created your project folder (say firexptsapp) and added this to the VSCode workspace. Once you've completed Step 4 you'll be able to start a "Terminal" session (I'll explain just what ths is in a moment) in VSCode that targets the firexptsapp project and enables you to issue a one-line command "deploy" command to copy your webapp onto the Google servers. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;firebase deploy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once you've done this, anybody, anywhere in the world will be able to  run your webapp by typing its name into their web browser. Wow! But getting to this point will require quite a bit of effort.&lt;/p&gt;

&lt;p&gt;If your experience of IT to date has been entirely through the use of "click and point" Windows (Microsoft) and iOS (Mac)screens, Step 4 with its reliance on "Terminal" sessions is likely to represent a big challenge.&lt;/p&gt;

&lt;p&gt;The word "terminal" in this context takes us back to the early days of computing, long before the appearance of the "graphical user interfaces" that we  use today to drive IT applications. Developers then used "terminal" devices such as teletypes or "vdu" visual display units and gave their operating system instructions by typing them in as in "commands" rather than clicking button prompts. These "command shell" interfaces have great advantages for system programmers as they're easy to set up and highly flexible. The Google developers have chosen to use this approach for configuring and applying Firebase project deployment. While this may seem a retrograde step, please accept my assurance that once you become familiar with the concept, the arrangement is perfectly practical and, in any case, will add another useful building block to your growing range of development skills. Command shell interfaces are currently widely used in this sort of situation&lt;/p&gt;

&lt;p&gt;If you're using an IDE like VSCode, you'll find that it provides a facility to start a terminal session focussed on your firexptsapp project. Once you've opened your terminal window, it displays a "command prompt" confirming the current directory and waits for you to type in a command. &lt;/p&gt;

&lt;p&gt;TThe command we wish to perform is the &lt;code&gt;firebase deploy&lt;/code&gt; command I introduced above. But if you tried this now you'd just get an error because, at this stage, the system doesn't know what &lt;code&gt;firebase&lt;/code&gt; means. The first thing we need to do, therefore, is add the Google files and folders required to supply this meaning. To achieve this we'll use the following command in the terminal session:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install -g firebase-tools&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But now we hit another snag as it's likely that the system doesn't know what &lt;code&gt;npm&lt;/code&gt; is either - possibly you yourself are in the same position. And then because &lt;code&gt;npm&lt;/code&gt; is a Javascript program, we need an application called &lt;code&gt;Node.js&lt;/code&gt; to run it. So you'll have to install this too.&lt;/p&gt;

&lt;p&gt;Right, you are probably now wishing that you'd never heard of Firebase, but stick with me, because this is as deep as we're going to dive and all of this is yet more useful experience.&lt;/p&gt;

&lt;p&gt;Let's start with an explanation of what &lt;code&gt;Node.js&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt; are. The Google software that you need to run in order to configure your firexptsapp folder is distributed from central web-based libraries in the form of "packages" - carefully structured files of code to perform particular tasks. Because many of the tasks that your package needs to perform are tasks that are common to other similar packages, a package will likely call upon other packages to perform these rather then coding them afresh. These packages in turn may call upon other packages, and so on. At the end of the day, therefore, in order for your package to run in your terminal session, all the necessary bit must be hauled down from the central repository and assembled in folders on your local computer. For this, you need a "package manager". &lt;code&gt;npm&lt;/code&gt; is the package manager we're going to use in this particular exercise.&lt;/p&gt;

&lt;p&gt;A new problem now arises. As already mentioned,  &lt;code&gt;npm&lt;/code&gt; is written in javascript and so needs an environment in which it can run. The only such environment you've encountered thus far is a computer browser and this is not something that's considered appropriate for this particular application. &lt;code&gt;Node.js&lt;/code&gt; is the environment of choice for systems developers in these circumstances. This can be installed from the web, just like you might install any other Windows or OS app. Once it's installed, you can then start it up in a terminal session and type in javascript commands. In this sense, it's just like the facility you saw in the browser system tools console that you were introduced to in the "debugging" section of the original "Path" post.&lt;/p&gt;

&lt;p&gt;So, all that said , here we go with Step 4 (see &lt;a href="https://firebase.google.com/docs/cli#mac-linux-npm"&gt;Firebase CLI reference&lt;/a&gt; for further background, if you feel you need it):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.1 Install Node and &lt;code&gt;npm&lt;/code&gt;&lt;/strong&gt; - see &lt;a href="https://nodejs.org/en/"&gt;OpenJs Home Page&lt;/a&gt; for instructions (I think that it's generally best if I refer you to source documents for procedures like this so you can be sure you're always looking at the latest information). Conveniently, you'll find that currently you don't have to install &lt;code&gt;npm&lt;/code&gt; itself explicitly  - installing &lt;code&gt;Node.js&lt;/code&gt; automatically installs &lt;code&gt;npm&lt;/code&gt; as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.2 Install firebase-tools&lt;/strong&gt; -  we're now in a position to install the Firebase CLI. So, open a terminal session for your project and type in the command first described above&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install -g firebase-tools&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If this is your first time with &lt;code&gt;npm&lt;/code&gt;, you may find this particular ride a somewhat alarming experience. Unpacking a complex package like the CLI is an extremely complex process because &lt;code&gt;npm&lt;/code&gt; is at every stage faced with multiple versions of sub-packages and has to deal with possible incompatibilities. The process may take some time and may, indeed, occasionally appear to have died! But stick with it until it redisplays the command prompt and don't be too alarmed by any warnings that may be displayed. As long as you're using the most up to date version of &lt;code&gt;npm&lt;/code&gt; (see &lt;a href="https://docs.npmjs.com/try-the-latest-stable-version-of-npm"&gt;Try the latest version of npm&lt;/a&gt; if you're having problems), everything should be fine. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.3 Log into Firebase using your Google account&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Type the following command into the terminal &lt;/p&gt;

&lt;p&gt;&lt;code&gt;firebase login&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Unless you're already logged in, this should open up a browser window requesting your Google account details. Type these in to proceed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.4 Configure your project as a Firebase project&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is where we add all the necessary files and folders to enable us, finally, to achieve our aim of running a &lt;code&gt;firebase deploy&lt;/code&gt; command. &lt;/p&gt;

&lt;p&gt;With your terminal window focussed on your project directory, type the following command: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;firebase init&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now take another deep breath. We're nearly done but this is another intimidating step.&lt;/p&gt;

&lt;p&gt;What we're doing now is running the Firebase CLI ((Command Line Interface) in a way that allows us to tell it how we want to configure our project.&lt;/p&gt;

&lt;p&gt;As we've already seen in the firebase console, firebase is made up of numerous modules - Firestore (the NoSQL database manager), Hosting (the services that support "deployment") and so on. Many of these are modules that at some point we might want to operate on the local machine (ie as well as on the Live Firebased console). A good example is the Firebase emulator that will allow you to run a webapp locally against a local Firestore database - quite a handy thing if you need to test a fix to a webapp that's already gone live. &lt;/p&gt;

&lt;p&gt;But at this stage, the only local service we &lt;em&gt;really&lt;/em&gt; need is "hosting". Adding anything else just now is only going to further confuse your already overloaded brain. You can always run firebase init again another time to add further services.&lt;/p&gt;

&lt;p&gt;So, once you've launched the init process and confirmed that "yes", you do want to proceed (by typing Y and hitting the return key), select Hosting from the table of installation options that now appears. &lt;/p&gt;

&lt;p&gt;Because terminal windows don't respond to "point and click" instructions, this is a rather cumbersome procedure. You have to proceed by using the arrow keys on your keyboard. Press the down-arrow key to  highlight the line that says "Hosting: Configure files for Firebase Hosting" , press the spacebar and then activate your request by pressing the return key. &lt;/p&gt;

&lt;p&gt;The first thing the CLI now asks you is the name of the Firebase project to be associated with this local installation. Selecting the "use an existing project" option should reveal a table containing the name of your Firebase project ("Firebase Experiments" in this example). Select this using the arrow key and proceed to "Hosting setup" wherein the CLI will ask you yet more questions.&lt;/p&gt;

&lt;p&gt;Press the return key to select  "public" as your public directory (more on this in a moment) and "Y" to have "hosting" configured as a "single-page app" (more, ditto) and, finally, "N" in response to "Set up automatic builds and deploys with Github".&lt;/p&gt;

&lt;p&gt;And now - cue fanfare of trumpets - the CLI should respond by saying "Firebase initialization complete!" and returning you to the command prompt line.&lt;/p&gt;

&lt;p&gt;Believe it or not, you're now ready to perform your first "deploy". I know you haven't actually written a line of code yet, but the CLI installation procedure will have created a demo index.html script in your project and so we can trial the deployment procedure right now.  All you have to do is enter the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;firebase deploy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;in response to which, you should see the CLI return something like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;PS C:\Users\webappdeveloper\firexptsapp&amp;gt; firebase deploy

&amp;gt; === Deploying to 'fir-expts-app'...

i  deploying hosting
i  hosting[fir-expts-app]: beginning deploy...
i  hosting[fir-expts-app]: found 1 files in public
+  hosting[fir-expts-app]: file upload complete
i  hosting[fir-expts-app]: finalizing version...
+  hosting[fir-expts-app]: version finalized
i  hosting[fir-expts-app]: releasing new version...
+  hosting[fir-expts-app]: release complete

+  Deploy complete!

Project Console: https://console.firebase.google.com/project/fir-expts-app/overview
Hosting URL: https://fir-expts-app.web.app
PS C:\Users\webappdeveloper\fir-expts-app&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That line &lt;code&gt;Hosting URL: https://fir-expts-app.web.app&lt;/code&gt; should look familiar - yes it's the name of the webapp. Copy this to the clipboard and paste it into your favourite browser. When you press the return key, the browser should display something like the following:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mfb75grf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwpqeay14o2zovh23zc4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mfb75grf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwpqeay14o2zovh23zc4.png" alt="Default webapp" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great - you've just deployed an app into the Google cloud. Let's look into your project folder to see where this code has come from. The structure of your folder should look like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fir-expts-app
    public
        index.html
    .firebasesrc
    .gitignore
    firebase.json  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The project directory was empty to start with so &lt;strong&gt;all&lt;/strong&gt; of these files must have been created by &lt;code&gt;firebase init&lt;/code&gt;. What are they all?&lt;/p&gt;

&lt;p&gt;Well, the &lt;code&gt;.firebasesrc&lt;/code&gt; file is mainly just there to mark the directory as a firebase project, and the &lt;code&gt;.gitignore&lt;/code&gt; is a file in which we can specify any files that we would not wish to see copied to our &lt;code&gt;git&lt;/code&gt; project (a version-control/open-source-sharing system) if we were using one - which,in this case, we're not. So, moving on to more interesting things, you might look at the content of the &lt;code&gt;firebase.json&lt;/code&gt; file. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;firebase.json&lt;/code&gt; file is used by &lt;code&gt;firebase deploy&lt;/code&gt; to guide the deployment process (see &lt;a href="https://firebase.google.com/docs/hosting/full-config"&gt;Configure Hosting Behaviour&lt;/a&gt; for details). In the default configuration - which is what we have just created - this will upload &lt;strong&gt;all&lt;/strong&gt; files in the &lt;code&gt;public&lt;/code&gt; directory to our Google Cloud project (except for those explicitly directed to be ignored, as above). &lt;/p&gt;

&lt;p&gt;But for the present, the main thing you'll be interested in is the auto-generated &lt;code&gt;index.html&lt;/code&gt; file in the &lt;code&gt;public&lt;/code&gt; folder. This is what you've just deployed to generate the screen you saw above and &lt;strong&gt;this&lt;/strong&gt; is where you will create your &lt;strong&gt;own&lt;/strong&gt; webapp code. &lt;/p&gt;

&lt;p&gt;Onward and upward to my next post then - &lt;a href="https://dev.to/mjoycemilburn/a-beginners-guide-to-javascript-development-using-firebase-v9-part-2-coding-a-simple-webapp-4e5i"&gt;A beginner's guide to Javascript development using Firebase V9. Part 2 - coding a simple webapp&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>firebase</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Persistent Problem Statement : - Secret Key</title>
      <author>Gourav Kadu</author>
      <pubDate>Mon, 15 Nov 2021 10:06:20 +0000</pubDate>
      <link>https://dev.to/gouravmpk/persistent-problem-statement-secret-key-34pi</link>
      <guid>https://dev.to/gouravmpk/persistent-problem-statement-secret-key-34pi</guid>
      <description>&lt;h1&gt;
  &lt;a href="#statement"&gt;
  &lt;/a&gt;
  Statement
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Bob has to send a secret code 5 to his boss. He designs a method to encrypt the code using two key&lt;br&gt;
values N and M. The formula that he uses to develop the encrypted code is shown below:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(((S^N % 10)^M)%1000000007)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#input-format"&gt;
  &lt;/a&gt;
  Input Format
&lt;/h3&gt;

&lt;p&gt;The input consists of an integer secretCode, representing the secret code (S).&lt;/p&gt;

&lt;p&gt;The second line consists of an integer firstkey, representing the first key value (N)&lt;/p&gt;

&lt;p&gt;The third line consists of an integer secondkey, representing the second key value (M).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h3&gt;

&lt;p&gt;Print an integer representing thecode encrypted by Bob.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;

&lt;p&gt;Input:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;2
3
4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;4096
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#explanation"&gt;
  &lt;/a&gt;
  Explanation
&lt;/h3&gt;

&lt;p&gt;S=2 , N=3 , M = 4 and the formula of the encrypted code is:&lt;br&gt;
(((S^N % 10)^M)%1000000007)&lt;br&gt;
((2^3 % 10)^3)%1000000007) = 4096&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h2&gt;

&lt;p&gt;To edit the code &lt;a href="https://www.jdoodle.com/a/42f3"&gt;click here&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//secret key Persistent
import java.util.Scanner;
import java.lang.Math;

public class persistent2 {
    public static int findSecretCode(int secretCode, int firstKey , int secondKey) {
        int q= (int) Math.pow(secretCode,firstKey);
        int w =q%10;
        int e = (int) Math.pow(w,secondKey);

    int res = e%1000000007;
        return res;
    }
        public static void main(String args[]) 
        {
            Scanner in= new Scanner(System.in);
            int secretCode = in.nextInt();
            int firstKey =in.nextInt();
            int secondKey = in.nextInt();

    System.out.println(findSecretCode(secretCode,  firstKey , secondKey));
        }

    }



&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
    </item>
    <item>
      <title>How to Scrape Hotel Listings from Booking.com using Python and BeautifulSoup?</title>
      <author>Scraping Intelligence</author>
      <pubDate>Mon, 15 Nov 2021 10:02:56 +0000</pubDate>
      <link>https://dev.to/website_scraper/how-to-scrape-hotel-listings-from-bookingcom-using-python-and-beautifulsoup-12dk</link>
      <guid>https://dev.to/website_scraper/how-to-scrape-hotel-listings-from-bookingcom-using-python-and-beautifulsoup-12dk</guid>
      <description>&lt;p&gt;Scraping hotel listings from numerous websites is one of the most popular Web Scraping apps. This might be done by keeping an eye on rates, creating an aggregator, or improving the UX of existing hotel booking platforms.&lt;/p&gt;

&lt;p&gt;This is accomplished with the help of a simple script. We’ll use BeautifulSoup to retrieve information, and we’ll use Booking.com to find hotel information.&lt;/p&gt;

&lt;p&gt;To begin, we’ll need to get the Booking.com search results page and set up BeautifulSoup to enable us query the page for meaningful data using CSS selectors.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-coding-utf8-"&gt;
  &lt;/a&gt;
  -&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-
&lt;/h1&gt;

&lt;p&gt;from bs4 import BeautifulSoup&lt;br&gt;
import requestsheaders = {'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML, like Gecko) Version/9.0.2 Safari/601.3.9'}&lt;br&gt;
url = '&lt;a href="https://www.booking.com/searchresults.html?label=gen173nr-1FCAEoggI46AdIM1gEaGyIAQGYATG4AQfIAQzYAQHoAQH4AQKIAgGoAgO4AvTIm_IFwAIB;sid=7101b3fb6caa095b7b974488df1521d2;city=-2109472;from_idr=1&amp;amp;;dr_ps=IDR;ilp=1;d_dcp=1'response=requests.get(url,headers=headers)"&gt;https://www.booking.com/searchresults.html?label=gen173nr-1FCAEoggI46AdIM1gEaGyIAQGYATG4AQfIAQzYAQHoAQH4AQKIAgGoAgO4AvTIm_IFwAIB;sid=7101b3fb6caa095b7b974488df1521d2;city=-2109472;from_idr=1&amp;amp;;dr_ps=IDR;ilp=1;d_dcp=1'response=requests.get(url,headers=headers)&lt;/a&gt;&lt;br&gt;
soup=BeautifulSoup(response.content,'lxml')&lt;br&gt;
We also pass the user agent information to imitate a browser call in order to avoid being blacklisted.&lt;/p&gt;

&lt;p&gt;Let’s take a look at the Booking.com search results for a specific destination. As you can see, it appears to be this way.&lt;/p&gt;

&lt;p&gt;Image&lt;/p&gt;

&lt;p&gt;When we examine the page, we notice that each item’s HTML is contained within a tag with the class sr_property_block.&lt;/p&gt;

&lt;p&gt;Image&lt;/p&gt;

&lt;p&gt;We could simply use this to divide the Html file into these cards, each of which has information about a single object, such as this:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-coding-utf8-"&gt;
  &lt;/a&gt;
  -&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-
&lt;/h1&gt;

&lt;p&gt;from bs4 import BeautifulSoup&lt;br&gt;
import requestsheaders = {'&lt;br&gt;
User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) &lt;br&gt;
AppleWebKit/601.3.9 (KHTML, like Gecko) &lt;br&gt;
Version/9.0.2 Safari/601.3.9'}&lt;br&gt;
url = '&lt;a href="https://www.booking.com/searchresults.html?label=gen173nr-1FCAEoggI46AdIM1gEaGyIAQGYATG4AQfIAQzYAQHoAQH4AQKIAgGoAgO4AvTIm_IFwAIB&amp;amp;sid=eae1a774e77c394c5e69703d37e033a3&amp;amp;sb=1&amp;amp;src=searchresults&amp;amp;src_elem=sb&amp;amp;error_url=https://www.booking.com/searchresults.html?label=gen173nr-1FCAEoggI46AdIM1gEaGyIAQGYATG4AQfIAQzYAQHoAQH4AQKIAgGoAgO4AvTIm_IFwAIB;sid=eae1a774e77c394c5e69703d37e033a3;tmpl=searchresults;city=-2109472"&gt;https://www.booking.com/searchresults.html?label=gen173nr-1FCAEoggI46AdIM1gEaGyIAQGYATG4AQfIAQzYAQHoAQH4AQKIAgGoAgO4AvTIm_IFwAIB&amp;amp;sid=eae1a774e77c394c5e69703d37e033a3&amp;amp;sb=1&amp;amp;src=searchresults&amp;amp;src_elem=sb&amp;amp;error_url=https://www.booking.com/searchresults.html?label=gen173nr-1FCAEoggI46AdIM1gEaGyIAQGYATG4AQfIAQzYAQHoAQH4AQKIAgGoAgO4AvTIm_IFwAIB;sid=eae1a774e77c394c5e69703d37e033a3;tmpl=searchresults;city=-2109472&lt;/a&gt;;&lt;br&gt;
class_interval=1;dest_id=-2109472;&lt;br&gt;
dest_type=city;dr_ps=IDR;dtdisc=0;&lt;br&gt;
from_idr=1;ilp=1;inac=0;index_postcard=0;label_click=undef;&lt;br&gt;
offset=0;postcard=0;room1=A%2CA;sb_price_type=total;shw_aparth=1;slp_r_match=0;&lt;br&gt;
srpvid=7df1609ef03a0103;ss_all=0;ssb=empty;sshis=0;top_ufis=1&amp;amp;;&amp;amp;sr_autoscroll=1&amp;amp;ss=Rishīkesh&amp;amp;is_ski_area=0&amp;amp;ssne=Rishīkesh&amp;amp;ssne_untouched=Rishīkesh&amp;amp;city=-2109472&amp;amp;checkin_year=2020&amp;amp;checkin_month=3&amp;amp;checkin_monthday=4&amp;amp;checkout_year=2020&amp;amp;checkout_month=3&amp;amp;checkout_monthday=5&amp;amp;group_adults=2&amp;amp;group_children=0&amp;amp;no_rooms=1&amp;amp;from_sf=1'response=requests.get(url,headers=headers)&lt;br&gt;
soup=BeautifulSoup(response.content,'lxml')&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#printsoupselectacarouselcard0gettext"&gt;
  &lt;/a&gt;
  print(soup.select('.a-carousel-card')[0].get_text())
&lt;/h1&gt;

&lt;p&gt;for item in soup.select('.sr_property_block'):&lt;br&gt;
    try:&lt;br&gt;
        print('----------------------------------------')&lt;br&gt;
        print('----------------------------------------')&lt;br&gt;
    except Exception as e:&lt;br&gt;
        #raise e&lt;br&gt;
        print('')&lt;br&gt;
When you execute it:&lt;/p&gt;

&lt;p&gt;python3 scrapeBooking.py&lt;br&gt;
The code is clearly isolating the HTML of the cards.&lt;/p&gt;

&lt;p&gt;Image&lt;/p&gt;

&lt;p&gt;On closer inspection, you’ll notice that the hotel’s name is always preceded by the sr-hotel-name-class… While we’re at it, let’s collect the number of reviews, pricing, and ratings.&lt;/p&gt;

&lt;p&gt;for item in soup.select('.sr_property_block'):&lt;br&gt;
try:&lt;br&gt;
print('----------------------------------------')&lt;br&gt;
print(item.select('.sr-hotel_&lt;em&gt;name')[0].get_text().strip())&lt;br&gt;
print(item.select('.hotel_name_link')[0]['href'])&lt;br&gt;
print(item.select('.bui-review-score&lt;/em&gt;&lt;em&gt;badge')[0].get_text().strip())&lt;br&gt;
print(item.select('.bui-review-score&lt;/em&gt;&lt;em&gt;text')[0].get_text().strip())&lt;br&gt;
print(item.select('.bui-review-score&lt;/em&gt;&lt;em&gt;title')[0].get_text().strip())&lt;br&gt;
print(item.select('.hotel_image')[0]['data-highres'])&lt;br&gt;
print(item.select('.bui-price-display&lt;/em&gt;_value')[0].get_text().strip())&lt;br&gt;
We also attempted to obtain the hotel image and link, as well as other critical pieces of information.&lt;/p&gt;

&lt;p&gt;This is how the entire code appears.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-coding-utf8-"&gt;
  &lt;/a&gt;
  -&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-
&lt;/h1&gt;

&lt;p&gt;from bs4 import BeautifulSoup&lt;br&gt;
import requestsheaders = {'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML, like Gecko) Version/9.0.2 Safari/601.3.9'}&lt;br&gt;
url = '&lt;a href="https://www.booking.com/searchresults.html?label=gen173nr-1FCAEoggI46AdIM1gEaGyIAQGYATG4AQfIAQzYAQHoAQH4AQKIAgGoAgO4AvTIm_IFwAIB&amp;amp;sid=eae1a774e77c394c5e69703d37e033a3&amp;amp;sb=1&amp;amp;src=searchresults&amp;amp;src_elem=sb&amp;amp;error_url=https://www.booking.com/searchresults.html?label=gen173nr-1FCAEoggI46AdIM1gEaGyIAQGYATG4AQfIAQzYAQHoAQH4AQKIAgGoAgO4AvTIm_IFwAIB"&gt;https://www.booking.com/searchresults.html?label=gen173nr-1FCAEoggI46AdIM1gEaGyIAQGYATG4AQfIAQzYAQHoAQH4AQKIAgGoAgO4AvTIm_IFwAIB&amp;amp;sid=eae1a774e77c394c5e69703d37e033a3&amp;amp;sb=1&amp;amp;src=searchresults&amp;amp;src_elem=sb&amp;amp;error_url=https://www.booking.com/searchresults.html?label=gen173nr-1FCAEoggI46AdIM1gEaGyIAQGYATG4AQfIAQzYAQHoAQH4AQKIAgGoAgO4AvTIm_IFwAIB&lt;/a&gt;;&lt;br&gt;
sid=eae1a774e77c394c5e69703d37e033a3;tmpl=searchresults;&lt;br&gt;
city=-2109472;class_interval=1;&lt;br&gt;
dest_id=-2109472;dest_type=city;&lt;br&gt;
dr_ps=IDR;dtdisc=0;&lt;br&gt;
from_idr=1;ilp=1;inac=0;index_postcard=0;label_click=undef;&lt;br&gt;
offset=0;postcard=0;room1=A%2CA;sb_price_type=total;&lt;br&gt;
shw_aparth=1;slp_r_match=0;srpvid=7df1609ef03a0103;&lt;br&gt;
ss_all=0;ssb=empty;sshis=0;top_ufis=1&amp;amp;;&amp;amp;sr_autoscroll=1&amp;amp;ss=Rishīkesh&amp;amp;is_ski_area=0&amp;amp;ssne=Rishīkesh&amp;amp;ssne_untouched=Rishīkesh&amp;amp;city=-2109472&amp;amp;checkin_year=2020&amp;amp;checkin_month=3&amp;amp;checkin_monthday=4&amp;amp;checkout_year=2020&amp;amp;checkout_month=3&amp;amp;checkout_monthday=5&amp;amp;group_adults=2&amp;amp;group_children=0&amp;amp;no_rooms=1&amp;amp;from_sf=1'response=requests.get(url,headers=headers)&lt;br&gt;
soup=BeautifulSoup(response.content,'lxml')#print(soup.select('.a-carousel-card')[0].get_text())for item in soup.select('.sr_property_block'):&lt;br&gt;
    try:&lt;br&gt;
        print('----------------------------------------')&lt;br&gt;
        print(item.select('.sr-hotel_&lt;em&gt;name')[0].get_text().strip())&lt;br&gt;
        print(item.select('.hotel_name_link')[0]['href'])&lt;br&gt;
        print(item.select('.bui-review-score&lt;/em&gt;&lt;em&gt;badge')[0].get_text().strip())&lt;br&gt;
        print(item.select('.bui-review-score&lt;/em&gt;&lt;em&gt;text')[0].get_text().strip())&lt;br&gt;
        print(item.select('.bui-review-score&lt;/em&gt;_title')[0].get_text().strip())&lt;br&gt;
        print(item.select('.hotel_image')[0]['data-highres'])&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    print(item.select('.bui-price-display__value')[0].get_text().strip())
    print('----------------------------------------')
except Exception as e:
    #raise e
    print('')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;When it is executed:&lt;/p&gt;

&lt;p&gt;Image&lt;/p&gt;

&lt;p&gt;fetches all the scraped Booking.com hotel data&lt;/p&gt;

&lt;p&gt;In more complicated solutions, you’ll need to rotate the User-Agent string so Booking.com doesn’t recognize the browser!&lt;/p&gt;

&lt;p&gt;If we go a step further, we’ll see that Booking.com can just block your IP, ignoring all of your previous attempts. This is a disappointment because it’s where the majority of web crawling&lt;br&gt;
programs fall short.&lt;/p&gt;

&lt;p&gt;Overcoming IP Blocks&lt;/p&gt;

&lt;p&gt;Buying a private rotating proxy service like Proxies API can often mean the difference between a successful and pain-free web scraping operation that regularly gets the job done and one that never does.&lt;/p&gt;

&lt;p&gt;Plus, with the current offer of 1000 free API requests, there’s absolutely nothing to lose by using our revolving proxy and comparing notes. It simply takes one line of integration to make it almost unnoticeable.&lt;/p&gt;

&lt;p&gt;• Our rotating proxy server Proxies API is a straightforward API that instantly solves any IP Blocking issues.&lt;br&gt;
• There are millions of high-speed spinning proxies scattered over the globe.&lt;br&gt;
• With our IP rotation service, you can rest assured that your IP address will be changed&lt;/p&gt;

&lt;p&gt;Hundreds of our customers have successfully solved the problem of IP blocks with a simple API using our automatic User-Agent-String rotation (which simulates requests from different, valid web&lt;br&gt;
browsers and web browser versions) and our automatic CAPTCHA cracking technology.&lt;/p&gt;

&lt;p&gt;In any programming language, a basic API like the one below can be used to access the entire system.&lt;/p&gt;

&lt;p&gt;curl &lt;a href="http://api.websitescraper.com//?key=API_KEY&amp;amp;url=https://example.com"&gt;http://api.websitescraper.com//?key=API_KEY&amp;amp;url=https://example.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For scraping hotel listings data from Booking.com contact Scraping Intelligence today!!&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.websitescraper.com/how-to-scrape-hotel-listings-from-booking-com-using-python-and-beautifulsoup/"&gt;http://www.websitescraper.com/how-to-scrape-hotel-listings-from-booking-com-using-python-and-beautifulsoup/&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
