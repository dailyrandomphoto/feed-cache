<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Re-rendering in React</title>
      <author>NRF</author>
      <pubDate>Sat, 02 Oct 2021 23:15:06 +0000</pubDate>
      <link>https://dev.to/nrf/re-rendering-in-react-4b55</link>
      <guid>https://dev.to/nrf/re-rendering-in-react-4b55</guid>
      <description>&lt;p&gt;I recently saw the following tweet from &lt;a href="https://www.twitter.com/_georgemoller"&gt;@_georgemoller&lt;/a&gt; which posed an interesting question related to component re-rendering in React:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1dvOINXT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FAiLIt7WQAAM5NT.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--K0o6ch8F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1409915212157833223/OX8dfCpn_normal.jpg" alt="George Moller profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        George Moller
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @_georgemoller
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      ‚ùìReact interview question.&lt;br&gt;&lt;br&gt;When incrementing the count, &amp;lt;SomeComponent /&amp;gt;:&lt;br&gt;&lt;br&gt;a. Will re-render each time&lt;br&gt;b. Won't re-render at all because it doesn't consume the count variable 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      12:41 PM - 30 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1443556666792988672" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1443556666792988672" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1443556666792988672" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;The problem is interesting because, while &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; is a child component of &lt;code&gt;&amp;lt;App /&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; does not depend on &lt;code&gt;count&lt;/code&gt; in any way. It does not receive &lt;code&gt;count&lt;/code&gt; as a prop (in fact, &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; doesn't receive any props) and, as a result, is not affected by &lt;code&gt;count&lt;/code&gt;'s change in value.&lt;/p&gt;

&lt;p&gt;So will &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; be re-rendered every time the value of &lt;code&gt;count&lt;/code&gt; is updated?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing-environment"&gt;
  &lt;/a&gt;
  Testing environment
&lt;/h2&gt;

&lt;p&gt;For testing, I simply created a new project using &lt;code&gt;create-react-app&lt;/code&gt;. After that I proceeded to delete all the extra stuff not needed for this exercise and put the code in &lt;code&gt;App.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;App.js&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nyJrHwVO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kw3zoj3csejeufycabev.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nyJrHwVO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kw3zoj3csejeufycabev.png" alt="code_1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FliL293A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vmqih1lbe7j3ejgdoxzh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FliL293A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vmqih1lbe7j3ejgdoxzh.png" alt="output_1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#verifying-a-rerender"&gt;
  &lt;/a&gt;
  Verifying a re-render
&lt;/h2&gt;

&lt;p&gt;To get to our answer we need a way to verify whether a component was re-rendered or not. The easiest way to do this would be to use the &lt;strong&gt;React Developer Tools&lt;/strong&gt;. These developer tools are available for all major browsers as an extension (except Safari I think).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;After installing the developer tools, right-click anywhere on the page and click &lt;strong&gt;Inspect&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9KW3vb3H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7fhwl1bpamdudbic39v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9KW3vb3H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7fhwl1bpamdudbic39v.png" alt="step_1_1"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Look for &lt;strong&gt;Components&lt;/strong&gt; and open it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oZyzgcEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkpypokpqjravml8c2qr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oZyzgcEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkpypokpqjravml8c2qr.png" alt="step_1_2"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;This tool shows us all the components in our React application and their relation to each other (children are indented under their parent component). Clicking on a component shows more detail like the values of its state and props.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click on the settings icon and enable the setting called &lt;em&gt;Highlight updates when components render&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QCkXnNMg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w79dlquvclc4ey0onqdc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QCkXnNMg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w79dlquvclc4ey0onqdc.png" alt="step_1_3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8lc7j9Gd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r2c9o5qkwimy449p4d0o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8lc7j9Gd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r2c9o5qkwimy449p4d0o.png" alt="step_1_4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As the name suggests, enabling this setting means that any component that is rendered/re-rendered will be highlighted.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#time-to-test"&gt;
  &lt;/a&gt;
  Time to test
&lt;/h3&gt;

&lt;p&gt;This is it. Time to press the button. If &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; is highlighted, it means that &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; is being re-rendered every time &lt;code&gt;count&lt;/code&gt; is being updated.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LiZCtljb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qh6tdx906le7ms0b5uca.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LiZCtljb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qh6tdx906le7ms0b5uca.gif" alt="step_1_5"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Interesting! Not only &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; is re-rendered every time the state changes but the text displaying &lt;code&gt;count&lt;/code&gt;'s value and and the &lt;code&gt;&amp;lt;button /&amp;gt;&lt;/code&gt; are also re-rendered.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Every time the state of a component changes, that component and all of its children are re-rendered.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Just to drive this point home, and emphasize the fact that it does not matter where the value of &lt;code&gt;count&lt;/code&gt; is actually displayed, let's consider some additional scenarios.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scenario1"&gt;
  &lt;/a&gt;
  Scenario-1
&lt;/h2&gt;

&lt;p&gt;In this scenario, we will pass the value of count to &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; and display it from within &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt;. If &lt;code&gt;count&lt;/code&gt; is then updated, the only changing entity is being displayed from within &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;App.js&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w5BzdPxF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwfbhh8mp4uu5r5x47xi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w5BzdPxF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwfbhh8mp4uu5r5x47xi.png" alt="code_2"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;I had to introduce a couple of &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags just to keep everything neat.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5bKOXEuf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uz2ipzkc8wqm736wan08.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5bKOXEuf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uz2ipzkc8wqm736wan08.png" alt="step_2_1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, practically speaking, the only thing updating the display every time the increment button is pressed is inside &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; on line 20. So how will React handle the re-render?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Szx39AZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spwn7n5x778pgyjxkh3w.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Szx39AZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spwn7n5x778pgyjxkh3w.gif" alt="step_2_2"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Once again all components are being re-rendered. We basically have two child components of &lt;code&gt;&amp;lt;App /&amp;gt;&lt;/code&gt; (&lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;button /&amp;gt;&lt;/code&gt;) and both of them are clearly being re-rendered. This reinforces the point that:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Every time the state of a component changes, that component and all of its children are re-rendered.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since the state of &lt;code&gt;count&lt;/code&gt; belongs to &lt;code&gt;&amp;lt;App /&amp;gt;&lt;/code&gt;, every time &lt;code&gt;count&lt;/code&gt; changes, &lt;code&gt;&amp;lt;App /&amp;gt;&lt;/code&gt; and all of its child components are re-rendered (and the children of those child components as well; I hope that was clear!).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kcEwpQhB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2pgujmweh50epzy0p0nr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kcEwpQhB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2pgujmweh50epzy0p0nr.png" alt="react_render_propagation"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;This brings us to the second scenario.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scenario2"&gt;
  &lt;/a&gt;
  Scenario-2
&lt;/h2&gt;

&lt;p&gt;Since we now know that it makes no difference, let's display the value of &lt;code&gt;count&lt;/code&gt; from within &lt;code&gt;&amp;lt;App /&amp;gt;&lt;/code&gt; instead of &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; (just like in the original code). Additionally, I've created a bunch of components just to create a hierarchy.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;App.js&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FE7PiRNd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/curqzq4kov1ltpi5rx2w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FE7PiRNd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/curqzq4kov1ltpi5rx2w.png" alt="code_3"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7q4eILya--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/skwteq2syh8facstiyz9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7q4eILya--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/skwteq2syh8facstiyz9.png" alt="step_3_1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By now it should be crystal clear as to what will happen when we change &lt;code&gt;count&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qq2ZA53z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7y9jd4hhqgyqzqojqe8p.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qq2ZA53z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7y9jd4hhqgyqzqojqe8p.gif" alt="step_3_2"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scenario3"&gt;
  &lt;/a&gt;
  Scenario-3
&lt;/h2&gt;

&lt;p&gt;For our last scenario, we'll take the code from scenario-2 and move the &lt;strong&gt;state&lt;/strong&gt; from &lt;code&gt;&amp;lt;App /&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;AnotherChildOfSomeComponent /&amp;gt;&lt;/code&gt;. And since the data flow in React is from parent to child, and not the other way around, we will display (and update) the value of &lt;code&gt;count&lt;/code&gt; from within &lt;code&gt;&amp;lt;AnotherChildOfSomeComponent /&amp;gt;&lt;/code&gt; as well (this makes sense since the whole goal of this exercise is to make &lt;code&gt;count&lt;/code&gt; a part of &lt;code&gt;&amp;lt;AnotherChildOfSomeComponent /&amp;gt;&lt;/code&gt;'s state).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vLx36R50--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gxtjsitdctsqyey1rur1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vLx36R50--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gxtjsitdctsqyey1rur1.png" alt="code_4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O2e0QBND--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d4jt4lzr13ke94e9wwb4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O2e0QBND--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d4jt4lzr13ke94e9wwb4.png" alt="step_4_1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Time to change &lt;code&gt;count&lt;/code&gt; and see React's rendering in action.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PEMyHfzx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oeuofog04zrt2fwwmuup.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PEMyHfzx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oeuofog04zrt2fwwmuup.gif" alt="step_4_2"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;As can be seen, React only re-renders &lt;code&gt;&amp;lt;AnotherChildOfSomeComponent /&amp;gt;&lt;/code&gt; and leaves the rest alone.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Kindly allow me to say it again...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Every time the state of a component changes, that component and all of its children are re-rendered.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Be very mindful of which component handles the state in a React application. If you put it in the root component (like in the original problem), your &lt;strong&gt;whole application&lt;/strong&gt; will re-render every time that state changes. This can have a serious impact on your application's performance.&lt;/p&gt;

&lt;p&gt;For example, imagine a bunch of data-driven child components that query various APIs. Every time those components are rendered they'll hit those APIs. Now that might be something you intend, but it just might be a side-effect of keeping state in the wrong component.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#follow-me-on-twitter-binrf"&gt;
  &lt;/a&gt;
  Follow me on twitter: &lt;a href="https://www.twitter.com/bi_nrf"&gt;@bi_nrf&lt;/a&gt;
&lt;/h2&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>react pwa app.</title>
      <author>Shlok Patel</author>
      <pubDate>Sat, 02 Oct 2021 22:29:02 +0000</pubDate>
      <link>https://dev.to/madrix01/react-pwa-app-29no</link>
      <guid>https://dev.to/madrix01/react-pwa-app-29no</guid>
      <description>&lt;p&gt;I wanted to create a PWA (progressive web app) with react.js and typescript. So I used a built-in flag with &lt;code&gt;create-react-app&lt;/code&gt; which generated pwa.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-react-app my-app &lt;span class="nt"&gt;--template&lt;/span&gt; cra-template-pwa-typescript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But after I ran tests in lighthouse it was not available as a pwa.&lt;br&gt;
So I did some research from &lt;a href="https://web.dev/progressive-web-apps/"&gt;web.dev&lt;/a&gt; and other sources and built my own template.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In &lt;code&gt;src/index.tsx&lt;/code&gt; or &lt;code&gt;src/index.js&lt;/code&gt; file and change
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;serviceWorkerRegistration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unregister&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;serviceWorkerRegistration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;serviceworker.js&lt;/code&gt; to &lt;code&gt;pubic/&lt;/code&gt; folder. &lt;code&gt;serviceworker.js&lt;/code&gt; works in background and it performs caching, background sync, listen to push notifications and many more stuff!
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// public/serviceworker.js&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;CACHE_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pwatest&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;urlsToCache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/completed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="c1"&gt;// Install a service worker&lt;/span&gt;
&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;install&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Perform install steps&lt;/span&gt;
  &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;waitUntil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;caches&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;CACHE_NAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Opened cache&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;urlsToCache&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Cache and return requests&lt;/span&gt;
&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fetch&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;respondWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;caches&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Cache hit - return response&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;caches&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./offline.html&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Update a service worker&lt;/span&gt;
&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;activate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;cacheWhitelist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pwatest&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;waitUntil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;caches&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cacheNames&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;cacheNames&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cacheName&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cacheWhitelist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cacheName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;caches&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cacheName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;offline.html&lt;/code&gt; to the &lt;code&gt;public&lt;/code&gt; directory  . This page will render when there is no internet available.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;No internet !!!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add the script for enabling service workers in &lt;code&gt;body&lt;/code&gt; tag of &lt;code&gt;public/index.html&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;serviceWorker&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;load&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;serviceWorker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./serviceworker.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;reg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Success: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Failure: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
          &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Don't forget to add manifest.json
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"short_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"React App"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Create React App Sample"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"icons"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"src"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"favicon.ico"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"sizes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"64x64 32x32 24x24 16x16"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"image/x-icon"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"src"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"logo192.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"image/png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"sizes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"192x192"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"src"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"logo512.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"image/png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"sizes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"512x512"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"start_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"display"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"standalone"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"theme_color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#000000"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"background_color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#ffffff"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#you-have-successfully-made-your-current-app-a-reactpwa"&gt;
  &lt;/a&gt;
  You have successfully made your current app a react-pwa
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#to-directly-use-this-boilerplate"&gt;
  &lt;/a&gt;
  To directly use this boilerplate
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;with git
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone https://github.com/bare-cli/react-pwa-boilerplate.git &amp;lt;your-project-name&amp;gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;your-project-name&amp;gt;
&lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-rf&lt;/span&gt; .git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;with bare
Bare is the tool that I have made to generate and manage your boilerplates. Know more about bare &lt;a href="https://bare.surge.sh"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bare get bare-cli/react-pwa-boilerplate &amp;lt;your-project-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thank you !!&lt;br&gt;
This is my first blog. Please write your reviews in the comments down below.&lt;/p&gt;

</description>
      <category>react</category>
      <category>pwa</category>
      <category>typescript</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Iniciando Machine Learning en Amazon SageMaker</title>
      <author>elizabethfuentes12</author>
      <pubDate>Sat, 02 Oct 2021 21:39:29 +0000</pubDate>
      <link>https://dev.to/elizabethfuentes12/iniciando-machine-learning-en-amazon-sagemaker-3gmh</link>
      <guid>https://dev.to/elizabethfuentes12/iniciando-machine-learning-en-amazon-sagemaker-3gmh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#iniciando-sagemaker-ml"&gt;
  &lt;/a&gt;
  Iniciando Sagemaker ML
&lt;/h2&gt;

&lt;p&gt;En este tutorial te ense√±are un poco de Sagemaker usando un ejemplo sencillo de Machine Learning. &lt;/p&gt;

&lt;p&gt;GitHub del tutorial: &lt;a href="https://github.com/elizabethfuentes12/Iniciando_SagemakerML"&gt;https://github.com/elizabethfuentes12/Iniciando_SagemakerML&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#que-es-sagemaker"&gt;
  &lt;/a&gt;
  ¬øQue es Sagemaker?
&lt;/h2&gt;

&lt;p&gt;Aprendizaje autom√°tico al alcance de cualquier cient√≠fico de datos y desarrollador. &lt;/p&gt;

&lt;p&gt;Amazon &lt;a href="https://aws.amazon.com/es/sagemaker/"&gt;SageMaker&lt;/a&gt; ayuda a los cient√≠ficos de datos y a los desarrolladores a preparar, crear, entrenar e implementar con rapidez modelos de aprendizaje autom√°tico de alta calidad al poner a disposici√≥n un amplio conjunto de capacidades especialmente creadas para el aprendizaje autom√°tico.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Qv_Tr_BCFCQ"&gt;Video: Introduction to Amazon SageMaker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--auMXnhdw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqcb5xw5f4ori9z5yrlz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--auMXnhdw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqcb5xw5f4ori9z5yrlz.png" alt="sagemaker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#casos-de-uso"&gt;
  &lt;/a&gt;
  Casos de Uso
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pages.awscloud.com/Implementing-Machine-Learning-Solutions-with-Amazon-SageMaker_2019_0722-MCL_OD.html?&amp;amp;trk=sl_card&amp;amp;trkCampaign=NA-FY19-AWS-DIGMKT-WEBINAR-SERIES-July_2019_0722-MCL&amp;amp;sc_channel=el&amp;amp;sc_campaign=pac_2018-2019_exlinks_ondemand_OTT_evergreen&amp;amp;sc_outcome=Product_Adoption_Campaigns&amp;amp;sc_geo=NAMER&amp;amp;sc_country=mult&amp;amp;trkcampaign=wbnrondemand"&gt;Mantenimiento predictivo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/es/blogs/iot/sagemaker-object-detection-greengrass-part-1-of-3/"&gt;Visi√≥n artificial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/es/blogs/machine-learning/labeling-data-for-3d-object-tracking-and-sensor-fusion-in-amazon-sagemaker-ground-truth/"&gt;Conducci√≥n aut√≥noma&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=elRQPCHDBPE&amp;amp;t=4s"&gt;Detecci√≥n de fraudes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Nlwz4cU68T8"&gt;Predicci√≥n de riesgos crediticios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/es/blogs/machine-learning/maximizing-nlp-model-performance-with-automatic-model-tuning-in-amazon-sagemaker/"&gt;Extracci√≥n y an√°lisis de datos a partir de documentos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/es/blogs/machine-learning/making-machine-learning-predictions-in-amazon-quicksight-and-amazon-sagemaker/"&gt;Predicci√≥n de p√©rdida de clientes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=A04TT68Bd8A"&gt;Previsi√≥n de demanda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/es/blogs/startups/how-dely-uses-amazon-sagemaker-to-deliver-personalized-recipes/"&gt;Recomendaciones personalizadas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fuente y github con modelos: &lt;a href="https://aws.amazon.com/es/sagemaker/getting-started/"&gt;Casos de uso&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#algoritmos-integrados-de-aws-sagemaker"&gt;
  &lt;/a&gt;
  Algoritmos integrados de AWS Sagemaker
&lt;/h2&gt;

&lt;p&gt;Fuente: &lt;a href="https://docs.aws.amazon.com/es_es/sagemaker/latest/dg/algos.html"&gt;https://docs.aws.amazon.com/es_es/sagemaker/latest/dg/algos.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS Sagemaker proporciona una serie de algoritmos integrados que ayuda a mejorar la preforma del aprendizaje autom√°tico. &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tipo&lt;/th&gt;
&lt;th&gt;Tipos de problemas&lt;/th&gt;
&lt;th&gt;Algoritmos&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.aws.amazon.com/es_es/sagemaker/latest/dg/algos.html#algorithms-built-in-supervised-learning"&gt;Aprendizaje supervisado&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Clasificaci√≥n binaria/ de varias clases - Regresi√≥n - Previci√≥n de series temporales&lt;/td&gt;
&lt;td&gt;Linear Learner  - Factorization Machines  - XGBoost  - K-Nearest Neighbors (k-NN)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.aws.amazon.com/es_es/sagemaker/latest/dg/algos.html#algorithms-built-in-unsupervised-learning"&gt;Aprendizaje no supervisado&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Ingenier√≠a de caracter√≠sticas: reducci√≥n de la dimensionalidad - Detecci√≥n de anomal√≠as - Integraciones: convierten objetos de grandes dimensiones en espacio de baja dimensionalidad - Agrupaci√≥n o agrupaci√≥n en cl√∫steres - Modelado de temas&lt;/td&gt;
&lt;td&gt;PCA - K-Means - IP Insights - Random Cut Forest (RCF)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.aws.amazon.com/es_es/sagemaker/latest/dg/algos.html#algorithms-built-in-text-analysis"&gt;An√°lisis de texto&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Clasificaci√≥n de textos - Traducci√≥n autom√°tica de Algoritmo - Resumir texto - Texto a voz&lt;/td&gt;
&lt;td&gt;Blazing Tex - Sequence-to-Sequence - LDA - NTM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.aws.amazon.com/es_es/sagemaker/latest/dg/algos.html#algorithms-built-in-image-processing"&gt;Gema Image Processing&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Clasificaci√≥n de im√°genes y etiquetas m√∫ltiple - Detecci√≥n y clasificaci√≥n de objetos - Visi√≥n artificial&lt;/td&gt;
&lt;td&gt;Image Classification - Semantic Segmentation - Object Detection&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#tutorial-crear-entrenar-e-implementar-un-modelo-de-machine-learning-con-aws-sagemaker"&gt;
  &lt;/a&gt;
  Tutorial Crear, entrenar e implementar un modelo de Machine Learning con AWS Sagemaker
&lt;/h2&gt;

&lt;p&gt;Fuente: &lt;a href="https://aws.amazon.com/es/getting-started/hands-on/build-train-deploy-machine-learning-model-sagemaker/"&gt;https://aws.amazon.com/es/getting-started/hands-on/build-train-deploy-machine-learning-model-sagemaker/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Siguiendo los siguientes pasos aprender√° a utilizar  Amazon SageMaker para crear, entrenar e implementar un modelo de aprendizaje autom√°tico (ML). Para este ejercicio, utilizaremos el conocido algoritmo de aprendizaje autom√°tico &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/xgboost.html"&gt;XGBoost&lt;/a&gt; el cual esta integrado en Sagemaker. &lt;/p&gt;

&lt;p&gt;En este tutorial, asumir√°s el rol de un desarrollador de machine learning que trabaja en un banco. Se le solicita desarrollar un modelo de machine learning para predecir si los clientes se inscribir√°n para un certificado de dep√≥sito. El modelo se entrenar√° con el conjunto de datos de marketing que contiene la informaci√≥n demogr√°fica de los clientes, sus respuestas a los eventos de marketing y los factores externos.&lt;/p&gt;

&lt;p&gt;Los datos se etiquetaron para su conveniencia. Una columna en el conjunto de datos identifica si el cliente est√° inscrito para alg√∫n producto que ofrece el banco. Una versi√≥n de este conjunto de datos est√° disponible para el p√∫blico en el repositorio de aprendizaje autom√°tico a cargo de la Universidad de California, Irvine. Este tutorial implementa un modelo de aprendizaje autom√°tico supervisado debido a que los datos est√°n etiquetados. (El aprendizaje no supervisado tiene lugar cuando los conjuntos de datos no est√°n etiquetados).&lt;/p&gt;

&lt;p&gt;En este tutorial, har√° lo siguiente:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Crear√° una instancia de bloc de notas&lt;/li&gt;
&lt;li&gt;Preparar√° los datos&lt;/li&gt;
&lt;li&gt;Entrenar√° el modelo para aprender de los datos&lt;/li&gt;
&lt;li&gt;Implementar√° el modelo&lt;/li&gt;
&lt;li&gt;Evaluar√° el rendimiento de su modelo de aprendizaje autom√°tico&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Los recursos creados y utilizados en este tutorial se pueden utilizar en la capa gratuita de AWS. Recuerde completar el Paso 7 y terminar sus recursos. Si su cuenta ha estado activa con estos recursos por m√°s de dos meses, se cobrar√° menos de 0,50 USD por ella.&lt;/p&gt;

&lt;p&gt;A continuaci√≥n un diagrama de lo que haremos. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VRGaIoPc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t87k8m8bylw8qm6gr9hh.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VRGaIoPc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t87k8m8bylw8qm6gr9hh.jpeg" alt="diagrama"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#paso-0-que-es-xgboost"&gt;
  &lt;/a&gt;
  Paso 0: ¬øQue es XGBoost?
&lt;/h2&gt;

&lt;p&gt;Es una implementaci√≥n de c√≥digo abierto popular y eficiente del algoritmo de √°rboles aumentados de gradientes. La potenciaci√≥n de gradientes es un algoritmo de aprendizaje supervisado que intenta predecir de forma apropiada una variable de destino mediante la combinaci√≥n de un conjunto de estimaciones a partir de un conjunto de modelos m√°s simples y m√°s d√©biles. Funciona bien en competiciones de aprendizaje autom√°tico debido a su manejo robusto de una variedad de tipos de datos, relaciones, distribuciones y la variedad de hiperpar√°metros que puede ajustar. &lt;/p&gt;

&lt;p&gt;Puede usar &lt;strong&gt;XGBoost&lt;/strong&gt; para problemas de &lt;strong&gt;regresi√≥n&lt;/strong&gt;, de &lt;strong&gt;clasificaci√≥n (binaria y multiclase)&lt;/strong&gt; y de &lt;strong&gt;ranking&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Fuente: &lt;a href="https://docs.aws.amazon.com/es_es/sagemaker/latest/dg/xgboost.html"&gt;AWS XGBoost&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;M√°s sobre XGBoost --&amp;gt; &lt;a href="https://www.youtube.com/watch?v=MIPkK5ZAsms"&gt;Boosting - EXPLAINED!&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#paso-1-abra-la-consola-de-amazon-sagemaker"&gt;
  &lt;/a&gt;
  Paso 1: Abra la consola de Amazon SageMaker
&lt;/h2&gt;

&lt;p&gt;Dir√≠jase a la consola de Amazon SageMaker.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Eboq0Ami--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dbcus8zemmc5w1c02h2j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eboq0Ami--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dbcus8zemmc5w1c02h2j.png" alt="sage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Abra &lt;strong&gt;SageMaker&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#paso-2-cree-una-instancia-de-bloc-de-notas-de-amazon-sagemaker"&gt;
  &lt;/a&gt;
  Paso 2: Cree una instancia de bloc de notas de Amazon SageMaker
&lt;/h2&gt;

&lt;p&gt;En este paso, crear√° una instancia de bloc de notas de Amazon SageMaker. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2a"&gt;
  &lt;/a&gt;
  2.a
&lt;/h3&gt;

&lt;p&gt;Abra &lt;strong&gt;notebook instances&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_2W-Sd2N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9yclz3t9cwe8qhsebtwh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_2W-Sd2N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9yclz3t9cwe8qhsebtwh.png" alt="dos"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;y seleccione Create notebook Instance en la parte superior derecha&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_MCqqDvD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k9t4k7s14mzqagv9ryjw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_MCqqDvD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k9t4k7s14mzqagv9ryjw.png" alt="dosa"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2b"&gt;
  &lt;/a&gt;
  2b.
&lt;/h3&gt;

&lt;p&gt;En la p√°gina &lt;strong&gt;Crear instancia de bloc de notas&lt;/strong&gt;, escriba un nombre en el campo &lt;strong&gt;Nombre de la instancia de bloc de notas&lt;/strong&gt;. Este tutorial utiliza &lt;strong&gt;MySageMakerInstance&lt;/strong&gt; como nombre de la instancia, pero puede elegir un nombre diferente si lo desea.&lt;/p&gt;

&lt;p&gt;Para este tutorial, puede mantener el &lt;strong&gt;Tipo de instancia de bloc de notas&lt;/strong&gt; predeterminado &lt;strong&gt;ml.t2.medium&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JXoZusq4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2fltcglgo8s3wz1cd38d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JXoZusq4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2fltcglgo8s3wz1cd38d.png" alt="2b"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Para permitir que la instancia de bloc de notas acceda a Amazon S3 y pueda cargar datos de manera segura en este servicio, se debe especificar un rol de IAM. En el campo &lt;strong&gt;Rol de IAM&lt;/strong&gt;, elija &lt;strong&gt;Crear un nuevo rol&lt;/strong&gt; para que Amazon SageMaker cree un rol con los permisos necesarios y lo asigne a su instancia. De forma alternativa, puede elegir un rol de IAM existente en su cuenta para este fin.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x8N78BGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/abzzu1dgsbtaw36w4w6b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x8N78BGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/abzzu1dgsbtaw36w4w6b.png" alt="2b2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2c"&gt;
  &lt;/a&gt;
  2c.
&lt;/h3&gt;

&lt;p&gt;En el cuadro &lt;strong&gt;Crear un rol de IAM&lt;/strong&gt;, seleccione &lt;strong&gt;Cualquier bucket de S3&lt;/strong&gt;. Esto permite que su instancia de Amazon SageMaker acceda a todos los buckets de S3 de su cuenta. M√°s adelante en este tutorial, crear√° un nuevo bucket de S3. Sin embargo, si ya cuenta con un bucket que desea utilizar, seleccione &lt;strong&gt;Buckets de S3 espec√≠ficos&lt;/strong&gt; e indique el nombre del bucket.&lt;/p&gt;

&lt;p&gt;Elija &lt;strong&gt;Crear rol&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yY9oS9c---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gvd2uq7rlzrf4zhvea46.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yY9oS9c---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gvd2uq7rlzrf4zhvea46.png" alt="2b3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2d"&gt;
  &lt;/a&gt;
  2d.
&lt;/h3&gt;

&lt;p&gt;Tenga en cuenta que Amazon SageMaker cre√≥ para usted un rol denominado &lt;strong&gt;AmazonSageMaker-ExecutionRole-&lt;/strong&gt;***.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OC8BZpBb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cekwgfiqf8297bbqbgox.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OC8BZpBb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cekwgfiqf8297bbqbgox.png" alt="2d"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Para este tutorial, utilizaremos los valores predeterminados en los dem√°s campos. Elija &lt;strong&gt;Crear instancia de bloc de &lt;br&gt;
notas&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2e"&gt;
  &lt;/a&gt;
  2e.
&lt;/h3&gt;

&lt;p&gt;En la p√°gina &lt;strong&gt;Instancias de bloc de notas&lt;/strong&gt;, deber√≠a ver su nueva instancia de bloc de notas &lt;strong&gt;MySageMakerInstance&lt;/strong&gt; con el estado &lt;strong&gt;Pendiente&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4r9VUIAa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pve85fqp5zzk7chpi15r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4r9VUIAa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pve85fqp5zzk7chpi15r.png" alt="2e"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Su instancia de bloc de notas deber√≠a pasar del estado &lt;strong&gt;Pendiente&lt;/strong&gt; al estado &lt;strong&gt;En servicio&lt;/strong&gt; en menos de dos minutos.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2f"&gt;
  &lt;/a&gt;
  2f
&lt;/h3&gt;

&lt;p&gt;Para este paso debes detener la instancia en &lt;strong&gt;Acciones&lt;/strong&gt; --&amp;gt; &lt;strong&gt;Detener&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--suikvvRC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/86qp0vn9qx50hyntr9v0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--suikvvRC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/86qp0vn9qx50hyntr9v0.png" alt="detener"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Evita que la instancia de SageMaker se quede activa cuando no la est√©s usando y as√≠ no incurrir en gastos innecesarios, para eso debes agregar la &lt;strong&gt;Configuraci√≥n del ciclo de vida&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Esto lo puedes realizar al momento de crear la maquina o luego de crearla editando la configuraci√≥n. &lt;/p&gt;

&lt;p&gt;Entra a la configuraci√≥n de la instancia dando click sobre su nombre: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--voAzkmBW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4nnuaxgt6f6edx62fnr0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--voAzkmBW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4nnuaxgt6f6edx62fnr0.png" alt="2f"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Presiona editar, arriba a la derecha, en &lt;strong&gt;Configuraci√≥n adicional&lt;/strong&gt; selecciona &lt;strong&gt;Crear una nueva configuraci√≥n de ciclo de vida&lt;/strong&gt;, en la ventana emergente nombralo como prefieras y abre la lista de scripts para iniciar: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NiZO_zLC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9f52ims5xu68bnqex3kn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NiZO_zLC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9f52ims5xu68bnqex3kn.png" alt="2f2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;El link te llevara al GitHub &lt;a href="https://github.com/aws-samples/amazon-sagemaker-notebook-instance-lifecycle-config-sample"&gt;amazon-sagemaker-notebook-instance-lifecycle-config-samples&lt;/a&gt; , entra a la carpeta scripts --&amp;gt; auto-stop-idle y copia el codigo en &lt;a href="https://github.com/aws-samples/amazon-sagemaker-notebook-instance-lifecycle-config-samples/blob/master/scripts/auto-stop-idle/on-start.sh"&gt;on-start.sh&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Pega el codigo en la ventana emergente y avanza con &lt;strong&gt;Crear una configuraci√≥n&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xtJe98gz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r3i6l96ov9wdcvgrci6d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xtJe98gz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r3i6l96ov9wdcvgrci6d.png" alt="2f3"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2e"&gt;
  &lt;/a&gt;
  2e
&lt;/h3&gt;

&lt;p&gt;Agrega un repositorio Git a tu instancia. &lt;/p&gt;

&lt;p&gt;En la misma edici√≥n del paso anterior, ve al fondo donde dice &lt;strong&gt;Repositorios Git - opcional&lt;/strong&gt;, selecciona &lt;strong&gt;Clone un repositorio Git p√∫blico en esta instancia de bloc de notas solamente&lt;/strong&gt; y copia el repositorio creado para este ejemplo &lt;a href="https://github.com/elizabethfuentes12/Iniciando_SagemakerML"&gt;Iniciando_SagemakerML&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--934VcsJC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ino5s875zb2kym8sdcvg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--934VcsJC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ino5s875zb2kym8sdcvg.png" alt="2e2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finaliza con &lt;strong&gt;Actualizar instancia del bloc de notas&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#paso-3-prepare-los-datos"&gt;
  &lt;/a&gt;
  Paso 3: Prepare los datos
&lt;/h2&gt;

&lt;p&gt;En este paso, utilizar√° su bloc de notas de Amazon SageMaker a fin de procesar previamente los datos que necesita para entrenar su modelo de aprendizaje autom√°tico.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3a"&gt;
  &lt;/a&gt;
  3a.
&lt;/h3&gt;

&lt;p&gt;En la p√°gina &lt;strong&gt;Instancias de bloc de notas&lt;/strong&gt;, aguarde hasta que la instancia &lt;strong&gt;MySageMakerInstance&lt;/strong&gt; haya pasado del estado &lt;strong&gt;Pendiente&lt;/strong&gt; al estado &lt;strong&gt;En servicio&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Despu√©s de que el estado cambie a &lt;strong&gt;En servicio&lt;/strong&gt;, seleccione la instancia &lt;strong&gt;MySageMakerInstance&lt;/strong&gt; y √°brala a trav√©s del men√∫ desplegable &lt;strong&gt;Acciones&lt;/strong&gt; o elija la opci√≥n &lt;strong&gt;Abrir JupyterLab&lt;/strong&gt;, que aparece junto al estado &lt;strong&gt;En servicio&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3b"&gt;
  &lt;/a&gt;
  3b.
&lt;/h3&gt;

&lt;p&gt;Despu√©s de que Jupyter se abra, en la pesta√±a &lt;strong&gt;Archivos&lt;/strong&gt;, elija &lt;strong&gt;Nuevo&lt;/strong&gt;, &lt;strong&gt;Notebook&lt;/strong&gt; y, luego, &lt;strong&gt;conda_python3&lt;/strong&gt;. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3c"&gt;
  &lt;/a&gt;
  3c.
&lt;/h3&gt;

&lt;p&gt;Para preparar los datos, entrenar el modelo de aprendizaje autom√°tico e implementarlo, deber√° importar algunas bibliotecas y definir algunas variables del entorno en su entorno de bloc de notas de Jupyter. Copie el siguiente c√≥digo o ejecutelo directamente de la carpeta &lt;strong&gt;codigo&lt;/strong&gt; en el &lt;a href="https://github.com/elizabethfuentes12/Iniciando_SagemakerML"&gt;GitHub&lt;/a&gt; creado para este tutorial en la celda de c√≥digo de su instancia y seleccione &lt;strong&gt;Ejecutar&lt;/strong&gt; o las teclas &lt;strong&gt;Shift+Enter&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# import libraries
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;boto3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sagemaker&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sagemaker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;get_execution_role&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;                                
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;                               
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;                   
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;IPython.display&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;                 
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;IPython.display&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;display&lt;/span&gt;               
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;gmtime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strftime&lt;/span&gt;                 
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sagemaker.predictor&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;csv_serializer&lt;/span&gt;   
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sagemaker&lt;/span&gt;


&lt;span class="c1"&gt;# Define IAM role
&lt;/span&gt;&lt;span class="n"&gt;role&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_execution_role&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;prefix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'sagemaker/DEMO-xgboost-dm'&lt;/span&gt;
&lt;span class="n"&gt;containers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'us-west-2'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'433757028032.dkr.ecr.us-west-2.amazonaws.com/xgboost:latest'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s"&gt;'us-east-1'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'811284229777.dkr.ecr.us-east-1.amazonaws.com/xgboost:latest'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s"&gt;'us-east-2'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'825641698319.dkr.ecr.us-east-2.amazonaws.com/xgboost:latest'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s"&gt;'eu-west-1'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'685385470294.dkr.ecr.eu-west-1.amazonaws.com/xgboost:latest'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;# each region has its XGBoost container
&lt;/span&gt;&lt;span class="n"&gt;my_region&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;boto3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;region_name&lt;/span&gt; &lt;span class="c1"&gt;# set the region of the instance
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Success - the MySageMakerInstance is in the "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;my_region&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" region. You will use the "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;containers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;my_region&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" container for your SageMaker endpoint."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Al finalizar debe verse como la imagen a continuaci√≥n:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qug7jKbe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ifrztazita5vp8vmlgy8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qug7jKbe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ifrztazita5vp8vmlgy8.png" alt="3c"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3d"&gt;
  &lt;/a&gt;
  3d.
&lt;/h3&gt;

&lt;p&gt;En este paso, crear√° un bucket de S3 que almacenar√° sus datos para este tutorial.&lt;/p&gt;

&lt;p&gt;Copie el siguiente c√≥digo en la pr√≥xima celda de c√≥digo de su bloc de notas y cambie el nombre del bucket de S3 para que sea √∫nico. Los nombres de los buckets de S3 deben ser √∫nicos a nivel mundial y, adem√°s, deben contar con algunas restricciones y limitaciones.&lt;/p&gt;

&lt;p&gt;Seleccione &lt;strong&gt;Ejecutar&lt;/strong&gt;. Si no recibe un mensaje de finalizaci√≥n exitosa, cambie el nombre del bucket y vuelva a intentarlo.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;bucket_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'your-s3-bucket-name'&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;--- CHANGE THIS VARIABLE TO A UNIQUE NAME FOR YOUR BUCKET
&lt;/span&gt;&lt;span class="n"&gt;s3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;boto3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'s3'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;  &lt;span class="n"&gt;my_region&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'us-east-1'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_bucket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bucket&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;bucket_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
      &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_bucket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bucket&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;bucket_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CreateBucketConfiguration&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'LocationConstraint'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;my_region&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'S3 bucket created successfully'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'S3 error: '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3e"&gt;
  &lt;/a&gt;
  3e.
&lt;/h3&gt;

&lt;p&gt;A continuaci√≥n, debe descargar los datos en su instancia de Amazon SageMaker y cargarlos en un marco de datos. Copie y &lt;strong&gt;Ejecute&lt;/strong&gt; el siguiente c√≥digo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlretrieve&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://d1.awsstatic.com/tmt/build-train-deploy-machine-learning-model-sagemaker/bank_clean.27f01fbbdf43271788427f3682996ae29ceca05d.csv"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"bank_clean.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Success: downloaded bank_clean.csv.'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Data load error: '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;model_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'./bank_clean.csv'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;index_col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Success: Data loaded into dataframe.'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Data load error: '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Si la descarga es exitosa debe ver el siguiente mensaje: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xFzycL6h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/665vf0llnsmicr1sbmwj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xFzycL6h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/665vf0llnsmicr1sbmwj.png" alt="3e"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Y el siguiente archivo aparecera en su instancia:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fMYK9JGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9e1fg90z6nkvqaxdqyt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fMYK9JGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9e1fg90z6nkvqaxdqyt.png" alt="3e2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Con las siguientes columnas y datos binarios en ellas:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wiEOWaCB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hupo71zayliyac46q119.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wiEOWaCB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hupo71zayliyac46q119.png" alt="bank_clean"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3f"&gt;
  &lt;/a&gt;
  3f.
&lt;/h3&gt;

&lt;p&gt;Ahora, mezclaremos los datos y los dividiremos en datos de entrenamiento y de prueba.&lt;/p&gt;

&lt;p&gt;Los &lt;strong&gt;datos de entrenamiento&lt;/strong&gt; (el 70 % de los clientes) se utilizar√°n durante el ciclo de entrenamiento del modelo. Utilizaremos la optimizaci√≥n basada en gradientes para refinar de forma iterativa los par√°metros del modelo. La optimizaci√≥n basada en gradientes es una forma de encontrar valores de par√°metros del modelo que minimicen sus errores, mediante el uso de gradientes de la funci√≥n de p√©rdida del modelo.&lt;/p&gt;

&lt;p&gt;Los &lt;strong&gt;datos de prueba&lt;/strong&gt; (el 30 % restante de los clientes) se utilizar√°n para evaluar el rendimiento del modelo y para medir el nivel de generalizaci√≥n de los datos nuevos del modelo entrenado.&lt;/p&gt;

&lt;p&gt;Copie el siguiente c√≥digo en una nueva celda de c√≥digo y seleccione &lt;strong&gt;Ejecutar&lt;/strong&gt; para mezclar y dividir los datos:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;train_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model_data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random_state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1729&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.7&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model_data&lt;/span&gt;&lt;span class="p"&gt;))])&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train_data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#paso-4-entrene-el-modelo-con-los-datos"&gt;
  &lt;/a&gt;
  Paso 4: Entrene el modelo con los datos
&lt;/h2&gt;

&lt;p&gt;En este paso, entrenar√° su modelo de aprendizaje autom√°tico con el conjunto de datos de entrenamiento. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4a"&gt;
  &lt;/a&gt;
  4a.
&lt;/h3&gt;

&lt;p&gt;Para utilizar un modelo XGBoost predise√±ado de Amazon SageMaker, deber√° cambiar el formato del encabezado y la primera columna de los datos de entrenamiento y cargar los datos desde el bucket de S3.&lt;/p&gt;

&lt;p&gt;Copie el siguiente c√≥digo en una nueva celda de c√≥digo y seleccione &lt;strong&gt;Ejecutar&lt;/strong&gt; para cambiar el formato y cargar los datos:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;train_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'y_yes'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;train_data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'y_no'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'y_yes'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'train.csv'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;boto3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'s3'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bucket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bucket_name&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'train/train.csv'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
 &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upload_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'train.csv'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sagemaker.inputs&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TrainingInput&lt;/span&gt;

&lt;span class="n"&gt;s3_input_train&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TrainingInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s3_data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'s3://{}/{}/train'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bucket_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'csv'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Crea el siguiente archivo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YHlojyPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3uju03falj3iktxqvcu7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YHlojyPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3uju03falj3iktxqvcu7.png" alt="4a"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4b"&gt;
  &lt;/a&gt;
  4b.
&lt;/h3&gt;

&lt;p&gt;A continuaci√≥n, deber√° configurar la sesi√≥n de Amazon SageMaker, crear una instancia del modelo XGBoost (un estimador) y definir los &lt;a href="https://docs.aws.amazon.com/es_es/sagemaker/latest/dg/xgboost_hyperparameters.html"&gt;hiperpar√°metros&lt;/a&gt; del modelo. Copie el siguiente c√≥digo en una nueva celda de c√≥digo y seleccione &lt;strong&gt;Ejecutar&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;sess&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sagemaker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;xgb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sagemaker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;estimator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Estimator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;containers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;my_region&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                                    &lt;span class="n"&gt;role&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance_count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                                    &lt;span class="n"&gt;instance_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'ml.m4.xlarge'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                    &lt;span class="n"&gt;output_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'s3://{}/{}/output'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bucket_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;sagemaker_session&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sess&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;xgb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_hyperparameters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_depth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;eta&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;min_child_weight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;subsample&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;silent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;objective&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'binary:logistic'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;num_round&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4c"&gt;
  &lt;/a&gt;
  4c.
&lt;/h3&gt;

&lt;p&gt;Con los datos cargados y el estimador XGBoost configurado, entrene el modelo a trav√©s de la optimizaci√≥n basada en gradientes en una instancia &lt;strong&gt;ml.m4.xlarge&lt;/strong&gt;; copie el siguiente c√≥digo en la pr√≥xima celda de c√≥digo y seleccione &lt;strong&gt;Ejecutar&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;xgb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;'train'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;s3_input_train&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Luego de algunos minutos, deber√≠a comenzar a ver los registros de entrenamiento que se generen.&lt;/p&gt;

&lt;p&gt;Inicia: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QBnVjFol--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j82gs27vqlbziemd0k2t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QBnVjFol--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j82gs27vqlbziemd0k2t.png" alt="4c1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finaliza: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8JHvnKT0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ek4hmgyap7p8vofbkfu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8JHvnKT0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ek4hmgyap7p8vofbkfu.png" alt="4c2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;En la imagen anterior podemos ver que el entrenamiento duro 47 segundos, que es lo que se cobrara por la maquina usada en el contenedor. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#paso-5-implemente-el-modelo"&gt;
  &lt;/a&gt;
  Paso 5: Implemente el modelo
&lt;/h2&gt;

&lt;p&gt;En este paso, implementar√° el modelo entrenado en un punto de enlace, cambiar√° el formato y cargar√° los datos CSV. Luego, ejecutar√° el modelo para crear predicciones.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5a"&gt;
  &lt;/a&gt;
  5a.
&lt;/h3&gt;

&lt;p&gt;Para implementar el modelo en un servidor y crear un punto de enlace al que pueda acceder, copie el siguiente c√≥digo en la pr√≥xima celda de c√≥digo y seleccione &lt;strong&gt;Ejecutar&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;xgb_predictor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xgb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;initial_instance_count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;instance_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'ml.m4.xlarge'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Al finalizar debe verse asi:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rWHhFoxt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3pidyc5dwp8e3apf5u73.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rWHhFoxt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3pidyc5dwp8e3apf5u73.png" alt="5a"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tambien lo puedes visualizar en &lt;strong&gt;Interferencia&lt;/strong&gt; --&amp;gt; &lt;strong&gt;Puntos de enlace&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9Mu02g7R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/01es8ra9u6vkat4dpc4q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Mu02g7R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/01es8ra9u6vkat4dpc4q.png" alt="5a2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5b"&gt;
  &lt;/a&gt;
  5b.
&lt;/h3&gt;

&lt;p&gt;Para predecir si los clientes de los datos de prueba se inscribieron o no en el producto del banco, copie el siguiente c√≥digo en la pr√≥xima celda de c√≥digo y seleccione &lt;strong&gt;Ejecutar&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sagemaker.serializers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CSVSerializer&lt;/span&gt;

&lt;span class="n"&gt;test_data_array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;test_data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'y_no'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'y_yes'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="c1"&gt;#load the data into an array
&lt;/span&gt;
&lt;span class="c1"&gt;#xgb_predictor.content_type = 'text/csv' # set the data type for an inference
&lt;/span&gt;&lt;span class="n"&gt;xgb_predictor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ContentType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'text/csv'&lt;/span&gt; &lt;span class="c1"&gt;# set the data type for an inference
&lt;/span&gt;&lt;span class="n"&gt;xgb_predictor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CSVSerializer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# set the serializer type
&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xgb_predictor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test_data_array&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'utf-8'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# predict!
&lt;/span&gt;&lt;span class="n"&gt;predictions_array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromstring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:],&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;','&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# and turn the prediction into an array
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions_array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#paso-6-eval%C3%BAe-el-rendimiento-del-modelo"&gt;
  &lt;/a&gt;
  Paso 6. Eval√∫e el rendimiento del modelo
&lt;/h2&gt;

&lt;p&gt;En este paso, evaluar√° el rendimiento y la precisi√≥n del modelo de aprendizaje autom√°tico.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6a"&gt;
  &lt;/a&gt;
  6a.
&lt;/h3&gt;

&lt;p&gt;Copie y pegue el siguiente c√≥digo y seleccione &lt;strong&gt;Ejecutar&lt;/strong&gt; para comparar los valores reales con los valores predichos en una tabla denominada &lt;strong&gt;matriz de confusi√≥n&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;cm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crosstab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;test_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'y_yes'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions_array&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;rownames&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Observed'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;colnames&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Predicted'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;tn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="n"&gt;fn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="n"&gt;tp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tp&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;tn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tp&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;tn&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;{0:&amp;lt;20}{1:&amp;lt;4.1f}%&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Tasa de clasificaci√≥n general: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{0:&amp;lt;15}{1:&amp;lt;15}{2:&amp;gt;8}"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Predictor"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"No Inscritos"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Inscritos"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Observed"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{0:&amp;lt;15}{1:&amp;lt;2.0f}% ({2:&amp;lt;}){3:&amp;gt;6.0f}% ({4:&amp;lt;})"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"No Inscritos"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tn&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;tn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tp&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{0:&amp;lt;16}{1:&amp;lt;1.0f}% ({2:&amp;lt;}){3:&amp;gt;7.0f}% ({4:&amp;lt;}) &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Inscritos"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tn&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;El resultado del comando anterior es algo parecido a esto: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CO6oLYKg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hfwdb74fmgzj1o83oi1x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CO6oLYKg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hfwdb74fmgzj1o83oi1x.png" alt="6a"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;En funci√≥n de las predicciones, podemos concluir que se predijo que el 89.5% de los clientes se  inscribir√≠a para un certificado de dep√≥sito, con una precisi√≥n del 65 % (278/429) para los inscritos y del 90 % (10 785/11 928) para los no inscritos.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6b"&gt;
  &lt;/a&gt;
  6b.
&lt;/h3&gt;

&lt;p&gt;Este modelo es bueno para predecir los clientes no inscritos, pero no  para los inscritos.&lt;/p&gt;

&lt;p&gt;El desempe√±o del modelo depende de la m√©trica y del objetivo que tenga, por ejemplo el modelo que predice SPAM lo que interesa es que no pasen los correos validos a spam, no importa recibir uno que otro spam en el inbox. Eso significa que puedo sacrificar un poco de falsos negativos (spam en el inbox) para minimizar los falsos positivos (correos validos a spam). &lt;/p&gt;

&lt;p&gt;Para optimizar y llegar el desempe√±o √≥ptimo debemos iterar el modelo, en una primera instancia cambiando los hiperpar√°metros para ver si otras combinaciones permiten entrenar un modelo que entregue mejores predicciones.&lt;/p&gt;

&lt;p&gt;Los hiperpar√°metros ajustables del modelo XGBoost son los siguientes: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ca6LTjyp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fkv511gwrf7z38skc3ak.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ca6LTjyp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fkv511gwrf7z38skc3ak.png" alt="6b"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Los hiperpar√°metros que tienen el mayor efecto en la optimizaci√≥n de las m√©tricas de evaluaci√≥n de XGBoost son: alpha, min_child_weight, subsample eta, y num_round.&lt;/p&gt;

&lt;p&gt;Sagemaker cuenta con una herramienta que permite automatizar todas estas entrenamientos de distintas combinaciones de HP el Trabajo de Ajuste de HP (HP Tunning JOB). Lo que hace es realizar un entrenamiento por cada combinaci√≥n de HP que le digamos y nos entrega la mejor combinaci√≥n de HP (que tiene la mejor m√©trica que le hayamos indicado)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adicional"&gt;
  &lt;/a&gt;
  Adicional
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#para-desplegar-un-endpoint-a-partir-de-un-modelo-entrenado-por-un-trabajo-en-entrenamiento-de-sagemaker"&gt;
  &lt;/a&gt;
  Para desplegar un endpoint a partir de un modelo entrenado por un trabajo en entrenamiento de SageMaker:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#Para instanciar el modelo
&lt;/span&gt;&lt;span class="n"&gt;model_from_job&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sagemaker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;estimator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Estimator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"xgboost-2021-04-21-02-30-09-428"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;sagemaker_session&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sagemaker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#para-lanzar-el-modelo-en-el-contenedor-al-igual-que-el-paso-5a-y-puedes-continuar-con-el-resto-de-los-pasos"&gt;
  &lt;/a&gt;
  Para lanzar el modelo en el contenedor. Al igual que el paso 5a y puedes continuar con el resto de los pasos.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;model_from_job&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;initial_instance_count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;instance_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'ml.m4.xlarge'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#para-importar-tu-propio-modelo-entrenado-a-sagemaker"&gt;
  &lt;/a&gt;
  Para importar tu propio modelo entrenado a SageMaker
&lt;/h3&gt;

&lt;p&gt;Primero lo debes subir a S3&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sagemaker.mxnet.model&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MXNetModel&lt;/span&gt;

&lt;span class="n"&gt;sagemaker_model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MXNetModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model_data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'s3://path/to/model.tar.gz'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                             &lt;span class="n"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'arn:aws:iam::accid:sagemaker-role'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                             &lt;span class="n"&gt;entry_point&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'entry_point.py'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#paso-7-termine-los-recursos"&gt;
  &lt;/a&gt;
  Paso 7: Termine los recursos
&lt;/h2&gt;

&lt;p&gt;En este paso, terminar√° los recursos relacionados con Amazon SageMaker.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Importante:&lt;/strong&gt; Terminar los recursos que no se utilizan de forma activa reduce los costos, y es una pr√°ctica recomendada. No terminar sus recursos generar√° cargos.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7a"&gt;
  &lt;/a&gt;
  7a.
&lt;/h3&gt;

&lt;p&gt;Para eliminar el punto de enlace de Amazon SageMaker y los objetos de su bucket de S3, copie, pegue y &lt;strong&gt;Ejecute&lt;/strong&gt; el siguiente c√≥digo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;sagemaker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;delete_endpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xgb_predictor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;bucket_to_delete&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;boto3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'s3'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Bucket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bucket_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;bucket_to_delete&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;all&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Para finalizar debes detener la instancia para evitar cargos adicionales, y si no la vas a utilizar m√°s la puedes eliminar. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#felicitaciones"&gt;
  &lt;/a&gt;
  ¬°Felicitaciones!
&lt;/h2&gt;

&lt;p&gt;Ha aprendido a utilizar Amazon SageMaker para preparar, entrenar, implementar y evaluar un modelo aprendizaje autom√°tico. Amazon SageMaker facilita la creaci√≥n de modelos de aprendizaje autom√°tico y le proporciona todo lo necesario para conectarse r√°pidamente con los datos de entrenamiento y para seleccionar el mejor algoritmo y marco de trabajo para su aplicaci√≥n, mientras administra la infraestructura subyacente completa, de manera que pueda entrenar modelos a escala de petabytes.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ejemplos-aws-sagemaker"&gt;
  &lt;/a&gt;
  Ejemplos AWS Sagemaker
&lt;/h2&gt;

&lt;p&gt;Para que continues aprendiendo te dejo un link con varios ejemplos para practicar:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/aws/amazon-sagemaker-examples"&gt;https://github.com/aws/amazon-sagemaker-examples&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip"&gt;
  &lt;/a&gt;
  Tip
&lt;/h2&gt;

&lt;p&gt;La fuente original de este tutorial esta en una verion 1.X de XGBoost por lo que saltan algunos errores como el de la imagen:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6stM74ri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/txl889fhlk75h6imka0w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6stM74ri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/txl889fhlk75h6imka0w.png" alt="error"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Para corregirlos debes revisar la documentaci√≥n de la &lt;a href="https://sagemaker.readthedocs.io/en/stable/v2.html"&gt;version 2 de XGBoost&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Esto lo puedes aplicar en errores similares en ejemplos de otros algoritmos.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>machinelearning</category>
      <category>python</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Manage your meetings like a boss with self-hosted calender</title>
      <author>Karolis</author>
      <pubDate>Sat, 02 Oct 2021 21:12:12 +0000</pubDate>
      <link>https://dev.to/krusenas/manage-your-meetings-like-a-boss-with-self-hosted-calender-4hlb</link>
      <guid>https://dev.to/krusenas/manage-your-meetings-like-a-boss-with-self-hosted-calender-4hlb</guid>
      <description>&lt;p&gt;Calendly and other scheduling tools are awesome. It made our lives massively easier. We're using it for business meetings, side projects and anything else where we need some flexible coordination. However, most tools are very limited in terms of control, customization, data protection, and most important - they are not free! That's where Calendso &amp;amp; Synpse come in. Self-hosted, all your data sitting on your own machines. API-driven and ready to be deployed on your own domain. Full control of your events and data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In this tutorial we will be deploying a self-hosted Calendso instance that lives under your own DNS domain. You will be able to share meeting links such as &lt;a href="https://calendar.synpse.net/karolis/quick-chat"&gt;https://calendar.synpse.net/karolis/quick-chat&lt;/a&gt; with your colleagues, clients and friends:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--izAcsMpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g6myuf6j24ngkxg7qv7z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--izAcsMpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g6myuf6j24ngkxg7qv7z.png" alt="calendso-karolis"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will also be able to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Integrate it with your Google calendar &lt;/li&gt;
&lt;li&gt;Create multiple users for your organization&lt;/li&gt;
&lt;li&gt;Create teams&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-setup"&gt;
  &lt;/a&gt;
  The setup
&lt;/h2&gt;

&lt;p&gt;Deployment will be handled in a declarative way through Synpse. Incoming traffic will be handled by &lt;a href="https://caddyserver.com/"&gt;Caddy&lt;/a&gt; server which will terminate HTTPS (it will also automatically retrieve TLS certificates for you) and route traffic to &lt;a href="https://cal.com/"&gt;Calendso&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You will also be able to access &lt;a href="https://www.prisma.io/studio"&gt;Prisma Studio&lt;/a&gt; locally to create your and your team's users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://cloud.synpse.net"&gt;Synpse account&lt;/a&gt; - Deployment&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cloudflare.com"&gt;Cloudflare account&lt;/a&gt; - DNS (or any other DNS provider)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you don't have your own DNS domain, just jump in our Discord channel and I will help you out with some alternatives (you can either use Webhook Relay's subdomains or use services like DuckDNS).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configure-dns"&gt;
  &lt;/a&gt;
  Configure DNS
&lt;/h2&gt;

&lt;p&gt;If you are using Cloudflare, creating an A record looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FjlYnQNI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qxq5di9bxi85vrb3e43h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FjlYnQNI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qxq5di9bxi85vrb3e43h.png" alt="a-record"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can consult your DNS provider's documentation on managing A records.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configure-port-forwarding-on-your-router-optional"&gt;
  &lt;/a&gt;
  Configure port forwarding on your router (optional)
&lt;/h2&gt;

&lt;p&gt;If you server where you are setting this up is within your local network, you will need to expose it to the internet. The easy way to do it is just using your own router to forward the ports:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Ajd6pzR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19mbva0jr22ss7wope8b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Ajd6pzR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19mbva0jr22ss7wope8b.png" alt="port-forward"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you don't have a static IP or your network is behind a CGNAT, you can use &lt;a href="https://webhookrelay.com"&gt;https://webhookrelay.com&lt;/a&gt; instead. We will be providing a tutorial on that setup as well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#integrating-with-google-calendar"&gt;
  &lt;/a&gt;
  Integrating with Google calendar
&lt;/h2&gt;

&lt;p&gt;Bookings are great but it would be tedious to check your Calendso instance every day. To allow Calendso to read from and write to our Google calendar, we need to create API credentials and provide them to Calendso. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#enable-the-api"&gt;
  &lt;/a&gt;
  Enable the API
&lt;/h3&gt;

&lt;p&gt;To do that, head to the Google API console and create a new project. It might take a little bit for Google to set up your project but once that's done, head over to the project and click the Enable APIs and Services button.&lt;/p&gt;

&lt;p&gt;Once you click the button, you'll be taken to the API library. In the search box, look for calendar and select the Google Calendar API result and then enable it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#retrieve-credentials"&gt;
  &lt;/a&gt;
  Retrieve credentials
&lt;/h3&gt;

&lt;p&gt;Next, let's head to our credentials page in the Google API console so we can create the Calendso OAuth ID and add our production origin and redirect URI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--77sRjGWY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jmjgjwhet5u7f1t3aoz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--77sRjGWY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jmjgjwhet5u7f1t3aoz.png" alt="gcp-creds"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Your key will be created and you'll be redirected back to the Credentials page where you will see your newly generated OAuth 2.0 Client ID. Select the download option and save this file to your computer. Copy all the contents of the file and add that as the value for the GOOGLE_API_CREDENTIALS environment variable:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GLZr0Kez--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9nnbov8g9lkka5xa649y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GLZr0Kez--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9nnbov8g9lkka5xa649y.png" alt="gcp-creds-secret"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploy-through-synpse"&gt;
  &lt;/a&gt;
  Deploy through Synpse
&lt;/h2&gt;

&lt;p&gt;With Synpse we will be deploying multiple containers to provide us with admin capabilities, database, tunneling (to expose it to the internet) and the Calendso itself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#preparing-the-secrets"&gt;
  &lt;/a&gt;
  Preparing the secrets
&lt;/h3&gt;

&lt;p&gt;First, go to your secrets page and create:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;calendsoPostgres&lt;/strong&gt; with your database password&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;calendsoPostgresConnString&lt;/strong&gt; with &lt;code&gt;postgresql://calendso:PASSWORD@postgres:5432/calendso&lt;/code&gt; (just replace PASSWORD with your database password)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;calendsoEncKey&lt;/strong&gt; with a random key that you generate yourself. You can generate one in your terminal with command &lt;code&gt;openssl rand -base64 32&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Eoxn9Vqc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ipy3qvmnyw8iyjemtnf7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eoxn9Vqc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ipy3qvmnyw8iyjemtnf7.png" alt="secrets"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-the-application"&gt;
  &lt;/a&gt;
  Creating the application
&lt;/h3&gt;

&lt;p&gt;The full spec looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Name of your app&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;synpse-calendso&lt;/span&gt;
&lt;span class="na"&gt;scheduling&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Conditional&lt;/span&gt;
  &lt;span class="c1"&gt;# Need to match your labels&lt;/span&gt;
  &lt;span class="c1"&gt;# Ref: https://docs.synpse.net/synpse-core/applications/scheduling&lt;/span&gt;
  &lt;span class="na"&gt;selectors&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;controller&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;calendso&lt;/span&gt;
      &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ctadeu/calendso:0.0.17-1&lt;/span&gt;
      &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;BASE_URL&lt;/span&gt;
          &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://calendar.synpse.net&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;NEXTAUTH_URL&lt;/span&gt;
          &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://calendar.synpse.net&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;DATABASE_URL&lt;/span&gt;
          &lt;span class="na"&gt;fromSecret&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;calendsoPostgresConnString&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CALENDSO_ENCRYPTION_KEY&lt;/span&gt;
          &lt;span class="na"&gt;fromSecret&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;calendsoEncKey&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;GOOGLE_API_CREDENTIALS&lt;/span&gt;
          &lt;span class="na"&gt;fromSecret&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;calendsoGoogleApiCredentials&lt;/span&gt;
      &lt;span class="na"&gt;restartPolicy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{}&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;prisma&lt;/span&gt;
      &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;codejamninja/prisma-studio:latest&lt;/span&gt;
      &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;5555:5555&lt;/span&gt;
      &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;POSTGRES_URL&lt;/span&gt;
          &lt;span class="na"&gt;fromSecret&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;calendsoPostgresConnString&lt;/span&gt;
      &lt;span class="na"&gt;restartPolicy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{}&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgres&lt;/span&gt;
      &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgres:latest&lt;/span&gt;
      &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/data/calendso-postgres:/var/lib/postgresql/data&lt;/span&gt;
      &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;PGDATA&lt;/span&gt;
          &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/lib/postgresql/data/pgdata&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;POSTGRES_USER&lt;/span&gt;
          &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;calendso&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;POSTGRES_DB&lt;/span&gt;
          &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;calendso&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;POSTGRES_PASSWORD&lt;/span&gt;
          &lt;span class="na"&gt;fromSecret&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;calendsoPostgres&lt;/span&gt;
      &lt;span class="na"&gt;restartPolicy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{}&lt;/span&gt;
    &lt;span class="c1"&gt;# Caddy provides HTTPS&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;caddy&lt;/span&gt;
      &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;caddy:latest&lt;/span&gt;
      &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;caddy&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;reverse-proxy&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;--from&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;calendar.synpse.net:7300&lt;/span&gt; &lt;span class="c1"&gt;# This should be your domain and port, same as in your router&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;--to&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;calendso:3000&lt;/span&gt;
      &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;7300:7300&lt;/span&gt;
      &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/data/calendso-caddy:/data&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/data/calendso-caddy-cfg:/config&lt;/span&gt;
      &lt;span class="na"&gt;restartPolicy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, if you click on Allocations, you should see all containers running and in device details you can see the ports:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--POdo92ea--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5goljuhlg5vkjaztjuxn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--POdo92ea--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5goljuhlg5vkjaztjuxn.png" alt="synpse-device"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you click on Prisma and if your device is locally reachable, you will be able to access the admin dashboard.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Please note, that if your device is exposed to the internet, you should not leave the Prisma container with the port exposed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once in Prisma, follow the official guide from &lt;a href="https://docs.cal.com/docs/self-hosting/docker"&gt;self-hosting section&lt;/a&gt; and:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Click on the User model to add a new user record.&lt;/li&gt;
&lt;li&gt;Fill out the fields (remembering to encrypt your password with &lt;a href="https://bcrypt-generator.com/"&gt;BCrypt&lt;/a&gt;) and click Save 1 Record to create your first user.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once you have logged in, go to the integrations section and connect it with the Google's calendar.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Calendso docs: &lt;a href="https://docs.cal.com/"&gt;https://docs.cal.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Synpse docs: &lt;a href="https://docs.synpse.net"&gt;https://docs.synpse.net&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Webhook Relay docs: &lt;a href="https://docs.webhookrelay.com"&gt;https://docs.webhookrelay.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Cloudflare: &lt;a href="https://cloudflare.com"&gt;https://cloudflare.com&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Originally published on &lt;a href="https://synpse.net/blog/self-hosting-calendso-caddy/"&gt;https://synpse.net/blog/self-hosting-calendso-caddy/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>opensource</category>
      <category>showdev</category>
      <category>devops</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Introduction to JavaScript with Simple Tutorial</title>
      <author>MahoMori</author>
      <pubDate>Sat, 02 Oct 2021 20:56:37 +0000</pubDate>
      <link>https://dev.to/mahomori/introduction-to-javascript-with-simple-tutorial-3ln6</link>
      <guid>https://dev.to/mahomori/introduction-to-javascript-with-simple-tutorial-3ln6</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Okay, you studied the core of HTML and CSS, and can create simple websites now. ...What next? Oh, JavaScript.&lt;/p&gt;

&lt;p&gt;I assume that is the natural thinking process when you start to learn how to create websites. So you start studying JavaScript.&lt;br&gt;
After several hours of going through JavaScript material, one question will cross your mind.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How JavaScript work with HTML and CSS?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this article, I will give you an idea of how you can use JavaScript with HTML and CSS.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#overview-of-walkthrough"&gt;
  &lt;/a&gt;
  Overview of walkthrough
&lt;/h2&gt;

&lt;p&gt;You will be creating a simple website that you can enter a specific year, month and day and it will show you the date.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--21SEE5vX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sqo6oig0pc1jixil1sud.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--21SEE5vX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sqo6oig0pc1jixil1sud.png" alt="final image"&gt;&lt;/a&gt;&lt;em&gt;This is how it will look like.&lt;/em&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#preparation"&gt;
  &lt;/a&gt;
  Preparation
&lt;/h2&gt;

&lt;p&gt;Create HTML, CSS and JavaScript files. Copy and paste codes below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"outer-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"year"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"year (yyyy)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"month"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"month (mm)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"date"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"date (dd)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Check&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;cadetblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.outer-container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;250px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#141414&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you are done copying and pasting, it will look like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gX_XbWGB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5wnzpu33ib7mmf6m8ve8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gX_XbWGB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5wnzpu33ib7mmf6m8ve8.png" alt="After copying and pasting"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-1-queryselector"&gt;
  &lt;/a&gt;
  Step 1: querySelector()
&lt;/h2&gt;

&lt;p&gt;You will want to execute a function that shows date when you click a button. To interact with HTML elements, you need to select them in JavaScript.&lt;br&gt;
Write this line below in JavaScript file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;btn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are selecting a button element with &lt;code&gt;document.querySelector()&lt;/code&gt; and assigning it to &lt;code&gt;btn&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;querySelector()&lt;/code&gt; method is useful as you can use not only element names, but also ids and class names.&lt;br&gt;
For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.class&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are also &lt;code&gt;getElementById()&lt;/code&gt; and &lt;code&gt;getElementsByClassName()&lt;/code&gt; methods to select ids and classes specifically. When using these methods, you don't need "#" and "." before name.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-2-addeventlistener"&gt;
  &lt;/a&gt;
  Step 2: addEventListener()
&lt;/h2&gt;

&lt;p&gt;Next step is to assign an event to execute when the button is clicked.&lt;br&gt;
Copy and paste the code below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;

&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The codes that are written inside &lt;code&gt;function&lt;/code&gt; will be executed when the button is clicked.&lt;br&gt;
There are several other events such as &lt;code&gt;mouseover&lt;/code&gt;. You can check some of them &lt;a href="https://www.w3schools.com/jsref/met_element_addeventlistener.asp"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-3-retrieving-value-inside-raw-input-endraw-"&gt;
  &lt;/a&gt;
  Step 3: Retrieving value inside &lt;code&gt;input&lt;/code&gt;
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#year&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;month&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#month&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#date&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;h2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here, we are combining &lt;code&gt;querySelector&lt;/code&gt; method and &lt;code&gt;.value&lt;/code&gt; to get value from inputs. Also, we are selecting &lt;code&gt;h2&lt;/code&gt; element to show a result.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-4-date-object"&gt;
  &lt;/a&gt;
  Step 4: Date() Object
&lt;/h2&gt;

&lt;p&gt;For calculating day from entered year, month and date, we will pass these values to Date() object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#year&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;month&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#month&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#date&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;h2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;day&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pass arguments and create an instance of Day().&lt;br&gt;
Giving a small explanation of Day() function, it returns current time when no arguments are passed. It has several methods to acquire hours, milliseconds and such. (Read &lt;a href="https://www.w3schools.com/jsref/jsref_obj_date.asp"&gt;this&lt;/a&gt; for reference.)&lt;br&gt;
If you check one part of code, which is &lt;code&gt;const day = new Date(year, month-1, date)&lt;/code&gt;, you might wonder why month is decreased by 1. This is because of the uniqueness of Day() object.&lt;br&gt;
It returns month and day with numbers. For example, January is 0, February is 1, March is 2... and so on. That is why we need to decrease month input by 1.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-5-textcontent"&gt;
  &lt;/a&gt;
  Step 5: textContent
&lt;/h2&gt;

&lt;p&gt;Finally, we will reflect the result to the webpage.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#year&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;month&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#month&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#date&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;h2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;day&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;daysList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sunday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Monday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tuesday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Wednesday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Thursday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Friday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Saturday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;daysList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;day&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDay&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's break it down. Continuing from Step 4, I'll explain &lt;code&gt;getDay()&lt;/code&gt; first.&lt;br&gt;
At the last sentence, you can see &lt;code&gt;text.textContent = daysList[day.getDay()]&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;getDay()&lt;/code&gt; is a method for Date() that returns day in numbers. Starting from Sunday which is 0, Monday is 1, Tuesday is 2... just like how numbers are assigned to each months.&lt;br&gt;
To easily understand the result, we create an array, which is &lt;code&gt;daysList&lt;/code&gt; in our code. &lt;code&gt;day.getDay()&lt;/code&gt; becomes an index in &lt;code&gt;daysList&lt;/code&gt; and is assinged to &lt;code&gt;text.textContent&lt;/code&gt;.&lt;br&gt;
This &lt;code&gt;textContent&lt;/code&gt; is selecting inside text of &lt;code&gt;h2&lt;/code&gt; element so that when button is clicked, the result will be shown on screen.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The whole JavaScript code should look like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;btn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#year&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;month&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#month&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#date&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;h2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;day&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;daysList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sunday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Monday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tuesday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Wednesday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Thursday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Friday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Saturday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;daysList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;day&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDay&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Did it work?&lt;br&gt;
There are still a lot to improve. Even if you don't enter anything or month and date inputs are not between 1 - 12 and 1 - 31, it still returns something. &lt;br&gt;
However, this tutorial is to give a rough idea of interacting with HTML through JavaScript. You can expand and go beyond from here.&lt;/p&gt;

&lt;p&gt;I hope you are now a little familiar with DOM!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Github Actions - Introdu√ß√£o com Java</title>
      <author>Wesley Egberto</author>
      <pubDate>Sat, 02 Oct 2021 20:37:05 +0000</pubDate>
      <link>https://dev.to/wesleyegberto/github-actions-introducao-com-java-1g4m</link>
      <guid>https://dev.to/wesleyegberto/github-actions-introducao-com-java-1g4m</guid>
      <description>&lt;p&gt;Github Actions nos permite automatizar, customizar e executar workflows do desenvolvimento de software diretamente no reposit√≥rio do projeto.&lt;/p&gt;

&lt;p&gt;Podemos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rodar o build continuamente&lt;/li&gt;
&lt;li&gt;executar testes automatizados a cada push&lt;/li&gt;
&lt;li&gt;executar processo de CI completo&lt;/li&gt;
&lt;li&gt;executar processo de CD para diversas clouds e ambientes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O Github Actions possui uma ampla biblioteca de Actions que nos permites executar diversos tipos de a√ß√µes (desde simples build da aplica√ß√£o at√© o build da sua imagem Docker e deploy no seu cluster Kubernetes na AWS).&lt;/p&gt;

&lt;p&gt;Os jobs do Github Actions s√£o orientados √† eventos, isso significa que voc√™ pode configurar a execu√ß√£o de determinado job a partir de uma determinada a√ß√£o (push, PR, merge) no seu reposit√≥rio.&lt;/p&gt;

&lt;p&gt;O Github Actions possui uma camada free que nos disponibiliza um tempo de execu√ß√£o mensal dos jobs e um per√≠odo de reten√ß√£o dos logs de forma limitada, detalhes podem ser acessados &lt;a href="https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#usage-limits"&gt;aqui&lt;/a&gt;.&lt;br&gt;
No plano Enterprise do Github, √© poss√≠vel adicionar processo de aprova√ß√£o em ambientes no workflow a fim de limitar quem pode fazer o qu√™ em determinados ambientes.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#componentes"&gt;
  &lt;/a&gt;
  Componentes
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#workflows"&gt;
  &lt;/a&gt;
  Workflows
&lt;/h3&gt;

&lt;p&gt;Um workflow √© um procedimento declarado e automatizado que adicionamos no reposit√≥rio atrav√©s de um arquivo YAML.&lt;br&gt;
Um workflow √© composto de um ou mais jobs que podem ser agendados ou iniciados por um ou mais eventos.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#events"&gt;
  &lt;/a&gt;
  Events
&lt;/h3&gt;

&lt;p&gt;Um evento √© uma a√ß√£o espec√≠fica que pode disparar um ou mais jobs dos workflows declarados no reposit√≥rio.&lt;br&gt;
Essa a√ß√£o pode ser um push, PR ou merge efetuado no reposit√≥rio.&lt;/p&gt;

&lt;p&gt;Na &lt;a href="https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows"&gt;documenta√ß√£o do Github&lt;/a&gt;, tem a lista de a√ß√µes dispon√≠veis que podemos utilizar para disparar um workflow.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#job"&gt;
  &lt;/a&gt;
  Job
&lt;/h3&gt;

&lt;p&gt;Um job √© composto por um ou mais steps que executam em um mesmo runner de forma sequencial a partir de determinado evento.&lt;br&gt;
Abaixo segue o diagrama mostrando a estrutura do job:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oNvStsVJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iz52vci84k5apxzu2c3x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oNvStsVJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iz52vci84k5apxzu2c3x.png" alt="Fonte: documenta√ß√£o do Github"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Um workflow com mais de um job pode rod√°-los em paralelos ou de forma sequencial, caso seja configurado.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rK-_1G02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l0counwj1a3gsvlktiax.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rK-_1G02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l0counwj1a3gsvlktiax.png" alt="Fonte: documenta√ß√£o do Github"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#actions"&gt;
  &lt;/a&gt;
  Actions
&lt;/h3&gt;

&lt;p&gt;Action s√£o comandos isolados que s√£o combinados em steps para criar um job.&lt;br&gt;
Uma Action √© o menor n√≠vel port√°vel de um workflow, podemos criar e reutilizar Actions atrav√©s de nossos reposit√≥rios ou compartilhar com a comunidade.&lt;br&gt;
Um Action sempre estar√° dentro de um step para poder ser executado no workflow.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#runner"&gt;
  &lt;/a&gt;
  Runner
&lt;/h3&gt;

&lt;p&gt;Um runner √© um server que tem a runner application do Github Actions instalada.&lt;br&gt;
Podemos utilizar um runner hospedado pelo Github ou em nossa pr√≥pria infraestrutura.&lt;br&gt;
Um runner busca jobs dispon√≠veis, roda-os e reporta o progresso, logs e resultados para o reposit√≥rio no Github.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#estrutura-do-workflow"&gt;
  &lt;/a&gt;
  Estrutura do Workflow
&lt;/h2&gt;

&lt;p&gt;O workflow √© declarado em um arquivo YAML com um esquema de declara√ß√£o do Github Actions para definir os eventos, jobs e seus steps.&lt;br&gt;
Esse arquivo YAML fica armazenado junto √† aplica√ß√£o no reposit√≥rio do Github e em seu pr√≥prio diret√≥rio, localizado em &lt;code&gt;.github/workflows/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Quando ocorre um push no reposit√≥rio, o Github verifica se existe a pasta de workflows e, caso exista algum arquivo YAML, √© criado os workflows no reposit√≥rio.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#componentes-do-workflow"&gt;
  &lt;/a&gt;
  Componentes do Workflow
&lt;/h3&gt;

&lt;p&gt;Abaixo seguem alguns campos que podem ser utilizados no arquivo de workflow.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;name&lt;/code&gt;: campo opcional que define o nome do workflow que ser√° exibido no reposit√≥rio.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;on&lt;/code&gt;: campo que define os eventos que ir√£o disparar o seu workflow.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;jobs&lt;/code&gt;: campo que define os jobs deste workflow. O job tem os seguintes campos:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;runs-on&lt;/code&gt;: define o runner do job.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;steps&lt;/code&gt;: declara os steps do job. O step tem os seguintes campos:&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;uses&lt;/code&gt;: define qual action ser√° utilizada neste step do job.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;with&lt;/code&gt;: podemos configurar alguns atributos que s√£o utilizadas pela action definida.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;run&lt;/code&gt;: define o commando que ser√° executado no runner.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Na &lt;a href="https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions"&gt;documenta√ß√£o do Github&lt;/a&gt; podemos ver toda sintaxe dispon√≠vel para construir um workflow.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#primeiro-exemplo"&gt;
  &lt;/a&gt;
  Primeiro Exemplo
&lt;/h3&gt;

&lt;p&gt;Abaixo segue um exemplo de workflow (arquivo &lt;code&gt;.github/workflows/sample.yml&lt;/code&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Github Exemplo&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;check-bats-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-node@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;node-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;14'&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm install -g bats&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;bats -v&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;No workflow declaramos, em &lt;code&gt;on: [push]&lt;/code&gt;, que dever√° rodar sempre que ocorrer um push em qualquer branch do reposit√≥rio.&lt;br&gt;
Tamb√©m √© poss√≠vel limitar as branches que queremos utilizar no disparo do workflow, exemplo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt; &lt;span class="c1"&gt;# executa nos pushes na main&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;releases/**'&lt;/span&gt; &lt;span class="c1"&gt;# executa nas branches com prefixo `releases/`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Na &lt;a href="https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows"&gt;documenta√ß√£o do Github&lt;/a&gt; podemos ver a variedade de op√ß√µes de a√ß√µes que podemos utilizar para disparar um workflow.&lt;/p&gt;

&lt;p&gt;No workflow tamb√©m definimos o nosso workflow a executar os seguintes passos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;uses: actions/checkout@v2&lt;/code&gt;: efetua o git clone do nosso reposit√≥rio;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;uses: actions/setup-node@v2&lt;/code&gt;: utiliza um action para configurar o Nodejs v14;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;run: npm install -g bats&lt;/code&gt;: executa o Npm install para instalar o bats globalmente;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;run: bats -v&lt;/code&gt;: executa o bats instalado anteriomente.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Perceba que os steps do job s√£o executados sequencialmente e os steps seguintes dependem do step anterior.&lt;br&gt;
Isso mostra que o estado do nosso runner √© compartilhado dentro do job, logo, podemos instalar e configurar o runner para utilizar tudo que o nosso projeto dependa para fazer build e publica√ß√£o.&lt;/p&gt;

&lt;p&gt;Alguns exemplos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;configurar o Docker&lt;/li&gt;
&lt;li&gt;configurar credenciais da nossa cloud&lt;/li&gt;
&lt;li&gt;configurar vers√µes das linguagens e ferramentas&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Na aba Actions do reposit√≥rio no Github √© poss√≠vel visualizar a execu√ß√£o desse workflow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Olx3ifec--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7sg806gbjk9n9d4ueopt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Olx3ifec--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7sg806gbjk9n9d4ueopt.png" alt="Resultado do workflow"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#exemplo-de-workflow-completo"&gt;
  &lt;/a&gt;
  Exemplo de Workflow Completo
&lt;/h2&gt;

&lt;p&gt;Para concretizar melhor o poder de introduzir o Github Actions no seu ciclo de vida de desenvolvimento de software.&lt;br&gt;
Vamos visualizar um exemplo de uma aplica√ß√£o Java onde queremos definir um CI que fa√ßa o build, teste e publica√ß√£o do nosso artefato gerado.&lt;/p&gt;

&lt;p&gt;O nosso projeto est√° utilizando o Maven como gerenciado de depend√™ncias e de build. Nele temos configurado os plugins necess√°rios para executar os testes e gerar um relat√≥rio do resultado da execu√ß√£o e da cobertura em HTML. Tamb√©m temos configurado o nosso reposit√≥rio de artefatos para utilizar o Github Artifacts.&lt;/p&gt;

&lt;p&gt;Passos executados pelo workflow:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;fa√ßa o build da aplica√ß√£o&lt;/li&gt;
&lt;li&gt;rode os testes da aplica√ß√£o&lt;/li&gt;
&lt;li&gt;armazene o resultado dos testes para podemos consultar posteriomente&lt;/li&gt;
&lt;li&gt;efetuar publica√ß√£o do nosso artefado constru√≠do para o reposit√≥rio&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#workflow"&gt;
  &lt;/a&gt;
  Workflow
&lt;/h3&gt;

&lt;p&gt;Abaixo segue o arquivo que define nosso workflow com os coment√°rios demonstrados suas capactidades:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Java Workflow Example - Build, Test and Deploy&lt;/span&gt;

&lt;span class="c1"&gt;# configuramos para rodar apenas quando houver um push na master&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;master&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;# `build` √© o nome do job&lt;/span&gt;
  &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# nome para exibir no reposit√≥rio&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Build, Test and Deploy&lt;/span&gt;

    &lt;span class="c1"&gt;# utilizamos uma inst√¢ncia do ubuntu como runner&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# utilizamos a action checkout para fazer o git clone no runner&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;

      &lt;span class="c1"&gt;# utilizamos a action setup-java para configurar a vers√£o necess√°ria do JDK&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Set up JDK &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-java@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;distribution&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;adopt'&lt;/span&gt;
          &lt;span class="na"&gt;java-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;11&lt;/span&gt;
          &lt;span class="na"&gt;architecture&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;x64&lt;/span&gt;

      &lt;span class="c1"&gt;# aqui podemos configurar um cache para cachear as depend√™ncias do projeto,&lt;/span&gt;
      &lt;span class="c1"&gt;# isso vai permitir que as pr√≥ximas execu√ß√µes do workflow sejam mais r√°pidas&lt;/span&gt;
      &lt;span class="c1"&gt;# visto que as depend√™ncias j√° estar√£o disponibilizadas para o runner&lt;/span&gt;
      &lt;span class="c1"&gt;# nota: utilizamos um hash do arquivo POM.xml, ent√£o quando o alterarmos,&lt;/span&gt;
      &lt;span class="c1"&gt;# as depend√™ncias s√£o baixadas novamente&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Cache Maven packages&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/cache@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;~/.m2&lt;/span&gt;
          &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}&lt;/span&gt;
          &lt;span class="na"&gt;restore-keys&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ runner.os }}-m2&lt;/span&gt;

      &lt;span class="c1"&gt;# aqui apenas definimos o commando para executar no runner&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Maven Test&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mvn test&lt;/span&gt;

      &lt;span class="c1"&gt;# aqui criamos a pasta para armazenar o relat√≥rio dos testes&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mkdir coverage-report &amp;amp;&amp;amp; cp -r target/site/jacoco/* coverage-report&lt;/span&gt;

      &lt;span class="c1"&gt;# aqui utilizamos um action para registrar o resultado do teste no nosso workflow,&lt;/span&gt;
      &lt;span class="c1"&gt;# caso ocorra alguma falha em algum teste, ficar√° explicito nos logs de execu√ß√£o aba Actions&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Publish Test Report&lt;/span&gt;
        &lt;span class="na"&gt;if&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ always() }}&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;scacap/action-surefire-report@v1&lt;/span&gt;

      &lt;span class="c1"&gt;# aqui utilizamos um action para fazer a publica√ß√£o do relat√≥rio de testes,&lt;/span&gt;
      &lt;span class="c1"&gt;# esse relat√≥rio pode ser baixado nos detalhes de execu√ß√£o do workflow&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/upload-artifact@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Test Coverage Report&lt;/span&gt;
          &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;coverage-report&lt;/span&gt;

      &lt;span class="c1"&gt;# fazemos constru√ß√£o e publica√ß√£o do artefato constru√≠do&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Maven Build and Publish&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mvn -B deploy&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="c1"&gt;# com estamos utilizado o Github Artifact, passamos o token do reposit√≥rio para fazer upload&lt;/span&gt;
          &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;

      &lt;span class="c1"&gt;# copiamos o artefato constru√≠do para uma pasta espec√≠fica&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mkdir dist &amp;amp;&amp;amp; cp target/*.jar dist&lt;/span&gt;

      &lt;span class="c1"&gt;# aqui fazemos o publica√ß√£o do artefato para que possa ser baixado nos detalhes de execu√ß√£o do workflow&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/upload-artifact@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Package&lt;/span&gt;
          &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dist&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;O workflow acima √© bem √∫til visto que tem todo nosso ciclo de desenvolvimento junto ao reposit√≥rio, facilitando a visualiza√ß√£o e entendimento de todos.&lt;/p&gt;

&lt;p&gt;Ap√≥s executar o workflow podemos ver o seu resultado, como no exemplo abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--51Wieqzy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xsf2pquhj97ehsnj57fz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--51Wieqzy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xsf2pquhj97ehsnj57fz.png" alt="Resultado do workflow CI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;E o Github tamb√©m nos disponibiliza algumas p√°ginas que nos permite construir alguns dashboards para incluir no README do nosso reposit√≥rio, facilitando a visualiza√ß√£o do hist√≥rico e estado atual do projeto.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QjgK7jDW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3stc8fxk4lgvefzcvy6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QjgK7jDW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3stc8fxk4lgvefzcvy6.png" alt="Exemplo de dashboard de status"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O projeto de exemplo utilizado aqui pode ser acessado no seus &lt;a href="https://github.com/wesleyegberto/gh-actions-java"&gt;reposit√≥rio no Github&lt;/a&gt;, nele est√° o projeto Java e outros workflows que utilizei em diferentes testes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclus%C3%A3o"&gt;
  &lt;/a&gt;
  Conclus√£o
&lt;/h2&gt;

&lt;p&gt;O Github Actions √© uma ferramenta bem interessante, muito vers√°til e de f√°cil customiza√ß√£o e utiliza√ß√£o.&lt;br&gt;
A grande vantagem que vejo √© a enorme biblioteca de Actions disponbilizada pela comunidade e por fornecedores (Oracle, Microsoft, Google, Github, etc) que nos permitem fazer qualquer passo necess√°rio.&lt;/p&gt;

&lt;p&gt;E por estar toda definida com uma sintaxe de f√°cil leitura e junto ao projeto, o ciclo de desenvolvimento fica claro para todos que est√£o na equipe, desde o estagi√°rio at√© o s√™nior, o que facilita o onboarding e o compartilhamento de informa√ß√µes no time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#refer%C3%AAncias"&gt;
  &lt;/a&gt;
  Refer√™ncias
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wesleyegberto/gh-actions-java"&gt;Projeto de Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/actions"&gt;Documenta√ß√£o do Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#usage-limits"&gt;Cobran√ßas e Limites&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>github</category>
      <category>actions</category>
      <category>devops</category>
      <category>java</category>
    </item>
    <item>
      <title>Laravel scaffold command</title>
      <author>Tefoh</author>
      <pubDate>Sat, 02 Oct 2021 20:30:38 +0000</pubDate>
      <link>https://dev.to/tefoh/laravel-scaffold-command-2lg</link>
      <guid>https://dev.to/tefoh/laravel-scaffold-command-2lg</guid>
      <description>&lt;p&gt;Hi artisans, i created a package called &lt;a href="https://github.com/Tefoh/laravel-scaffold-command"&gt;Laravel scaffold command&lt;/a&gt;, adds an artisan command that you can generate necessary files for crud applications, either you use laravel as fullstack or a rest-api this can help you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  installation
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;composer require tefoh/laravel-scaffold-command
// &lt;span class="k"&gt;then
&lt;/span&gt;php artisan vendor:publish &lt;span class="nt"&gt;--tag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;scaffold-stubs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thats it and just enter the model or entity you want crud operation with the fields needed. The fields is two parts, first is field name and second is field type this two separated with a colon. The field type must be from laravel migrations available column types, heres the link &lt;a href="https://laravel.com/docs/8.x/migrations#available-column-types"&gt;https://laravel.com/docs/8.x/migrations#available-column-types&lt;/a&gt;. For example to create a crud operation for Category enter this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php artisan scaffold Category &lt;span class="nt"&gt;--fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;name:string,slug:string,parent_id:foreignId
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And for rest-api just add api parameter to create necessary resources instead of views. And controller will be a bit different:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php artisan scaffold Tag &lt;span class="nt"&gt;--api&lt;/span&gt; &lt;span class="nt"&gt;--fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;name:string,slug:string,parent_id:foreignId
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The original idea comes from ruby on rails, they have a similar command. The beauty of this package is you can use laravel stubs and fully customize how controllers and views created when you enter this command. I hope this will be helpful for you :)&lt;/p&gt;

</description>
      <category>php</category>
      <category>laravel</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What is Appwrite and How to use it Efficiently</title>
      <author>Anamika</author>
      <pubDate>Sat, 02 Oct 2021 20:17:28 +0000</pubDate>
      <link>https://dev.to/noviicee/what-is-appwrite-and-how-to-use-it-efficiently-3o1m</link>
      <guid>https://dev.to/noviicee/what-is-appwrite-and-how-to-use-it-efficiently-3o1m</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-appwrite"&gt;
  &lt;/a&gt;
  What is Appwrite
&lt;/h2&gt;

&lt;p&gt;Going by it's &lt;a href="https://appwrite.io/"&gt;official web-page&lt;/a&gt;, Appwrite is a self-hosted solution that provides developers with a set of easy-to-use and integrate REST APIs to manage their core backend needs.&lt;br&gt;
Basically, it is a new open-source, end-to-end, back end server for front-end and mobile developers that allows to build apps much faster. Its main goal is to abstract and simplify common development tasks behind REST APIs and tools, helping developers build advanced apps faster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FEAFdQX3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f2v0oc5bs1zzreew7s24.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FEAFdQX3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f2v0oc5bs1zzreew7s24.png" alt="appwrite"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#where-can-it-be-used"&gt;
  &lt;/a&gt;
  Where can it be used
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vj7aW829--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r55z3cibva0st3yydinz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vj7aW829--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r55z3cibva0st3yydinz.png" alt="how-t-use-it"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we already saw, Appwrite is a self-hosted backend as a service. It is packaged as a set of Docker micro-services. It makes it easier to build applications without writing any backend code. But this isn‚Äôt the only way to use it. Bsically if we go by &lt;a href="https://appwrite.io/docs"&gt;Appwrite's official documentation&lt;/a&gt;, Appwrite wasn‚Äôt designed to replace the backend team, but to provide a better starting point for your project and a better developer experience.&lt;/p&gt;

&lt;p&gt;There a many ways to use Appwrite- Appwrite for Web, Appwrite for Flutter, Appwrite for Android, Appwrite for Server etc. You can find many tutorials, videos, demonstrations, source codes, etc to get started with these applications over &lt;a href="https://github.com/appwrite/awesome-appwrite"&gt;here&lt;/a&gt;. So go ahead and make great use of them!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-use-it-efficiently"&gt;
  &lt;/a&gt;
  How to use it efficiently
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cxCRNuHH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5h7etgu644ni0hcbc8nu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cxCRNuHH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5h7etgu644ni0hcbc8nu.png" alt="who-can-benefit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to take Advantage of the Appwrite API Without Using Any SDK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As developers, sometimes, we might not want to use the Appwrite SDK, but to directly use Appwrite‚Äôs plain HTTP API to integrate our application.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Step- 1: Client Authentication&lt;/em&gt; &lt;br&gt;
If you are integrating from a new client platform, you just need to pass the project ID. This can be done by attaching your request the (PROJECT) header like this:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;curl -XGET -H '(PROJECT): [MY-PROJECT-ID]' -H "Content-type: application/json" 'https://appwrite.io/v1/locale'&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Step-2: Server Authentication&lt;/em&gt;&lt;br&gt;
The server authentication provides more scope permissions than by default. For this step, we need to pass our API key. API keys can be generated from the Appwrite dashboard and, permissions for the applications can also be chosen from here.&lt;/p&gt;

&lt;p&gt;We need to pass the API Key with Appwrite‚Äôs ‚ÄòKEY‚Äô headeras follows:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;curl -XGET -H 'PROJECT: [MY-PROJECT-ID]' -H 'KEY: [MY-API-KEY]' -H "Content-type: application/json" 'https://appwrite.io/v1/users'&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;One can also set an Appwrite header to change the API locale. The Appwrite API has support for 46 different locales, and this number is constantly growing.&lt;br&gt;
You can use the locale service to get different responses from the Appwrite‚Äôs Locale API, or even in case if you want any sort of emails sent to your users in a different language from the default English.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Final Step: Start Sending API Calls&lt;/em&gt;&lt;br&gt;
After authenticating and changing your Appwrite server locale, you can start sending requests to any of the Appwrite API‚Äôs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-and-features"&gt;
  &lt;/a&gt;
  Advantages and Features
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--alyHodFy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7wr94infv64in4gwyteg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--alyHodFy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7wr94infv64in4gwyteg.png" alt="perks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Anonymous Login and JWT&lt;/strong&gt; üîê&lt;br&gt;
Not every app needs users to create an account right away.&lt;br&gt;
With Anonymous Login, save sessions without asking for email addresses, and convert those users to registered accounts later with ease. The implementation is just like creating a normal user session via the createSession method.&lt;br&gt;
&lt;a href="https://hackernoon.com/why-appwrite-08-is-a-great-open-source-firebase-alternative-ed2n34ns"&gt;Know more here&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ARM Support&lt;/strong&gt;&lt;br&gt;
A dynamic arm support is an assistive technology product which helps people with limited arm and shoulder function, to move their arms and hands freely (again), and therefore make it possible to conduct all kinds of daily activities.&lt;br&gt;
Starting with 0.8, install Appwrite on your favorite 64-bit ARM device, from Amazon Graviton2 down to the Raspberry Pi 4! ARM support also contributes in making Appwrite technology agnostic.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Slimmer and Faster&lt;/strong&gt;&lt;br&gt;
The recent versions of Appwrite have includes SMTP server rather than the ClamAV server for development. These changes, have helped reduce the minimum requirements to just 1GB of RAM.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Apart from these, there are many more advantages of using Appwrite. Some of them are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fast and Secure&lt;/li&gt;
&lt;li&gt;Manage Access control&lt;/li&gt;
&lt;li&gt;File Previews&lt;/li&gt;
&lt;li&gt;Image Manipulations&lt;/li&gt;
&lt;li&gt;Authenticate, Confirm and Manage your Users&lt;/li&gt;
&lt;li&gt;Multiple Signin Methods&lt;/li&gt;
&lt;li&gt;Auto-Generated SSL&lt;/li&gt;
&lt;li&gt;Built-in Files and Secrets Encryption&lt;/li&gt;
&lt;li&gt;Built-in Anti-Virus scanner&lt;/li&gt;
&lt;li&gt;Webhooks&lt;/li&gt;
&lt;li&gt;Background Tasks&lt;/li&gt;
&lt;li&gt;Open-Source&lt;/li&gt;
&lt;li&gt;Self-Hosted&lt;/li&gt;
&lt;li&gt;Privacy&lt;/li&gt;
&lt;li&gt;Cross-Platform&lt;/li&gt;
&lt;li&gt;Flutter Support&lt;/li&gt;
&lt;li&gt;Audit Logging&lt;/li&gt;
&lt;li&gt;Input Validation&lt;/li&gt;
&lt;li&gt;Abuse Protection&lt;/li&gt;
&lt;li&gt;HTTP\2 Support&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;You can join the &lt;a href="https://appwrite.io/discord"&gt;Appwrite Community on Discord&lt;/a&gt;. It can help newcomers clear more doubts and provide them with constant support regarding Appwrite.&lt;br&gt;
You can also check the &lt;a href="https://github.com/appwrite"&gt;Github Repositories here&lt;/a&gt;. These can help you find lots of resources about Appwrite, including text, video tutorials and many demo applications.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Happy Appwriting&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Af-3MsZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1pity0hbp9hvu93iohp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Af-3MsZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1pity0hbp9hvu93iohp.png" alt="party"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>appwrite</category>
      <category>hacktoberfest</category>
      <category>beginners</category>
      <category>opensource</category>
    </item>
    <item>
      <title>10 HTML tips &amp; tricks you need to know</title>
      <author>Varun Sharma</author>
      <pubDate>Sat, 02 Oct 2021 20:02:00 +0000</pubDate>
      <link>https://dev.to/varun508/10-html-tips-tricks-you-need-to-know-5hc7</link>
      <guid>https://dev.to/varun508/10-html-tips-tricks-you-need-to-know-5hc7</guid>
      <description>&lt;h3&gt;
  &lt;a href="#1-create-an-accordion-with-html"&gt;
  &lt;/a&gt;
  1. Create an accordion with HTML
&lt;/h3&gt;

&lt;p&gt;Yes, you can actually create an accordion purely using HTML. Here's how&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;details&amp;gt;
  &amp;lt;summary&amp;gt;View Features&amp;lt;/summary&amp;gt;
  &amp;lt;ul&amp;gt;
    &amp;lt;li&amp;gt;Unlimited bookmarks&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;Nested collections&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;Import and export&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;Link to web archive&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;Mobile support&amp;lt;/li&amp;gt;
  &amp;lt;/ul&amp;gt;
&amp;lt;/details&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;¬†&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-show-the-result-with-the-raw-ltoutputgt-endraw-element"&gt;
  &lt;/a&gt;
  2. Show the result with the &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; element
&lt;/h3&gt;

&lt;p&gt;The output element can show the result performed by the script. It auto-updates when the input values change&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;form oninput="r.value=parseInt(a.value)+parseInt(b.value)+parseInt(c.value)"&amp;gt;
  &amp;lt;input type="number" id="a" value="100"&amp;gt;
  +&amp;lt;input type="number" id="b" value="50"&amp;gt;
  +&amp;lt;input type="number" id="c" value="50"&amp;gt;
  =&amp;lt;output name="r" for="a b c"&amp;gt;&amp;lt;/output&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cj1SOPRY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633192427584/_JQm7njNA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cj1SOPRY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633192427584/_JQm7njNA.png" alt="Screenshot 2021-10-02 at 10.03.31 PM.png"&gt;&lt;/a&gt;&lt;br&gt;
¬†&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3-create-gauges-with-the-raw-ltmetergt-endraw-element"&gt;
  &lt;/a&gt;
  3. Create gauges with the &lt;code&gt;&amp;lt;meter&amp;gt;&lt;/code&gt; element
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;label for="ruby"&amp;gt;Ruby:&amp;lt;/label&amp;gt;
&amp;lt;meter id="ruby" min="0" max="100" low="35" high="65" optimum="95" value="25"&amp;gt;&amp;lt;/meter&amp;gt;&amp;lt;br /&amp;gt;

&amp;lt;label for="java"&amp;gt;Java:&amp;lt;/label&amp;gt;
&amp;lt;meter id="java" min="0" max="100" low="35" high="65" optimum="95" value="50"&amp;gt;&amp;lt;/meter&amp;gt;&amp;lt;br /&amp;gt;

&amp;lt;label for="js"&amp;gt;JavaScript:&amp;lt;/label&amp;gt;
&amp;lt;meter id="js" min="0" max="100" low="35" high="65" optimum="85" value="90"&amp;gt;&amp;lt;/meter&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qJax4FQ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633193774397/aypBkGYR0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qJax4FQ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633193774397/aypBkGYR0.png" alt="Screenshot 2021-10-02 at 10.25.57 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#4-accept-multiple-input-values"&gt;
  &lt;/a&gt;
  4. Accept multiple input values
&lt;/h3&gt;

&lt;p&gt;You can use the &lt;code&gt;multiple&lt;/code&gt; attribute to accept multiple values for files and email addresses. The user experience is not that good with &lt;code&gt;type="email"&lt;/code&gt; but it works.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="email" placeholder="Email comma separated" multiple&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QVYCkMDX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633194261184/zHJVKpw8k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QVYCkMDX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633194261184/zHJVKpw8k.png" alt="Screenshot 2021-10-02 at 10.34.06 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-create-a-slider-with-html"&gt;
  &lt;/a&gt;
  5. Create a slider with HTML
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  &amp;lt;input type="range" min="1" max="100" value="80"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ou7n3-Pm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633199042284/iYxbjoZg5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ou7n3-Pm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633199042284/iYxbjoZg5.png" alt="Screenshot 2021-10-02 at 11.53.49 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-meta-tag-httpequiv"&gt;
  &lt;/a&gt;
  6. Meta tag http-equiv
&lt;/h3&gt;

&lt;p&gt;Use http-equiv to refresh or redirect to a page after a certain duration&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  &amp;lt;!-- Refreshes the document every 15 seconds --&amp;gt;
  &amp;lt;meta http-equiv="refresh" content="30"&amp;gt;

  &amp;lt;!-- Redirects to thee specified page after 5 seconds --&amp;gt;
  &amp;lt;meta http-equiv="refresh" content="5;https://google.com"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;¬†&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-disable-rightclick"&gt;
  &lt;/a&gt;
  7. Disable right-click
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  &amp;lt;!-- Disables right click on this element --&amp;gt;
  &amp;lt;p oncontextmenu="return false"&amp;gt;Hello&amp;lt;/p&amp;gt;

  &amp;lt;!-- Disables right click on the document --&amp;gt;
  &amp;lt;body oncontextmenu="return false"&amp;gt;....&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;¬†&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-facetime-with-anchor-tag"&gt;
  &lt;/a&gt;
  8. Facetime with anchor tag
&lt;/h3&gt;

&lt;p&gt;Not only facetime, but you can also add skype or fax links&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;a href="facetime:98769876987"&amp;gt;Connect using FaceTime&amp;lt;/a&amp;gt;
&amp;lt;a href="skype:user333?chat"&amp;gt;Connect on skype&amp;lt;/a&amp;gt;
&amp;lt;a href="fax:+123.456.1234567"&amp;gt;+358.555.1234567&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;¬†&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-use-capture-attribute-in-input"&gt;
  &lt;/a&gt;
  9. Use capture attribute in input
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;input type="file" capture="user" accept="audio/*"&amp;gt;

    &amp;lt;!-- Capture 'environment' opens up the back camera --&amp;gt;
    &amp;lt;input type="file" capture="environment" accept="video/*"&amp;gt;

    &amp;lt;!-- Capture 'user' opens up the front camera --&amp;gt;
    &amp;lt;input type="file" capture="user" accept="image/*"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;¬†&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-use-focuswithin"&gt;
  &lt;/a&gt;
  10. Use focus-within
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;html:focus-within&lt;/code&gt; improves the scroll speed of find-in-page in the browser&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    html:focus-within {
         scroll-behavior: smooth;
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;Thank you for reading üí´. &lt;br&gt;
I hope you enjoyed the article. Feedbacks are greatly appreciated üôè&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#find-me-here"&gt;
  &lt;/a&gt;
  Find me here
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/imva508"&gt;Twitter&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/varun508"&gt;Github&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://instagram.com/varunn508"&gt;Instagram&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>html</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Git hooks and Docker for Continuous integration</title>
      <author>Simone</author>
      <pubDate>Sat, 02 Oct 2021 19:59:48 +0000</pubDate>
      <link>https://dev.to/simone_a/git-hooks-and-docker-for-continuous-integration-1c36</link>
      <guid>https://dev.to/simone_a/git-hooks-and-docker-for-continuous-integration-1c36</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3W0GVWgn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6vihzk09exdwfgu710kk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3W0GVWgn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6vihzk09exdwfgu710kk.png" alt="Alt continuous integration"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Continuous Integration is a great software development practice, we can reduce integration problems and we can allow teams to develop cohesive software more rapidly.&lt;/p&gt;

&lt;p&gt;There are many interesting CI tools in the market but I think the dev CI experience can still be improved. I see companies and dev teams struggling and disappointed when they have to run and setup CI pipelines.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Most of the IT companies care about code privacy and they don‚Äôt like the idea to run their code on external public CI platforms. It's possible to have CI solutions on-premise but most of the time this kind of solutions are expensive for the company. For example, Atlassian has stopped selling new on-prem server licenses. &lt;a href="https://www.atlassian.com/migration/assess/journey-to-cloud"&gt;ref.&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#build-queue-and-ci-debug"&gt;
  &lt;/a&gt;
  Build queue and CI debug:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;As a developer and member of a tech team I‚Äôd like to see our CI builds running immediately after a code change and I‚Äôd like to see an easy way for debugging the code when it‚Äôs running on CI. Most of the time I see teams and developers complaining about long builds queues and usually it‚Äôs even quite difficult debugging the code if an error happens during the CI process.&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#cloud-costs"&gt;
  &lt;/a&gt;
  Cloud costs:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;How many times we see commits failing on CI because the code has not been tested enough locally or the code has not been rebased with the main branch yet. Every time we run a build on Cloud it‚Äôs a cost for the team and the company. The good news is we can now easily avoid this scenario. Few years ago, Git has introduced "Git hooks", this new technology allows developers to execute pre-tests before a commit will trigger a new CI process in Cloud.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;After a long brainstorming with some friends, we created a small CI tool &lt;a href="//localci.io"&gt;localci.io&lt;/a&gt; to address all these issues. This tool doesn‚Äôt fit with any IT infrastructure, but this could be useful at least for some team. Probably, in the future it will be completely free but currently we still need to cover some cloud costs.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>devops</category>
      <category>cloud</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Python Database Frameworks</title>
      <author>Mansoor Ahmed</author>
      <pubDate>Sat, 02 Oct 2021 19:33:29 +0000</pubDate>
      <link>https://dev.to/ahmedmansoor012/python-database-frameworks-4ghb</link>
      <guid>https://dev.to/ahmedmansoor012/python-database-frameworks-4ghb</guid>
      <description>&lt;p&gt;Introduction&lt;br&gt;
Python provide packages for record database engines. Those are equally open source and commercial. Flask places no limits on what database packages may be used. Therefore we can work with any of our favorite MySQL, Postgres, SQLite, Redis, MongoDB, and CouchDB. There are likewise a number of database concept layer packages for example SQLAlchemy and MongoEngine. That permit us to work at a higher level with steady Python objects. That allow as an alternative of database entities for instance tables, documents, and query languages.&lt;/p&gt;

&lt;p&gt;In this article, we will know about different Python Database Frameworks. Also learn features to assess when selecting a database framework.&lt;/p&gt;

&lt;p&gt;Description&lt;br&gt;
First we will study the factors to evaluate when picking a database framework. There are number of reasons for assessment as;&lt;/p&gt;

&lt;p&gt;Easiness of use&lt;br&gt;
The database abstraction layers are best as related to straight database engines.&lt;br&gt;
Abstraction layers gives clear conversion of high-level object-oriented operations into low-level database instructions.&lt;br&gt;
These are also named object-relational mappers (ORMs).&lt;br&gt;
Sometimes we called them object-document mappers (ODMs).&lt;br&gt;
Performance&lt;br&gt;
Translation from the object domain into the database domain at the time of conversions of ORMs and ODMS have an overhead.&lt;br&gt;
The performance consequence is insignificant in most cases.&lt;br&gt;
The productivity increase got with ORMs and ODMs distant offsets a negligible performance degradation in general.&lt;br&gt;
Therefore, this isn‚Äôt a valid argument to drop ORMs and ODMs totally.&lt;br&gt;
Database abstraction layer selection is a sensible decision.&lt;br&gt;
As that delivers optional contact to the fundamental database.&lt;br&gt;
Movability&lt;br&gt;
There must be deliberated the database selections open on our development and production platforms.&lt;br&gt;
Such as we should realize what database varieties this service offers if we plan to host our application on a cloud platform.&lt;br&gt;
One more portability feature relates to ORMs and ODMs.&lt;br&gt;
Though some of these frameworks make available an abstraction layer for a single database engine.&lt;br&gt;
Others abstract even higher and be responsible for a choice of database engines.&lt;br&gt;
They are all available with the same object-oriented interface.&lt;br&gt;
A good example of this is the SQLAlchemy ORM.&lt;br&gt;
That maintains a list of interactive database engines with the standard MySQL, Postgres, and SQLite.&lt;br&gt;
Flask integration&lt;br&gt;
Picking a framework that has integration with Flask is not totally essential.&lt;br&gt;
However it will protect us from having to write the integration code ourselves.&lt;br&gt;
Flask integration could make simpler configuration and operation.&lt;br&gt;
As a result using a package exactly designed as a Flask extension should be favored.&lt;br&gt;
Types of Python Frameworks&lt;br&gt;
Following are generally three types of Python frameworks.&lt;/p&gt;

&lt;p&gt;Full-stack&lt;br&gt;
These frameworks are a one-stop-solution for all developer desires.&lt;br&gt;
The form generators, form validation, and template layouts are accessible by a full-stack framework.&lt;br&gt;
Micro-framework&lt;br&gt;
These frameworks are lightweight.&lt;br&gt;
That don‚Äôt deal extra functionalities and features.&lt;br&gt;
Database abstraction layer, form validation, explicit tools and libraries are best examples of micro-frameworks.&lt;br&gt;
Developers using a micro framework essential to add a lot of code and extra requirements by hand.&lt;br&gt;
Asynchronous&lt;br&gt;
To some extent asynchronous framework is a micro framework.&lt;br&gt;
That permits for handling a big set of simultaneous connections.&lt;br&gt;
It was built for Python uses the programming language‚Äôs asyncio library.&lt;br&gt;
Best Python Frameworks&lt;br&gt;
Django&lt;br&gt;
Python Database Frameworks&lt;/p&gt;

&lt;p&gt;Django is an allowed and open-source Python framework.&lt;br&gt;
It allows developers to develop difficult code and apps rapidly.&lt;br&gt;
Django framework helps in developing quality web applications.&lt;br&gt;
It is amongst the greatest python frameworks.&lt;br&gt;
It is used for the rapid development of APIs and web applications.&lt;br&gt;
This top framework make more efficient web application development by providing changed dynamic features.&lt;br&gt;
It has a huge variety of libraries and highlights use, fewer need for coding, and reusability of components.&lt;br&gt;
Main highlights&lt;/p&gt;

&lt;p&gt;An excess of ready-to-use libraries&lt;br&gt;
Verification support&lt;br&gt;
Database schema relocations&lt;br&gt;
Object-relational mapper (ORM)&lt;br&gt;
Sustenance for web servers&lt;br&gt;
Template engine&lt;br&gt;
Powerful URL system&lt;br&gt;
CherryPy&lt;br&gt;
Python Database Frameworks&lt;/p&gt;

&lt;p&gt;CherryPy has shown to be very fast and stable.&lt;br&gt;
It is also an open-source Python web development framework.&lt;br&gt;
It inserts its own multi-hung server that may run on any working framework that supports Python.&lt;br&gt;
CherryPy is a reasonable web framework. It authorizes us to use any kind of technology for data access, templating, and many more.&lt;br&gt;
It can do all that a web framework is able to.&lt;br&gt;
Main Highlights&lt;/p&gt;

&lt;p&gt;Many out-of-the-box tools for verification, hiding, encoding, sessions, static content, and much more.&lt;br&gt;
A simple and easy built-in plugin system&lt;br&gt;
HTTP/1.1-acquiescent WSGI thread-pooled web server&lt;br&gt;
Integral support for coverage, profiling, and testing&lt;br&gt;
Deals ease for running multiple HTTP servers concurrently&lt;br&gt;
Great configuration system&lt;br&gt;
Runs on Android&lt;br&gt;
Bottle&lt;br&gt;
Python Database Frameworks&lt;/p&gt;

&lt;p&gt;Bottle is one of the top Python web framework.&lt;br&gt;
It falls under the class of small-scale frameworks.&lt;br&gt;
Basically, it was developed for building web APIs.&lt;br&gt;
It tries to perform everything in a single source document.&lt;br&gt;
Bottle has no other needs than Python Standard Library.&lt;br&gt;
It permits developers to work closer to the hardware.&lt;br&gt;
Main highlights&lt;/p&gt;

&lt;p&gt;Connecter support for 3rd-party template engines and WSGI or HTTP servers&lt;br&gt;
Permits simple access from cookies, data, and file uploads.&lt;br&gt;
Integral HTTP server&lt;br&gt;
Plugin support for diverse databases&lt;br&gt;
Delivers request-dispatching routes having URL-parameter support&lt;br&gt;
Flask&lt;br&gt;
Python Database Frameworks&lt;/p&gt;

&lt;p&gt;Flask is available under the BSD license that is enthused by the Sinatra Ruby framework.&lt;br&gt;
It beliefs upon the Werkzeug WSGI toolbox and Jinja2 template.&lt;br&gt;
The key drive is to help develop a strong web application base.&lt;br&gt;
Developers may develop the Python backend framework any way they required.&lt;br&gt;
It was designed for applications that are open-ended.&lt;br&gt;
Big companies like LinkedIn and Pinterest use the Flask.&lt;br&gt;
Main highlights&lt;/p&gt;

&lt;p&gt;In-built fast debugger and development server&lt;br&gt;
HTTP request hold&lt;br&gt;
Jinja2 templating&lt;br&gt;
RESTful request dispatching&lt;br&gt;
Support for plugging in any ORM&lt;br&gt;
Supports safe cookies to start client-side sessions&lt;br&gt;
Unicode-based&lt;br&gt;
Unit testing support&lt;br&gt;
WSGI 1.0 compliance&lt;br&gt;
Pyramid&lt;br&gt;
Python Database Frameworks&lt;/p&gt;

&lt;p&gt;The Pyramid is full-stack important Python framework.&lt;br&gt;
Its main goal is to attain as much as with minimalistic difficulty.&lt;br&gt;
The Pyramid‚Äôs most needed feature is the ability to work so well with small as well as full-scale applications.&lt;br&gt;
There is a crowd of resources obtainable to extend its abilities as per the necessities call for.&lt;br&gt;
Main highlights&lt;/p&gt;

&lt;p&gt;Flexible authentication and approval&lt;br&gt;
Function decorators&lt;br&gt;
HTML structure authentication and group Renderers&lt;br&gt;
Single-file applications&lt;br&gt;
Templating and asset specifications&lt;br&gt;
URL mapping based on Routes configuration and generation.&lt;br&gt;
For more details visit:&lt;a href="https://www.technologiesinindustry4.com/2021/10/python-database-frameworks.html"&gt;https://www.technologiesinindustry4.com/2021/10/python-database-frameworks.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
    </item>
    <item>
      <title>HacktoberFest '21 Devlog #1: Starting the adventure</title>
      <author>Danix</author>
      <pubDate>Sat, 02 Oct 2021 19:31:44 +0000</pubDate>
      <link>https://dev.to/danix421/hacktoberfest-21-devlog-1-starting-the-adventure-4pf0</link>
      <guid>https://dev.to/danix421/hacktoberfest-21-devlog-1-starting-the-adventure-4pf0</guid>
      <description>&lt;p&gt;HacktoberFest 2021 started yesterday, on October 1st (for me September 30th), and I registered myself to help open source "one contribution at a time".&lt;br&gt;
I'm very happy to make part of this developer effort to empower the future of software and coding. I hope this year goes better than the earlier ones!&lt;/p&gt;

&lt;p&gt;This is the first part of a devlogs series I'm going to do thought all October, sharing my experience on this HacktoberFest. It's the first time I do something like, so I'll try my best.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#day-1"&gt;
  &lt;/a&gt;
  Day 1
&lt;/h1&gt;

&lt;p&gt;I began preparing myself for the event, making some (small) Pull Requests, searching good repositories to contribute to, getting a good community to talk about the event, and other stuff.&lt;br&gt;
I contributed to a few repositories with random code.&lt;br&gt;
I was very newbie and didn't know what to do, so there where not much effort.&lt;/p&gt;

&lt;p&gt;I just hope these Pull Requests doesn't make me be banned from HacktoberFest üòê.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#day-2-today"&gt;
  &lt;/a&gt;
  Day 2 (today)
&lt;/h1&gt;

&lt;p&gt;I'm beginning to make more quality Pull Requests, so I can really begin this HacktoberFest. I firstly contributed to a collection of website components on GitHub, and now I'm working on other contributions. It's my first year, so I'm very nervious of making something wrong.&lt;br&gt;
I'm doing my best. I want to show my real coding skills, by making valuable code for people üñ•Ô∏è. To be honest, I'm really proud for having joined to HacktoberFest üòÑ.&lt;br&gt;
I hope everything goes good.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#last-words"&gt;
  &lt;/a&gt;
  Last words
&lt;/h1&gt;

&lt;p&gt;At this point, I want to thank all people that are helping me. You all are great people üòé.&lt;br&gt;
I also want to recommend any developer searching for a coding community to join to the Devcord Discord community; they are a great community, where you can code along other people, get help, chat about (almost) any topic and other stuff. You can join with this link: &lt;a href="https://discord.gg/devcord"&gt;https://discord.gg/devcord&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy hacking, and good luck! ‚òï&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
    </item>
  </channel>
</rss>
