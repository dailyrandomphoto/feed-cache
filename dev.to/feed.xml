<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Creating Peacekeeper</title>
      <author>RolandiXor (Roland L. Taylor)</author>
      <pubDate>Tue, 07 Sep 2021 20:31:25 +0000</pubDate>
      <link>https://dev.to/rolandixor/creating-peacekeeper-11bn</link>
      <guid>https://dev.to/rolandixor/creating-peacekeeper-11bn</guid>
      <description>&lt;p&gt;&lt;strong&gt;Peace to you!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this series, my first ever on DEV, I'll breaking down some of the details behind one of my favourite website templates, Peacekeeper! This series is largely aimed at beginners, but anyone can benefit. Plus, your feedback is welcomed, because there's always room to learn and grow!&lt;/p&gt;

&lt;p&gt;First, I'd like to start by explaining what Peacekeeper is, beyond what's immediately obvious, of course.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#peacekeeper-is-a-singlepage-website-template"&gt;
  &lt;/a&gt;
  Peacekeeper is a single-page website template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZeAGqw3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ouqh01ajl0boq5vd8zgn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZeAGqw3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ouqh01ajl0boq5vd8zgn.png" alt="Peacekeeper Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This means that though there are multiple source files for each "tab" in the page, there is only &lt;em&gt;one&lt;/em&gt; functional "page," from an end-user perspective. Though an end user can view several "sub-pages" (for want of a better term), they never actually need to navigate away from the landing page. This approach has a number of advantages, but also some disadvantages, which you'd have to weigh if you're taking this approach.&lt;/p&gt;

&lt;p&gt;I've tried to identify a few below.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;No reloading.&lt;/li&gt;
&lt;li&gt;Faster load times (for most things at least).&lt;/li&gt;
&lt;li&gt;Most necessary resources are already loaded when new content is displayed.&lt;/li&gt;
&lt;li&gt;Potentially easier to manage (from a dev perspective).&lt;/li&gt;
&lt;li&gt;Everything feels self contained.&lt;/li&gt;
&lt;li&gt;(Optionally) everything can be placed in one HTML file.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Tabs cannot be accessed via links (can be worked around).&lt;/li&gt;
&lt;li&gt;Noticeable delay when loading large or complex tabs.&lt;/li&gt;
&lt;li&gt;Requires JavaScript to be enabled, even if using a single file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are probably others, but I think these should give a relatively concise idea of what to expect when choosing this approach. Single-page websites are perfect for companies preparing for a launch, or individuals seeking to hold an online identity via their own website. It is possible to allow users to navigate to specific tabs via hyperlinks to your website, using JavaScript to catch the specific ID of your tab and activate it.&lt;/p&gt;

&lt;p&gt;In Peacekeeper, I did not choose this specific approach, but that's on purpose - because seeing as it is a template, I decided to keep to the basics.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-ill-be-covering-in-this-series"&gt;
  &lt;/a&gt;
  What I'll be covering in this series
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZvA02En8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mnb48ps9ypfvp6ljz3dn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZvA02En8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mnb48ps9ypfvp6ljz3dn.png" alt="A screenshot of the portfolio section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In creating Peacekeeper, I've employed a number of CSS capabilities to achieve some rather exciting results. You can change the background and page theme on the fly, and changes are applied live (with a transition). Each tab comes with its own styles, and thanks to the use of semantic HTML, there's no need to add classes to everything in order to achieve such diverse results. In fact, JavaScript is only used where (for the most part) CSS can't (or shouldn't) be - triggering events.&lt;/p&gt;

&lt;p&gt;All of this will be examined and explored in more detail going forward, and I'm pretty sure the DEV community will it useful!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stay-tuned"&gt;
  &lt;/a&gt;
  Stay tuned!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nhUAy0ye--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u3pyu9vrlb45nqv0aoic.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nhUAy0ye--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u3pyu9vrlb45nqv0aoic.png" alt="A screenshot of the Peacekeeper documentation"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>design</category>
      <category>webdev</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Photomosh</title>
      <author>Cloneable 🇹🇬</author>
      <pubDate>Tue, 07 Sep 2021 19:53:32 +0000</pubDate>
      <link>https://dev.to/cloneableteam/photomosh-3pi2</link>
      <guid>https://dev.to/cloneableteam/photomosh-3pi2</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-photomosh"&gt;
  &lt;/a&gt;
  What is Photomosh?
&lt;/h1&gt;

&lt;p&gt;Photomosh &lt;b&gt;let’s you glitch images, videos, and webCam using WebGL effects&lt;/b&gt;. Save as a output as image, GIF or video.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataLayer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataLayer&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;gtag&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;dataLayer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;gtag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nx"&gt;gtag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="nx"&gt;UA&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;249692&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#is-photomosh-free"&gt;
  &lt;/a&gt;
  Is PhotoMosh free?
&lt;/h1&gt;

&lt;p&gt;PhotoMosh-Pro is a one-time purchase with &lt;b&gt;no recurring fees.&lt;/b&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-output-formats-do"&gt;
  &lt;/a&gt;
  What Output Formats do?
&lt;/h1&gt;

&lt;p&gt;Output saves with same size &amp;amp; duration as input with the following limits: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JPG - 2048 x 2048 px max size.&lt;/li&gt;
&lt;li&gt;GIF - 640 x 640 px max size. 4 seconds max duration. 20 FPS.&lt;/li&gt;
&lt;li&gt;WEB- 1280 X 1280 px max size. 4 seconds max duration. 10 MBPS Data Rate.

&lt;ul&gt;
&lt;li&gt;WEBM output required with only Chrome or      Firefox.&lt;/li&gt;
&lt;li&gt;WEBM videos may be viewed in the browser or Using &lt;a href="https://www.videolan.org/vlc/index.html"&gt;VLC&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Convert WEBM to MP4 using &lt;a href="https://handbrake.fr"&gt;Handbrake&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#what-requirements"&gt;
  &lt;/a&gt;
  What Requirements?
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;PhotoMosh requires a recent device with good WebGL capabilities.&lt;/li&gt;
&lt;li&gt;Render quality is only limited by our devices and an GPU speed. Processed large images or videos may make your computer unresponsive or even crash the browser.&lt;/li&gt;
&lt;li&gt;
&lt;a href="//www.google.com/chrome/fast-and-secure/"&gt;Chrome&lt;/a&gt; recommended.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>devops</category>
    </item>
    <item>
      <title>Django Volt Dashboard - Free Dashboard built with Django 3.2.0 LTS</title>
      <author>Sm0ke</author>
      <pubDate>Tue, 07 Sep 2021 19:52:34 +0000</pubDate>
      <link>https://dev.to/sm0ke/django-volt-dashboard-free-dashboard-built-with-django-3-2-0-lts-2cg3</link>
      <guid>https://dev.to/sm0ke/django-volt-dashboard-free-dashboard-built-with-django-3-2-0-lts-2cg3</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;This (short) article presents an open-source &lt;strong&gt;&lt;a href="https://appseed.us/admin-dashboards/django"&gt;Django Dashboard&lt;/a&gt;&lt;/strong&gt; updated to use the latest version of Django, a leading web framework written in Python. The &lt;strong&gt;product can be downloaded directly from Github&lt;/strong&gt; and used for hobby &amp;amp; commercial products bases on the permissive (MIT) License. Codebase comes with a few simple features like authentication, database, intuitive codebase and Docker support for an easier deployment in production. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://appseed.us/admin-dashboards/django-dashboard-volt"&gt;Django Volt Bootstrap 5&lt;/a&gt;&lt;/strong&gt; - product page (contains DEMO &amp;amp; Sources)&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--APdsfoJj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/app-generator/django-dashboard-volt/master/media/django-dashboard-volt-intro.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--APdsfoJj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/app-generator/django-dashboard-volt/master/media/django-dashboard-volt-intro.gif" alt="Django Volt Dashboard - Simple Dashboard built with Django 3.2.0 LTS."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#product-features"&gt;
  &lt;/a&gt;
  Product Features:
&lt;/h2&gt;

&lt;p&gt;Volt Dashboard is a free and open source Bootstrap 5 Admin Dashboard featuring over 100 components, 11 example pages and 3 plugins with Vanilla JS. There are more than 100 free Bootstrap 5 components included some of them being buttons, alerts, modals, datepickers. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;100+ Components: buttons, alerts, modals, datepickers&lt;/li&gt;
&lt;li&gt;11 Example Pages: Dashboard, SignIN, SignUO, Transactions page&lt;/li&gt;
&lt;li&gt;Vanilla JS - no more jQuery dependency&lt;/li&gt;
&lt;li&gt;Django Codebase: 

&lt;ul&gt;
&lt;li&gt;Latest Dependencies (including Django 3.2.6)&lt;/li&gt;
&lt;li&gt;Docker over Nginx, Gunicorn &lt;code&gt;production-ready&lt;/code&gt; stack&lt;/li&gt;
&lt;li&gt;Simple, intuitive codebase&lt;/li&gt;
&lt;li&gt;SASS to CSS compilation scripts via &lt;code&gt;gulp&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Authentication, Forms validation, SQLite persistence &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Django Volt&lt;/strong&gt; - Widgets Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IDQMs1hF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8cc84fxa8ous4j06eez0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IDQMs1hF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8cc84fxa8ous4j06eez0.png" alt="Django Volt Dashboard - Widgets Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Django Volt&lt;/strong&gt; - User Profile&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MBcJz6mp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t83lua7p09se2sb1tm4e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MBcJz6mp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t83lua7p09se2sb1tm4e.png" alt="Django Volt Dashboard - Widgets Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;The easiest way to start using the product is to use the Docker set up. Here are the steps:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - &lt;a href="https://appseed.us/admin-dashboards/django-dashboard-volt"&gt;Download&lt;/a&gt; and UNZIP the product&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ unzip django-dashboard-volt.zip
$ cd django-dashboard-volt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Start the product using Docker&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose pull &lt;span class="p"&gt;;&lt;/span&gt; docker-compose build &lt;span class="p"&gt;;&lt;/span&gt; docker-compose up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If required, run under &lt;code&gt;sudo&lt;/code&gt; the above command for Linux-based systems. &lt;/p&gt;

&lt;p&gt;Once the app is running on &lt;code&gt;http://localhost:85&lt;/code&gt; we can register a new user and authenticate (project has no default user, we need to create one). &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Django Volt&lt;/strong&gt; Login page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SGPOoeJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u4l5o534d464917fmp1k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SGPOoeJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u4l5o534d464917fmp1k.png" alt="Django Volt Dashboard - Login Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;For complete information please access the official docs available  on the &lt;a href="https://appseed.us/admin-dashboards/django-dashboard-volt"&gt;product page&lt;/a&gt; or ask for support in &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt;. &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources please access:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;Open-source Admin Dashboards&lt;/a&gt; - index provided by AppSeed&lt;/li&gt;
&lt;li&gt;Free &lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt; - a popular article published here on Dev.to &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>django</category>
      <category>opensource</category>
      <category>webdev</category>
      <category>appseed</category>
    </item>
    <item>
      <title>What front end should I choose for a Rails API app?</title>
      <author>Lee Wynne</author>
      <pubDate>Tue, 07 Sep 2021 19:28:57 +0000</pubDate>
      <link>https://dev.to/leewynne/what-front-end-should-i-choose-for-a-rails-api-app-1kci</link>
      <guid>https://dev.to/leewynne/what-front-end-should-i-choose-for-a-rails-api-app-1kci</guid>
      <description>&lt;p&gt;Hey 👋 &lt;/p&gt;

&lt;p&gt;I am thinking of a side project that will leverage a Rails API backend (because I love it, it makes me happy, no science or general logic involved in that decision).&lt;/p&gt;

&lt;p&gt;The front end is likely to be Vue or React depending on which one integrates with crypto wallet sign in the easiest  (specifically metamask or nami).&lt;/p&gt;

&lt;p&gt;Question: What’s the benefit to doing Vue / React with Rails server side versus client side?&lt;/p&gt;

&lt;p&gt;thanks &lt;/p&gt;

</description>
      <category>rails</category>
      <category>help</category>
    </item>
    <item>
      <title>Encoding vs encryption for 📱iOS app devs</title>
      <author>Cossack Labs</author>
      <pubDate>Tue, 07 Sep 2021 19:10:34 +0000</pubDate>
      <link>https://dev.to/cossacklabs/encoding-vs-encryption-for-ios-app-devs-2nll</link>
      <guid>https://dev.to/cossacklabs/encoding-vs-encryption-for-ios-app-devs-2nll</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Anyone&lt;/strong&gt; can install your app from AppStore, decrypt and decode it — and read the data you stored there in a plist. Watch &lt;a href="https://twitter.com/vixentael"&gt;@Anastasiia Voitova&lt;/a&gt; (&lt;a href="https://twitter.com/cossacklabs"&gt;@Cossack Labs&lt;/a&gt;) and &lt;a href="https://twitter.com/V_Pradeilles"&gt;@Vincent Pradeilles&lt;/a&gt; disclosing how to secure your users’ data. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;The truth is&lt;/strong&gt; any data you add to your mobile app when developing can be readable because it's a part of an application bundle. &lt;strong&gt;Every single part of your application bundle is public information.&lt;/strong&gt; And all the info you put there massively affects all the app’s users. So, every secret you put there can reveal your app users’ secrets. &lt;/p&gt;

&lt;p&gt;What are the solutions?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;⚫ If you want to store a particular session/token for the user that your application received during a transition to a backend, you should &lt;strong&gt;put it into a keychain at runtime.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;⚫ If you want to hide some information/tokens that you received in advance while building an application, the good way is to use obfuscation or encryption — probably the easiest is to &lt;strong&gt;split the token and not put it as one string.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Watch this video to get in detail:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Vdsf3o851i0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Often, &lt;strong&gt;plaintext data looks encrypted while it’s just encoded&lt;/strong&gt;. For example, in JWT tokens. Any JWT token is a json encoded in base64 format.&lt;/p&gt;

&lt;p&gt;So, all fields that you add there — email, name, account role, account balance – is stored in plaintext, just &lt;strong&gt;encoded but not encrypted.&lt;/strong&gt; Use sites like jwt.io to find out the token content.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CJWxDgFi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/669c1pvke0u70pyz5qyk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CJWxDgFi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/669c1pvke0u70pyz5qyk.png" alt="Encoded but not encrypted"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;💡 Here’s a solution:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To avoid revealing sensitive information, &lt;strong&gt;don’t put it&lt;/strong&gt; in JWT — for example, use user ID instead of user email. Also, &lt;strong&gt;make sure that all things that look like encrypted, are really encrypted.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Say hi 👋 to &lt;a href="https://twitter.com/vixentael"&gt;Anastasiia&lt;/a&gt; and &lt;a href="https://twitter.com/V_Pradeilles"&gt;Vincent&lt;/a&gt;!&lt;br&gt;
Follow us for more data security tips and news:&lt;br&gt;
🔥&lt;a href="https://www.cossacklabs.com/"&gt;https://www.cossacklabs.com/&lt;/a&gt;&lt;br&gt;
🔥&lt;a href="https://twitter.com/cossacklabs"&gt;https://twitter.com/cossacklabs&lt;/a&gt; &lt;br&gt;
🔥&lt;a href="https://github.com/cossacklabs"&gt;https://github.com/cossacklabs&lt;/a&gt; &lt;br&gt;
🔥&lt;a href="https://www.linkedin.com/company/cossack-labs/"&gt;https://www.linkedin.com/company/cossack-labs/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>swift</category>
      <category>ios</category>
      <category>security</category>
      <category>cryptography</category>
    </item>
    <item>
      <title>JavaScript - Strategy pattern 🧠</title>
      <author>Emi Castellano</author>
      <pubDate>Tue, 07 Sep 2021 18:46:54 +0000</pubDate>
      <link>https://dev.to/emi_castellano/javascript-strategy-pattern-f79</link>
      <guid>https://dev.to/emi_castellano/javascript-strategy-pattern-f79</guid>
      <description>&lt;p&gt;Do you want to avoid writing multiple if/else if or switch statement with a bunch of cases inside?&lt;/p&gt;

&lt;p&gt;The strategy pattern can help us with that.&lt;/p&gt;

&lt;p&gt;Imagine we have a use case where the user can sign up using different methods:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Google Auth&lt;/li&gt;
&lt;li&gt;Facebook Auth&lt;/li&gt;
&lt;li&gt;Form submission&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We want to avoid this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AUTH_METHODS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;GOOGLE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GOOGLE&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;FACEBOOK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;FACEBOOK&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;FORM_SUBMISSION&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;FORM_SUBMISSION&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;googleAuth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ... Google auth code here&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;facebookAuth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ... Facebook Auth code here&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;formSubmissionAuth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ... Form submission code here&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleAuthentication&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;AUTH_METHODS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GOOGLE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;googleAuth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;AUTH_METHODS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FACEBOOK&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;facebookAuth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;formSubmissionAuth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;How can we improve this using the strategy pattern?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AUTH_METHODS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;GOOGLE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GOOGLE&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;FACEBOOK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;FACEBOOK&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;FORM_SUBMISSION&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;FORM_SUBMISSION&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;googleAuth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ... Google auth code here&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;facebookAuth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ... Facebook Auth code here&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;formSubmissionAuth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ... Form submission code here&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;authenticationStrategy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;AUTH_METHODS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GOOGLE&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;googleAuth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;AUTH_METHODS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FACEBOOK&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;facebookAuth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;AUTH_METHODS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FORM_SUBMISSION&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;formSubmissionAuth&lt;/span&gt;
&lt;span class="p"&gt;})[&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;strategy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;authenticationStrategy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;AUTH_METHODS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GOOGLE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;strategy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And if we want to pass parameters to some of the strategy functions, we can do it like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;authenticationStrategy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;AUTH_METHODS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GOOGLE&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;googleAuth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;AUTH_METHODS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FACEBOOK&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;facebookAuth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;AUTH_METHODS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FORM_SUBMISSION&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;formSubmissionAuth&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;javascript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;strategyPattern&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})[&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The strategy pattern, returns an object with key/value pair and what determines which key is the one to be "executed" is the &lt;code&gt;[method]&lt;/code&gt; at the end, this is the dependency of our function, whatever value we pass there it will be mapped to the corresponding object key.&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>How To Install &amp; Configure Git On Computer?</title>
      <author>Mansoor Ahmed</author>
      <pubDate>Tue, 07 Sep 2021 18:32:44 +0000</pubDate>
      <link>https://dev.to/ahmedmansoor012/how-to-install-configure-git-on-computer-284l</link>
      <guid>https://dev.to/ahmedmansoor012/how-to-install-configure-git-on-computer-284l</guid>
      <description>&lt;p&gt;Installation of Git on computers has become incredibly easy in recent times. There are one-click installers for both Mac and Windows.&lt;br&gt;
Installing Git on Windows&lt;br&gt;
On Windows, we will download the “Git for Windows” package from here: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://git-for-windows.github.io/"&gt;https://git-for-windows.github.io/&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;When running the installer EXE, you ought to choose the default options on each screen. After finishing the installation, you’ll begin working with Git by starting the “Git Bash” application. You‘ll find it within the Windows START menu, inside the “Git” folder: Installing Git on Mac OS On Mac OS X, a one-click installer package is out there which will be downloaded from here: &lt;a href="https://sourceforge.net/projects/git-osx-installer/"&gt;https://sourceforge.net/projects/git-osx-installer/&lt;/a&gt; Once this is often installed, we will jump right into Git by starting the “Terminal. app” on our Mac. We‘ll find this within the “Utilities” subfolder of our “Applications” folder in Finder:&lt;/p&gt;

&lt;p&gt;Configuring Git&lt;br&gt;
A couple of very basic configurations should be made before we start. We should always set our name and email address also as enable coloring to doll up command outputs:&lt;/p&gt;

&lt;p&gt;$ git config –global user.the name “John Doe”&lt;/p&gt;

&lt;p&gt;$ git config –global user.email “&lt;a href="mailto:john@doe.org"&gt;john@doe.org&lt;/a&gt;”&lt;/p&gt;

&lt;p&gt;$ git config –global color.ui auto&lt;/p&gt;

&lt;p&gt;The Basic Workflow of Version Control &lt;br&gt;
Before we stray in Git commands, we ought to understand what a basic workflow with version control seems like. We‘ll rehearse each step intimately later during this book. But first, let‘s get an understanding of what the workflow, generally, is like. the foremost basic building block of version control may be a “repository”.&lt;/p&gt;

&lt;p&gt;Getting such a repository on our local machine is often wiped out in two ways: If we have a project locally on our computer that’s not yet under version control, we will initialize a replacement repository for this project. If we‘re aged board a project that‘s already running, the likelihood is that there’s a repository on a foreign server (on the web or on our local network). We‘ll then probably be given a URL to the present repository that we’ll then “clone” (download/copy) to our local computer.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;As soon as we’ve got an area repository, we’ll start performing on our files: modify, delete, add, copy, rename, or move files in whatever application (our favorite editor, a file browser, …) we favor . during this step, we don‘t have to be careful with love or money. Just make any changes necessary to maneuver our project forward.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It‘s only you are feeling you‘ve reached an interesting state that we’ve to think about version control again. Then it‘s time to conclude our changes during a commit.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;However, before we commit, we‘ll want to urge a summary of what we‘ve changed thus far. In Git, we‘ll use the “status” command to urge an inventory of all the changes we performed since the last commit: which files did we change? Did we create any new ones or delete some old ones?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Next, we tell Git which of our local changes we would like to conclude within the next commit. Only because a file was changed doesn‘t mean it’ll be a part of a subsequent commit! Instead, we’ve to explicitly decide which changes we want to incorporate. to try to do this, we add them to the so-called “Staging Area”.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now, having added some changes to the area, it‘s time to truly commit these changes. We‘ll need to add a brief and meaningful message that describes what you really did. The commit will then be recorded in our local Git repository, marking a replacement version of your project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;From time to time, we‘ll want to possess a glance at what happened within the project – especially if we‘re working alongside people. The “log” command lists all the commits that were saved in chronological order. This allows us to ascertain which changes were made intimately and helps us comprehend how the project evolved.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Also when collaborating with others, we‘ll both want to share (some of) our changes with them and receive the changes they made. a foreign repository on a server is employed to form this exchange possible.&lt;br&gt;
For more details visit:&lt;a href="https://www.technologiesinindustry4.com/2021/05/how-to-install-configure-git-on-computerhtml"&gt;https://www.technologiesinindustry4.com/2021/05/how-to-install-configure-git-on-computerhtml&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>github</category>
      <category>githunt</category>
    </item>
    <item>
      <title>Tutorial Hell 101✅✅</title>
      <author>Suryaraj Bhaduri</author>
      <pubDate>Tue, 07 Sep 2021 18:32:41 +0000</pubDate>
      <link>https://dev.to/suryaraj1/tutorial-hell-101-8bc</link>
      <guid>https://dev.to/suryaraj1/tutorial-hell-101-8bc</guid>
      <description>&lt;p&gt;&lt;strong&gt;What is Tutorial Hell🔥?&lt;/strong&gt;&lt;br&gt;
Well this is a situation in which the learner always feels incompetent or scared to implement things out on their own and relies heavily on tutorials.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How does one land up in Tutorial Hell?🤔&lt;/strong&gt;&lt;br&gt;
There's no one answer to this, but usually this situation is common in beginners or people trying to master a new skill. At that point they need quick explanation and depend on video tutorials which is a good idea.But over consumption of tutorials leads to a form of dependency which becomes hard to overcome in future.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How do I know if I am in Tutorial Hell or not?😨&lt;/strong&gt;&lt;br&gt;
These are some of the situations that might be an indicator of the same - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You find yourself busy watching video tutorials most of the time&lt;/li&gt;
&lt;li&gt;You think you will not be able to code without an instructor's guidance&lt;/li&gt;
&lt;li&gt;You keep course shopping or spend time on course websites thinking of getting that one course that might teach you the topic the best way possible&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Looks like I am in hell, any idea how to move out of it?🏃&lt;/strong&gt;&lt;br&gt;
No issues. Firstly don't panic and get yourself a glass of water. Now showing you the way out of this place. Well there's only one way I know of which is - &lt;em&gt;"start doing things on your own"&lt;/em&gt;.You will make mistakes, and this might seem very hard at the beginning and even at later stages, but the key 🔑 is to never,ever give up.Am I saying you should never watch tutorials? Absolutely not! You should always go for tutorials whenever you feel like, but its just that the frequency should be lesser than what it was previously.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How I got myself out of the hell?&lt;/strong&gt;&lt;br&gt;
Like many of you budding developers out there, I was in the same place. Was finding it very hard to get out of the same. I was trying to learn front-end web development. Although I had previous knowledge of computer programming, still I faced lot of issues and fear in initial days. Gradually I made up my mind to take on projects on my own and started with the simplest of projects. This helped🎉.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important Note👈&lt;/strong&gt;&lt;br&gt;
If you are in the process of moving out of tutorial hell, you are basically trying to move out of your comfort zone which can be extremely hard. Make sure to not over stress yourself ,take ample rest, drink water, workout and rejuvenate yourself from time to time. This might help make the process a little easier.&lt;/p&gt;

&lt;p&gt;P.S - This is my first ever blog.There are surely tons of things I missed and many places I went wrong. Do let me know in the comments.😄&lt;/p&gt;

</description>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Ember 3.28 and 4.0 Beta Released</title>
      <author>Ember.js</author>
      <pubDate>Tue, 07 Sep 2021 18:30:42 +0000</pubDate>
      <link>https://dev.to/emberjs/ember-3-28-and-4-0-beta-released-10o</link>
      <guid>https://dev.to/emberjs/ember-3-28-and-4-0-beta-released-10o</guid>
      <description>&lt;p&gt;After 3.5 years and 28 minor releases, Ember 3.28 marks the end of the project's 3.x series. To ensure a smooth upgrade path going into the 4.x series, 3.28 has been declared an LTS (Long Term Support) candidate. In six weeks, the latest patch version of 3.28 will be promoted to be the latest LTS release and replace 3.24-LTS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We're also announcing the start of the Ember 4.0 beta cycle for all sub-projects.&lt;/strong&gt; Following the process set in previous major versions, Ember 4.0's beta introduces no new features. Instead, it removes support for deprecated public APIs. We encourage our community (especially addon authors) to help test beta builds and report any bugs before they are published as a stable release in six weeks' time. We also encourage everyone to help maintainers resolve deprecations in their favorite addons. The &lt;a href="https://github.com/ember-cli/ember-try"&gt;ember-try&lt;/a&gt; addon is a great way to continuously test your projects against the latest Ember releases.&lt;/p&gt;

&lt;p&gt;Developers who want to prepare for the upcoming 4.0 version of Ember should work to resolve all deprecation warnings in their apps and addons while using Ember 3.28. An app or addon with no deprecation warnings on Ember 3.28 should be able to upgrade from Ember 4.0 without making significant changes outside of the dependency versions.&lt;/p&gt;

&lt;p&gt;You can read more about Ember's plans for 4.0 in &lt;a href="https://blog.emberjs.com/the-road-to-ember-4-0/"&gt;The Road to Ember 4.0&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#emberjs"&gt;
  &lt;/a&gt;
  Ember.js
&lt;/h2&gt;

&lt;p&gt;Ember.js is the core framework for building ambitious web applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#changes-in-emberjs-328"&gt;
  &lt;/a&gt;
  Changes in Ember.js 3.28
&lt;/h3&gt;

&lt;p&gt;Ember.js 3.28 is an incremental, backwards compatible release of Ember with bug fixes, performance improvements, and a minor deprecation fix. 3.28 introduces no new features, helping to ensure the final release of the 3.x cycle is stable and battle-tested.&lt;/p&gt;

&lt;p&gt;For the full set of changes (including 7 bug fixes), see the &lt;a href="https://github.com/emberjs/ember.js/releases/tag/v3.28.0"&gt;Ember.js 3.28.0 release page&lt;/a&gt; on GitHub.&lt;/p&gt;

&lt;p&gt;In Ember 3.24, various string methods added to the &lt;code&gt;String.prototype&lt;/code&gt; were deprecated for removal in Ember 4.0. &lt;code&gt;htmlSafe&lt;/code&gt; (the version available via string prototype) was supposed to be included in those deprecations, however it was overlooked. This omission is corrected in 3.28.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ember-data"&gt;
  &lt;/a&gt;
  Ember Data
&lt;/h2&gt;

&lt;p&gt;Ember Data is the official data persistence library for Ember.js applications. The changes introduced in Ember Data 3.28 focus on bug fixes and refactors in preparation for 4.0.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#changes-in-ember-data-328"&gt;
  &lt;/a&gt;
  Changes in Ember Data 3.28
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#improvements-to-relationship-materialization-amp-unloading-performance"&gt;
  &lt;/a&gt;
  Improvements to relationship materialization &amp;amp; unloading performance
&lt;/h4&gt;

&lt;p&gt;A number of performance improvements were shipped in Ember Data 3.28, including significant improvements to relationship materialization and unloading performance via &lt;a href="https://github.com/emberjs/data/pull/7491"&gt;emberjs/data#7491&lt;/a&gt; and &lt;a href="https://github.com/emberjs/data/pull/7493"&gt;emberjs/data#7493&lt;/a&gt;. In particular, the performance improvements should be notable when loading large sets of data.&lt;/p&gt;

&lt;p&gt;See the PRs linked above and &lt;a href="https://github.com/emberjs/data/blob/v3.28.3/CHANGELOG.md#release-3280-aug-20-2021"&gt;changelog&lt;/a&gt; for further notes on performance improvements.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#unload-records-from-the-store-when-calling-raw-destroyrecord-endraw-"&gt;
  &lt;/a&gt;
  Unload records from the store when calling &lt;code&gt;destroyRecord&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;destroyRecord&lt;/code&gt; would previously leave the deleted record in the store. This could cause issues if IDs were re-used, or could require extra filtering to confirm that destroyed content was not in an array of models.&lt;/p&gt;

&lt;p&gt;3.28 will unload records from the store when &lt;code&gt;destroyRecord&lt;/code&gt; is called. For more details, see &lt;a href="https://github.com/emberjs/data/pull/7258"&gt;emberjs/data#7258&lt;/a&gt; and the GitHub issues mentioned in the PR.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#custom-model-classes"&gt;
  &lt;/a&gt;
  Custom Model Classes
&lt;/h4&gt;

&lt;p&gt;Used conventionally, Ember Data blends the definition of a model's schema and record API into a single JavaScript class. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Model&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@ember-data/model&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;PersonModel&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Model&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="cm"&gt;/*
   * Define a schema
   */&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="cm"&gt;/*
   * Define an API on the record instance
   */&lt;/span&gt;
  &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;fullName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ember Data 3.28 introduces the ability to separate model schema and record instance class definitions. This is a low-level capability that we expect addon authors to use when they experiment in these areas (possibly others):&lt;/p&gt;

&lt;p&gt;First, forcing the definition (statically or at runtime) of a distinct class for every model can cause performance issues. Large applications may have hundreds of models. If most or all of these models do not require unique classes, we're generating more memory load and asking more of the JIT's type system than they may be necessary. In the extreme case, it may be possible for all record instances in an application to share a single root class.&lt;/p&gt;

&lt;p&gt;Second, the current Ember Data schema definition API forces definitions to be authored in JavaScript. Removing that limitation allows us to experiment with more optimal or powerful ways to encode schema (such as JSON). These alternatives may perform better (in payload size, or in parse/eval), may better support generation and synchronization with API typing systems, and better support static analysis (for example, with TypeScript).&lt;/p&gt;

&lt;p&gt;For further details on these new capabilities, refer to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/rfcs/blob/master/text/0487-custom-model-classes.md"&gt;RFC #487: Custom Model Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/rfcs/blob/master/text/0466-request-state-service.md"&gt;RFC #466: Request State Service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/rfcs/blob/master/text/0463-record-data-state.md"&gt;RFC #463: Record State on RecordData&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/rfcs/blob/master/text/0465-record-data-errors.md"&gt;RFC #463: RecordData Errors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Much of this API surface is already used by the &lt;a href="https://github.com/hjdivad/ember-m3"&gt;ember-m3&lt;/a&gt; project, which provides an alternative model class for Ember Data.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#bug-fixes"&gt;
  &lt;/a&gt;
  Bug Fixes
&lt;/h4&gt;

&lt;p&gt;Ember Data 3.28 introduced 12 bug fixes and some internal refactors. For the full set of changes, see the &lt;a href="https://github.com/emberjs/data/blob/v3.28.3/CHANGELOG.md#release-3280-aug-20-2021"&gt;CHANGELOG.md&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ember-cli"&gt;
  &lt;/a&gt;
  Ember CLI
&lt;/h2&gt;

&lt;p&gt;Ember CLI is the command line interface for managing and packaging Ember.js applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#changes-in-ember-cli-328"&gt;
  &lt;/a&gt;
  Changes in Ember CLI 3.28
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#drop-node-10-support"&gt;
  &lt;/a&gt;
  Drop Node 10 support
&lt;/h4&gt;

&lt;p&gt;Ember CLI 3.28 drops support for Node 10. Node 10 became end of life (it no longer receives security updates) in April 2021.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#introducing-raw-emberaddonprojectroot-endraw-"&gt;
  &lt;/a&gt;
  Introducing &lt;code&gt;ember-addon.projectRoot&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;This new configuration option allows you to run &lt;code&gt;ember serve&lt;/code&gt; from outside of a project's root directory. For example, if you're using yarn workspace or a monorepo and want to support running &lt;code&gt;ember serve&lt;/code&gt; from the root of the repo, update the top-level &lt;code&gt;package.json&lt;/code&gt; to include the following config:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"ember-addon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"projectRoot"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./packages/path-to-ember-project"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more details on the changes in Ember CLI 3.28 and detailed upgrade instructions, please review the &lt;a href="https://github.com/ember-cli/ember-cli/releases/tag/v3.28.0"&gt;Ember CLI 3.28.0 release page&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#upgrading-ember-cli"&gt;
  &lt;/a&gt;
  Upgrading Ember CLI
&lt;/h3&gt;

&lt;p&gt;You may upgrade Ember CLI using the &lt;code&gt;ember-cli-update&lt;/code&gt; project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx ember-cli-update
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This utility will help you to update your app or addon to the latest Ember CLI version. You will probably encounter merge conflicts, in which the default behavior is to let you resolve conflicts on your own. For more information on the &lt;code&gt;ember-cli-update&lt;/code&gt; project, see &lt;a href="https://github.com/ember-cli/ember-cli-update"&gt;the GitHub README&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While it is recommended to keep Ember CLI versions in sync with Ember and Ember Data, this is not required. After updating ember-cli, you can keep your current version(s) of Ember or Ember Data by editing &lt;code&gt;package.json&lt;/code&gt; to revert the changes to the lines containing &lt;code&gt;ember-source&lt;/code&gt; and &lt;code&gt;ember-data&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank You!
&lt;/h2&gt;

&lt;p&gt;As a community-driven open-source project with an ambitious scope, each of these releases serves as a reminder that the Ember project would not have been possible without your continued support. We are extremely grateful to our contributors for their efforts.&lt;/p&gt;

</description>
      <category>ember</category>
      <category>javascript</category>
      <category>news</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Are you ready for React 18?</title>
      <author>Tabassum Khanum</author>
      <pubDate>Tue, 07 Sep 2021 18:24:18 +0000</pubDate>
      <link>https://dev.to/codewithtee/are-you-ready-for-react-18-4ip1</link>
      <guid>https://dev.to/codewithtee/are-you-ready-for-react-18-4ip1</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k4MoyuZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://memegenerator.net/img/instances/84278272/im-ready.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k4MoyuZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://memegenerator.net/img/instances/84278272/im-ready.jpg" alt="cat-1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hey Coders!&lt;br&gt;
  If you are a react developer then you might have already heard about he latest version of React- &lt;strong&gt;React 18 Alpha&lt;/strong&gt;. The team is still working on the update and there is still a lot to come, so in this article let's see what's happening in the version and breakdown it into simple.&lt;/p&gt;

&lt;p&gt;The first thing that comes to our mind every time there is a version update is the latest set of changes will break anything with your current setup,  or whether you will have to learn new completely unrelated concepts? &lt;/p&gt;

&lt;p&gt;The answer is no, we will be able to adopt React 18 without rewrites and try the new features at our own pace.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;React 18 – what can we expect?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1.out-of-the-box improvements (including automatic bathing),&lt;br&gt;
2.new streaming server renderer with built-in support for React.lazy,&lt;br&gt;
3.other concurrent features such as startTransition, useDeferredValue,&lt;br&gt;
4.new root API.&lt;/p&gt;

&lt;p&gt;This release is more focused on User Experience and internal architecture changes, including adaptation to concurrent features.&lt;br&gt;
However, the most important, new addition in React 18 seems to be the concurrent rendering and the related concurrent mode.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Automatic batching&lt;/strong&gt;&lt;br&gt;
React 18 adds out-of-the-box performance improvements by doing more batching by default, removing the need to manually batch updates in application or library code.&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#but-what-is-batching"&gt;
  &lt;/a&gt;
  But, what is batching?
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xZpg6Eml--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d207ibygpg2z1x.cloudfront.net/image/upload/v1607194186/articles_upload/content/g30dkcogshxx2ww2lm70.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xZpg6Eml--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d207ibygpg2z1x.cloudfront.net/image/upload/v1607194186/articles_upload/content/g30dkcogshxx2ww2lm70.jpg" alt="cat-2"&gt;&lt;/a&gt;&lt;br&gt;
Batching is when React groups multiple state updates into a single re-render for better performance. In simple words, batching (grouping) means multiple state updates are combined into a single render.&lt;br&gt;
Whenever you are using setState to change a variable inside any function, instead of making a render at each setState, React instead collects all setStates and then executes them together. This is known as batching.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function App() {
  const [count, setCount] = useState(0);
  const [flag, setFlag] = useState(false);

  function handleClick() {
    setCount(c =&amp;gt; c + 1); // Does not re-render yet
    setFlag(f =&amp;gt; !f); // Does not re-render yet
    // React will only re-render once at the end (that's batching!)
  }

  return (
    &amp;lt;div&amp;gt;
      &amp;lt;button onClick={handleClick}&amp;gt;Next&amp;lt;/button&amp;gt;
      &amp;lt;h1 style={{ color: flag ? "blue" : "black" }}&amp;gt;{count}&amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is great for performance because it avoids unnecessary re-renders.&lt;br&gt;
However, React didn't use to be consistent about when it performed batching. This was because React used to only batch updates during browser events (like a click), but here we’re updating the state after the event has already been handled (in a fetch callback):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function App() {
  const [count, setCount] = useState(0);
  const [flag, setFlag] = useState(false);

  function handleClick() {
    fetchSomething().then(() =&amp;gt; {
      // React 17 and earlier does NOT batch these because
      // they run *after* the event in a callback, not *during* it
      setCount(c =&amp;gt; c + 1); // Causes a re-render
      setFlag(f =&amp;gt; !f); // Causes a re-render
    });
  }

  return (
    &amp;lt;div&amp;gt;
      &amp;lt;button onClick={handleClick}&amp;gt;Next&amp;lt;/button&amp;gt;
      &amp;lt;h1 style={{ color: flag ? "blue" : "black" }}&amp;gt;{count}&amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#what-if-i-dont-want-to-batch"&gt;
  &lt;/a&gt;
  What if I don’t want to batch?
&lt;/h5&gt;

&lt;p&gt;Usually, batching is safe, but some codes may depend on reading something from the DOM immediately after a state change. For those use cases, you can use ReactDOM.flushSync() to opt-out of batching:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { flushSync } from 'react-dom'; // Note: react-dom, not react

function handleClick() {
  flushSync(() =&amp;gt; {
    setCounter(c =&amp;gt; c + 1);
  });
  // React has updated the DOM by now
  flushSync(() =&amp;gt; {
    setFlag(f =&amp;gt; !f);
  });
  // React has updated the DOM by now
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Server-Side Rendering&lt;/strong&gt;&lt;br&gt;
Server-side rendering is a way of rendering the JS data to HTML on the server to save computation on the frontend. This results in a faster initial page load in most cases.&lt;/p&gt;

&lt;p&gt;React performs Server Side Rendering in 4 sequential steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;On the server, data is fetched for each component.&lt;/li&gt;
&lt;li&gt;On the server, the entire app is rendered to HTML and sent to the client.&lt;/li&gt;
&lt;li&gt;On the client, the JavaScript code for the entire app is fetched.&lt;/li&gt;
&lt;li&gt;On the client, the JavaScript connects React to the server-generated HTML, which is known as &lt;em&gt;Hydration&lt;/em&gt;.
In the trivial version(till React 17), SSR had to load the entire page before it can start hydrating page.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This changes in React18, now we can break React components into smaller chunks using &lt;em&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#streaming-html"&gt;
  &lt;/a&gt;
  Streaming HTML
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Suspense fallback={&amp;lt;Spinner /&amp;gt;}&amp;gt;
  {children}
&amp;lt;/Suspense&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;By wrapping the component in , we tell React that it doesn’t need to wait for comments to start streaming the HTML for the rest of the page. Instead, React will send the placeholder (a spinner) instead.&lt;/p&gt;

&lt;p&gt;When the data for the comments is ready on the server, React will send additional HTML into the same stream, as well as a minimal inline script tag to put that HTML in the "right place".&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#selective-hydration"&gt;
  &lt;/a&gt;
  Selective Hydration
&lt;/h4&gt;

&lt;p&gt;Before React 18, hydration couldn't start if the complete JavaScript code for the app hadn't loaded in. For larger apps, this process can take a while.&lt;/p&gt;

&lt;p&gt; lets you hydrate the app before the child components have loaded in.&lt;/p&gt;

&lt;p&gt;By wrapping components in , you can tell React that they shouldn’t block the rest of the page from streaming—and even hydration. This means that you no longer have to wait for all the code to load in order to start hydrating. React can hydrate parts as they’re being loaded.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. startTransition&lt;/strong&gt;&lt;br&gt;
One important use case for startTransition could be when a user starts typing in a search box. The input value has to be immediately updated while the search results could wait few milliseconds(as expected by the user).&lt;/p&gt;

&lt;p&gt;This API provides a way to differentiate between quick updates and delayed updates. The delayed update(i.e. transition of one UI view to another) is termed as Transition Updates.&lt;/p&gt;

&lt;p&gt;For urgent updates like typing, hover, clicking, we call props/functions usually like this :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;setText(input)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For non-urgent or heavy UI updates, we can wrap it in a startTransition API as :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;startTransition(() =&amp;gt; {

  setText(input);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4.The New Root API&lt;/strong&gt;&lt;br&gt;
We usually create a Root level DOM level like his and append the React App. This has now been deprecated and is now called "Legacy Root API"&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from 'react';
import ReactDOM from 'react-dom';

const container = document.getElementById('root') 

ReactDOM.render(&amp;lt;App /&amp;gt;, container);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead, a new Root API is introduced in React18, which looks like this :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from 'react';
import ReactDOM from 'react-dom';
import App from 'App'

const container = document.getEleementById('root')

const root = ReactDOM.createRoot(container)

root.render(&amp;lt;App /&amp;gt;)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;React18 will ship with both Legacy Root API and the New Root API to maintain a smooth transition of React 17(or older) apps to React 18.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wrapping-Up&lt;/strong&gt;&lt;br&gt;
So to summarize, the features that React 18 brings are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Concurrency control with the Transition API,&lt;/li&gt;
&lt;li&gt;Automatic Batching of function calls and events to improve in-app performance, and&lt;/li&gt;
&lt;li&gt;Much faster page loads for SSR with Suspense.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/blog/2021/06/08/the-plan-for-react-18.html"&gt;React 18 docs&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/reactwg/react-18/discussions"&gt;React 18 discussions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you so much for reading this article! I hope this was useful to you in some way.&lt;br&gt;
Happy Coding💜&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_I_Yn0IH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/736x/0d/1d/7c/0d1d7ce1bad64a3b1a2e698114c3e2c8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_I_Yn0IH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/736x/0d/1d/7c/0d1d7ce1bad64a3b1a2e698114c3e2c8.jpg" alt="cat-3"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to create Infinite Scroll with Svelte</title>
      <author>Nelson Adonis Hernandez</author>
      <pubDate>Tue, 07 Sep 2021 18:14:27 +0000</pubDate>
      <link>https://dev.to/nelsoncode/how-to-create-infinite-scroll-with-svelte-199o</link>
      <guid>https://dev.to/nelsoncode/how-to-create-infinite-scroll-with-svelte-199o</guid>
      <description>&lt;p&gt;For this example we will use the Intersection Observer API&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#component-in-svelte"&gt;
  &lt;/a&gt;
  Component in svelte
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;infiniteScroll&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../functions/infiniteScroll&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;pageNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;characters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;Loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;Loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://rickandmortyapi.com/api/character/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;page&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;pageNumber&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="c1"&gt;// SAVE NEW RESULTS&lt;/span&gt;
      &lt;span class="nx"&gt;characters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;([...&lt;/span&gt;&lt;span class="nx"&gt;characters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)]),&lt;/span&gt;
      &lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="nx"&gt;Loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;pageNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pageNumber&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;fetchData&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// WE WAITED A FEW SECONDS&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="c1"&gt;// REACTIVE DECLARATIONS&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;elementRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elementRef&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;infiniteScroll&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;element&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;elementRef&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;box-shawdow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt; &lt;span class="nx"&gt;characters&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;grid-games&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;box-game&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="sr"&gt;/each&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;Loading&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Cargando&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="sr"&gt;/if&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="nx"&gt;ELEMENT&lt;/span&gt; &lt;span class="nx"&gt;OBSERVER&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;Loading&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt; &lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;elementRef&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Cargando&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="sr"&gt;/if&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#function-of-intersection-observer"&gt;
  &lt;/a&gt;
  Function of Intersection Observer
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;infiniteScroll&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;observer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;IntersectionObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isIntersecting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Is Intersecting&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;threshold&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//Element of DOM&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://github.com/NelsonCode/svelte-infinite-scroll-example"&gt;Code of example in Github 🔗&lt;/a&gt;&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>javascript</category>
      <category>frontend</category>
      <category>nelsoncode</category>
    </item>
    <item>
      <title>Trigger an onClick event outside the child element, works for nested child components too.</title>
      <author>Hamsa H N</author>
      <pubDate>Tue, 07 Sep 2021 18:08:48 +0000</pubDate>
      <link>https://dev.to/hamsahn/trigger-an-onclick-event-outside-the-child-element-works-for-nested-child-components-too-abf</link>
      <guid>https://dev.to/hamsahn/trigger-an-onclick-event-outside-the-child-element-works-for-nested-child-components-too-abf</guid>
      <description>&lt;p&gt;Say, you have a non-modal component like dropdown or the menu and I'm sure one thing you'd definitely need is to close/hide the content of the component when user clicks outside the component too, not just on the dropdown or menu button.&lt;/p&gt;

&lt;p&gt;It is one of the common requirements and here's how its achieved:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Add click eventListener to the parent div.&lt;/li&gt;
&lt;li&gt;Exclude the child div.&lt;/li&gt;
&lt;li&gt;Remove the click eventListner on component unmount.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;1. Add click eventListener to the parent div&lt;/strong&gt;&lt;br&gt;
Assign a id to the parent and top-level child div element, if not already. On componentDidMount() of the child element, add a click event listener as shown in the below code.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YKBmcrJe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rv6mtx3a1f06kuu3tvb5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YKBmcrJe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rv6mtx3a1f06kuu3tvb5.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Exclude the child div&lt;/strong&gt;&lt;br&gt;
Exclude the child component, otherwise we end up closing the dropdown/menuitems even when these items are clicked.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2xAWqF3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3zw1p89dq6akod0qzf8r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2xAWqF3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3zw1p89dq6akod0qzf8r.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make sure we use &lt;strong&gt;!topLevelChild.contains(e.target)&lt;/strong&gt; and not &lt;strong&gt;topLevelChild !== e.target&lt;/strong&gt; because all the nested child elements are also supposed to be excluded. Choosing the later works fine if there is only one child div element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Remove the click eventListner on component unmount&lt;/strong&gt;&lt;br&gt;
An important step not to leave behind is removing the event listener when the child unmounts from the DOM, to avoid unnecessary addition of the event listners every time its expanded. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ia2cyhDa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/siiwgdvn0bx4gcs1nz3v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ia2cyhDa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/siiwgdvn0bx4gcs1nz3v.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy coding:)&lt;/p&gt;

</description>
      <category>outsideclick</category>
      <category>react</category>
      <category>onclick</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
