<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Colorful Rain with JS</title>
      <author>Jatin Sharma</author>
      <pubDate>Wed, 15 Dec 2021 17:43:14 +0000</pubDate>
      <link>https://dev.to/j471n/colorful-rain-with-js-514j</link>
      <guid>https://dev.to/j471n/colorful-rain-with-js-514j</guid>
      <description>&lt;p&gt;In this article, we are going to build a container that generates rain by using JS. And it is a colorful rain with random colors. You can play with colors however you want. So first, let's see what are we building.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#preview"&gt;
  &lt;/a&gt;
  Preview
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p65PpJxD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/pt4KC8x.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p65PpJxD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/pt4KC8x.gif" alt="preview" width="809" height="351"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's look at the code, how we can make that work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"rain-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.rain-container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;i&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;120px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;999px&lt;/span&gt; &lt;span class="m"&gt;999px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;animate&lt;/span&gt; &lt;span class="m"&gt;5s&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;animate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-120px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100vh&lt;/span&gt; &lt;span class="err"&gt;+&lt;/span&gt; &lt;span class="m"&gt;120px&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  Javascript
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rainContainer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.rain-container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// background Colors for the raindrop&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;background&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;linear-gradient(transparent, aqua)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;linear-gradient(transparent, red)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;linear-gradient(transparent, limegreen)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;linear-gradient(transparent, white)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;linear-gradient(transparent, yellow)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// amount of raindops&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Looping and creating the raindrop then adding to the rainContainer&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//  Creating and Element&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;drop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;i&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;//   CSS Properties for raindrop&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;raindropProperties&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;positionX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;s&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;s&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
    &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="c1"&gt;//   Setting Styles for raindrop&lt;/span&gt;
  &lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;raindropProperties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;raindropProperties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;positionX&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;animationDelay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;raindropProperties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;animationDuration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;raindropProperties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;raindropProperties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;opacity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;raindropProperties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;//   Appending the raindrop in the raindrop container&lt;/span&gt;
  &lt;span class="nx"&gt;rainContainer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/j471n/embed/GRMNeZG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/j471n/pen/GRMNeZG"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--601Kx282--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://svgshare.com/i/cqh.svg" alt="codepen" width="300" height="66"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h3&gt;

&lt;p&gt;This is it. You can simply do that with this and you can also take this to the next level. If you enjoyed this article then don't forget to press ❤️. If you have any queries or suggestions don't hesitate to drop them. See you. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can extend your support by buying me a Coffee.😊👇&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/j471n"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GUX4imFy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/2QWo3cm.png" alt="buymecoffee" width="374" height="88"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#you-might-be-interested-in-"&gt;
  &lt;/a&gt;
  You might be interested in -
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/creative-hover-menu-with-css-513c"&gt;Creative Hover Menu with CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/typing-effect-by-using-css-50p"&gt;Typing Effect by using CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/curved-css-timeline-5ab3"&gt;Curved Timeline in CSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>The most important use Websites &amp; Tools &amp; communities for Web Developers</title>
      <author>Mahmoud EL-kariouny</author>
      <pubDate>Wed, 15 Dec 2021 17:34:28 +0000</pubDate>
      <link>https://dev.to/mahmoudessam/the-most-important-use-websites-tools-communities-for-web-developers-680</link>
      <guid>https://dev.to/mahmoudessam/the-most-important-use-websites-tools-communities-for-web-developers-680</guid>
      <description>&lt;h4&gt;
  &lt;a href="#hosting-amp-deployment"&gt;
  &lt;/a&gt;
  Hosting &amp;amp; Deployment
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Netlify &lt;/li&gt;
&lt;li&gt;Heroku&lt;/li&gt;
&lt;li&gt;Google Cloud Platform&lt;/li&gt;
&lt;li&gt;Amazon Web Services&lt;/li&gt;
&lt;li&gt;Microsoft Azure&lt;/li&gt;
&lt;li&gt;Oracle Cloud&lt;/li&gt;
&lt;li&gt;IBM Cloud&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#royaltyfree-images-amp-video"&gt;
  &lt;/a&gt;
  Royalty-Free Images &amp;amp; Video
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Unsplash&lt;/li&gt;
&lt;li&gt;Pexels&lt;/li&gt;
&lt;li&gt;Coverr&lt;/li&gt;
&lt;li&gt;Undraw&lt;/li&gt;
&lt;li&gt;Storyset&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#icons-amp-fonts"&gt;
  &lt;/a&gt;
  Icons &amp;amp; Fonts
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Google Fonts&lt;/li&gt;
&lt;li&gt;Flaticon&lt;/li&gt;
&lt;li&gt;Font Awesome&lt;/li&gt;
&lt;li&gt;Animated icons8.com&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#learning"&gt;
  &lt;/a&gt;
  Learning
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Freecodecamp&lt;/li&gt;
&lt;li&gt;Theodinproject&lt;/li&gt;
&lt;li&gt;Mem.dev&lt;/li&gt;
&lt;li&gt;smashingmagazine&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#mockup-tools"&gt;
  &lt;/a&gt;
  Mockup Tools
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Figma&lt;/li&gt;
&lt;li&gt;Zeplin&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#freelancing"&gt;
  &lt;/a&gt;
  Freelancing
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Upwork&lt;/li&gt;
&lt;li&gt;freelancer&lt;/li&gt;
&lt;li&gt;Fiverr&lt;/li&gt;
&lt;li&gt;PeoplePerHour&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#project-design-ideas"&gt;
  &lt;/a&gt;
  Project Design Ideas
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Awwwards&lt;/li&gt;
&lt;li&gt;Dribbble&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#exercises-amp-algorithms"&gt;
  &lt;/a&gt;
  Exercises &amp;amp; Algorithms
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Leetcode&lt;/li&gt;
&lt;li&gt;Exercism&lt;/li&gt;
&lt;li&gt;Codewars&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#general-tools"&gt;
  &lt;/a&gt;
  General Tools
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Emailjs&lt;/li&gt;
&lt;li&gt;Caniuse&lt;/li&gt;
&lt;li&gt;Image compressor&lt;/li&gt;
&lt;li&gt;Css-tricks&lt;/li&gt;
&lt;li&gt;free-for.dev&lt;/li&gt;
&lt;li&gt;mytemplate.xyz&lt;/li&gt;
&lt;li&gt;getavataaars.com&lt;/li&gt;
&lt;li&gt;devdocs.io&lt;/li&gt;
&lt;li&gt;drawsql.app&lt;/li&gt;
&lt;li&gt;mockaroo&lt;/li&gt;
&lt;li&gt;jsonplaceholder.typicode&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#communities"&gt;
  &lt;/a&gt;
  Communities
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;dev.to&lt;/li&gt;
&lt;li&gt;indiehackers&lt;/li&gt;
&lt;li&gt;hackernoon&lt;/li&gt;
&lt;li&gt;quora&lt;/li&gt;
&lt;li&gt;codeproject&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All the best for you :)&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Dockside (Open Source) - Provision dev containers and staging environments with IDEs</title>
      <author>Ashley</author>
      <pubDate>Wed, 15 Dec 2021 17:03:45 +0000</pubDate>
      <link>https://dev.to/awilliams/dockside-open-source-provision-dev-containers-and-staging-environments-with-ides-2721</link>
      <guid>https://dev.to/awilliams/dockside-open-source-provision-dev-containers-and-staging-environments-with-ides-2721</guid>
      <description>&lt;p&gt;We're excited to announce the open-source release of Dockside, a development tool for provisioning lightweight access-controlled development containers, staging environments and sandboxes - aka ‘devtainers’ - on local machines, on-premises (raw metal or VM) or in the cloud.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href="https://github.com/newsnowlabs/dockside"&gt;https://github.com/newsnowlabs/dockside&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dockside is a tool for provisioning lightweight access-controlled IDEs, staging environments and sandboxes - aka ‘devtainers’ - on local machines, on-premises (raw metal or VM) or in the cloud.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who is Dockside for?&lt;/strong&gt;&lt;br&gt;
→ Developers: Work from anywhere (it is browser-based) in a clone of your production environment. Switch between/hand over tasks instantly. No more laborious branch switching, or committing code before it’s ready. ‘git stash’ will be a thing of the past!&lt;/p&gt;

&lt;p&gt;→ Code Reviewers: Access your colleagues’ devtainers directly. No longer must you stare at their code wondering what it does, or waste time on setup, when their code is already running. Comment on and correct code in-place.&lt;/p&gt;

&lt;p&gt;→ Product Managers, Stakeholders &amp;amp; Clients: Access always-on but secure staged versions of the dev team’s work and works-in-progress, from wherever you are in the world.&lt;/p&gt;

&lt;p&gt;Dockside has been built in-house by the team at NewsNow - one of the most popular news websites in the UK - and has been relied upon over the past few years for all our daily development, product review, staging and testing needs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To learn more and try Dockside, check out&lt;/strong&gt; &lt;a href="https://github.com/newsnowlabs/dockside"&gt;https://github.com/newsnowlabs/dockside&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dockside is stable, but under active development, so any ideas, suggestions, or feedback would be gratefully appreciated. Also, if you’d like to be paid to work on Dockside, among our other projects, we’re hiring: &lt;a href="https://www.newsnow.co.uk/careers/"&gt;https://www.newsnow.co.uk/careers/&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>opensource</category>
      <category>docker</category>
      <category>ide</category>
    </item>
    <item>
      <title>What is the difference between Amazon RDS Read Replicas vs Multi AZ</title>
      <author>Vijay Patel</author>
      <pubDate>Wed, 15 Dec 2021 16:16:52 +0000</pubDate>
      <link>https://dev.to/easyawslearn/what-is-the-difference-between-amazon-rds-read-replicas-vs-multi-az-350</link>
      <guid>https://dev.to/easyawslearn/what-is-the-difference-between-amazon-rds-read-replicas-vs-multi-az-350</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-relational-database-service-rds"&gt;
  &lt;/a&gt;
  What is Relational Database Service (RDS)
&lt;/h2&gt;

&lt;p&gt;Amazon Relational Database Service (Amazon RDS) makes it easy to set up, operate, and scale a relational database in the cloud. &lt;br&gt;
It provides cost-efficient and resizable capacity while automating time-consuming administration tasks such as hardware provisioning, database setup, patching and backups. &lt;br&gt;
It frees you to focus on your applications so you can give them the fast performance, high availability, security, and compatibility they need.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Here is the full dedicated video on this topic👇👇&lt;/code&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=70EJ-qSBBXQ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ftvtuyYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2qljo37ti42q0k7at1ni.png" alt="Image description" width="480" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-amazon-rds-read-replicas"&gt;
  &lt;/a&gt;
  What is Amazon RDS Read Replicas?
&lt;/h2&gt;

&lt;p&gt;The read replica operates as a DB instance that allows only read-only connections. Applications connect to a read replica the same way they do to any DB instance. Amazon RDS replicates all databases in the source DB instance. The Oracle DB engine supports replica databases in mounted mode.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-amazon-rds-multi-az"&gt;
  &lt;/a&gt;
  What is Amazon RDS Multi AZ?
&lt;/h2&gt;

&lt;p&gt;RDS Multi-AZ. Amazon RDS Multi-AZ deployments provide enhanced availability for database instances within a single AWS Region. With Multi-AZ, your data is synchronously replicated to a standby instance in a different AZ.&lt;/p&gt;




&lt;p&gt;▬▬▬▬▬▬ WANT TO LEARN MORE? ▬▬▬▬▬▬&lt;br&gt;
Full Terraform tutorial ► &lt;a href="https://bit.ly/2GwK8V2"&gt;https://bit.ly/2GwK8V2&lt;/a&gt;&lt;br&gt;
DevOps Tools, like Ansible ► &lt;a href="https://bit.ly/3iASHuP"&gt;https://bit.ly/3iASHuP&lt;/a&gt;&lt;br&gt;
Docker Tutorial ► &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;br&gt;
AWS Tutorial ► &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;br&gt;
GCP Tutorial ► &lt;a href="https://bit.ly/3mwh412"&gt;https://bit.ly/3mwh412&lt;/a&gt;&lt;br&gt;
Jenkins Tutorials ► [&lt;a href="https://bit.ly/3iHnfv4"&gt;https://bit.ly/3iHnfv4&lt;/a&gt;]&lt;/p&gt;

</description>
      <category>aws</category>
      <category>database</category>
      <category>readreplica</category>
      <category>multiaz</category>
    </item>
    <item>
      <title>JMeter 5.4.1 fix for Security CVE-2021-44228 issue</title>
      <author>Boga Sebastian Nicolae</author>
      <pubDate>Wed, 15 Dec 2021 15:59:31 +0000</pubDate>
      <link>https://dev.to/sebiboga/jmeter-541-fix-for-security-cve-2021-44228-issue-4joc</link>
      <guid>https://dev.to/sebiboga/jmeter-541-fix-for-security-cve-2021-44228-issue-4joc</guid>
      <description>&lt;p&gt;In case you installed on Windows, JMeter 5.4.1 from the Github repo: &lt;a href="https://github.com/sebiboga/install-jmeter-windows"&gt;install-jmeter-windows&lt;/a&gt;, by now you should know that you are impacted by Security issue CVE-2021-44228 because JMeter is a JAVA application&lt;/p&gt;

&lt;p&gt;Here you can find an automatic tool that will fix your vulnerability by downloading the log4j version 2.16&lt;/p&gt;

&lt;p&gt;STEPS:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;STOP JMeter GUI&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;download Release v01 from here: &lt;a href="https://github.com/sebiboga/jmeter-fix-cve-2021-44228-windows/releases/tag/v01"&gt;https://github.com/sebiboga/jmeter-fix-cve-2021-44228-windows/releases/tag/v01&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;unzip the Release&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;double click on cve-2021-44228.bat&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;In case you didn't installed JMeter in C:\JMeter\apache-jmeter-5.4.1, you'll have to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; EDIT the bat file and on row 2, update your location where JMeter is installed;&lt;/li&gt;
&lt;li&gt;then update all copy commands with correct destination folder&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the batch file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@echo off
cd C:\JMeter\apache-jmeter-5.4.1\lib
del log4j*.*
md C:\JMeter\cve-2021-4428

powershell -command "Invoke-WebRequest   -Uri 'https://dlcdn.apache.org/logging/log4j/2.16.0/apache-log4j-2.16.0-bin.zip' -OutFile 'C:\JMeter\cve-2021-4428\apache-log4j-2.16.0-bin.zip'"
powershell -command "Expand-Archive -Force 'C:\JMeter\cve-2021-4428\apache-log4j-2.16.0-bin.zip' 'C:\JMeter\cve-2021-4428'"
copy C:\JMeter\cve-2021-4428\apache-log4j-2.16.0-bin\log4j-1.2-api-2.16.0.jar  C:\JMeter\apache-jmeter-5.4.1\lib\*.*
copy C:\JMeter\cve-2021-4428\apache-log4j-2.16.0-bin\log4j-api-2.16.0.jar  C:\JMeter\apache-jmeter-5.4.1\lib\*.*
copy C:\JMeter\cve-2021-4428\apache-log4j-2.16.0-bin\log4j-core-2.16.0.jar  C:\JMeter\apache-jmeter-5.4.1\lib\*.*
copy C:\JMeter\cve-2021-4428\apache-log4j-2.16.0-bin\log4j-slf4j-impl-2.16.0.jar  C:\JMeter\apache-jmeter-5.4.1\lib\*.*
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Have a nice day!&lt;/p&gt;

</description>
      <category>jmeter</category>
      <category>cve202144228</category>
      <category>security</category>
    </item>
    <item>
      <title>Reduzindo as chances de errar um squash de migrações no Hasura</title>
      <author>Fernando Karchiloff</author>
      <pubDate>Wed, 15 Dec 2021 15:55:59 +0000</pubDate>
      <link>https://dev.to/fernandokga/reduzindo-as-chances-de-errar-um-squash-de-migracoes-no-hasura-3c23</link>
      <guid>https://dev.to/fernandokga/reduzindo-as-chances-de-errar-um-squash-de-migracoes-no-hasura-3c23</guid>
      <description>&lt;h1&gt;
  &lt;a href="#sum%C3%A1rio"&gt;
  &lt;/a&gt;
  Sumário
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#vers%C3%A3o-das-tecnologias"&gt;Versão das tecnologias&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requisitos-m%C3%ADnimos-de-conhecimento-para-entender-o-artigo"&gt;Requisitos mínimos de conhecimento para entender o artigo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#por-qu%C3%AA-deste-artigo"&gt;Por quê deste artigo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#para-os-apressados"&gt;Para os apressados&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-de-base-de-dados"&gt;Exemplo de base de dados&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#processo-de-fazer-um-squash"&gt;Processo de fazer um squash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclus%C3%A3o"&gt;Conclusão&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#vers%C3%A3o-das-tecnologias"&gt;
  &lt;/a&gt;
  Versão das tecnologias
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Hasura v2.0.9&lt;/li&gt;
&lt;li&gt;Hasura CLI v2.0.9&lt;/li&gt;
&lt;li&gt;PostgreSQL 12&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#requisitos-m%C3%ADnimos-de-conhecimento-para-entender-o-artigo"&gt;
  &lt;/a&gt;
  Requisitos mínimos de conhecimento para entender o artigo
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Entender de comandos SQL&lt;/li&gt;
&lt;li&gt;Como migrações funcionam&lt;/li&gt;
&lt;li&gt;Como &lt;a href="https://hasura.io/docs/latest/graphql/core/getting-started/index.html#getting-started"&gt;Hasura GraphQL Engine&lt;/a&gt; funciona&lt;/li&gt;
&lt;li&gt;Como &lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt; funciona&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#por-qu%C3%AA-deste-artigo"&gt;
  &lt;/a&gt;
  Por quê deste artigo
&lt;/h2&gt;

&lt;p&gt;Durante o desenvolvimento de um dos projetos de uma empresa de &lt;em&gt;e-commerce&lt;/em&gt;, tivemos uma tarefa que seria necessário mudar a estrutura do banco de dados, esta alteração mexeria com diversas tabelas e colunas para que o objetivo da tarefa fosse concluído.&lt;/p&gt;

&lt;p&gt;Como o Hasura GraphQL Engine oferece uma interface para fazer as mudanças na estrutura do banco de dados, modifiquei por meio desta e executei as queries manuais que se mostraram necessárias, todas essas modificações criavam migrações no repositório do projeto, assim como esperado para um projeto com migrações habilitadas no Hasura.&lt;/p&gt;

&lt;p&gt;Após as modificações, era notável a quantidade de pastas com modificações que foram sendo gravadas no formato de migrações, decidi então usar o comando para comprimir todas elas em um único arquivo, o que seria mais legível, e minha falha se concretizou no momento que executei o comando. &lt;/p&gt;

&lt;p&gt;Sem ter feito validações básicas antes, executei o comando e excluí as migrações anteriores. E assim passei mais de um dia tentando corrigir o erro que cometi por não fazer uma lista de verificação básica antes de usar o comando. Como evitar isso? Vou te explicar no decorrer do artigo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#para-os-apressados"&gt;
  &lt;/a&gt;
  Para os apressados
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Faça as suas modificações usando migrações.&lt;/li&gt;
&lt;li&gt;Usando Git ou outro versionador, faça um commit para salvar as migrações.&lt;/li&gt;
&lt;li&gt;Garanta que os arquivos de &lt;code&gt;up.sql&lt;/code&gt; e &lt;code&gt;down.sql&lt;/code&gt; executam como deveriam usando &lt;code&gt;hasura migrate apply&lt;/code&gt; e &lt;code&gt;hasura migrate apply --down &amp;lt;N&amp;gt;&lt;/code&gt;. Correções manuais (caso erros aconteçam), faça pela aba &lt;code&gt;SQL&lt;/code&gt; sem usar migrações.&lt;/li&gt;
&lt;li&gt;Salve as migrações completas no versionador.&lt;/li&gt;
&lt;li&gt;Use o comando &lt;code&gt;hasura migrate squash --from &amp;lt;num_migracao&amp;gt; --name &amp;lt;name&amp;gt;&lt;/code&gt; para executar o &lt;em&gt;squash&lt;/em&gt;, remova as migrações anteriores (pois você já salvou no versionador).&lt;/li&gt;
&lt;li&gt;Marque a migração que foi criada como preenchida no banco, usando &lt;code&gt;hasura migrate apply --skip-execution&lt;/code&gt; (se as que serão removidas não haviam sido aplicadas, não use a &lt;em&gt;flag&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;Use novamente o &lt;code&gt;hasura migrate apply --down &amp;lt;N&amp;gt;&lt;/code&gt; para retirar, e sem a &lt;em&gt;flag&lt;/em&gt; para colocar as migrações, garantindo que sua migração funciona.&lt;/li&gt;
&lt;li&gt;Grave as alterações no versionador.&lt;/li&gt;
&lt;li&gt;(Opcional) Faça otimizações de comandos SQL se achar necessário, exemplo: remover &lt;code&gt;ALTER TABLE&lt;/code&gt; caso exista um &lt;code&gt;DROP TABLE&lt;/code&gt; para uma tabela (sem perda de dados).&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#exemplo-de-base-de-dados"&gt;
  &lt;/a&gt;
  Exemplo de base de dados
&lt;/h2&gt;

&lt;p&gt;Para demonstrar como fazer um &lt;em&gt;squash&lt;/em&gt; corretamente, irei utilizar uma base de dados de exemplo simples com uma única tabela, mas no caso real você pode ter diversas operações entre &lt;em&gt;N&lt;/em&gt; tabelas, o que pode tornar o &lt;em&gt;squash&lt;/em&gt; maior e mais complexo.&lt;/p&gt;

&lt;p&gt;A nossa base contém a tabela &lt;code&gt;students&lt;/code&gt; definida por meio desta estrutura:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="nv"&gt;"public"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;"students"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;"id"&lt;/span&gt; &lt;span class="nb"&gt;serial&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;"name"&lt;/span&gt; &lt;span class="nb"&gt;Text&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;"score"&lt;/span&gt; &lt;span class="nb"&gt;text&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ela foi criada depois que já executamos a conexão com a nossa base de dados criada no PostgreSQL, desativamos o console e iniciamos as migrações no projeto. Você pode ver mais detalhes de como ativar migrações nesta &lt;a href="https://hasura.io/docs/latest/graphql/core/migrations/migrations-setup.html"&gt;seção&lt;/a&gt; de &lt;em&gt;Migrations &amp;amp; Metadata (CI/CD)&lt;/em&gt; na documentação do &lt;em&gt;Hasura GraphQL Engine&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Digamos então que esta tabela foi preenchida com alguns dados de estudantes:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5xCgaQSK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g1goo3fgozuc3tasrzz1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5xCgaQSK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g1goo3fgozuc3tasrzz1.png" alt='Tabela com três colunas chamadas: "id", "name", "score" e alguns dados preenchidos' width="277" height="130"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No meio do caminho, percebemos que os dados das notas localizados na coluna &lt;code&gt;score&lt;/code&gt;, não poderiam ser textos, pois gostaríamos de fazer algumas aritméticas com eles. Entretanto, não podemos mudar estes dados caso estejam em uso no ambiente de produção! (Suponha que você tenha milhares de dados importantes e não pode perdê-los)&lt;/p&gt;

&lt;p&gt;O que fazer então? No ambiente de desenvolvimento, iremos &lt;strong&gt;criar uma coluna&lt;/strong&gt; para acomodar esses dados, vamos nomeá-la &lt;code&gt;score_decimal&lt;/code&gt;, pois representa a nota em número decimal permitindo operações aritméticas. Vá até à aba &lt;em&gt;Modify&lt;/em&gt; da tabela &lt;code&gt;students&lt;/code&gt; e clique em &lt;em&gt;Add new column&lt;/em&gt;. Vamos definir como uma coluna &lt;code&gt;Numeric&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_-ydEvDh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6iop7eaqomy9s2yt4u2o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_-ydEvDh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6iop7eaqomy9s2yt4u2o.png" alt="Aba de Modify selecionada e com opção de adicionar nova coluna aparecendo com dados preenchidos" width="529" height="497"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Uma vez criada a nova coluna, podemos fazer a migração dos dados da coluna &lt;code&gt;score&lt;/code&gt; para &lt;code&gt;score_decimal&lt;/code&gt;. Para isso ser possível, vamos usar a seção de &lt;code&gt;SQL&lt;/code&gt; que fica logo abaixo das tabelas da nossa base de dados.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7MQiWUBp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7euulbm2lsd9aq5v9gm2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7MQiWUBp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7euulbm2lsd9aq5v9gm2.png" alt="Bancos de dados sendo exibidos na aba de cima e logo abaixo a aba de SQL" width="258" height="188"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nessa aba você pode rodar código SQL diretamente contra o banco de dados selecionado, podendo marcar estas consultas como migrações ou não. Dependendo do código, o Hasura talvez seja inteligente para identificar ser uma alteração estrutural ou de dados e marque como migração automaticamente, então sempre preste atenção antes de rodar a consulta para ver se a caixa de "&lt;em&gt;This is a migration&lt;/em&gt;" está habilitada.&lt;/p&gt;

&lt;p&gt;Colocando a consulta que converte as notas no campo de texto, podemos rodar sem adicionar como migração com intenção de verificar se a consulta está sendo executada como descrita. Após a verificação, podemos ativar a caixa de migração e escrever um nome para ela, usei um nome descritivo &lt;code&gt;cast_students_score_to_decimal_migration&lt;/code&gt;.&lt;br&gt;
Esta é a consulta feita para converter os dados:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="n"&gt;students&lt;/span&gt;
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;score_decimal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;CAST&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="nb"&gt;DECIMAL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;students&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;students&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cDPAoVL4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7izhheuev7kw4gpd6ugo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cDPAoVL4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7izhheuev7kw4gpd6ugo.png" alt="Aba SQL com consulta preenchida no campo de texto e função de migração ativada" width="534" height="515"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OBSERVAÇÃO: sempre tome cuidado para fazer alterações estruturais que mudam categorias de campos, então faça por partes e vá atualizando a camada de visualização (front-end), caso sejam utilizadas, para mudar o novo tipo sem quebrar a aplicação para os clientes.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Após rodar a atualização dos dados, podemos renomear as colunas e deletar a antiga. O nome usado para migração foi &lt;code&gt;rename_columns_and_remove_old_migration&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;students&lt;/span&gt; &lt;span class="k"&gt;RENAME&lt;/span&gt; &lt;span class="k"&gt;COLUMN&lt;/span&gt; &lt;span class="nv"&gt;"score"&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="nv"&gt;"score_text"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;students&lt;/span&gt; &lt;span class="k"&gt;RENAME&lt;/span&gt; &lt;span class="k"&gt;COLUMN&lt;/span&gt; &lt;span class="nv"&gt;"score_decimal"&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="nv"&gt;"score"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;students&lt;/span&gt; &lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;COLUMN&lt;/span&gt; &lt;span class="nv"&gt;"score_text"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LMb6WBo3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m85kjzac5sndhxbljb4k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LMb6WBo3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m85kjzac5sndhxbljb4k.png" alt="Aba SQL com consulta preenchida no campo de texto e função de migração ativada" width="469" height="509"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Com isso, finalizamos nossa modificação para executarmos nossas operações aritméticas, mas acabamos com algumas migrações separadas que podem ser unidas através de uma operação de &lt;code&gt;squash&lt;/code&gt;, pois podem ser executadas todas juntas.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#processo-de-fazer-um-squash"&gt;
  &lt;/a&gt;
  Processo de fazer um squash
&lt;/h2&gt;

&lt;p&gt;Para que o processo de &lt;em&gt;squash&lt;/em&gt; das migrações ocorra "corretamente" (sempre pode ocorrer algum erro inesperado no meio do processo), precisamos garantir que algumas etapas sejam seguidas. Vou listar algumas delas para evitar erros desse processo.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Gravar as migrações feitas no repositório&lt;/li&gt;
&lt;li&gt;Garantir que as migrações podem ser feitas e desfeitas sem erros&lt;/li&gt;
&lt;li&gt;Gravar as migrações completas&lt;/li&gt;
&lt;li&gt;Fazer o &lt;em&gt;squash&lt;/em&gt; das migrações&lt;/li&gt;
&lt;li&gt;Marcar a migração como executada&lt;/li&gt;
&lt;li&gt;Grave as alterações&lt;/li&gt;
&lt;li&gt;(Opcional) Modifique a migração comprimida como desejar (e grave as alterações)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#1-gravar-as-migra%C3%A7%C3%B5es-feitas"&gt;
  &lt;/a&gt;
  1. Gravar as migrações feitas
&lt;/h3&gt;

&lt;p&gt;Para mantermos controle das nossas migrações e não perdermos o progresso feito, gravamos as alterações em um commit do versionador, podemos então prosseguir em alterá-las sem risco de perder o que já fizemos, esse foi um dos erros que cometi anteriormente, não ter salvo no versionador.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-garanta-que-as-migra%C3%A7%C3%B5es-podem-ser-feitas-e-desfeitas-sem-erros"&gt;
  &lt;/a&gt;
  2. Garanta que as migrações podem ser feitas e desfeitas sem erros
&lt;/h3&gt;

&lt;p&gt;Com as migrações salvas no repositório, podemos começar a modificação das que possuem arquivos &lt;code&gt;down.sql&lt;/code&gt; incompletos. Muitas das alterações que executamos no banco de dados, nem sempre refletem nos arquivos por serem modificações complexas, como a renomeação das colunas e deleção de coluna na mesma migração. Por exemplo, a última migração, o arquivo &lt;code&gt;down.sql&lt;/code&gt; foi preenchido desta forma:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- Could not auto-generate a down migration.&lt;/span&gt;
&lt;span class="c1"&gt;-- Please write an appropriate down migration for the SQL below:&lt;/span&gt;
&lt;span class="c1"&gt;-- ALTER TABLE students RENAME COLUMN "score" TO "score_text";&lt;/span&gt;
&lt;span class="c1"&gt;-- ALTER TABLE students RENAME COLUMN "score_decimal" TO "score";&lt;/span&gt;
&lt;span class="c1"&gt;-- ALTER TABLE students DROP COLUMN "score_text";&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Para que a migração funcione na volta, ou seja, remover as mudanças, vamos inverter os comandos feitos no &lt;code&gt;up.sql&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;students&lt;/span&gt; &lt;span class="k"&gt;ADD&lt;/span&gt; &lt;span class="k"&gt;COLUMN&lt;/span&gt; &lt;span class="nv"&gt;"score_text"&lt;/span&gt; &lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;students&lt;/span&gt; &lt;span class="k"&gt;RENAME&lt;/span&gt; &lt;span class="k"&gt;COLUMN&lt;/span&gt; &lt;span class="nv"&gt;"score"&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="nv"&gt;"score_decimal"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;students&lt;/span&gt; &lt;span class="k"&gt;RENAME&lt;/span&gt; &lt;span class="k"&gt;COLUMN&lt;/span&gt; &lt;span class="nv"&gt;"score_text"&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="nv"&gt;"score"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Faremos o mesmo com a migração que cria a nova coluna e inverteremos o comando.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="nv"&gt;"public"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;"students"&lt;/span&gt; &lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;COLUMN&lt;/span&gt; &lt;span class="nv"&gt;"score_decimal"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Com isso, podemos usar as &lt;em&gt;flags&lt;/em&gt; de &lt;code&gt;--up&lt;/code&gt; e &lt;code&gt;--down&lt;/code&gt; do &lt;code&gt;hasura migrate apply&lt;/code&gt;. O comando altera o banco de dados conforme os &lt;code&gt;.sql&lt;/code&gt; definidos nas migrações. Se você relacionar os arquivos aos seus respectivos comandos, fará mais sentido, o comando que usa &lt;code&gt;--down&lt;/code&gt; vai remover as alterações de migrações já aplicadas, enquanto o &lt;code&gt;--up&lt;/code&gt; irá aplicá-las (o &lt;code&gt;--up&lt;/code&gt; é aplicado por padrão se não for definido). Para remover somente algumas, use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;hasura migrate apply &lt;span class="nt"&gt;--down&lt;/span&gt; &amp;lt;N&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;No comando, &lt;em&gt;N&lt;/em&gt; é a quantidade de migrações que serão removidas. Use &lt;code&gt;hasura migrate apply --help&lt;/code&gt; para mais detalhes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Observação: se você executou alguma migração e ela falhou, caso tenha mais de um comando SQL no mesmo arquivo, tente corrigir pela aba &lt;code&gt;SQL&lt;/code&gt; (sem fazer uma nova), corrigi-la e tentar novamente.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-grave-as-migra%C3%A7%C3%B5es-completas"&gt;
  &lt;/a&gt;
  3. Grave as migrações completas
&lt;/h3&gt;

&lt;p&gt;Dado que você testou suas migrações, e elas estão funcionando, grave novamente em um commit, agora com as migrações completas.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-fazer-o-squash-das-migra%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  4. Fazer o &lt;em&gt;squash&lt;/em&gt; das migrações
&lt;/h3&gt;

&lt;p&gt;Com todas as migrações completas e funcionando ida e volta, podemos agora fazer o &lt;em&gt;squash&lt;/em&gt; delas, ou seja, comprimi-las em uma única só migração, para isso, vamos rodar o comando:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;hasura migrate squash &lt;span class="nt"&gt;--from&lt;/span&gt; &amp;lt;num_migracao&amp;gt; &lt;span class="nt"&gt;--name&lt;/span&gt; &amp;lt;name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ele executa a compressão dos arquivos das migrações para nós. No meu caso, farei dessa forma:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;hasura migrate squash &lt;span class="nt"&gt;--from&lt;/span&gt; 1638852925395 &lt;span class="nt"&gt;--name&lt;/span&gt; &lt;span class="s2"&gt;"changing_column_type"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Este comando irá a partir da migração de prefixo &lt;code&gt;1638852925395&lt;/code&gt; juntar todas em uma única, de nome &lt;em&gt;"changing_column_type"&lt;/em&gt;. Recomendo você deletar as migrações anteriores pois já estão salvas no repositório.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-marcar-a-migra%C3%A7%C3%A3o-como-executada"&gt;
  &lt;/a&gt;
  5. Marcar a migração como executada
&lt;/h3&gt;

&lt;p&gt;Assim que criamos a nossa nova migração comprimida como resultado da operação, &lt;strong&gt;caso as migrações anteriores não estivessem aplicadas no banco de dados&lt;/strong&gt;, vamos rodar o comando para marcar como se a migração que acabamos de gerar, já tivesse sido aplicada:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;hasura migrate apply &lt;span class="nt"&gt;--skip-execution&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lembrando que este comando só deve ser executado se efetivamente aplicamos as alterações das outras migrações no banco de dados, caso contrário, rode o comando sem a &lt;em&gt;flag&lt;/em&gt; &lt;code&gt;--skip-execution&lt;/code&gt; para aplicar normalmente.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-grave-as-altera%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  6. Grave as alterações
&lt;/h3&gt;

&lt;p&gt;Feito isso, grave novamente as alterações na versão de controle do repositório para não perder suas alterações.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-opcional-modifique-a-migra%C3%A7%C3%A3o-comprimida-como-desejar-e-grave-as-altera%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  7. (Opcional) Modifique a migração comprimida como desejar (e grave as alterações)
&lt;/h3&gt;

&lt;p&gt;Se a sua migração possui muitos comandos, avalie o arquivo e verifique se, dependendo das alterações feitas, você pode simplificar o código SQL executado. Por exemplo, você cria uma tabela, e depois em outra migração adiciona uma coluna, caso você não tenha adicionado nenhum dado no meio do caminho, ou não foi para produção ainda, coloque diretamente a coluna na criação da tabela, o que simplificará o código.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclus%C3%A3o"&gt;
  &lt;/a&gt;
  Conclusão
&lt;/h2&gt;

&lt;p&gt;Espero que estas instruções sirvam de guia para que não cometa os mesmos erros que eu durante o projeto que estava desenvolvendo. Tentei colocar o máximo de detalhes no passo a passo e seus motivos. &lt;/p&gt;

&lt;p&gt;Essas instruções podem ser replicadas em outros projetos, mesmo que não sigam a mesma tecnologia, mas se seus conceitos forem parecidos, é possível. Caso você não aplique imediatamente, ao menos espero que tenha aprendido algo com o que demonstrei neste artigo.&lt;/p&gt;

&lt;p&gt;Qualquer crítica positiva que possa incrementar este artigo é bem-vinda! Compartilhe com outras pessoas que precisam deste conteúdo!&lt;/p&gt;

&lt;p&gt;Obrigado por sua atenção.&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>database</category>
      <category>hasura</category>
      <category>migrations</category>
    </item>
    <item>
      <title>Github Copilot offends developers with this joke</title>
      <author>Virej Dasani</author>
      <pubDate>Wed, 15 Dec 2021 15:41:18 +0000</pubDate>
      <link>https://dev.to/virejdasani/github-copilot-offends-developers-with-this-joke-4p78</link>
      <guid>https://dev.to/virejdasani/github-copilot-offends-developers-with-this-joke-4p78</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/SFBSbAJBTOM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>ai</category>
      <category>github</category>
    </item>
    <item>
      <title>Scrape Your First Website in Minutes with Python</title>
      <author>Saji Wang</author>
      <pubDate>Wed, 15 Dec 2021 15:33:02 +0000</pubDate>
      <link>https://dev.to/sewangco/scrape-your-first-website-in-minutes-with-python-2lo7</link>
      <guid>https://dev.to/sewangco/scrape-your-first-website-in-minutes-with-python-2lo7</guid>
      <description>&lt;p&gt;Ever felt the need to pull out data from a website? What would you do? Visit the sites one after the other and gather information?&lt;/p&gt;

&lt;p&gt;Well that would work if you have a page or two. However, if you have lots of them, manual extraction will become too difficult a task; this is where web scraping comes to the rescue!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#what-is-web-scraping"&gt;
  &lt;/a&gt;
  What is web scraping?
&lt;/h3&gt;

&lt;p&gt;Web scraping, as the name suggests, is a method of extracting data from web pages in an automated fashion. Scraping is super helpful in price comparisons, R&amp;amp;D, gathering data from social media, job listings, and more.&lt;/p&gt;

&lt;p&gt;Many methods can be used to perform web scraping such as online services, APIs, or even writing your own script. And that’s why we are here. This article will teach you the basics of how to scrape data from the web. Before we get into that, let’s take a quick look at why we would even want to scrape data from the web.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#why-do-we-need-web-scraping"&gt;
  &lt;/a&gt;
  Why do we need web scraping?
&lt;/h3&gt;

&lt;p&gt;Websites, in general, have huge quantities of information. This information is mostly unstructured or cluttered. When users visit a website they only need a small percentage of what’s available. &lt;/p&gt;

&lt;p&gt;While they can manually access it, the process is quite cumbersome, especially when repetition is involved (given that the data is dynamic and updated frequently). Hence, the need for web scraping.  &lt;/p&gt;

&lt;p&gt;Once the script is set up for a particular webpage, it can be executed any number of times to extract data and use it as required.&lt;/p&gt;

&lt;p&gt;Let’s get started!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#web-scraping-demo"&gt;
  &lt;/a&gt;
  Web scraping demo
&lt;/h3&gt;

&lt;p&gt;This  script will extract weather data from  a webpage and save it to a &lt;code&gt;.csv&lt;/code&gt; file. We will be using the following libraries to help us with the scraping and managing the extracted data:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Requests - This library is required to send an HTTP request to the web page. This will give us access to the HTML content of the webpage we want to scrape.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Beautiful Soup - This library gives us functions to help extract data from the HTML content we receive when we send an HTTP request.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pandas - This library helps us manage the data that has been extracted. In this case we will use it to save our data to a &lt;code&gt;.csv&lt;/code&gt; file.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In case you don’t have the aforementioned libraries installed, follow the commands given below to install them:&lt;/p&gt;

&lt;p&gt;**Installing BeautifulSoup&lt;br&gt;
&lt;code&gt;pip install beautifulsoup4&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installing requests&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;pip install requests&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installing Pandas&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;pip install pandas&lt;/code&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#writing-the-code"&gt;
  &lt;/a&gt;
  Writing the Code
&lt;/h3&gt;

&lt;p&gt;Once you have the libraries installed, follow the steps given below to scrape data from web in python3&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Start by importing all the libraries.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Send an HTTP request to the webpage using its URL. Make sure the response code is 200 which means the request was successful.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use the BeautifulSoup function to extract the raw HTML from the response received.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;From the raw HTML, extract the data we need using different selectors. The selectors used here are ‘class’ and ‘id’.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Save the extracted data into a pandas dataframe in the form of a python dictionary.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Save the dataframe to a csv file. Note: We are using the utf-16BE encoding to render the degree symbol properly in the csv file.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Once you have your code ready, you can deploy it directly to the cloud using &lt;a href="https://link.codesphere.com/GX"&gt;Codesphere&lt;/a&gt;. Codesphere let’s you avoid the hassle of config so that you can spend more time doing what you do best: Actually coding!&lt;/p&gt;

&lt;p&gt;Let us know what you’re going to scrape down below!&lt;/p&gt;

&lt;p&gt;Till then, happy coding.&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Setting up TailwindCSS 3.0 on a Laravel project</title>
      <author>Erika Heidi</author>
      <pubDate>Wed, 15 Dec 2021 15:31:43 +0000</pubDate>
      <link>https://dev.to/sourcegraph/setting-up-tailwindcss-30-on-a-laravel-project-1cb8</link>
      <guid>https://dev.to/sourcegraph/setting-up-tailwindcss-30-on-a-laravel-project-1cb8</guid>
      <description>&lt;p&gt;In the &lt;a href="https://dev.to/sourcegraph/creating-a-new-laravel-application-with-sail-and-docker-no-php-required-4c2n"&gt;first part of our series&lt;/a&gt;, we saw how to bootstrap a new Laravel application with &lt;a href="https://laravel.com/docs/8.x/sail"&gt;Sail&lt;/a&gt; and Docker. This allows you to develop a Laravel application without having to set up a PHP development environment on your system.&lt;/p&gt;

&lt;p&gt;With the base application up and running, the second part of our livestreaming series was focused on setting up a basic blog layout using TailwindCSS. In this post, you'll see a recap with all steps executed during the live session, so that you can reproduce them at your own pace.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preparation"&gt;
  &lt;/a&gt;
  Preparation
&lt;/h2&gt;

&lt;p&gt;Before moving along, make sure you have followed all steps in the &lt;a href="https://dev.to/sourcegraph/creating-a-new-laravel-application-with-sail-and-docker-no-php-required-4c2n"&gt;first tutorial of the series&lt;/a&gt; in order to bootstrap your Laravel application and development environment. This will require you to have Docker, Curl, and Git installed on your system.&lt;/p&gt;

&lt;p&gt;If you haven't yet, bring your environment up with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./vendor/bin/sail up &lt;span class="nt"&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will start up your environment and keep it running in the background. Your Laravel application should now be available at &lt;code&gt;http://localhost&lt;/code&gt;. Open this URL on your browser and you'll see a page like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--umxqQ4rk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uoci8k1kpbpbcr12rur7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--umxqQ4rk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uoci8k1kpbpbcr12rur7.png" alt="Laravel welcome page" width="880" height="409"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For convenience, you may want to create an alias to execute Sail from the application's root directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;ln&lt;/span&gt; &lt;span class="nt"&gt;-s&lt;/span&gt; ./vendor/bin/sail sail
&lt;span class="nb"&gt;chmod&lt;/span&gt; +x sail
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can run Sail like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./sail artisan
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will run Artisan on the application container.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-installing-and-configuring-tailwindcss-3-with-laravel"&gt;
  &lt;/a&gt;
  1. Installing and configuring TailwindCSS 3 with Laravel
&lt;/h2&gt;

&lt;p&gt;Start by installing the frontend dependencies via NPM. The &lt;code&gt;npm&lt;/code&gt; command is available as a shortcut with Laravel Sail:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./sail npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, install TailwindCSS with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./sail npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-D&lt;/span&gt; tailwindcss postcss autoprefixer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, run the following command to generate your Tailwind configuration file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./sail npx tailwindcss init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you'll need to tell Laravel that you want to compile Tailwind resources using Laravel Mix. Open the &lt;code&gt;webpack.mix.js&lt;/code&gt; file (located at the root of your application) and include &lt;code&gt;tailwindcss&lt;/code&gt;  as a postCss plugin. This is how your &lt;code&gt;mix.js&lt;/code&gt; definition should look like when you're finished:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;webpack.mix.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;mix&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resources/js/app.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;public/js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postCss&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resources/css/app.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;public/css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;tailwindcss&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, you should update your &lt;code&gt;tailwind.config.js&lt;/code&gt; file to include the paths to all your template resources. The following example will include all blade templates and JS files in your &lt;code&gt;resources&lt;/code&gt; folder:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;tailwind.config.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./resources/**/*.blade.php&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./resources/**/*.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is to import all &lt;code&gt;@tailwindcss&lt;/code&gt; component layers into your application's CSS. Open the &lt;code&gt;resources/css/app.css&lt;/code&gt; file and include the following content:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;resources/css/app.css&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;utilities&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The configuration is done. You can now run the command that will watch for changes in your frontend resources and build assets in real time while you develop your application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./sail npm run watch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will block your terminal. You can stop it at any time with &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;C&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-creating-a-basic-blog-template"&gt;
  &lt;/a&gt;
  2. Creating a basic blog template
&lt;/h2&gt;

&lt;p&gt;Now that your setup is complete, you can start building the frontend of your application. For this demo, we're building a basic blog template with a main column and a sidebar on the right.&lt;/p&gt;

&lt;p&gt;A good idea to get started is to search for a &lt;a href="https://www.sitepoint.com/a-basic-html5-template/"&gt;basic HTML5 boilerplate code / template&lt;/a&gt; and build from there.&lt;/p&gt;

&lt;p&gt;After some experimentation, we built the following template during the &lt;a href="https://twitch.tv/sourcegraph"&gt;livestreaming session&lt;/a&gt;. Save this content to a file named &lt;code&gt;index.blade.php&lt;/code&gt; in your &lt;code&gt;resources/views&lt;/code&gt; folder:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;resources/views/index.blade.php&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;My DEV Blog&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"description"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"My DEV Blog"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"author"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Sourcegraph"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:title"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"A headless blog in Laravel"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:type"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"website"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:url"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"https://github.com/sourcegraph-community/laravel-dev-blog"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:description"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"A demo Laravel blog"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"{{ asset('css/app.css') }}"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bg-gradient-to-r from-blue-600 via-pink-500 to-purple-900"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container text-white mx-auto mt-6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"grid grid-cols-3 gap-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-3xl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;My DEV Blog&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-span-2 text-right"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                menu
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container mx-auto px-6 py-10 bg-gray-100 my-10 text-gray-600 rounded-md shadow-md"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"grid grid-cols-4 gap-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-span-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mb-10"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://picsum.photos/1000/420"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Post header image"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"rounded-lg my-4"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-3xl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This is the title of my first post&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

                    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is the description bnablab alba lbal ablabla blab al.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"my-10"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://picsum.photos/1000/420?sjdj"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Post header image"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"rounded-lg my-4"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-3xl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This is the title of my second post&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

                    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is the description bnablab alba lbal ablabla blab al.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-gray-400 text-xl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Categories&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;

                &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Linux&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;PHP&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Development&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Devops&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Career&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see from the code, apart from the &lt;code&gt;asset&lt;/code&gt; call, the rest is purely HTML and CSS styled with TailwindCSS descriptive classes.&lt;/p&gt;

&lt;p&gt;After saving the template, open your &lt;code&gt;routes/web.php&lt;/code&gt; file and update your main route definition so that it renders your new template instead of the default Laravel welcome page. This is how the file should look like once you're done:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;routes/web.php&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nc"&gt;Route&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'index'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Save the file. If you reload your browser now, you should see a page like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pvr_0sbB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/54zmfaypzgtry344muso.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pvr_0sbB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/54zmfaypzgtry344muso.png" alt="screenshot application with basic blog template built with tailwind css" width="880" height="677"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In a later part of this series, we'll turn this skeleton into an actual dynamic template, using more advanced Blade features.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Installing TailwindCSS 3.0 within a Laravel project requires a few configuration steps, but once you get the build command running, you can greatly speed up your frontend development process by making use of the advanced features of Tailwind 3, including just-in-time processing for super fast build times, as well as many other &lt;a href="https://tailwindcss.com/blog/tailwindcss-v3"&gt;features included in the newest version&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the next part of this series, we'll move to the backend and create an Artisan command to import posts from a DEV user profile.&lt;/p&gt;

&lt;p&gt;You can follow &lt;a href="https://twitch.tv/sourcegraph"&gt;Sourcegraph on Twitch&lt;/a&gt; to be notified when we go live.&lt;/p&gt;

</description>
      <category>css</category>
      <category>php</category>
      <category>laravel</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Windows 11 Taskbar sucks [Solved]</title>
      <author>Costin Manda</author>
      <pubDate>Wed, 15 Dec 2021 15:27:28 +0000</pubDate>
      <link>https://dev.to/costinmanda/windows-11-taskbar-sucks-solved-1jo2</link>
      <guid>https://dev.to/costinmanda/windows-11-taskbar-sucks-solved-1jo2</guid>
      <description>&lt;p&gt;Original post at: &lt;a href="https://siderite.dev/blog/windows-11-taskbar-sucks-solved"&gt;https://siderite.dev/blog/windows-11-taskbar-sucks-solved&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Today I saw a Windows Update message that I can install Windows 11 on my computer. Great! I let it install and all went without a hitch. I don't see any problems with it, my software works fine, the only problem is that the taskbar icons are in the middle of the screen rather than to the left and it has that default setting of huge annoying icons instead of text, grouping all windows of the same type and so on. Simple, just go to settings, right?&lt;/p&gt;

&lt;p&gt;Wrong! Windows 11 now comes with a taskbar with LESS options than before. If you continue using it you will have to live with grouped apps under huge icons, with no recourse whatsoever!&lt;/p&gt;

&lt;p&gt;Luckily, &lt;a href="https://www.pcworld.com/article/549576/the-windows-11-taskbar-is-an-annoying-step-backward.html"&gt;Michael Crider from PcWorld&lt;/a&gt; to the rescue. Just download the &lt;a href="https://github.com/valinet/ExplorerPatcher/releases/latest/download/ep_setup.exe"&gt;setup&lt;/a&gt; to &lt;a href="https://github.com/valinet/ExplorerPatcher"&gt;Explorer Patcher&lt;/a&gt; from GitHub and run it. The Windows 10 taskbar will be back. Just right click on it and select &lt;em&gt;Properties&lt;/em&gt; and you can customize it even better than the old one! Cheers, Michael!&lt;/p&gt;

</description>
      <category>software</category>
      <category>misc</category>
    </item>
    <item>
      <title>Types of CSS Selectors</title>
      <author>elinabey</author>
      <pubDate>Wed, 15 Dec 2021 15:18:20 +0000</pubDate>
      <link>https://dev.to/elinabey/types-of-css-selectors-1007</link>
      <guid>https://dev.to/elinabey/types-of-css-selectors-1007</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tUSfVD_Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uk3wmfnurbmboodjq4am.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tUSfVD_Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uk3wmfnurbmboodjq4am.jpg" alt="Types of CSS Selectors" width="700" height="400"&gt;&lt;/a&gt;&lt;br&gt;
Types of CSS Selectors are utilized to pick the substance that we need to style. It helps in separating components dependent on their group, id, type, and so forth. A CSS Selector is a segment of the CSS Ruleset.&lt;br&gt;
In our last tutorial we discussed &lt;a href="https://dev.to/elinabey/introduction-to-css-controls-408m"&gt;Introduction to CSS Controls&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#types-of-css-selectors"&gt;
  &lt;/a&gt;
  Types of CSS Selectors
&lt;/h1&gt;

&lt;p&gt;1.CSS Attribute Selector.&lt;br&gt;
2.CSS Class Selector.&lt;br&gt;
3.CSS Id Selector.&lt;br&gt;
4.CSS Universal Selector.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#css-attribute-selector"&gt;
  &lt;/a&gt;
  CSS Attribute Selector.
&lt;/h2&gt;

&lt;p&gt;The CSS Attribute selector styles content as indicated by the trait and the quality worth referenced in the square sections.&lt;br&gt;
This CSS code would be a counterpart for the accompanying HTML component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"text"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"text"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Moreover, if the estimation of the quality 'type' changes, the Attribute selector would not coordinate it. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-class-selector"&gt;
  &lt;/a&gt;
  CSS Class Selector.
&lt;/h2&gt;

&lt;p&gt;he CSS Class selector is one of the most supportive selectors of the considerable number of selectors. It is proclaimed by utilizing a spot followed by the name of the class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="nt"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"soft"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nc"&gt;.soft&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#css-id-selector"&gt;
  &lt;/a&gt;
  CSS Id Selector.
&lt;/h2&gt;

&lt;p&gt;CSS ID selector encourages the engineer to coordinate the ID made by the designer to its styling content. ID Selector is utilized with the assistance of the hash (#) sign before the ID name proclaimed by the engineer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="nt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"soft"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nf"&gt;#soft&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#css-universal-selector"&gt;
  &lt;/a&gt;
  CSS Universal Selector.
&lt;/h2&gt;

&lt;p&gt;In a HTML page, the substance relies upon HTML labels. A couple of labels characterizes a particular website page component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;21px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This post originally published at &lt;a href="https://softcodeon.com/css/types-of-css-selectors.htm"&gt;Types of CSS Selectors&lt;/a&gt;. If you want to read in detail visit their.&lt;/p&gt;

&lt;p&gt;I am going to learn and share good content that can help others. If you have any questions please discuss below.&lt;br&gt;
Thank you.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>css</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Building an AWS Integration for Salesforce Image Handling</title>
      <author>Michael Bogan</author>
      <pubDate>Wed, 15 Dec 2021 15:07:23 +0000</pubDate>
      <link>https://dev.to/salesforcedevs/building-an-aws-integration-for-salesforce-image-handling-f74</link>
      <guid>https://dev.to/salesforcedevs/building-an-aws-integration-for-salesforce-image-handling-f74</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this article, we’ll look at a solution that not only offloads your Salesforce image storage to Amazon Web Services (AWS), but also resizes and renders those images on demand. By offloading image storage to other solutions, your organization can free up Salesforce storage capacity.&lt;/p&gt;

&lt;p&gt;We’ll build off an example use case from Salesforce Field Service, but there are many other scenarios that can take advantage of these techniques. Having both a Salesforce org with Field Service installed and an AWS account are prerequisites for this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-case"&gt;
  &lt;/a&gt;
  Use case
&lt;/h2&gt;

&lt;p&gt;For our example, we will look at a fictional property maintenance company, Acme Maintenance. Acme manages property safety inspections on behalf of its clients. On-site inspectors use Salesforce Field Service to record their findings on their visits. &lt;/p&gt;

&lt;p&gt;As part of their site visits, inspectors take a lot of photographs on their mobile devices, and these are saved back to Salesforce. Acme would like to use these images in the Service Reports that they provide to their clients.&lt;/p&gt;

&lt;p&gt;Acme has discovered that with the number of site visits, multiplied by the number of images per visit and the size of those images (and on top of that they want to see reasonably-sized thumbnails of those images in Salesforce and surface them on Service Reports), they’re reaching the initial default file storage limits on Salesforce. While they could easily purchase more file storage within Salesforce, their Salesforce architect has suggested that off-platform storage may be more optimal.&lt;/p&gt;

&lt;p&gt;To solve this, we will look at interfacing with AWS for both image storage and image processing (resizing, cropping, orientation, and so on).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-services"&gt;
  &lt;/a&gt;
  AWS Services
&lt;/h2&gt;

&lt;p&gt;For our use case, we will look at one of the AWS reference architectures, the &lt;a href="https://aws.amazon.com/solutions/implementations/serverless-image-handler/"&gt;Serverless Image Handler&lt;/a&gt;, and take advantage of &lt;a href="https://aws.amazon.com/cloudformation/"&gt;AWS CloudFormation&lt;/a&gt; to deploy it. In some ways, you can liken CloudFormation to Salesforce metadata—a way to deploy your resources in a declarative, script-based manner.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1O7F3E4p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hdrap399fpufkzjyz6mk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1O7F3E4p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hdrap399fpufkzjyz6mk.png" alt="" width="654" height="402"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="http://docs.aws.amazon.com/solutions/latest/serverless-image-handler/welcome.html"&gt;AWS documentation&lt;/a&gt; goes into greater detail, but in summary, we will leverage the following components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Cloudfront&lt;/strong&gt;: load balancing the requests into the API&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;API Gateway&lt;/strong&gt;: publishing the external API for use&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Lambda&lt;/strong&gt;: the serverless application that handles the image processing&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;S3&lt;/strong&gt;: storage of the original uploaded images and log files&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Secrets Manager&lt;/strong&gt; (optional): If you use the image URL signature feature, then you can retrieve secrets for digital signing from here.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Rekognition&lt;/strong&gt;: if you require content moderation, smart cropping, facial recognition, and so on.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#aws-configuration"&gt;
  &lt;/a&gt;
  AWS configuration
&lt;/h3&gt;

&lt;p&gt;By using a CloudFront template, we don’t need to know a great deal about each of these AWS technologies; we simply have to go through a few configuration steps. Please note that in this example, we will take default settings rather than enable advanced features. It’s recommended that you read through the &lt;a href="https://docs.aws.amazon.com/solutions/latest/serverless-image-handler/welcome.html"&gt;implementation guide&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#create-an-s3-bucket-for-your-images"&gt;
  &lt;/a&gt;
  Create an S3 bucket for your images
&lt;/h4&gt;

&lt;p&gt;The first task is creating an S3 bucket to store our original image files. Choose a bucket name that is unique and lowercase, and then pick the region that is geographically closest to you. Check the box to “Block all public access.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--941gG9k5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x991abkjm11xva1i895e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--941gG9k5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x991abkjm11xva1i895e.png" alt="" width="880" height="532"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#deploying-the-cloudformation-stack"&gt;
  &lt;/a&gt;
  Deploying the CloudFormation stack
&lt;/h4&gt;

&lt;p&gt;From the &lt;a href="https://aws.amazon.com/solutions/implementations/serverless-image-handler/"&gt;Serverless Image Handler main page&lt;/a&gt;, click on &lt;strong&gt;Launch in the AWS Console&lt;/strong&gt; to start deploying your own instance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4RKrx2ww--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/09bm3uq63r5jtx7vgj5p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4RKrx2ww--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/09bm3uq63r5jtx7vgj5p.png" alt="" width="585" height="613"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before you start populating fields, be sure to select your AWS region in the top right corner of the screen on the CloudFormation page. Select the same region as your S3 bucket from the previous step.&lt;/p&gt;

&lt;p&gt;The path to the CloudFormation template should be pre-populated. Click &lt;strong&gt;Next&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l_rtS3i4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uk2s6jm5nlisahaagrdk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l_rtS3i4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uk2s6jm5nlisahaagrdk.png" alt="" width="880" height="392"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the next screen, we specify a name for our stack and provide the name of our S3 bucket. Select “No” for the “Demo UI” and then click &lt;strong&gt;Next&lt;/strong&gt; again. On the “Configure stack options” page, accept the default and click &lt;strong&gt;Next&lt;/strong&gt; one more time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R2rlAUyD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70gfktzp7l1524f7814d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R2rlAUyD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70gfktzp7l1524f7814d.png" alt="" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, on the review page, click the &lt;strong&gt;Create Stack&lt;/strong&gt; button. As you refresh the page, you’ll see the progress of your stack build, which can take a few minutes. Then, you’ll see this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZeUCTzRq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hbuf2egj1zdoaftx93ph.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZeUCTzRq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hbuf2egj1zdoaftx93ph.png" alt="" width="606" height="142"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a final step, we need to go to the &lt;strong&gt;Output&lt;/strong&gt; tab of the build and copy the value of the &lt;code&gt;ApiEndpoint&lt;strong&gt; &lt;/strong&gt;&lt;/code&gt;parameter, as we’ll be using this in our Salesforce build.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#salesforce-build"&gt;
  &lt;/a&gt;
  Salesforce build
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#custom-objects-and-fields"&gt;
  &lt;/a&gt;
  Custom Objects and fields
&lt;/h3&gt;

&lt;p&gt;In Salesforce, we’ll start by creating a new custom object called &lt;strong&gt;Work Order Attached Image&lt;/strong&gt;, which will hold the information for any image attachments that relate to a Work Order. The key fields to note are &lt;strong&gt;Image RTF&lt;/strong&gt;, &lt;strong&gt;Original Image URL&lt;/strong&gt;, and &lt;strong&gt;Resized Image URL&lt;/strong&gt;. When asked whether to add a related list to the Work Order page layout, be sure to select it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rUu4-lut--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9ma5pudqge1cemjrx8t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rUu4-lut--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9ma5pudqge1cemjrx8t.png" alt="" width="880" height="676"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#custom-metadata"&gt;
  &lt;/a&gt;
  Custom metadata
&lt;/h3&gt;

&lt;p&gt;Next, we need to create a Custom Metadata type to store our configuration settings. In Setup, search for &lt;strong&gt;Custom Metadata&lt;/strong&gt; and create a new type called &lt;strong&gt;AWS Settings&lt;/strong&gt; with the custom fields shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mmuPbvFu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0g6u0qe8lr23ke34d1eo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mmuPbvFu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0g6u0qe8lr23ke34d1eo.png" alt="" width="880" height="416"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DkJAUBVx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2f0d02z5cj47f0ouee5a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DkJAUBVx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2f0d02z5cj47f0ouee5a.png" alt="" width="824" height="146"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once created, click the &lt;strong&gt;Manage AWS Settings&lt;/strong&gt; button and add the following three settings and save them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HWX89Oc_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q061xhabpmnbyp85snzs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HWX89Oc_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q061xhabpmnbyp85snzs.png" alt="" width="880" height="251"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the image handler endpoint value, use the &lt;code&gt;ApiEndpoint&lt;/code&gt;value from AWS CloudFormation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zzr7VQJZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3lg7lfamt6a3hlxopr01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zzr7VQJZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3lg7lfamt6a3hlxopr01.png" alt="" width="880" height="349"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4gk2vjxT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sp21dfx6v2aqnitogeab.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4gk2vjxT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sp21dfx6v2aqnitogeab.png" alt="" width="880" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#named-credentials"&gt;
  &lt;/a&gt;
  Named credentials
&lt;/h3&gt;

&lt;p&gt;Our next configuration item is for securely handling the access to AWS from Salesforce. In Setup, search for &lt;strong&gt;Named Credentials&lt;/strong&gt; and create the following two credentials, substituting in your own AWS URL, region, and access key/secret from your AWS user. Be sure the &lt;strong&gt;Name&lt;/strong&gt; fields are as shown in the screenshots, as this is used later in the code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mZ3FOm7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9aaww5x9bt29lkuyqcl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mZ3FOm7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9aaww5x9bt29lkuyqcl.png" alt="" width="880" height="879"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jbReyyOd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dxs67ku6k0m3p87mvnf7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jbReyyOd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dxs67ku6k0m3p87mvnf7.png" alt="" width="880" height="804"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remote-site-settings"&gt;
  &lt;/a&gt;
  Remote site settings
&lt;/h3&gt;

&lt;p&gt;In order for the images from AWS to appear in our Service Reports, we need to add the API endpoint as a trusted domain via &lt;strong&gt;Remote Site Settings.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KV7l0GkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9gxg554xthcu8cftxn1b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KV7l0GkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9gxg554xthcu8cftxn1b.png" alt="Image description" width="880" height="346"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#triggers-and-classes"&gt;
  &lt;/a&gt;
  Triggers and classes
&lt;/h3&gt;

&lt;p&gt;Revisiting our scenario, image attachments from Field Service populate Salesforce as &lt;code&gt;ContentDocument&lt;/code&gt; objects and associated supporting objects. Their object model looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9STY6cg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6j603nuetzj92zy0w9hq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9STY6cg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6j603nuetzj92zy0w9hq.png" alt="" width="429" height="992"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to capture newly attached images in the model, we can simply add a new Apex trigger to the &lt;code&gt;ContentDocumentLink&lt;/code&gt; object. This will allow us to reference both the attachment and the object it is attached to.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#contentdocumentlinktrigger-and-contentdocumentlinktriggerhandler"&gt;
  &lt;/a&gt;
  ContentDocumentLinkTrigger and ContentDocumentLinkTriggerHandler
&lt;/h4&gt;

&lt;p&gt;We build a &lt;code&gt;ContentDocumentLinkTrigger&lt;/code&gt; (&lt;a href="https://bit.ly/acmedemo-01"&gt;view code on GitHub&lt;/a&gt;) that hands off processing to an Apex class for handling the trigger.&lt;/p&gt;

&lt;p&gt;Our trigger handler, &lt;code&gt;ContentDocumentLinkTriggerHandler&lt;/code&gt; (&lt;a href="https://bit.ly/acmedemo-02"&gt;view code on GitHub&lt;/a&gt;), takes the list of new &lt;code&gt;ContentDocumentLinks&lt;/code&gt; and collates them into a &lt;code&gt;Map&lt;/code&gt;, keyed by the linked entity ID. It then inspects them to see the type of the linked entity, and—if it is a Work Order—adds them to a &lt;code&gt;Set&lt;/code&gt; for processing.&lt;/p&gt;

&lt;p&gt;This processing consists of building further collections to map an entity to associated &lt;code&gt;ContentDocument&lt;/code&gt; records, before handing this data off to a Batch Apex class for processing asynchronously.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#workorderattachmentbatch"&gt;
  &lt;/a&gt;
  WorkOrderAttachmentBatch
&lt;/h4&gt;

&lt;p&gt;The batch class for Work Order attachments, &lt;code&gt;WorkOrderAttachmentBatch&lt;/code&gt; (&lt;a href="https://bit.ly/acmedemo-03"&gt;view code on GitHub&lt;/a&gt;), iterates through the supplied collections, building up new &lt;code&gt;WorkOrderAttachedImage&lt;/code&gt; records from the image filename and base URL of the AWS S3 bucket.&lt;/p&gt;

&lt;p&gt;A call is made to the &lt;code&gt;ImageRotationHandler&lt;/code&gt; class to get the crafted URL with which to call the Image API. Then, it constructs an RTF field with some simple HTML for rendering the resulting image.&lt;/p&gt;

&lt;p&gt;Once the records have been created and saved, the list of image attachments passes to another batch class for the upload process.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#imagerotationhandler"&gt;
  &lt;/a&gt;
  ImageRotationHandler
&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;ImageRotationHandler&lt;/code&gt; (&lt;a href="https://bit.ly/acmedemo-04"&gt;view code on GitHub&lt;/a&gt;) is a small class that handles the construction of a valid request to the Image API handler. It constructs the required JSON structure from the parameters, serializes it to a string, encodes it as Base64, and then appends this to the URL of the image handler endpoint. Formatting requests is included in the AWS template documentation under the &lt;a href="https://docs.aws.amazon.com/solutions/latest/serverless-image-handler/deployment.html"&gt;Deployment section&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#s3uploadhandler"&gt;
  &lt;/a&gt;
  S3UploadHandler
&lt;/h4&gt;

&lt;p&gt;The final batch class, &lt;code&gt;S3UploadHandler&lt;/code&gt; (&lt;a href="https://bit.ly/acmedemo-05"&gt;view code on GitHub&lt;/a&gt;), handles the uploading of the attached images to our S3 bucket via a simple REST API call.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#service-reports"&gt;
  &lt;/a&gt;
  Service Reports
&lt;/h3&gt;

&lt;p&gt;Now that we have our images on S3 and our custom object populated with our links to the images, we can now return to our Field Service use case. In our Salesforce setup, search for and click on &lt;strong&gt;Service Report Templates&lt;/strong&gt;. For demo purposes, we’ll create a new template.&lt;/p&gt;

&lt;p&gt;On the template page, select &lt;strong&gt;Work Order&lt;/strong&gt; from the Related Templates dropdown list. In the Body area of the template, add a new &lt;strong&gt;List&lt;/strong&gt; section element, based on the Work Order Attached Image object, as shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aYOwJ67A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zmgctie1lvwgh4s7hfeh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aYOwJ67A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zmgctie1lvwgh4s7hfeh.png" alt="" width="825" height="700"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Save the template and activate it.&lt;/p&gt;

&lt;p&gt;We’re now ready for testing. Create a new Work Order in Salesforce and save it. Then, upload an image file (in JPG or PNG format) to the Files section. Once the image has been uploaded, refresh the page. You should then see a new record in the &lt;strong&gt;Work Order Attached Images&lt;/strong&gt; related list. Clicking on the record should show a record similar to this, with the S3 image displayed:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6PvEUwGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ni8doyav23r87xk1h3xj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6PvEUwGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ni8doyav23r87xk1h3xj.png" alt="" width="880" height="841"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From the Work Order, click the &lt;strong&gt;Create Service Report&lt;/strong&gt; button. (It may be in the overflow menu dropdown):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_u2Qpt2S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nc16a394ev73frn5w5zn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_u2Qpt2S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nc16a394ev73frn5w5zn.png" alt="" width="571" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select the Service Report template we created earlier and click the &lt;strong&gt;Create PDF&lt;/strong&gt; button. A preview of the Service Report PDF should render, complete with a thumbnail of your uploaded image in the appropriate section.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XfBawgfx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1irowus3q7fexcubbaqk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XfBawgfx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1irowus3q7fexcubbaqk.png" alt="" width="880" height="453"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, we have successfully deployed a complete image handler solution to AWS, using a reference implementation from the AWS Solutions Library. We have implemented code with supporting objects and configuration in Salesforce to transfer uploaded image attachments to S3 and surface them within the platform and on Service Reports.&lt;/p&gt;

&lt;p&gt;With this architecture, we have the potential to reduce storage needs for image files within Salesforce.&lt;/p&gt;

&lt;p&gt;Outside of Field Service, there are many other use cases for reducing image storage needs. Another popular scenario, for example, is for Salesforce-powered web experiences in which users need to submit image files.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps-and-resources"&gt;
  &lt;/a&gt;
  Next Steps and Resources
&lt;/h2&gt;

&lt;p&gt;Here are some ideas for taking this architecture further:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Implementing removal of the original Salesforce files once S3 has them&lt;/li&gt;
&lt;li&gt;Creating a custom Lightning Web Component to display the uploaded images&lt;/li&gt;
&lt;li&gt;Extending this implementation to support other file types, such as PDF documents&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are some useful links related to this implementation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/solutions/implementations/serverless-image-handler/"&gt;AWS Serverless Image Handler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://sharp.pixelplumbing.com/"&gt;Sharp Library&lt;/a&gt;, which provides the image processing capability we use in AWS&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>aws</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
