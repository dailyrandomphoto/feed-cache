<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How I Easily Code For 8+ Hours Without Feeling Tired (My Productivity System)</title>
      <author>Nick Bull</author>
      <pubDate>Sat, 19 Dec 2020 12:15:59 +0000</pubDate>
      <link>https://dev.to/nickbulljs/how-i-easily-code-for-8-hours-without-feeling-tired-my-productivity-system-23i8</link>
      <guid>https://dev.to/nickbulljs/how-i-easily-code-for-8-hours-without-feeling-tired-my-productivity-system-23i8</guid>
      <description>&lt;p&gt;I've been coding wrong my whole life.&lt;/p&gt;

&lt;p&gt;I thought it was okay to just sit down at my desk, open my laptop, take a task from my to-do list, and code it until I felt tired.&lt;/p&gt;

&lt;p&gt;But in reality, this style of work always killed my productivity levels after 2-4 hours of coding. I felt so tired that I didn't want to do anything except different low energy tasks (&lt;em&gt;like code review&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Today I can code 8+ hours without feeling like crap after.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What has changed?&lt;/p&gt;

&lt;p&gt;My approach to work.&lt;/p&gt;

&lt;p&gt;After 62+ self-development books, dozens of articles and studies about productivity, and my trials and errors, I have created a productivity system that helps me to code, write, create, and live at my maximum capabilities without procrastination, tiredness, and brain fog.&lt;/p&gt;

&lt;p&gt;Here it is.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-productivity-system" class="anchor"&gt;
  &lt;/a&gt;
  My Productivity System
&lt;/h2&gt;

&lt;p&gt;My productivity system stays on 3 main pillars:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Schedule.&lt;/li&gt;
&lt;li&gt;To-do for tomorrow.&lt;/li&gt;
&lt;li&gt;System 69 (!)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's look closer at each of them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#schedule" class="anchor"&gt;
  &lt;/a&gt;
  Schedule
&lt;/h2&gt;

&lt;p&gt;Everything starts with a schedule. What, where, and when I do.&lt;/p&gt;

&lt;p&gt;My schedule looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3gf4lxc7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608378643183/3ZswRiq7N.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3gf4lxc7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608378643183/3ZswRiq7N.jpeg" alt="sheduled.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I’m using a whiteboard to constantly remind myself of what I should do at the exact moment.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I always neglected to create a schedule.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“I know what and when I should do!”&lt;/em&gt; I told myself.&lt;/p&gt;

&lt;p&gt;But in reality, I always forget to do or overdo my daily activities (&lt;em&gt;even with a habit to do them&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;For example, when I woke up at 7:00 in the morning I knew that I had 1 free hour before my work. In that hour I wanted to have time to do a morning ritual (eating, stretching, showering, breathing) and to read for 30 minutes. But many times I could have breakfast in the morning for an hour, forgetting to take the time to read. Even if I kept in mind that I have to read for 30 minutes every morning. I &lt;em&gt;overdone&lt;/em&gt; my activity (breakfast) and stole my time from another activity (reading).&lt;/p&gt;

&lt;p&gt;I have also noticed that without a schedule it takes a lot of time to decide what I should do next. I could finish the workout in the afternoon, take shower, sit at my desk, open laptop and then decide which task I should pick next within 10 minutes. If we count how much the same decisions I made during the day, 10 minutes becomes 60 minutes. &lt;strong&gt;One hour!&lt;/strong&gt; It’s a lot of time.&lt;/p&gt;

&lt;p&gt;The other thing is that in the process of deciding what I should do next, there is always an angel and a demon sitting on my shoulders and "helping" me decide whether I should work on the essential things to me or do some light work, or even take a break to relax. I often had to use willpower to force myself to do the "right" things without a schedule.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“If you waste resources trying to decide when or where to work, you’ll impede your capacity to do the work.” – &lt;a href="https://www.theguardian.com/science/2013/oct/05/daily-rituals-creative-minds-mason-currey"&gt;Guardian&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When I made the schedule, these problems disappeared.&lt;/p&gt;

&lt;p&gt;Now, I always have time to do what I have planned.&lt;/p&gt;

&lt;p&gt;I always know what I should do next.&lt;/p&gt;

&lt;p&gt;I don’t need to use willpower to force myself to do essential things.&lt;/p&gt;

&lt;p&gt;Schedule puts my decision-making process on autopilot.&lt;/p&gt;

&lt;p&gt;If you want to create your schedule I recommend using Google calendar for it, so you can easily edit or share your schedule with someone else. Also, I recommend having a schedule on some piece of paper or whiteboard, to always remind yourself of what, where, and when you should do.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#todo-for-tomorrow" class="anchor"&gt;
  &lt;/a&gt;
  To-Do For Tomorrow
&lt;/h2&gt;

&lt;p&gt;If the schedule helps me decide what, where and when I should do, the to-do list helps me decide &lt;strong&gt;exactly&lt;/strong&gt; &lt;strong&gt;what&lt;/strong&gt; I should do next.&lt;/p&gt;

&lt;p&gt;I could spend the "perfectly planned" day, but not do what is essential to me.&lt;/p&gt;

&lt;p&gt;For example, when I opened my schedule and saw a “Deep Work” block from 08.00 to 09.30, I could do deep work, but it didn’t guarantee that I would be doing important things during it and not some light work.&lt;/p&gt;

&lt;p&gt;Our brain is always trying to spend less energy and will do everything to convince you not to waste energy.&lt;/p&gt;

&lt;p&gt;That's where the to-do list comes in.&lt;/p&gt;

&lt;p&gt;It helps me &lt;strong&gt;even more&lt;/strong&gt; to put the decision-making process on autopilot and spend less time and cognitive resources on it.&lt;/p&gt;

&lt;p&gt;It guarantees that I will do only essential things (&lt;em&gt;most of the time&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;My to-do list is simple, I use a plain paper notebook to make it and &lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt; as a digital copy (&lt;em&gt;I use Notion for everything, but that's for another article&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e5d6d6_d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608378601645/oaEOZMMy4.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e5d6d6_d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608378601645/oaEOZMMy4.jpeg" alt="todo.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S2kyWdRD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608378595485/nFdvJ9q3s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S2kyWdRD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608378595485/nFdvJ9q3s.png" alt="to do 2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When I create my to-do list I create it in the evening for tomorrow day.&lt;/p&gt;

&lt;p&gt;Why?&lt;/p&gt;

&lt;p&gt;When you plan your day in the morning, you are thinking about every task that needs to be done today. It is good when the task is clear and simple and you know what to do (like &lt;em&gt;“code review last commit by John”&lt;/em&gt;). But when you don’t know what exactly needs to be done, it will take time to figure it out. Like when you know that you need to write an article, but don’t know about what. It will take time to research your ideas and choose the right topic to write about.&lt;/p&gt;

&lt;p&gt;And in addition to the fact that such tasks take time to research, there is a chance that you will fall into the trap of your thinking process (&lt;em&gt;when you start imagining results, details, processes, and other various things related to the task, and you spend 5, 10, 15, or even more minutes on it&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;The process of creating a to-do list in the morning wastes your productive morning time, your cognitive resources, and has a chance to distract you.&lt;/p&gt;

&lt;p&gt;That’s why I create a to-do list for tomorrow and not in the morning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#system-69" class="anchor"&gt;
  &lt;/a&gt;
  System 69
&lt;/h2&gt;

&lt;p&gt;When I started coding I did it like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open laptop.&lt;/li&gt;
&lt;li&gt;Open Code editor (&lt;em&gt;VSCode&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;Pick a task.&lt;/li&gt;
&lt;li&gt;Code until I feel tired.&lt;/li&gt;
&lt;li&gt;Take a break (&lt;em&gt;spending time on social media&lt;/em&gt;).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Looks normal?&lt;/p&gt;

&lt;p&gt;Yeah.&lt;/p&gt;

&lt;p&gt;Until I read about &lt;a href="https://en.wikipedia.org/wiki/Pomodoro_Technique"&gt;Pomodoro&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Pomodoro Technique is a time management method when you break down work into intervals, traditionally 25 minutes in length, separated by short breaks. For example, 25-minute coding and a 5-minute break after. And divide the entire workday into such breaks.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;25 minute coding.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;5 minute break.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;25 minute coding.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;5 minute break.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;25 minute coding.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;etc. until the end of the working day.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I tried it and it worked, but not as great as I imagined. I definitely became more productive, but for an additional hour. And I found the 25-minute work intervals are too short for me &lt;em&gt;(It took me 5-10 minutes to activate the &lt;a href="https://en.wikipedia.org/wiki/Flow_%28psychology%29"&gt;flow state&lt;/a&gt;, so I couldn’t perform a "deep work" for more than 15 minutes with such intervals).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So I went further.&lt;/p&gt;

&lt;p&gt;I found the 52 + 17 rule.&lt;/p&gt;

&lt;p&gt;What’s this?&lt;/p&gt;

&lt;p&gt;52-minute of work and a 17-minute break. Similar to the Pomodoro Technique.&lt;/p&gt;

&lt;p&gt;I tested it and it worked better for me than 25+5 intervals. Now I could work productively for two more hours, but I still felt like crap after a workday.&lt;/p&gt;

&lt;p&gt;So I didn’t stop on the 52 + 17 rule.&lt;/p&gt;

&lt;p&gt;I started researching more about productivity and motivation and learned about effective breaks.&lt;/p&gt;

&lt;p&gt;When most people hear the word “break” the first association is “doing anything except work.” Like scrolling Instagram feed, chatting with friends, or watching Youtube.&lt;/p&gt;

&lt;p&gt;Technically these are all breaks, but not effective ones.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The main sign of an effective break is that it gives you energy, not takes it away.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Example of my effective breaks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Stretching.&lt;/li&gt;
&lt;li&gt;  Hydrating.&lt;/li&gt;
&lt;li&gt;  Light workout.&lt;/li&gt;
&lt;li&gt;  Walking (&lt;em&gt;without the headphones&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;  Breathing (&lt;em&gt;box breathing, Wim Hof method&lt;/em&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After I learned about effective breaks, my workday became almost perfect - 52 minutes of work (&lt;em&gt;45 minutes often in a flow state, because I need 10 minutes to reach it&lt;/em&gt;) and 17 minutes of an effective break that gives me energy.&lt;/p&gt;

&lt;p&gt;Everything worked perfectly, and I have to stop there…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But I went further.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I was obsessed with the idea to make every hour of my work the most productive hour on earth.&lt;/p&gt;

&lt;p&gt;And I think I did it.&lt;/p&gt;

&lt;p&gt;One thing that kept me from being in a flow state all the time was distraction.&lt;/p&gt;

&lt;p&gt;For years I didn't pay attention to it. To all the notifications that pop-up on my phone, the noise of people around me, the hundreds of open tabs and windows on my laptop, all those distractions.&lt;/p&gt;

&lt;p&gt;I set a timer for 52 minutes, started to work, got in a flow state, and then BAM! A new notification pops up. And I like, &lt;em&gt;“What’s in there?”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The flow state is gone.&lt;/p&gt;

&lt;p&gt;Focus on the task is gone.&lt;/p&gt;

&lt;p&gt;Productivity is gone.&lt;/p&gt;

&lt;p&gt;One tiny notification instantly ruined my productivity.&lt;/p&gt;

&lt;p&gt;I never paid attention to it until I started to deep dive into the personal development field (&lt;em&gt;I wish I started earlier&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Now, when I work I turn off all notifications, tell people to not bother me, put on my headphones (&lt;em&gt;if I work in a noisy environment&lt;/em&gt;), close all the browser tabs that are not related to the task, and &lt;strong&gt;do everything I can to avoid distractions during my working hours.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So far so good, my system seemed perfect.&lt;/p&gt;

&lt;p&gt;But can we go further?&lt;/p&gt;

&lt;p&gt;Of course.&lt;/p&gt;

&lt;p&gt;The last piece of the puzzle is &lt;strong&gt;NO multitasking.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When I hear today that someone can do multitasking, I smile.&lt;/p&gt;

&lt;p&gt;Multitasking is &lt;a href="https://www.theladders.com/career-advice/why-multitasking-is-a-myth-backed-by-science"&gt;not working&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://health.clevelandclinic.org/science-clear-multitasking-doesnt-work/"&gt;It’s a myth.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is only &lt;a href="https://www.researchgate.net/publication/45629771_Supertaskers_Profiles_in_extraordinary_multitasking_ability"&gt;one study&lt;/a&gt; that shows that 2.5% of subjects can do multitasking with the same efficiency levels as performing one task at a time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other 97.5% are not.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So when I pick some task and start doing it, I focus only on it.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;One task per time. *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Not two.&lt;/p&gt;

&lt;p&gt;Not three.&lt;/p&gt;

&lt;p&gt;Only one.&lt;/p&gt;

&lt;p&gt;This is a rule I follow during my working hours.&lt;/p&gt;

&lt;p&gt;Always.&lt;/p&gt;

&lt;p&gt;Okay, now we have all the pieces of System 69.&lt;/p&gt;

&lt;p&gt;Let's glue them together and see what we get:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;52-minute of work.&lt;/li&gt;
&lt;li&gt;17-minute of an effective break.&lt;/li&gt;
&lt;li&gt;Remove all distractions.&lt;/li&gt;
&lt;li&gt;Focus on one task at a time.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Awesome!&lt;/p&gt;

&lt;p&gt;This is my System 69.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-the-end" class="anchor"&gt;
  &lt;/a&gt;
  In the end…
&lt;/h2&gt;

&lt;p&gt;These are the three pillars of my productivity system.&lt;/p&gt;

&lt;p&gt;Today I successfully use this system to operate as a content creator. Every day I write in &lt;a href="https://blog.nickbulljs.com/"&gt;my blog&lt;/a&gt;, build the &lt;a href="https://javascriptcoursethatworks.com/"&gt;most practical JavaScript course&lt;/a&gt; ever, create &lt;a href="https://twitter.com/nickbulljs"&gt;social media content&lt;/a&gt;, write a book on &lt;a href="https://nailthetechnicalinterview.com/"&gt;how to Nail The Technical Interview and Land a High-Paying Job&lt;/a&gt;, and do many more tasks easily without effort and tiredness.&lt;/p&gt;

&lt;p&gt;Literally, you can use my productivity system to successfully do any kind of job, not just coding. &lt;em&gt;But use it wisely.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Have a great one!&lt;/p&gt;

&lt;p&gt;– Nick Bull&lt;/p&gt;

&lt;p&gt;And also &lt;em&gt;before I forget&lt;/em&gt;, every week I send out a "3–2–1" newsletter with 3 tech news, 2 articles, and 1 piece of advice for you.&lt;/p&gt;

&lt;p&gt;🔥 &lt;a href="https://nickbulljs.com/"&gt;Get the latest Frontend news here.&lt;/a&gt; 🔥&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Introduction to Event delegation in JavaScript.</title>
      <author>Abhishek Jain</author>
      <pubDate>Sat, 19 Dec 2020 11:14:12 +0000</pubDate>
      <link>https://dev.to/abhishekjain35/introduction-to-event-delegation-in-javascript-3p7p</link>
      <guid>https://dev.to/abhishekjain35/introduction-to-event-delegation-in-javascript-3p7p</guid>
      <description>&lt;p&gt;Hello devs, let's understand event delegation.😁&lt;/p&gt;

&lt;p&gt;To understand event delegation, firstly, we'll need to get a hold of how the event listeners work.&lt;/p&gt;

&lt;p&gt;Look at the code below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sampleDiv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sampleDiv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;sampleDiv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sample Div clicked&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Woohooo, We've added an event listener.&lt;br&gt;
Things to note in the above code - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Browser always provides the event object as a parameter for the callback function.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Event object provides many properties, But we're going to focus on the &lt;code&gt;event.target&lt;/code&gt; and &lt;code&gt;event.currentTarget&lt;/code&gt; properties.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#lets-assume-a-situation" class="anchor"&gt;
  &lt;/a&gt;
  Let's assume a situation
&lt;/h4&gt;

&lt;p&gt;Suppose a simple todo app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//HTML&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sampleDiv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;AddBtn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Add&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="c1"&gt;//NOTE: some basic CSS is applied on these elements.&lt;/span&gt;

&lt;span class="c1"&gt;//JavaScript&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sampleDiv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sampleDiv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AddButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;AddBtn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;AddButton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;p&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;todoToRemove&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Click me to remove&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;sampleDiv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;And the code above does this - &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/ZSifZ5G2qOjiOrwwuj/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/ZSifZ5G2qOjiOrwwuj/giphy.gif" alt="Todo gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We want to click on the &lt;code&gt;todo(the paragraph)&lt;/code&gt; to remove the todo. so, I think that we can attach event listeners to each todo and remove todo when it is clicked like this-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Todos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;todoToRemove&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;notes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;notes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;But, It doesn't work.&lt;br&gt;
Since we are adding the todo dynamically through our javascript, the above code runs firstly, but there are no todos so that listeners are attached to any of them.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#so-how-can-we-fix-this" class="anchor"&gt;
  &lt;/a&gt;
  So, How can we fix this?
&lt;/h3&gt;

&lt;p&gt;Here comes the concept of event delegation. Theoretically, what happens in event delegation is we attach the event listener to a parent element. We check for the &lt;code&gt;event.target&lt;/code&gt; property, which results in the actual element on which the event has triggered.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So, the key takeaway is &lt;code&gt;event.currentTarget&lt;/code&gt; is the actual element on which the event listener is attached. And, &lt;code&gt;event.target&lt;/code&gt; is the element on which the actual event happened.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#fixing-the-problem-with-event-delegation" class="anchor"&gt;
  &lt;/a&gt;
  Fixing the problem with event delegation
&lt;/h3&gt;

&lt;p&gt;We can fix the todo removing problem with this simple code -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;sampleDiv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;p&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;//NOTE: the remove function have less support on legacy browsers. so, you can also use this line inside if statement - &lt;/span&gt;
&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentTarget&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;And this works perfectly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/rSw1ENoaCJgxLNoerE/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/rSw1ENoaCJgxLNoerE/giphy.gif" alt="Working Example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We added an event listener to the parent and checked if &lt;code&gt;event.target&lt;/code&gt; is a &lt;code&gt;p&lt;/code&gt; tag. If true, then we call the remove function on it to remove it from the dom tree.&lt;/p&gt;

&lt;p&gt;This whole concept of adding an event listener to a parent is called event delegation.&lt;/p&gt;

&lt;p&gt;That's it from my side. Till then 👋👋&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/7DzlajZNY5D0I/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/7DzlajZNY5D0I/giphy.gif" alt="BYE BYE"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>5 Podcasts every Dev must listen</title>
      <author>Rishabh Singh</author>
      <pubDate>Sat, 19 Dec 2020 08:50:41 +0000</pubDate>
      <link>https://dev.to/mindninjax/top-5-podcasts-every-dev-should-start-listening-1cmd</link>
      <guid>https://dev.to/mindninjax/top-5-podcasts-every-dev-should-start-listening-1cmd</guid>
      <description>&lt;p&gt;As a Dev, it's very important for us to stay updated with the latest and greatest in the industry. One of the easiest &amp;amp;  fun ways to do that is listening to Podcasts. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--njJhFTbZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/7jx6pks25uwbu20tcs20.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--njJhFTbZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/7jx6pks25uwbu20tcs20.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#here-is-a-list-of-the-amazing-podcast-you-should-start-listening-as-a-dev-in-2021" class="anchor"&gt;
  &lt;/a&gt;
  Here is a list of the amazing podcast you should start listening as a DEV in 2021:
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#talks-at-google" class="anchor"&gt;
  &lt;/a&gt;
  Talks at Google
&lt;/h2&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HBXN8_o---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hrv656fqt4dx8ms1pnvk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HBXN8_o---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hrv656fqt4dx8ms1pnvk.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are a fan of TED Talks then this one's for you. Talks at Google can be said as Google's own version of TED Talks. Talks at Google brings the world’s most influential thinkers, creators, makers, and doers all to one place. This Bi-weekly Podcast brings you new Episode every Tuesdays &amp;amp; Fridays. This podcast covers a variety of topics with impact and change in mind by some of the most influential people on our planet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Available on &lt;a href="https://goo.gl/Eidbk4"&gt;Spotify&lt;/a&gt;, &lt;a href="https://www.youtube.com/redirect?redir_token=QUFFLUhqa2NGcDdqQzVsLTN4OEh3UXRWa24wbFdKUDVIZ3xBQ3Jtc0ttTnFla3BlOXBtMFRHZjBwdF9rcXFkMVRPTW12Nk45aFRFZ2plMEI2cUhTcUZQYVBLZU9zXzdHQUlPQVFPT1BWTUNTblVVSm1HVFVVTzg3SkZELVV4MHRJN1FwRjF5eFNLUUpKdlpjOWZpSGdxekhjdw%3D%3D&amp;amp;v=RmrWdl35eKo&amp;amp;q=http%3A%2F%2Fg.co%2FTalksAtGoogle%2FiTunes&amp;amp;event=video_description"&gt;Apple Podcasts&lt;/a&gt; &amp;amp; &lt;a href="https://www.youtube.com/c/talksatgoogle"&gt;YouTube&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#darknet-diaries" class="anchor"&gt;
  &lt;/a&gt;
  Darknet Diaries
&lt;/h2&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Alr5govq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://darknetdiaries.com/imgs/darknet-diaries-sm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Alr5govq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://darknetdiaries.com/imgs/darknet-diaries-sm.jpg" alt="https://darknetdiaries.com/imgs/darknet-diaries-sm.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Darknet Diaries is all about true creepy dark &amp;amp; twisted things that happen on the darknet. Scary enough to give you nightmares. Combined with the immersive storytelling of Jack Rhysider you will instantly fell in love with this Podcast as you explore the secrets and dangers of being on the dark side of the internet. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Available on &lt;a href="https://open.spotify.com/show/4XPl3uEEL9hvqMkoZrzbx5?si=eKrU1IJcQGGT5IePPHCIrQ"&gt;Spotify&lt;/a&gt;, &lt;a href="https://apple.co/DarknetDiaries"&gt;Apple Podcast&lt;/a&gt; &amp;amp; &lt;a href="https://podcasts.google.com/?feed=aHR0cHM6Ly9mZWVkcy5tZWdhcGhvbmUuZm0vZGFya25ldGRpYXJpZXM%3D"&gt;Google Podcasts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#command-line-heroes" class="anchor"&gt;
  &lt;/a&gt;
  Command Line Heroes
&lt;/h2&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rVzgjUou--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/riuk9babryyx0s46xkjf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rVzgjUou--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/riuk9babryyx0s46xkjf.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Command Line Heroes Podcast brings us the stories of developers, programmers, hackers and tech enthusiasts who are revolutionizing our present and shaping our future. Overall this is a must-listen podcast produced Red Hat organization.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Available on &lt;a href="https://open.spotify.com/show/4Jgtgr4mHXNDyLldHkfEMz"&gt;Spotify&lt;/a&gt;, &lt;a href="https://geo.itunes.apple.com/podcast/us/id1319947289?mt=2&amp;amp;at=1010lbVy&amp;amp;ct=redhatclh_website"&gt;Apple Podcasts&lt;/a&gt; &amp;amp; &lt;a href="https://www.google.com/podcasts?feed=aHR0cHM6Ly9mZWVkcy5wYWNpZmljLWNvbnRlbnQuY29tL2NvbW1hbmRsaW5laGVyb2Vz"&gt;Google Podcasts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gradient-dissent" class="anchor"&gt;
  &lt;/a&gt;
  Gradient Dissent
&lt;/h2&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WFgK_9lq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/yqofayg9ebj3tgxvat9h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WFgK_9lq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/yqofayg9ebj3tgxvat9h.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are a machine learning enthusiast then you are going to love &lt;strong&gt;Gradient Dissent&lt;/strong&gt; Podcast which, as the name suggests, is all about machine learning. Tune into this Podcast to see how experts from all around the world are thinking and using the power of Machine Learning and similar technologies to solve real-world problems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Available on &lt;a href="http://media.blubrry.com/gradient_dissent/open.spotify.com/show/7o9r3fFig3MhTJwehXDbXm"&gt;Spotify&lt;/a&gt;, &lt;a href="http://media.blubrry.com/gradient_dissent/podcasts.apple.com/us/podcast/gradient-dissent-weights-biases/id1504567418"&gt;Apple Podcasts&lt;/a&gt;, &lt;a href="https://podcasts.google.com/feed/aHR0cHM6Ly9mZWVkcy5zb3VuZGNsb3VkLmNvbS91c2Vycy9zb3VuZGNsb3VkOnVzZXJzOjc5MjEzOTQyOS9zb3VuZHMucnNz"&gt;Google Podcasts&lt;/a&gt; &amp;amp; &lt;a href="https://www.youtube.com/playlist?list=PLD80i8An1OEEb1jP0sjEyiLG8ULRXFob_"&gt;YouTube&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#soft-skills-engineering" class="anchor"&gt;
  &lt;/a&gt;
  Soft Skills Engineering
&lt;/h2&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F8rr9ihG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8tncndx68gjlu9g8pxjd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F8rr9ihG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8tncndx68gjlu9g8pxjd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It takes more than great code to be a great engineer. Last but not the least we have, &lt;strong&gt;Soft Skills Engineering&lt;/strong&gt; Podcast which is a weekly advice podcast for software developers about the non-technical stuff that goes into being a great software developer. It's also one of the highest-rated podcasts by Developers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Available on &lt;a href="https://open.spotify.com/show/59I1XnvAB9fQzSj9SIKCoI?si=9dasZvgFRDyrIcU9yPCgkQ"&gt;Spotify&lt;/a&gt;, &lt;a href="https://itunes.apple.com/us/podcast/soft-skills-engineering/id1091341048?mt=2"&gt;Apple Podcasts&lt;/a&gt; &amp;amp; &lt;a href="https://www.google.com/podcasts?feed=aHR0cHM6Ly9zb2Z0c2tpbGxzLmF1ZGlvL2ZlZWQueG1s"&gt;Google Podcasts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bonus" class="anchor"&gt;
  &lt;/a&gt;
  BONUS:
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#here-are-2-of-my-favourite-podcast-as-a-bonus-for-you" class="anchor"&gt;
  &lt;/a&gt;
  Here are 2 of my favourite Podcast as a Bonus for you:
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#dev-discuss" class="anchor"&gt;
  &lt;/a&gt;
  Dev Discuss
&lt;/h2&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zDWzA_vl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/64oj6n56aq3cl56bld1l.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zDWzA_vl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/64oj6n56aq3cl56bld1l.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Officially produced by &lt;strong&gt;The DEV Team&lt;/strong&gt;, &lt;strong&gt;DevDiscuss&lt;/strong&gt; is one of the best Podcasts on the web. This weekly Podcast brings in amazing developers around the globe as they answer and discuss the hottest questions and topics, trending on the internet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Available on &lt;a href="https://open.spotify.com/show/4Jae2mPUqx0XnGychucsE4?"&gt;Spotify&lt;/a&gt;, &lt;a href="https://podcasts.apple.com/us/podcast/devdiscuss/id1513053883"&gt;Apple Podcasts&lt;/a&gt; &amp;amp; &lt;a href="https://podcasts.google.com/feed/aHR0cHM6Ly9mZWVkcy5kZXZwb2RzLmRldi9kZXZkaXNjdXNzX3BvZGNhc3QueG1s?ep=14"&gt;Google Podcasts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dev-news" class="anchor"&gt;
  &lt;/a&gt;
  Dev News
&lt;/h2&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0qHxBsxV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.listennotes.com/podcasts/devnews-dev-FwglQdEHyvR-fH8hvsClkWp.1400x1400.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0qHxBsxV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.listennotes.com/podcasts/devnews-dev-FwglQdEHyvR-fH8hvsClkWp.1400x1400.jpg" alt="https://cdn-images-1.listennotes.com/podcasts/devnews-dev-FwglQdEHyvR-fH8hvsClkWp.1400x1400.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another great Podcast from The DEV Team, Dev News is a weekly Podcast which brings you the latest and greatest tech news from all around the world. Hosted by Developers for developers, this Podcast is gonna be a great addition to your weekly playlist.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Available on &lt;a href="https://open.spotify.com/episode/2hMB006ZcD3E8DSDRQZUev"&gt;Spotify&lt;/a&gt; &amp;amp; &lt;a href="https://podcasts.apple.com/us/podcast/devnews/id1525581923"&gt;Apple Podcasts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#last-note" class="anchor"&gt;
  &lt;/a&gt;
  Last Note
&lt;/h1&gt;




&lt;p&gt;Do you know any other great Podcasts for Devs, then please feel free to share it in the discussions/comments. Thank you for reading my Blog Post.&lt;/p&gt;

</description>
      <category>podcast</category>
      <category>watercooler</category>
      <category>discuss</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Doing a frontend technical interview with ReactJS</title>
      <author>Kristijan Pajtasev</author>
      <pubDate>Sat, 19 Dec 2020 00:47:30 +0000</pubDate>
      <link>https://dev.to/chriss/doing-a-frontend-technical-interview-with-reactjs-2p0</link>
      <guid>https://dev.to/chriss/doing-a-frontend-technical-interview-with-reactjs-2p0</guid>
      <description>&lt;p&gt;There are many ways to conduct a technical interview, and they depend from company to company. You might get whiteboard designing of architecture system, writing an algorithm, or some coding challenge. After working with multiple companies and going through many interviews from both sides, I prefer coding ones. More specifically, making something like a to-do application. By doing it, in an hour, I can assess if a person is junior, mid-level, senior, or architect. In this text, I cover how I do it and what knowledge I expect for which experience level.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#application-to%C2%A0build" class="anchor"&gt;
  &lt;/a&gt;
  Application to build
&lt;/h2&gt;

&lt;p&gt;I prefer a to-do application. The model for an item of it is straightforward. All you need is a text, a unique identifier, and some flag indicating its status. All to-do applications display the list of all items, enable input of a new item, toggle the item's status, and delete them. I don't expect to spend more than 45 minutes up to an hour. That is not a long time, so I don't expect candidates to do everything, just enough to show how they think and what they know.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup" class="anchor"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#ide" class="anchor"&gt;
  &lt;/a&gt;
  IDE
&lt;/h3&gt;

&lt;p&gt;There are many ways you can conduct this kind of technical interview, but I like &lt;a href="https://codesandbox.io/"&gt;codesandbox&lt;/a&gt;. There you can create an initial React application, and you can easily install other npm packages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data" class="anchor"&gt;
  &lt;/a&gt;
  Data
&lt;/h3&gt;

&lt;p&gt;I provide candidates with initial data. It is just a JSON file with few items located in the public folder. In React, every file located in that folder is available, and this one you can request by making a get request to /todo.json.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#google" class="anchor"&gt;
  &lt;/a&gt;
  Google
&lt;/h3&gt;

&lt;p&gt;I am okay with googling for documentation, and I make it clear at the beginning of the interview. And this is also an indicator of candidate experience level. If the candidate checks documentation for some API, that is fine. But if the candidate googles everything, there is probably a significant lack of experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interview" class="anchor"&gt;
  &lt;/a&gt;
  Interview
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#task-1-load-data-and-display" class="anchor"&gt;
  &lt;/a&gt;
  Task 1: Load data and display
&lt;/h3&gt;

&lt;p&gt;I do give a walkthrough of all the setup, where data is, how it is available, and the end goal of the application. As a first task, I request to display all the items from my data file. In this step, I expect candidates to load data using fetch API in the effect hook. After they do this, they should store them in the state and display them in a list. Often, I hear from candidates they want to use some third party request library like Axios and are free to do so. Another variation is also how they are displaying it. Sometimes it is a list of divs, and sometimes, it is an HTML list element. I prefer an HTML list, but any other solution can be acceptable as long as the candidate explains. It is an excellent opportunity for discussion.&lt;/p&gt;

&lt;p&gt;Senior vs. Junior&lt;/p&gt;

&lt;p&gt;What separates senior and junior is looking ahead. Often less experienced developers set incorrect initial state data. They don't check if data already exists before rendering, and they do everything in a single component. Sometimes, senior developers can also make everything in one component, but what they do is they are evident in explaining what and why they are doing. In this case, they would say it is all in a single component for the sake of simplicity and that they are intending to split it once they have the display working. They have an approach to first make it work, then improve it.&lt;/p&gt;

&lt;p&gt;Another thing in this task that separates junior and senior developers is fetching data. The experienced developer does it every day and should not have a problem working with fetch API and asynchronous code. A less experienced developer might struggle with it a bit. Struggling too much, or not being able to do it at all, might be a deal-breaker.&lt;/p&gt;

&lt;p&gt;This task gives a lot of side questions opportunities. One of them is a key prop. In React, when you are displaying items in a loop, they need to have a key prop. Candidates with less experience won't pass it. Pointing at this error gives a great indicator of how much experience with React do they have, and it is an excellent opportunity to ask what it does. In this section, other questions that you might want to ask are about hooks and lifestyle methods, the difference between HTML lists, and the components' organization.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#task-2-styling" class="anchor"&gt;
  &lt;/a&gt;
  Task 2: Styling
&lt;/h3&gt;

&lt;p&gt;There are many ways to do styling. There are CSS, LESS, SASS, bootstrap, and many other solutions. But I think that you need to know CSS. At this stage, I do not expect anything overly complicated. But I would ask to play around with margins and paddings, to remove list bulleting and maybe so some text styling. Junior might struggle because they are used to simple stuff or using a third-party library. But senior developer should be able to do it without any problem. It is also a perfect moment to ask for some comparison of different solutions and when to use which. Things like the difference between padding and margin.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-updating-status-or-adding-a-new-item" class="anchor"&gt;
  &lt;/a&gt;
  Step 3: Updating status or adding a new item
&lt;/h3&gt;

&lt;p&gt;If a candidate got to this part in under 30 minutes, it already does indicate good knowledge. Another task is to test more of their forward-thinking. The file is read-only, and they obviously can't update it. But they can work with the state. Here you can test the updating state in a parent component. It does show how deep is their understanding of components lifecycle - updating of status especially.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-questions" class="anchor"&gt;
  &lt;/a&gt;
  Step 4: Questions
&lt;/h3&gt;

&lt;p&gt;After the coding part, it is always good to leave 5–10 minutes for theoretical questions. Juniors do get more straightforward questions, focused on their experience: tasks they had, and details on how they solved them. I like to do more comprehensive solutions for seniors, and I expect them to have questions as part of their answers. To consider requirements.&lt;/p&gt;




&lt;p&gt;For more, you can follow me on &lt;a href="https://twitter.com/hi_iam_chris_"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/kpajtasev/"&gt;LinkedIn&lt;/a&gt;, &lt;a href="https://github.com/kristijan-pajtasev/"&gt;GitHub&lt;/a&gt;, or &lt;a href="https://www.instagram.com/hi_iam_chris_/"&gt;Instagram&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>career</category>
      <category>programming</category>
      <category>javascript</category>
    </item>
    <item>
      <title>See how much you coded in the past year with git!</title>
      <author>Austin Blade</author>
      <pubDate>Fri, 18 Dec 2020 23:14:01 +0000</pubDate>
      <link>https://dev.to/austinblade/see-how-much-you-coded-in-the-past-year-with-git-85l</link>
      <guid>https://dev.to/austinblade/see-how-much-you-coded-in-the-past-year-with-git-85l</guid>
      <description>&lt;p&gt;2020 is almost over. (INSERT JOKE ABOUT HOW CRAPPY 2020 WAS FOR MOST PEOPLE HERE). Regardless of the year, I like to give myself an "annual review" every year. Part of that review is to see how much I coded in the past year. Not only is this just fun, but it could also give you some weight in your argument for a promotion or pay raise at your next review. 🤑&lt;/p&gt;

&lt;p&gt;If you've used GitHub, you've probably seen their contribution calendar that looks something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8OaISAyl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/h12np12sglzok815vno9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8OaISAyl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/h12np12sglzok815vno9.png" alt="GitHub Contributions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's fine and dandy, but what if you aren't using GitHub? What if you want more info that could compare your performance to a team? All that and more will be discussed right after this quick commercial break!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PSqSJ87j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/jPgEkqIWTmYLK/giphy.gif%3Fcid%3Decf05e47cec969c5ef960d7a6ef68208ed8c5459d191e612%26rid%3Dgiphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PSqSJ87j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/jPgEkqIWTmYLK/giphy.gif%3Fcid%3Decf05e47cec969c5ef960d7a6ef68208ed8c5459d191e612%26rid%3Dgiphy.gif" alt="Old Phone Commercial"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alright, let's get to business. This walk-through will work for ANY codebase that uses git for version control. My company uses Azure, so I don't get the nifty contribution calendar by default.&lt;/p&gt;

&lt;p&gt;We will be using an npm package called "git-stats".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://camo.githubusercontent.com/81e598418a780d07b9e23fd717200fca0f18dee49d78507f03f7eea1c1d23fbb/687474703a2f2f692e696d6775722e636f6d2f513754515948782e706e67" class="article-body-image-wrapper"&gt;&lt;img src="https://camo.githubusercontent.com/81e598418a780d07b9e23fd717200fca0f18dee49d78507f03f7eea1c1d23fbb/687474703a2f2f692e696d6775722e636f6d2f513754515948782e706e67" alt="git status logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First, open up your terminal and install git-stats globally using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i -g git-stats
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Git stats will now keep track of your commits for future reference, but there's currently no data for it to work with. We need to install another tool to import all of our commits from the repository into git-stats.&lt;/p&gt;

&lt;p&gt;The tool we need is called "git-stats-importer". We can install it globally using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install -g git-stats-importer
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;After "git-stats-importer" is installed, cd into the repository you want stats for.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd path/to/my-repository
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Then run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git-stats-importer
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If you get an error that says "Cannot find any emails", like this &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hRQwHBet--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xk1t3w8f8tbvvajhs6sw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hRQwHBet--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xk1t3w8f8tbvvajhs6sw.png" alt="Can't Find Emails Error"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;you will need to run the command again followed by a "-e" and the email you use to access the repository like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git-stats-importer -e youremail@joinhandshake.com
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;After running that command you should see a bunch of import lines followed by an "info Done."&lt;/p&gt;

&lt;p&gt;At this point, we have everything we need to check out our stats!&lt;/p&gt;

&lt;p&gt;To see a contribution calendar (similar to GitHub's) in your terminal, type this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git-stats
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You'll see all of your contributions from the past year in the same format!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8vltp1aq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8jm5zu8e8xru098i0hy9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8vltp1aq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8jm5zu8e8xru098i0hy9.png" alt="git stats results"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you wanted to see all of the contributions for your entire team (instead of those from just yourself) you can run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git-stats -g
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;And finally, to see how you stand compared to the rest of your team with contributions, you can generate a pie chart in your terminal with the percentages of contributions by each author in the repository by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git-stats --authors
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The result should be something similar to this!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VnDTRGfM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/aq0jwoei4ptt2m2q0h4g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VnDTRGfM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/aq0jwoei4ptt2m2q0h4g.png" alt="git status pie chart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How cool is that?! I like to keep track of how I'm doing and compare it year to year. Hopefully this can help you measure your goals and progress over the past year. 🙂&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>git</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Redux 101</title>
      <author>Rawan Eltobgy</author>
      <pubDate>Fri, 18 Dec 2020 22:17:40 +0000</pubDate>
      <link>https://dev.to/rawaneltobgy/redux-101-a5e</link>
      <guid>https://dev.to/rawaneltobgy/redux-101-a5e</guid>
      <description>&lt;h2&gt;
  &lt;a href="#whats-redux" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What's Redux?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Redux is a predictable state management library designed to help you write JavaScript apps that behave consistently across client, server, and native environments and are easy to test.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-should-you-think-about-using-redux" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why should you think about using Redux?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;According to Redux official docs:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Redux helps you manage "global" state - state that is needed across many parts of your application.&lt;/p&gt;

&lt;p&gt;The patterns and tools provided by Redux make it easier to understand when, where, why, and how the state in your application is being updated, and how your application logic will behave when those changes occur. Redux guides you towards writing code that is predictable and testable, which helps give you confidence that your application will work as expected."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-problem-redux-trying-to-solve" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is the problem Redux trying to solve?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The problem Redux wanted to solve is &lt;strong&gt;predictable state updates&lt;/strong&gt; as knowing where and why the state changes and having a "single source of truth" can be an advantage.&lt;/p&gt;

&lt;p&gt;Redux allows you to debug the application easily, how? &lt;br&gt;
by separating the UI layer away from the data, that helps you to be able to understand what is going with the application at all times.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-are-redux-main-principles" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What are Redux main principles?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;We can summarize the intent behind Redux's design in three core concepts:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eHkkRggE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/i9xda1s5bhi0z42ebu7f.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eHkkRggE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/i9xda1s5bhi0z42ebu7f.jpeg" alt="One-Truth"&gt;&lt;/a&gt;&lt;br&gt;
1.&lt;strong&gt;Single Source of Truth&lt;/strong&gt;&lt;br&gt;
Everything that changes in the app (data, UI)state is contained in a single object (*state tree/store *)&lt;/p&gt;

&lt;p&gt;The initial state of the store is up to you but it's typically an &lt;strong&gt;Object&lt;/strong&gt; -like a model- and it doesn't need a setter in order to set it initially.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#store" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Store:&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;An object that holds the whole state tree of the app, it has a few methods on it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;getState()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dispatch(action)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subscribe(listener)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;replaceReducer(nextReducer)&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will talk more about the store and its methods in later on.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-create-your-redux-store" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;How to create your redux store?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Pass your root reducer function to createStore, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const userReducer = function(state = [], action) {
  if (action.type === 'ADD_USER') {
    var newState = state.concat([action.user]);
    return newState;
  }
  return state;
}
const store = createStore(users, ['Use Redux'])
store.dispatch({
  type: 'ADD_USER',
  user: {name: 'Rawan', language: 'EN'}
})
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;p&gt;&lt;code&gt;createStore(reducer, [preloadedState], [enhancer])&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;We would only now talk about the "preloadedState" and we would explain the reducer later on.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;em&gt;[preloadedState]:&lt;/em&gt;&lt;/em&gt; the application's initial state.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s----BTdy-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hxcyw1mmcl8b0v9fik5b.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s----BTdy-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hxcyw1mmcl8b0v9fik5b.jpg" alt="Read-only"&gt;&lt;/a&gt;&lt;br&gt;
2.&lt;strong&gt;State is read-only&lt;/strong&gt;&lt;br&gt;
State-Tree is read-only and the only way to change the state (&lt;em&gt;send data from your application to your Redux store&lt;/em&gt;) is to &lt;em&gt;dispatch&lt;/em&gt; an &lt;strong&gt;&lt;em&gt;action&lt;/em&gt;&lt;/strong&gt;, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const action = {
  type: 'ADD_USER',
  user: {name: 'Rawan', language: 'EN'}
};

store.dispatch(action);
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#what-does-it-mean-to-dispatch-an-action" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What does it mean to dispatch an action?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;You can think of dispatching actions as "triggering an event" in the application. Something happened, and we want the store to know about it.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#action" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Action:&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Is a plain JS object describing the change, with a type field to indicate the type of action to be performed.&lt;br&gt;
The type field should be a descriptive string, in the format of "domain/eventName" like &lt;em&gt;" users/userLogin"&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;An action object can have other fields with additional information about what happened. We call that a "payload".&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const userLoginAction = {
  type: 'users/USER_LOGIN',
   payload: {
    username: "Adam",
    password: "pass1234"
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;As you can see we declared the action as an object that has a type and payload.&lt;/p&gt;

&lt;p&gt;3.&lt;strong&gt;Changes are made with pure functions (Reducers)&lt;/strong&gt;&lt;br&gt;
To specify how the state tree is transformed by dispatched action, we write pure functions called &lt;strong&gt;Reducers&lt;/strong&gt; to do so.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pure-function" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Pure function:&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Is a function which, given the same input, will always return the same output (state) and Its return value depends solely on the values of its parameters. &lt;br&gt;
&lt;em&gt;for example:&lt;/em&gt; If you pass 1 and 4 to a summation function, you’ll always get 5.&lt;/p&gt;

&lt;p&gt;Also, the pure function should have no side-effects like: &lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#mutating-your-input-network-calls-changing-the-filesystem-fs-querying-the-dom-setting-an-async-timer-modifying-some-state-that-exists-outside-of-a-function-or-mutating-arguments-to-a-function-generating-random-numbers-or-unique-random-ids-such-as-mathrandom-or-datenow-etc" class="anchor"&gt;
  &lt;/a&gt;
  &lt;em&gt;Mutating your input, Network calls, Changing the filesystem (fs), Querying the DOM, Setting an async timer, Modifying some state that exists outside of a function, or mutating arguments to a function, generating random numbers or unique random IDs (such as Math.random() or Date.now()) ...etc&lt;/em&gt;
&lt;/h5&gt;

&lt;h4&gt;
  &lt;a href="#reducer" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Reducer:&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;A reducer takes in the &lt;strong&gt;current state&lt;/strong&gt; and an &lt;strong&gt;action&lt;/strong&gt; object as arguments and can only modify the state by returning a new state.&lt;/p&gt;

&lt;p&gt;and as redux docs state:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can think of a reducer as an event listener that handles events based on the received action (event) type.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Reducers have 3 important rules:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Should only calculate the new state value based on the state and action arguments.&lt;/li&gt;
&lt;li&gt;They are not allowed to modify the existing state. &lt;/li&gt;
&lt;li&gt;They can only make immutable updates, by copying the existing state and making changes to the copied values.
They must not do any asynchronous logic, calculate random values, or cause other "side effects".&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As you can see, the rules of reducer match those of a pure function, but why should we follow these rules? &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Code predictability, when a function's output is only calculated from the input arguments, it's easier to understand how that code works and to test it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If a function modifies other values, including its arguments(( the current state, action )), that can change the way the application works unexpectedly. This can be a common source of bugs, such as "I updated my state, but now my UI isn't updating when it should!"&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Some of the Redux DevTools capabilities depend on having your reducers follow these rules correctly.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#in-conclusion" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;In Conclusion,&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Redux stores all the app state in one place which is a single source of truth called "store", in order to change the state, components can "dispatch"  an action  to  change the store change, then the components that need to be aware of state changes can “subscribe” to the store to get the state change, as shown:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Oe7bIZhb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/iet8xz2spiegjjndxz4g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Oe7bIZhb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/iet8xz2spiegjjndxz4g.png" alt="Redux-StateManagment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Finally, here's a brief summary of what happens using redux:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wmgj5KaK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wpspfkmdzz7wvimro2zu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wmgj5KaK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wpspfkmdzz7wvimro2zu.png" alt="Redux-Flow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it for this article, this is just an intro to redux main concepts, I hope you learned something :)&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://redux.js.org/"&gt;https://redux.js.org/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>redux</category>
      <category>javascript</category>
    </item>
    <item>
      <title>High reusability with high order components!</title>
      <author>Christian Ipanaque</author>
      <pubDate>Fri, 18 Dec 2020 21:54:12 +0000</pubDate>
      <link>https://dev.to/chrisipanaque/high-reusability-with-high-order-components-j0k</link>
      <guid>https://dev.to/chrisipanaque/high-reusability-with-high-order-components-j0k</guid>
      <description>&lt;p&gt;You have launched the best React application in the world, your users love it, but as the skilled software engineer that you are, you notice that you have created too many components that have similar functionality, resulting in a lot of duplicate code. It is now time to use one of the most powerful patterns in React, HOCs (high order components).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/glmRyiSI3v5E4/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/glmRyiSI3v5E4/giphy.gif" alt="what?"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The purpose of a HOC is to enhance a given component with shared functionality and then returns a new component. This reusable HOC component is used to avoid creating too many similar components with that same enhanced functionality. It also improves the code of your application to become more extendable as you hire new engineers for your team to add new features for your users.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/2aAcLrYtiX8YM/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/2aAcLrYtiX8YM/giphy.gif" alt="yay!"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To help you identify opportunities to remove duplicate code in your application, we'll create an example HOC that will enhance its input components with a common shared functionality, toggling. The toggling functionality is useful in the following scenarios:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Displaying/hiding a component&lt;/li&gt;
&lt;li&gt;Collapsing/expanding a list of components&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this post we will using the toggling functionality to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Toggle between a text and an input field. This will allow the user to toggle between editing and displaying a post title&lt;/li&gt;
&lt;li&gt;Toggle between collapsed/expanded list&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both of these cases need the same toggling functionality. We first implement the logic of toggling once when creating the HOC, and reuse this new HOC as many times as we want to create new components that will take advantage of using that same logic.&lt;/p&gt;




&lt;p&gt;Lets start by creating the new HOC with the name &lt;code&gt;withToggle&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// withToggle.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;withToggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;toggleStatus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setToggleStatus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setToggleStatus&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;prevToggleStatus&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;prevToggleStatus&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="nx"&gt;toggleStatus&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggleStatus&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;withToggle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;What this HOC does is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;It accepts a Component as an input&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It returns a component that has a toggleStatus state with an initial value of false, and toggle function that is used to update the toggleStatus state&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It returns the given Component input with two additional props&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;toggleStatus&lt;/li&gt;
&lt;li&gt;toggle&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and a deconstructured props that enables us to pass any additional props from the user.&lt;/p&gt;

&lt;p&gt;Overall this simple HOC returns the same component input but with two additional props, a boolean and a function to update that boolean.&lt;/p&gt;




&lt;p&gt;Lets now use this HOC to implement our first use case:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ViewEditToggle.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;withToggle&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./withToggle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ViewEditToggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;toggleStatus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggleStatus&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt; : &amp;lt;p&amp;gt;{title}&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggleStatus&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cancel&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Edit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;withToggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ViewEditToggle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;When the toggleStatus state is updated to true, we display an input field and if false we display a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tag containing the title prop.&lt;/p&gt;

&lt;p&gt;The toggle prop is passed in to the onClick handler of the button, which allows us to toggle the toggleStatus state when we click the button.&lt;/p&gt;

&lt;p&gt;This example can be used to update the value of a post title. The user would click the toggle button and write a new value for the post title. The functionality to handle the change of the input and to submit a new value, can be achieved by creating an additional HOC.&lt;/p&gt;

&lt;p&gt;Also, notice that we are exporting the &lt;code&gt;withToggle&lt;/code&gt; function with the &lt;code&gt;ViewEditToggle&lt;/code&gt; component as its input, and when we render &lt;code&gt;ViewEditToggle&lt;/code&gt; it will get its initial toggling props from the &lt;code&gt;withToggle&lt;/code&gt; HOC.&lt;/p&gt;

&lt;p&gt;We can now use this component anywhere within our codebase with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ViewEditToggle&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;My first post&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;






&lt;p&gt;Lets now use this HOC again to implement our second use case:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// CollapseExpand.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;withToggle&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./withToggle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CollapseExpand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;toggleStatus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;List&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggleStatus&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Collapse&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Expand&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggleStatus&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;))}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)}&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;withToggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;CollapseExpand&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;As with the first use case, the CollapseExpand component gets enhanced with the toggleStatus prop and the toggle function to achieve the toggling functionality.&lt;/p&gt;

&lt;p&gt;We can now use this component anywhere within our codebase with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Angular&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;React&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CollapseExpand&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#control-props" class="anchor"&gt;
  &lt;/a&gt;
  Control props
&lt;/h2&gt;

&lt;p&gt;Lets add a controller prop &lt;code&gt;initialToggleStatus&lt;/code&gt; to control the initialization of the toggleStatus state if a user needs to have the list initially expanded.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// withToggle.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;withToggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;initialToggleStatus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;toggleStatus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setToggleStatus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;initialToggleStatus&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setToggleStatus&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;prevToggleStatus&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;prevToggleStatus&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="nx"&gt;toggleStatus&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggleStatus&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If we pass the initialToggleStatus prop to the CollapseExpand component, we can now set the initial value of toggleStatus:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Angular&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;React&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CollapseExpand&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;initialToggleStatus&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://i.giphy.com/media/3oxHQwe86QN6TMOEEw/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3oxHQwe86QN6TMOEEw/giphy.gif" alt="done!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>hoc</category>
      <category>reusability</category>
    </item>
    <item>
      <title>The Survival Guide to the #100DaysOfHardware Challenge</title>
      <author>Fabian Hinsenkamp</author>
      <pubDate>Fri, 18 Dec 2020 20:51:44 +0000</pubDate>
      <link>https://dev.to/hinsencamp/the-survival-guide-to-the-100daysofhardware-challenge-1ph4</link>
      <guid>https://dev.to/hinsencamp/the-survival-guide-to-the-100daysofhardware-challenge-1ph4</guid>
      <description>&lt;p&gt;Let's be honest, starting to learning about electronics, microcontrollers and hardware can be very hard, especially with a lot of experience in Software- but none in Hardware development.  &lt;/p&gt;

&lt;p&gt;I personally never managed to get a grip on hardware topics at all, not till I started this challenge…&lt;/p&gt;

&lt;p&gt;Actually, about &lt;strong&gt;80% of people fail&lt;/strong&gt; in the attempt to pickup a meaningful new habit (&lt;a href="https://pubmed.ncbi.nlm.nih.gov/2980864/"&gt;source&lt;/a&gt;). The main reasons are, &lt;strong&gt;lack of accountability, company and a clear path to success&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;It's most often a lonely battle we fight, trying to keep ourselves accountable for achieving a not clearly defined goal. This makes it just too easy to slip.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To overcome the known pattern of self-deception, I created the #100DaysOfHardware challenge and this survival guide!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The guide is builds-up on my condensed learnings from my 100 days long journey into the fascinating world of hardware! I hope to encourage you to start your own journey and to provide enough resources and guidance to help you successfully complete it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of%C2%A0content" class="anchor"&gt;
  &lt;/a&gt;
  Table of Content
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#How-does-the-#100DaysOfHardware-Challenge-work?"&gt;How does the #100DaysOfHardware Challenge work?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#The-Origin?"&gt;The Origin?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Why-join-this-public-Challenge?"&gt;Why join this public Challenge?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Who-should-join-the-Challenge?"&gt;Who should join the Challenge?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-to-find-Time-in-your-Daily-Routine?"&gt;How to find Time in your Daily Routine?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-to-join-the-Challenge?"&gt;How to join the Challenge?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#What-Hardware-do-I-need-to-buy-for-the-Challenge?"&gt;What hardware do I need to buy for the Challenge?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-to-Structure-the-Challenge?"&gt;How to Structure the Challenge?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#What-to%20learning-about-Electronics?"&gt;What to learning about Electronics? (Day 0–30)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#What-to-learning-about-Arduino?"&gt;What to learning about Arduino? (Day 31–50)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-to-build-your-own-Projects?"&gt;How to build your own Projects? (Day 51–100)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Summary"&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-does-the-100daysofhardware-challenge-work" class="anchor"&gt;
  &lt;/a&gt;
  How does the #100DaysOfHardware Challenge work? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The rules of #100DaysOfHardware are very simple. Each Day for &lt;br&gt;
100 Days, you do:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Learn about electronics and hardware for at least one hour.&lt;/li&gt;
&lt;li&gt;Tweet your progress with the hashtag: &lt;a href="https://twitter.com/search?q=%23100Daysofhardware"&gt;#100DaysOfHardware&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Reach out to someone from the maker community on Twitter.&lt;/li&gt;
&lt;/ol&gt;


&lt;h1&gt;
  &lt;a href="#the-origin" class="anchor"&gt;
  &lt;/a&gt;
  The Origin &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;The #100DaysOfHardware challenge originates from my personal desire to learn a lot about electronics and hardware, fast.&lt;br&gt;
Why?&lt;/p&gt;

&lt;p&gt;I got the opportunity to work for Microsoft at the intersection of software and hardware development. I knew taking the offer, would mean to enter a whole new world. Even though, being a software engineer by trade, I never touched any electronics or even an Arduino microcontroller before. I really had to start at zero.&lt;/p&gt;

&lt;p&gt;So, to make myself stick to the plan, I went for the battle-proven "100 days of x" challenge format, hopping for the magic of a public commit to carry me on my journey.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FhtvzQGZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/tweet_video_thumb/EcQ6IVdXkAAi2v1.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YqTYULO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1018568074553851904/JultPTPi_normal.jpg" alt="Fabian Hinsenkamp profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fabian Hinsenkamp
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/hinsencamp"&gt;@hinsencamp&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Today, I'm launching the very first &lt;a href="https://twitter.com/hashtag/100DaysOfHardware"&gt;#100DaysOfHardware&lt;/a&gt; challenge! 😎 &lt;br&gt;&lt;br&gt;Find new &lt;a href="https://twitter.com/hashtag/tutorials"&gt;#tutorials&lt;/a&gt; about &lt;a href="https://twitter.com/hashtag/electronics"&gt;#electronics&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/microcontrollers"&gt;#microcontrollers&lt;/a&gt; and &lt;a href="https://twitter.com/hashtag/IoT"&gt;#IoT&lt;/a&gt; on &lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/FbLatnbw3y"&gt;100daysofhardware.com&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      19:06 PM - 06 Jul 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1280216487265959936" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1280216487265959936" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      13
      &lt;a href="https://twitter.com/intent/like?tweet_id=1280216487265959936" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      36
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;The format is extremely popular, since it was invented in 2016 by &lt;a href="https://twitter.com/ka11away"&gt;Alexander Kallaway&lt;/a&gt;, thousands of people have successfully learned how to code, exercise or mediate.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#why-join-this-public-challenge" class="anchor"&gt;
  &lt;/a&gt;
  Why join this public Challenge? &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;To me, three main benefit of this kind of learning challenge stood out&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-increased-accountability" class="anchor"&gt;
  &lt;/a&gt;
  1. Increased Accountability
&lt;/h3&gt;

&lt;p&gt;Very quickly, when the number of my follows started to rise, I had a very strong feeling of being hold accountable. I wasn't only learning for myself anymore, there were other people being interested to watch me succeed. Very motivating!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-personal%C2%A0advice" class="anchor"&gt;
  &lt;/a&gt;
  2. Personal Advice
&lt;/h3&gt;

&lt;p&gt;During my journey, I got to know the maker community on twitter. When I got frustrated because some circuit didn't work or I couldn't wrap my head around a complex topics, there was someone more experienced I could ask for advice. Saved me at least twice from giving up.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-inspiration" class="anchor"&gt;
  &lt;/a&gt;
  3. Inspiration
&lt;/h3&gt;

&lt;p&gt;The maker community on twitter is a global one. I drew a lot of inspiration from other people's projects and ideas. It really reassured me that, there isn't a right or wrong way to learn and apply electronics. The variety of projects is just stunning!&lt;/p&gt;

&lt;p&gt;Besides these main benefits, I started to appreciate the long time commitment. It really helped me to take my time to build a habit of in-depth learning, instead of just binging some shallow tutorials whenever I could find some free time. If you are serious about starting something new, I really can recommend the format.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#who-should-join-the-challenge" class="anchor"&gt;
  &lt;/a&gt;
  Who should join the Challenge? &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;If you are unsure, if it makes sense for you to learn about hardware, electronics, Arduino and the Internet of Things, here are a couple of reasons people have to dive into this area:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You are looking for an effective way to complement your education to land a job in an electronics oriented environment like a hardware startup, wearable manufacturer or industry 4.0 consultancy.&lt;/li&gt;
&lt;li&gt;You want to refresh your knowledge and get back the joy of hands-on tinkering, as you graduated from college quite some time ago.&lt;/li&gt;
&lt;li&gt;You are a college major in electrical-, software- or a related engineering field and want to get some hands-on experience besides all the theory.
You are simply fascinated by electronics, circuits, hardware etc. and want to make tinkering with technology your new hobby.&lt;/li&gt;
&lt;li&gt;You have a dream hardware project, you feared to start building till now.&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#how-to-find-time-in-your-daily-routine" class="anchor"&gt;
  &lt;/a&gt;
  How to find Time in your Daily Routine? &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Finding the time is probably the toughest question to answer when considering to join the challenge. Especially, when you are working full time, plus you also have a family or other responsibilities.&lt;/p&gt;

&lt;p&gt;As a general learning, it's most importantly to commit to a realistic amount of time you can put in learning on a daily bases.&lt;/p&gt;

&lt;p&gt;Don't overcommit, e.g. making yourself spend 3h a day on the challenge , while you actually don't have as much time. Exploiting yourself and letting other responsibilities slip will likely lead to frustration and endanger reaching Day 100 . Remember, the challenge is about building a healthy habit of learning and personal growth.&lt;/p&gt;

&lt;p&gt;In my case, my weekends are always pretty packed, so I had to limit my commitment to weekdays only.&lt;/p&gt;

&lt;p&gt;However, I must warn you - currently there is a bit of a problem. Researching learning material, projects and hardware components that can keep up with your constantly increasing level of knowledge will take extra time, besides the time you spend actually tinkering and learning.&lt;/p&gt;

&lt;p&gt;I hope to solve this problem soon by build-up &lt;a href="https://100daysofhardware.com/"&gt;100DaysOfHardware.com&lt;/a&gt; as a learning hub, to get you the right resources at the right time, so you can successfully participate in the challenge with only an investment of one hour a day.&lt;/p&gt;

&lt;p&gt;If you want to get notified about project updates, signup here:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://eepurl.com/g9mmhP"&gt;Get notified about all upcoming bite-sized challenge guides&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#how-to-join-the-challenge" class="anchor"&gt;
  &lt;/a&gt;
  How to join the Challenge? &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Nothing is easier than this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Order your basic hardware kit.&lt;/li&gt;
&lt;li&gt;As soon as your kit arrives &lt;a href="https://ctt.ac/C916K"&gt;tweet out your commitment.&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That's it, you are all set!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#what-hardware-do-i-need-to-buy-for-the-challenge" class="anchor"&gt;
  &lt;/a&gt;
  What hardware do I need to buy for the Challenge? &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;First of all, let me debunked the common belief that you need tons of expensive equipment to event start learning about electronics. This is simply not true.&lt;/p&gt;

&lt;p&gt;You can get away with spending &lt;strong&gt;less than 100$&lt;/strong&gt; for all equipment and components you need for the whole challenge. It mostly depends on the complexity of your own projects and how much optional equipment you want to get.&lt;/p&gt;

&lt;p&gt;In electronics equipment there is a very wide price range. You can get a basic version of a certain item for very cheap, while there is mostly also a standard and a high end version available for 10x the price of the basic version. Therefore, I will link you an option for all price ranges. In most cases, the the basic or medium version is totally sufficient for the challenge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#must-have" class="anchor"&gt;
  &lt;/a&gt;
  Must Have
&lt;/h2&gt;

&lt;p&gt;The following items are absolute must haves to get through the first 50 days of the challenge. Also in the later stages, they will be a solid foundation to build upon.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basic-hardware-kit%C2%A01399" class="anchor"&gt;
  &lt;/a&gt;
  Basic Hardware Kit (13–99$)
&lt;/h3&gt;

&lt;p&gt;To kickoff your challenge, it makes sense to get a plain electronics starter kit. These kits include a variety of basic electronics components that will fuel your initial learning phase focused on pure electronics.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Basic&lt;/em&gt; Electronics Basic Kit, 350pcs - 13.5$ (&lt;a href="https://www.amazon.com/REXQualis-Electronics-Breadboard-Resistor-Raspberry/dp/B078XV3RK2/ref=sr_1_2_sspa?dchild=1&amp;amp;keywords=electronics+kit&amp;amp;qid=1607418281&amp;amp;refinements=p_36%3A1253503011&amp;amp;rnid=386442011&amp;amp;s=electronics&amp;amp;sr=1-2-spons&amp;amp;psc=1&amp;amp;spLa=ZW5jcnlwdGVkUXVhbGlmaWVyPUEzTlU4S1NROEVRWDRGJmVuY3J5cHRlZElkPUEwMzkwODE3NVBRUDJZQkJYQVVUJmVuY3J5cHRlZEFkSWQ9QTAwMTQ2NjUyTUo1VjJQUzRaRzNZJndpZGdldE5hbWU9c3BfYXRmJmFjdGlvbj1jbGlja1JlZGlyZWN0JmRvTm90TG9nQ2xpY2s9dHJ1ZQ=="&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Medium&lt;/em&gt; Electronics Component Fun Kit, 500pcs - 16$ (&lt;a href="https://www.amazon.com/REXQualis-Electronics-tie-Points-Breadboard-Potentiometer/dp/B073ZC68QG/ref=pd_sbs_328_11?_encoding=UTF8&amp;amp;pd_rd_i=B073ZC68QG&amp;amp;pd_rd_r=5acaf08e-52ff-4daa-ac1e-d72f2582d83b&amp;amp;pd_rd_w=6azML&amp;amp;pd_rd_wg=MtjdJ&amp;amp;pf_rd_p=ed1e2146-ecfe-435e-b3b5-d79fa072fd58&amp;amp;pf_rd_r=MA924EBY2ZXPKW5EVR5N&amp;amp;psc=1&amp;amp;refRID=MA924EBY2ZXPKW5EVR5N"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;High-end&lt;/em&gt; Electronic Component Assortment, 2000pcs - 99$ (&lt;a href="https://www.amazon.com/Interstellar-Electronic-Assortment-Transistors-Potentiometer/dp/B07D1HVZ15/ref=sr_1_4?dchild=1&amp;amp;keywords=electronics+kit&amp;amp;qid=1607417626&amp;amp;sr=8-4"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If possible, try to get a large breadboard, your circuits will outgrow the small once very quickly. Most of these kits come with 5V power supplies, however you probably need to get an additional power cord. Instead of spending another 5$ on one of these, it's a good idea to get your microcontroller directly and use it as a power source, as Arduinos almost always come with an USB cable to power it from your computer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#microcontroller-724" class="anchor"&gt;
  &lt;/a&gt;
  Microcontroller (7–24$)
&lt;/h3&gt;

&lt;p&gt;Latest when you reach the second section of the challenge covering digital electronics, you need to get a microcontroller. Arduino is the goto brand for microcontrollers. But there are also Arduino clones available which are fully compatible with other Arduino and ship for a cheaper price by still remaining a good product quality. If you have decided for a basic electronics kit initially, you should get a microcontroller from the get go to use it as your power source - saves you some bugs for another power cord.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Basic&lt;/em&gt; Seeduino (Arduino Uno Clone) - 7$ (&lt;a href="https://www.seeedstudio.com/Seeeduino-V4-2-p-2517.html?utm_source=blog&amp;amp;utm_medium=blog"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Medium&lt;/em&gt; Elegroo Uno R3 (Arduino Uno Clone) - 14$ (&lt;a href="https://www.amazon.com/ELEGOO-Board-ATmega328P-ATMEGA16U2-Compliant/dp/B01EWOE0UU/ref=sr_1_1_sspa?dchild=1&amp;amp;keywords=arduino+uno+chip&amp;amp;qid=1607419792&amp;amp;sr=8-1-spons&amp;amp;psc=1&amp;amp;spLa=ZW5jcnlwdGVkUXVhbGlmaWVyPUExSzhaTE1GVTFCREEmZW5jcnlwdGVkSWQ9QTAxNDM4OTMyT0NEMVFNVzFIVFcwJmVuY3J5cHRlZEFkSWQ9QTA0ODM4MzMxSUg3UjhZVFIzTDVSJndpZGdldE5hbWU9c3BfYXRmJmFjdGlvbj1jbGlja1JlZGlyZWN0JmRvTm90TG9nQ2xpY2s9dHJ1ZQ=="&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;High-end&lt;/em&gt; Original Arduino Uno - $24(&lt;a href="https://www.amazon.com/Arduino-A000066-ARDUINO-UNO-R3/dp/B008GRTSV6/ref=sr_1_3?dchild=1&amp;amp;keywords=arduino+uno&amp;amp;qid=1607419745&amp;amp;sr=8-3"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#electronic-components" class="anchor"&gt;
  &lt;/a&gt;
  Electronic Components
&lt;/h3&gt;

&lt;p&gt;During my own challenge I got to the point, where my projects required additional electronic components and sensors which where not included in my basic starter kit. Probably, when starting to fiddle with your own project you will get there too. I used three different options to get my parts. None of them is perfect, they all come with pros and cons.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#cheap-amp-unreliable-aliexpress-wish-amp-ebay" class="anchor"&gt;
  &lt;/a&gt;
  Cheap &amp;amp; Unreliable: AliExpress, Wish &amp;amp; Ebay
&lt;/h4&gt;

&lt;p&gt;You can get your components directly from Chinese suppliers. I tried out AliExpress, Wish and Ebay. They all allowed me to cut out the middle man and save 20–40% on some items. So it's definitely the cheapest source, unfortunately that's the only positive aspect of it. However, I had to wait very long for my orders, did not get any tracking ids and had to pay quite some shipping fees which mitigated the initial cost savings.&lt;/p&gt;

&lt;p&gt;I was lucky to find some quality suppliers there, and got nice additional breadboards.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7idNTYgX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Eii4KGdWAAAU-3r.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YqTYULO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1018568074553851904/JultPTPi_normal.jpg" alt="Fabian Hinsenkamp profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fabian Hinsenkamp
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/hinsencamp"&gt;@hinsencamp&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Day 57 of &lt;a href="https://twitter.com/hashtag/100DaysOfHardware"&gt;#100DaysOfHardware&lt;/a&gt;, guess what was in the mail today...&lt;br&gt;&lt;br&gt;Ordered a set of mini breadboards from wish. Quality is outstanding! Did not expect that at all!  &lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Arduino"&gt;#Arduino&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/electronics"&gt;#electronics&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/raspberrypi"&gt;#raspberrypi&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      20:07 PM - 22 Sep 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1308498181647486984" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1308498181647486984" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      3
      &lt;a href="https://twitter.com/intent/like?tweet_id=1308498181647486984" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      6
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Looking back, I would definitely recommend it as a source for simple, non critical parts. For everything you need in time to continue your learning, I wouldn't use any of those sources. As it's not worth killing your learning routine for some cheap parts.&lt;/p&gt;

&lt;p&gt;More complex (e.g. ICs) parts or tools (e.g. soldering iron, multimeter) I also wouldn't buy there at all. Especially since these suppliers do not have to comply to any of your local safety or quality standards. I personally don't want to risk soldering components which might include toxic raw materials or have a soldering Iron start doing funny things while I am using it.&lt;/p&gt;

&lt;p&gt;Here you find the links&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.wish.com/"&gt;Wish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.aliexpress.com/"&gt;AliExpress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ebay.com"&gt;Ebay&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#online-electronics-shops" class="anchor"&gt;
  &lt;/a&gt;
  Online Electronics Shops
&lt;/h4&gt;

&lt;p&gt;When I had a complete parts list for my own project, I tried out some well established online electronics shops, quite a good experience! They really offer a tremendously large selection of components. There is probably nothing you can't find in their inventories. However, you will need to know exactly what you are looking for, otherwise you drown in pages and pages of identically looking components, just differing in some technical detail.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2cT2-i5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EfZJoB7XgAIsn76.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YqTYULO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1018568074553851904/JultPTPi_normal.jpg" alt="Fabian Hinsenkamp profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fabian Hinsenkamp
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/hinsencamp"&gt;@hinsencamp&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Expert question: Is it really the most economical way to ship ICs in a very long thin strip?&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/electronics"&gt;#electronics&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/100DaysOfHardware"&gt;#100DaysOfHardware&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:00 PM - 14 Aug 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1294302896885059592" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1294302896885059592" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      0
      &lt;a href="https://twitter.com/intent/like?tweet_id=1294302896885059592" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      0
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
 

&lt;p&gt;These electronics retails are quite expensive, especially when only ordering small quantities, their shipping cost were ax expensive as ordering directly from China. However, the quality was up to the mark.&lt;br&gt;
So, I'd recommend to get specific and complex components there. If possible batch order, to mitigate the high shipping cost. &lt;/p&gt;

&lt;p&gt;The largest and globally operating shops are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.mouser.com/"&gt;Mouser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rs-online.com/"&gt;RS Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reichelt.com/"&gt;Reichelt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#local-electronics-shops" class="anchor"&gt;
  &lt;/a&gt;
  Local Electronics Shops
&lt;/h4&gt;

&lt;p&gt;For some urgent needs I also checked out my local electronics store. Wasn't a bad experience at all. It is great to have someone you can talk to in person about your project and if in doubt about the component you need, you can definitely get some advice. &lt;br&gt;
However, I had the experience that they had a very limited selection of components instantly available, even rather generic components like a simple IC holder wasn't available when I was there. Might have been a coincident, but clearly they can't compete with global online shops when it comes to range of available products. &lt;/p&gt;

&lt;p&gt;Their big strength is personal service, instant availability and no shipping costs, so even picking up small quantities is makes sense.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#nice-to%C2%A0have" class="anchor"&gt;
  &lt;/a&gt;
  Nice to have
&lt;/h2&gt;

&lt;p&gt;There are also a couple of items which are nice to have, but definitely not required to successfully complete your challenge.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#microcontroller-kit-3690" class="anchor"&gt;
  &lt;/a&gt;
  Microcontroller Kit (36$-90$)
&lt;/h3&gt;

&lt;p&gt;A basic electronics kit + extra Arduino will get you very far already. Alternatively, there are also a lot of dedicated Arduino Starter Kits, however I wouldn't recommend going for one of them. These come already with a microcontroller and many complex electronics components like sensors, motors, bluetooth remote controls etc. Even though all these toys are very tempting to play with, they will not help you grow as much has mastering a wide range of basic components first. Nevertheless, here are some good option if you want to go down that road:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Basic&lt;/em&gt; Elegroo (Arduino Clone) Kit - 36$ (&lt;a href="https://www.amazon.com/ELEGOO-Project-Tutorial-Controller-Projects/dp/B01D8KOZF4/ref=sr_1_1_sspa?dchild=1&amp;amp;keywords=arduino+kit&amp;amp;qid=1607418827&amp;amp;sr=8-1-spons&amp;amp;psc=1&amp;amp;spLa=ZW5jcnlwdGVkUXVhbGlmaWVyPUExV1pGN1kxU0JPQk8yJmVuY3J5cHRlZElkPUEwMjY4MTQ2UFJDTEZZRk44WTNQJmVuY3J5cHRlZEFkSWQ9QTEwMDEzNzYzVFNPV0pHQ01HTlNCJndpZGdldE5hbWU9c3BfYXRmJmFjdGlvbj1jbGlja1JlZGlyZWN0JmRvTm90TG9nQ2xpY2s9dHJ1ZQ=="&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Medium&lt;/em&gt; Elegroo (Arduino Clone) Kit - 53$ (&lt;a href="https://www.amazon.com/EL-KIT-001-Project-Complete-Starter-Tutorial/dp/B01CZTLHGE/ref=sr_1_9?dchild=1&amp;amp;keywords=arduino+kit&amp;amp;qid=1607418827&amp;amp;sr=8-9"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;High-end&lt;/em&gt; original Arduino Kit - 90$ (&lt;a href="https://www.amazon.com/Arduino-Starter-Kit-English-Official/dp/B009UKZV0A/ref=sr_1_3?dchild=1&amp;amp;keywords=arduino+kit&amp;amp;qid=1607418827&amp;amp;sr=8-3"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#multimeter-1162" class="anchor"&gt;
  &lt;/a&gt;
  Multimeter (11–62$)
&lt;/h3&gt;

&lt;p&gt;The multimeter is one of the more useful "nice to have" items. It allows you to measure current, voltage, resistance and continuity. I got mine probably during day 10–20 and it helped me big time to verify assumptions I made based on circuit theory I learned at that time.&lt;/p&gt;

&lt;p&gt;Later on it also helped me to debug my own project, as unfortunately you can't see whats goes wrong with your circuit, only some times a component goes up in smoke, indicating that something is wrong.&lt;/p&gt;

&lt;p&gt;A basic meter will definitely carry you though the challenge, however I recommend to pick the medium one, as it's still affordable and "auto ranging", meaning it finds the most suitable range to display your measured value automatically - very convenient.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Basic&lt;/em&gt; digital Multimeter - 11.50$ (&lt;a href="https://www.amazon.com/Etekcity-Multimeter-MSR-R500-Electronic-Multimeters/dp/B01N9QW620/ref=sr_1_20?crid=2XENJ92B4O8E1&amp;amp;dchild=1&amp;amp;keywords=self+ranging+multimeter&amp;amp;qid=1607421362&amp;amp;sprefix=multimeter+self%2Caps%2C269&amp;amp;sr=8-20"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Medium&lt;/em&gt; digital Multimeter - 23$ (&lt;a href="https://www.amazon.com/INNOVA-3320-Auto-Ranging-Digital-Multimeter/dp/B000EVYGZA/ref=sr_1_5?crid=2XENJ92B4O8E1&amp;amp;dchild=1&amp;amp;keywords=self%2Branging%2Bmultimeter&amp;amp;qid=1607421362&amp;amp;sprefix=multimeter%2Bself%2Caps%2C269&amp;amp;sr=8-5&amp;amp;th=1"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;High-end&lt;/em&gt; digital Multimeter - 62$ (&lt;a href="https://www.amazon.com/Mastech-MS8229-Auto-Range-Multi-Functional-Multimeter/dp/B000JKMTDM/ref=sr_1_4?crid=2XENJ92B4O8E1&amp;amp;dchild=1&amp;amp;keywords=self+ranging+multimeter&amp;amp;qid=1607421362&amp;amp;refinements=p_36%3A1253530011&amp;amp;rnid=1243644011&amp;amp;s=hi&amp;amp;sprefix=multimeter+self%2Caps%2C269&amp;amp;sr=1-4"&gt;link&lt;/a&gt;))&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#soldering-iron%C2%A01570" class="anchor"&gt;
  &lt;/a&gt;
  Soldering Iron (15–70$)
&lt;/h3&gt;

&lt;p&gt;Soldering is skill I did not expect to pickup myself. I believed I could stick to using solderless breadboards for all my 100 days. When I got to build my own more complex project though, I was struggling, as many issues were caused my wiring mistakes. Learning to solder allowed me to hardwire connections and be sure they will remain function correctly while moving on. For me it was a worthy invest of time and money.&lt;/p&gt;

&lt;p&gt;The price range of soldering equipment is just crazy. You can get a full set with plenty of accessories for 9$, while you can also spend 50$ to just get a plain soldering iron. If you can afford it, I'd recommend to go with the one from the mid price range. The cheapest will just be a gamble on how long it lasts, while the expensive one is a good choice when you expect to use it excessively. Keep in mind will need some more accessories like Helping Hands, Desoldering Pump and a Roll of Solder.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Basic&lt;/em&gt; Soldering Kit - 9$, (&lt;a href="https://www.amazon.com/Soldering-Kit-Temperature-Desoldering-Electronics/dp/B07XKZVG8Z/ref=sr_1_5?crid=3VDYE6IE69XPF&amp;amp;dchild=1&amp;amp;keywords=soldering+iron&amp;amp;qid=1607501736&amp;amp;sprefix=soldering+%2Caps%2C260&amp;amp;sr=8-5"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Medium&lt;/em&gt; Soldering Kit - 25$ (&lt;a href="https://www.amazon.com/YIHUA-Adjustable-Temperature-Soldering-428-896%E2%84%89/dp/B07RY6HS6G/ref=sr_1_36?crid=3VDYE6IE69XPF&amp;amp;dchild=1&amp;amp;keywords=soldering+iron&amp;amp;qid=1607502533&amp;amp;refinements=p_36%3A1253529011%2Cp_72%3A1248909011&amp;amp;rnid=1248907011&amp;amp;s=hi&amp;amp;sprefix=soldering+%2Caps%2C260&amp;amp;sr=1-36"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Medium+&lt;/em&gt; Soldering Station + 5 Soldering Tips - 40$ (&lt;a href="https://www.amazon.com/Soldering-Additional-392%E2%84%89-896%E2%84%89-Temperature-Adjustable/dp/B07Z3KCVCL/ref=sr_1_75?crid=3VDYE6IE69XPF&amp;amp;dchild=1&amp;amp;keywords=soldering+iron&amp;amp;qid=1607501736&amp;amp;sprefix=soldering+%2Caps%2C260&amp;amp;sr=8-75"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#oscilloscope" class="anchor"&gt;
  &lt;/a&gt;
  Oscilloscope
&lt;/h3&gt;

&lt;p&gt;A Oscilloscope is an advanced diagnostics tool that shows you a visual wave graph of an electronic signal. They have tons of sophisticated analysis applications, so you could use it for visualizing the time and voltage values of a signal or verify whether or not a malfunctioning component is distorting the signal. &lt;br&gt;
Initially I believed, that I would need one, but to be honest, getting an oscilloscopes for tinkering with starter kits and smaller projects is a bit over the top. Especially, since proper once start at about 300$.&lt;br&gt;
Long story short, get a good multimeter, that will be more than enough.&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#how-to-structure-the-challenge" class="anchor"&gt;
  &lt;/a&gt;
  How to Structure the Challenge? &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;When I started my challenge run, the sheer width and depth of the hardware topic completely overwhelmed me. Hence, I recommend you to structure you challenge in the following three main sections, especially when you are completely new to the field.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--663vEJBq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EdZWixvWkAM9gEi.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YqTYULO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1018568074553851904/JultPTPi_normal.jpg" alt="Fabian Hinsenkamp profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fabian Hinsenkamp
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/hinsencamp"&gt;@hinsencamp&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Day 11 of &lt;a href="https://twitter.com/hashtag/100DaysOfHardware"&gt;#100DaysOfHardware&lt;/a&gt; - As &lt;a href="https://twitter.com/hashtag/capacitors"&gt;#capacitors&lt;/a&gt; are focus of this week,  &lt;a href="https://twitter.com/hashtag/Circuit"&gt;#Circuit&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Analysis"&gt;#Analysis&lt;/a&gt; is becoming a thing! Got to know enough &lt;a href="https://twitter.com/hashtag/equations"&gt;#equations&lt;/a&gt; and a &lt;a href="https://twitter.com/hashtag/multimeter"&gt;#multimeter&lt;/a&gt; - feeling very confident about this! 💪💪 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      20:25 PM - 20 Jul 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1285309900684439558" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1285309900684439558" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      0
      &lt;a href="https://twitter.com/intent/like?tweet_id=1285309900684439558" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      4
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#1-learn-electronics-day-130" class="anchor"&gt;
  &lt;/a&gt;
  1. Learn Electronics (Day 1–30)
&lt;/h2&gt;

&lt;p&gt;The idea is, to first learn about electronics. This includes, components types, how to build circuits, and some other practical skills. A clear project-based learning path is very valuable here, as you can get lost in complexity very easily.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-learn-arduino-day-3150" class="anchor"&gt;
  &lt;/a&gt;
  2. Learn Arduino (Day 31–50)
&lt;/h2&gt;

&lt;p&gt;Next, you should transition into digital electronics by learning about the microcontrollers. the Arduino platform is a great starting point, as it's really user friends and there is plenty of simple projects out there which build upon the Arduino.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-build-your-own-projects-day-51100" class="anchor"&gt;
  &lt;/a&gt;
  3. Build your own Projects (Day 51–100)
&lt;/h2&gt;

&lt;p&gt;In the second half of the challenge, I recommend to use all the knowledge you acquired, to build projects you really care about. Thereby, it's much easier to keep up the motivation and you will learn much more than strictly following shallow tutorials.&lt;/p&gt;

&lt;p&gt;I personally build a control board for an old mechanical flip-dot display as my project 50+ project. It was definitely the most valuable project I worked on during the whole time, as I really wanted it to work in the end.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0slGiZdV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1312163519580835840/pu/img/V0jc-oC5aaIqQ7y0.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YqTYULO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1018568074553851904/JultPTPi_normal.jpg" alt="Fabian Hinsenkamp profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fabian Hinsenkamp
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/hinsencamp"&gt;@hinsencamp&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Day 65 of &lt;a href="https://twitter.com/hashtag/100DaysOfHardware"&gt;#100DaysOfHardware&lt;/a&gt;,&lt;br&gt;&lt;br&gt;Finally 8x8 dots are mastered! 😎&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Arduino"&gt;#Arduino&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/electronics"&gt;#electronics&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/raspberrypi"&gt;#raspberrypi&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      22:52 PM - 02 Oct 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1312163585020235776" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1312163585020235776" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      12
      &lt;a href="https://twitter.com/intent/like?tweet_id=1312163585020235776" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      14
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
 

&lt;p&gt;As general advice, don't make to detailed plans for day 50+ in advance. Your growing knowledge will spawn new ideas and increase clarity on existing once. So give yourself plenty of room to adapt. Just note your current ideas and believes, to review when it's time to decide what project to start next.&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#what-to-learning-about-electronicsday-030" class="anchor"&gt;
  &lt;/a&gt;
  What to learning about Electronics?(Day 0–30) &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;I believe, it is crucial to give yourself plenty of time initially really dig into electronics to learn and digest the core principles. During my own challenge, I made the mistake to move into too complex topics too early. As a result, I got very frustrated later on and almost quit, as I couldn't comprehend what was going wrong.&lt;/p&gt;

&lt;p&gt;There are some important concepts you should definitely cover:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Voltage, Current, Resistance&lt;/li&gt;
&lt;li&gt;Direct Current (DC) and Alternating Current (AC)&lt;/li&gt;
&lt;li&gt;Parallel vs. Serial Circuits&lt;/li&gt;
&lt;li&gt;Ohm's Law&lt;/li&gt;
&lt;li&gt;Kirchhoff's circuit law&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You will come across many very technical and math heavy tutorials and articles when researching these topics. Don't get hung up on it. It is helpful to get some basic skills of circuit analysis so you can understand, e.g. why you can measure a certain level of voltage at a specific component. &lt;/p&gt;

&lt;p&gt;The theory beyond those basics, is helpful but not required at this point in time. Building real projects will teach you much more than studying all dry theory beforehand.&lt;/p&gt;

&lt;p&gt;You should also get a good grasp of the following basic electronic components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Resistor&lt;/li&gt;
&lt;li&gt;LED&lt;/li&gt;
&lt;li&gt;mechanical Button&lt;/li&gt;
&lt;li&gt;Potentiometer&lt;/li&gt;
&lt;li&gt;Capacitor&lt;/li&gt;
&lt;li&gt;Diode&lt;/li&gt;
&lt;li&gt;RGB LED&lt;/li&gt;
&lt;li&gt;Transistor&lt;/li&gt;
&lt;li&gt;Photoresistor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While tinkering with these components, it will inevitably be helpful to pickup some additional skills:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to use a bread board&lt;/li&gt;
&lt;li&gt;How to read technical "data sheets" of components&lt;/li&gt;
&lt;li&gt;How to read circuit diagrams&lt;/li&gt;
&lt;li&gt;Learn how to use a multimeter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The most effective and fun way to consolidate your new knowledge is by building increasingly complex bread board projects.&lt;/p&gt;

&lt;p&gt;A good starting point would be a simply blinking LED circuit which you then extend with every freshly mastered component&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MqTbamHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1281309706145992705/pu/img/YsuY7DRV3smBLpfA.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YqTYULO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1018568074553851904/JultPTPi_normal.jpg" alt="Fabian Hinsenkamp profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fabian Hinsenkamp
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/hinsencamp"&gt;@hinsencamp&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Day 04 - Well, this escalated quickly! not even 5 of 100 days complete, and I already started to extend tutorial to my style 🤣 that’s how you learn the power of &lt;a href="https://twitter.com/hashtag/parallel"&gt;#parallel&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/circuits"&gt;#circuits&lt;/a&gt;!&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/100DaysOfHardware"&gt;#100DaysOfHardware&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      19:30 PM - 09 Jul 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1281309731236335616" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1281309731236335616" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      0
      &lt;a href="https://twitter.com/intent/like?tweet_id=1281309731236335616" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      1
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;After you have a good grasp of basic electronics, there are some more advanced components called integrated circuits (ICs) which are worth exploring. Here are two very important once, used in many application contexts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;555 timer&lt;/li&gt;
&lt;li&gt;shift register&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#what-to-learning-about-arduinoday-3150" class="anchor"&gt;
  &lt;/a&gt;
  What to learning about Arduino?(Day 31-50) &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;After you got a solid understanding of electronics in general, it's a good point in time leap into digital electronics. While so far, our power source was static, now we get to know micro controllers which allow us to programatically control the flow of current.&lt;/p&gt;

&lt;p&gt;As a software engineer, it won't be hard to wrap your head around how to program the Arduino.&lt;br&gt;
Thanks to the extensive Arduino libraries it, it feels like a simplified version of c. Even though, I have never written c before, I did struggle to achieve my goals. &lt;/p&gt;

&lt;p&gt;The Arduino in general, is a very user friendly microcontroller and makes it easy to learn the basics of programming on the fly.&lt;/p&gt;

&lt;p&gt;Nevertheless, I recommend you to start off with a course on Arduino, to get a feel for this technology.&lt;/p&gt;

&lt;p&gt;Most importantly though, find yourself small projects to build. As with basic electronic components, this will make learning and understanding the Arduino technology much easier than just reading about theory or watching shallow tutorials.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NfIaYBT4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1300826091112796167/pu/img/UZQWQirvBQoCsmyo.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YqTYULO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1018568074553851904/JultPTPi_normal.jpg" alt="Fabian Hinsenkamp profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fabian Hinsenkamp
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/hinsencamp"&gt;@hinsencamp&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Day 42 of &lt;a href="https://twitter.com/hashtag/100DaysOfHardware"&gt;#100DaysOfHardware&lt;/a&gt;, now that I got 2 dots flipping, there is only 446 missing 😅 Started to learn about shift registers! First demo circuit is up and running!&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/flipdot"&gt;#flipdot&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Arduino"&gt;#Arduino&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/electronics"&gt;#electronics&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:01 PM - 01 Sep 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1300826121018191872" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1300826121018191872" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      5
      &lt;a href="https://twitter.com/intent/like?tweet_id=1300826121018191872" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      11
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;When you are getting closer to the end of your microcontroller days , you will have learned quite a lot about digital electronics. That's when it gets really interesting! &lt;/p&gt;

&lt;p&gt;You could for example start to control advanced electronics components like a shift register with an Arduino.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#how-to-build-your-own-projectsday-51100" class="anchor"&gt;
  &lt;/a&gt;
  How to build your own Projects?(Day 51–100) &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;As mentioned before, In the second half of the challenge, I recommend to use all the knowledge you acquired, to build projects you really care about. Now, I'd like to extend that advice and say, even pick a project you consider to be very challenging, almost impossible to master at your current level of knowledge.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Why is such a bolt move is a good idea?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let your curiosity drive you, only a project you deeply care about will motivate you to continue, thrive for perfection and let you outgrow all the initial unknowns.&lt;br&gt;
You have a lot of time, so no reason to be afraid of the skills and knowledge the project needs and you don't have yet. You can gain all of them during the next weeks.&lt;/p&gt;

&lt;p&gt;Keep in mind, this challenge is about personal growth, even if you couldn't fully complete the project in time, you are achieving your initial goal of establishing a daily routine of learning and personal growth.&lt;/p&gt;

&lt;p&gt;My project of building a control board for my old mechanical flipdot display, eventually came together quite nicely. On the way there, I even learned to read complex schematics and how to solder. Did I believed, that I could fit this into my challenge? No of course not!&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S603-w9---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1329811670487740418/pu/img/guN8xnUYQd_cmWqo.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YqTYULO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1018568074553851904/JultPTPi_normal.jpg" alt="Fabian Hinsenkamp profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fabian Hinsenkamp
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/hinsencamp"&gt;@hinsencamp&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Day 85 of &lt;a href="https://twitter.com/hashtag/100DaysOfHardware"&gt;#100DaysOfHardware&lt;/a&gt;, &lt;br&gt;&lt;br&gt;Hardware debugging done right! My soldered control board is starting to work just fine 🥳&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/Arduino"&gt;#Arduino&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/raspberrypi"&gt;#raspberrypi&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:39 PM - 20 Nov 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1329811686379941892" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1329811686379941892" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      4
      &lt;a href="https://twitter.com/intent/like?tweet_id=1329811686379941892" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      7
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;How to find your own passion project, that triggers your curiosity and keeps you moving?&lt;/p&gt;

&lt;p&gt;Here is a small overview of real world use cases for DIY electronics and hardware:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#computer-electronics" class="anchor"&gt;
  &lt;/a&gt;
  Computer Electronics
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;8-bit Computer&lt;/li&gt;
&lt;li&gt;Retro gaming&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#sound-music-production" class="anchor"&gt;
  &lt;/a&gt;
  Sound / music production
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;guitar paddels&lt;/li&gt;
&lt;li&gt;synthesizers&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#home-automation" class="anchor"&gt;
  &lt;/a&gt;
  Home automation
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Plant watering system&lt;/li&gt;
&lt;li&gt;Remote Light control&lt;/li&gt;
&lt;li&gt;Security system&lt;/li&gt;
&lt;li&gt;connect home appliances to the web (ioT)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#visual-art" class="anchor"&gt;
  &lt;/a&gt;
  Visual Art
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;LED cube&lt;/li&gt;
&lt;li&gt;LED walls&lt;/li&gt;
&lt;li&gt;Flipdot displays&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#vehiclesrobots" class="anchor"&gt;
  &lt;/a&gt;
  Vehicles/robots
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Drones&lt;/li&gt;
&lt;li&gt;self-diving (toy) cars&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#videofilm-making" class="anchor"&gt;
  &lt;/a&gt;
  Video/Film making
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Kamera Slider&lt;/li&gt;
&lt;li&gt;Turntable display&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To get a better idea about the different areas of application, you can use Youtube, Pinterest, Instagram or just plane google for your initial research. &lt;/p&gt;

&lt;p&gt;You will find all kinds of projects other makers create in these fields. Unfortunately, it can be hard to find a detailed list of components and resources for the projects on these platforms.&lt;/p&gt;

&lt;p&gt;As soon as you know which area you are interested in, it is time to check out some websites especially dedicated to makers. There, people share their projects in great detail often including a parts list.&lt;/p&gt;

&lt;p&gt;My favourite makes websites are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hackaday.io/"&gt;HackAday&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackster.io/"&gt;Hackster.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.instructables.com/circuits/"&gt;Instructables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.electromaker.io"&gt;Electromaker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also made the experience that you can easily approach creators on these platforms get some more details and open questions answered.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#summary" class="anchor"&gt;
  &lt;/a&gt;
  Summary &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;To conclude this guide, I believe the "100 days of x" challenge format is a great fit for getting started with electronics, Arduino and hardware projects in general. Personally, I had a great time, and learned more than I anticipated before I started.&lt;/p&gt;

&lt;p&gt;However, it's still a big challenge to find suitable resources so if you are on a tight schedule it will be challenging to learn, research theory &amp;amp; projects every day.&lt;/p&gt;

&lt;p&gt;To change this, I am building up 100DaysOfHardware.com as a learning hub, to allow everyone even with a tight schedule (max. 1h a day) to successfully complete the challenge!&lt;/p&gt;

&lt;p&gt;&lt;a href="http://eepurl.com/g9mmhP"&gt;Get notified about all upcoming bite-sized challenge guides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks to everyone from the community who supported, inspired and motivated me! &lt;/p&gt;

&lt;p&gt;I'd be happy if I could give back, so don't hesitate to reach out to me, when you any questions about the challenge or you need more support to get it going!&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="//twitter.com/hinsencamp"&gt;twitter.com/hinsencamp&lt;/a&gt;&lt;/p&gt;

</description>
      <category>challenge</category>
      <category>arduino</category>
      <category>electronics</category>
      <category>guide</category>
    </item>
    <item>
      <title>How to Design Almost Any Backend and Deploy It to AWS with No Code</title>
      <author>swyx</author>
      <pubDate>Fri, 18 Dec 2020 19:42:48 +0000</pubDate>
      <link>https://dev.to/swyx/how-to-design-almost-any-backend-and-deploy-it-to-aws-with-no-code-45a9</link>
      <guid>https://dev.to/swyx/how-to-design-almost-any-backend-and-deploy-it-to-aws-with-no-code-45a9</guid>
      <description>&lt;p&gt;In this post I'll show you how to design four different example apps - a SimpleNote clone, a Twitter clone, a Slack clone, and an E-commerce store. And we'll do it with the coolest new toy released at AWS re:Invent 2020.&lt;/p&gt;
&lt;h2 id="introducing-the-amplify-sandbox"&gt;Introducing the Amplify Sandbox&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://aws.amazon.com/blogs/aws/aws-amplify-admin-ui-helps-you-develop-app-backends-no-cloud-experience-required/"&gt;Amplify Admin UI&lt;/a&gt; is a new low-code interface for building app backends that doesn't require any AWS expertise. However, what many people may miss is that Amplify Admin also includes &lt;a href="https://sandbox.amplifyapp.com/"&gt;a wonderful new Sandbox&lt;/a&gt; which lets you get started without an AWS account. &lt;/p&gt;
&lt;p&gt;This Sandbox is a publicly sharable version of the Amplify Admin UI where you can create and prototype your data models without even logging in to an AWS account! &lt;/p&gt;
&lt;p&gt;Currently only &lt;a href="https://sandbox.amplifyapp.com/start#datastore"&gt;the Data sandbox&lt;/a&gt; is built out, but over time the other AWS Amplify categories will be made available as well. &lt;/p&gt;
&lt;p&gt;When you first enter a Sandbox, you are dropped into a visual builder where you can add your &lt;a href="https://docs.aws.amazon.com/appsync/latest/devguide/designing-your-schema.html"&gt;models, enums, and custom types&lt;/a&gt;. Mostly, you'll just be creating models. &lt;/p&gt;
&lt;p&gt;You can name models, add fields, and specify types (including whether they are optional or array fields), and even add one-to-one, one-to-many, or many-to-many relationships &lt;em&gt;between&lt;/em&gt; models.&lt;/p&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EHxLGPi4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.freecodecamp.org/news/content/images/2020/12/image-147.png" class="kg-image" alt=""&gt;&lt;p&gt;Further, it even lets you &lt;em&gt;share &lt;/em&gt;the data models you create! This means you don’t have to start from scratch each time you create a project, and &lt;strong&gt;you can share your data schemas like you share code gists&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id="our-four-sample-sandboxes"&gt;Our Four Sample Sandboxes&lt;/h2&gt;
&lt;p&gt;&lt;br&gt;I thought it would be a great idea to demonstrate how powerful this is by sketching out four example sandboxes that you can use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;notes&lt;/strong&gt; app (inspired by the free note-taking app &lt;a href="https://simplenote.com/"&gt;SimpleNote&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;chat&lt;/strong&gt; app (inspired by Slack)&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;social media &lt;/strong&gt;app (inspired by Twitter)&lt;/li&gt;
&lt;li&gt;An &lt;strong&gt;ecommerce&lt;/strong&gt; backend (inspired by every shopping experience)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="how-to-create-entity-relationship-diagrams"&gt;How to Create Entity Relationship Diagrams&lt;/h2&gt;
&lt;p&gt;Amplify Admin UI makes it easy to get going, but it is worth doing some planning before we start. &lt;/p&gt;
&lt;p&gt;The time-tested way to do this is to draw &lt;a href="https://www.youtube.com/watch?v=QpdhBUYk7Kk"&gt;entity relationship diagrams&lt;/a&gt;. We chose to &lt;a href="https://lucid.app/lucidchart/invitations/accept/563dc191-6613-44f5-aef0-24224ad5fbe1"&gt;use Lucidcharts for ours&lt;/a&gt;, but you can use any diagramming tool to do this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PDfbaQF9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/h7y34275luztd0fctvvj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PDfbaQF9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/h7y34275luztd0fctvvj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h2 id="the-notes-app"&gt;The Notes App&lt;/h2&gt;
&lt;p&gt;This is a minimal app that I personally use every day, so I like it for its simplicity. We have two models: Notes and Tags, and only one many-to-many relationship between them for easy querying. &lt;/p&gt;
&lt;p&gt;You could extend this by offering collaborative, role based editing, which is available once you deploy this model. You should also make use of the &lt;a href="https://docs.amplify.aws/lib/datastore/getting-started/q/platform/js#datastore-with-amplify"&gt;client-side DataStore libraries&lt;/a&gt; to make sure your notes work offline.&lt;br&gt;&lt;br&gt;You can see the Sandbox here: &lt;a href="https://sandbox.amplifyapp.com/schema-design/1c782f02-1fe7-4785-9a02-22a27cc96d0d/clone"&gt;&lt;/a&gt;&lt;a href="https://sandbox.amplifyapp.com/schema-design/1c782f02-1fe7-4785-9a02-22a27cc96d0d/clone"&gt;https://sandbox.amplifyapp.com/schema-design/1c782f02-1fe7-4785-9a02-22a27cc96d0d/clone&lt;/a&gt;. Note that we use a bidirectional &lt;strong&gt;many to many &lt;/strong&gt;relationship here between the models, as notes can have zero or more tags and vice versa.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rfWGEzJN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/auformx6karwwplydg77.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rfWGEzJN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/auformx6karwwplydg77.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h2 id="the-slack-clone"&gt;The Slack Clone&lt;/h2&gt;
&lt;p&gt;Many of us use chat apps for work, so we are familiar with this app use case from the user side. &lt;/p&gt;
&lt;p&gt;The new nuances here are that every Message belongs to a Channel and a User, and that each User can both create Channels and join them. So there is an interesting three way relationship between the three primary models.&lt;br&gt;&lt;br&gt;You can see the Sandbox here: &lt;a href="https://sandbox.amplifyapp.com/schema-design/5f863684-fd1e-41b4-bca1-36c2271e21a1/clone"&gt;&lt;/a&gt;&lt;a href="https://sandbox.amplifyapp.com/schema-design/5f863684-fd1e-41b4-bca1-36c2271e21a1/clone"&gt;https://sandbox.amplifyapp.com/schema-design/5f863684-fd1e-41b4-bca1-36c2271e21a1/clone&lt;/a&gt;. &lt;strong&gt;Channel&lt;/strong&gt; is the most complex model here – notice how we fully utilize all the relationship types available in the Sandbox:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Channels can have &lt;strong&gt;many&lt;/strong&gt; Users, and Users can join &lt;strong&gt;many&lt;/strong&gt; Channels&lt;/li&gt;
&lt;li&gt;Channels can only be created by &lt;strong&gt;one&lt;/strong&gt; User, and there is no requirement to keep track of what channels any particular user has created&lt;/li&gt;
&lt;li&gt;Channels can have &lt;strong&gt;many&lt;/strong&gt; Messages, but each Message can only belong to &lt;strong&gt;one&lt;/strong&gt; Channel&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kkXLiNyg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qjlv1vv2no8kr23vp178.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kkXLiNyg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qjlv1vv2no8kr23vp178.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h2 id="the-twitter-clone"&gt;The Twitter Clone&lt;/h2&gt;
&lt;p&gt;Social media is often one of the most complex data models to model. We implement the minimum viable social media app – a Tweet and a User model is all we offer. &lt;/p&gt;
&lt;p&gt;However the Tweet itself has a complex set of relationships. It has an author User, and a set of likes, replies, and quotes that need to be modeled. &lt;/p&gt;
&lt;p&gt;Other modifications you can consider for this app: offering other types of tweets, including polls, images, and videos, building in advertisements, and direct messages.&lt;br&gt;&lt;br&gt;You can see the Sandbox here: &lt;a href="https://sandbox.amplifyapp.com/schema-design/ad5b5b7e-f207-42d1-92b1-0ccef056a26b/clone"&gt;&lt;/a&gt;&lt;a href="https://sandbox.amplifyapp.com/schema-design/ad5b5b7e-f207-42d1-92b1-0ccef056a26b/clone"&gt;https://sandbox.amplifyapp.com/schema-design/ad5b5b7e-f207-42d1-92b1-0ccef056a26b/clone&lt;/a&gt;. Note that recursion is implemented here by modeling likes, replies, and quotes as an &lt;strong&gt;array &lt;/strong&gt;of the respective User and Tweet ID's.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JgCCBpzb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jhucoh235ji51lus9651.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JgCCBpzb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jhucoh235ji51lus9651.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h2 id="the-ecommerce-store"&gt;The Ecommerce Store&lt;/h2&gt;
&lt;p&gt;The stakes are higher when there is money involved. Keeping track of orders and ensuring a great customer experience is paramount. &lt;/p&gt;
&lt;p&gt;We model a typical ecommerce backend by ensuring that we have separate models for Suppliers, Products, Orders, and Customers. To get into the nuances of a typical ordering experience, we also include the ability to specify product quantities in a single order, as well as to apply coupons. &lt;/p&gt;
&lt;p&gt;Since there are infinitely many variations on the ecommerce experience, we can’t possibly model them all, but I hope that this serves as a good enough starting point. Share your own if you have twists on this concept!&lt;br&gt;&lt;br&gt;You can see the Sandbox here: &lt;a href="https://sandbox.amplifyapp.com/schema-design/aa0e7a61-aa72-4b27-b6db-ea8e2031f95e/clone"&gt;&lt;/a&gt;&lt;a href="https://sandbox.amplifyapp.com/schema-design/aa0e7a61-aa72-4b27-b6db-ea8e2031f95e/clone"&gt;https://sandbox.amplifyapp.com/schema-design/aa0e7a61-aa72-4b27-b6db-ea8e2031f95e/clone&lt;/a&gt;. Note the sheer complexity of this model is easily handled by the Sandbox's features. One Order can only have one Customer, but a Customer can have many Orders. &lt;/p&gt;
&lt;p&gt;When you set this up on the Customer model, the Sandbox is smart enough to automatically set up a corresponding customerID field as a "&lt;strong&gt;Relationship Source&lt;/strong&gt;" on the Order model. This will be very handy for GraphQL queries down the road.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EsB88Cvy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/q5iuc8ybnrl380qh4apw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EsB88Cvy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/q5iuc8ybnrl380qh4apw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h2 id="how-to-deploy-the-model-to-aws"&gt;How to Deploy the Model to AWS&lt;/h2&gt;
&lt;p&gt;Once you are done with your model, the Sandbox prompts you to test locally by downloading it with the &lt;a href="https://docs.amplify.aws/cli"&gt;Amplify CLI&lt;/a&gt;. However, if you just want to get it live on AWS, you can skip that and head straight to the "Deploy to AWS" stage:&lt;/p&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KSeNWKfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.freecodecamp.org/news/content/images/2020/12/image-142.png" class="kg-image" alt=""&gt;&lt;p&gt;Once you hit "Login to deploy to AWS", you're done! Imagine that – you've just created an actual backend data model &lt;strong&gt;without writing any code&lt;/strong&gt; and deployed it straight to AWS. 🤯&lt;/p&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L-WVOuDj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.freecodecamp.org/news/content/images/2020/12/image-143.png" class="kg-image" alt=""&gt;&lt;p&gt;From here you can set up further customization, including adding authentication, inviting users and assigning roles, adding authorization rules on each model, creating content with our WYSIWYG editor, and more. &lt;/p&gt;
&lt;p&gt;If you want to learn more, &lt;a href="https://welearncode.com/intro-amplify-admin-ui/"&gt;Ali Spittel did a great blogpost&lt;/a&gt; on how powerful the Amplify Admin UI becomes after you deploy it, whereas this article has been about the no-account-needed Sandbox environment &lt;em&gt;before&lt;/em&gt; deploying. &lt;/p&gt;
&lt;p&gt;Nader Dabit also wrote about &lt;a href="https://acloudguru.com/blog/engineering/10-exciting-features-of-the-new-amplify-admin-ui"&gt;10 other features you may be keen to try&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With the Amplify Sandbox, it is really easy to model and think through any app backend scenario, so hopefully these examples jog your creativity. If you have any requests or submissions, &lt;a href="https://twitter.com/swyx"&gt;please let me know&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>aws</category>
      <category>awsamplify</category>
      <category>backend</category>
    </item>
    <item>
      <title>Everything you need to Know about  Firebase 
</title>
      <author>Mughees Mb</author>
      <pubDate>Fri, 18 Dec 2020 18:48:56 +0000</pubDate>
      <link>https://dev.to/mugybro/integrating-firebase-with-react-part-1-51ma</link>
      <guid>https://dev.to/mugybro/integrating-firebase-with-react-part-1-51ma</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-firebase" class="anchor"&gt;
  &lt;/a&gt;
  What is Firebase?
&lt;/h1&gt;

&lt;p&gt;Firebase is essentially a Backend-as-a-Service (BaaS) mobile and web application development platform developed by Firebase, Inc in 2011 and then acquired by Google in 2014. It provides users with hosted backend services such as a real-time database, cloud storage, authentication, crash reporting, remote configuration, and hosting for static files.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As you know Full-Stack applications need a front-end and back-end Service and Using a Back-End  Service like Firebase you get all the benefits of a back-end without the complications of setting one up from scratch.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h1&gt;
  &lt;a href="#benefits-of-using-the-firebase-top-ones" class="anchor"&gt;
  &lt;/a&gt;
  Benefits of Using the Firebase (Top Ones)
&lt;/h1&gt;

&lt;p&gt;In many cases, we want a fully functioning application up and running in as little time as possible. With Firebase, you can dramatically cut development time.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#realtime-database" class="anchor"&gt;
  &lt;/a&gt;
  Realtime DataBase
&lt;/h4&gt;

&lt;p&gt;Cloud Firestore database updates all connected clients in realtime. This is excellent for many types of applications. The ability to get realtime updates makes applications a lot easier to implement.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#authentication" class="anchor"&gt;
  &lt;/a&gt;
  Authentication
&lt;/h4&gt;

&lt;p&gt;Firebase backend service offers a powerful authentication feature. It comes equipped with simple SDKs and easy to use libraries to integrate authentication feature with any mobile or web app.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#storage" class="anchor"&gt;
  &lt;/a&gt;
  Storage
&lt;/h4&gt;

&lt;p&gt;Firebase storage feature is powered by Google Cloud Storage and allows users to easily download media files and visual contents. This feature is also helpful in making use of user-generated content.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#security" class="anchor"&gt;
  &lt;/a&gt;
  Security
&lt;/h4&gt;

&lt;p&gt;Firebase ships with built in far-reaching security. When configured correctly your app will be an impenetrable fortress. Without Firebase security is extremely hard to configure correctly.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#hosting" class="anchor"&gt;
  &lt;/a&gt;
  Hosting
&lt;/h4&gt;

&lt;p&gt;The hosting feature of Firebase allows developers to update their contents in the Content Delivery Network (CDN) during production. Firebase offers full hosting support with a custom domain, Global CDN, and an automatically provided SSL Certificate.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#high-speed-caching" class="anchor"&gt;
  &lt;/a&gt;
  High Speed Caching
&lt;/h4&gt;

&lt;p&gt;How fast your site loads not only helps with SEO but creates a better user experience. When you deploy using Firebase hosting your app gets cached on solid state drives (SSD) throughout the world. This makes site loading time extremely fast.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#the-firebase-api" class="anchor"&gt;
  &lt;/a&gt;
  The Firebase API
&lt;/h1&gt;

&lt;p&gt;As a programmers, we communicate with the back-end using an application programming interface (API). Firebase is certainly no exception.&lt;br&gt;
Each method in the firebase object represents a different service. For example, by invoking the &lt;strong&gt;firebase.firestore()&lt;/strong&gt; method you can get access to Cloud Firestore. It’s a database that you can use to store and retrieve information. by invoking &lt;strong&gt;firebase.auth()&lt;/strong&gt; method you will have access to Authentication services. by invoking &lt;strong&gt;firebase.storage()&lt;/strong&gt;  user can store and manage media generated by web and mobile app users. &lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#firebase-services" class="anchor"&gt;
  &lt;/a&gt;
  Firebase Services
&lt;/h1&gt;

&lt;p&gt;These are the core services of Firebase. With them, you will be able to leverage Firebase to build fast, highly effective web applications.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cloud Firestore 

&lt;ul&gt;
&lt;li&gt;Realtime&lt;/li&gt;
&lt;li&gt;NoSQL&lt;/li&gt;
&lt;li&gt;Security&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Hosting

&lt;ul&gt;
&lt;li&gt;SSL for Every Site&lt;/li&gt;
&lt;li&gt;Cached on SSDs&lt;/li&gt;
&lt;li&gt;Deploy From CLI&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Authentication

&lt;ul&gt;
&lt;li&gt;Email and Password Authentication&lt;/li&gt;
&lt;li&gt;OAuth Authentication&lt;/li&gt;
&lt;li&gt;User Security&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Storage

&lt;ul&gt;
&lt;li&gt;Can Handle Large File Sizes&lt;/li&gt;
&lt;li&gt;File Security&lt;/li&gt;
&lt;li&gt;Any File Type&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#is-firebase-free-to-use" class="anchor"&gt;
  &lt;/a&gt;
  Is Firebase Free to use?
&lt;/h1&gt;

&lt;p&gt;Firebase has two pricing levels. &lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#-spark-plan-free" class="anchor"&gt;
  &lt;/a&gt;
  - Spark Plan (Free).
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#-blaze-plan-pay-as-you-go" class="anchor"&gt;
  &lt;/a&gt;
  – Blaze Plan (Pay as you go).
&lt;/h6&gt;

&lt;p&gt;The first one incorporates a limited Free tier, and it’s an excellent option for development and small applications. The second tier works on a pay as you grow model, and it’s ideal for production applications.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#in-spark-plan-firebase-provides-us-with-several-products-that-can-be-used-for-free-such-as" class="anchor"&gt;
  &lt;/a&gt;
  In Spark Plan Firebase provides us with several products that can be used for free such as:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Authentication&lt;/li&gt;
&lt;li&gt;A/B Testing&lt;/li&gt;
&lt;li&gt;Analytics&lt;/li&gt;
&lt;li&gt;Cloud Messaging (FCM)&lt;/li&gt;
&lt;li&gt;Crashlytics&lt;/li&gt;
&lt;li&gt;Performance Monitoring&lt;/li&gt;
&lt;li&gt;Remote Config&lt;/li&gt;
&lt;li&gt;Dynamic Links&lt;/li&gt;
&lt;li&gt;Firebase Invites&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#in-blaze-plan-it-provides-developers-with-a-wide-variety-of-paid-infrastructure-products-such-as" class="anchor"&gt;
  &lt;/a&gt;
  In Blaze Plan ,it provides developers with a wide variety of paid infrastructure products such as:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Real-time Database&lt;/li&gt;
&lt;li&gt;Phone Auth&lt;/li&gt;
&lt;li&gt;Firebase Storage&lt;/li&gt;
&lt;li&gt;Hosting&lt;/li&gt;
&lt;li&gt;Test Lab&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;There are so many services available that it can feel overwhelming, but trust me when I tell you that each service is easy to work with. Firebase documentation is pretty good as far as the documentation is concerned. I also use Firebase in all of my apps which is why I wanted to get the word out about how awesome it is.&lt;/p&gt;

</description>
      <category>firebase</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Adding notifications with React-Toastify</title>
      <author>CiaraMaria</author>
      <pubDate>Fri, 18 Dec 2020 17:52:27 +0000</pubDate>
      <link>https://dev.to/proiacm/adding-notifications-with-react-toastify-39np</link>
      <guid>https://dev.to/proiacm/adding-notifications-with-react-toastify-39np</guid>
      <description>&lt;p&gt;Yesterday I came across this npm while searching for different ways to display alerts in my React app. It's &lt;a href="https://www.npmjs.com/package/react-toastify"&gt;react-toastify&lt;/a&gt;! In their own words: &lt;br&gt;
"🎉 React-Toastify allows you to add notifications to your app with ease. No more nonsense!"&lt;/p&gt;

&lt;p&gt;That's no joke. Installation and integration was a breeze and the notifications are fun and customizable. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#getting-started" class="anchor"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h3&gt;

&lt;p&gt;For this walkthrough, I started up a react application with:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;create-react-app toastify-example&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;and installed Toastify by running: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install --save react-toastify&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#toastify-at-work" class="anchor"&gt;
  &lt;/a&gt;
  Toastify at work
&lt;/h3&gt;

&lt;p&gt;Make sure you add the imports at the top of your file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; import { ToastContainer, toast } from 'react-toastify';
 import 'react-toastify/dist/ReactToastify.css';
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Then simply add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; const notify = () =&amp;gt; toast("Here is my notification!");

    return (
      &amp;lt;div className="App"&amp;gt;
       &amp;lt;header className="App-header"&amp;gt;
        &amp;lt;button onClick={notify}&amp;gt;Click Me!&amp;lt;/button&amp;gt;
        &amp;lt;ToastContainer 
        position="top-center"
        autoClose={5000}
        hideProgressBar={false}
        newestOnTop={false}
        closeOnClick
        rtl={false}
        pauseOnFocusLoss
        draggable
        pauseOnHover
        /&amp;gt;
      &amp;lt;/header&amp;gt;
    &amp;lt;/div&amp;gt;
  );
 }
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The additional props are customizable and examples are available on the &lt;a href="https://fkhadra.github.io/react-toastify/introduction/"&gt;demo&lt;/a&gt; page. &lt;/p&gt;

&lt;p&gt;The product:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7HQSXe5L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/DufsBpi.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7HQSXe5L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/DufsBpi.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-usage-in-form-submission" class="anchor"&gt;
  &lt;/a&gt;
  Example usage in form submission
&lt;/h3&gt;

&lt;p&gt;I personally implemented this as confirmation for a contact form submission. Simply add toast into the submitHandler:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;submitHandler = (event) =&amp;gt; {
    event.preventDefault()
    event.currentTarget.reset();
    toast.success("Thank you for contacting us!");
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note: &lt;code&gt;toast.success&lt;/code&gt; in the example above is one of the presets for styling. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---lM-ImKH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/5gRwimC.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---lM-ImKH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/5gRwimC.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;React-Toastify is a neat and simple way to add notifications to your site. &lt;/p&gt;

&lt;p&gt;P.S. It's also mobile-friendly with swipe to close. 👌 &lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>5 Ways to Improve Communication on a Remote Team</title>
      <author>Ana Vela</author>
      <pubDate>Fri, 18 Dec 2020 17:45:52 +0000</pubDate>
      <link>https://dev.to/anaveecodes/5-ways-to-improve-communication-on-a-remote-team-2p2f</link>
      <guid>https://dev.to/anaveecodes/5-ways-to-improve-communication-on-a-remote-team-2p2f</guid>
      <description>&lt;p&gt;After working on a remote team for over 2 years, I've gained some insights about what it takes to communicate without being in an actual office together. My role at this startup ranged from web development to operations management where I was involved in a variety of projects. I've also collaborated remotely with other developers working on some code and even general support as we are improving our skills. &lt;/p&gt;

&lt;p&gt;In just about any project, focusing on creating shared documentation is at the heart of making this work well. After reflecting on these remote work experiences, I've noticed a few key components that have helped make communication smoother. These 5 tips are useful if you are working with a partner, a group of students working on a project, or a business setting.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-detailed-plan-with-specific-tasks" class="anchor"&gt;
  &lt;/a&gt;
  Create a Detailed Plan with Specific Tasks
&lt;/h2&gt;

&lt;p&gt;When working on a project together, there needs to be a clear roadmap as an overview of the project. Some questions to ask at the beginning are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What are the goals of this project?&lt;/li&gt;
&lt;li&gt;What is the scope and top priority features?&lt;/li&gt;
&lt;li&gt;What problems does this project solve?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once these elements have been established, then you can create specific tasks and who should be assigned to each one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#track-tasks-and-deadlines-efficiently" class="anchor"&gt;
  &lt;/a&gt;
  Track Tasks and Deadlines Efficiently
&lt;/h2&gt;

&lt;p&gt;Once specific tasks have been identified and assigned to team members, organize them in a way where they can be tracked. Using tools such as Asana, Trello, or Notion are good ways to accomplish this. Each task should be clearly outlined with details and who is assigned to each task. Keep deadlines realistic and revise them when needed. Make this information available to all team members to help avoid misunderstandings and in case a task needs to be assigned to someone else in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#schedule-regular-checkins-meetings" class="anchor"&gt;
  &lt;/a&gt;
  Schedule Regular Check-Ins Meetings
&lt;/h2&gt;

&lt;p&gt;Once these tasks have been established, set up regular meetings to check-in regarding progress made. These meetings should have an agenda and timeframe. Figure out a good meeting routine by establishing a set of questions such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What's working?&lt;/li&gt;
&lt;li&gt;Any roadblocks?&lt;/li&gt;
&lt;li&gt;Do you need help with anything?&lt;/li&gt;
&lt;li&gt;What are the next actionable tasks?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#take-meeting-notes-and-make-them-accessible-to-team-members" class="anchor"&gt;
  &lt;/a&gt;
  Take Meeting Notes and Make Them Accessible to Team Members
&lt;/h2&gt;

&lt;p&gt;Have a record of each meeting to keep track of any decisions made and what is expected for the next meeting.  Any team member can refer back to the notes at any time to get clarification. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keep-flexible-open-communication" class="anchor"&gt;
  &lt;/a&gt;
  Keep Flexible, Open Communication
&lt;/h2&gt;

&lt;p&gt;Think about ways to incorporate casual interactions between team members. Are there a few minutes before the start of a meeting to chat about fun topics or mention something new and exciting? You could also have a virtual happy hour once a month to have time to get to know each other better and build rapport.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts" class="anchor"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;Improving communication can take time. There are many tools that can help you stay organized to work at a steady pace to complete a project. In most of my remote work, I used Google Docs, Google Sheets, Trello, and Asana. I have recently discovered Notion which has become my favorite tool this year. Notion is powerful because you can manage tasks, notes, calendars, and so much more all in one workspace. I created a &lt;a href="https://www.notion.so/Project-Planning-and-Documentation-Template-7ce9a2a6927c495ba28790180b1cca3b"&gt;simple Notion template&lt;/a&gt; as an example of a shared document that can serve as a source of truth for a particular project. You can duplicate this template and customize it for your specific needs.  Let me know if you have any questions about the template or how to use Notion for your next project plan.&lt;/p&gt;

&lt;p&gt;Have any of these tips worked well for you before while working remotely with others? Are you also a fan of Notion? Add a comment to let me know.&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Photo by &lt;a href="https://unsplash.com/@comparefibre?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Compare Fibre&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>communication</category>
      <category>remotework</category>
      <category>career</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
