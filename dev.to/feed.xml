<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Haskell as an alternative to TypeScript</title>
      <author>digitallyinduced</author>
      <pubDate>Wed, 11 Aug 2021 11:20:33 +0000</pubDate>
      <link>https://dev.to/digitallyinduced/haskell-as-an-alternative-to-typescript-1091</link>
      <guid>https://dev.to/digitallyinduced/haskell-as-an-alternative-to-typescript-1091</guid>
      <description>&lt;p&gt;If you've been using TypeScript for your web development, you have understood the value that static typing brings to your productivity. However, TypeScript still has some issues in regards to type safety. This article is supposed to show these issues and help you see how another statically typed language - Haskell - is solving them. In the end, I hope that you will have learned something, and might be interested in continuing your journey into type-safe programming by trying out Haskell for your next project. If you choose to do so, I recommend using IHP, a productivity-focused web framework with which you can build full-stack web-apps (but APIs work just fine as well).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-antipattern-that-is-raw-any-endraw-"&gt;
  &lt;/a&gt;
  The anti-pattern that is &lt;code&gt;any&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;any&lt;/code&gt; type included in TypeScript can cause many issues, as it straight up disables typechecking for whatever it's used for. Once you use it, you might as well write plain JavaScript. But it might actually be worse than that: people might be highly confident in their refactoring or new code if they don't get any type errors. What they might not notice is that an &lt;code&gt;any&lt;/code&gt; somewhere else in the code where they didn't change anything is not throwing a type error, although it would if the correct type were used.&lt;/p&gt;

&lt;p&gt;So why would anyone use &lt;code&gt;any&lt;/code&gt;? I think there's a few different reasons:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;the correct type is not known to the developer at the time of writing,&lt;/li&gt;
&lt;li&gt;the correct type would be too complex, or&lt;/li&gt;
&lt;li&gt;it's implicitly used by TypeScript because it can't figure out the correct type by itself (this one can be disabled using the &lt;code&gt;noImplicitAny&lt;/code&gt; setting)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, if the correct type is not known by the developer, that could either mean it'd be useful for them to do some research into what it actually is, or, more likely, the type cannot be known at that point in time. In any case using TypeScript's &lt;code&gt;unknown&lt;/code&gt; type is much better, as that is a type-safe way of accepting any value, that also disallows any interaction with the value that might be problematic. This is the type to use in case of migrating an existing JS codebase to TypeScript, as it keeps the guards of TypeScript intact.&lt;/p&gt;

&lt;p&gt;If the correct type is too complex for the developer to figure out or to bother typing, and TypeScript isn't able to do so either, there's little you can do except use &lt;code&gt;unknown&lt;/code&gt; again, which definitely isn't ideal. The developer probably already understands things about the type, but using &lt;code&gt;unknown&lt;/code&gt; means that TypeScript will not, which will just lead to unnecessary checks.&lt;/p&gt;

&lt;p&gt;In case Haskell was used instead, the likelihood of Haskell figuring out the type by itself (this is called type inference btw) is much higher. This is because in Haskell &lt;code&gt;any&lt;/code&gt; isn't even an option, so it can't confuse the compiler. But also, ghc - the most widespread Haskell compiler - has years and years of effort behind it. And lastly, as long as you stick to basic Haskell, it is specifically designed to enable type inference.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#limitations-of-being-a-superset-of-javascript"&gt;
  &lt;/a&gt;
  Limitations of being a super-set of JavaScript
&lt;/h2&gt;

&lt;p&gt;TypeScript has the core design-goal of being a super-set of JavaScript. What that means is that any JavaScript code is valid TypeScript code as well (if the transpiler is configured to accept it), and you only need to add code to add more definitive types to the code. This is great if you need to convert an existing codebase from JavaScript to TypeScript, as it allows you to work in very small increments.&lt;/p&gt;

&lt;p&gt;The problem is that new projects built using TypeScript still suffer from many of the problems of JavaScript:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;difficult-to-understand behavior that doesn't behave like in other languages (for example the &lt;code&gt;this&lt;/code&gt; keyword)&lt;/li&gt;
&lt;li&gt;many things on &lt;a href="https://wtfjs.com/"&gt;https://wtfjs.com/&lt;/a&gt;
...and probably more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So while I applaud converting an existing JavaScript codebase to TypeScript, I would never start a new project in either if there's good alternatives, which there always are for backend development. Also, using the right tools the need for a lot of frontend code can be eliminated, while maintaining a highly-interactive webapp. &lt;a href="https://ihp.digitallyinduced.com/"&gt;Check out IHP for my favorite solution right now&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Being a super-set of JavaScript, many type definitions are a lot more complex to write than they would otherwise need to be as well. Check out the following examples, which are type definitions for equivalent Haskell and TypeScript code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// A function that takes a tuple of two values and returns the first:

// TypeScript
type first = &amp;lt;A, B&amp;gt; ([a, b]: [A, B]) =&amp;gt; A

// Haskell
first :: (a, b) -&amp;gt; a
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// a map function for lists/arrays

// TypeScript
type map = &amp;lt;A, B&amp;gt; ((a: A) =&amp;gt; B, list: A[]) =&amp;gt; B[]

// Haskell
map :: (a -&amp;gt; b) -&amp;gt; [a] -&amp;gt; [b]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#typescript-cant-type-everything"&gt;
  &lt;/a&gt;
  TypeScript can't type everything
&lt;/h2&gt;

&lt;p&gt;If you're using TypeScript you see the advantages of having static typing available, so we don't need to go over them. As such, it should bother you whenever you cannot actually use static types to encode useful information. Here are a few cases in which TypeScript cannot actually fulfill its promise of type-safety, and the way that Haskell solves it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sideeffects"&gt;
  &lt;/a&gt;
  Side-Effects
&lt;/h3&gt;

&lt;p&gt;If you've been following recent trends in software development, especially in the JavaScript world, you know that functional programming principles are becoming more and more popular. React is built on them! One of the things people are advocating for are "pure functions": functions that, given the same arguments, always return the same result and that don't have side-effects. What makes these functions so great is that they are very easy to reason about, and there are various techniques for performance optimization that are much easier using them, if not impossible without them.&lt;/p&gt;

&lt;p&gt;When coding in TypeScript, figuring out whether or not a function is pure requires you to read its source code and figure out how it works, which might lead to other functions that you have to do the same thing for. This gets tedious and could easily be avoided if the information of function purity was included in the function's type.&lt;/p&gt;

&lt;p&gt;In Haskell, this is done by making every function pure by-default. Whenever you need to have a side-effect in a function, you need to declare this on the type-level. Not doing so is a compiler error.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#failures"&gt;
  &lt;/a&gt;
  Failures
&lt;/h3&gt;

&lt;p&gt;As long as everything works as expected, TypeScript works just fine. However, when something goes wrong, you will likely have to interact with an error that gives you more information. Before you can even do so though, you need to be aware that an error can occur - and this is one of the shortcomings of TypeScript. It is impossible to declare on the type-level that a function might throw an error. This means you still need rigorous testing to figure this out, and even then you might run into unhandled errors in production due to not having tested thoroughly enough.&lt;/p&gt;

&lt;p&gt;In Haskell it is most common to force handling errors by making the return type include the information of whether or not the function succeeded or not. Depending on the actual function, you might get no, some, or a lot of information in case of a failure, but you can be sure that you are handling these cases. The two most common ways of representing the option for failure are the &lt;code&gt;Maybe&lt;/code&gt; and &lt;code&gt;Either&lt;/code&gt; types.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Maybe&lt;/code&gt; type can represent success and failure by containing the success value in the success case, or &lt;code&gt;Nothing&lt;/code&gt; in the case of a failure. This is also basically Haskell's way of handling &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt;, which prevents from using these values in a way that they don't support, which might cause issues.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Either&lt;/code&gt; type works in a very similar way: in the case of a success it simply contains the value that the function would return anyways. But in case of a failure it contains some other value. The type of this is clearly defined, which means that there's no ambiguity in how to handle it.&lt;/p&gt;

&lt;p&gt;What's best about these techniques is that it does not only &lt;em&gt;allow&lt;/em&gt; you to handle the error case in a type-safe fashion, it &lt;em&gt;forces&lt;/em&gt; you to handle error cases where they might occur. If the function doesn't force you to handle the error case, no error can occur.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;One place where typing the failure state should clearly be possible are promises, however TypeScript has no default way of doing this, which means that in case you run into a failure in your asynchronous code, TypeScript is not going to help you in figuring out the value you got in place of the success value.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;TypeScript is a great way to improve an existing JavaScript codebase, and to bring a bit more productivity and safety to your frontend code. However, the language has issues, some of which are so ingrained in the language itself that they are not going to be solved with time. So whenever you can, try opting for a language that has less design issues at its core, such as Haskell, and avoid writing JavaScript/TypeScript wherever possible.&lt;/p&gt;

&lt;p&gt;To allow you to do this, we at digitally induced have written IHP - an opinionated full-stack web framework based on Haskell, with a focus on developer experience and productivity, without sacrificing user experience. To try it out for your next full-stack project or backend, &lt;a href="https://ihp.digitallyinduced.com/Guide/installation.html"&gt;get started using the Guide&lt;/a&gt; and join our &lt;a href="https://ihp.digitallyinduced.com/community/"&gt;community forum&lt;/a&gt; or &lt;a href="https://ihp.digitallyinduced.com/Slack"&gt;active slack workspace&lt;/a&gt; to get any support you might need. We try to help wherever we can.&lt;/p&gt;

&lt;p&gt;Do you have any thoughts on TypeScript that you want to share? Did I miss anything? I'd love to hear your opinions and thoughts!&lt;/p&gt;

</description>
      <category>haskell</category>
      <category>typescript</category>
      <category>functional</category>
      <category>ihp</category>
    </item>
    <item>
      <title>10 Top Cryptocurrency Exchange Development Company In the USA</title>
      <author>milad</author>
      <pubDate>Wed, 11 Aug 2021 11:03:09 +0000</pubDate>
      <link>https://dev.to/milad75091361/10-top-cryptocurrency-exchange-development-company-in-the-usa-5851</link>
      <guid>https://dev.to/milad75091361/10-top-cryptocurrency-exchange-development-company-in-the-usa-5851</guid>
      <description>&lt;h2&gt;
  &lt;a href="#cryptocurrency-exchange-development-in-the-usa"&gt;
  &lt;/a&gt;
  Cryptocurrency Exchange Development in the USA
&lt;/h2&gt;

&lt;p&gt;Although cryptocurrency exchange is a new industry, more and more people are getting involved with this market. Today, with the growing popularity of digital currencies among users around the world and also the increasing use of digital currencies for various purposes, many users around the world are looking for suitable and reputable platforms for buying, selling, and exchanging cryptocurrencies.&lt;br&gt;
People around the world are now using digital currencies for a variety of purposes, such as buying and selling goods, making overseas payments, or gaining cryptocurrency profits from fluctuations and a variety of revenue-generating methods. This issue has multiplied the importance of designing a digital and online currency exchange site.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-advantages-of-developing-a-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  The advantages of developing a cryptocurrency exchange
&lt;/h2&gt;

&lt;p&gt;There are many other benefits in crypto exchange and that’s why it is growing day by day. So as more people get interested in this market the demand for exchange platforms increase. Therefore, as a business owner, you have to see the factors and come to a conclusion that developing a digital currency exchange site is an important step to expand your business. &lt;a href="https://radindev.com/cryptocurrency-exchange-development-in-usa/"&gt;cryptocurrency exchange website development in USA&lt;/a&gt; can promote brands and organizations.&lt;br&gt;
The fact that the cryptocurrency market is usually available for trading 24/7 because there is no centralized monitor of the market is one of the reasons that make this industry grow faster. The cryptocurrency transactions take place directly between individuals and it helps traders to trade with other people all over the globe. This gives them the opportunity of trading with a wide range of people and traders.&lt;br&gt;
The factor that measures the speed and Ease of converting a cryptocurrency into cash without impacting the market price is called liquidity. Liquidity is an important factor because it brings faster transactions (actually it reduces the time of the transactions), better prices, and accuracy for technical analysis.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#methods-of-developing-a-crypto-exchange-website"&gt;
  &lt;/a&gt;
  Methods of developing a crypto exchange website
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cueYolnT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/enb27afvsmafklk8i1ml.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cueYolnT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/enb27afvsmafklk8i1ml.jpg" alt="developing a crypto exchange website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#develop-from-scratch"&gt;
  &lt;/a&gt;
  Develop from scratch
&lt;/h3&gt;

&lt;p&gt;If you want to develop your cryptocurrency exchange with this method, you will need an enormous amount of money. For developing a website from scratch you have to spend a lot of time gathering a professional team together. This method needs a lot of time, energy, and money. When you build a website from scratch, you are risking a lot. Because you are doing something new and doing something that is completely new is always risky and it's difficult to avoid all the mistakes, bugs and the delay in the delivery because the obstacles and the problem that may happen during the process is not obvious. So we conclude that this method is time-consuming and needs a lot of money. But it can be useful in certain cases that you have a clear vision of how to develop the website and enough found to support the financial issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#white-label-crypto-exchange"&gt;
  &lt;/a&gt;
  White label crypto exchange
&lt;/h3&gt;

&lt;p&gt;In the field of developing a cryptocurrency website, one of the most terms that you hear is White label solutions or white label exchange platform. What is a white label exchange platform? And how does it work?&lt;br&gt;
white label is a premade platform and ready-to-use solution that enables you to promote your brand or develop your platform the way you want and you think it’s more effective in the market. In this method, the risks are very low because the solutions are tested so you don’t need to worry about the security problems or bugs that prevent the platform to work properly. You don’t need a team for developing a white label exchange and this means it costs less. The white label gives you the opportunity to develop our platform so fast and enter the business market faster. Using this method will only take a few weeks from the moment of the purchase to launch a website that is ready to use. Different companies provide white label exchange.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#list-of-the-10-best-crypto-exchange-development-companies-in-the-usa"&gt;
  &lt;/a&gt;
  List of the 10 best Crypto Exchange Development Companies in the USA:
&lt;/h2&gt;

&lt;p&gt;Finding a reliable cryptocurrency exchange development company is a time-consuming process.&lt;br&gt;
Before choosing a crypto exchange company to develop your exchange platform, pay attention to the following features of that website:&lt;br&gt;
• Number of their employees&lt;br&gt;
• Contact details of the company&lt;br&gt;
• Successful portfolio&lt;br&gt;
• Client feedback and review&lt;br&gt;
• Experience in this field&lt;/p&gt;

&lt;p&gt;Here is a list of 10 top Crypto Exchange Development companies in Singapore to ease up the searching process for you. Check out the list below and choose your desired crypto exchange developer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1blockchainappsdeveloper"&gt;
  &lt;/a&gt;
  1.BLOCKCHAINAPPSDEVELOPER
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kg8GmqMT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k7cy7q6smmo13krn2xrb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kg8GmqMT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k7cy7q6smmo13krn2xrb.png" alt="blockchain apps developer"&gt;&lt;/a&gt;&lt;br&gt;
This company is working since 2009 and, now it has become one of the greatest blockchain development companies. They provide white label solutions to start-ups and different enterprises. Blockchain app developer helps you to reshape your business into a successful organization with their dedicated professional team that provides you the best solutions and services.&lt;br&gt;
The blockchain app developer provides:&lt;br&gt;
• NFT development services&lt;br&gt;
• Blockchain for decentralized finance&lt;br&gt;
• Blockchain smart contract development&lt;br&gt;
• Enterprise blockchain solutions&lt;br&gt;
• Decentralized exchange software development&lt;br&gt;
• blockchain HYIP software development&lt;br&gt;
• Blockchain MLM software development&lt;br&gt;
• Cryptocurrency exchange software development&lt;br&gt;
• DAPP development&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2radindev-radindev"&gt;
  &lt;/a&gt;
  2.Radindev radindev
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EzFhIqM7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7115219d0a4zymv715wx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EzFhIqM7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7115219d0a4zymv715wx.png" alt="RadinDev Cryptocurrency exchange development company"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Radindev provides full-stack Blockchain Development Services and solutions to startups and enterprises to assist them improve and grow their business. As a blockchain development company they provide robust and high quality services for any kinds of businesses that want to enter the cryptocurrency community. They have valuable experience in developing an effective blockchain solutions for various businesses. They have a team of experts in the field of blockchain which empowers them to develop secure blockchain solutions for different organization that want to launch their crypto exchange development website.&lt;br&gt;
This company has a golden portfolio in the following field:&lt;/p&gt;

&lt;p&gt;• &lt;a href="https://radindev.com/cryptocurrency-exchange-development/"&gt;Cryptocurrency exchange website Development&lt;/a&gt;&lt;br&gt;
• P2P Cryptocurrency Exchange software&lt;br&gt;
• White label exchange development&lt;br&gt;
• Web development&lt;br&gt;
• Mobile app development&lt;br&gt;
• MLM Software Development&lt;br&gt;
• Blockchain solution provider&lt;br&gt;
• Trust wallet clone app development&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3antiersolution"&gt;
  &lt;/a&gt;
  3.Antiersolution
&lt;/h3&gt;

&lt;p&gt;Antiersolution is a blockchain development company that provides the crypto exchange services such as wallet development, coin development, p2p platform development, banking solutions, and many more. They have a team that supports you in every step of the blockchain development and they provide you 24/7 support. Through the search among their customer feedback, we understood that antiersolution is a company that they have a high speed of delivery and they deliver services and products with high quality to their client and yes this company was recommended by many of their clients. Because their focus is completely on blockchain development they have great experience in this field so they are successful in making their clients pleased with their services.&lt;br&gt;
The blockchain services they provide are:&lt;br&gt;
• White label exchange development&lt;br&gt;
• White label wallet development&lt;br&gt;
• Security token offering&lt;br&gt;
• Peer to peer platform development&lt;br&gt;
• Stable coin development&lt;br&gt;
• Blockchain consulting&lt;br&gt;
• Blockcahin based MLM software development&lt;br&gt;
• Coin development&lt;br&gt;
• P2p exchange development&lt;br&gt;
• Binance-like exchange development&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8u35UAp8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2334eoyi8iipk9rhkmrb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8u35UAp8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2334eoyi8iipk9rhkmrb.png" alt="antier review feedback of crypto exchange projects"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4openexcel"&gt;
  &lt;/a&gt;
  4.openexcel
&lt;/h3&gt;

&lt;p&gt;With the help and the support of the openexcel team, businesses and startups can scale up and improve faster and go to the market quickly. This country is a leading company in the field of developing reliable software and mobile app famous for providing innovative software solutions. They have 2000 customized software solutions in their resume.&lt;br&gt;
Openexcel services include:&lt;br&gt;
• Custom software development&lt;br&gt;
• Mobile application development&lt;br&gt;
• Product engineering&lt;br&gt;
• User experience research &amp;amp; design&lt;br&gt;
• Web applications development&lt;br&gt;
• QA &amp;amp; Testing&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5bitdeal"&gt;
  &lt;/a&gt;
  5.bitdeal
&lt;/h3&gt;

&lt;p&gt;Bitdeal is one of the top cryptocurrency exchange and blockchain development companies. This company tries to reduce the risks of trading in bitcoin and support new digital currencies startups by offering reliable and hassle-free cryptocurrency exchange software. The various services that they provide are listed below:&lt;/p&gt;

&lt;p&gt;• Blockchain Development Services&lt;br&gt;
• P2P Exchange Development&lt;br&gt;
• Initial Coin Offering Services&lt;br&gt;
• Smart Contract Development Sevices&lt;br&gt;
• Cryptocurrency &amp;amp; Altcoin Development Services&lt;br&gt;
• ICO Marketing &amp;amp; Consulting Services&lt;br&gt;
• Security Token Offering Services&lt;br&gt;
• Dapps Development Services&lt;br&gt;
• Cryptocurrency Wallet Development&lt;br&gt;
• EthereumToken Development Services&lt;br&gt;
• Crypto Trading Bot Development&lt;br&gt;
• DeFi Development Services&lt;br&gt;
bitdeal client feedback&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ll6yWJq_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x5rnl7lvfwg6ak7ufcyg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ll6yWJq_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x5rnl7lvfwg6ak7ufcyg.png" alt="bitdeal review feedback of crypto exchange projects"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#64irelabs"&gt;
  &lt;/a&gt;
  6.4irelabs
&lt;/h3&gt;

&lt;p&gt;4IRELABS has gathered a team of professionals together in order to develop better software and bolder financial platforms that will help your business to stands out among the competitors.&lt;br&gt;
According to the feedback of their long-term client, they are so good at implementing changes at high speed, because in startups the changes may happen that they change their mind about some idea and it may need to be changed, this company has the ability to implement the changes adequately with the suitable time.&lt;/p&gt;

&lt;p&gt;• Ideas validation&lt;br&gt;
• DApp development&lt;br&gt;
• Assets tokenization&lt;br&gt;
• Financial software development&lt;br&gt;
• Custom development on popular blockchains&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7solulab"&gt;
  &lt;/a&gt;
  7.solulab
&lt;/h3&gt;

&lt;p&gt;Solulab is on the list of top blockchain development companies in the USA. They have an experienced engineering team to build blockchain platforms and help businesses to improve and grow. They offer blockchain consultation and offer blockchain education.&lt;br&gt;
Based on the comments received from their client they are so satisfied with the services and products that they provide the features that they mentioned were that they have good communication with their clients they give you reports and the updates of the project frequently.&lt;/p&gt;

&lt;p&gt;Their expertise:&lt;br&gt;
• Blockchain development&lt;br&gt;
• Custom software solutions&lt;br&gt;
• Internet-of-Things&lt;br&gt;
• Machine learning&lt;br&gt;
• Data science&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8cubix"&gt;
  &lt;/a&gt;
  8.cubix
&lt;/h3&gt;

&lt;p&gt;Cubix is a leading company in the field of mobile app and web development this company provides a wide range of technology services. They are ready to build and consult their clients with thriving solutions for their businesses to assist them in designing, developing, and enter the market in the best way possible. Cubix offers 24/7 customer support for their client and ensures them that they are always ready to support them and solve their problems. The goal of this company is their customer satisfaction and by setting this goal they have achieved the best rank in different websites and they have gained a satisfied customer that is growing.&lt;/p&gt;

&lt;p&gt;Cubix works in the field of :&lt;br&gt;
• Business Intelligence&lt;br&gt;
• Mobile development&lt;br&gt;
• Game development&lt;br&gt;
• Artificial intelligence&lt;br&gt;
• Augmented reality&lt;br&gt;
• Enterprise portal&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-techno-loader"&gt;
  &lt;/a&gt;
  9. Techno loader
&lt;/h3&gt;

&lt;p&gt;Technoloader ensures the security and efficiency of the blockChain and try to make it suitable for the industries that want to use it.&lt;br&gt;
Techno loader is a leading blockchain development company which provides various services such as:&lt;br&gt;
• blockchain development&lt;br&gt;
• supply chain development&lt;br&gt;
• crypto exchange development&lt;br&gt;
• Custom Blockchain Development&lt;br&gt;
• dApps Development&lt;br&gt;
• Smart Contract Development&lt;br&gt;
• Decentralized Exchange Development&lt;br&gt;
• Wallet Development&lt;br&gt;
• Website Design&lt;br&gt;
Based on their client reviews they are so updated when it comes to technology. They have recommended this company to others for developing blockchain websites and it shows that they are good at it because they could satisfy their clients.&lt;br&gt;
client feedback&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LSs5rx9U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u2qz6zrlcabbzzk7zaly.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LSs5rx9U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u2qz6zrlcabbzzk7zaly.png" alt="techno loader review feedback of crypto exchange projects"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-zab-technologies"&gt;
  &lt;/a&gt;
  10. Zab technologies
&lt;/h3&gt;

&lt;p&gt;Zab technologies is a secure and reliable blockchain development company that has more than 40 blockchin engineers that their main focus is on creating blockchain solutions for different companies and startups.&lt;/p&gt;

&lt;p&gt;Their blockchain services are:&lt;br&gt;
• Private Blockchain Development&lt;br&gt;
• Crypto payment gateway development&lt;br&gt;
• Cryptocurrency Exchange Development&lt;br&gt;
• Smart ContractsDevelopment&lt;br&gt;
• Wallet Development&lt;br&gt;
• ICO (Initial Coin Offering) Development&lt;br&gt;
• Security Token Offering&lt;/p&gt;

&lt;p&gt;Zab technologies is a great company to develop your cryptocurrency exchange platform because when your project is in the hand of experts you know that it is in the hand of the right person so you wait for the result with a peace of mind and more confidentially .&lt;br&gt;
This company offers customized solutions that fit to the demands of each business because they provide exclusive solutions for various clients based on the clients’ requirements so they can adapt to any new changes in the platforms with high speed.&lt;br&gt;
customer focus&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9RUlAMoh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7lmx3sunk4sd6by2zuve.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9RUlAMoh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7lmx3sunk4sd6by2zuve.png" alt="the customer focus of each company"&gt;&lt;/a&gt;&lt;br&gt;
Table 1.The customer focus of each company&lt;/p&gt;

&lt;p&gt;The steps of launching an online crypto exchange website&lt;br&gt;
for whatever reason, Individuals or companies that intend to set up an online cryptocurrency exchange platform may not be able to set up this facility on their own and without the help of other platforms. To meet this need, they can refer to platforms that provide these kinds of services and use their professional team, experience and skills In addition, they save the most of their time and energy.&lt;br&gt;
For this action you need to go through some steps. These steps may vary for each company but in general they are like the steps that are mentioned in the following:&lt;/p&gt;

&lt;p&gt;First of all you have to know the exact amount of your budget you want to spend on developing a cryptocurrency exchange software.&lt;br&gt;
Think of the features and options that you want to implement in your crypto exchange website.&lt;br&gt;
Decide about the method that you want to develop your crypto exchange website.&lt;br&gt;
Finding a suitable and reliable company that provides the services that you need.&lt;br&gt;
After you have done the previous steps now it’s time to go through the packages that your chosen company provides. The cryptocurrency exchange development companies usually present various demoes of the platforms they have developed or can develop, you can check their demoes and read about their details.&lt;br&gt;
Also you can ask them to add clone scripts of popular and successful websites in the field of cryptocurrency to your platform.&lt;br&gt;
Now its time to order your desired platform. and complete your order&lt;br&gt;
After completing your order it’s time to communicate with the experts and their customer support team to run the project with each other.&lt;br&gt;
And in the end you they have to provide you crypto exchange website based on your requirements and the Contract you have made together.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>crypto</category>
      <category>cryptocurrnecy</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Which Devices/Hardware you need as a Software Developer (by role)</title>
      <author>JoelBonetR</author>
      <pubDate>Wed, 11 Aug 2021 10:49:35 +0000</pubDate>
      <link>https://dev.to/joelbonetr/which-devices-hardware-you-need-as-a-software-developer-3k49</link>
      <guid>https://dev.to/joelbonetr/which-devices-hardware-you-need-as-a-software-developer-3k49</guid>
      <description>&lt;p&gt;Once you start your career as a web dev you'll need to manage different parts of the project development life-cycle or related stuff, then people tend to think that having a computer is enough, well... it may be but probably not, and even it's the case, you may need specific hardware to work efficiently.&lt;/p&gt;

&lt;p&gt;Let's group the recommended hardware by roles in the software development industry.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;index&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#general"&gt;General Recommendations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#frontend"&gt;Front-End&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#backend"&gt;Back-End&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fullstack"&gt;Full-stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ai"&gt;AI/DL/NN/ML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mobile"&gt;mobile/tablet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data"&gt;Big Data/Data analytics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#footnotes"&gt;Footnotes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2 id="general"&gt;General recommendations&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;256Gb SSD&lt;/strong&gt; should suffice for development, depending on your career path, 500Gb SSD would be better&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;8gb RAM minimum, 16b Recommended&lt;/strong&gt; (some languages and IDEs consume more RAM than others in execution time, this is a general recommendation that most big companies follow)&lt;/li&gt;
&lt;li&gt;A 14" fullHD &lt;strong&gt;screen&lt;/strong&gt; for a laptop would suffice while in desktop I'll recommend 24/27" quad-HD (2560 x 1440) or 4K UHD so you can get a bigger workspace. Ultra-wide monitors are also good for some people, I personally prefer 2 different screens as I use a 27" main one plus a 24" vertical secondary monitor but this is only my opinion and likenesses, you'll need to find yours.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CPU&lt;/strong&gt; - This is probably the most important thing, specially for a laptop. Any mid-tier CPU should suffice for some jobs while a high/enthusiast would be better for other jobs, just make sure, specially if you go for a laptop that you don't get a multimedia CPU (intel or AMD with model names ending in *U* such i5-8650U or Ryzen 5 3500U, for example) as those CPUs are not meant to deal with high CPU demanding tasks they will slow your entire development process, specially if you use a heavy IDE or need to have some different software pieces running and indexing files in your computer such Git, Git GUI etc&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;GPU&lt;/strong&gt; - you can work with a multimedia cheap one unless you need the GPU to execute tasks such GPU hardware acceleration or AI training.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="frontend"&gt;Front-end&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--195WLy23--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.acceseo.com/wp-content/uploads/2021/01/front-end-developer.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--195WLy23--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.acceseo.com/wp-content/uploads/2021/01/front-end-developer.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You'll need to check eventually that your code is working on each current version -at least- of the major browsers, taking in mind both desktop and mobile versions.&lt;/p&gt;

&lt;p&gt;This means you need to be able to test your UI in Chrome, Safari, Firefox and Edge as well as Chrome mobile, Firefox, Safari on iOS, Chrome for Android, Firefox for Android.&lt;/p&gt;

&lt;p&gt;Taking into account that all browsers on iOS are built-in at the top of iOS Safari it's a bad idea to get an iPhone unless you can use a good Android VM on your desktop such Bluestacks and even that, the experience could not be the same as it lacks system devices such mic, camera, gyroscope and so on.&lt;/p&gt;

&lt;p&gt;You can of course, use a single Apple device such a Macbook Pro or an iMac to test your UI using all of those browsers but most of time a macbook pro is expensive for most budgets and it's resources are limited while apple does not let you upgrade them (RAM and SSD are soldered into the motherboard and you can't change the CPU as well).&lt;/p&gt;

&lt;p&gt;Thus you can get a nice windows/linux laptop or desktop and pick an iPhone as your main phone or keep you Android and get an iPad (the cheapest you can get such iPad 32Gb or iPad mini 64Gb) as alternatives.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Options Recap:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mac with Android emulator&lt;/li&gt;
  &lt;li&gt;Mac + Android smartphone&lt;/li&gt;
  &lt;li&gt;Windows + iPhone&lt;/li&gt;
  &lt;li&gt;Windows + Android + iPad&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The hardware recommendations for front-end would fit into the general recommendations according to CPU (R5, i5 or better), 16Gb RAM (8 minimum), 256Gb SSD or better and you'll need as much screen available as possible, specially when using techs such HMR or WYSIWYG so you can code and see the changes at the same time, then 2 screens, a single larger ultra-wide (34" or better) or laptop screen + another screen would be recommended.&lt;/p&gt;




&lt;h2 id="backend"&gt;Back-end&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vjKawtMz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codecondo.com/wp-content/uploads/2017/09/back-end-developer.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vjKawtMz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codecondo.com/wp-content/uploads/2017/09/back-end-developer.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is simpler than the front-end, just make sure you have a good CPU for intensive and/or high CPU demanding tasks, avoid intel or AMD with model names ending in &lt;em&gt;U&lt;/em&gt; such i5-8650U or Ryzen 5 3500U, better pick a high or enthusiast CPU such Ryzen (4800H, 4950H, 5800X, 5900X) or intel (1185G7, 1165G7, 11700F, 11900F).&lt;/p&gt;

&lt;p&gt;Same general recommendations on RAM, SSD, screen and so on.&lt;/p&gt;




&lt;h2 id="fullstack"&gt;Full-Sstack&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fl7vtfy_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media.bitdegree.org/storage/media/images/2018/11/What-Is-A-Full-Stack-Developer-and-Everything-You-Need-to-Know-to-Start.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fl7vtfy_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media.bitdegree.org/storage/media/images/2018/11/What-Is-A-Full-Stack-Developer-and-Everything-You-Need-to-Know-to-Start.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well, it's just a mix of the two blocks above, use the same recommendations as Front-End but try to get a better CPU (R7, i7 or better) for the back end part.&lt;/p&gt;




&lt;h2 id="ai"&gt;AI/DL/NN/ML&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jS0bNsbg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://fiverr-res.cloudinary.com/images/q_auto%2Cf_auto/gigs/124573900/original/e74c7332a63a737eb8f0445bedd0f1b8fb8c1a5b/be-your-developer-designer-in-any-field-you-desire.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jS0bNsbg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://fiverr-res.cloudinary.com/images/q_auto%2Cf_auto/gigs/124573900/original/e74c7332a63a737eb8f0445bedd0f1b8fb8c1a5b/be-your-developer-designer-in-any-field-you-desire.jpg"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;ul&gt;

  &lt;li&gt;&lt;small&gt;AI: Artificial Intelligence&lt;/small&gt;&lt;/li&gt;

  &lt;li&gt;&lt;small&gt;DL: Deep Learning&lt;/small&gt;&lt;/li&gt;

  &lt;li&gt;&lt;small&gt;NN: Neural Network&lt;/small&gt;&lt;/li&gt;

  &lt;/ul&gt;

&lt;blockquote&gt;&lt;small&gt;AI is an umbrella discipline that covers everything related to making machines smarter. ML refers to an AI system that can self-learn based on the algorithm. Systems that get smarter and smarter over time without human intervention is ML. Deep Learning (DL) is a machine learning (ML) applied to large data sets. While a Machine Learning model makes decisions according to what it has learned from the data, a NN (Neural Network) arranges algorithms in a fashion that it can make accurate decisions by itself. Thus, although Machine Learning models can learn from data, in the initial stages, they may require some human intervention.
&lt;/small&gt;&lt;/blockquote&gt;

Same recommendations than back-end plus a good Nvidia GPU to train your AIs, the better the GPU, the faster the training, if you can afford it, an RTX 3090 would work nice, other options are Titan RTX or Titan V for example. Of course you can use a 3080 for it, even a 3070 or 3060 but each step to a lower stair that you take, it will increase substantially the time it will take to run through big model sets.

&lt;blockquote&gt;
&lt;strong&gt;!important note&lt;/strong&gt; the "ti" versions are meant for gaming, does not implicitly means it will work better for your AI training process, specially because the amount of cores and the bandwidth is usually the same, check benchmarks to know if the boost they added to the ti version can help you or not for this tasks.
&lt;/blockquote&gt;

&lt;p&gt;It depends on your current situation, if you start learning about it but don't plan to work on it professionally -you are doing it just for hobby- you can use any Nvidia RTX (2000 series or better recommended) or AMD card (Vega or 5000 series or better) for it. &lt;/p&gt;

&lt;p&gt;Just check what you want to learn as nvidia has Tensor cores that work native on different stacks while AMD has ROCm as intermediate platform to deal with this stacks.&lt;/p&gt;




&lt;h2 id="mobile"&gt;Mobile/tablet&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xRT2dh5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://martinmitrevski.files.wordpress.com/2020/09/ios-vs-android-users.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xRT2dh5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://martinmitrevski.files.wordpress.com/2020/09/ios-vs-android-users.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is pretty straightforward, &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;iOS: &lt;/strong&gt;&lt;br&gt;
if you plan to develop for iPad and iPhone, you need a Mac, an iPad and/or an iOS. I heard that with the current (maybe?) iPad Pro with M1 chip you can code as well, so maybe you're good with an iPad pro + iPhone, check it to make sure I'm not wrong.&lt;/p&gt;

&lt;blockquote&gt;
&lt;strong&gt;!important note:&lt;/strong&gt; If you got some device that supports the current OS versions, you can use it but if you need to buy a new one, pick the latest so it will support more OS versions in the future thus you'll be in need to renew your device some years later.&lt;/blockquote&gt;




&lt;p&gt;&lt;strong&gt;Android: &lt;/strong&gt;&lt;br&gt;
If you plan to develop for Android you'll need -of course- an Android. A Google Pixel would be the recommended device No.1 as it's Pure Android, even android one series have some flavours that may differ from the pure android so... no doubt here.&lt;br&gt;
You'll need a desktop or laptop as well, same recommendations than for front end.&lt;/p&gt;

&lt;blockquote&gt;
&lt;strong&gt;!important note 1:&lt;/strong&gt; in the past, Android Studio device virtualization used HAXM only which means it needed an intel processor to work. This is not true anymore, VM acceleration on Windows can use one of three hypervisors: the Intel Hardware Accelerated Execution Manager (HAXM), the Android Emulator Hypervisor Driver for AMD Processors or the Windows Hypervisor Platform (WHPX).&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;strong&gt;!important note 2:&lt;/strong&gt; If you got some device that supports the current OS version, you can use it but if you need to buy a new one, pick the latest so it will support more OS versions in the future thus you'll be in need to renew your device some years later.&lt;/blockquote&gt;




&lt;h2 id="data"&gt;Big Data/Data analytics&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6kOVJS3Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://image.slidesharecdn.com/baronbigdatadeveloper-120418090010-phpapp02/95/the-big-data-developer-pavlobaron-1-728.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6kOVJS3Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://image.slidesharecdn.com/baronbigdatadeveloper-120418090010-phpapp02/95/the-big-data-developer-pavlobaron-1-728.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Same recommendations than for back-end would work well, but with a bigger SSD because... you know, it's BIG data :D &lt;br&gt;
Out of jokes, a 500Gb SSD or better would be a good recommendation.&lt;/p&gt;




&lt;h3 id="footnotes"&gt;Footnotes: &lt;/h3&gt;

&lt;p&gt;Of course, if you do more things on the computer the resources may vary, for example, if you like/want to game on the same device, you can opt for a better GPU and a bigger SSD just to be able to install some games.&lt;/p&gt;

&lt;p&gt;This recommendations are set to cover the needs and to achieve a good efficiency, you can also code apps using a "shitty" i3 10110U with 4Gb RAM or even train an AI using your CPU but you'll be waiting for the laptop to finish tasks instead the laptop waiting for you to code and execute more things.&lt;/p&gt;

&lt;p&gt;If you are searching the best peripherals, specially keyboard because we all know this is our main tool to interact with the computer, check &lt;a href="https://dev.to/joelbonetr/the-best-keyboard-i-ever-had-for-coding-l3m"&gt;this post&lt;/a&gt; and it's comments.&lt;/p&gt;

&lt;p&gt;Do you have any specific question? Do you feel some role missing here that you want me to specify? Please, leave a comment so I can update the post :)&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>hardware</category>
    </item>
    <item>
      <title>Fake Tweet Generator – Generate Fake Tweets Using Tweet Generator</title>
      <author>Emmary123</author>
      <pubDate>Wed, 11 Aug 2021 10:38:22 +0000</pubDate>
      <link>https://dev.to/emmary123/fake-tweet-generator-generate-fake-tweets-using-tweet-generator-15b6</link>
      <guid>https://dev.to/emmary123/fake-tweet-generator-generate-fake-tweets-using-tweet-generator-15b6</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RRVHQDSi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.tradove.com/uploadfile/tempfile/c778dd13e655271977c54bf2a8b98c76.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RRVHQDSi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.tradove.com/uploadfile/tempfile/c778dd13e655271977c54bf2a8b98c76.jpeg"&gt;&lt;/a&gt;Our &lt;a href="https://memegeneratorz.com/fake-tweet-generator/"&gt;&lt;strong&gt;Fake Tweet Generator&lt;/strong&gt;&lt;/a&gt; gives you a careful mockup of Twitter Tweet. Our &lt;strong&gt;Tweet Generator&lt;/strong&gt; is refreshed with Twitter’s present look and plan. VIPs and Media utilize our &lt;strong&gt;Twitter Generator&lt;/strong&gt; to make &lt;strong&gt;fake tweets&lt;/strong&gt; get viral via online media. We have made a&lt;strong&gt; Twitter Post Template&lt;/strong&gt; as indicated by the present-day look of Twitter Tweets. So you can trick your companions by making clever and &lt;strong&gt;Funny Twitter Posts&lt;/strong&gt; with our&lt;strong&gt; &lt;a href="https://memegeneratorz.com/fake-tweet-generator/"&gt;Fake Tweet Maker&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h4&gt;
&lt;strong&gt;Additionally, you may like our: &lt;/strong&gt;cat meme generator&lt;/h4&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Generate Fake Tweets utilizing Fake Tweet Maker Online&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;By using our &lt;strong&gt;Fake &lt;a href="https://memegeneratorz.com/fake-tweet-generator/"&gt;Tweet Generator&lt;/a&gt;&lt;/strong&gt; you can make famous people tweets e.g &lt;strong&gt;BTS Tweets&lt;/strong&gt;, &lt;strong&gt;Trump Tweets, Justin Bieber tweets, &lt;/strong&gt;and so forth to trick your friends. create a genuine-looking fake tweet by changing your profile picture, change your name, and then set your fake Twitter username, type your tweet, and set the date of your tweet. Likewise, add the number of preferences and retweets as you like and see live previews of your &lt;strong&gt;fake tweets&lt;/strong&gt; so you can &lt;strong&gt;edit Twitter tweets &lt;/strong&gt;without any problem. If it’s not too much trouble, note that our&lt;strong&gt; Fake Tweet Maker&lt;/strong&gt; isn’t related to Twitter. Use it for no particular reason and individual utilize just, don’t hurt others.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Make Fake Twitter Messages in Seconds by using our &lt;/strong&gt;&lt;strong&gt;Fake Twitter Mess&lt;/strong&gt;&lt;strong&gt;age Generator&lt;/strong&gt;&lt;strong&gt;. &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3&gt;
&lt;a href="https://memegeneratorz.com/fake-tweet-generator/"&gt;Twitter Post Template&lt;/a&gt; To Generate Fake Tweets&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Command the notice of your devotees with an expert &lt;strong&gt;Twitter Post Template.&lt;/strong&gt; &lt;strong&gt;Generate tweets&lt;/strong&gt; of your dear companions, family members, or friends and family to surprise them. These days &lt;strong&gt;fake&lt;/strong&gt; &lt;strong&gt;trump tweets&lt;/strong&gt; and &lt;strong&gt;Kyler Murray tweets, Obama tweets, George w. bush tweets&lt;/strong&gt; are extremely famous on Facebook, Twitter, and Instagram. You can likewise make &lt;strong&gt;funny Twitter posts&lt;/strong&gt; and offer them to your companions for no particular reason. You can get the most viral expressions of USA &lt;strong&gt;President Trump&lt;/strong&gt; and compose those words in this&lt;strong&gt; Fake Tweet Generator&lt;/strong&gt;. Then, at that point add the most recent Trump’s answers and responses on the Twitter post. So begin utilizing our &lt;strong&gt;Fake&lt;a href="https://memegeneratorz.com/fake-tweet-generator/"&gt; Tweet Maker&lt;/a&gt; &lt;/strong&gt;to make the most popular tweets via online media.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Appreciate making &lt;strong&gt;fake tweets&lt;/strong&gt; for the sake of entertainment and continue to impart our &lt;strong&gt;Fake Tweet Generator &lt;/strong&gt;to answer apparatus with your loved ones &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
&lt;strong&gt;How to use &lt;/strong&gt;&lt;strong&gt;Fake Tweet Generator&lt;/strong&gt;&lt;strong&gt;?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Make &lt;strong&gt;fake tweets&lt;/strong&gt; with&lt;strong&gt; Fake Tweet Generator&lt;/strong&gt; as you need from the alternatives given underneath. Attempt to make a genuine-looking tweet by transferring the right profile picture, dealing with your username, tweet likes, tweet remarks, tweet text, and post time as needs are.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;After fulfillment click on the “Generate Picture” catch to save your generated fake Twitter tweet. Then, at that point after some time a pop will appear on the screen with the share and download alternatives for the generated Twitter tweet. Here and there picture transferring can set aside time so be patient and hang tight for the popup window to show up on the page.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;After some time pop window will show up from which you can share your generated fake tweet by:-&lt;/p&gt;



&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Picture Connection, Html Code, or BBCode.&lt;/li&gt;
&lt;/ul&gt;




&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Online Media Sites (Facebook, Twitter, Linkedin, Google in addition to or Pinterest).&lt;/li&gt;
&lt;/ul&gt;




&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Download your picture to your PC or gadget for some time later.&lt;/li&gt;
&lt;/ul&gt;




&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Higher order functions and closures example in Javascript</title>
      <author>Adrian Matei </author>
      <pubDate>Wed, 11 Aug 2021 10:37:11 +0000</pubDate>
      <link>https://dev.to/codever/higher-order-functions-and-closures-example-in-javascript-4go3</link>
      <guid>https://dev.to/codever/higher-order-functions-and-closures-example-in-javascript-4go3</guid>
      <description>&lt;p&gt;First with "normal" functions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//closures and higher order function&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;salute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;salutation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`hi &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;salutation&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;salute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mr.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Wick&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;//output&lt;/span&gt;
&lt;span class="nx"&gt;hi&lt;/span&gt; &lt;span class="nx"&gt;Mr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;John&lt;/span&gt; &lt;span class="nx"&gt;Wick&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The shorter variant with arrow functions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;saluteArrowFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;salutation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`hi &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;salutation&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;saluteArrowFunction&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mr.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Johnny&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cage&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;//output&lt;/span&gt;
&lt;span class="nx"&gt;hi&lt;/span&gt; &lt;span class="nx"&gt;Mr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Johnny&lt;/span&gt; &lt;span class="nx"&gt;Cage&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;br&gt;
Learn more about:

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures"&gt;closures on mdn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/javascript-scene/higher-order-functions-composing-software-5365cf2cbe99"&gt;higher order functions on Composing Software&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;Shared ❤️ from &lt;a href="https://www.codever.land/snippets/6113a246f52006531138ff57/details"&gt;Codever&lt;/a&gt;.   👉    use the &lt;a href="https://www.codever.land/snippets/6113a246f52006531138ff57/details"&gt;&lt;strong&gt;copy to mine&lt;/strong&gt;&lt;/a&gt; functionality to add it to your personal snippets collection. &lt;/p&gt;


&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>codever</category>
      <category>snippets</category>
    </item>
    <item>
      <title>[Package] Laravel Currency Formatter</title>
      <author>Marc Garcia Torrent</author>
      <pubDate>Wed, 11 Aug 2021 10:18:08 +0000</pubDate>
      <link>https://dev.to/magarrent/package-laravel-currency-formatter-11f8</link>
      <guid>https://dev.to/magarrent/package-laravel-currency-formatter-11f8</guid>
      <description>&lt;p&gt;Hello there! Marc here again.&lt;/p&gt;

&lt;p&gt;I've just released a new Laravel package, this time it's about currencies. Almost in every project we have to format money in one or more formats, and personally, I've never remember how format with number format and round functions 😅&lt;/p&gt;

&lt;p&gt;Easy and tiny package for all of you guys, enjoy it. And always, PRs and suggestions will be welcome!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/magarrent/laravel-currency-formatter"&gt;https://github.com/magarrent/laravel-currency-formatter&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#laravel-currency-formatter"&gt;
  &lt;/a&gt;
  Laravel Currency Formatter
&lt;/h2&gt;

&lt;p&gt;Tiny Laravel worldwide currency formatter&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nw4iEzNg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/6561770/128357354-34e67b91-3f76-4e8f-92db-186843517f99.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nw4iEzNg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/6561770/128357354-34e67b91-3f76-4e8f-92db-186843517f99.png" alt="Laravel Currency Formatter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--whwn4QRQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/license-MIT-brightgreen.svg%3Fstyle%3Dflat-square" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--whwn4QRQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/license-MIT-brightgreen.svg%3Fstyle%3Dflat-square" alt="Software License"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fm8expJX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/github/languages/code-size/magarrent/laravel-currency-formatter" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fm8expJX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/github/languages/code-size/magarrent/laravel-currency-formatter" alt="Package Size"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/magarrent"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kziPr3-e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" alt='"Buy Me A Coffee"'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install"&gt;
  &lt;/a&gt;
  Install
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;composer require magarrent/laravel-currency-formatter&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;use Magarrent\LaravelCurrencyFormatter\Facades\Currency

Currency::currency("EUR")-&amp;gt;format(256)          // 256,00 €
Currency::currency("EUR")-&amp;gt;format(256, true)    // 256 €
Currency::currency("USD")-&amp;gt;format(256)          // $256,00
Currency::currency("USD")-&amp;gt;format(256, true)    // $256

Currency::currency("GBP")-&amp;gt;format(256)          // £256.00
Currency::currency("BTC")-&amp;gt;format(256)          // 256.00000000Ƀ

Currency::currency("USD")-&amp;gt;format(123456789)    // $123,456,789.00
Currency::currency("EUR")-&amp;gt;format(123456789)    // 123.456.789,00 €
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Available Currencies:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;AED - د.إ.‏
AFN - ؋
ALL - Lek
AMD - ֏
ANG - ƒ
AOA - Kz
ARS - $
AUD - $
AWG - ƒ
AZN - ₼
BAM - КМ
BBD - $
BDT - ৳
BGN - лв.
BHD - د.ب.‏
BIF - FBu
BMD - $
BND - $
BOB - Bs
BRL - R$
BSD - $
BTC - Ƀ
BTN - Nu.
BWP - P
BYR - р.
BYN - р.
BZD - BZ$
CAD - $
CDF - FC
CHF - CHF
CLP - $
CNY - ¥
COP - $
CRC - ₡
CUC - CUC
CUP - $MN
CVE - $
CZK - Kč
DJF - Fdj
DKK - kr.
DOP - RD$
DZD - د.ج.‏
EGP - ج.م.‏
ERN - Nfk
ETB - ETB
EUR - €
FJD - $
FKP - £
GBP - £
GEL - GEL
GHS - ₵
GIP - £
GMD - D
GNF - FG
GTQ - Q
GYD - $
HKD - HK$
HNL - L.
HRK - kn
HTG - G
HUF - Ft
IDR - Rp
ILS - ₪
INR - ₹
IQD - د.ع.‏
IRR - ﷼
ISK - kr.
JMD - J$
JOD - د.ا.‏
JPY - ¥
KES - KSh
KGS - сом
KHR - ៛
KMF - CF
KPW - ₩
KRW - ₩
KWD - د.ك.‏
KYD - $
KZT - ₸
LAK - ₭
LBP - ل.ل.‏
LKR - ₨
LRD - $
LSL - M
LYD - د.ل.‏
MAD - د.م.‏
MDL - lei
MGA - Ar
MKD - ден.
MMK - K
MNT - ₮
MOP - MOP$
MRO - UM
MTL - ₤
MUR - ₨
MVR - MVR
MWK - MK
MXN - $
MYR - RM
MZN - MT
NAD - $
NGN - ₦
NIO - C$
NOK - kr
NPR - ₨
NZD - $
OMR - ﷼
PAB - B/.
PEN - S/.
PGK - K
PHP - ₱
PKR - ₨
PLN - zł
PYG - ₲
QAR - ﷼
RON - L
RSD - Дин.
RUB - ₽
RWF - RWF
SAR - ﷼
SBD - $
SCR - ₨
SDD - LSd
SDG - £‏
SEK - kr
SGD - $
SHP - £
SLL - Le
SOS - S
SRD - $
STD - Db
SVC - ₡
SYP - £
SZL - E
THB - ฿
TJS - TJS
TMT - m
TND - د.ت.‏
TOP - T$
TRY - ₺
TTD - TT$
TVD - $
TWD - NT$
TZS - TSh
UAH - ₴
UGX - USh
USD - $
UYU - $U
UZS - сўм
VEB - Bs.
VEF - Bs. F.
VND - ₫
VUV - VT
WST - WS$
XAF - F
XCD - $
XBT - Ƀ
XOF - F
XPF - F
YER - ﷼
ZAR - R
ZMW - ZK
WON - ₩
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#contributing"&gt;
  &lt;/a&gt;
  Contributing
&lt;/h2&gt;

&lt;p&gt;Please see &lt;a href="//CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; for details.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/magarrent"&gt;Marc Garcia Torrent (Kodio Technologies)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/smirzaei/currency-formatter"&gt;Soroush Mirzaei - NPM Currency list JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/magarrent/laravel-currency-formatter/contributors"&gt;All Contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h2&gt;

&lt;p&gt;If you discover any security-related issues, use the issue tracker.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#license"&gt;
  &lt;/a&gt;
  License
&lt;/h2&gt;

&lt;p&gt;The MIT License (MIT). Please see &lt;a href="///LICENSE.md"&gt;License File&lt;/a&gt; for more information.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
    </item>
    <item>
      <title>Using Python to print variable in strings</title>
      <author>hrishikesh1990</author>
      <pubDate>Wed, 11 Aug 2021 10:15:10 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/using-python-to-print-variable-in-strings-1d11</link>
      <guid>https://dev.to/hrishikesh1990/using-python-to-print-variable-in-strings-1d11</guid>
      <description>&lt;p&gt;In this short tutorial, we look at how you can use Python print variable in strings. We look at all the various methods along with their limitations and caveats.&lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#python-print-variables"&gt;Python print variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#printing-variables-using-fstring"&gt;Printing variables using f-string&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-string-concatenation"&gt;Using string concatenation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#python-print-variables-using-a-comma-"&gt;Python print variables using a comma “,”&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#limitations-amp-caveats"&gt;Limitations &amp;amp; Caveats - Python print variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#python-print-variables"&gt;
  &lt;/a&gt;
  Python print variables:
&lt;/h2&gt;

&lt;p&gt;While printing strings, it is common to print a variable’s values inside it. A common example is you might want to print the first and last name in a sentence and these values are stored in two variables respectively.&lt;/p&gt;

&lt;p&gt;These values cannot be hardcoded into the string and need to be passed dynamically, hence Python comes with a few inbuilt functions that allow you to print variable values.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#printing-variables-using-fstring"&gt;
  &lt;/a&gt;
  Printing variables using f-string:
&lt;/h2&gt;

&lt;p&gt;Using f-strings in Python to print variables is the most commonly used method and I would personally recommend using this method.&lt;/p&gt;

&lt;p&gt;In this method, an ‘f’ is placed before the opening quotation mark of a string. Braces {} are placed around the names of variables that you are looking to print. Python replaces these variables with their values when the code is executed and the string is displayed.&lt;/p&gt;

&lt;p&gt;Such strings are called f-strings. Python further allows you to format these strings by using methods like ‘.upper’ or ‘.title’ etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-fstring"&gt;
  &lt;/a&gt;
  Code - f-string
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;language&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Python"&lt;/span&gt;

&lt;span class="c1"&gt;#Adding the language variable into a string
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Hello &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; World!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#Output = “Hello Python World!”
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: These f-strings were introduced only in Python 3.6. In case you are using Python versions earlier than that you would have to use the ‘format()’ method. The syntax for that is as follows:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#python-print-variable-format-code"&gt;
  &lt;/a&gt;
  Python Print Variable - format() Code
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;language&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Python"&lt;/span&gt;

&lt;span class="c1"&gt;#Adding the language variable into a string
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello {} World!"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;#Output = “Hello Python World!”
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-string-concatenation"&gt;
  &lt;/a&gt;
  Using string concatenation:
&lt;/h2&gt;

&lt;p&gt;String concatenation is a method that can be used to add strings together. This is done by using the “+” character between two variables or strings. This way we can use Python to print variable values along with the string.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#python-print-variable-string-concatenation"&gt;
  &lt;/a&gt;
  Python Print Variable - String Concatenation:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;language&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Python"&lt;/span&gt;

&lt;span class="c1"&gt;#Adding the language variable into a string
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;language&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"World!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#Output - “Hello Python World!”
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While using this method, spaces are not added and you would have to manually add them and hence this method is not used very often.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python-print-variables-using-a-comma-"&gt;
  &lt;/a&gt;
  Python print variables using a comma “,”:
&lt;/h2&gt;

&lt;p&gt;This method is another commonly used method in Python to print variables. This method is quite similar to the string concatenation method; however, here we use “,” between the variables.&lt;/p&gt;

&lt;p&gt;Additionally the “,” itself adds a space to the string and you would not have to add it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#python-print-variable-using-"&gt;
  &lt;/a&gt;
  Python Print Variable - Using “,”:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;language&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Python"&lt;/span&gt;

&lt;span class="c1"&gt;#Adding the language variable into a string
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"World!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#Output - "Hello Python World!"
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#limitations-amp-caveats"&gt;
  &lt;/a&gt;
  Limitations &amp;amp; Caveats
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;While using the first method do keep your version of Python in mind as f-strings would only work on Python 3.6 and above&lt;/li&gt;
&lt;li&gt;The string concatenation method is not widely used however feel free to try it out for your better understanding&lt;/li&gt;
&lt;li&gt;While using the “,” methods be careful not to add spaces between variables as the comma itself adds them for you&lt;/li&gt;
&lt;li&gt;I would recommend using methods 1 &amp;amp; 2, you could try them and choose whichever method you are comfortable with&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>10 Html Tags to make Life Easier</title>
      <author>Stacksjar</author>
      <pubDate>Wed, 11 Aug 2021 10:11:41 +0000</pubDate>
      <link>https://dev.to/stacksjar/10-html-tags-to-make-life-easier-4886</link>
      <guid>https://dev.to/stacksjar/10-html-tags-to-make-life-easier-4886</guid>
      <description>&lt;p&gt;Meter Tag &lt;br&gt;
The Meter tag in HTML allows us to represent the data in a graphical format without doing much of coding. The meter tag is used to measure data within a given range. It defines a scalar measurement with range. It is also known as a gauge. It can be used to display metrics info such as quantity of something or showing ratings or marks etc.&lt;/p&gt;

&lt;p&gt;Below is an example of Meter Tag &lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;h2&amp;gt;Stacksjar.com&amp;lt;/h2&amp;gt;
&amp;lt;hr&amp;gt;

&amp;lt;br&amp;gt;
&amp;lt;label for="disk_c"&amp;gt;Best Web Development Articles&amp;lt;/label&amp;gt;
&amp;lt;meter id="disk_c" value="8" min="0" max="10"&amp;gt;8 out of 10&amp;lt;/meter&amp;gt;&amp;lt;br&amp;gt;
&amp;lt;br&amp;gt;
&amp;lt;label for="disk_c"&amp;gt;Web Development Memes&amp;lt;/label&amp;gt;
&amp;lt;meter id="disk_c" value="6" min="0" max="10"&amp;gt;6 out of 10&amp;lt;/meter&amp;gt;&amp;lt;br&amp;gt;
&amp;lt;br&amp;gt;
&amp;lt;label for="disk_c"&amp;gt;Quotes for Web Development Articles&amp;lt;/label&amp;gt;
&amp;lt;meter id="disk_c" value="4" min="0" max="10"&amp;gt;4 out of 10&amp;lt;/meter&amp;gt;&amp;lt;br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Wordbreaker Tag &lt;br&gt;
The wordbreaker tag in HTML is used to break a sentence within a paragraph at a particular instance or after a particular work as per our requirements. This tag will come in effect for responsive purposes when we resize the window we will see that the text inside the  tag will begin in new line apart from being randomly broken from anywhere between sentence.&lt;/p&gt;

&lt;p&gt;Below is an example of Wordbreaker tag &lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p&amp;gt;This is a veryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryvery&amp;lt;wbr&amp;gt;longwordthatwillbreakatspecific&amp;lt;wbr&amp;gt;placeswhenthebrowserwindowisresized.
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Link Tag that Dials Numbers &lt;br&gt;
If we include "tel" keyword in value of "href" attribute of link tag followed by the number, it will allow the device to initiate a call. The device will call the number when user clicks on the Link. This functionality works on mobile devices, tablets uses software's like skype, face time or devices which supports cellular calling.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;a href="tel:1234567890"&amp;gt;Call Us&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Fieldset Tag and Legend Tag &lt;/p&gt;

&lt;p&gt;The fieldset tag in HTML is used to specify a group of form elements. And the Legend Tag is used to define the title for the child contents. The legend elements are the parent element. This tag is used to define the caption for the fieldset element.&lt;/p&gt;

&lt;p&gt;Below is an example of Fieldset tag and Legend Tag&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;legend&amp;gt;
&amp;lt;form&amp;gt;
  &amp;lt;fieldset&amp;gt;
    &amp;lt;legend style="float:right"&amp;gt;Sign Up:&amp;lt;/legend&amp;gt;
    &amp;lt;label for="fname"&amp;gt;First name:&amp;lt;/label&amp;gt;
    &amp;lt;input type="text" id="fname" name="fname"&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
    &amp;lt;label for="lname"&amp;gt;Last name:&amp;lt;/label&amp;gt;
    &amp;lt;input type="text" id="lname" name="lname"&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
    &amp;lt;label for="email"&amp;gt;Email:&amp;lt;/label&amp;gt;
    &amp;lt;input type="email" id="email" name="email"&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
    &amp;lt;label for="password"&amp;gt;password:&amp;lt;/label&amp;gt;
    &amp;lt;input type="password" id="password" name="password"&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
    &amp;lt;input type="submit" value="Submit"&amp;gt;
  &amp;lt;/fieldset&amp;gt;
&amp;lt;/form&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open Link in New Tab &lt;/p&gt;

&lt;p&gt;The "target" attribute of link tag allows us to decide whether the link should be opened in new tab or the same tab the user is in. If we pass in the value "_blank" to the target attribute it will open the link in new tab when user clicks on the particular link&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;a href="https://stacksjar.com/memes" target="_blank"&amp;gt;Web Development Memes&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Code Tag &lt;br&gt;
The code tag in html allows to define a fragment of code in the html. Which will be displayed in a code editor view/format in the browser.&lt;/p&gt;

&lt;p&gt;Below is the example of Code tag&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
function print() {

 console.log("High Quality Practical Resources to skill up your Web Development Career and Boost your           Productivity");

}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Keyboard Tag &lt;br&gt;
The kbd tag is also know as keyboard tag. HTML keyboard tag represents the part of inline text which indicates the user keyboard input, voice input, or any other text entry device input. The keyboard text renders on the browser in default monospace font. This tag is used when a document needs to display the text which user should enter exactly from his keyboard.&lt;/p&gt;

&lt;p&gt;Below is the example of keyboard tag&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;p&amp;gt;Save this File by Pressing &amp;lt;kbd&amp;gt;Ctrl + S&amp;lt;/kbd&amp;gt;&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Details Tag  and Summary Tag &lt;br&gt;
The Details tag in HTML is a useful feature it is a kind of accordion which opens and closes with user click and shows the data within it. The details tag is used with the summary tag within it. Summary Tag is the one which will display the short description you wish to show to the user before clicking on it. The details tag is often used to create an interactive widget that the user can open and close. By default, the widget is closed. When open, it expands, and displays the content within.&lt;/p&gt;

&lt;p&gt;Read Complete Article here:- &lt;a href="https://stacksjar.com/post/10-html-tags-to-make-life-easier"&gt;10 Html Tags to make Life Easier&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>codequality</category>
    </item>
    <item>
      <title>FASTAPI</title>
      <author>Mary-softeng</author>
      <pubDate>Wed, 11 Aug 2021 10:02:29 +0000</pubDate>
      <link>https://dev.to/marysofteng/fastapi-3j6p</link>
      <guid>https://dev.to/marysofteng/fastapi-3j6p</guid>
      <description>&lt;p&gt;what is FastAPI?&lt;br&gt;
FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.&lt;br&gt;
The key features are:&lt;br&gt;
•Fast: Very high performance, on par with NodeJS and Go.&lt;br&gt;
•Fast to code: Increase the speed to develop features by about 200% to 300%. &lt;br&gt;
•Fewer bugs: Reduce about 40% of human (developer) induced errors. &lt;br&gt;
•Intuitive: Great editor support. Completion everywhere. Less time debugging.&lt;br&gt;
•Easy: Designed to be easy to use and learn. Less time reading docs.&lt;br&gt;
•Short: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.&lt;br&gt;
•Robust: Get production-ready code. With automatic interactive documentation.&lt;br&gt;
•Standards-based: Based on (and fully compatible with) the open standards for APIs: OpenAPI (previously known as Swagger) and JSON Schema&lt;br&gt;
How to install FastAPI&lt;br&gt;
Pipenv is used while setting up the development environment for our APIs. Pipenv makes it easier to isolate your development environment irrespective of what things are installed on your machine. It also lets you pick a different Python version than whatever is installed on your machine. It uses Pipfile to manage all your project-related dependencies. Use pip install FastApi in a command prompt.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1J504x2j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hel6xx6lmqlk1jbndwgt.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1J504x2j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hel6xx6lmqlk1jbndwgt.JPG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once installed you can activate the virtual environment by running the command pipenv shell&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--njwvEB1y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dh28h9roa9qrxrxqd89k.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--njwvEB1y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dh28h9roa9qrxrxqd89k.JPG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;FastAPI Hello World&lt;br&gt;
Let’s get some practice with FastAPI! We’ll take a look at a simple Hello World! and break down the pieces.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iIbZszR3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bq8t8b8xhn31egnbs93y.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iIbZszR3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bq8t8b8xhn31egnbs93y.JPG" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
To start the server, we need to run the following command:&lt;/p&gt;

&lt;p&gt;Let’s break this down:&lt;br&gt;
•main: refers to the file name&lt;br&gt;
•app: refers to the object of FastAPI created inside the hello.py file&lt;br&gt;
•--reload: parameter that makes the server restart after the code changes&lt;br&gt;
Let’s break down our Hello World! code:&lt;br&gt;
•Line 1: We import FastAPI, which is a Python class that provides all the functionality for the API.&lt;br&gt;
•Line 3: We create an instance of the class FastAPI and name it app. This is the app referred to by uvicorn in the above command.&lt;br&gt;
•Line 5: We create a GET path.&lt;br&gt;
•Line 6: We define the function that will execute whenever someone visits the above path.&lt;br&gt;
•Line 7: We return a response to the client whenever the route is accessed.&lt;br&gt;
Basic FastAPI building blocks&lt;br&gt;
Let’s explore some of the building blocks of FastAPI, including path parameters, query parameters, and request bodies.&lt;br&gt;
Path parameters&lt;br&gt;
Path parameters help scope the API call down to a single resource, which means you don’t have to build a body for something as simple as a resource finder.&lt;br&gt;
These parameters are enclosed in curly brackets {}, and they offer a way for you to control the representation of specific resources. They’re placed before the query string and within the path of an endpoint.&lt;br&gt;
Let’s take a look at how to use them:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pqdeP-hi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtk7uqyb1nr0v3la8abm.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pqdeP-hi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtk7uqyb1nr0v3la8abm.JPG" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
The value of the path parameter course_name will be passed to the function read_couse() as the argument course_name.&lt;br&gt;
Query parameters&lt;br&gt;
Query parameters are optional. In FastAPI, function parameters that aren’t declared as part of the path parameters are automatically interpreted as query parameters.&lt;br&gt;
Let’s look at some sample code:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d6MZo0mX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m7fj56zyt01iwedpp0y2.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d6MZo0mX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m7fj56zyt01iwedpp0y2.JPG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The query is the set of key-value pairs that comes after the question mark ? in a URL, separated by an ampersand &amp;amp;.&lt;br&gt;
Take a look at the following URL:&lt;br&gt;
&lt;a href="http://localhost:8000/courses/?start=0&amp;amp;end=10"&gt;http://localhost:8000/courses/?start=0&amp;amp;end=10&lt;/a&gt;&lt;br&gt;
Its query parameters are:&lt;br&gt;
start with a value of 0 and end with a value of 10.&lt;br&gt;
In line 8 of the code, we pass the two query parameters that our API would expect.&lt;br&gt;
Request body&lt;br&gt;
A request body is data sent by the client to your API. To declare one in FastAPI, we can use Pydantic models.&lt;br&gt;
Let’s see an example of how we can do this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OIR687CQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9mm1rkk4c4lt24ejr0ch.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OIR687CQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9mm1rkk4c4lt24ejr0ch.JPG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s break this down:&lt;br&gt;
•Lines 1-3: We import the required packages.&lt;br&gt;
•Line 5: We declare the request data model.&lt;br&gt;
•Line 11: We create an instance of the FastAPI class.&lt;br&gt;
•Line 13: We create a POST path.&lt;br&gt;
•Line 14: We add the request data model to the path.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Rust SDK - DJI Tello Drone</title>
      <author>Alexander Halemba</author>
      <pubDate>Wed, 11 Aug 2021 10:01:55 +0000</pubDate>
      <link>https://dev.to/alexander89/dji-tello-drone-4ijl</link>
      <guid>https://dev.to/alexander89/dji-tello-drone-4ijl</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0bBuMr5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ypl2tzrvmf5l9p3zliz8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0bBuMr5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ypl2tzrvmf5l9p3zliz8.jpg" alt="Tello Drone"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I got this Tello Drone for Christmas a while back. Flying in circles was quite fun, but the control via the mobile phone was unfortunately not comfortable for me and I couldn't see anything on the small screen.&lt;/p&gt;

&lt;p&gt;It quickly became boring and what does a developer do when he can't sleep at night: hacking.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hacking"&gt;
  &lt;/a&gt;
  🤓 Hacking
&lt;/h2&gt;

&lt;p&gt;I first found the public text-based API. It was quite simple to integrate and I tried to control the drone with my GamePad. Unfortunately, movements like "20 cm to the left" are not compatible with a joystick. After some time, however, I came across &lt;a href="https://tellopilots.com/"&gt;https://tellopilots.com/&lt;/a&gt;. Some clever people took the trouble to dissect the API and document it. (&lt;a href="https://tellopilots.com/wiki/development/"&gt;https://tellopilots.com/wiki/development/&lt;/a&gt;) &lt;/p&gt;

&lt;p&gt;Even though the Go implementation is probably the source of truth, the documentation is very good. Now there was only one problem. I want RUST. &lt;/p&gt;

&lt;p&gt;After a few more hours of hacking, two broken propellers and luckily no fly-away, the time had come. Usable as SDK and implementable in any home-automation project. Who doesn't want drones to swarm out when someone rings the doorbell or comes in the driveway. 🙈 &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-it"&gt;
  &lt;/a&gt;
  💡 Use it
&lt;/h2&gt;

&lt;p&gt;The repo is on github: &lt;a href="https://github.com/Alexander89/rust-tello"&gt;https://github.com/Alexander89/rust-tello&lt;/a&gt; with an example app to fly around with a joystick. You can easily receive the video stream with VNC.&lt;/p&gt;

&lt;p&gt;Here is a small example of how the drone can be controlled via rust.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;tello&lt;/span&gt;&lt;span class="p"&gt;::{&lt;/span&gt;&lt;span class="n"&gt;Drone&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PackageData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ResponseMsg&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;std&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;time&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Duration&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;drone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;Drone&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"192.168.10.1:8889"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;drone&lt;/span&gt;&lt;span class="nf"&gt;.connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11111&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;loop&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nf"&gt;Some&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;drone&lt;/span&gt;&lt;span class="nf"&gt;.poll&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;match&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nn"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nn"&gt;PackageData&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;FlightData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"battery {}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="py"&gt;.battery_percentage&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nn"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nn"&gt;ResponseMsg&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;Connected&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;_&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"connected"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;drone&lt;/span&gt;&lt;span class="nf"&gt;.throw_and_go&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="nf"&gt;.unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="mi"&gt;_&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;std&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nn"&gt;Duration&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1_000_000_000u32&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Happy Hacking and stay tuned&lt;/p&gt;

</description>
      <category>rust</category>
      <category>drones</category>
      <category>dji</category>
    </item>
    <item>
      <title>15 Python tips and tricks every beginner should know !</title>
      <author>AIDRI</author>
      <pubDate>Wed, 11 Aug 2021 09:44:38 +0000</pubDate>
      <link>https://dev.to/byteslash/15-python-tips-and-tricks-every-beginner-should-know-3bm5</link>
      <guid>https://dev.to/byteslash/15-python-tips-and-tricks-every-beginner-should-know-3bm5</guid>
      <description>&lt;p&gt;Hy guys! &lt;br&gt;
Today I'm going to share with you the best tips and tricks to master in Python!&lt;/p&gt;

&lt;p&gt;These tips are based on my experience on Codingame, during ClashOfCode (I was in the top 100 at one time :) )&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#1-create-a-number-sequence"&gt;
  &lt;/a&gt;
  1/ Create a number sequence
&lt;/h4&gt;

&lt;p&gt;Sometimes you may want to create a sequence of numbers: a fairly intuitive way would be to create a loop and perform n calls of the append() method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;my_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;my_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In reality this operation is quite time consuming, and it is better to write :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;my_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;my_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is not only faster to write but also faster to compute!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-overlaying-two-dictionaries"&gt;
  &lt;/a&gt;
  2/ Overlaying two dictionaries
&lt;/h4&gt;

&lt;p&gt;Concatenating two dictionaries can be a useful operation to group information and avoid getting lost in lots of variables...&lt;br&gt;
So we can use the update() method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;beta&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;delta&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;beta&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;delta&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Warning: if there are two identical keys, then the value will be that of dictionary b.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-create-a-dictionary-of-a-sequence"&gt;
  &lt;/a&gt;
  3/ Create a dictionary of a sequence
&lt;/h4&gt;

&lt;p&gt;By creating a dictionary of a sequence, I mean easily creating (in one line) a dictionary where the key depends on x and where the value also depends on x. However, this method can be modified to create the dictionary according to a list, inputs, etc...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;my_dic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;my_dic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#4-reverse-a-list"&gt;
  &lt;/a&gt;
  4/ Reverse a list
&lt;/h4&gt;

&lt;p&gt;Inverting a list is one of the most useful things you can do in Python. You must know this operation !&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;my_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;my_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;my_list&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;my_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is much faster to write, much more readable, and especially much faster to execute than the built-in function reversed().&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-unpacking-a-tuple"&gt;
  &lt;/a&gt;
  5/ Unpacking a tuple
&lt;/h4&gt;

&lt;p&gt;Unpacking a tuple is an interesting operation especially to perform operations on the values, and avoid having to retrieve the value by its index each time:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;my_tup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;my_tup&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#6-filter-a-list"&gt;
  &lt;/a&gt;
  6/ Filter a list
&lt;/h4&gt;

&lt;p&gt;Filtering a list is a useful process in algorithms or in more common programs. You can keep the values you want by passing a list into a function that acts as a filter. This function returns True (the value is kept) or False (the value is deleted).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;my_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;my_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

&lt;span class="n"&gt;my_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_filter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;my_list&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;my_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#7-return-multiple-values-from-a-function"&gt;
  &lt;/a&gt;
  7/ Return multiple values from a function
&lt;/h4&gt;

&lt;p&gt;We know that to return a value from a list, we must use return. However, the function stops after returning a value. However, we can use yield to continue to execute the function. Useful for returning variables, for debugging, etc.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;my_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
         &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;my_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#8-import-this"&gt;
  &lt;/a&gt;
  8/ import this
&lt;/h4&gt;

&lt;p&gt;The this library is more a joke than a trick, but it's nice to know the little easter eggs of its language:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;this&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;Zen&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;
&lt;span class="n"&gt;Beautiful&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;better&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="n"&gt;ugly&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Explicit&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;better&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="n"&gt;implicit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Simple&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;better&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="nb"&gt;complex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Complex&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;better&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="n"&gt;complicated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#9-basic-operations-on-sets"&gt;
  &lt;/a&gt;
  9/ Basic operations on sets
&lt;/h4&gt;

&lt;p&gt;If we have two sets a and b such that :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then we can perform the following operations that you must know !&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Union 
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Intersection 
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Symetric difference
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#10-code-if-else-in-one-line"&gt;
  &lt;/a&gt;
  10/ Code if : else : in one line
&lt;/h4&gt;

&lt;p&gt;It's not the most useful trick, but it's always useful to know how to write an if : else : in one line to make the code cleaner, or in shortest code competitions on codingame !&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; i = 1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#11-limit-the-number-of-recursion-of-an-algorithm"&gt;
  &lt;/a&gt;
  11/ Limit the number of recursion of an algorithm
&lt;/h4&gt;

&lt;p&gt;Limiting the number of recursions of an algorithm is useful to avoid having timeouts. It is even the first thing to do when you know the maximum number of recursions! You can do it with the Python library sys:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setrecursionlimit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#12-print-text-faster"&gt;
  &lt;/a&gt;
  12/ Print text faster
&lt;/h4&gt;

&lt;p&gt;When we have to print text in Python, we use by default the print() method ! However, when you have to print thousands of lines, this method can be slow. In this case we use :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;im&lt;/span&gt; &lt;span class="n"&gt;Adrien&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# only string
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use a similar method for the input, but it's a bit more complex :)&lt;/p&gt;

&lt;p&gt;This method is up to 8 times faster than the normal print&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#13-have-the-middle-items-of-a-list"&gt;
  &lt;/a&gt;
  13/ Have the middle items of a list
&lt;/h4&gt;

&lt;p&gt;Having the items in the middle of a list is a little trick to know when unpacking this list... Indeed, depending on the number of variables (or underscore if you don't want to keep the variable) at the beginning and at the end, you can have a variable containing a list of values containing only the "middle" one, in fact, the one that have not been put in other variables!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#14-separate-big-numbers-by-"&gt;
  &lt;/a&gt;
  14/ Separate big numbers by _
&lt;/h4&gt;

&lt;p&gt;For more readability, and because Python does not allow spaces between the digits of a number, we can use _. For example, 1 000 000 000 can be written in Python :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="mi"&gt;1_000_000_000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#15-exchange-keys-values-of-a-dictionary"&gt;
  &lt;/a&gt;
  15/ Exchange keys / values of a dictionary
&lt;/h4&gt;

&lt;p&gt;Exchanging the keys and values of a dictionary is a technique that can be useful, especially in the field of AI :). Here is how to do it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;my_dic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;my_dic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;my_dic&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;my_dic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;p&gt;That's all for today, I hope you liked the article and that you were able to improve your coding skills! Don't hesitate to share the article with your friends and to give me your feedback in comments!&lt;/p&gt;

&lt;p&gt;Adrien&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>programming</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Have you tried to gamify your API? </title>
      <author>Josip Klaric</author>
      <pubDate>Wed, 11 Aug 2021 09:37:03 +0000</pubDate>
      <link>https://dev.to/infobipdev/have-you-tried-to-gamify-your-api-34of</link>
      <guid>https://dev.to/infobipdev/have-you-tried-to-gamify-your-api-34of</guid>
      <description>&lt;p&gt;I love team buildings. And I’m pretty sure most of you love them too. The main reason I love it are those little games we usually play at such events. There is always some kind of informal competition, and you can feel it even on a simple rafting adventure. Some crews will not finish the ride while those who will are going to praise themselves. &lt;/p&gt;

&lt;p&gt;All those little games played at team-building events are usually just a cover for learning something new that management decided to implement in your company. And without a game, presenting those changes would be boring. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#can-games-really-improve-learning"&gt;
  &lt;/a&gt;
  Can games really improve learning?
&lt;/h2&gt;

&lt;p&gt;Scientific researches like &lt;a href="https://www.sri.com/wp-content/uploads/pdf/simulations-for-stem-learning-full-report.pdf"&gt;this&lt;/a&gt; one show that learning through playing games is about 23% more effective than traditional techniques. And not only that. Other &lt;a href="http://shura.shu.ac.uk/3556/1/Habgood_Ainsworth_final.pdf"&gt;research&lt;/a&gt; shows that games are a great motivator, the driving force for most people. And this way of learning proved to be much more efficient than pure fact reading. &lt;/p&gt;

&lt;p&gt;So, one could conclude - if you have a dull and tedious task ahead, gamify it and the results will follow. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#give-me-some-success-stories"&gt;
  &lt;/a&gt;
  Give me some success stories?
&lt;/h2&gt;

&lt;p&gt;The US Army has created a combat simulation game for internal use but is was eventually published. The result was a big surge of new applicants joining the US army in following years. In fact, it proved to be the most successful way of recruiting new soldiers.&lt;/p&gt;

&lt;p&gt;Another example of gamification is Duo Lingo. This language learning mobile app is structured in levels and achievements that students accomplish, share on social media and thus make it more competitive. Long streaks of learning the language are additionally rewarded in the app and this raises the competitiveness even more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-relates-to-developers"&gt;
  &lt;/a&gt;
  How it relates to developers?
&lt;/h2&gt;

&lt;p&gt;As a developer you often get a task to implement certain functionality in some new technology you never worked before. So, you start researching and finally end up on documentation site. No matter how well structured and nicely written documentation is it will become tedious and boring just to read paragraph after paragraph. What if learning new technology could be done though game? Would it be more effective? I'm pretty sure keeping focus would be much easier. Simple little game can do miracle. But, let's see some examples.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#gamification-at-infobip"&gt;
  &lt;/a&gt;
  Gamification at Infobip
&lt;/h1&gt;

&lt;p&gt;Developers are no exception. Just like everyone else developers love games. Maybe even a little more. So, offering some kind of game built around your service will for sure attract more developers to try it. One could think of developing a game as an unnecessary expense, and rarely pays off. But what you get in return can exceed all your costs and expectations. One of the first things you will get is feedback. &lt;br&gt;
Last year we at Infobip developed a simple game around our SMS API. The game was mainly targeting the internal developers at our own tech event. Our main goal was getting some feedback on our documentation and overall developer experience. &lt;/p&gt;

&lt;p&gt;It was a simple 2D adventure-like game in which the players had to move their hero around the map and solve some challenges. To move the hero and solve the challenges (e.g. fix the broken bridge to continue he adventure) players had to send SMS messages to a specific number with the instructions in the message text. And to send those messages players had to find the solution in the online documentation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YttamDh5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2znbzvjj8ozqrz4wi5oq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YttamDh5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2znbzvjj8ozqrz4wi5oq.png" alt="Infobip SMS API game"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In general, the reception was very good. More than 30% of all attendees at the event registered (yes, they had to put some effort and register separately) and half of those registered tried to play. Some of them gave up because of various reasons and did not finish the game. But those who completed the game were thrilled by the entire idea. The feedback we got has helped us identify some of the weaknesses in our documentation. We found some features that were not working as expected or were too confusing for most of the players who saw the documentation for the first time.&lt;/p&gt;

&lt;p&gt;We also collected some feedback from those who did not finish the game. The main reason was a lack of time, but according to their feedback, they really like the idea. Since playing this game required some coding and a lot of documentation reading, we were very satisfied with the overall number of developers who actively participated. And most of those who gave feedback expressed their willingness to participate in a similar game with some other API in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-can-you-learn-from-this"&gt;
  &lt;/a&gt;
  What can you learn from this?
&lt;/h2&gt;

&lt;p&gt;A lot, actually.&lt;br&gt;
You will get a lot of testers for your service if you create a game that utilizes the product or service. Based on the feedback, you can also plan the new functionalities or remove some of the existing ones. Also, feedback will give you an insight into your documentation and that can help you plan and prioritise the improvements.&lt;/p&gt;

&lt;p&gt;So, simple things like unlocking the achievements and getting nice badges can boost the popularity of your service. Of course, this may depend a little bit on integration with social media. People engaged in social media care about their achievements. It is more likely that they will accept some challenges given by their friends.&lt;/p&gt;

&lt;p&gt;If a game is well structured and uses all the crucial functionalities of your service, it will be much easier to grasp all the complex details written in documentation. What is more important, it will give some context to the functionalities of your service. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#developers-feedback-is-of-high-value"&gt;
  &lt;/a&gt;
  Developers' feedback is of high value
&lt;/h1&gt;

&lt;p&gt;Developers who will play your game and get familiarized with your service through it will most probably not be in a position to directly decide if that company will become your next client, but they can help and influence the decision process. Recent research on software purchasing trends, conducted by Bessemer Venture Partners and Auth0, revealed that 87% of organisations value or highly value the product feedback provided by developers.&lt;/p&gt;

&lt;p&gt;If a simple game can persuade someone to join the army, then following the same road to persuade someone to buy your service could be well worth a try.&lt;/p&gt;

</description>
      <category>api</category>
      <category>games</category>
      <category>learning</category>
    </item>
  </channel>
</rss>
