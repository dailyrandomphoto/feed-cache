<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Publishing your Android library - the local way</title>
      <author>Nadia Castelli</author>
      <pubDate>Thu, 22 Jul 2021 15:43:37 +0000</pubDate>
      <link>https://dev.to/cloudx/publishing-your-android-library-the-local-way-2059</link>
      <guid>https://dev.to/cloudx/publishing-your-android-library-the-local-way-2059</guid>
      <description>&lt;p&gt;If you ever built an Android library, meant to be used in one or more projects, you have for sure faced the need to publish it in order to test its integration into your target app. You probably publish your libraries in some repository, such as JitPack, Nexus, JFrog, or other. But, what if you need to continue introducing changes or working on fixes in your library? Maybe publishing it to a remote repository each time is not the most time-saving option, especially if your library is a bit overweight. Or maybe your Internet access was cut off; how are you supposed to continue working like this? Well, there is actually a convenient, effective way to quickly get your library published and available to be integrated into your other projects: the Maven local repository.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#maven-local"&gt;
  &lt;/a&gt;
  Maven local
&lt;/h2&gt;

&lt;p&gt;Maven local is actually a repository, but it is located in your own computer. As simple as that. So you can use this directory to store your project dependencies.&lt;/p&gt;

&lt;p&gt;Depending on your computer's operating system, the default location for Maven local repository may vary.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mac: &lt;code&gt;/Users/[username]/.m2&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Linux: &lt;code&gt;/home/[username]/.m2&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Windows: &lt;code&gt;C:\Users\[username]\.m2&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B7_LwoV3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8jtaur3fkwp7x6xtvd2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B7_LwoV3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8jtaur3fkwp7x6xtvd2.png" alt=".m2 folder contents"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#publishing-your-library"&gt;
  &lt;/a&gt;
  Publishing your library
&lt;/h2&gt;

&lt;p&gt;First, we are going to navigate to our library's module, and there we are going to create a Gradle file, which will contain all the necessary code to publish the library locally. We are going to name it &lt;code&gt;publishLocal.gradle&lt;/code&gt;. Its content will be the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="n"&gt;apply&lt;/span&gt; &lt;span class="nl"&gt;plugin:&lt;/span&gt; &lt;span class="s1"&gt;'maven-publish'&lt;/span&gt; 

&lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="nf"&gt;sourceJar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;type:&lt;/span&gt; &lt;span class="n"&gt;Jar&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sourceSets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;main&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;srcDirs&lt;/span&gt; 
    &lt;span class="n"&gt;classifier&lt;/span&gt; &lt;span class="s2"&gt;"sources"&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt; 

&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;afterEvaluate&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;publishToMavenLocal&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
        &lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;groupId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LIBRARY_GROUP&lt;/span&gt; 
        &lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;artifactId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LIBRARY_ARTIFACT_ID&lt;/span&gt; 
        &lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LIBRARY_VERSION_NAME&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;"-local"&lt;/span&gt; 
        &lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;debugSuffix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"-debug"&lt;/span&gt; 
        &lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;releaseSuffix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"-release"&lt;/span&gt; 
        &lt;span class="k"&gt;publishing&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
            &lt;span class="n"&gt;publications&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                &lt;span class="n"&gt;LibraryRelease&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;MavenPublication&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                    &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;release&lt;/span&gt; 
                    &lt;span class="nf"&gt;artifact&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sourceJar&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; 
                    &lt;span class="n"&gt;setGroupId&lt;/span&gt; &lt;span class="n"&gt;groupId&lt;/span&gt; 
                    &lt;span class="n"&gt;setArtifactId&lt;/span&gt; &lt;span class="n"&gt;artifactId&lt;/span&gt; 
                    &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;releaseSuffix&lt;/span&gt; 
                &lt;span class="o"&gt;}&lt;/span&gt; 
                &lt;span class="n"&gt;LibraryDebug&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;MavenPublication&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                    &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;debug&lt;/span&gt; 
                    &lt;span class="nf"&gt;artifact&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sourceJar&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; 
                    &lt;span class="n"&gt;setGroupId&lt;/span&gt; &lt;span class="n"&gt;groupId&lt;/span&gt; 
                    &lt;span class="n"&gt;setArtifactId&lt;/span&gt; &lt;span class="n"&gt;artifactId&lt;/span&gt; 
                    &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;debugSuffix&lt;/span&gt; 
                &lt;span class="o"&gt;}&lt;/span&gt; 
            &lt;span class="o"&gt;}&lt;/span&gt; 
            &lt;span class="n"&gt;publications&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;all&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                &lt;span class="n"&gt;pom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;withXml&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                    &lt;span class="n"&gt;asNode&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;dependencies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;'*'&lt;/span&gt;
                    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findAll&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                        &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'runtime'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                        &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;configurations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;implementation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;allDependencies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;find&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                            &lt;span class="n"&gt;dep&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dep&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;artifactId&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; 
                        &lt;span class="o"&gt;}&lt;/span&gt;
                    &lt;span class="o"&gt;}.&lt;/span&gt;&lt;span class="na"&gt;each&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;*.&lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'compile'&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; 
                &lt;span class="o"&gt;}&lt;/span&gt; 
            &lt;span class="o"&gt;}&lt;/span&gt; 
        &lt;span class="o"&gt;}&lt;/span&gt; 

        &lt;span class="n"&gt;doLast&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
            &lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;prettyPrint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;upto&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;"="&lt;/span&gt; &lt;span class="o"&gt;})&lt;/span&gt; 
                &lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt; 
            &lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; 
            &lt;span class="n"&gt;prettyPrint&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;println&lt;/span&gt; &lt;span class="s2"&gt;"PUBLICATION FINISHED"&lt;/span&gt; 
            &lt;span class="n"&gt;println&lt;/span&gt; &lt;span class="s2"&gt;"Artifact RELEASE: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;groupId&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;":"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;artifactId&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;  &lt;span class="s2"&gt;":"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;releaseSuffix&lt;/span&gt; 
            &lt;span class="n"&gt;println&lt;/span&gt; &lt;span class="s2"&gt;"Artifact DEBUG: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;groupId&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;":"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;artifactId&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;  &lt;span class="s2"&gt;":"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;debugSuffix&lt;/span&gt;
            &lt;span class="n"&gt;prettyPrint&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; 
        &lt;span class="o"&gt;}&lt;/span&gt; 
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can include this script in our module-level &lt;code&gt;build.gradle&lt;/code&gt; file. And that's it!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="o"&gt;...&lt;/span&gt; 
&lt;span class="n"&gt;apply&lt;/span&gt; &lt;span class="nl"&gt;from:&lt;/span&gt; &lt;span class="s1"&gt;'publishLocal.gradle'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-code-in-depth"&gt;
  &lt;/a&gt;
  The code in depth
&lt;/h3&gt;

&lt;p&gt;If you take a look at our first line of code, you can see that we are including the &lt;a href="https://docs.gradle.org/current/userguide/publishing_maven.html"&gt;Maven Publish&lt;/a&gt; plugin, which lets us publish artifacts to an Apache Maven repository.&lt;/p&gt;

&lt;p&gt;Below that line, we configure a task called &lt;code&gt;sourceJar&lt;/code&gt;, which will generate the &lt;code&gt;.jar&lt;/code&gt; file with our library's source files.&lt;/p&gt;

&lt;p&gt;Now we are getting to the meaty part. We configure &lt;code&gt;publishToMavenLocal&lt;/code&gt; task, indicating the publications it should perform. In this case, there are two: &lt;code&gt;LibraryRelease&lt;/code&gt; and &lt;code&gt;LibraryDebug&lt;/code&gt;; each of them uses a different build variant.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;LIBRARY_GROUP, LIBRARY_ARTIFACT_ID, and LIBRARY_VERSION_NAME are constants defined in gradle.properties file.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's see each &lt;code&gt;MavenPublication&lt;/code&gt; in detail:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="n"&gt;LibraryRelease&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;MavenPublication&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;release&lt;/span&gt; 
    &lt;span class="nf"&gt;artifact&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sourceJar&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; 
    &lt;span class="n"&gt;setGroupId&lt;/span&gt; &lt;span class="n"&gt;groupId&lt;/span&gt; 
    &lt;span class="n"&gt;setArtifactId&lt;/span&gt; &lt;span class="n"&gt;artifactId&lt;/span&gt; 
    &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;releaseSuffix&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are taking &lt;code&gt;LibraryRelease&lt;/code&gt; as an example. First, we apply the component with the release build variant. After that, we indicate that besides the &lt;code&gt;.aar&lt;/code&gt; file that is going to be generated, we also want to compile a &lt;code&gt;.jar&lt;/code&gt; file with the source files (this step is optional). Finally, we set a group ID, an artifact ID, and a version name for our library (in this case we are using different suffixes for debug and release variants).&lt;/p&gt;

&lt;p&gt;It is now time to generate a &lt;code&gt;.pom&lt;/code&gt; file for each of the publications. The &lt;code&gt;.pom&lt;/code&gt; file contains all the necessary configuration details that Maven uses to compile our project. Here we can find, among other things, the dependencies our library includes in detail.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="n"&gt;publications&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;all&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;pom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;withXml&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
        &lt;span class="n"&gt;asNode&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;dependencies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;'*'&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findAll&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
            &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'runtime'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
            &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;configurations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;implementation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;allDependencies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;find&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;dep&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dep&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;artifactId&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; 
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}.&lt;/span&gt;&lt;span class="na"&gt;each&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;*.&lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'compile'&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; 
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;In my particular case, I had to write a special rule to correct the Maven scope of some of the dependencies I use in my library. This may not be necessary for you. More information on Maven scopes &lt;a href="https://reflectoring.io/maven-scopes-gradle-configurations/"&gt;here&lt;/a&gt; and &lt;a href="https://andresalmiray.com/maven-scopes-vs-gradle-configurations/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We end our script by printing a log with information about the published artifacts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#publishing-to-maven-local"&gt;
  &lt;/a&gt;
  Publishing to Maven local
&lt;/h3&gt;

&lt;p&gt;If you head to Gradle's task tree, inside the publishing section you will see we have these tasks available, which we can run depending on our needs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;publish[MODULE_NAME]DebugPublicationToMavenLocal&lt;/code&gt; compiles the project in debug mode.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;publish[MODULE_NAME]ReleasePublicationToMavenLocal&lt;/code&gt; compiles the project in release mode.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;publishToMavenLocal&lt;/code&gt; generates both debug and release versions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lZrURJ_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/72djerhkfu34y3lb9j8m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lZrURJ_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/72djerhkfu34y3lb9j8m.png" alt="Gradle task tree"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the following screenshot we can observe the output of a successful execution of &lt;code&gt;publishToMavenLocal&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JEVs-h-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sxmxsklx4q66jtkgbyme.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JEVs-h-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sxmxsklx4q66jtkgbyme.png" alt="Published library log"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Gradle tasks can also be run from the command line, for example:&lt;br&gt;
&lt;code&gt;./gradlew publishToMavenLocal&lt;/code&gt;&lt;br&gt;
&lt;code&gt;./gradlew publishLibraryDebugPublicationToMavenLocal&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Awesome! We already have our library, with its two variants and their artifacts, published in Maven local. But now, how can we integrate it into another project?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#integrating-your-library-in-a-project"&gt;
  &lt;/a&gt;
  Integrating your library in a project
&lt;/h2&gt;

&lt;p&gt;To import our library into another library or into an Android app, first we need to open our project-level &lt;code&gt;build.gradle&lt;/code&gt; file, and instruct it to use &lt;code&gt;mavenLocal()&lt;/code&gt; as repository:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="k"&gt;buildscript&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;repositories&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
        &lt;span class="n"&gt;mavenLocal&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; 
        &lt;span class="o"&gt;...&lt;/span&gt; 
    &lt;span class="o"&gt;}&lt;/span&gt; 
    &lt;span class="o"&gt;...&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt; 

&lt;span class="k"&gt;allprojects&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;repositories&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
        &lt;span class="n"&gt;mavenLocal&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; 
        &lt;span class="o"&gt;...&lt;/span&gt; 
    &lt;span class="o"&gt;}&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once this is done, we must include our library as a dependence in our app-level (or module-level) &lt;code&gt;build.gradle&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="k"&gt;dependencies&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;implementation&lt;/span&gt; &lt;span class="s2"&gt;"com.me:my-awesome-lib:1.0.0"&lt;/span&gt; 
    &lt;span class="o"&gt;...&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Our library's identifier, in this case &lt;code&gt;com.me:my-awesome-lib:1.0.0&lt;/code&gt;, has the format &lt;code&gt;groupId:artifactId:versionName&lt;/code&gt;, as we instructed to Gradle earlier. This information can also be seen in the .pom file generated with the publication.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So we arrived at the final step! Now it's time to compile our project and check that our library is imported correctly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Today we tried an alternative to publishing an Android library, which hopefully will help you speed up your development process. We configured a Gradle file to publish debug and release versions of an Android library to Maven local repository, and then we learnt how to integrate it into our main project. I hope this article serves as one more tool for your daily work as an Android library developer.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Game Development Roadmap For Beginners</title>
      <author>Rocky</author>
      <pubDate>Thu, 22 Jul 2021 15:39:49 +0000</pubDate>
      <link>https://dev.to/codelivly/game-development-roadmap-for-beginners-4a53</link>
      <guid>https://dev.to/codelivly/game-development-roadmap-for-beginners-4a53</guid>
      <description>&lt;p&gt; By &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/&amp;amp;ved=2ahUKEwier_PQ1fbxAhXa4jgGHVYsAvoQFjAAegQIBxAC&amp;amp;usg=AOvVaw1PUPii-XosNgl1ZTInOseb"&gt;&lt;span&gt;Codelivly&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;:&lt;/p&gt;
&lt;p&gt;Game development is the art of creating games. Game developement is very exciting and intresting. It is a great carrer to pursue as there are many gamers around the world who play games in their daily life. But there are not a lot of game developers so there is a high demand for game developers.&lt;/p&gt;
&lt;p&gt;Average salary of a game developer is between $65k to $80k per month. You can also become a indie game developer who creates games individually and publish it to the playstore or appstore.&lt;/p&gt;
&lt;p&gt;So you have decided that you want to become a game developer but don’t know where to begin your journey don’t worry because today this is artcle is about game development roadmap and at end of this article you will be able to :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Have clear way of your journey&lt;/li&gt;
&lt;li&gt;And Start making games&lt;/li&gt;
&lt;/ul&gt;
&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;Read More&lt;/b&gt;: &lt;/span&gt;&lt;span&gt;&lt;a href="https://bit.ly/3hXvBBO"&gt;Game Development Roadmap &lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>Internationalization(i18n) and Localization(L10n)</title>
      <author>Dawei Ma</author>
      <pubDate>Thu, 22 Jul 2021 15:14:06 +0000</pubDate>
      <link>https://dev.to/madawei2699/international-i18n-and-localization-l10n-48d2</link>
      <guid>https://dev.to/madawei2699/international-i18n-and-localization-l10n-48d2</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;a href="#internationalizationi18n"&gt;internationalization(i18N)&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#problems-to-be-solved-for-internationalization"&gt;Problems to be solved for internationalization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#text-encoding"&gt;Text Encoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#locale"&gt;locale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#language-and-country-codes"&gt;Language and Country Codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gettext"&gt;gettext&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#internationalization-process"&gt;Internationalization Process&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#localizationl10n"&gt;Localization(L10N)&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#localization-process"&gt;Localization Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#develop-a-localization-strategy"&gt;Develop a localization strategy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#region-and-language"&gt;Region and Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#add-new-regionlanguageservice"&gt;Add new region/language/service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#incremental-localization"&gt;Incremental Localization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#management-of-translation"&gt;Management of translation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localized-implementation"&gt;Localized implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localized-multilingual-implementation"&gt;Localized multilingual implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-challenges-of-localization"&gt;The Challenges of Localization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#do-you-need-to-consider-seo"&gt;Do you need to consider SEO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localization-of-product-design"&gt;Localization of product design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localization-under-microservices"&gt;Localization under Microservices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localized-technical-or-business-standards-development"&gt;Localized technical or business standards development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#development-environment-and-business-processes"&gt;Development Environment and Business Processes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#static-text-processing"&gt;Static text processing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#whether-to-store-language-and-region-settings"&gt;Whether to store language and region settings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localization-of-back-end-services"&gt;Localization of back-end services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localization-of-third-party-services-and-resources"&gt;Localization of third-party services and resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#release-process"&gt;Release Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localization-under-micro-front-end-architecture"&gt;Localization under micro front-end architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localized-testing"&gt;Localized testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#localization-platform"&gt;Localization Platform&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A successful product needs to go global through many stages, from the perspective of software development there are two main processes: internationalization and localization.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1FGOTsnz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/53875fc9-00ac-e8e2-8d91-06399755dcba.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1FGOTsnz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/53875fc9-00ac-e8e2-8d91-06399755dcba.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A language environment is the use of a specific language or language variant within a country or geographic region, which determines the format and parsing of dates, times, numbers and currencies, as well as the various measurement units and translated names of time zones, languages, countries and regions. &lt;strong&gt;Internationalization enables a piece of software to handle multiple language environments, localization enables a piece of software to support a specific regional language environment&lt;/strong&gt;. This means that the process of globalization is to first make the software internationalized, and then to do the localization implementation so that it can support a specific language environment in a specific region.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;They are often abbreviated as i18n (18 means that there are 18 letters between i and n in the word "internationalization") and L10n, respectively, due to the length of their single words, using a capital L to distinguish the i in i18n and to make it easy to distinguish the lowercase l from the 1.(&lt;a href="https://en.wikipedia.org/wiki/Internationalization_and_localization"&gt;Wikipedia&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#internationalizationi18n"&gt;
  &lt;/a&gt;
  internationalization(i18N)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#problems-to-be-solved-for-internationalization"&gt;
  &lt;/a&gt;
  Problems to be solved for internationalization
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The ability to display text in the user's native language.&lt;/li&gt;
&lt;li&gt;Ability to enter text in the user's native language.&lt;/li&gt;
&lt;li&gt;Ability to process text in the user's native language in a specific encoding.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#text-encoding"&gt;
  &lt;/a&gt;
  Text Encoding
&lt;/h3&gt;

&lt;p&gt;The Unicode character set can display almost every character known to man in code points ranging from 0 to 10FFFF (hexadecimal). It requires at least 21 bits for storage. The text encoding system UTF-8 adapts Unicode code points to a reasonable 8-bit data stream and is compatible with the ASCII data processing system.UTF stands for Unicode Transformation Format.&lt;/p&gt;

&lt;p&gt;Since 2009, UTF-8 has been the dominant encoding form on the World Wide Web. As of November 2019, UTF-8 is used in 94.3% of all web pages (some of which are ASCII only, as it is a subset of UTF-8), and 96% of the top 1000 pages. Therefore, UTF-8 encoding is recommended for internationalization.&lt;/p&gt;

&lt;p&gt;This article &lt;a href="https://mp.weixin.qq.com/s/j5hfWOBsOMYcQuMG36zqNA"&gt;Internationalization of IT products is never enough to "support English"&lt;/a&gt; mentions that some GBK-encoded texts have many The text that "looks the same" is actually slightly different. However, in order to save space in Unicode, the same Code Point is assigned to them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SKe-2Z0l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/274d1394-df55-c0cb-331c-635979581c65.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SKe-2Z0l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/274d1394-df55-c0cb-331c-635979581c65.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How can we distinguish these identical characters with the same code (displaying a character in a different glyph, i.e. the same character)? This requires the help of locale.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When calculating the number of Chinese characters, it is usually done by character form, i.e., simplified, traditional, variant, new, old, etc., of a character representing the same phonetic meaning. This way of counting is in fact counting variants. Therefore, the number of glyphs included in large dictionaries has long been wrongly regarded as the size of the Chinese character system.(&lt;a href="https://en.wikipedia.org/wiki/Grapheme"&gt;Wikipedia&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#locale"&gt;
  &lt;/a&gt;
  locale
&lt;/h3&gt;

&lt;p&gt;A locale is the language environment of the software at runtime, which includes Language, Territory and Codeset. A locale is written in the following format: Language[_Territory[. UTF8. In Linux, a locale consists of the following parts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;LC_COLLATE: Controls character sorting.&lt;/li&gt;
&lt;li&gt;LC_CTYPE: controls the character handling function in handling upper and lower case or determining if it is a character.&lt;/li&gt;
&lt;li&gt;LC_MESSAGES: format of prompt messages.&lt;/li&gt;
&lt;li&gt;LC_MONETARY: format of currency.&lt;/li&gt;
&lt;li&gt;LC_NUMERIC: the format of the number.&lt;/li&gt;
&lt;li&gt;LC_TIME: the format of time.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If your locale is en_US.UTF8, you must change it to zh_CN.UTF8 to display Chinese correctly. All supported locales are stored in the &lt;code&gt;/usr/share/locale&lt;/code&gt; directory of the macOS operating system.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yU_RiJsK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/b40d3f61-046a-df48-735f-b27ec188a3e8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yU_RiJsK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/b40d3f61-046a-df48-735f-b27ec188a3e8.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#language-and-country-codes"&gt;
  &lt;/a&gt;
  Language and Country Codes
&lt;/h3&gt;

&lt;p&gt;The same language may have some subtle differences in different countries and regions, for example, there are some differences between American English and British English. The same country may also have multiple languages, for example, China has simplified and traditional languages. In the introduction to locale above we saw the use of &lt;code&gt;language_region&lt;/code&gt; to express the exact language of a country.&lt;/p&gt;

&lt;p&gt;For countries and languages ISO has developed corresponding standard codes &lt;a href="https://en.wikipedia.org/wiki/ISO_3166-1"&gt;ISO 3166-1&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/ISO_639-1"&gt;ISO 639-1&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The browser uses the language code to send the name of the language accepted by the browser in the &lt;code&gt;Accept-Language&lt;/code&gt; HTTP header. For example: it, de-at, es, pt-br.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gettext"&gt;
  &lt;/a&gt;
  gettext
&lt;/h3&gt;

&lt;p&gt;GNU gettext is the GNU Internationalization and Localization (i18n) library, which is often used to write multilingualization (M17N) programs. Many programming languages such as C, C++, Python, PHP, Rust, Elixir, etc. support the use of gettext from within the language.&lt;/p&gt;

&lt;p&gt;The following is the flow of how Java calls gettext to complete internationalization.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QkFZxGmL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/4a7179b3-ccae-ca0e-8554-1cb19a753e7d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QkFZxGmL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/4a7179b3-ccae-ca0e-8554-1cb19a753e7d.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;xgettext scans the source code to extract the input strings for the i18n functions tr(), trc(), and trn() and creates a pot file containing all the source language strings. The object that the translator needs to work with is the .po file, which is generated by the msginit program from the .pot template file.&lt;/li&gt;
&lt;li&gt;msgmerge merges the strings into a po file containing the translations for a single locale.&lt;/li&gt;
&lt;li&gt;msgfmt is used to generate Java class files that inherit from the Java &lt;code&gt;ResourceBundle&lt;/code&gt; class.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following diagram shows the flow of internationalization in PHP using gettext.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n8ZR74EV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/5da7482c-d121-958e-606e-ff36aded4a1f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n8ZR74EV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/5da7482c-d121-958e-606e-ff36aded4a1f.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Elixir implements i18n's directory structure using gettext.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;priv/gettext
└─ en_US
|  └─ LC_MESSAGES
|     ├─ default.po
|     └─ errors.po
└─ it
   └─ LC_MESSAGES
      ├─ default.po
      └─ errors.po
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#internationalization-process"&gt;
  &lt;/a&gt;
  Internationalization Process
&lt;/h3&gt;

&lt;p&gt;The process of using gettext is a typical process of making an application support i18n internationalization.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Configure the i18n framework. i18n framework automatically obtains the relevant language files by the language identifier of the system or browser (in the case of web applications). For example, gettext uses a file with .mo suffix, while Javascript is usually a .json file and Java is a .properties file.&lt;/li&gt;
&lt;li&gt;extract the hard-coded source language text. Call the i18n function at the hard-coded place. For this part can be extracted manually, or automatically through a program or plugin (e.g. i18next internationalization framework for Javascript has i18next-scanner).&lt;/li&gt;
&lt;li&gt;finally implement &lt;strong&gt;localization&lt;/strong&gt;. Translate (either manually or by machine translation, there are also relevant translation platforms that can be integrated) these extracted files in the language of the country to be supported.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#localizationl10n"&gt;
  &lt;/a&gt;
  Localization(L10N)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#localization-process"&gt;
  &lt;/a&gt;
  Localization Process
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YnuZDFRI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/9adbc2f4-7fa4-0f67-046b-f135c4b117b7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YnuZDFRI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/9adbc2f4-7fa4-0f67-046b-f135c4b117b7.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A typical localization flow chart is shown in the figure above. Among the parties involved are.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dev Team: Developers make the system internationalized and deploy the machine-translated version of the multilingual version to the integration environment for testers to test, and can build an automated translation integration pipeline.&lt;/li&gt;
&lt;li&gt;Market Team: Confirm the market and supported languages of the product, organize the glossary of terms involved in the product, and purchase professional translation services to determine the final multilingual translated version. In the case of large companies, there may be a dedicated globalization team to do this work.&lt;/li&gt;
&lt;li&gt;Translation management platform (TMS): completes the management of translation languages, generally with specific API interfaces or SDK development kits that can be integrated into CI/CD environments and can automate the upload and download of source and translation language files. It also has a management interface for translators to modify and determine the final version of the translation. Can provide multiple machine translation services, as well as provide human translation for purchase or complete human translation in an open source collaborative manner.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#develop-a-localization-strategy"&gt;
  &lt;/a&gt;
  Develop a localization strategy
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#region-and-language"&gt;
  &lt;/a&gt;
  Region and Language
&lt;/h4&gt;

&lt;p&gt;This piece begins with these basic antecedent considerations.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Business implications of region&lt;/li&gt;
&lt;li&gt;Default region of the user&lt;/li&gt;
&lt;li&gt;Default language of the locale&lt;/li&gt;
&lt;li&gt;Whether different regions use the same system&lt;/li&gt;
&lt;li&gt;Whether to support users to switch locales&lt;/li&gt;
&lt;li&gt;Whether the user can belong to multiple locales&lt;/li&gt;
&lt;li&gt;Whether there is a one-to-one relationship between locale and country&lt;/li&gt;
&lt;li&gt;Mapping between locale and language&lt;/li&gt;
&lt;li&gt;Is there a linkage between locale and language (can the user see all languages supported by all locales)&lt;/li&gt;
&lt;li&gt;Whether language switching needs to be saved to the user's personal information&lt;/li&gt;
&lt;li&gt;Whether the user's default language needs to be set by the user's environment language identifier (OS or browser)&lt;/li&gt;
&lt;li&gt;Whether the &lt;strong&gt;service is deployed in multiple geographies and whether the data is isolated in multiple geographies&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#add-new-regionlanguageservice"&gt;
  &lt;/a&gt;
  Add new region/language/service
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Whether the system can support the process of adding new regions and new regions&lt;/li&gt;
&lt;li&gt;Whether the system can support the process of adding new languages and the process of adding new languages&lt;/li&gt;
&lt;li&gt;The process of localization when adding subservices to the system&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#incremental-localization"&gt;
  &lt;/a&gt;
  Incremental Localization
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Localization process when new pages or components appear when localization is implemented&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#management-of-translation"&gt;
  &lt;/a&gt;
  Management of translation
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Whether you need a translation management platform (TMS)&lt;/li&gt;
&lt;li&gt;Selection of Translation Management Platform&lt;/li&gt;
&lt;li&gt;Integration of translation management platform&lt;/li&gt;
&lt;li&gt;Whether to subscribe to professional translation services&lt;/li&gt;
&lt;li&gt;Development of collaborative processes with translation teams&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#localized-implementation"&gt;
  &lt;/a&gt;
  Localized implementation
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Whether each service of the system is localized by its own development team&lt;/li&gt;
&lt;li&gt;Whether there is a dedicated localization team to do localization&lt;/li&gt;
&lt;li&gt;The collaboration mode between localization team and each service development team

&lt;ul&gt;
&lt;li&gt;Whether localization is done by code Open PR&lt;/li&gt;
&lt;li&gt;How each service development team does incremental localization&lt;/li&gt;
&lt;li&gt;Synchronization of knowledge on localization among teams&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Development of technical standards for localization and promotion within the organization

&lt;ul&gt;
&lt;li&gt;Use of industry standard libraries (e.g. Unicode Common Locale Data Repository &lt;a href="http://cldr.unicode.org/"&gt;CLDR&lt;/a&gt;) for language-specific formats for dates, times, time zones, numbers, and currencies&lt;/li&gt;
&lt;li&gt;The locale identifier is in &lt;code&gt;language_region&lt;/code&gt; format, e.g. en_US for United States English language.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#localized-multilingual-implementation"&gt;
  &lt;/a&gt;
  Localized multilingual implementation
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Distinguish multilingualism by subdomains (gTLDS) or ccTLDs (e.g. ccTLDs). For example: &lt;a href="https://en.wikipedia.org/"&gt;https://en.wikipedia.org/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Distinguish multilingualism by URL paths. For example: &lt;a href="https://localizejs.com/de/"&gt;https://localizejs.com/de/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Multilingual by URL query parameters (not SEO friendly). e.g. &lt;a href="https://locize.com/?lng=de"&gt;https://locize.com/?lng=de&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Multi-language by user language setting. E.g. &lt;a href="https://myaccount.google.com/language"&gt;https://myaccount.google.com/language&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Multilingual by browser local storage. E.g. &lt;a href="https://www.instagram.com/"&gt;https://www.instagram.com/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#the-challenges-of-localization"&gt;
  &lt;/a&gt;
  The Challenges of Localization
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g4BPqDvc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/f655798a-fd23-5828-1b72-b6ecd6d83b7a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g4BPqDvc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/f655798a-fd23-5828-1b72-b6ecd6d83b7a.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The challenges of localization are mainly issues arising from differences in language, culture, writing habits and laws in different geographic areas, in the following categories.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Text encoding: For text in most Western European languages, ASCII character encoding is sufficient. However, languages that use non-Latin alphabets (e.g. Russian, Chinese, Hindi and Korean) require a larger character encoding, such as Unicode.&lt;/li&gt;
&lt;li&gt;Singular and plural: Different languages have different forms of singular and plural. The plural is used to represent a number that is "not one". The singular and plural forms vary from language to language, with the most common plural form being used to represent numbers of two or greater. In some languages, it is also used to represent fractions, zeroes, negative numbers, or twos.&lt;/li&gt;
&lt;li&gt;Image translation: Images with text need to be translated.&lt;/li&gt;
&lt;li&gt;Dynamic data (data from the API): The data passed from the back-end to the front-end that is displayed on the interface needs to be localized. But it is a challenge to distinguish the source of this data, for example, although the data is sourced from the back-end, it may come from a database, it may come from a file, it may come from other internal services, or it may come from a third-party dependent service.&lt;/li&gt;
&lt;li&gt;Icons: Some icons that are highly recognizable in one region may look completely unrecognizable to users in other regions or be something else.&lt;/li&gt;
&lt;li&gt;Name/address: The order of the last name and first name, and the order in which addresses are written. For example, in Chinese, the last name comes first, then the first name.&lt;/li&gt;
&lt;li&gt;Gender: Some languages such as French place a lot of emphasis on gender.&lt;/li&gt;
&lt;li&gt;Phone: The format of phone calls varies from country to country.&lt;/li&gt;
&lt;li&gt;Voice: Inappropriate voices or cues may be offensive, and some countries are sensitive to the gender of the voice.&lt;/li&gt;
&lt;li&gt;Color: Colors and shades are associated with geographic regions or markets, for example, red in the U.S. indicates a decline and in the A-share indicates a rise.&lt;/li&gt;
&lt;li&gt;Units of Measure

&lt;ul&gt;
&lt;li&gt;Currency: Currency formatting must take into account the currency symbol, the position of the currency symbol and the position of the minus sign. Most currencies use the same decimal separator and thousands separator as the numbers in the regional or area setting. However, in some places this is not the case, for example in Switzerland, the decimal separator for the Swiss franc is a period.&lt;/li&gt;
&lt;li&gt;Date and time: The internationalization of date/time involves not only the geographical location (e.g. localized representation of calendar such as day of the week, month, etc.), but also the time zone (TimeZone, for UTC/GMT offsets). Time zones are not only geographically defined, but also politically defined. For example, China geographically spans 5 time zones, but only uses one unified time zone. Many other countries have "daylight saving time" and the difference between Berlin time and Beijing time is subject to change. Sometimes it is 7 hours (winter time), sometimes it is 6 hours (daylight saving time).&lt;/li&gt;
&lt;li&gt;Numbers: There are also differences in the way numbers are represented in different countries and regions. Factors that affect the representation of numbers include the representation of numeric characters, the representation of numeric symbols, the type of numbers, etc.&lt;/li&gt;
&lt;li&gt;Weight/length/physical units: Because of the differences in units, multiple geographical versions of the same set of data need to be converted.&lt;/li&gt;
&lt;li&gt;Business-related units of measurement: For example, different countries have different billing rules for their products. This requires business staff support to find out the corresponding position and give conversion rules.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Sentence length: German is usually longer than English, and Arabic requires more vertical space.&lt;/li&gt;
&lt;li&gt;Writing direction: In many languages it is left to right, but in Hebrew and Arabic it is right to left and in some Asian languages it is vertical.&lt;/li&gt;
&lt;li&gt;Punctuation: e.g. quotation marks ("") in English, low quotation marks (,,") in German and quotation marks (&amp;lt;&amp;lt;&amp;gt;&amp;gt;) in French.&lt;/li&gt;
&lt;li&gt;Line breaks/splits: The rules of Asian CJK (Chinese, Japanese, Korean) character set languages are completely different from those of Western languages. For example, unlike most Western written languages, Chinese, Japanese, Korean and Thai do not necessarily use spaces to separate one word from the next. Thai does not even use punctuation.&lt;/li&gt;
&lt;li&gt;Case conversion: English has case conversion, while Chinese has no case distinction.&lt;/li&gt;
&lt;li&gt;Legal related: e.g. GDPR using personal data of EU citizens.&lt;/li&gt;
&lt;li&gt;Politics-related: For example, localization involves the display of flags and maps, which can easily cause major accidents if not handled properly.&lt;/li&gt;
&lt;li&gt;Sorting methods: For example, English is sorted alphabetically, while Chinese can be sorted in pinyin.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#do-you-need-to-consider-seo"&gt;
  &lt;/a&gt;
  Do you need to consider SEO
&lt;/h4&gt;

&lt;p&gt;If you are localizing a website for toC, you need to consider some things related to search engine optimization (SEO), such as this &lt;a href="https://marketfinder.thinkwithgoogle.com/intl/en/guide/how-to-approach-i18n/#make-languages-easily-discoverable"&gt;How to approach an international strategy&lt;/a&gt; mentions some key points.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you offer your site in multiple languages, use a single language for content and navigation on each page, and avoid side-by-side translations.&lt;/li&gt;
&lt;li&gt;Keep the content in each language on a separate URL and mark the language in the URL. For example, the URL &lt;code&gt;www.mysite.com/de/&lt;/code&gt; would tell the user that the page is in German.&lt;/li&gt;
&lt;li&gt;Display the language you want to locate to Google via the hreflang meta tag. For example, &lt;code&gt;&amp;lt;link rel="alternate" href="http://example.com" hreflang="en-us" /&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Do not translate only the template text, but also the content within the template.&lt;/li&gt;
&lt;li&gt;do not use automatic translation exclusively, which can affect the user experience&lt;/li&gt;
&lt;li&gt;don't use cookies or scripting techniques to switch languages, Google crawlers can't index this content properly.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#localization-of-product-design"&gt;
  &lt;/a&gt;
  Localization of product design
&lt;/h4&gt;

&lt;p&gt;Using a more localized design for the same content in different geographies can lead to better results, as mentioned in the article &lt;a href="http://www.woshipm.com/pd/4404611.html"&gt;Internationalization and Localization of Product Design&lt;/a&gt; about the different presentation of Spotify's song covers in different countries.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y-hx-FMO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/165e3e02-74a9-a776-cc5a-cf8ef85f8f46.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y-hx-FMO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/165e3e02-74a9-a776-cc5a-cf8ef85f8f46.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#localization-under-microservices"&gt;
  &lt;/a&gt;
  Localization under Microservices
&lt;/h3&gt;

&lt;p&gt;The localization process for a single application is relatively simple from an architectural point of view. However, many applications nowadays are microservice architectures with multiple teams collaborating on the development model. If individual teams are responsible for the localization of their respective services, there must be a unified localization committee to develop technical standards for localization.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The identification of language markers.&lt;/li&gt;
&lt;li&gt;The design of language switching in front and back-end solutions.&lt;/li&gt;
&lt;li&gt;The design of translation automation process, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or there is a dedicated localization team to implement localization, and this team will be responsible for solving the previous problems. The project I am involved in falls into the latter category. Our team completed the localization of nearly a dozen microservice subsystems for the entire large system, and these dozens of systems were handled by several large groups of multiple teams, so the collaborative process of such cross-functional requirements (CFR) across multiple teams is a complex task.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#localized-technical-or-business-standards-development"&gt;
  &lt;/a&gt;
  Localized technical or business standards development
&lt;/h4&gt;

&lt;p&gt;Prior to the implementation of localization, it is important to identify the relevant technical or operational standards, some of which are.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Internationalization implementation standards for different technology stacks in front and back ends. Since there may be multiple technology stacks in microservices, each with its own internationalization implementation, the development of implementation standards for different technology stacks can help to use the same implementation across services.&lt;/li&gt;
&lt;li&gt;The determination of locale markers.

&lt;ul&gt;
&lt;li&gt;The possibility of storing language-related text in front-end or back-end static text extraction to files named by language identifiers, e.g. en.json for static text in English, and en_US.json for text related to US English (e.g. units of measure, dates, numbers, currency, etc.).&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;language_region&lt;/code&gt; format is uniformly used in remote service calls (front-end calls to back-end or back-end calls to other internal or external services), e.g. en_US stands for getting the localized version of the English language for the US region.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Language specific formats for dates, times, time zones, numbers and currencies use industry standard libraries. For example, using libraries that implement the &lt;a href="https://en.wikipedia.org/wiki/Common_Locale_Data_Repository"&gt;CLDR&lt;/a&gt; standard.&lt;/li&gt;
&lt;li&gt;Dynamic data type identification. Identifying, for example, which data comes from internal systems (databases or files); which comes from external systems; whether these dynamic data have internationalization capabilities; and how to localize them in stages.&lt;/li&gt;
&lt;li&gt;Localization of documents. Localization of electronic documents (PDF) or emails generated by the back-office system. If these documents are sent to clients, also consider whether to generate documents in the client's language preference.&lt;/li&gt;
&lt;li&gt;List of supported regions and languages. For example, whether the error page is entered when an unsupported country or language appears or whether the default regional or language localized version is displayed.&lt;/li&gt;
&lt;li&gt;The default region and default language.&lt;/li&gt;
&lt;li&gt;whether the region and language have a binding relationship.&lt;/li&gt;
&lt;li&gt;Whether the language switch needs to be saved to the user's personal information.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#development-environment-and-business-processes"&gt;
  &lt;/a&gt;
  Development Environment and Business Processes
&lt;/h4&gt;

&lt;p&gt;In fact, the most time-consuming part of localization for our team was the start-up of the local environment. With so many services involved and slight differences in the way different services are launched, and even wrong guidance documents, we needed to keep stepping on the toes to finish setting up the environment. In the end, our way of dealing with this was to contact the development teams, and each time we did the pre-localization of a service, we would ask the development team to help us set up the local environment.&lt;/p&gt;

&lt;p&gt;Another difficulty was our lack of understanding of the business. Since each service has a large number of components and pages, including dynamic data from different sources of back-end services, it was hard to figure out just by ourselves. In the end, when we did the pre-localization of this service, we would get business analysts from the development team to help us introduce the business processes involved in this service.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#static-text-processing"&gt;
  &lt;/a&gt;
  Static text processing
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Sorting through static text on the front and back ends to identify which systems have internationalization capabilities (initial language versions have had locale files extracted and internationalization libraries set up).&lt;/li&gt;
&lt;li&gt;Identifying where date, currency, and number formats occur and calling the industry standard libraries identified by the localization technical standards in those places.&lt;/li&gt;
&lt;li&gt;Identification of incremental static text translation processes, which need to be used to process new texts when they are added after the system has already been localized, using localization processes.&lt;/li&gt;
&lt;li&gt;Automated integration of translation platforms, where development teams use scripts or CI/CD streams to automatically upload and download files in the original and translated languages.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#whether-to-store-language-and-region-settings"&gt;
  &lt;/a&gt;
  Whether to store language and region settings
&lt;/h4&gt;

&lt;p&gt;Some internationalized sites have language or region switching designed as hyperlinks that allow users to access different language and region versions of the site, which do not require storing language or region configurations.&lt;/p&gt;

&lt;p&gt;Sites with user profile configuration generally offer to set the preferred language and region in the profile settings, so that users can synchronize the last set language or region when switching devices.&lt;/p&gt;

&lt;p&gt;If your site users switch devices infrequently, a simple process can store these configurations in the browser store. When the user switches devices, the default settings are automatically restored. The advantage of such a design is that it is simple, and it is easier to overtake to other solutions later. The specific design chosen needs to be combined with the specific business to choose.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#localization-of-backend-services"&gt;
  &lt;/a&gt;
  Localization of back-end services
&lt;/h4&gt;

&lt;p&gt;Localization of back-end services involves the following four components.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Static text. These can be read by walking through the code to find the relevant string.&lt;/li&gt;
&lt;li&gt;Databases, caches or files. Initial data that does not meet localization needs can be found by walking through the database initialization script, but for dynamically stored data, tables need to be designed to meet multilingual storage as well. For some resource files where translation is necessary there is also a need to provide multilingual versions and to adapt the code that uses the files.&lt;/li&gt;
&lt;li&gt;Remote calls to other internal services (RPC). The locale markers for internal service calls are part of the localization technology standards developed. For example, the &lt;code&gt;locale = en_US&lt;/code&gt; HTTP header can be used to request pages in English for the United States.&lt;/li&gt;
&lt;li&gt;Generate documents (PDF or Email). Generated documents include the final language version of the template static text and dynamic data rendering. Especially when these documents and emails need to be sent to users, they need to be generated in the language that matches the user's language.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If the technology stack of the back-end service is different, the localization team also needs to summarize the internationalization process for the different technology stacks of the back-end service and synchronize it with other development teams within the organization.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#localization-of-thirdparty-services-and-resources"&gt;
  &lt;/a&gt;
  Localization of third-party services and resources
&lt;/h4&gt;

&lt;p&gt;There are cases of calling external services in the backend service remote call. If you call external services, you need to confirm whether the external services support multi-language version first, and if they do, you can integrate them according to the docking documentation. If not, you need to contact the external service provider to determine the support plan.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#release-process"&gt;
  &lt;/a&gt;
  Release Process
&lt;/h4&gt;

&lt;p&gt;Since the implementation of localization involves the transformation of more than a dozen subservices, localization can be controlled by &lt;a href="https://martinfowler.com/articles/feature-toggles.html"&gt;Feature Toggles&lt;/a&gt; to be turned on or off in different environments. The tests affected by localization (unit tests, integration tests and UI tests) also need to be controlled via Feature Toggles so that the test suite of the original service is minimally affected.&lt;/p&gt;

&lt;p&gt;Once all services have been localized and implemented, the localized Feature Toggles for all services can be opened to bring the final version online.&lt;/p&gt;

&lt;p&gt;There are two designs to choose from regarding localized Feature Toggles.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Centralized Feature Toggles. for example, a centralized feature configuration service can be built, and all localization-related services request this service to get the configuration switch status. The advantage is that localized features can be switched on and off in real time without going back online. The downside is that there is no flexibility to control the localized features of each service.&lt;/li&gt;
&lt;li&gt;Independent Feature Toggles: In contrast to centralized, each service sets its own localized Feature Toggles for flexible decoupling, but the downside is that each switch requires a new release to bring a single service online.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#localization-under-micro-frontend-architecture"&gt;
  &lt;/a&gt;
  Localization under micro front-end architecture
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vV8EnTA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/f57bbd44-f288-c81a-9f26-a55b767c6044.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vV8EnTA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/f57bbd44-f288-c81a-9f26-a55b767c6044.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As the above figure shows a micro front-end architecture website, the whole website interface is composed of five service pages of A/B/C/D/E. The language switch button is on service A. When the user switches from English to Chinese, the other services B/C/D/E need to switch their respective interfaces to the Chinese language version.&lt;/p&gt;

&lt;p&gt;One way is to have the internationalization (i18n) library instance initialized by Service A and mounted on the browser window object when the browser loads the page, and Services B/C/D/E use the internationalization library instance object initialized by Service A. When switching languages, the internationalization instance object of Service A switches the language of all services.&lt;/p&gt;

&lt;p&gt;The locale files for each service can be loaded into the browser uniformly by Service A. The advantage of this approach is that we know when the last language file is loaded, which means that the localization of all services on the whole page is initialized and the user can switch languages normally.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#localized-testing"&gt;
  &lt;/a&gt;
  Localized testing
&lt;/h3&gt;

&lt;p&gt;Localization testing verifies that the application or website content meets the language, cultural and geographical requirements of a particular country or region.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--desP9ct_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/1b30e009-c4bb-0d8d-f148-82ac680671e9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--desP9ct_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bmpi.dev/1b30e009-c4bb-0d8d-f148-82ac680671e9.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more details, see this article &lt;a href="https://levelup.gitconnected.com/localization-testing-9b8db20fb62f"&gt;Localization testing: why and how to do it&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#localization-platform"&gt;
  &lt;/a&gt;
  Localization Platform
&lt;/h3&gt;

&lt;p&gt;A very important piece of localization is the selection of a suitable translation management platform (TMS), which generally has the following function points.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Glossary: A glossary of specialized brand terms or domain terms that can help translators more accurately translate specialized language related to a product or market.&lt;/li&gt;
&lt;li&gt;Translation Memory (TM): TM is a database for storing strings of previously translated content. Translations are reused for the same or similar content. This ensures consistency of translations.&lt;/li&gt;
&lt;li&gt;Context Editor (In-Context Editor): This editor crawls website pages and allows translators to understand the context of the entire page, helping to improve the quality of the translation.&lt;/li&gt;
&lt;li&gt;Machine Translations (Machine Translations): most TMS platforms are docked to some machine translation platforms (such as Google Translate), which can automatically translate the target language and are suitable for developers.&lt;/li&gt;
&lt;li&gt;Human Translations: Professional human translation services can be ordered from the TMS platform. However, there are also features such as Crowdin, which provides localized translation collaboration for open source projects, and anyone can participate in this project for free, and the translated text with high votes will be used first.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Major localization platforms.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://crowdin.com/"&gt;Crowdin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lokalise.com/"&gt;Lokalise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://localizejs.com"&gt;localizejs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://phrase.com/"&gt;Phrase&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This concludes some introductions to internationalization and the basic process of localization. Localization is a complex task, and the biggest difficulty is &lt;strong&gt;not knowing enough about the target language and culture&lt;/strong&gt;. But after you've read this article, I hope it will give you more confidence to do localization-related work.&lt;/p&gt;

</description>
      <category>i18n</category>
      <category>l10n</category>
      <category>localization</category>
      <category>translations</category>
    </item>
    <item>
      <title>Core 2 M5 IoT Stack AWS EduKit Unboxing</title>
      <author>Mick</author>
      <pubDate>Thu, 22 Jul 2021 15:11:34 +0000</pubDate>
      <link>https://dev.to/aws-builders/core-2-m5-iot-stack-aws-edukit-unboxing-1gp0</link>
      <guid>https://dev.to/aws-builders/core-2-m5-iot-stack-aws-edukit-unboxing-1gp0</guid>
      <description>&lt;p&gt;I have no idea how I missed this one, I only just caught this on my network someone (can't recall who) was promoting the last days to register for the &lt;a href="https://www.hackster.io/contests/Healthy-Spaces-with-AWS"&gt;hackster healthy spaces challenge&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I didn't end up registering for the free hardware but I went ahead and purchased one and registered for the event. I'm going to run through unboxing the Core 2 M5 Stack and first impressions.&lt;br&gt;
Where cloud?&lt;/p&gt;

&lt;p&gt;OK, you're probably wondering where the cloud part comes in and if you know me, more specially where does the AWS part come in. Well, this is the M5Stack Core2 ESP32 IoT Development Education Kit for AWS which as you've probably gathered is geared towards using the device with AWS IoT, it's also branded with AWS logos.&lt;br&gt;
Why this kit?&lt;/p&gt;

&lt;p&gt;Apart from just being keen on AWS in general, this device looked pretty cool on the surface. In the past I've dabbled in various micro controllers and typically what I've found has been more challenging is once you start adding a bunch of sensors the bread board gets pretty busy and it's usually not so plug n play. If you want battery than that will be another challenge. This device has a bunch of built in sensors (and LiPO) built-in that you can start using with little effort, helps for prototyping quickly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unboxing"&gt;
  &lt;/a&gt;
  Unboxing
&lt;/h3&gt;

&lt;p&gt;The box itself is cool, branded in the M5 stack logo on the cardboard and tape. I like this subtle detail. The overall weight of the unit is very light, the approximate weight is around 100 grams.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ky56aw77--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fpz7xm3ws5qx0d9xisly.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ky56aw77--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fpz7xm3ws5qx0d9xisly.png" alt="core2 m5 close"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rh8qkZ-q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2wmljjdo5rlces8p1oao.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rh8qkZ-q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2wmljjdo5rlces8p1oao.png" alt="core2 m5 open"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Upon opening the box you'll be greeted with a pretty decent chunk of bubble wrap. The actual contents of the box are pretty small. I should note that I purchased an additional cable that I wanted and an additional sensor. I'd be curious to hear if the box is smaller if you just get the Core 2 on its own?&lt;/p&gt;

&lt;p&gt;The actual Core 2 packaging reminds me of a matchbox, sliding the contents outwards. I really liked the AWS branding on the packaging but in general don't expect Apple quality packaging. There is a sticker that needs to be removed before you can slide it out which is a little tricky or you'll need a knife or something.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v5MZOaja--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g23on4g3gmqw7ebka05n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v5MZOaja--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g23on4g3gmqw7ebka05n.png" alt="core2 m5 inside"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aLYhW9oc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e80abru7crffzz6uew7u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aLYhW9oc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e80abru7crffzz6uew7u.png" alt="core2 m5 matchbox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see from the size, it's quite a small footprint, it easily fits in the palm of my hand.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ux-vJ3BN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03o7yvkvnbht9y4w1fe4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ux-vJ3BN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03o7yvkvnbht9y4w1fe4.png" alt="palm of hand"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-in-the-box"&gt;
  &lt;/a&gt;
  Whats in the box
&lt;/h3&gt;

&lt;p&gt;Firstly, there are no instructions in the box, there is no QR code or anything on the box guiding you to what you're supposed to do next. The box is limited to the following items:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Core 2 M5 Stack device
2. USB-C to USB-A cable
3. Allen key / hex wrench
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Naturally, by including a tool I'm going to open this thing...     &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4-FMKccz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ig6ylxtpp7h0zi4pozdl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4-FMKccz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ig6ylxtpp7h0zi4pozdl.png" alt="exploring"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2hlvISAc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spqc1blcc6f1g866zdt6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2hlvISAc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spqc1blcc6f1g866zdt6.png" alt="underneath"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-inside-the-box-inside-the-core-2"&gt;
  &lt;/a&gt;
  What's inside the box inside the Core 2
&lt;/h3&gt;

&lt;p&gt;Once you remove the four hex screws you get a better look inside the Core 2, you'll notice the battery and the small ESP32 board. Separating the cover is a little tricky, you kind of need to pry it open and be careful not to bend the pins but it's not to bad.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qSpQCXtV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71pjirj5y7vt9eflemyp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qSpQCXtV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71pjirj5y7vt9eflemyp.png" alt="inside the stack"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tip: Take note of the different length screws, it's a tad annoying that they are different lengths.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---oYWeI8H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spy4hnlwptfdfd18zuwn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---oYWeI8H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spy4hnlwptfdfd18zuwn.png" alt="screw length"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The specs&lt;/p&gt;

&lt;p&gt;It's probably easy to just show you the diagram from the supplier as it lists out the specs pretty nicely.&lt;/p&gt;

&lt;p&gt;Here are some key take aways:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;* ESP32 16MB
* USB-C interface for connection, power etc
* Capacitive colour touch screen
* Microphone
* Speaker
* Vibration motor (kind of like your smart phone when it vibrates)
* RGB lights either side of the unit
* Led light
* Micro SD card slot
* Battery - 500mAh lithium
* 2.4Ghz Wifi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The M5 store has the most details if you want to dig further into it&lt;br&gt;
&lt;a href="https://shop.m5stack.com/collections/m5-core/products/m5stack-core2-esp32-iot-development-kit-for-aws-iot-edukit"&gt;https://shop.m5stack.com/collections/m5-core/products/m5stack-core2-esp32-iot-development-kit-for-aws-iot-edukit&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Plibt2ML--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/74mkq17uzmapqz58xrc2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Plibt2ML--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/74mkq17uzmapqz58xrc2.png" alt="core2 m5 promo image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The construction of the casing is pretty impressive, there are no sharp corners or manufacturing defects on my unit. The screen is protected by a plastic film that you can peel back and dispose of. There is a nice subtle M5 imprinted on the side of the unit which is nice detail. Apart from the unit being AWS orange there is no AWS logo or wording on the case itself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bonus-component"&gt;
  &lt;/a&gt;
  Bonus component
&lt;/h3&gt;

&lt;p&gt;I did purchase an additional sensor, a microphone. I was curious to see what the quality of additional sensors was like and for my hackster project I need to use a microphone. I was unsure what the quality of the built-in mic would be so it was a just in case purchase (deadlines)&lt;/p&gt;

&lt;p&gt;The mic sensor is pretty sweet. Again, the construction of the casing for the sensor is great and the cable is plugs in snugly. The sensor comes in its only little case. Which reminds me of gameboy game cases for some reason, ha! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5yrPzO0X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yv6bhcxlxecea8rv39rh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5yrPzO0X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yv6bhcxlxecea8rv39rh.png" alt="mic check"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boot-up"&gt;
  &lt;/a&gt;
  Boot up
&lt;/h3&gt;

&lt;p&gt;There is a small power button that you press to power up the beast, it only takes a moment, you've got to be quick if you want to snap a pic of the AWS logo but it's glorious!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VlrcoJ7s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7u5kknt0fqwvqg3ncu1a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VlrcoJ7s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7u5kknt0fqwvqg3ncu1a.png" alt="it's alive"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The lack of instructions becomes less of an issue as the touch screen welcomes you and has a bit of demo of the various sensors included with the device.&lt;/p&gt;

&lt;p&gt;The welcome program will have you swipe through and interact with the device to activate the vibration sensor, use the microphone, toggle controls and others like the gyro. Don't expect the same touch responsiveness as your phone, I think it's pretty good considering, I did find that when I loaded one of demo firmwares the controls weren't as good as the demo loaded from factory. I'm guessing there is an activate area or something that needs to be programmed. I haven't gotten that far.&lt;/p&gt;

&lt;p&gt;The final screen is a url to the &lt;a href="https://edukit.workshop.aws/"&gt;AWS EduKit website&lt;/a&gt; to begin going through the "hello-world" samples.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ignore-the-help"&gt;
  &lt;/a&gt;
  Ignore the help
&lt;/h3&gt;

&lt;p&gt;So, I did the obvious which was ignore the instructions, how hard could it be? I continued to fumble my way though thinking there must be a way to connect this to the wifi or there must be a mobile app. Again, none of this was obvious.&lt;/p&gt;

&lt;p&gt;Don't do what I did, &lt;a href="https://edukit.workshop.aws/"&gt;read the instructions from AWS&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mac-os-cable-connection"&gt;
  &lt;/a&gt;
  Mac OS Cable Connection
&lt;/h3&gt;

&lt;p&gt;If you're running Apple devices like a macbook you might run into trouble with the USB-C connection. When you plug the M5 in it loads a driver and creates a serial connection which you use to interface with. Connecting through my dock / hub didn't work, I had to connect to directly. Booo...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you're running a macbook usb-c only, make sure you have a cable e.g. USB-C to USB-C (not included). I can confirm the genuine Apple USB-C display, USB adapter worked if you have one of those.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#a-tale-of-two-buttons"&gt;
  &lt;/a&gt;
  A tale of two buttons
&lt;/h3&gt;

&lt;p&gt;One thing I found kinda of funny was the power and reset buttons, there are two buttons. For some reason I thought there was only one button but you held it down to reset the device. This is the most common type of button I've seen on IoT devices. The M5 has two separate buttons, one for power and one for reset, they are identical but on different sides. Subtle.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P4iKETOG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odgbskbys5t79pvx9u1e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4iKETOG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odgbskbys5t79pvx9u1e.png" alt="power button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#initial-connections-ide"&gt;
  &lt;/a&gt;
  Initial connections, IDE
&lt;/h3&gt;

&lt;p&gt;Good news! The M5 uses PlatformIO which integrates with Visual Studio Code, so you get that familiar IDE. I did find the PlatformIO extension to be pretty chunky and generally not very intuitive though. In my opinion it's the separate menu systems inside the extension which add to the confusion for me, it doesn't take long to work it out, so this is minor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MjfqKgZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2zk62sjzz8t6hvrrdo5o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MjfqKgZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2zk62sjzz8t6hvrrdo5o.png" alt="platformio ide"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you've connected the device and confirmed you actual have a serial connection available, loading firmware is pretty easy. I went ahead and loaded the getting started firmware, this firmware has a very basic spinning fan on the display that you can control.&lt;/p&gt;

&lt;p&gt;To toggle the controls remotely you can use the cli or you can use the mobile app. Follow the AWS EduKit guide to find the app.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tip: Restart the device once you've loaded the firmware and watch the terminal output on your computer. The QR code needed for claiming and registration is in the terminal output.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#recap-key-tips"&gt;
  &lt;/a&gt;
  Recap key tips
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;* If you're running Apple Mac or USB-C only host, buy a USB-C &amp;lt;&amp;gt; USB-C cable

&lt;ul&gt;
&lt;li&gt;Restart the M5 once flashed, monitor the output for the QR code for claiming&lt;/li&gt;
&lt;li&gt;Read the manual (shocker)&lt;/li&gt;
&lt;li&gt;Note the screws if you take it apart as they are different lengths
&lt;/li&gt;
&lt;/ul&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;a href="#final-thoughts"&gt;
&lt;/a&gt;
Final Thoughts
&lt;/h3&gt;


&lt;p&gt;As an owner of multiple generations of raspberry pi's, various hats, cases, feathers and other mc's i'm impressed by the build quality most. The case construction, fitting and detail that has gone into it is really impressive for the price (~$49.90 USD). Shipping was pretty quick at around 5-7 days to Australia.&lt;/p&gt;

&lt;p&gt;I thought the on-boarding wasn't as smooth as other IoT devices that I've used in the past, which would be scan a QR code, download app, register and toggle various buttons through the app. There are a few more steps to jump through to get going.&lt;/p&gt;

&lt;p&gt;The platformIO IDE looks pretty powerful, bit of a learning curve there, I would have liked a more basic interface. One thing to note is that the platformIO IDE caters to many different types of devices which is probably why its feature rich.&lt;/p&gt;

&lt;p&gt;In summary, I'm happy with the purchase so far, I'm looking forward to having a play with the Core 2 M5 and AWS IoT. Hopefully I'll have some more info to share soon!&lt;/p&gt;

</description>
      <category>aws</category>
      <category>iot</category>
      <category>core2m5</category>
      <category>hackster</category>
    </item>
    <item>
      <title>Improving Mobile App Performance with a Powerful Database </title>
      <author>Margo McCabe</author>
      <pubDate>Thu, 22 Jul 2021 14:49:29 +0000</pubDate>
      <link>https://dev.to/harperdb/improving-mobile-app-performance-with-a-powerful-database-7j5</link>
      <guid>https://dev.to/harperdb/improving-mobile-app-performance-with-a-powerful-database-7j5</guid>
      <description>&lt;p&gt;You are probably aware that there are seemingly endless options to consider when it comes to selecting a database and other technologies for your mobile app. With so many choices, it can be difficult and confusing to determine what really matters when it comes to your tech stack. A little while back, I wrote an extensive article on the different &lt;a href="https://dev.to/harperdb/database-architectures-use-cases-explained-5711"&gt;database architectures and use cases&lt;/a&gt; available to provide guidance on picking the right technology for the right project. While that is still an accurate and solid resource, this article takes a deeper dive into considerations for improving the performance of specifically mobile apps. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mobile-vs-web-apps"&gt;
  &lt;/a&gt;
  Mobile vs. Web Apps
&lt;/h3&gt;

&lt;p&gt;First and foremost, perhaps we should take a quick look at the difference between mobile and web apps. Mobile apps live and run on a mobile device itself, whereas web apps are accessed through a web browser and will adapt to whichever device you’re viewing them on. &lt;a href="https://careerfoundry.com/en/blog/web-development/what-is-the-difference-between-a-mobile-app-and-a-web-app/"&gt;Native mobile apps&lt;/a&gt; are built for a specific platform, such as iOS for Apple or Android for, well, pretty much everything else. They are downloaded and installed through an app store and have access to system resources, such as GPS and the camera function. &lt;a href="https://careerfoundry.com/en/blog/web-development/what-is-the-difference-between-a-mobile-app-and-a-web-app/"&gt;Web apps&lt;/a&gt;, however, are not native to a particular system, and do not need to be downloaded or installed. Due to their responsive nature, they may look and function a lot like mobile apps, which is where some confusion arises. &lt;/p&gt;

&lt;p&gt;To dig a bit deeper, mobile apps that are created for a targeted platform using the platform-specific SDK are categorized into &lt;a href="https://www.clariontech.com/blog/mobile-app-vs-web-app-which-is-the-right-one-for-you"&gt;Native Mobile Apps&lt;/a&gt;. Whereas &lt;a href="https://www.clariontech.com/blog/mobile-app-vs-web-app-which-is-the-right-one-for-you"&gt;Hybrid Mobile Apps&lt;/a&gt; are developed on platforms that provide code that is compatible with all available operating systems. Lastly, you may have heard of Progressive Web Apps (PWA’s), which many people claim is the future. With &lt;a href="https://www.clariontech.com/blog/mobile-app-vs-web-app-which-is-the-right-one-for-you"&gt;PWA’s&lt;/a&gt;, “The focus is towards creating web applications that have a look and feel exactly like native apps, without users having to download and install any software.” &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mobile-app-performance-challenges"&gt;
  &lt;/a&gt;
  Mobile App Performance Challenges
&lt;/h3&gt;

&lt;p&gt;While many companies may have incredible technology otherwise, their mobile apps often struggle with performance, latency, and/or connectivity issues. This can be due to numerous factors. Perhaps the organization did not put a lot of time or resources into building their mobile apps from the ground up, and therefore they do not stand on a solid foundation. Or maybe they are battling with latency issues due to &lt;a href="https://dev.to/harperdb/reducing-data-latency-with-geographically-distributed-databases-41oa"&gt;centralized databases&lt;/a&gt; and cloud/vendor lock-in. Speaking of the database - is it equipped to handle the right amount of users and frequent updates? Does it store data offline or handle complex queries? These are all things to consider when building a new mobile app from scratch, or adding new features to an existing app, etc. Bear in mind that it’s not impossible (and actually with some technologies it’s quite easy) to migrate from one database to another if needed. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#database-considerations"&gt;
  &lt;/a&gt;
  Database Considerations
&lt;/h3&gt;

&lt;p&gt;In my &lt;a href="https://dev.to/harperdb/database-architectures-use-cases-explained-5711"&gt;database architectures and use cases&lt;/a&gt; blog, I mentioned that when selecting a database, it’s important to consider your data type / structure, data volume, consistency, write &amp;amp; read frequency, hosting, cost, security, and integration constraints. While these certainly stand true, there are a few additional things you may want to consider when it comes to mobile apps: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Support for multiple mobile app platforms&lt;/li&gt;
&lt;li&gt;Scalability &lt;/li&gt;
&lt;li&gt;Data synchronization &lt;/li&gt;
&lt;li&gt;Multi layer data model considerations &lt;/li&gt;
&lt;li&gt;Network connectivity &lt;/li&gt;
&lt;li&gt;Pushing new app updates and database changes&lt;/li&gt;
&lt;li&gt;Resolving data conflicts between devices &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Clearly there is a lot to consider here, and it can be quite overwhelming to figure out what type of database technology might be the best fit. For starters, some databases fit nicely into one category when it comes to data structure / type of functionality. Other technologies take more of a hybrid approach, enabling cross-functionality or combining the functionality of different tools into one. So, unless you have a very specific project or limited long term goals, it might be best to go with a more flexible hybrid technology that encompasses more functionality into one package to reduce the number of systems needed. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-which-database-should-you-use"&gt;
  &lt;/a&gt;
  So, Which Database Should You Use?
&lt;/h3&gt;

&lt;p&gt;Here I’ll try to provide a fair (while potentially still a little biased) explanation as to why &lt;a href="https://harperdb.io/?utm_source=devto&amp;amp;utm_medium=mobileapp"&gt;HarperDB&lt;/a&gt; is the best option for improving the performance of your mobile app. From a high level, HarperDB is a modern hybrid database that combines the functionality of some of the best tools on the market into one, so it really covers a lot of bases. As a distributed database, it can be installed anywhere while presenting a single interface across a range of clouds, with backend ability to keep data synchronized everywhere. HarperDB is read and write optimized, handling upwards of 100K requests per second per node.&lt;/p&gt;

&lt;p&gt;Of course there are other great options out there as well. For example, &lt;a href="https://www.simform.com/mobile-app-developers-database-selection/#criteria"&gt;this article&lt;/a&gt; published several years ago lists different database options based on functionality needed. HarperDB basically works everywhere in that table, and provides all of the functionality mentioned. &lt;/p&gt;

&lt;p&gt;Instead of trying to compare 300 different database options on the market, it might simplify your decision to do comparisons of this vs. that. This will enable you to take a deeper look at your needs and compare things like performance and cost. For example, in &lt;a href="https://harperdb.io/harperdb-vs-mongodb/?utm_source=devto&amp;amp;utm_medium=mobileapp"&gt;benchmark tests&lt;/a&gt;, HarperDB is 37 times faster than MongoDB and tends to be more cost effective. It also supports SQL on JSON. Cockroach is a better fit for fintech use cases, whereas HarperDB may be a better fit for industries like gaming, ticketing, military, and media. You can’t lock out HarperDB’s database globally, and our clustering methodology relies on eventual consistency which allows for more efficient replication than more structured options. Relational databases like MySQL can be significantly more resource intensive, requiring more maintenance and strict data structure. Whereas HarperDB can run on machines of all vertical scale from a Raspberry Pi to a supercomputer, requiring little to no maintenance, and with a dynamic schema allowing for easy data ingestion. This &lt;a href="https://dev.to/harperdb/harperdb-vs-mongodb-vs-postgresql-49en"&gt;HarperDB vs. MongoDB vs. PostgreSQL&lt;/a&gt; comparison may be helpful as well. &lt;/p&gt;

&lt;p&gt;Are you facing challenges around app &lt;a href="https://dev.to/harperdb/reducing-data-latency-with-geographically-distributed-databases-41oa"&gt;latency&lt;/a&gt;? Or worried about being truly &lt;a href="https://dev.to/harperdb/industries-that-need-a-high-performing-low-latency-distributed-database-5cn4"&gt;geo-distributed&lt;/a&gt;? With HarperDB, you can simply spin up more nodes to scale horizontally, putting HarperDB in various regions closer to your end users, which will reduce latency and improve app performance, all while accessing data in real time. By distributing APIs and data storage, and shifting application logic to the edge, you can remove bottlenecks and reduce infrastructure and cost. Globally replicating data at the speed of the Internet, HarperDB reduces app latency, improves performance and accessibility, and reduces overall complexity when it comes to data management. Lastly, HarperDB is about to release &lt;a href="https://harperdb.io/docs/custom-functions/"&gt;Custom Functions&lt;/a&gt;, which will enable developers to code their own custom API endpoints, utilizing core HarperDB methods, which results in a simplified tech stack and improved performance.&lt;/p&gt;

&lt;p&gt;Mobile apps are constantly evolving, and you need a flexible database that can adjust on the fly without affecting performance. Even the most advanced and impressive technologies in the world will be brought down by a poor foundation or outdated database. Staying up to speed (literally) with modern technology is the best way to remain afloat in this highly competitive market. Therefore, the selection when it comes to your tech stack should not be taken lightly. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>database</category>
      <category>mobile</category>
      <category>programming</category>
    </item>
    <item>
      <title>UI Dev Newsletter #66</title>
      <author>Silvestar Bistrović</author>
      <pubDate>Thu, 22 Jul 2021 14:43:07 +0000</pubDate>
      <link>https://dev.to/starbist/ui-dev-newsletter-66-5fml</link>
      <guid>https://dev.to/starbist/ui-dev-newsletter-66-5fml</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://web.dev/lcp-lazy-loading/"&gt;The performance effects of too much lazy-loading&lt;/a&gt;&lt;br&gt;
Rick Viscomi and Felix Arntz share data-driven advice for lazy-loading images with Core Web Vitals in mind.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://css-tricks.com/meta-theme-color-and-trickery/"&gt;Meta Theme Color and Trickery&lt;/a&gt;&lt;br&gt;
Manuel Matuzović explores the possibilities of a 'theme-color' meta tag.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/colabottles/why-accessibility-26mf"&gt;Why Accessibility?&lt;/a&gt;&lt;br&gt;
Todd Libby explains why accessibility should be an equal citizen of your project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://uxdesign.cc/designing-a-chair-a-story-about-junior-designers-vs-senior-designers-24be40b1d2cb"&gt;Designing a chair: A story about Junior vs. Senior Designers.&lt;/a&gt;&lt;br&gt;
Stan Reimgen explains the difference between junior and senior designers, which could be applied to developers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar"&gt;Lexical grammar&lt;/a&gt;&lt;br&gt;
MDN contributors describe everything about JavaScript's lexical grammar from control characters and white space to automatic semicolon insertion and browser compatibility.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.kevinpowell.co/article/why-i-dont-like-being-called-the-king-of-css/"&gt;Why I am not the King&lt;/a&gt;&lt;br&gt;
Kevin Powell shares a lot of helpful CSS resources and professionals in his humble post.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.dottedsquirrel.com/javascript-language/"&gt;Trends Come And Go, But JavaScript Is Forever&lt;/a&gt;&lt;br&gt;
Aphinya Dechalert explores a little into the history of JavaScript and its good and bad parts.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.smashingmagazine.com/2021/07/frustrating-design-patterns-broken-frozen-filters/"&gt;Frustrating Design Patterns: Broken Filters&lt;/a&gt;&lt;br&gt;
Vitaly Friedman describes how to design better filters on the web.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://buttondown.email/starbist"&gt;Subscribe to the newsletter here!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>a11y</category>
    </item>
    <item>
      <title>Data Structures in Typescript - Binary Search Tree</title>
      <author>Ricardo Borges</author>
      <pubDate>Thu, 22 Jul 2021 14:39:38 +0000</pubDate>
      <link>https://dev.to/ricardo_borges/data-structures-in-typescript-binary-search-tree-5en3</link>
      <guid>https://dev.to/ricardo_borges/data-structures-in-typescript-binary-search-tree-5en3</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-is-a-tree-data-structure"&gt;
  &lt;/a&gt;
  What is a Tree data structure
&lt;/h3&gt;

&lt;p&gt;Before we talk BST, we have to understand that a tree is a kind of &lt;a href="https://ricardoborges.dev/data-structures-in-typescript-graph"&gt;Graph&lt;/a&gt; with a root node and no cycles, each node can have zero or more child nodes, nodes can store any type of data, also those nodes may or may not be in a particular order, nodes that have no children are called leaves.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JySxGxsk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dje4crtui/image/upload/v1626722908/data%2520structures/tree/tree_sgyxim.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JySxGxsk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dje4crtui/image/upload/v1626722908/data%2520structures/tree/tree_sgyxim.png" alt="tree"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#binary-tree"&gt;
  &lt;/a&gt;
  Binary Tree
&lt;/h3&gt;

&lt;p&gt;A Binary tree is a tree that each node has up to two nodes:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DfAcMY-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dje4crtui/image/upload/v1626722908/data%2520structures/tree/binary-tree_qpopld.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DfAcMY-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dje4crtui/image/upload/v1626722908/data%2520structures/tree/binary-tree_qpopld.png" alt="binary tree"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#binary-search-tree"&gt;
  &lt;/a&gt;
  Binary Search Tree
&lt;/h3&gt;

&lt;p&gt;A BST is a Binary tree that follows these properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;All left descendants nodes are less or equal to their parent node&lt;/li&gt;
&lt;li&gt;All right descendants nodes are greater than their parent node&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e1X2ZjEJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dje4crtui/image/upload/v1626722908/data%2520structures/tree/bst_yeac5b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e1X2ZjEJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dje4crtui/image/upload/v1626722908/data%2520structures/tree/bst_yeac5b.png" alt="binary search tree"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BST definitions can slightly vary, you may find a BSTs that the left subtree is less than the parent node (&lt;code&gt;left subtree &amp;lt; parent &amp;lt;= right subtree&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Also, some BSTs may or may not allow duplicated nodes.&lt;/p&gt;

&lt;p&gt;BST is useful when you need to insert, delete and search comparable elements. You can use an array for those operations, but, although access an element in an array is done in a constant time, whenever you insert or delete an element, the other elements have to be shifted, in a BST, on the other hand, you only need to adjust the pointers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#searching-in-the-bst"&gt;
  &lt;/a&gt;
  Searching in the BST
&lt;/h3&gt;

&lt;p&gt;The search starts from the root node, if the element you are searching for is greater than the current node value, then search for it in the right subtree, otherwise search in the left subtree, repeat this until the current node value is equal to the element you are searching for or until you reach a leaf node and there is nowhere to go:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// empty tree&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// start from root node&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// data greater than current element&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="c1"&gt;// you are on a leaf node, nowhere to go&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rightNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;// go to the right subtree&lt;/span&gt;
        &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rightNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="c1"&gt;// you are on a leaf node, nowhere to go&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;leftNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;// go to the left subtree&lt;/span&gt;
        &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;leftNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#inserting-in-the-bst"&gt;
  &lt;/a&gt;
  Inserting in the BST
&lt;/h3&gt;

&lt;p&gt;When inserting a new element in BST you have to keep its properties, so start from the root node, if the new element value is greater than the root node value, search for an empty position in the right subtree, otherwise search for an empty position in the left subtree:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// empty tree, insert the first node (the root node)&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// start from the root node&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// search for an empty position in the right subtree&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rightNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rightNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// insert node&lt;/span&gt;
        &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rightNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rightNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// search for an empty position in the left subtree&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;leftNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;leftNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// insert node&lt;/span&gt;
        &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;leftNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;leftNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#binary-search-tree-traversal"&gt;
  &lt;/a&gt;
  Binary Search Tree traversal
&lt;/h3&gt;

&lt;p&gt;There are three ways to traverse a BST, they differ on which order the nodes are visited (often, printed):&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#inorder-traversal"&gt;
  &lt;/a&gt;
  In-Order traversal
&lt;/h4&gt;

&lt;p&gt;First visit left branch, then the current node, and finally the right branch, because of how elements are distributed in the BST, they will be visited in the ascending order:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;inOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;inOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;leftNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;inOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rightNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#preorder-traversal"&gt;
  &lt;/a&gt;
  Pre-Order traversal
&lt;/h4&gt;

&lt;p&gt;Visit the current node before its children:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;preOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;leftNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rightNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#postorder-traversal"&gt;
  &lt;/a&gt;
  Post-Order traversal
&lt;/h4&gt;

&lt;p&gt;Visit the current node's children first, then the current node:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;postOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;leftNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rightNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's an implementation of a BST in typescript:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;BinarySearchTreeNode&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;leftNode&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;BinarySearchTreeNode&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;rightNode&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;BinarySearchTreeNode&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;BinarySearchTree&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;BinarySearchTreeNode&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;comparator&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;comparator&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;comparator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;comparator&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;BinarySearchTreeNode&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;BinarySearchTreeNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;comparator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rightNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rightNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rightNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;BinarySearchTreeNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rightNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;leftNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;leftNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;leftNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;BinarySearchTreeNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;leftNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;BinarySearchTreeNode&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;comparator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;comparator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rightNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rightNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;leftNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;leftNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;inOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;BinarySearchTreeNode&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;leftNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rightNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;preOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;BinarySearchTreeNode&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;leftNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rightNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;postOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;BinarySearchTreeNode&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;leftNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rightNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;comparator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;BinarySearchTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;comparator&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;bst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;bst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;bst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;bst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;bst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;bst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;bst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;bst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inOrderTraversal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Unlike Graphs, a tree doesn't really need a Tree class, just a Node class would usually suffice.&lt;/p&gt;

</description>
      <category>datastructures</category>
      <category>typescript</category>
      <category>bst</category>
      <category>binarytree</category>
    </item>
    <item>
      <title>Hoppscotch is celebrating 30,000 GitHub Stars 🎉</title>
      <author>Liyas Thomas</author>
      <pubDate>Thu, 22 Jul 2021 14:30:34 +0000</pubDate>
      <link>https://dev.to/liyasthomas/hoppscotch-is-celebrating-30-000-github-stars-1gg9</link>
      <guid>https://dev.to/liyasthomas/hoppscotch-is-celebrating-30-000-github-stars-1gg9</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;a href="http://hoppscotch.io"&gt;Hoppscotch&lt;/a&gt; is an open source API development ecosystem.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H0_nXlRr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a43rnrxo19wdnw9svocx.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H0_nXlRr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a43rnrxo19wdnw9svocx.jpeg" alt="Hoppscotch screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since the initial commit (~2 years ago), Hoppscotch has evolved from being an open source side project to an enterprise developer tool.&lt;/p&gt;

&lt;p&gt;App: &lt;a href="http://hoppscotch.io"&gt;hoppscotch.io&lt;/a&gt;&lt;br&gt;
GitHub: &lt;a href="https://github.com/hoppscotch/hoppscotch"&gt;github.com/hoppscotch/hoppscotch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hoppscotch is celebrating the milestone of reaching 30,000 GitHub Stars.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is an achievement of our whole community. Thank you for each contribution, love, and all the commitments that you made to improve Hoppscotch. We are lucky to build this open-source project with you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Many people ask me why it got so popular. Here's my answer.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Most developers have side projects. That’s how we try out new things or make something that we miss on the market or in our dev stack. But most side projects end up unfinished and never actually see the light of day. And even if a developer builds up the courage to show his work to the public, he quickly finds out that just publishing a repository doesn’t bring the masses to his doorstep.&lt;/p&gt;

&lt;p&gt;When I set out to create Hoppscotch, of course, I haven’t had the faintest idea if anyone else would be interested in it. But I was mainly scratching my own itch — I knew how to make a web app and I hoped I’d build something that would serve my needs much better than existing tools on the market. That should be your primary motivator — not to chase stars, likes, and other popular content, but to create something for yourself that will make your job easier. There’s a chance you will not be the only one that will find it useful.&lt;/p&gt;

&lt;p&gt;I’d like to share with you what I did to make sure that the project doesn’t end up in the dustbin of history. I will concentrate on open source software, but the following advice may as well apply to any creative endeavor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Build a solution&lt;/strong&gt;&lt;br&gt;
Look around - think about the tools and products you use every day and the underlying problems they solve.&lt;/p&gt;

&lt;p&gt;Instead of identifying a solution first, the initial step is to identify the problem. &lt;strong&gt;The key here is to be very specific about the problem you are identifying.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Once you’ve identified the problem, the next step is to ideate possible solutions, and they don’t have to necessarily be technical solutions.&lt;/li&gt;
&lt;li&gt;Then, from those proposed solutions, create prototypes and begin to test each one.&lt;/li&gt;
&lt;li&gt;Continue testing and refining the prototypes until you have enough validation to move full-steam ahead with the one that is working.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Read more in my article: &lt;a href="https://dev.to/liyasthomas/solve-your-own-problem-everything-else-will-follow-12bc"&gt;Solve your own problem, everything else will follow&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Build in public&lt;/strong&gt;&lt;br&gt;
Document your journey of building the project. Engage with your users in public forums like &lt;a href="https://dev.to"&gt;dev.to&lt;/a&gt;. Write blogs and articles, talk to your audience, share your milestones, ask for help, get feedback and iterate over the product.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Build for public&lt;/strong&gt;&lt;br&gt;
Ship early, ship often. Release the first version as soon as it’s useful. Don’t wait for it to be perfect. For inspiration, &lt;a href="https://codepen.io/liyasthomas/full/XWNGRoo"&gt;here's the initial public MVP release of Hoppscotch&lt;/a&gt;. You don’t have to be satisfied with it. You’ll never be. But you should be eager for some feedback.&lt;/p&gt;

&lt;p&gt;When you add a useful feature to your project, you don’t have to wait for anything to release it or deploy it. It just has to work. The feedback loop with inputs from other people will tell you whether what you’re building makes sense or whether you should take it in other directions. It’s good to get that feedback as soon as possible.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#roadmap"&gt;
  &lt;/a&gt;
  Roadmap
&lt;/h3&gt;

&lt;p&gt;Me and &lt;a href="https://dev.to/andrewtheant"&gt;Andrew Bastin&lt;/a&gt; having been building Hoppscotch in public for the past ~2 years. Today is the starting point of many exciting moves and features that will come to Hoppscotch from the very beginning of next month.&lt;/p&gt;

&lt;p&gt;We started to work on different features among which are the capability for teams to collaborate in real-time, workspaces, and some others you'll hear of soon. As always, we are grounding our work on the multiple insights that our users gave us and we are more grateful than ever to have such a committed community.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;To put it in a nutshell, we'll work on our main focus and priority: making our users happy with new features and improving Hoppscotch as much as we can do.&lt;/p&gt;

&lt;p&gt;Contact: &lt;a href="mailto:liyas@hoppscotch.io"&gt;liyas@hoppscotch.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read the tweet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0gBIY9YD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E61ICjwVEAUlAlW.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--LsxNSNC3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1395705272862232583/d-9B7uEk_normal.jpg" alt="Liyas Thomas profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Liyas Thomas
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/liyasthomas"&gt;@liyasthomas&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Hoppscotch is celebrating the milestone of reaching 30,000 GitHub Stars 🎉&lt;br&gt;&lt;br&gt;This is an achievement of our whole community. Thank you for each contribution, love, and all the commitments that you made to improve Hoppscotch. We are lucky to build this open source project with you. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:33 PM - 21 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1417870384284590084" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1417870384284590084" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1417870384284590084" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


</description>
      <category>opensource</category>
    </item>
    <item>
      <title>The 7 Categories of Engineering Management w/ Ian Nowland of Datadog</title>
      <author>Conor Bronsdon</author>
      <pubDate>Thu, 22 Jul 2021 14:20:07 +0000</pubDate>
      <link>https://dev.to/linearb/the-7-categories-of-engineering-management-w-ian-nowland-of-datadog-3de1</link>
      <guid>https://dev.to/linearb/the-7-categories-of-engineering-management-w-ian-nowland-of-datadog-3de1</guid>
      <description>&lt;p&gt;You can’t learn to swim by reading a book.&lt;/p&gt;

&lt;p&gt;The same principle applies to coaching engineering managers. In this episode of &lt;a href="https://devinterrupted.com/podcast/7-categories-of-engineering-management/"&gt;Dev Interrupted&lt;/a&gt;, Ian Nowland SVP of Core Engineering at Datadog, discusses how the reality of coaching engineering managers is different from what they tell you during conferences, as well as diving into his 7 categories of engineering management.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/2bTUfObUK2mgtRQYX7yX8h"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Episode Highlights include:&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;The realities of coaching direct reports&lt;/li&gt;
&lt;li&gt;How Ian measures the impact of his teams&lt;/li&gt;
&lt;li&gt;The 7 Categories of Engineering Management&lt;/li&gt;
&lt;li&gt;How to adopt a learning mindset to engineering management&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#join-the-dev-interrupted-discord-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Join the Dev Interrupted Discord Server&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With over 1200 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.gg/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" alt="Join the Dev Interrupted Discord Community!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>engineering</category>
      <category>management</category>
      <category>coaching</category>
      <category>team</category>
    </item>
    <item>
      <title>Getting Started with Jamstack</title>
      <author>Saji Wang</author>
      <pubDate>Thu, 22 Jul 2021 14:17:50 +0000</pubDate>
      <link>https://dev.to/codesphere/getting-started-with-jamstack-341o</link>
      <guid>https://dev.to/codesphere/getting-started-with-jamstack-341o</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Over the past couple of years, one tech stack that has consistently stood out from the crowd in developer conversations is Jamstack. In this article, we're going to go over what makes Jamstack so unique, as well as how you can get started creating your own Jamstack web app.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Let's get right into it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-jamstack"&gt;
  &lt;/a&gt;
  What is Jamstack?
&lt;/h2&gt;

&lt;p&gt;Jamstack is an architecture designed to make your web app faster, more secure, and easier to scale. Many people believe Jamstack is the next evolution in modern web development - and here's why.&lt;/p&gt;

&lt;p&gt;Jamstack is arguably the lightest technical stack out there. It eliminates the need to worry about infrastructure and servers, as it requires no real interaction with a database and relies mostly on third-party APIs in order to provide additional functionality, such as authentication and payment.&lt;br&gt;
A Jamstack app consists of static HTML pages, made dynamic using JavaScript and enhanced with third-party services via API and prebuilt Markup. That's where its name comes from &lt;strong&gt;J&lt;/strong&gt;avaScript, &lt;strong&gt;A&lt;/strong&gt;PI, and hypertext &lt;strong&gt;M&lt;/strong&gt;arkup.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-does-jamstack%C2%A0work"&gt;
  &lt;/a&gt;
  How Does Jamstack Work?
&lt;/h2&gt;

&lt;p&gt;Though JAMstack confusingly includes the word "stack", it is more of architecture for web applications that promise to be faster, cheaper, and more secure than the traditional model. The traditional model is the client-server model, where applications are served dynamically from a web server.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N9y1vzPs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qh2titgxr0ihb1nrl6s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N9y1vzPs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qh2titgxr0ihb1nrl6s.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The key concept behind Jamstack is to eliminate the need for a backend server for the app, at least in the form with which you may be accustomed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nQ7QyKNI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qjf20w96cfcw4qugiyma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nQ7QyKNI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qjf20w96cfcw4qugiyma.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instead, Jamstack sites are simply static files that are served by a special type of file-hosting called a CDN (Content Delivery Network). A CDN is actually a network of file servers around the world, all holding a copy of your site's files.&lt;br&gt;
Once your static site has been loaded by a browser, you can use JavaScript to generate HTTP requests to third-party services, including databases, search, identity management, payment processing, and serverless functions.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#jamstack-benefits"&gt;
  &lt;/a&gt;
  Jamstack Benefits
&lt;/h2&gt;

&lt;p&gt;So what are the benefits of Jamstack? Why go through the hassle of transforming your web app architecture?&lt;br&gt;
Jamstack's architecture is faster, cheaper, and more secure, which is made possible by the usage of a CDN and the elimination of a web server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. A CDN is generally faster than a webserver!&lt;/strong&gt;&lt;br&gt;
Since a CDN does not process requests and instead just serves files, the request/response loop is much shorter. And since CDNs can serve on the network edge, closer to the user, the latency of the response is minimized.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. A CDN is most likely less expensive than a webserver!&lt;/strong&gt;&lt;br&gt;
If you use a web server, it must run 24/7 listening for requests. Since cloud computing is charged by the minute, you'll be paying for your server, even when it's idle.&lt;br&gt;
CDN hosting is generally less expensive because a CDN service is only charged by the volume of data served, and therefore it's idle time doesn't cost anything.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. A CDN is generally more secure than a webserver!&lt;/strong&gt;&lt;br&gt;
Finally, unlike a web server, a CDN does not process requests and therefore has limited potentially exposed attack vectors for hackers. A Jamstack site will still connect to services, such as cloud databases, but since these are managed by specialist third parties, security gaps are usually minimal.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#how-do-i-get-started-using-jamstack"&gt;
  &lt;/a&gt;
  How Do I Get Started using Jamstack?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#building-the%C2%A0frontend"&gt;
  &lt;/a&gt;
  Building the Frontend
&lt;/h3&gt;

&lt;p&gt;Let's start with the Jamstack frontend. While the core of a Jamstack website is the static HTML that's delivered to the browser, JavaScript and the UI frameworks that build that experience are what have made its architecture popular.&lt;br&gt;
A common front-end framework for Jamstack is Next.js. The following demonstrates how to get started with Next.js for Jamstack development. The easiest way to get started is by typing the following command in your terminal, and I'll name the project mynextapp:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ npx create next-app mynextapp&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;which will generate for us a default boilerplate page.&lt;br&gt;
Navigate into the newly made directory we just created by opening the folder in your code editor or by typing in the terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ cd mynextapp&lt;/code&gt;&lt;br&gt;
&lt;code&gt;$ code .&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The following is an example of the default starter Next.js file tree, generated by the create-next-app command:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YmGhxWak--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tyssryqssnlmgyqwv350.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YmGhxWak--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tyssryqssnlmgyqwv350.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;node_modules&lt;/code&gt; folder is where all the dependencies are stored.&lt;/li&gt;
&lt;li&gt;The pages folder is where we keep all of our page components. The idea is that each page in Next.js has its own React component. At the moment, the only component we have is the &lt;code&gt;index.js&lt;/code&gt; component, which will be for the homepage.&lt;/li&gt;
&lt;li&gt;The api folder is for API endpoints.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;app.js&lt;/code&gt; file acts as the root component, and all of our different page components are rendered here:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vNV9Nerx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efqruj8zv1i3t1ri1gpb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vNV9Nerx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efqruj8zv1i3t1ri1gpb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The public folder is where all of our public assets are stored, such as images.&lt;/li&gt;
&lt;li&gt;The styles folder contains all of our CSS files and CSS modules.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;.gitignore&lt;/code&gt; is for version control.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;package.json&lt;/code&gt; is to keep track of our various dependencies.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the &lt;code&gt;package.json&lt;/code&gt; file, we have the &lt;code&gt;dev&lt;/code&gt; script, which spins up a local development server for us, to enable us to preview our app in the browser.&lt;/p&gt;

&lt;p&gt;In the terminal, run the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ npm run dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In your browser, type &lt;code&gt;localhost:3000&lt;/code&gt;, and the following will be displayed:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AvYWCj7D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kitop8xpxvwzt3vx9tsz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AvYWCj7D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kitop8xpxvwzt3vx9tsz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The content shown in your browser is defined in the &lt;code&gt;index.js&lt;/code&gt; component. Replace all the content inside the main &lt;/p&gt; with a simple heading:


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Now, we can see our new content displayed in the browser:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g-985Pdw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yluedk4i4t9xzr306n0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g-985Pdw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yluedk4i4t9xzr306n0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;The &lt;code&gt;index.js&lt;/code&gt; component is being pre-rendered before it even reaches the browser. During development, this is done via server-side rendering. The server renders the component, then sends the HTML file to the browser, which happens on each page request from the browser.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pages-and%C2%A0routes"&gt;
  &lt;/a&gt;
  Pages and Routes
&lt;/h2&gt;

&lt;p&gt;The pages folder is where we create all of our page components. Each page in Next.js is driven by a React component. So for an About page, we'd have an About component, for a Pricing page, we'd have a Pricing component, and so on. Each page component has its own file inside the pages folder. Therefore, the file name and location of each component are tied to the route for that particular page.&lt;/p&gt;

&lt;p&gt;For example, in the pages folder, let's create an &lt;code&gt;about.js&lt;/code&gt; file. Next.js will automatically create a route &lt;code&gt;/about&lt;/code&gt;, which is the name of the file, to serve up this component. The route name is tied to the file name.&lt;/p&gt;

&lt;p&gt;The one exception to the rule is &lt;code&gt;index.js&lt;/code&gt;. Next.js doesn't create a route &lt;code&gt;/index&lt;/code&gt;, it just creates the route /. So all we have to do is go to the root of the domain to see the &lt;code&gt;index.js&lt;/code&gt; component.&lt;br&gt;
In the &lt;code&gt;about.js&lt;/code&gt; file, let's create a stateless functional component and export it:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Go to &lt;code&gt;/about&lt;/code&gt; in the browser to see the About component page:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YzQwrLmx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uj7o1lb8kiwc11d2otyp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YzQwrLmx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uj7o1lb8kiwc11d2otyp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can also create subfolders in the pages folder that contain page components.&lt;/p&gt;

&lt;p&gt;Let's create a subfolder called pricing and a file called &lt;code&gt;plan1.js&lt;/code&gt;. In the &lt;code&gt;plan1.js&lt;/code&gt; file, we'll create a stateless functional component called Plan1:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;When we have a subfolder, Next.js will create a route according to the subfolder as well. Therefore, in this case, the route is: localhost:3000/pricing/plan1&lt;br&gt;
And that's how easy it is to make a multi-page website with Next.js.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#building-the%C2%A0backend"&gt;
  &lt;/a&gt;
  Building the Backend
&lt;/h2&gt;

&lt;p&gt;Content is at the heart of any website or application. This may take a variety of forms, such as a blog or an online store. Tools like Auth0 provide user authentication and management, which can present a number of challenges on its own.&lt;/p&gt;

&lt;p&gt;There are additionally a number of cloud projects that make it simple to build serverless functions, from which you can begin developing your own backend service.&lt;/p&gt;

&lt;p&gt;The great thing about Jamstack apps is that they serve as a central point for bringing in any feature or service you require, paving the way for powerful solutions that are focused on addressing your specific challenge.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#deploying-your%C2%A0app"&gt;
  &lt;/a&gt;
  Deploying Your App
&lt;/h2&gt;

&lt;p&gt;Deploying a website and managing CI/CD systems is arguably one of the most difficult aspects of developing a web application.&lt;br&gt;
In the Jamstack world, tools such as Codesphere offer automated DevOps to make deployment easier.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-now"&gt;
  &lt;/a&gt;
  What Now?
&lt;/h2&gt;

&lt;p&gt;Given the advantages of Jamstack, many people in technology are expecting Jamstack's popularity to increase. Jamstack is growing rapidly, and may one day become the most popular architecture on the web.&lt;/p&gt;

&lt;p&gt;If you want to have a go at building your own Jamstack app or a solution to the painful CI/DC system management, go to &lt;a href="https://link.codesphere.com/BO"&gt;Codesphere&lt;/a&gt; provides an online code editor in which you can build, test, and deploy your apps all within a single tab of your browser.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>jamstack</category>
      <category>nextjs</category>
      <category>javascript</category>
      <category>html</category>
    </item>
    <item>
      <title>Writing inclusive job adverts</title>
      <author>Rouan Wilsenach</author>
      <pubDate>Thu, 22 Jul 2021 14:09:36 +0000</pubDate>
      <link>https://dev.to/rouanw/writing-inclusive-job-adverts-1n0c</link>
      <guid>https://dev.to/rouanw/writing-inclusive-job-adverts-1n0c</guid>
      <description>&lt;p&gt;I recently spent some time helping a startup set up their technical hiring process. Diversity and inclusion are important to me and &lt;a href="https://dev.to/rouanw/want-to-be-a-better-developer-work-somewhere-inclusive-3j34"&gt;I love working at inclusive companies&lt;/a&gt;, so I wanted to make sure the hiring process was as inclusive as possible to help us build a diverse team.&lt;/p&gt;

&lt;p&gt;Here are the highlights of what I learned about inclusive job adverts. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#be-explicit-about-your-desire-to-be-inclusive"&gt;
  &lt;/a&gt;
  Be explicit about your desire to be inclusive
&lt;/h2&gt;

&lt;p&gt;Here's an easy win. Say somewhere in your job advert that you're open to applicants from different backgrounds. This template can get you started:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[Company Name] is an equal opportunity employer. We celebrate diversity and are committed to creating an inclusive environment for all employees. We welcome applications from those typically underrepresented in tech.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Don't pretend your company is more inclusive than it is. Don't make any wild claims. Just say you'd love to hear from folks who are underrepresented – it makes a big difference to whether someone reading your job ad is likely to apply.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#optimise-for-clarity-and-transparency"&gt;
  &lt;/a&gt;
  Optimise for clarity and transparency
&lt;/h2&gt;

&lt;p&gt;What does it take for someone to go from reading your job advert to clicking "Apply"? Turns out that folks from underrepresented groups are less likely to apply for a job when the job description doesn't clearly set expectations. Here are some areas where you want to make sure you provide as much clarity as possible:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The job application process. This includes what the steps are, how long they take and how long the applicant will need to wait for feedback.&lt;/li&gt;
&lt;li&gt;What the role entails. What will the successful candidate's average day look like?&lt;/li&gt;
&lt;li&gt;What does the company do? What is the culture like?&lt;/li&gt;
&lt;li&gt;Benefits and compensation&lt;/li&gt;
&lt;li&gt;Constraints or deal-breakers. For example, is the job remote-friendly? Do you need to live in a specific country? &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#dont-overspecify-requirements"&gt;
  &lt;/a&gt;
  Don't over-specify requirements
&lt;/h2&gt;

&lt;p&gt;We've all seen the classic bulleted list of requirements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Master's degree in Computer Science&lt;/li&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;li&gt;React&lt;/li&gt;
&lt;li&gt;Node&lt;/li&gt;
&lt;li&gt;Redux&lt;/li&gt;
&lt;li&gt;Postgres&lt;/li&gt;
&lt;li&gt;Woodwork&lt;/li&gt;
&lt;li&gt;Test-driven development&lt;/li&gt;
&lt;li&gt;Jenkins&lt;/li&gt;
&lt;li&gt;90s Sitcom Trivia&lt;/li&gt;
&lt;li&gt;AWS InfiniDash&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How is a person looking at this list supposed to make sense of it? Do they need to have done all of it in order to be considered? What if they're super-experienced with Node and React but haven't used Redux? Are they a bad hire?&lt;/p&gt;

&lt;p&gt;The problem with exhaustive lists of requirements is that they facilitate self-selection: the process where a candidate says to themselves "I don't meet the requirements" and doesn't apply. Research shows that women are less likely to apply for job adverts where they don't match all the listed requirements. Is Redux experience really something worth losing a great candidate over?&lt;/p&gt;

&lt;p&gt;Rather have a short list of the requirements that really matter. Karen Catlin recommends picking the five skills your candidate truly needs and including only those. She also advises that you avoid extra-curricular requirements like a well-populated GitHub profile, as these unnecessarily filter out great candidates.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#describe-experience-instead-of-prescribing-it"&gt;
  &lt;/a&gt;
  Describe experience instead of prescribing it
&lt;/h2&gt;

&lt;p&gt;What makes a software engineer experienced? This question is surprisingly easy to answer wrong. I've worked with self-taught engineers who can code circles around some folks that have an M.Sc. in Computer Science. Ten years of experience could be ten years of doing the same thing repeatedly and learning nothing. Someone else might have learned everything they need to know in a few short years, while working with world-class engineers.&lt;/p&gt;

&lt;p&gt;In the job adverts I put together, I tried an experiment. Instead of prescribing professional experience, I &lt;strong&gt;described&lt;/strong&gt; it. Here's what I mean:&lt;/p&gt;

&lt;p&gt;Traditional prescription of experience:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;At least a Bachelor's degree in Computer Science or related field&lt;/li&gt;
&lt;li&gt;5 years of software development experience&lt;/li&gt;
&lt;li&gt;At least 2 years of experience working with relational databases&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#my-experiment-a-description-of-experience-level"&gt;
  &lt;/a&gt;
  My experiment: a description of experience level
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;This example is for what you might call a "mid-level" engineer&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;There is a technical stack in which you feel confident delivering features&lt;/li&gt;
&lt;li&gt;You have a broad base of engineering skills and have started to deepen your knowledge in one or two areas&lt;/li&gt;
&lt;li&gt;You're able to contribute to technical conversations about how to solve problems&lt;/li&gt;
&lt;li&gt;You ask questions about whether you're building the right thing, rather than just about how you're building it&lt;/li&gt;
&lt;li&gt;You've made some technical mistakes and learnt from them&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This way, you're building a clear picture of where a person should be at in their career. You're talking about how you might judge someone's experience, rather than providing a box-ticking experience. This approach lets the candidate see what's important to you. If you've got well-articulated descriptions of your company's job grades or salary bands, you might find something there you can re-purpose. As a bonus, this may make salary negotiation fairer because the job requirements will be aligned with your internal promotion and pay processes.&lt;/p&gt;

&lt;p&gt;It is also worth including some wording that encourages folks to apply even if they don't meet all the listed requirements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-some-objective-analysis"&gt;
  &lt;/a&gt;
  Use some objective analysis
&lt;/h2&gt;

&lt;p&gt;Turns out people have done some research into the kind of language turns people away from job adverts. For example, the words we use are subtly "gender-coded". The research shows that you'll turn women away if your job description that is full of masculine-coded words.&lt;/p&gt;

&lt;p&gt;There's a great &lt;a href="http://gender-decoder.katmatfield.com/"&gt;online tool&lt;/a&gt; you can use to highlight gender-coded language in your job description. If you have too much masculine language, you can spend a little time rewording things to be more inclusive.&lt;/p&gt;

&lt;p&gt;For the startup I helped, it turned out the job adverts were "strongly masculine-coded". Some example words included: "leading", "competitors" and "decide".  Remember that none of the words are inherently bad. It's just that, once you have enough of them, your description starts to put people off applying for your job. Rather drop them and appeal to a broader audience. As a plus, the research shows the number of "feminine-coded" language in a job description has no impact on the number of male applicants.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ask-for-feedback"&gt;
  &lt;/a&gt;
  Ask for feedback
&lt;/h2&gt;

&lt;p&gt;Okay, so you've spent some time improving your job advert. Now test it. Reach out to your network and find some people who match the demographic you're trying to reach. Show them your job adverts and ask them how it makes them feel. Implement their suggestions. They'll also let you know if you've said something silly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#better-job-adverts-lead-to-better-candidates"&gt;
  &lt;/a&gt;
  Better job  adverts lead to better candidates
&lt;/h2&gt;

&lt;p&gt;Turns out the trick to attracting applicants from underrepresented backgrounds is simply to write a better job description. If you want to attract the many fantastic software engineers from underrepresented backgrounds, you need to put in a bit of work and create a better job advert. Be clear, be concise and be objective.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;p&gt;I'd recommend you read &lt;a href="https://betterallies.com/buy/"&gt;The “Better Allies” Approach to Hiring&lt;/a&gt;. It's a great resource, with practical tips (checklists, even) for making your overall hiring process more inclusive.&lt;/p&gt;

</description>
      <category>inclusion</category>
      <category>hiring</category>
      <category>culture</category>
    </item>
    <item>
      <title>Mastering Web Scraping in Python: From Zero to Hero</title>
      <author>Ander Rodriguez</author>
      <pubDate>Thu, 22 Jul 2021 14:00:28 +0000</pubDate>
      <link>https://dev.to/anderrv/mastering-web-scraping-in-python-from-zero-to-hero-4fj4</link>
      <guid>https://dev.to/anderrv/mastering-web-scraping-in-python-from-zero-to-hero-4fj4</guid>
      <description>&lt;p&gt;Website scraping is much more than extracting content with some CSS selectors. We summarized years of expertise in this guide. With all these new tricks and ideas, you'll be able to scrape data reliably, faster, and more performant. And get some extra fields that you thought were not present.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;p&gt;For the code to work, you will need  &lt;a href="https://www.python.org/downloads/"&gt;python3 installed&lt;/a&gt; . Some systems have it pre-installed. After that, install all the necessary libraries by running &lt;code&gt;pip install&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;requests beautifulsoup4 pandas
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Getting the HTML from a URL is easy with the requests library. Then pass the content to BeautifulSoup, and we can start getting data and querying with selectors. We won't go into much detail. In short, you can use  &lt;a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/#css-selectors"&gt;CSS selectors&lt;/a&gt;  to get page elements and content. Some require a different syntax, but we'll discover that later.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt; 
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt; 

&lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://zenrows.com"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'html.parser'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Web Data Automation Made Easy - ZenRows
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To avoid requesting the HTML every time, we can store it in an HTML file and load BeautifulSoup from there. For a simple demo, we can do this manually. An easy way to do that is to view the page source, copy and paste it into a file. It is essential to visit the page without being logged in, as a crawler would do.&lt;/p&gt;

&lt;p&gt;Getting the HTML in here might look like a simple task, but nothing farther from the truth. We won't cover it in this blog post, but it deserves a complete guide. Our advice is to use this static approach since many websites will redirect you to a login page after a few requests. Some others will show a captcha, and in the worst-case scenario, your IP will get banned.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"test.html"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"html.parser"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Web Data Automation Made Easy - ZenRows
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we load statically from a file, we can test as many times as possible without any networking or blocking problem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#explore-before%C2%A0coding"&gt;
  &lt;/a&gt;
  Explore before Coding
&lt;/h2&gt;

&lt;p&gt;Before we start coding, we have to understand the page's content and structure. For that, the easier way we know is to inspect the target page using a browser. &lt;em&gt;We will be using Chrome's DevTools, but other browsers have similar tools.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We can open any product page on Amazon, for example, and a quick look will show us the product's name, price, availability, and many other fields. Before copying all those selectors, we recommend taking a couple of minutes to look for hidden inputs, metadata, and network requests.&lt;/p&gt;

&lt;p&gt;Beware of doing this with Chrome DevTools or similar means. You will see the content once the Javascript and network requests have (maybe) modified it. It is tiresome, but sometimes we must explore the original HTML to avoid running Javascript. We won't need to run a headless browser - i.e., Puppeteer - if we find everything, saving time and memory consumption.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Disclaimer: we won't include the URL request in the code snippets for every example. They all look like the first one. And remember, store an HTML file locally if you are going to test it several times.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hidden-inputs"&gt;
  &lt;/a&gt;
  Hidden Inputs
&lt;/h3&gt;

&lt;p&gt;Hidden inputs allow developers to include input fields that end-users cannot see nor modify. Many forms use these to include internal IDs or security tokens.&lt;/p&gt;

&lt;p&gt;In  &lt;a href="https://www.amazon.com/dp/B08F7PTF54"&gt;Amazon products&lt;/a&gt; , we can see that there are many more. Some will be available in other places or formats, but sometimes they are unique. Either way, hidden inputs' names tend to be more stable than classes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_RqZ1Wb6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yorwy1i8enylbpffuwte.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_RqZ1Wb6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yorwy1i8enylbpffuwte.png" alt="Hidden Inputs on Amazon Products"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#metadata"&gt;
  &lt;/a&gt;
  Metadata
&lt;/h3&gt;

&lt;p&gt;While some content is visible via UI, it might be easier to extract using metadata. You can get view count in numeric format and publish date in YYYY-mm-dd format in a  &lt;a href="https://www.youtube.com/watch?v=tmNXKqeUtJM"&gt;YouTube video&lt;/a&gt; . Those two can be obtained with means from the visible part, but there is no need. Spending a few minutes doing these techniques pays off.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;interactionCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'meta'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;itemprop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"interactionCount"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;interactionCount&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;# 8566042 
&lt;/span&gt;
&lt;span class="n"&gt;datePublished&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'meta'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;itemprop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"datePublished"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datePublished&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;# 2014-01-09
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#xhr-requests"&gt;
  &lt;/a&gt;
  XHR Requests
&lt;/h3&gt;

&lt;p&gt;Some other websites decide to load an empty template and bring all the data via XHR requests. In those cases, checking just the original HTML won't be enough. We need to inspect the networking, specifically the XHR requests.&lt;/p&gt;

&lt;p&gt;That's the case for  &lt;a href="https://www.auction.com/"&gt;Auction&lt;/a&gt; . Fill the form with any city and search. That will redirect you to a results page with a skeleton page while it performs some queries for the city you entered.&lt;/p&gt;

&lt;p&gt;That forces us to use a headless browser that can execute Javascript and intercept network requests, but we'll see its upsides also. Sometimes you can call the XHR endpoint directly, but they usually require cookies or other authentication methods. Or they can instantly ban you since that is not a regular user path. Be careful.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--crIRBCHz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uoah8nepgu5ypnhle0ma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--crIRBCHz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uoah8nepgu5ypnhle0ma.png" alt="Auction.com XHR Requests"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We struck gold. Take another look at the image.&lt;/p&gt;

&lt;p&gt;All the data you can have, already clean and formatted, is ready to be extracted. And then some more. Geolocation, internal IDs, numerical price with no format, year built etcetera.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recipes-and-tricks-to-extract-reliable%C2%A0content"&gt;
  &lt;/a&gt;
  Recipes and Tricks to Extract Reliable Content
&lt;/h2&gt;

&lt;p&gt;Set aside your urges for a second. Getting everything with CSS selectors is an option, but there are many more. Take a look at all these, and then think again before using selectors directly. We are not saying those are bad and ours great. Don't get us wrong.&lt;/p&gt;

&lt;p&gt;We are trying to give you more tools and ideas. Then it will be your decision every time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-internal%C2%A0links"&gt;
  &lt;/a&gt;
  Getting Internal Links
&lt;/h3&gt;

&lt;p&gt;Now, we will start using BeautifulSoup to get meaningful content. This library allows us to get content by IDs, classes, pseudo-selectors, and many more. We will only cover a small subset of its capabilities.&lt;/p&gt;

&lt;p&gt;This example will extract all the internal links from the page. For simplicity's sake, only links starting with a slash will be considered internal. In a completer case, we should check domain and subdomains.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;internalLinks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; 
    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'href'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'href'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'href'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;internalLinks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we have all those links, we could deduplicate and queue them for future scraping. By doing it, we would be building a whole website crawler, not just for one page. Since that is an entirely different problem, we wanted to mention it and prepare a blog post to handle its usage and scalability. The number of pages to crawl can snowball.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Just a note of caution: be prudent while running this automatically. You can get hundreds of links in a few seconds, which would result in too many requests to the same site. If not handled carefully, captchas or bans will probably apply.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#extracting-social-links-and%C2%A0emails"&gt;
  &lt;/a&gt;
  Extracting Social Links and Emails
&lt;/h3&gt;

&lt;p&gt;Another common scraping task is to extract social links and emails. There is no exact definition for "social links," so we'll obtain them based on domain. As for emails, there are two options: "mailto" links and checking the whole text.&lt;/p&gt;

&lt;p&gt;We will be using a  &lt;a href="https://www.webscraper.io/test-sites/e-commerce/allinone"&gt;scraping test site&lt;/a&gt;  for this demo.&lt;/p&gt;

&lt;p&gt;This first snippet will get all the links, similar to the previous one. Then loop over all of them, checking if any social domains or "mailto" are present. In that case, add that URL to the list and finally print it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;links&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'href'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; 
&lt;span class="n"&gt;to_extract&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"facebook.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"twitter.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"mailto:"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
&lt;span class="n"&gt;social_links&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; 
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;links&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;social&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;to_extract&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;social&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
            &lt;span class="n"&gt;social_links&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;social_links&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c1"&gt;# ['mailto:****@webscraper.io', 
# 'https://www.facebook.com/webscraperio/', 
# 'https://twitter.com/webscraperio']
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This second one is a bit more tricky if you are not familiar with regular expressions. In short, they will try to match any text given a search pattern.&lt;/p&gt;

&lt;p&gt;In this case, it will try to match some characters (mainly letters and numbers), followed by [@], then again chars - the domain - [dot] and finally two to four characters - Internet top-level domains or TLD. It will find, for example, &lt;code&gt;test@example.com&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Note that this regex is not a complete one because it won't match composed TLDs such as &lt;code&gt;co.uk&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can run this expression in the entire content (HTML) or just the text. We use the HTML for completion, although we will duplicate the email since it's shown in the text and an href.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;emails&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
    &lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s"&gt;"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;emails&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# ['****@webscraper.io', '****@webscraper.io']
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parse-tables-automatically"&gt;
  &lt;/a&gt;
  Parse Tables Automatically
&lt;/h3&gt;

&lt;p&gt;HTML tables have been around forever, but they are still in use for displaying tabular content. We can take advantage of that since they are usually structured and well-formatted.&lt;/p&gt;

&lt;p&gt;Using  &lt;a href="https://en.wikipedia.org/wiki/List_of_best-selling_albums"&gt;Wikipedia's List of best-selling albums&lt;/a&gt;  as an example, we will extract all the values to an array and a pandas dataframe. It is a simple example, but you should manipulate all the data as if it came from a dataset.&lt;/p&gt;

&lt;p&gt;We start by finding a table and looping through all the rows ("tr"). For each of them, find cells ("td" or "th"). The following lines will remove notes and collapsible content from Wikipedia tables, not strictly necessary. Then, append the cell's stripped text to the row and the row to the final output. Print the result to check that everything looks fine.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"table"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"sortable"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; 
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tr"&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
    &lt;span class="n"&gt;new_row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; 
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;cell&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findAll&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;"td"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"th"&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt; 
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;sup&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'sup'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
            &lt;span class="n"&gt;sup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extract&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;collapsible&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
                &lt;span class="n"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"mw-collapsible-content"&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
            &lt;span class="n"&gt;collapsible&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extract&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
        &lt;span class="n"&gt;new_row&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_text&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; 
    &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c1"&gt;# [ 
#     ['Artist', 'Album', 'Released', ...], 
#     ['Michael Jackson', 'Thriller', '1982', ...] 
# ]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another way is to use &lt;code&gt;pandas&lt;/code&gt; and import directly the HTML, as shown below. It will handle everything for us: the first line will match the headers, and the rest will be inserted as content with the right type. &lt;code&gt;read_html&lt;/code&gt; returns an array, so we take the first item and then remove a column that has no content.&lt;/p&gt;

&lt;p&gt;Once into a dataframe, we could do any operation, like ordering by sales, since pandas converted some columns to numbers. Or sum all the claim sales. Not truly useful here, but you get the idea.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt; 

&lt;span class="n"&gt;table_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;))[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
&lt;span class="n"&gt;table_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;table_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Ref(s)'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;table_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# ['Artist', 'Album', 'Released' ... 
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;table_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dtypes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# ... Released int64 ... 
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;table_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Claimed sales*'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# 422 
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;table_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; 
&lt;span class="c1"&gt;# Artist                     Pink Floyd 
# Album                      The Dark Side of the Moon 
# Released                   1973 
# Genre                      Progressive rock 
# Total certified copies...  24.4 
# Claimed sales*             45
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#extract-from-metadata-instead-of%C2%A0html"&gt;
  &lt;/a&gt;
  Extract from Metadata instead of HTML
&lt;/h3&gt;

&lt;p&gt;As seen before, there are ways to get essential data without relying on visual content. Let's see an example using  &lt;a href="https://www.netflix.com/title/80189685"&gt;Netflix's The Witcher&lt;/a&gt; . We'll try to get the actors. Easy, right? A one-liner will do.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;actors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"item-starring"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
    &lt;span class="n"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"title-data-info-item-list"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;actors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;','&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
&lt;span class="c1"&gt;# ['Henry Cavill', 'Anya Chalotra', 'Freya Allan']
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What if I told you that there are fourteen actors and actresses? Will you try to get 'em all? Do not scroll further if you want to try it by yourself. I'll wait.&lt;/p&gt;

&lt;p&gt;Nothing yet? Remember, there's more than meets the eye. You know three of them; search for those in the original HTML. To be honest, there's another place down below that shows the whole cast, but try to avoid it.&lt;/p&gt;

&lt;p&gt;Netflix includes a Schema.org snippet with the actor and actress list and many other data. As with the YouTube example, sometimes it is more convenient to use this approach. Dates, for example, are usually displayed in "machine-like" format, which is more helpful while scraping.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oEYF3NmG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kiel0o92th01fd90c4sw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oEYF3NmG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kiel0o92th01fd90c4sw.png" alt="Netflix Schema"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt; 

&lt;span class="n"&gt;ldJson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"script"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"application/ld+json"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="n"&gt;parsedJson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ldJson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;actor&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;actor&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;parsedJson&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'actors'&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt; 
&lt;span class="c1"&gt;# [... 'Jodhi May', 'MyAnna Buring', 'Joey Batey' ...]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Some other times this is a practical approach if we don't want to render Javascript. We'll show an example using  &lt;a href="https://www.instagram.com/billieeilish/"&gt;Instagram Billie Eilish's profile&lt;/a&gt; . They are known blockers. After visiting a few pages, you will be redirected to a login page. Be careful while scraping Instagram and use local HTML for testing.&lt;/p&gt;

&lt;p&gt;We'll cover how to avoid those blocks or redirects in a future post. Stay tuned!&lt;/p&gt;

&lt;p&gt;The usual way would be to search for a class, in our case "Y8-fY". We advise against using these classes since they will probably change. They look autogenerated. Many modern websites use this kind of CSS, and it gets generated for every change, which means that we cannot rely on them.&lt;/p&gt;

&lt;p&gt;Plan B: &lt;code&gt;"header ul &amp;gt; li"&lt;/code&gt;, right? It will work. But we need Javascript rendering for that since it is not present on the first load. As stated before, we should try to avoid that.&lt;/p&gt;

&lt;p&gt;Take a look at the source HTML: title and description include followers, following, and post numbers. It might be a problem since they are in string format, but we can get over it. If we only want that data, we won't need a headless browser. Great!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;metaDescription&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"meta"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'description'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;metaDescription&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; 
&lt;span class="c1"&gt;# 87.9m Followers, 0 Following, 493 Posts ...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#hidden-ecommerce-product-information"&gt;
  &lt;/a&gt;
  Hidden eCommerce Product Information
&lt;/h3&gt;

&lt;p&gt;Combining some of the techniques already seen, we aim to extract product information that is not visible. Our first example is a Shopify eCommerce,  &lt;a href="https://www.spigen.com/collections/tesla/products/tesla-model-3-ta100-sticker?variant=39270568230959"&gt;Spigen&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;Take a look on your own first if you want.&lt;/p&gt;

&lt;p&gt;Hint: look for the brand 🤐.&lt;/p&gt;

&lt;p&gt;We'll be able to extract it reliably, not from the product name nor the breadcrumbs, since we cannot say if they are always related.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1hEQiTFi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c5x58w4pa839j5rswi4v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1hEQiTFi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c5x58w4pa839j5rswi4v.png" alt="Spigen Schema Metadata"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Did you find them? In this case, they use "itemprop" and include Product and Offer from schema.org. We could probably tell if a product is in stock by looking at the form or the "Add to cart" button. But there is no need, we can trust on &lt;code&gt;itemprop="availability"&lt;/code&gt;. As for the brand, the same snippet as the one used for YouTube but changing the property name to "brand."&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;brand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'meta'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;itemprop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"brand"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;brand&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;# Tesla
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another Shopify example:  &lt;a href="https://nomz.com/collections/energy-bites/products/gift-box?variant=31459597090948"&gt;nomz&lt;/a&gt; . We want to extract the rating count and average, accessible in the HTML but somewhat hidden. The average rating is hidden from view using CSS.&lt;/p&gt;

&lt;p&gt;There's a screen reader only tag with the average and the count near it. Those two include text, not a big deal. But we know we can do better.&lt;/p&gt;

&lt;p&gt;It is an easy one if you inspect the source. The Product schema will be the first thing you see. Applying the same knowledge from the Netflix example, get the first "ld+json" block, parse the JSON, and all the content will be available!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="n"&gt;ldJson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"script"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"application/ld+json"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parsedJson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ldJson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parsedJson&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"aggregateRating"&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;"ratingValue"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;# 4.9
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parsedJson&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"aggregateRating"&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;"reviewCount"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;# 57
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parsedJson&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"weight"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;# 0.492kg -&amp;gt; extra, not visible in UI
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Last but not least, we will take advantage of data attributes, which are also common in eCommerce. While inspecting  &lt;a href="https://maruccisports.com/wood-bats/"&gt;Marucci Sports Wood Bats&lt;/a&gt; , we can see that every product has several data points that will come in handy. Price in numeric format, ID, product name, and category. We have there all the data we might need.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; 
&lt;span class="n"&gt;cards&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"card"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;card&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cards&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; 
        &lt;span class="s"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'data-entity-id'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
        &lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'data-name'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
        &lt;span class="s"&gt;'category'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'data-product-category'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
        &lt;span class="s"&gt;'price'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'data-product-price'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;})&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c1"&gt;# [ 
#    { 
#         "category": "Wood Bats, Wood Bats/Professional Cuts", 
#         "id": "1945", 
#         "name": "6 Bat USA Professional Cut Bundle", 
#         "price": "579.99" 
#    }, 
#    { 
#         "category": "Wood Bats, Wood Bats/Pro Model", 
#         "id": "1804", 
#          "name": "M-71 Pro Model", 
#          "price": "159.99" 
#    }, 
#    ... 
# ]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#remaining-obstacles"&gt;
  &lt;/a&gt;
  Remaining Obstacles
&lt;/h2&gt;

&lt;p&gt;All right! You got all the data from that page. Now you have to replicate it to a second and then a third. Scale is important. And so is not getting banned.&lt;/p&gt;

&lt;p&gt;But you also have to convert this data and store it: CSV files or databases, whatever you need. Nested fields are not easy to export to any of those formats.&lt;/p&gt;

&lt;p&gt;We already took enough of your time. Take in all this new information, use it in your everyday work. Meanwhile, we'll be working on the following guides to overcoming all these obstacles!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We'd like you to go with three lessons:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;CSS selectors are good, but there are other options.&lt;/li&gt;
&lt;li&gt;Some content is hidden - or not present - but accessible via metadata.&lt;/li&gt;
&lt;li&gt;Try to avoid loading Javascript and headless browsers to boost performance.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Each of these has upsides and downsides, different approaches, and many, many alternatives. Writing a complete guide would be, well, a long book, not a blog post.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.zenrows.com/contact?utm_source=devto&amp;amp;utm_medium=blog&amp;amp;utm_campaign=mastering_scraping"&gt;Contact us&lt;/a&gt;  if you know any more website scraping tricks or have doubts about applying them.&lt;/p&gt;

&lt;p&gt;Remember, we covered scraping, but there is much more: crawling, avoiding being blocked, converting and storing the content, scaling the infrastructure, and more. Stay tuned!&lt;/p&gt;

&lt;p&gt;And if you liked the content, please share it.&lt;/p&gt;




&lt;p&gt;Originally published at  &lt;a href="https://www.zenrows.com/blog/mastering-web-scraping-in-python-from-zero-to-hero?utm_source=devto&amp;amp;utm_medium=blog&amp;amp;utm_campaign=mastering_scraping"&gt;https://www.zenrows.com&lt;/a&gt; &lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
