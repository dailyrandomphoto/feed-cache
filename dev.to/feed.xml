<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>CLOUD COMPUTING WITH FAUNADB CLOUDWARE</title>
      <author>p-ken1</author>
      <pubDate>Sun, 29 Aug 2021 17:58:21 +0000</pubDate>
      <link>https://dev.to/pken1/cloud-computing-with-faunadb-cloudware-fbk</link>
      <guid>https://dev.to/pken1/cloud-computing-with-faunadb-cloudware-fbk</guid>
      <description>&lt;p&gt;Fauna is the data API for client-serverless applications. With support for custom business logic and integration with the serverless ecosystem, enables developers to simplify code and ship faster. Fauna database is a general purpose distributed database, supporting multiple data models and strong global consistency also supporting multiple programming languages and most importantly it implements pay as you grow feature. Fauna transforms the traditional DBMS into a Data API that gives you all of the capabilities of an old-guard database, without sacrificing flexibility, scale, and performance. Fauna core functions are inspired by Calvin, a clock-less, strictly-serializable transactional protocol for multi-region environments.&lt;br&gt;
It is easy to use as a document database and you can manage your data from the web interface having a very mature user friendly UI or the command line. It's extremely fast and scales infinitely in the cloud. Its greatest flex is its ability to handle complex data modelling use cases.&lt;/p&gt;

&lt;p&gt;Objective Introducing Faunadb cloudware computing to both beginners and experts, Exploring its uniqueness among cloud computing services.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;First Off we need an account with Fauna, sign up at Fauna. The UI is pretty friendly and It also&lt;br&gt;
offers tutorials on getting familiar with the Fauna environment. To get this feature click on the question mark (?) button at the top right corner of thesite.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-faunadb-cloudware-repository"&gt;
  &lt;/a&gt;
  Creating FaunaDB cloudware repository
&lt;/h2&gt;

&lt;p&gt;Now lets create a database&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First we click on NEW DATABASE&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then enter your database name into the database name field&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check the “pre-populate with data” to checkbox&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then click save&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#browsing-your-data"&gt;
  &lt;/a&gt;
  Browsing your data
&lt;/h2&gt;

&lt;p&gt;The overview page for your database is displayed after creating your database.&lt;br&gt;
If you checked the pre populated demo checkbox, the database would be populated with some data. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#example-of-an-overview-page"&gt;
  &lt;/a&gt;
  Example of an overview page
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aCmOB7hv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u333yozukenf4e07hx63.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aCmOB7hv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u333yozukenf4e07hx63.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then on your left hand side of your window, you should see a&lt;br&gt;
dashboard like menu, containing info about your database and these menu options&lt;br&gt;
are&lt;/p&gt;

&lt;p&gt;•collections&lt;/p&gt;

&lt;p&gt;•functions&lt;/p&gt;

&lt;p&gt;• Indexes&lt;/p&gt;

&lt;p&gt;•Shell&lt;/p&gt;

&lt;p&gt;•GraphQl&lt;/p&gt;

&lt;p&gt;• Security&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#example-of-an-dashboard-page"&gt;
  &lt;/a&gt;
  Example of an dashboard page
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nHOb8ZHJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e3qz4j1g40ztblq7f8g3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nHOb8ZHJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e3qz4j1g40ztblq7f8g3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#collections"&gt;
  &lt;/a&gt;
  Collections
&lt;/h2&gt;

&lt;p&gt;Collections are Fauna's version of SQl tables, they are like a way for our&lt;br&gt;
database to differentiate different data. To create a new collection,&lt;/p&gt;

&lt;p&gt;Click on &lt;code&gt;New Collection&lt;/code&gt; to create a new collection, then click on&lt;br&gt;
&lt;code&gt;Collection&lt;/code&gt; on the menu by the left to see the documents for each&lt;br&gt;
collection selected. Collections shouldn't be a hassle to understand if you are familiar with mongodb.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#indexes"&gt;
  &lt;/a&gt;
  Indexes
&lt;/h2&gt;

&lt;p&gt;Indexes help us to browse the data in our collections. They are basically like&lt;br&gt;
a tag to a document in the collection. These helps fauna to avoid performing&lt;br&gt;
full scans of collections thereby not affecting performance. It is similar to&lt;br&gt;
SQL foreign keys.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click on the Index tab to create a new index&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#functions"&gt;
  &lt;/a&gt;
  Functions
&lt;/h2&gt;

&lt;p&gt;These are inbuilt functions provided by the fauna Query language (FQL). They can&lt;br&gt;
be used to query and modify a database Note FQL is a functional language Some&lt;br&gt;
functions are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Paginate&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Match&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Index&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Collection&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lambda&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Var&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Join&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#shell"&gt;
  &lt;/a&gt;
  Shell
&lt;/h2&gt;

&lt;p&gt;This is the command line (CLI) that lets us execute fauna queries interactively&lt;br&gt;
and again can be used both on the web or on your local machine when installed.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#graphql-and-security"&gt;
  &lt;/a&gt;
  GraphQL and Security
&lt;/h2&gt;

&lt;p&gt;This section covers GraphQL , an open source data query and manipulation&lt;br&gt;
language read more. And also Fauna security, designed to make it easy to query&lt;br&gt;
one database from any network connected context Read more.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#uploading-data"&gt;
  &lt;/a&gt;
  Uploading data
&lt;/h2&gt;

&lt;p&gt;We can add data to our created collection in our database. We add what?s called&lt;br&gt;
a document. (Note TTl) This document is represented as a plain javascript&lt;br&gt;
object. The data saved does not necessarily follow a rigid structure. To do&lt;br&gt;
this, we first off&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go to our collection and click on new document button Then we would be
presented with an Ide kind of UI with an empty object.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fill in your data following the key value system in JavaScript. Below is what&lt;br&gt;
our object would look like after filling it with data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
   {
      name : "Tony",
      email : "Tony@gmail.com"
   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Then click save.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The document is then saved in the collection in the format below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
   {
     “ref” : Ref(collection(collection_name), “279291161097536c12”),
     “ts” : 1602612179196000,
      “data” : {
                    “name” : “Tony”,
                    “email”: “Tony@gmail.com”
                   }
    }
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Where in addition to our custom data we have&lt;br&gt;
Ref (Unique reference Id) It used to join data to a unique value in the&lt;br&gt;
collections The ref function is used to express the reference for a specific&lt;br&gt;
document that exists in the current database collection. It is like an id a&lt;br&gt;
unique one. References serve the same purpose as primary keys in the database&lt;br&gt;
systems, they are used to provide pointers to a specific document. The function&lt;br&gt;
takes in two arguments, the first is the collection name and the second is the&lt;br&gt;
id of that document as seen below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
 Ref(Collection(collection_name), document_id)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;ts&lt;/code&gt; field is a Long or unique number with microsecond resolution, generated&lt;br&gt;
by fauna everytime we save to the database. It represents the most recent event&lt;br&gt;
that modified the document. In fauna, anytime a modification&lt;br&gt;
is made in our document, fauna stores a new copy of the updated document meaning&lt;br&gt;
we can still ask for previous instances and getting a snapshot of the database&lt;br&gt;
before and after particular transactions where processed. Now we can also upload&lt;br&gt;
data from our local machine . I would be using Node.js and Express to connect to&lt;br&gt;
fauna&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First off we set up our node project and initialize it , and if you do not&lt;br&gt;
node installed download and install node following this guide (a link to a&lt;br&gt;
guide on downloading and installing node)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then we need an API secret Key which we would be using in our codes.&lt;br&gt;
We can get this back at our our fauna account with the website all you need&lt;br&gt;
do is go to Settings then developers then request for your API key then copy&lt;br&gt;
it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now we install necessary packages, we install Faunadb, and express&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now we create an src directory and in there create an index.js file&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now we require express and Faunadb and Initialize faunadb Client&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const app = require("express");
    const faunadb = require("faunadb");

  //now we initialize faunadb client
     const client = new              
     faunadb.Client({secret:"Your_Key"});

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;The client would connect our source code to the actual database in the cloud
using the API secret key which we provided.&lt;/li&gt;
&lt;li&gt;Now we start off our express server.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const app = require("express");
const faunadb = require("faunadb");

//now we initialize faunadb client

const client = new faunadb.Client({secret:"Your_Key"});

app.listen(5000, () =&amp;gt; console.log("API on https//localhost:5000"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;-Then we import FQL functions from the Faunadb query namespace&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const app = require("express");
const faunadb = require("faunadb");

//now we initialize faunadb client

const client = new faunadb.Client({secret:"Your_Key"});

//we import fql functions there are more functions out there we imported only

//the ones we would be using

const { Get, Create, Select} = fauna.query; }
app.listen(5000, () =&amp;gt; console.log("API on https//localhost:5000"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Now lets create a post endpoint to send data to our database,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We setup our async function, then we use the create function then point to&lt;br&gt;
the collection we want and then pass whatever data we want to pass&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const app = require("express");
const faunadb = require("faunadb");

//now we initialize faunadb client

const client = new faunadb.Client({secret:"Your_Key"});

//we import fql functions there are more functions out there we imported only

const { Get, Create, Select} = fauna.query;

//our post request

app.post("/user", async function(req, res) {
let data = {
                  name : "Tony",
                   email : Tony@gmail.com
                }
Const doc = await Client.query( Create( Collection("collection_name"), {data}) );

res.send(doc);
});

app.listen(5000, () =&amp;gt; console.log("API on https//localhost:5000"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Then Let's use postman to send a post request to that end point&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We would be returned data&lt;br&gt;
It looks like this&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;“ref” : (collection(collection_name), id),
“ts” : 22345432125656,
“data”:{
“name”: “Tony”,
“email”: “Tony@gmail.com”
           }

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Retrieving dataTo retrieve data we would need to setup our API end&lt;br&gt;
point Here this endpoint would get a single user&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First off we set up our async function and the reason for this is because&lt;br&gt;
any query we make to Fauna would return a promise&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now we need to set up a GET endpoint to get a user with the Id in the url&lt;br&gt;
We do this below&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const app = require("express");
const faunadb = require("faunadb");

//now we initialize faunadb client

const client = new faunadb.Client({secret:"Your_Key"});

//we import fql functions there are more functions out there we imported only

//the ones we would be using

const { Get, Create, Select} = fauna.query;

//our post request

app.post("/user", async function(req, res) {
let data = {
                 name : "Tony",
                 email : Tony@gmail.com
                 }

Const doc = await Client.query( Create( Collection("collection_name"), {data} ));

res.send(doc);

});


//our get request

app.get("/user/:id", async function(req, res) {
const doc = await client.query(
Get(
Ref(
Collection("users"), req.params.id)
).catch(e =&amp;gt; res.send(e));

res.send(doc);

)};

app.listen(5000, () =&amp;gt; console.log("API on https//localhost:5000"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We use the Get function we imported to query the database&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the “ref” function, we would pass in the Id of the document we want to&lt;br&gt;
retrieve and we did this by passing it to the url and getting the value&lt;br&gt;
using req.params.id&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then we make a get request to Localhost:5000/user/copied_id&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If everything goes well we should get a document with Tony’s name and Email&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Like this blow&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ref: Ref(collection(collection_name), "Id"),
ts: 1233263743819,
data: {
name: "Tony",
email: "Tony@gmail.com"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;maintenance Fauna is deployed and scaled as a collection of nodes, each of which operate within a cluster in an autonomous fashion. &lt;br&gt;
Note There are no additional pieces of management software, such as a dedicated cluster manager to deploy.&lt;br&gt;
Fauna provides a database administrator with first class commands to manipulate&lt;br&gt;
the cluster. These commands are designed to establish the FOS methodology, reducing operational complexity with fauna. Fauna is fully online.&lt;br&gt;
 This means that Fauna has the ability to be fully operational while the command is executing. Most databases employ the rolling window operational scheme, which makes portions of the system unavailable for a duration while this is taking place. This limits the database capacity and availability of the command. Fauna ensures that your database is online and available before, during and after the execution of a command.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Fauna modernizes database operations by making them simpler, efficient , low-cost and easy to manage References: Fauna website&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Get Foods {Day - 16}</title>
      <author>Al Siam</author>
      <pubDate>Sun, 29 Aug 2021 17:53:18 +0000</pubDate>
      <link>https://dev.to/alsiamworld/get-food-day-16-2506</link>
      <guid>https://dev.to/alsiamworld/get-food-day-16-2506</guid>
      <description>&lt;h1&gt;
  &lt;a href="#100daysofcode-day-16-"&gt;
  &lt;/a&gt;
  100daysofcode { Day - 16 }
&lt;/h1&gt;

&lt;p&gt;Here you can search for the food of your choice and find out the details by clicking on the food. I created it using the themealdb API and currently updating the site.&lt;/p&gt;

&lt;p&gt;Live Preview: &lt;a href="https://alsiamworld.github.io/get-foods/"&gt;https://alsiamworld.github.io/get-foods/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5qVJLn4z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lff0hpexfq4eyhs97hzq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5qVJLn4z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lff0hpexfq4eyhs97hzq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Weekly Digest 34/2021</title>
      <author>Marco Biedermann</author>
      <pubDate>Sun, 29 Aug 2021 17:42:42 +0000</pubDate>
      <link>https://dev.to/marcobiedermann/weekly-digest-34-2021-ai0</link>
      <guid>https://dev.to/marcobiedermann/weekly-digest-34-2021-ai0</guid>
      <description>&lt;p&gt;Welcome to my Weekly Digest #34 which is the last one for August.&lt;/p&gt;

&lt;p&gt;This weekly digest contains a lot of interesting and inspiring articles, videos, tweets, podcasts, and designs I consumed during this week.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#interesting-articles-to-read"&gt;
  &lt;/a&gt;
  Interesting articles to read
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#from-createreactapp-to-next"&gt;
  &lt;/a&gt;
  From Create-React-App to Next
&lt;/h3&gt;

&lt;p&gt;Kitty recently moved a significant codebase from Create-React-App (CRA for short) to Next and shares their experience, because it was quite a journey.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://kittygiraudel.com/2021/08/24/from-cra-to-next/"&gt;From Create-React-App to Next&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-you-cant-set-state-multiple-times-in-a-row-in-react"&gt;
  &lt;/a&gt;
  Why you can't set state multiple times in a row in React
&lt;/h3&gt;

&lt;p&gt;If you have ever tried to set a state variable multiple times in a row in a React component, you may have been surprised to find that it didn’t quite work.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://typeofnan.dev/why-you-cant-setstate-multiple-times-in-a-row/"&gt;Why you can't set state multiple times in a row in React&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stealing-game-animation-techniques-to-engage-users"&gt;
  &lt;/a&gt;
  Stealing Game Animation Techniques to Engage Users
&lt;/h3&gt;

&lt;p&gt;Today’s websites are overflowing with animations—often too many. They get in the way of the content and slow down our busy users. But at the same time:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://css-tricks.com/stealing-game-animation-techniques-to-engage-users/"&gt;Stealing Game Animation Techniques to Engage Users&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#some-great-videos-i-watched-this-week"&gt;
  &lt;/a&gt;
  Some great videos I watched this week
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-the-secret-behind-the-curve-algorithm"&gt;
  &lt;/a&gt;
  What is the secret behind the curve algorithm
&lt;/h3&gt;

&lt;p&gt;Have you ever wanted to know more about the p5.js bezier function? Well, I have good news for you! Thanks to the generous donation of Jason Oswald I do a deep dive exploring the bezier function.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/enNfb6p3j_g"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/shiffman"&gt;Daniel Shiffman&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bash-in-100-seconds"&gt;
  &lt;/a&gt;
  Bash in 100 Seconds
&lt;/h3&gt;

&lt;p&gt;Bash is the command-line shell that you encounter when you open the terminal on most Unix operating systems, like macOS and Linux. Learn how to create your own bash scripts to automate tasks on your computer.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/I4EWvMFj37g"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/fireship_dev"&gt;Fireship&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-lightning-algorithm"&gt;
  &lt;/a&gt;
  The Lightning Algorithm
&lt;/h3&gt;

&lt;p&gt;Matt Henderson is making lightning in mazes.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/akZ8JJ4gGLs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/numberphile"&gt;Numberphile&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#databases-in-the-microservices-world"&gt;
  &lt;/a&gt;
  Databases in the Microservices World
&lt;/h3&gt;

&lt;p&gt;Web technologies have come leaps and bounds. But are you still using the tired old database from last generation? Let’s look at the methodology of microservices, compare it to bounded contexts, and look at ops tasks for micro-databases.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-9Veoch50Bg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/rob_rich"&gt;Rob Richardson&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#chrome-93-whats-new-in-devtools"&gt;
  &lt;/a&gt;
  Chrome 93 - What’s New in DevTools
&lt;/h3&gt;

&lt;p&gt;Editable CSS container queries, web bundle preview, better string handling in the Console, and more.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/1VaPAnUGRz8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/chromedevtools"&gt;Google Chrome Developers&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tailwind-in-100-seconds"&gt;
  &lt;/a&gt;
  Tailwind in 100 Seconds
&lt;/h3&gt;

&lt;p&gt;Tailwind is a utility-first CSS framework for building websites. It takes a functional approach to web design by providing thousands of tiny classes to use directly in your HTML.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/mr15Xzb1Ook"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/fireship_dev"&gt;Fireship&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#useful-github-repositories"&gt;
  &lt;/a&gt;
  Useful GitHub repositories
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#netlify-cli"&gt;
  &lt;/a&gt;
  netlify cli
&lt;/h3&gt;

&lt;p&gt;Netlify Command Line Interface&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/netlify"&gt;
        netlify
      &lt;/a&gt; / &lt;a href="https://github.com/netlify/cli"&gt;
        cli
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Netlify Command Line Interface
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/netlify/clicli.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n3kqWP20--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/netlify/clicli.png" alt="Netlify CLI"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://codecov.io/gh/netlify/cli" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e52e7172ec418ac95272c05bab45d6fa453ba361675ce1248eabc0841dd7170d/68747470733a2f2f636f6465636f762e696f2f67682f6e65746c6966792f636c692f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage Status"&gt;&lt;/a&gt;
&lt;a href="https://npmjs.org/package/netlify-cli" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d5674a74d90443b01f2bf6400d50a8e277cd691c7629b43c7262a18f2fdaa09b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6e65746c6966792d636c692e737667" alt="npm version"&gt;&lt;/a&gt; &lt;a href="https://npmjs.org/package/netlify-cli" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e906fd854683b903510501c0657f3ddbc3a753a57320c16d277052a804c155f4/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f6e65746c6966792d636c692e737667" alt="downloads"&gt;&lt;/a&gt; &lt;a href="https://app.netlify.com/sites/cli/deploys" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/440793168beb49d5a7abe5174052a854a45410de29dce94f4e79ebb350e11e38/68747470733a2f2f6170692e6e65746c6966792e636f6d2f6170692f76312f6261646765732f64333830373337392d326463662d346134332d396330302d6537653864393065636637302f6465706c6f792d737461747573" alt="netlify-status"&gt;&lt;/a&gt; &lt;a href="https://david-dm.org/netlify/cli" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ed7a35dc9a8c8171c88e3bdad3ae012f17cdc6dabe615e8c28bc6e217adfa1f9/68747470733a2f2f64617669642d646d2e6f72672f6e65746c6966792f636c692f7374617475732e737667" alt="dependencies"&gt;&lt;/a&gt; &lt;a href="https://snyk.io/test/npm/netlify-cli" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fd7dbb4ecbdbb675edcdd49fbb227692003d7a5698c221ca9b0de5f9e0a27328/68747470733a2f2f736e796b2e696f2f746573742f6e706d2f6e65746c6966792d636c692f62616467652e737667" alt="security"&gt;&lt;/a&gt;&lt;a href="https://app.fossa.com/projects/custom%2B17679%2Fgit%40github.com%3Anetlify%2Fcli.git?ref=badge_shield" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/42e065c4dbd2f5875435bf37be569579acea6309c48287950eed19db8d530624/68747470733a2f2f6170702e666f7373612e636f6d2f6170692f70726f6a656374732f637573746f6d25324231373637392532466769742534306769746875622e636f6d2533416e65746c696679253246636c692e6769742e7376673f747970653d736869656c64" alt="FOSSA Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Interact with &lt;a href="http://netlify.com/" rel="nofollow"&gt;Netlify&lt;/a&gt; from the comfort of your CLI.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://cli.netlify.com/commands/" rel="nofollow"&gt;CLI command line reference&lt;/a&gt; to get started and the docs on using &lt;a href="https://github.com/netlify/cli/blob/main/docs/netlify-dev.md"&gt;Netlify Dev&lt;/a&gt; to run your site locally.&lt;/p&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;

Click to expand
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/netlify/cli#commands"&gt;Commands&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#addons"&gt;addons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#api"&gt;api&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#build"&gt;build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#deploy"&gt;deploy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#dev"&gt;dev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#env"&gt;env&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#functions"&gt;functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#init"&gt;init&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#link"&gt;link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#lm"&gt;lm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#login"&gt;login&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#open"&gt;open&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#sites"&gt;sites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#status"&gt;status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#switch"&gt;switch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#unlink"&gt;unlink&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#watch"&gt;watch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#completion"&gt;completion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#development"&gt;Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netlify/cli#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;Netlify CLI requires &lt;a href="https://nodejs.org" rel="nofollow"&gt;Node.js&lt;/a&gt; version 10 or above. To install, run the following command from any directory in your terminal:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install netlify-cli -g&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;When using the CLI in a CI environment we recommend installing it locally as a development dependency, instead of globally
To install locally, run the following command from the root directory of your project:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install --save-dev netlify-cli&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Running &lt;code&gt;npm install netlify-cli -g&lt;/code&gt; in CI means you're always installing the latest version of the CLI, including &lt;strong&gt;breaking changes&lt;/strong&gt;. When you install locally…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/netlify/cli"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#miller"&gt;
  &lt;/a&gt;
  Miller
&lt;/h3&gt;

&lt;p&gt;Miller is like awk, sed, cut, join, and sort for data formats such as CSV, TSV, tabular JSON and positionally-indexed.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/johnkerl"&gt;
        johnkerl
      &lt;/a&gt; / &lt;a href="https://github.com/johnkerl/miller"&gt;
        miller
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Miller is like awk, sed, cut, join, and sort for name-indexed data such as CSV, TSV, and tabular JSON
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSfNgLS9WVRq9mu8dZlMbS7LbTyRH1diRDnT_dGiavSOh_A8xA/viewform?usp=sf_link" rel="nofollow"&gt;&lt;strong&gt;Take the 2021 Miller User Survey!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
What is Miller?&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Miller is like awk, sed, cut, join, and sort for data formats such as CSV, TSV, tabular JSON and positionally-indexed.&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;
What can Miller do for me?&lt;/h1&gt;
&lt;p&gt;With Miller, you get to use named fields without needing to count positional
indices, using familiar formats such as CSV, TSV, JSON, and
positionally-indexed.  Then, on the fly, you can add new fields which are
functions of existing fields, drop fields, sort, aggregate statistically
pretty-print, and more.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/johnkerl/miller./docs/coverart/cover-combined.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xLeFfNVr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/johnkerl/miller./docs/coverart/cover-combined.png" alt="cover-art"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Miller operates on &lt;strong&gt;key-value-pair data&lt;/strong&gt; while the familiar
Unix tools operate on integer-indexed fields: if the natural data structure for
the latter is the array, then Miller's natural data structure is the
insertion-ordered hash map.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Miller handles a &lt;strong&gt;variety of data formats&lt;/strong&gt;
including but not limited to the familiar &lt;strong&gt;CSV&lt;/strong&gt;, &lt;strong&gt;TSV&lt;/strong&gt;, and &lt;strong&gt;JSON&lt;/strong&gt;
(Miller can handle &lt;strong&gt;positionally-indexed data&lt;/strong&gt; too!)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the above image (color…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/johnkerl/miller"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#software-engineering-blogs"&gt;
  &lt;/a&gt;
  Software Engineering Blogs
&lt;/h3&gt;

&lt;p&gt;A curated list of engineering blogs&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/kilimchoi"&gt;
        kilimchoi
      &lt;/a&gt; / &lt;a href="https://github.com/kilimchoi/engineering-blogs"&gt;
        engineering-blogs
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A curated list of engineering blogs
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Software Engineering Blogs &lt;a href="https://github.com/sindresorhus/awesome"&gt;&lt;img src="https://camo.githubusercontent.com/abb97269de2982c379cbc128bba93ba724d8822bfbe082737772bd4feb59cb54/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667" alt="Awesome"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;div&gt;
    &lt;br&gt;
    &lt;br&gt;
    
    &lt;p&gt;
        &lt;sup&gt;Special thanks to:&lt;/sup&gt;
        &lt;a href="https://doppler.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=engblogs&amp;amp;utm_source=github" rel="nofollow"&gt;
            &lt;/a&gt;&lt;/p&gt;
&lt;div&gt;&lt;a href="https://doppler.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=engblogs&amp;amp;utm_source=github" rel="nofollow"&gt;
                &lt;img src="https://camo.githubusercontent.com/0b7046d12223b30accf7609035ff5ff104bb05b406d1842add5849fba4436e7d/68747470733a2f2f64617368626f6172642e646f70706c65722e636f6d2f696d67732f6c6f676f2d6c6f6e672e737667" width="230" alt="Doppler"&gt;
            &lt;/a&gt;&lt;/div&gt;
&lt;a href="https://doppler.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=engblogs&amp;amp;utm_source=github" rel="nofollow"&gt;
            &lt;b&gt;All your environment variables, in one place&lt;/b&gt;
            &lt;div&gt;
                Stop struggling with scattered API keys, hacking together home-brewed tools,
                &lt;br&gt;
                &lt;sup&gt;and avoiding access controls. Keep your team and servers in sync with Doppler.&lt;/sup&gt;
            &lt;/div&gt;
        &lt;/a&gt;
&lt;/div&gt;
&lt;h3&gt;
&lt;a href="https://github.com/kilimchoi/engineering-blogs#companies-1"&gt;Companies&lt;/a&gt;
&lt;/h3&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#-companies"&gt;#&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#a-companies"&gt;A&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#b-companies"&gt;B&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#c-companies"&gt;C&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#d-companies"&gt;D&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#e-companies"&gt;E&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#f-companies"&gt;F&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#g-companies"&gt;G&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#h-companies"&gt;H&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#i-companies"&gt;I&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#j-companies"&gt;J&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#k-companies"&gt;K&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#l-companies"&gt;L&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#m-companies"&gt;M&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#n-companies"&gt;N&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#o-companies"&gt;O&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#p-companies"&gt;P&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#q-companies"&gt;Q&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#r-companies"&gt;R&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#s-companies"&gt;S&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#t-companies"&gt;T&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#u-companies"&gt;U&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#v-companies"&gt;V&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#w-companies"&gt;W&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#x-companies"&gt;X&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#y-companies"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#z-companies"&gt;Z&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h3&gt;
&lt;a href="https://github.com/kilimchoi/engineering-blogs#individualsgroup-contributors-1"&gt;Individuals/Group Contributors&lt;/a&gt;
&lt;/h3&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#-individuals"&gt;#&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#a-individuals"&gt;A&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#b-individuals"&gt;B&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#c-individuals"&gt;C&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#d-individuals"&gt;D&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#e-individuals"&gt;E&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#f-individuals"&gt;F&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#g-individuals"&gt;G&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#h-individuals"&gt;H&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#i-individuals"&gt;I&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#j-individuals"&gt;J&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#k-individuals"&gt;K&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#l-individuals"&gt;L&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#m-individuals"&gt;M&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#n-individuals"&gt;N&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#o-individuals"&gt;O&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#p-individuals"&gt;P&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#q-individuals"&gt;Q&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#r-individuals"&gt;R&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#s-individuals"&gt;S&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#t-individuals"&gt;T&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#u-individuals"&gt;U&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#v-individuals"&gt;V&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#w-individuals"&gt;W&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#x-individuals"&gt;X&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#y-individuals"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#z-individuals"&gt;Z&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h3&gt;
&lt;a href="https://github.com/kilimchoi/engineering-blogs#productstechnologies-1"&gt;Products/Technologies&lt;/a&gt;
&lt;/h3&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;









&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#-technologies"&gt;#&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#a-technologies"&gt;A&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#b-technologies"&gt;B&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#c-technologies"&gt;C&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#d-technologies"&gt;D&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#e-technologies"&gt;E&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#f-technologies"&gt;F&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#g-technologies"&gt;G&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#h-technologies"&gt;H&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#i-technologies"&gt;I&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#j-technologies"&gt;J&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#k-technologies"&gt;K&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#l-technologies"&gt;L&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#m-technologies"&gt;M&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#n-technologies"&gt;N&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#o-technologies"&gt;O&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#p-technologies"&gt;P&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#q-technologies"&gt;Q&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#r-technologies"&gt;R&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#s-technologies"&gt;S&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#t-technologies"&gt;T&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#u-technologies"&gt;U&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#v-technologies"&gt;V&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#w-technologies"&gt;W&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#x-technologies"&gt;X&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#y-technologies"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs#z-technologies"&gt;Z&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h3&gt;
Companies&lt;/h3&gt;
&lt;h4&gt;
# companies&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;500px &lt;a href="https://developers.500px.com/" rel="nofollow"&gt;https://developers.500px.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;8th Light &lt;a href="https://8thlight.com/blog/" rel="nofollow"&gt;https://8thlight.com/blog/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;99designs &lt;a href="https://99designs.com/tech-blog/" rel="nofollow"&gt;https://99designs.com/tech-blog/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
A companies&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;AdRoll &lt;a href="http://tech.adroll.com/blog/" rel="nofollow"&gt;http://tech.adroll.com/blog/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Addepar &lt;a href="https://medium.com/build-addepar" rel="nofollow"&gt;https://medium.com/build-addepar&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Affinity &lt;a href="https://build.affinity.co/" rel="nofollow"&gt;https://build.affinity.co/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Airbrake &lt;a href="https://airbrake.io/blog/" rel="nofollow"&gt;https://airbrake.io/blog/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;AirPair &lt;a href="https://www.airpair.com/software-experts" rel="nofollow"&gt;https://www.airpair.com/software-experts&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Advanced Web Machinery &lt;a href="https://advancedweb.hu/" rel="nofollow"&gt;https://advancedweb.hu/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Airbnb &lt;a href="https://medium.com/airbnb-engineering" rel="nofollow"&gt;https://medium.com/airbnb-engineering&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Airtame…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/kilimchoi/engineering-blogs"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#dribbble-shots"&gt;
  &lt;/a&gt;
  dribbble shots
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#plants-shop-app"&gt;
  &lt;/a&gt;
  Plants Shop App
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zs9ZyPEO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/4633673/screenshots/16336224/media/3eae4c4cfa704d8cb7b641d697e098b0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zs9ZyPEO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/4633673/screenshots/16336224/media/3eae4c4cfa704d8cb7b641d697e098b0.jpg" alt="https://cdn.dribbble.com/users/4633673/screenshots/16336224/media/3eae4c4cfa704d8cb7b641d697e098b0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/16336224-Plants-Shop-App"&gt;Tajul Islam&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#clothing-store-app"&gt;
  &lt;/a&gt;
  Clothing Store App
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--15I5fRb0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/1684108/screenshots/16334781/media/e0511f18d51da159c0a185c2700b5dcc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--15I5fRb0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/1684108/screenshots/16334781/media/e0511f18d51da159c0a185c2700b5dcc.png" alt="https://cdn.dribbble.com/users/1684108/screenshots/16334781/media/e0511f18d51da159c0a185c2700b5dcc.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/16334781-Clothing-Store-App"&gt;QClay&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ecommerce-shop-app-ui"&gt;
  &lt;/a&gt;
  E-commerce Shop App UI
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1hW6OtAO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/6175319/screenshots/16336220/media/485e8048a89019ee254da76ffa16d87e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1hW6OtAO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/6175319/screenshots/16336220/media/485e8048a89019ee254da76ffa16d87e.png" alt="https://cdn.dribbble.com/users/6175319/screenshots/16336220/media/485e8048a89019ee254da76ffa16d87e.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/16336220-E-commerce-Shop-App-UI"&gt;Tazrin&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#furniture-ecommerce-mobile-app-design"&gt;
  &lt;/a&gt;
  Furniture eCommerce mobile app design
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9BYdD7PN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/6494685/screenshots/16336268/media/ab7139a39681332b7455643437ae98c8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9BYdD7PN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/6494685/screenshots/16336268/media/ab7139a39681332b7455643437ae98c8.png" alt="https://cdn.dribbble.com/users/6494685/screenshots/16336268/media/ab7139a39681332b7455643437ae98c8.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/16336268-Furniture-eCommerce-mobile-app-design"&gt;Ripon Ahmed&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tweets"&gt;
  &lt;/a&gt;
  Tweets
&lt;/h2&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YWv4keQw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1429868296556335126/pu/img/LgrOqSEj4KgVZb2N.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--TTZOvLCd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1332018227942019073/Jh666gw3_normal.jpg" alt="Adam Argyle profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Adam Argyle
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/argyleink"&gt;@argyleink&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      🆕 &amp;lt;length&amp;gt; Tool&lt;br&gt;in Chrome Canary today:&lt;br&gt;&lt;br&gt;✅ drag px, rem, em, vh, etc&lt;br&gt;✅ hold shift to adjust by 10&lt;br&gt;✅ hold alt/opt to adjust by .1&lt;br&gt;✅ change/explore unit types in a dropdown&lt;br&gt;&lt;br&gt;*much like design tools* 😎&lt;br&gt;&lt;br&gt;[video alt]&lt;br&gt;drag to adjust padding, gaps and widths! 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      18:12 PM - 23 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1429869198197415939" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1429869198197415939" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1429869198197415939" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e8P5nPnx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E9tHQ2nXsAEU9EG.png" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--HtAuZn5w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1188024416313196546/zGxQhsWI_normal.jpg" alt="Stefan Judis profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Stefan Judis
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/stefanjudis"&gt;@stefanjudis&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I just discovered that Node 16 comes with promise-based timer functions! 🎉👏&lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/7NISrQNdiR"&gt;nodejs.org/docs/latest-v1…&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      08:54 AM - 26 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1430815812726792195" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1430815812726792195" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1430815812726792195" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p7dWkZ_Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E9xNvkIVEAQVywF.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ssw5R0J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1329737305226047488/hzUCRqXQ_normal.jpg" alt="Alex Reardon profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Alex Reardon
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/alexandereardon"&gt;@alexandereardon&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      For safety I think most functions that accept arrays should use the `readonly` keyword. &lt;br&gt;&lt;br&gt;Adding `readonly` prevents the function from accidentally modifying a provided array 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      04:01 AM - 27 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1431104456431575045" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1431104456431575045" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1431104456431575045" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5OlL_cYw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/tweet_video_thumb/E9wOQ-XUUAQQF_1.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--_KLCAeJi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/528338902466064385/TNKIQLqt_normal.jpeg" alt="Rishabh Singh profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Rishabh Singh
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @rishabhs
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Very excited about formula prediction being released in Google Sheets! A great collaboration between Google Sheets and Brain team. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      23:25 PM - 26 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1431035024787312644" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1431035024787312644" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1431035024787312644" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NEzw4dJ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E95QWWpVkAIbyHj.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--GxdrKe6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1362890164289216513/o1nrJALT_normal.jpg" alt="Jeremy Moser profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Jeremy Moser
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @jmoserr
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Copywriting tip: remove friction phrases. Your marketing should tell users what they’ll get, not what they have to do: 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:28 PM - 28 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1431670079280726022" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1431670079280726022" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1431670079280726022" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;





&lt;h2&gt;
  &lt;a href="#picked-pens"&gt;
  &lt;/a&gt;
  Picked Pens
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#3d-breaking-bad"&gt;
  &lt;/a&gt;
  3D Breaking Bad
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ricardoolivaalonso/embed/LYLEJBK?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/rolivaalonso"&gt;Ricardo Oliva Alonso&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css-drummer"&gt;
  &lt;/a&gt;
  CSS Drummer
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/deren2525/embed/zYwQVGM?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/study_dedede"&gt;Deren&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#podcasts-worth-listening"&gt;
  &lt;/a&gt;
  Podcasts worth listening
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#syntax-why-do-people-hate-css"&gt;
  &lt;/a&gt;
  Syntax – Why Do People Hate CSS?
&lt;/h3&gt;

&lt;p&gt;In this Hasty Treat, Scott and Wes talk about why people hate CSS, some common issues, and how you can level up.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/4YW90PksXt1eMSnIXFkvC4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ladybug-podcast-how-to-create-great-documentation"&gt;
  &lt;/a&gt;
  Ladybug Podcast – How to Create Great Documentation
&lt;/h3&gt;

&lt;p&gt;It’s easy to overlook documentation when building an application, but documentation can make or break a consumer’s experience.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/28jv8wYRC61lMXP1uJ02TH"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#codepen-radio-new-admin-tools"&gt;
  &lt;/a&gt;
  CodePen Radio – New Admin Tools
&lt;/h3&gt;

&lt;p&gt;Chris &amp;amp; Marie talk about a big long project that we’ve finished at CodePen: our new Admin Tools. Any web app is gonna need ’em.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/2YWq25t9XQQjjCIxNzloSK"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax-advice-for-new-devs"&gt;
  &lt;/a&gt;
  Syntax – Advice for New Devs
&lt;/h3&gt;

&lt;p&gt;In this episode of Syntax, Scott and Wes talk about advice for new devs, our advice, and opinions for how new devs can level up.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/5NX2J4AqlD81PrYLUXYMS9"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;Thank you for reading, talk to you next week, and stay safe! 👋&lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>¿Que es HTML?</title>
      <author>Bryan Rosa Tavarez</author>
      <pubDate>Sun, 29 Aug 2021 17:30:12 +0000</pubDate>
      <link>https://dev.to/bryan_rt15/que-es-html-10a6</link>
      <guid>https://dev.to/bryan_rt15/que-es-html-10a6</guid>
      <description>&lt;p&gt;Actualmente la mayoría de las personas han visto cientos de páginas web pero muchos se preguntarán Como están creadas o ¿Qué es HTML? ¿Cómo funciona? ¿Es difícil escribir en HTML? ¿Dónde puedo escribir HTML? Y otras preguntas como estas serán respondidas a continuación.&lt;/p&gt;

&lt;p&gt;Comenzando por aclarar que es la Web, que no es mas que el conjunto de documentos HTML interconectados alrededor del mundo gracias a internet. Así que toda la web esta creado bajo un estándar llamado HTML. Y de seguro te preguntaras que es HTML. Antes de empezar lo que te digo si es que si quieres ser desarrollador web, HTML es el primer lenguaje que debes aprender.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#qu%C3%A9-es-html"&gt;
  &lt;/a&gt;
  ¿Qué es HTML?
&lt;/h1&gt;

&lt;p&gt;“HTML es un lenguaje de marcado que se utiliza para el desarrollo de páginas de Internet. HTML son las siglas de Hyper Text Markup Lenguaje. Es decir, Lenguatje de marcado de hipertexto. Para entender qué significa, analicémoslo por partes:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hipertexto&lt;/strong&gt;: Se refiere a los enlaces (links). Un enlace puede conectar un documento con otro. Aunque hoy es muy común, en su momento fue una revolución.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Marcado&lt;/strong&gt;: Un lenguaje de marcado se encarga de estructurar documentos, es decir, indicar las secciones y jerarquía de elementos.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lenguaje&lt;/strong&gt;: HTML es un lenguaje, su mismo nombre lo dice. Ahora bien, ten presente que es un lenguaje de marcado, no de programación.&lt;/p&gt;

&lt;p&gt;No obstante, este tipo de definiciones no nos dice mucho porque la definición es técnica. Para algunas personas al leer esto, piensan que HTML incluye el diseño gráfico de las páginas web, sin embargo, eso no es cierto ya que HTML sólo sirve para indicar como va ordenado el contenido de una página web. Esto lo hace por medio de las marcas de hipertexto las cuales son etiquetas conocidas en inglés como tags.&lt;/p&gt;

&lt;p&gt;HTML es el lenguaje con el que se define el contenido de las páginas web. Básicamente se trata de un conjunto de etiquetas que sirven para definir el texto y otros elementos que compondrán una página web, como imágenes, listas, vídeos, etc.&lt;/p&gt;

&lt;p&gt;HTML es fácil de aprender. Su sintaxis está basada en etiquetas: una de apertura y una de cierre. Y dentro de ellas va el contenido.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#etiquetas-en-html"&gt;
  &lt;/a&gt;
  Etiquetas en HTML.
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iiL5ehL0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630220665257/P3eMKnwqv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iiL5ehL0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630220665257/P3eMKnwqv.png" alt="htmlexp.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ya tenemos una idea sobre lo que hace HTML pero aún no sabemos cómo funcionan las etiquetas. Para esto vamos a imaginar que tienen que hacer un ensayo sobre algún tema, consideraremos que el ensayo será nuestra página web y la manera en la que va ordenado un ensayo es por un título, la introducción, el desarrollo y la conclusión, si se tiene en cuenta que esto nos dice cómo debe ir nuestro ensayo podemos considerar que éstas serían las etiquetas porque nos dicen la estructura que lleva, es decir, la forma en que se acomoda el texto en nuestro ensayo. Cabe mencionar que las etiquetas no sólo sirven para ordenar nuestro contenido sino que ayudan a los buscadores como Google, Yahoo search y muchos otros a encontrar la información por medio de las etiquetas.&lt;/p&gt;

&lt;p&gt;Ahora que entendemos el concepto de etiquetas, necesitamos poder identificarlas. Éstas se caracterizan porque van dentro de los caracteres menor que &amp;lt; y mayor que &amp;gt;, como en este ejemplo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Inicio de la etiqueta&amp;gt;
**Contenido**
&amp;lt;/Fin de la etiqueta&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Contenido&lt;br&gt;
Las etiquetas se indican entre los símbolos &amp;lt; y &amp;gt; y la etiqueta de cierre se indica además con /&lt;/p&gt;

&lt;p&gt;Las etiquetas pueden contener información adicional indicada con atributos. Los atributos tienen un nombre y un valor. Por ejemplo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;etiqueta atributo="valor"&amp;gt;Contenido&amp;lt;/etiqueta&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Existes ciertas excepciones con el fin de las etiquetas, ya que algunas usualmente sólo se utilizan con el inicio de la etiqueta, ejemplos de esto son las etiquetas BR (salto de línea), IMG (etiqueta para poner una imagen), entre otras.&lt;/p&gt;

&lt;p&gt;Finalmente, sólo nos falta saber dónde escribir código en HTML y para ello sólo es necesario un editor de texto como el bloc de notas, aunque en mi opinión te recomendaría que descargaras Visual studio code debido a que facilita la escritura de código HTML. Si aún quieres saber si HTML es fácil de escribir, te diría que sí, porque no hay mayor obstáculo en el aprendizaje que tus propias ganas de aprender, además del hecho que desde niños hemos aprendido a distinguir y clasificar todo a nuestro alrededor y es básicamente de lo que se encarga HTML así que no habrá una gran dificultad.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#estructura-b%C3%A1sica-html"&gt;
  &lt;/a&gt;
  Estructura básica HTML.
&lt;/h2&gt;

&lt;p&gt;Esta es la estructura básica de un documento HTML&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

    &amp;lt;h1&amp;gt;Encabezado&amp;lt;/h1&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ya que HTML es un lenguaje de marcado y su función es darle estructura y jerarquía al contenido. y cada etiqueta ya esta definida con su función determinada ya que es un estándar predefinido por una organización llamada W3C que es Consorcio WWW, en inglés: World Wide Web Consortium, es un consorcio internacional que genera recomendaciones y estándares que aseguran el crecimiento de la World Wide Web a largo plazo.​ son los que dicen cuales etiquetas va ha usarse y cuales no.&lt;/p&gt;

&lt;p&gt;Bueno espero que le allá quedado claro lo que es HTML y sobre como esta estructurado dicho lenguaje, vimos como se compone de etiquetas de apertura y de cierre y que cada etiquete tiene una función en especifica y que cada una de esas etiquetas están predefinida por la W3C. &lt;a href="https://bryan-rt.hashnode.dev/que-es-html"&gt;https://bryan-rt.hashnode.dev/que-es-html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>css</category>
      <category>design</category>
    </item>
    <item>
      <title>.map() Polyfill</title>
      <author>Swapnadeep Mohapatra</author>
      <pubDate>Sun, 29 Aug 2021 17:21:35 +0000</pubDate>
      <link>https://dev.to/swapnadeepmohapatra/map-polyfill-5b84</link>
      <guid>https://dev.to/swapnadeepmohapatra/map-polyfill-5b84</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-a-polyfill"&gt;
  &lt;/a&gt;
  What is a polyfill?
&lt;/h2&gt;

&lt;p&gt;Polyfill is code that implements a feature on web browsers that is expected to be provided by the browser natively but is not available. The developer uses one's logic to implement the solution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-map"&gt;
  &lt;/a&gt;
  What is .map()
&lt;/h2&gt;

&lt;p&gt;It is an array function that is used to iterate over an array and create a new array with the results of the calling of the function. This comes in handy when we don't want to implement the for loop from scratch and want to modify all the elements of the array in the same way, hence saving a lot of time as well as some lines of code.&lt;/p&gt;

&lt;p&gt;The function is applied in an array and takes in another function as a parameter (known as callback function). In the callback function's parameters &lt;strong&gt;the current element of the array&lt;/strong&gt;, &lt;strong&gt;index&lt;/strong&gt; , and &lt;strong&gt;the complete array&lt;/strong&gt; are passed. They same way it happens in the &lt;strong&gt;&lt;em&gt;.forEach()&lt;/em&gt;&lt;/strong&gt; function.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.map()&lt;/code&gt; is very similar to that of &lt;code&gt;.forEach()&lt;/code&gt;. But instead of returning the items, &lt;code&gt;.map()&lt;/code&gt; returns the modified array. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-the-polyfill"&gt;
  &lt;/a&gt;
  Writing the Polyfill
&lt;/h2&gt;

&lt;p&gt;We will be iterating over an array of some listed companies in NSE and adding the prefix of "NSE:" before every stock.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;stocks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;COLPAL&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ITC&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;IOC&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;NHPC&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INFY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Firstly let's try running the native &lt;code&gt;.map()&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;nseStocks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;stocks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stock&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`NSE: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;stock&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nseStocks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// ["NSE: COLPAL", "NSE: ITC", "NSE: IOC", "NSE: NHPC", "NSE: INFY"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, now let's write the polyfill and add the map function to the prototype of Array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myMap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;newArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;newArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newArray&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's try running our polyfill.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;nseStocks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;stocks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stock&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`NSE: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;stock&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nseStocks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// ["NSE: COLPAL", "NSE: ITC", "NSE: IOC", "NSE: NHPC", "NSE: INFY"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  Connect with me
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;For more &lt;strong&gt;&lt;em&gt;awesome&lt;/em&gt;&lt;/strong&gt; JS or WebDev related blogs &lt;a href="https://dev.to/swapnadeepmohapatra/"&gt;check out my profile&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/swapnadeep-mohapatra-11b371159/"&gt;LinkedIn&lt;/a&gt; &lt;a href="https://www.swapnadeep.com/"&gt;My Portfolio&lt;/a&gt; &lt;a href="https://www.twitter.com/swapnadeeptukk/"&gt;Twitter&lt;/a&gt; &lt;a href="https://www.instagram.com/swapnadeep_mohapatra/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>functional</category>
    </item>
    <item>
      <title>NFT images generator using Python Jupyter Notebook</title>
      <author>Victor Quan Lam</author>
      <pubDate>Sun, 29 Aug 2021 17:16:56 +0000</pubDate>
      <link>https://dev.to/victorquanlam/nft-images-generator-using-python-jupyter-notebook-1ec7</link>
      <guid>https://dev.to/victorquanlam/nft-images-generator-using-python-jupyter-notebook-1ec7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#generate-nft-images-using-python-and-jupyter-notebook"&gt;
  &lt;/a&gt;
  Generate NFT images using python and Jupyter Notebook
&lt;/h2&gt;

&lt;p&gt;Let me introduce nft-image-generator  &lt;a href="https://github.com/benyaminahmed/nft-image-generator"&gt;(repo)&lt;/a&gt; which generates a series of unique images using a collection of layers&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://www.python.org/downloads/"&gt;Python&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Install PIP
Download PIP get-pip.py
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py

python get-pip.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Install Python Pillow
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install pillow
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt; Install Python display
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install display
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Install Jupyter Notebook
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install jupyter 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Run Jupyter in your nft-image-generator folder
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;jupyter notebook
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Run the commands in [generate.ipynb] to generate images.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It will output all the generated images to the /images folder, and the metadata to the /metadata folder. The filenames will refer to tokenIds. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This &lt;a href="https://dev.to/victorquanlam/step-by-step-guide-to-nfts-creation-and-sale-for-beginners-using-opensea-4dm6"&gt;blog&lt;/a&gt; will show you how to upload your first nft  to Opensea. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>What did you teach this week?</title>
      <author>Aatmaj</author>
      <pubDate>Sun, 29 Aug 2021 16:27:45 +0000</pubDate>
      <link>https://dev.to/aatmaj/what-did-you-teach-this-week-nk4</link>
      <guid>https://dev.to/aatmaj/what-did-you-teach-this-week-nk4</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The art of teaching is the art of assisting discovery.&lt;br&gt;
– Mark Van Doren&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Teaching is perhaps the most noble profession ever! We as Developers, too can participate as teachers in many different ways. Writing blogs, answering on stack exchange or helping a collogue with a tricky concept all count in teaching.&lt;/p&gt;

&lt;p&gt;Whatever you have taught this week, however small, counts as a big help!&lt;br&gt;
 So please comment below, your teachings in this week! &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HwEgJeGh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cyte0sp7cge3hjmodlrj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HwEgJeGh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cyte0sp7cge3hjmodlrj.gif" alt="teacher-school"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>teachingthisweek</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Code This #4: Remove Duplicates</title>
      <author>Let's Code</author>
      <pubDate>Sun, 29 Aug 2021 16:21:06 +0000</pubDate>
      <link>https://dev.to/frontendengineer/code-this-4-remove-duplicates-13m5</link>
      <guid>https://dev.to/frontendengineer/code-this-4-remove-duplicates-13m5</guid>
      <description>&lt;h4&gt;
  &lt;a href="#interview-question-4"&gt;
  &lt;/a&gt;
  Interview Question #4:
&lt;/h4&gt;

&lt;p&gt;Write a function that will remove duplicate in an array.🤔❓ You can get a variation of this question as Get unique characters from a list.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you need practice, try to solve this on your own. I have included 2 potential solutions below. &lt;/p&gt;

&lt;p&gt;Note: There are many other potential solutions to this problem.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Feel free to bookmark 🔖 even if you don't need this for now. You may need to refresh/review down the road when it is time for you to look for a new role.&lt;/p&gt;

&lt;p&gt;Code: &lt;a href="https://codepen.io/angelo_jin/pen/PojPRzQ"&gt;https://codepen.io/angelo_jin/pen/PojPRzQ&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#solution-1-es6-set"&gt;
  &lt;/a&gt;
  Solution #1: ES6 Set
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;removeDuplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#solution-2-object"&gt;
  &lt;/a&gt;
  Solution #2: Object
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;removeDuplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;char&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In case you like a video instead of bunch of code 👍😊&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nrNTiIRY9MU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Happy coding and good luck if you are interviewing!&lt;/p&gt;

</description>
      <category>challenge</category>
      <category>javascript</category>
      <category>jobinterview</category>
    </item>
    <item>
      <title>Starbucks Coffee Company Clone</title>
      <author>Dabananda Mitra</author>
      <pubDate>Sun, 29 Aug 2021 16:04:59 +0000</pubDate>
      <link>https://dev.to/dabanandamitra/starbucks-coffee-company-clone-3ldk</link>
      <guid>https://dev.to/dabanandamitra/starbucks-coffee-company-clone-3ldk</guid>
      <description>&lt;p&gt;This is my first project related to restaurant/food.&lt;/p&gt;

&lt;p&gt;Although the Starbucks website looks very simple, I realized that it is a little bit complex website. It was a little difficult to set up the header of the website, especially in 4K resolution. And with a maximum width of 768 pixels, the website's menu work was very complicated.&lt;/p&gt;

&lt;p&gt;This is the first webpage I created where I used SASS. So maybe SASS and CSS codes can seem a little bit complicated and messy.&lt;/p&gt;

&lt;p&gt;Creating this webpage was a very exciting journey for me. I have learned a lot while making it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y-tV3PJh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mpweigclxysh8r01w6oa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y-tV3PJh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mpweigclxysh8r01w6oa.png" alt="Starbucks-Coffee-Company-Clone"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Live link: &lt;a href="https://starbucks-clone-dm.netlify.app/"&gt;https://starbucks-clone-dm.netlify.app/&lt;/a&gt;&lt;br&gt;
GitHub repository: &lt;a href="https://github.com/dabananda/Starbucks-Coffee-Company-Clone"&gt;https://github.com/dabananda/Starbucks-Coffee-Company-Clone&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
    </item>
    <item>
      <title>How Does Auth Work in a React App with AWS?</title>
      <author>Brian H. Hough</author>
      <pubDate>Sun, 29 Aug 2021 15:56:59 +0000</pubDate>
      <link>https://dev.to/brianhhough/how-does-auth-work-in-a-react-app-with-aws-32ma</link>
      <guid>https://dev.to/brianhhough/how-does-auth-work-in-a-react-app-with-aws-32ma</guid>
      <description>&lt;p&gt;For this &lt;a href="https://www.youtube.com/embed/LoPB-3gnI6I"&gt;Tech Stack in 10&lt;/a&gt;, I'm diving into some best practices for using authentication in your full stack application.&lt;/p&gt;

&lt;p&gt;Today's episode focuses on serverless authentication with AWS, as well as some best practices of what to do and what not to do 👨‍💻💭&lt;/p&gt;

&lt;p&gt;Here’s a glance at what you’ll learn in this episode:&lt;/p&gt;

&lt;p&gt;00:00 Learnings from coaching 8 people on app development&lt;br&gt;
01:11 Authentication in AWS primer&lt;br&gt;
01:54 AppSync and GraphQL API overview&lt;br&gt;
02:16 DynamoDB and database overview&lt;br&gt;
03:00 withAuthenticator best practices&lt;br&gt;
05:43 Experimenting with AmplifyAuthenticator + what not to do!&lt;br&gt;
08:38 Discussion on multi-user authentication&lt;br&gt;
10:27 Finalizing the AWS authentication in our app&lt;br&gt;
11:33 Conclusion&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/LoPB-3gnI6I"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-user-authentication-in-an-app-context"&gt;
  &lt;/a&gt;
  👨‍💻 What Is User Authentication in an App Context?
&lt;/h2&gt;

&lt;p&gt;When you think about developing an authentication system for your software application, you must ensure your system is highly secure and durable, scalable for a growing user base, and able to keep your resources and authorization requirements in place across the application.&lt;/p&gt;

&lt;p&gt;User authentication is a process for confirming, and validating, the identity of a user within a system. It is necessary to create a system for account management for your software's users to ensure they must login with valid credentials before using certain (or all) parts of the product or service on the Internet.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y3l_fPQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1529490738614-4a83c19ed6b2%3Fixid%3DMnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8%26ixlib%3Drb-1.2.1%26auto%3Dformat%26fit%3Dcrop%26w%3D1350%26q%3D80" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y3l_fPQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1529490738614-4a83c19ed6b2%3Fixid%3DMnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8%26ixlib%3Drb-1.2.1%26auto%3Dformat%26fit%3Dcrop%26w%3D1350%26q%3D80" alt="security camera image"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Online services for authentication might require credentials, such as username and password that are used to identify your account within the pool of valid users. Perhaps you'll want to add in 2FA (Two-Factor-Authentication), an additional security mechanism for authentication to verify the users are who they say they are when they log in.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-does-serverless-authentication-work"&gt;
  &lt;/a&gt;
  👨‍💻 How does Serverless Authentication Work?
&lt;/h2&gt;

&lt;p&gt;Serverless authentication is a type of authentication that doesn't require the need for a physical in-house server to store your data. Instead, all of the actions, permissions, and rules are executed in the cloud and users can interact with the features and functionality without any need for a browser plugin. Authentication happens right within the app and gets users the resources and services they have been designated or signed up for.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#lets-take-a-real-life-example-like-the-below-image"&gt;
  &lt;/a&gt;
  Let's take a real life example like the below image:
&lt;/h3&gt;

&lt;p&gt;Your friend is hosting a birthday celebration and you are invited! 🎂&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OCZnMDH7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1528817466667-942353411fee%3Fixid%3DMnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8%26ixlib%3Drb-1.2.1%26auto%3Dformat%26fit%3Dcrop%26w%3D634%26q%3D80" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OCZnMDH7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1528817466667-942353411fee%3Fixid%3DMnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8%26ixlib%3Drb-1.2.1%26auto%3Dformat%26fit%3Dcrop%26w%3D634%26q%3D80" alt="door with buzzer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First of all, &lt;strong&gt;congrats&lt;/strong&gt; on the invite! Birthday parties are so much fun 🎉&lt;/p&gt;

&lt;p&gt;So you might gather your resources, such as a birthday present and an appetizer (extra points if there's an accompanying sauce or dip), and drive out to your friend's house.&lt;/p&gt;

&lt;p&gt;But...when you arrive, you are greeted by this metallic box with some buttons on it. Most remarkably, the door to enter is locked (there are other people's apartments here as well), so there's no way to just go up to your friend's house without a key. &lt;/p&gt;

&lt;p&gt;Well, were you thinking you could just walk into your friend's house without some sort of verification or authentication? 🤔&lt;/p&gt;

&lt;p&gt;&lt;em&gt;That wouldn't be too safe, right?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This metallic box will require you to perhaps, ~buzz~ your friend's speaker box (you will have to know the URL you intend to go to, such as &lt;a href="https://yourwebsite.com/signin"&gt;https://yourwebsite.com/signin&lt;/a&gt;) and then you will need to provide some sort of verification telling your friend who you are and that you are ready to come in (i.e. your username/password, or any such credentials).&lt;/p&gt;

&lt;p&gt;Your friend will hear your voice and then go, "ah yes, come on up old friend!", meaning the authentication worked (your verification checks out: you are in fact who you say you are), the door will ~buzz~ (you will be authenticated: the door will unlock), and you'll be allowed to enter (you are now an authorized user: you now have access to your services/resources in the house...err...I mean app).&lt;/p&gt;

&lt;p&gt;This is authentication in a nutshell, and hopefully gives a real life example of how this can work in an application. Software is very much the same way, and with a service like AWS Cognito user pools, this managed authentication service will let us do this with software and automation, rather than needing to ~buzz~ people in every time into our app. Could you imagine having to buzz people into your app every time? &lt;/p&gt;

&lt;p&gt;That would be I N S A N E 🙈&lt;/p&gt;

&lt;p&gt;Luckily with AWS Cognito, we have a powerhouse of tools to manage our users and these authentication flows!&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-aws-cognito"&gt;
  &lt;/a&gt;
  👨‍💻 What is AWS Cognito?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XYBJ-vOs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1618044619888-009e412ff12a%3Fixlib%3Drb-1.2.1%26ixid%3DMnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8%26auto%3Dformat%26fit%3Dcrop%26w%3D1351%26q%3D80" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XYBJ-vOs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1618044619888-009e412ff12a%3Fixlib%3Drb-1.2.1%26ixid%3DMnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8%26auto%3Dformat%26fit%3Dcrop%26w%3D1351%26q%3D80" alt="authentication failed photo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/cognito/"&gt;AWS Cognito&lt;/a&gt; is a service that lets app developers and software engineers authenticate users without having to create their own identity system.&lt;/p&gt;

&lt;p&gt;This specific AWS service makes it easy for any developer to get started with authentication because they don't have to build and maintain complex backend code.&lt;/p&gt;

&lt;p&gt;It provides all the tools and infrastructure needed from the start, such as sign-up and sign-in flows, multi-factor authentication options, integration with social identity providers like Facebook and Google, and more.&lt;/p&gt;

&lt;p&gt;One of its major benefits is that it can scale incredibly easily for millions of users as your user base grows and your users needs and requirements scale.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-add-authentication-to-an-app"&gt;
  &lt;/a&gt;
  👨‍💻 How to Add Authentication to an App
&lt;/h2&gt;

&lt;p&gt;Thanks to an AWS framework called Amplify, we can run the following command to add auth right into our app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// begin the authentication process&lt;/span&gt;
&lt;span class="nx"&gt;amplify&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt;

&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Do&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;use&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;authentication&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;security&lt;/span&gt; &lt;span class="nx"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="s2"&gt;`Default configuration`&lt;/span&gt;
&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;How&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;able&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;sign&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="s2"&gt;`Email`&lt;/span&gt;
&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Do&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;configure&lt;/span&gt; &lt;span class="nx"&gt;advanced&lt;/span&gt; &lt;span class="nx"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;  &lt;span class="s2"&gt;`No, I am done.`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can customize the way users sign in between &lt;code&gt;username&lt;/code&gt; or &lt;code&gt;email&lt;/code&gt; but make sure that whichever you choose is the one you want to use for the life of your Cognito user pool because you cannot change this specific setting once you build the Cognito User Pool.&lt;/p&gt;

&lt;p&gt;When everything checks out and the scripts run to set up these backend resources for us in the cloud, we'll run the following command to push it to our backend environment:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;amplify&lt;/span&gt; &lt;span class="nx"&gt;push&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Alternatively, we can import a Cognito User Pool right into our application in case we have the user pool already set up and just want to import it into our app directly without any configurations.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-our-graphql-api"&gt;
  &lt;/a&gt;
  👨‍💻 Setting Up our GraphQL API
&lt;/h2&gt;

&lt;p&gt;In the example in my video, I have created a ToDo application that lists a user's ToDos that they have to do.&lt;/p&gt;

&lt;p&gt;When I set up my GraphQL API thanks to the AWS Amplify Framework, I provisioned a DynamoDB table for these ToDo types and put an &lt;code&gt;@auth&lt;/code&gt; parameter on the type. This means that only the authenticated users who create a ToDo will have access to their own ToDos. More simply, I can't see your ToDos and you can't see my ToDos if we are both authenticated users of this ToDo app.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Todo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;allow&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;When a user or set of users upload their ToDos, they will show up in the DynamoDB database &lt;a href="https://www.youtube.com/embed/LoPB-3gnI6I?start=154"&gt;like so&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/embed/LoPB-3gnI6I?start=154" rel="AWS DynamoDB Key Value Pair Database"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E0G4xjfA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/602h7nlklnfaathalxtw.png" alt="DynamoDB image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#adding-auth-to-our-react-javascript-code"&gt;
  &lt;/a&gt;
  👨‍💻 Adding Auth to our React JavaScript Code
&lt;/h2&gt;

&lt;p&gt;Now that we've set up our resources in the backend and in the cloud, we now want them to be readily accessible for the users that we will expect to use our application.&lt;/p&gt;

&lt;p&gt;For this, we will use the &lt;code&gt;withAuthenticator&lt;/code&gt; HOC (Higher-Order-Component) which will allow us to use this module directly on the &lt;code&gt;export default App&lt;/code&gt; script at the end of our &lt;code&gt;App.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;withAuthenticator&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@aws-amplify/ui-react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;aws_exports&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./aws-exports&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;Amplify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;aws_exports&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fragment&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Code&lt;/span&gt; &lt;span class="nx"&gt;Goes&lt;/span&gt; &lt;span class="nx"&gt;Here&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/React.Fragment&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;withAuthenticator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, when we run our code, you won't be able to access anything inside of &lt;code&gt;App.js&lt;/code&gt; until we (1.) Have an account; and (2.) Are authenticated in the system.&lt;/p&gt;

&lt;p&gt;This will look &lt;a href="https://youtu.be/LoPB-3gnI6I?t=252"&gt;something like this&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/LoPB-3gnI6I?t=252" rel="AWS Amplify withAuthenticator HOC (Higher Order Component)"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Vf_z1zr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fce5t7hebscdnikphmi5.png" alt="DynamoDB image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have a nice packaged-up module that has the "Create Account" and "Sign In" modules all neatly coded for us to use in our application thanks to AWS Cognito and AWS Amplify working together.&lt;/p&gt;

&lt;p&gt;When we log into our account, we are able to see our ToDos! If our login credentials don't check out, we won't be permitted into our app.&lt;/p&gt;

&lt;p&gt;🎉 ~ queue the confetti cannon ~ 🎉&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#some-observations-in-working-with-the-raw-amplifyauthenticator-endraw-module"&gt;
  &lt;/a&gt;
  👨‍💻 Some Observations In Working with the &lt;code&gt;AmplifyAuthenticator&lt;/code&gt; Module
&lt;/h2&gt;

&lt;p&gt;Something I noticed when experimenting with this module is that you can customize the entire auth flow with, from the stylings of the Sign-In page to the flow of the user verification when they are creating an account. It's definitely worth checking out the documentation on the website to learn more about what you can do with the &lt;code&gt;Auth&lt;/code&gt; module in AWS.&lt;/p&gt;

&lt;p&gt;One of the modules I was experimenting with was the &lt;code&gt;AmplifyAuthenticator&lt;/code&gt; module and using it as a wrapper around the functional component, like below.&lt;/p&gt;

&lt;p&gt;⚠️ As a warning, I noticed that using this module in the direct application caused some data to be cached even when you pressed "Log Out". As in, you would need a hard refresh on the page for you to "actually log out" even if you pressed the log out button when switching between users. This can pose a security risk to your users' data in case they do not automatically refresh the page but press sign-out with this module. I am not sure if this was because of being on the same device and logging into multiple users, but it's worth mentioning as I discovered this, which is why I &lt;a href="https://youtu.be/LoPB-3gnI6I?t=343"&gt;spoke about it here&lt;/a&gt; and showed a live version of the data being cached before a hard refresh was done to the page. This module is fantastic for testing the authentication module and fine-tuning it, but always make sure what you put into production checks out in terms of the expected data and access you intend to have.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;AmplifyAuthenticator&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@aws-amplify/ui-react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;aws_exports&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./aws-exports&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;Amplify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;aws_exports&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AmplifyAuthenticator&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fragment&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Code&lt;/span&gt; &lt;span class="nx"&gt;Goes&lt;/span&gt; &lt;span class="nx"&gt;Here&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/React.Fragment&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/AmplifyAuthenticator&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Based upon this, we'll want to use the &lt;code&gt;withAuthenticator&lt;/code&gt; or a version of a customized Auth flow for our users to be able to use our application securely and correctly.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  👨‍💻 Wrapping Up
&lt;/h2&gt;

&lt;p&gt;Wow we went through a lot! Tech is one of those fast-paced fields where you will constantly find yourself learning and innovating as you go along. There is never only 1 right answer, and I look forward to hearing your feedback and thoughts on what areas of apps, software, and tech you want to learn more about.&lt;/p&gt;

&lt;p&gt;Check out the full recording below:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/LoPB-3gnI6I"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Let me know if you found this post helpful! And if you haven't yet, make sure to check out these free resources below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Follow my Instagram for more: &lt;a href="https://instagram.com/brianhhough"&gt;@BrianHHough&lt;/a&gt;&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Watch my latest &lt;a href="https://youtube.com/brianhhough"&gt;YouTube video for more&lt;/a&gt;&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Listen to my Podcast on &lt;a href="https://youtube.com/brianhhough"&gt;Apple Podcasts&lt;/a&gt; and &lt;a href="https://youtube.com/brianhhough"&gt;Spotify&lt;/a&gt;&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Join my FREE &lt;a href="https://facebook.com/groups/techstackplaybook"&gt;Tech Stack Playbook Facebook Group&lt;/a&gt;&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's digitize the world together! 🚀&lt;/p&gt;

&lt;p&gt;-- Brian&lt;/p&gt;




&lt;div class="ltag__user ltag__user__id__259541"&gt;
  
    .ltag__user__id__259541 .follow-action-button {
      background-color: #0015b8 !important;
      color: #fdf9f3 !important;
      border-color: #0015b8 !important;
    }
  
    &lt;a href="/brianhhough" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rY9IPqa7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2kYQV_P---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/259541/2f6a1717-f422-4f36-92d2-295d4b0150db.png" alt="brianhhough image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/brianhhough"&gt;Brian H. Hough&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/brianhhough"&gt;Chief Technology Officer and Co-Founder of Airblock Technologies, AWS Community Builder, Host of Tech Stack Playbook, and five-time Global Hackathon Winner 👨‍💻&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;






</description>
      <category>aws</category>
      <category>serverless</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>`soim`: Social image generator CLI</title>
      <author>Siddharth</author>
      <pubDate>Sun, 29 Aug 2021 15:45:43 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/soim-social-image-generator-cli-4ffk</link>
      <guid>https://dev.to/siddharthshyniben/soim-social-image-generator-cli-4ffk</guid>
      <description>&lt;p&gt;In my &lt;a href="https://dev.to/siddharthshyniben/introducing-the-social-image-generator-bbp"&gt;last post on Social Image generation&lt;/a&gt;, I talked about how I built a site which can be used to automate social image generation. Well, I just built a CLI for it! Introducing &lt;code&gt;soim&lt;/code&gt;.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SiddharthShyniben"&gt;
        SiddharthShyniben
      &lt;/a&gt; / &lt;a href="https://github.com/SiddharthShyniben/soim"&gt;
        soim
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Social Image generator
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;code&gt;soim&lt;/code&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/SiddharthShyniben/soim./cover.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j7aM58zC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/SiddharthShyniben/soim./cover.png" alt="Cover"&gt;&lt;/a&gt;
&lt;em&gt;This image was made by running &lt;code&gt;soim -t "This is some sample output of &amp;lt;b&amp;gt;&amp;lt;code&amp;gt;soim&amp;lt;/code&amp;gt;&amp;lt;/b&amp;gt;" -T "social, images, generator" -i "https://raw.githubusercontent.com/AnandChowdhary/undrawcdn/master/illustrations/images.svg" -c "Made by @SiddharthShyniben" -p "cover.png"&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;soim&lt;/code&gt; is a CLI tool for generating social images. Given data, &lt;code&gt;soim&lt;/code&gt; uses
Puppeteer to screenshot a page.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;soim&lt;/code&gt; can also be used as a library. The exported &lt;code&gt;generateImage&lt;/code&gt; function takes
an object as options, and the options are the same as the CLI options.&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;div class="highlight highlight-text-shell-session position-relative js-code-highlight"&gt;
&lt;pre&gt;# &lt;span class="pl-s1"&gt;locally&lt;/span&gt;
&lt;span class="pl-c1"&gt;~$ npm i soim&lt;/span&gt;
# &lt;span class="pl-s1"&gt;globally (for CLI)&lt;/span&gt;
&lt;span class="pl-c1"&gt;~$ npm i -g soim&lt;/span&gt;
&lt;span class="pl-c1"&gt;~$ soim -t ...&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
CLI options&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;-t&lt;/code&gt;, &lt;code&gt;--text&lt;/code&gt;: The main text.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-T&lt;/code&gt;, &lt;code&gt;--tags&lt;/code&gt;: Comma separated list of tags, shown at the top of the image&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-p&lt;/code&gt;, &lt;code&gt;--path&lt;/code&gt;: The place to write the image&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-l&lt;/code&gt;, &lt;code&gt;--link&lt;/code&gt;: Custom link where the social image template lives. Useful if you want to design a custom template. See…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/SiddharthShyniben/soim"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;It's a small CLI tool to generate social images. Just run &lt;code&gt;soim --text Something --caption something ...&lt;/code&gt; and get an image!&lt;/p&gt;

&lt;p&gt;It uses puppeteer under the hood to generate images. I'll write a post on it someday.&lt;/p&gt;

&lt;p&gt;Hope you like it!&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>writing</category>
      <category>npm</category>
    </item>
    <item>
      <title>Button Hover Effect in HTML and CSS (CSS Animation)</title>
      <author>Beginner Developer</author>
      <pubDate>Sun, 29 Aug 2021 15:35:57 +0000</pubDate>
      <link>https://dev.to/beginnerdeveloper/button-hover-effect-in-html-and-css-css-animation-dk6</link>
      <guid>https://dev.to/beginnerdeveloper/button-hover-effect-in-html-and-css-css-animation-dk6</guid>
      <description>&lt;p&gt;Simple Button hover Effect using HTML and CSS&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html-code"&gt;
  &lt;/a&gt;
  HTML Code:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
    &amp;lt;link href="https://fonts.googleapis.com/css2?family=Poppins&amp;amp;display=swap" rel="stylesheet"&amp;gt;
    &amp;lt;link href="style.css" rel="stylesheet"&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div class="main-content"&amp;gt;
        &amp;lt;div class="button-main"&amp;gt;
            &amp;lt;button class="button"&amp;gt; Hover me&amp;lt;/button&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;*{
    margin: 0;
    padding: 0;
    font-family: 'Poppins', sans-serif;
}
body{
    background-image: url('bg.jpg');
}
.main-content{
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}
.button-main{
    position: relative;
}
.button{
    padding: 20px 70px;
    background-color: #e15f41;
    color: #fff;
    font-size: 16px;
    cursor: pointer;
}
.button:focus{
    outline: none;
}
.button:hover{
    background-color: #000;
}
.button:before, .button:after{
    -webkit-transition: all 0.25s;
    transition: all 0.25s;
    border-style: solid;
    border-width: 0;
    content: "";
    height: 24px;
    position: absolute;
    width: 24px;
    border-color: #000;
}
.button:before{
    border-left-width: 2px;
    border-top-width: 2px;
    left: -5px;
    top: -6px;
}
.button:after{
    border-bottom-width: 2px;
    border-right-width: 2px;
    bottom: -5px;
    right: -6px;
}
.button:hover:before, .button:hover:after{
    height: 100%;
    width: 100%;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--REKBUE9X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p8ua5u37x8d1rmwxjws0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--REKBUE9X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p8ua5u37x8d1rmwxjws0.gif" alt="Button Hover Effect Output"&gt;&lt;/a&gt;Preview: &lt;a href="https://button-hover-effects.vercel.app/"&gt;https://button-hover-effects.vercel.app/&lt;/a&gt;&lt;br&gt;
My Blog:- &lt;a href="https://beginners-developer.blogspot.com/"&gt;https://beginners-developer.blogspot.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>animation</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
