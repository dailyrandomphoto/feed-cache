<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Jira CLI: The Missing Command-line Tool for Atlassian Jira</title>
      <author>Ankit Pokhrel</author>
      <pubDate>Sat, 16 Oct 2021 13:52:48 +0000</pubDate>
      <link>https://dev.to/konsole/jira-cli-the-missing-command-line-tool-for-atlassian-jira-2n2i</link>
      <guid>https://dev.to/konsole/jira-cli-the-missing-command-line-tool-for-atlassian-jira-2n2i</guid>
      <description>&lt;p&gt;&lt;em&gt;The &lt;a href="https://medium.com/@ankitpokhrel/introducing-jira-cli-the-missing-command-line-tool-for-atlassian-jira-fe44982cc1de"&gt;original version&lt;/a&gt; of this post first appeared in Medium.&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The year is 2078 and there have been 0 improvements in the Jira UI ‚Äî #rant&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Jira UI is terrible to work with. It is slow, buggy, and doesn‚Äôt even load on occasions. If you have to rely on it for your day-to-day job it is going to cost you a lot of time and frustration. These frustrations pile up if you need to create tickets, in a pre-defined format with proper labels, components, etc, for every change you make, even a typo!&lt;/p&gt;

&lt;p&gt;Since I spend a significant amount of my time in the command-line, this is my small attempt to make Jira experience better for the CLI users.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#introducing-jira-cli"&gt;
  &lt;/a&gt;
  Introducing Jira CLI
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ankitpokhrel"&gt;
        ankitpokhrel
      &lt;/a&gt; / &lt;a href="https://github.com/ankitpokhrel/jira-cli"&gt;
        jira-cli
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üî• [WIP] Feature-rich interactive Jira command line.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
    &lt;a href="https://github.com/ankitpokhrel/jira-cli#"&gt;
        &lt;img alt="stargazers over time" src="https://camo.githubusercontent.com/0e674d8f04a6e1a50dfea464cc89512e48e8c2304f987a1648a046bba167d75b/68747470733a2f2f73746172732e6d6564762e696f2f616e6b6974706f6b6872656c2f6a6972612d636c692e737667"&gt;
    &lt;/a&gt;
    &lt;h1&gt;
JiraCLI&lt;/h1&gt;
&lt;/div&gt;
&lt;div&gt;
    &lt;p&gt;
        &lt;a href="https://github.com/ankitpokhrel/jira-cli/actions?query=workflow%3Abuild+branch%3Amaster"&gt;
            &lt;img alt="Build" src="https://camo.githubusercontent.com/11ccce3b149701a583a7eda25e8e1e70d993e659cdd59954cf46dd20da12a504/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f616e6b6974706f6b6872656c2f6a6972612d636c692f6275696c643f7374796c653d666c61742d737175617265"&gt;
        &lt;/a&gt;
        &lt;a href="https://goreportcard.com/report/github.com/ankitpokhrel/jira-cli" rel="nofollow"&gt;
            &lt;img alt="GO Report-card" src="https://camo.githubusercontent.com/6dfa0d69b416072706b881ad566f83f97c52fbd3b53a5e11e0c5a06d85914bfd/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f616e6b6974706f6b6872656c2f6a6972612d636c693f7374796c653d666c61742d737175617265"&gt;
        &lt;/a&gt;
        &lt;a href="https://github.com/ankitpokhrel/jira-cli/blob/master/LICENSE"&gt;
            &lt;img alt="Software License" src="https://camo.githubusercontent.com/ad8758fbaebbced78645b98e446c0bb5ec223676ed61700184320887cadbfb8e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265"&gt;
        &lt;/a&gt;
        &lt;a href="https://github.com/ankitpokhrel/jira-cli#"&gt;
            &lt;img alt="Software License" src="https://camo.githubusercontent.com/f18094648d87d228dd660d6226473ddb786bcc3a6d8cfe2f373cd213f79512a5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7374617475732d5749502d79656c6c6f773f7374796c653d666c61742d73717561726526636f6c6f723d6f72616e6765"&gt;
        &lt;/a&gt;
    &lt;/p&gt;
    &lt;p&gt;
        &lt;i&gt;Feature-rich Interactive Jira Command Line&lt;/i&gt;
    &lt;/p&gt;
    &lt;a rel="noopener noreferrer" href="https://github.com/ankitpokhrel/jira-cli.github/assets/demo.gif"&gt;&lt;img alt="JiraCLI Demo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--HUOuXffw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/ankitpokhrel/jira-cli.github/assets/demo.gif"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;
    &lt;p&gt;
        üöß This project is still a work in progress üöß&lt;br&gt;
        &lt;a href="https://opencollective.com/jira-cli#backers" rel="nofollow"&gt;
            &lt;img src="https://camo.githubusercontent.com/28790ec72e54f784580b53ef5afc67c6647a95f0650a04cacec4c51958b8adb2/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6a6972612d636c692f6261636b6572732e737667" alt="jira-cli open collective badge"&gt;
        &lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;JiraCLI is a command line tool for Jira created with an idea to avoid the Jira UI as much as possible. The tool is not yet complete but has
all necessary features required to improve your workflow with Jira. The tool mostly focuses on issue search and navigation at the moment
However, it also includes features like issue creation, cloning, linking, ticket transition, and so on.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Your suggestions and feedbacks are highly appreciated. Feel free to &lt;a href="https://github.com/ankitpokhrel/jira-cli/discussions"&gt;start a discussion&lt;/a&gt;
or &lt;a href="https://github.com/ankitpokhrel/jira-cli/issues/new"&gt;create an issue&lt;/a&gt; to share your experience about the tool or to discuss a feature/issue
If you think this project is cool and helpful, consider contributing by starring the repo, sharing with your friends or submitting a PR.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
Supported platforms&lt;/h2&gt;
&lt;p&gt;The tool is only tested with the latest Jira cloud since that's what I‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ankitpokhrel/jira-cli"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#tldr-features-highlight"&gt;
  &lt;/a&gt;
  TLDR; Features Highlight
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Interactive mode + an option to easily integrate with shell/automation scripts using standard &lt;a href="https://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html"&gt;POSIX-complaint&lt;/a&gt; flags.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ankitpokhrel/jira-cli/#list"&gt;Easy search&lt;/a&gt; and navigation. For instance, you can easily search for something like ‚Äú&lt;em&gt;Issues that are of high priority, is in progress, was created this month, and has a label called backend&lt;/em&gt;‚Äù with &lt;code&gt;jira issue list -yHigh -s"In Progress" --created month -lbackend&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ankitpokhrel/jira-cli/#create"&gt;Create a neat Jira ticket&lt;/a&gt; (and &lt;a href="https://github.com/ankitpokhrel/jira-cli/#comment"&gt;comment&lt;/a&gt;) using &lt;a href="https://github.github.com/gfm/"&gt;Github-flavored&lt;/a&gt; + &lt;a href="https://jira.atlassian.com/secure/WikiRendererHelpAction.jspa?section=all"&gt;Jira-flavored&lt;/a&gt; markdown as a template. Supports pre-defined templates.&lt;/li&gt;
&lt;li&gt;The ticket details are translated to &lt;a href="https://github.github.com/gfm/"&gt;markdown&lt;/a&gt; from the &lt;a href="https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/"&gt;Atlassian document&lt;/a&gt; and is &lt;a href="https://github.com/ankitpokhrel/jira-cli/#view"&gt;beautifully displayed&lt;/a&gt; on the screen when you view it.&lt;/li&gt;
&lt;li&gt;Easy &lt;a href="https://github.com/ankitpokhrel/jira-cli/#sprint"&gt;sprint&lt;/a&gt; and &lt;a href="https://github.com/ankitpokhrel/jira-cli/#epic"&gt;epic&lt;/a&gt; navigation. You can quickly view tickets in previous, current, and next sprint tickets using flags like &lt;code&gt;--prev&lt;/code&gt;, &lt;code&gt;--next&lt;/code&gt;, and &lt;code&gt;--current&lt;/code&gt; eg: &lt;code&gt;jira sprint list --current&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Fast and straightforward &lt;a href="https://github.com/ankitpokhrel/jira-cli/#clone"&gt;ticket cloning&lt;/a&gt; with the ability to replace text in summary and description.&lt;/li&gt;
&lt;li&gt;You can &lt;a href="https://github.com/ankitpokhrel/jira-cli#edit"&gt;edit&lt;/a&gt;, &lt;a href="https://github.com/ankitpokhrel/jira-cli#link"&gt;link&lt;/a&gt;, &lt;a href="https://github.com/ankitpokhrel/jira-cli#assign"&gt;assign&lt;/a&gt; and &lt;a href="https://github.com/ankitpokhrel/jira-cli#movetransition"&gt;transition&lt;/a&gt; the issues with ease.&lt;/li&gt;
&lt;li&gt;Supports multiple Jira servers using &lt;code&gt;--config&lt;/code&gt; flag or &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt; env.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  Disclaimer
&lt;/h3&gt;

&lt;p&gt;The tool is mosty tested with the latest Jira cloud since that‚Äôs what I usually work with. However, the support for on-premise Jira installation is &lt;a href="https://github.com/ankitpokhrel/jira-cli/issues/138"&gt;on the way&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also, the tool is still a work in progress with some exciting features in the todo pipeline.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#searching-for-an-issue"&gt;
  &lt;/a&gt;
  Searching for an Issue
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/ankitpokhrel/jira-cli"&gt;JiraCLI&lt;/a&gt; makes searching for an issue as easy as it should be. The lists are displayed in an interactive UI and can be navigated easily to perform actions like viewing, navigating, and copying issue keys/links.&lt;/p&gt;

&lt;p&gt;The examples below shows how easy it is to look for an issue. See more examples &lt;a href="https://github.com/ankitpokhrel/jira-cli"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# List issues that I am watching in the current board
$ jira issue list -w

# List issues assigned to me
$ jira issue list -a$(jira me)

# List issues created within an hour and updated in the last 30 minutesÔ∏è
$ jira issue list --created -1h --updated -30m

# Give me issues that are of high priority, is in progress, was created this month, and has given labels üî•
$ jira issue list -yHigh -s"In Progress" --created month -lbackend -l"high prio"

# Wait, what was that ticket I opened earlier today? üò´
$ jira issue list --history# What was the first issue I ever reported on the current board? ü§î
$ jira issue list -r$(jira me) --reverse

# What was the first bug I ever fixed in the current board? üêû
$ jira issue list -a$(jira me) -tBug sDone -rFixed --reverse

# What issues did I report this week? ü§∑‚Äç‚ôÇÔ∏è
$ jira issue list -r$(jira me) --created week
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#creating-an-issue"&gt;
  &lt;/a&gt;
  Creating an Issue
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;create&lt;/code&gt; command lets you create an issue and supports Github-flavored and Jira-flavored markdown for writing descriptions. You can load pre-defined templates using &lt;code&gt;--template&lt;/code&gt; flag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Create an issue using interactive prompt
$ jira issue create

# Pass required parameters to skip prompt or use --no-input option
$ jira issue create -tBug -s"New Bug" -yHigh -lbug -lurgent -b"Bug description"

# Load description from template file
$ jira issue create --template /path/to/template.tmpl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HbebjIDL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1400/1%2AYJ7iBrmFlpBR3VSgj3UIXg.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HbebjIDL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1400/1%2AYJ7iBrmFlpBR3VSgj3UIXg.gif" alt="Creating an issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The preview below shows the markdown template passed in JiraCLI and the way it is rendered in the Jira UI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SZ2Au3it--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2Ak5q3jXFs2m_oYHUI3qBDzA.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SZ2Au3it--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2Ak5q3jXFs2m_oYHUI3qBDzA.jpeg" alt="Create shell and UI preview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#viewing-an-issue"&gt;
  &lt;/a&gt;
  Viewing an Issue
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;view&lt;/code&gt; command lets you see issue details in a terminal. Atlassian document is roughly converted to a markdown and is nicely displayed in the terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ jira issue view ISSUE-1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JiDlfxOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1400/1%2A5Zt6icnszXhq3ALznT5pTA.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JiDlfxOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1400/1%2A5Zt6icnszXhq3ALznT5pTA.gif" alt="Viewing an issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#assigning-a-user-to-an-issue"&gt;
  &lt;/a&gt;
  Assigning a user to an issue
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;assign&lt;/code&gt; command lets you easily assign and unassign users to and from the issue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I18sqj_D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1400/1%2ACs0JlkQWXCSP1MtUApjptw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I18sqj_D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1400/1%2ACs0JlkQWXCSP1MtUApjptw.gif" alt="Assigning a user to an issue"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Assign user to an issue using interactive prompt
$ jira issue assign

# Pass required parameters to skip prompt
$ jira issue assign ISSUE-1 "Jon Doe"

# Assign to self
$ jira issue assign ISSUE-1 $(jira me)

# Will prompt for selection if keyword suffix returns multiple entries
$ jira issue assign ISSUE-1 suffix

# Assign to default assignee
$ jira issue assign ISSUE-1 default

# Unassign
$ jira issue assign ISSUE-1 x
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#cloning-an-issue"&gt;
  &lt;/a&gt;
  Cloning an Issue
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;clone&lt;/code&gt; command lets you clone an issue. You can update fields like summary, priority, assignee, labels, and components when cloning the issue. The command also allows you to replace a part of the string (case-sensitive) in summary and description using &lt;code&gt;--replace/-H&lt;/code&gt; option.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Clone an issue
$ jira issue clone ISSUE-1

# Clone issue and modify the summary, priority and assignee
$ jira issue clone ISSUE-1 -s"Modified summary" -yHigh -a$(jira me)

# Clone issue and replace text from summary and description
$ jira issue clone ISSUE-1 -H"find-me:replace-with-me"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#sprints"&gt;
  &lt;/a&gt;
  Sprints
&lt;/h3&gt;

&lt;p&gt;Sprints are displayed in an explorer view by default. You can output the results in a table view using the &lt;code&gt;--table&lt;/code&gt; flag. When viewing sprint issues, you can use all filters available for the issue command. You can quickly view tickets in previous, current, and next sprint tickets using flags like &lt;code&gt;--prev&lt;/code&gt;, &lt;code&gt;--next&lt;/code&gt;, and &lt;code&gt;--current&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h0e1hud5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1400/1%2A3pFxH8lmXAdGDpNXYhZKsQ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h0e1hud5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1400/1%2A3pFxH8lmXAdGDpNXYhZKsQ.gif" alt="Sprints"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Display sprints in an interactive list
$ jira sprint list

# Display tickets in the current active sprint
$ jira sprint list --current

# Display tickets in the previous sprint
$ jira sprint list --prev

# Display tickets of a particular sprint
$ jira sprint list &amp;lt;SPRINT_ID&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#learn-more"&gt;
  &lt;/a&gt;
  Learn more
&lt;/h3&gt;

&lt;p&gt;Check out &lt;a href="https://github.com/ankitpokhrel/jira-cli"&gt;the project page&lt;/a&gt; to view the full set of features and learn more about the project.&lt;/p&gt;

&lt;p&gt;Your suggestions and feedback is highly appreciated. Feel free to &lt;a href="https://github.com/ankitpokhrel/jira-cli/discussions"&gt;start a discussion&lt;/a&gt; or &lt;a href="https://github.com/ankitpokhrel/jira-cli/issues/new"&gt;create an issue&lt;/a&gt; to share your experience about the tool or to discuss a feature/issue. If you think this project is useful, consider contributing by &lt;a href="https://github.com/ankitpokhrel/jira-cli/stargazers"&gt;starring the repo&lt;/a&gt;, sharing with your friends, or submitting a PR.&lt;/p&gt;

</description>
      <category>go</category>
      <category>opensource</category>
      <category>showdev</category>
      <category>bash</category>
    </item>
    <item>
      <title>How to automate WhatsApp messages</title>
      <author>vibalijoshi</author>
      <pubDate>Sat, 16 Oct 2021 11:56:53 +0000</pubDate>
      <link>https://dev.to/vibalijoshi/how-to-automate-whatsapp-messages-3cpl</link>
      <guid>https://dev.to/vibalijoshi/how-to-automate-whatsapp-messages-3cpl</guid>
      <description>&lt;p&gt;WhatsApp is without a doubt the most popular smartphone application on our devices. With restrictions in place all around the world, it became one of our primary means of communication.&lt;/p&gt;

&lt;p&gt;Are you the type of person who prefers not to be distracted from your work by the thought of wishing someone a happy birthday or reminding someone of anything at a specific time? If that's the case, this automation is for you!&lt;/p&gt;

&lt;p&gt;You can automate this process by using python by writing just 2-3 lines of code. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--86Cd_kbY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wy0swgn2rm16oinpr5gm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--86Cd_kbY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wy0swgn2rm16oinpr5gm.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python3 &lt;/li&gt;
&lt;li&gt;Chrome browser*&lt;/li&gt;
&lt;li&gt;You must be logged into &lt;a href="https://web.whatsapp.com/"&gt;WhatsApp web&lt;/a&gt; (does not matter if it is closed)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*&lt;em&gt;If you do not have chrome browser, then you can follow the following steps:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;1.  Download and extract the current stable release of chrome driver from  &lt;a href="https://chromedriver.chromium.org/"&gt;https://chromedriver.chromium.org/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;2.  Open the downloaded file and search for an application named chrome drive, copy its path, for windows, it should look like this - C:/Users/.../chromedriver.exe.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;3.  Then call  &lt;code&gt;pywhatkit.add_driver_path(path)&lt;/code&gt;  and pass the copied path as an argument, if the path is valid, a black window along with chrome will open and close.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;4.  Now call  &lt;code&gt;pywhatkit.load_QRcode()&lt;/code&gt;  function and scan the QR code.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_YoCWlUJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q7ai55113r8y1257l4om.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_YoCWlUJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q7ai55113r8y1257l4om.png" alt="Overview of the process"&gt;&lt;/a&gt;&lt;br&gt;
To automate the transmission of messages, we'll write a Python script. Whatsapp web would open at the appointed time and deliver the message to the specified contact number.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#install-pywhatkit"&gt;
  &lt;/a&gt;
  Install PyWhatkit
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create a new python file, name it &lt;code&gt;wa_automation.py&lt;/code&gt; or anything of your choice. &lt;/li&gt;
&lt;li&gt;We would use a python library &lt;a href="https://pypi.org/project/pywhatkit/"&gt;PyWhatKit&lt;/a&gt;, which comes with various whatsapp features like send text messages, images, gifs to a personal contact or even a group chat. 
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Ankit404butfound"&gt;
        Ankit404butfound
      &lt;/a&gt; / &lt;a href="https://github.com/Ankit404butfound/PyWhatKit"&gt;
        PyWhatKit
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Send WhatsApp message at certain time and many other things.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e87412b322c414971c84b5c77189cd32354e7c8410e97a54d033f031616a80fb/68747470733a2f2f6d656469612e646973636f72646170702e6e65742f6174746163686d656e74732f3834323739343136373133343435333832302f3838323232373936303631333034383335302f756e6b6e6f776e2e706e673f77696474683d31343430266865696768743d343230"&gt;&lt;img src="https://camo.githubusercontent.com/e87412b322c414971c84b5c77189cd32354e7c8410e97a54d033f031616a80fb/68747470733a2f2f6d656469612e646973636f72646170702e6e65742f6174746163686d656e74732f3834323739343136373133343435333832302f3838323232373936303631333034383335302f756e6b6e6f776e2e706e673f77696474683d31343430266865696768743d343230" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/09dea9548206ee25355b484a4843ea231cc843270fd4e179e3b537b1a18c5a5b/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f73746172732f416e6b6974343034627574666f756e642f5079776861746b6974"&gt;&lt;img src="https://camo.githubusercontent.com/09dea9548206ee25355b484a4843ea231cc843270fd4e179e3b537b1a18c5a5b/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f73746172732f416e6b6974343034627574666f756e642f5079776861746b6974" alt="image"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/fc2134c9077a525e89fab507a4598317e3cb2598b9e3d9e3370ffef464cc16e1/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f666f726b732f416e6b6974343034627574666f756e642f5079776861746b6974"&gt;&lt;img src="https://camo.githubusercontent.com/fc2134c9077a525e89fab507a4598317e3cb2598b9e3d9e3370ffef464cc16e1/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f666f726b732f416e6b6974343034627574666f756e642f5079776861746b6974" alt="image"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d0c77c2e697b2329c74a14eadd5e855ad2ff46b74fbb68cdafa872494637c3dd/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f6f70656e2d6973737565732f416e6b6974343034627574666f756e642f5079776861746b6974"&gt;&lt;img src="https://camo.githubusercontent.com/d0c77c2e697b2329c74a14eadd5e855ad2ff46b74fbb68cdafa872494637c3dd/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f6f70656e2d6973737565732f416e6b6974343034627574666f756e642f5079776861746b6974" alt="image"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1ac20ddf0a1b3bf1ef15b84de7174574f3490899c6a9f84e931bbfec707e5fcd/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f6f70656e2d7072732f416e6b6974343034627574666f756e642f5079776861746b6974"&gt;&lt;img src="https://camo.githubusercontent.com/1ac20ddf0a1b3bf1ef15b84de7174574f3490899c6a9f84e931bbfec707e5fcd/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f6f70656e2d7072732f416e6b6974343034627574666f756e642f5079776861746b6974" alt="image"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/14374cfeb834dd052c24fd322b58f13aea6b6e84549bde8f742dc17c194daf36/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f636f6d6d6974732f416e6b6974343034627574666f756e642f5079776861746b6974"&gt;&lt;img src="https://camo.githubusercontent.com/14374cfeb834dd052c24fd322b58f13aea6b6e84549bde8f742dc17c194daf36/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f636f6d6d6974732f416e6b6974343034627574666f756e642f5079776861746b6974" alt="image"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9762119f3c558ab2ee8c7e28a721289c93bef5d77f33256250a58bd220a9e80f/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f6c6963656e73652f416e6b6974343034627574666f756e642f5079776861746b6974"&gt;&lt;img src="https://camo.githubusercontent.com/9762119f3c558ab2ee8c7e28a721289c93bef5d77f33256250a58bd220a9e80f/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f6c6963656e73652f416e6b6974343034627574666f756e642f5079776861746b6974" alt="image"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5f3184fef6cc5983358db04478b19890a71f1d020267af8ff58726a594001c91/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f636f6e7472696275746f72732f416e6b6974343034627574666f756e642f5079776861746b6974"&gt;&lt;img src="https://camo.githubusercontent.com/5f3184fef6cc5983358db04478b19890a71f1d020267af8ff58726a594001c91/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f636f6e7472696275746f72732f416e6b6974343034627574666f756e642f5079776861746b6974" alt="image"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/59122f0bebcb2da66137929ba2daf749e85f1fd9c8b008e02f54287ff8688c9a/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f72656c656173652f416e6b6974343034627574666f756e642f5079776861746b6974"&gt;&lt;img src="https://camo.githubusercontent.com/59122f0bebcb2da66137929ba2daf749e85f1fd9c8b008e02f54287ff8688c9a/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f72656c656173652f416e6b6974343034627574666f756e642f5079776861746b6974" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pypi.org/project/pywhatkit/" rel="nofollow"&gt;PyWhatKit&lt;/a&gt; is a Python library with various helpful features. It's easy-to-use and does not require you to do any additional setup. Currently, it has about 200k+ downloads and counting. New updates are released frequently with new features and bug fixes.&lt;/p&gt;
&lt;h1&gt;
Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;
Have some query or suggestions or want to become a beta tester, join our discord server - &lt;a href="https://discord.gg/62Yf5mushu" rel="nofollow"&gt;Discord invite link&lt;/a&gt;
&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
Help us test an upcoming feature - &lt;a href="https://pywhatkit.herokuapp.com/remote-kit" rel="nofollow"&gt;here&lt;/a&gt;
&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
Documentation - &lt;a href="https://github.com/Ankit404butfound/PyWhatKit/wiki"&gt;Wiki&lt;/a&gt;
&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.
For more detailed information see &lt;a href="https://github.com/Ankit404butfound/PyWhatKit/blob/master/CONTRIBUTING.md"&gt;this&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;MIT. For more information see &lt;a href="https://github.com/Ankit404butfound/PyWhatKit/blob/master/LICENSE"&gt;this&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Ankit404butfound/PyWhatKit"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;This library takes care of everything behind the scenes, so all we have to do is write a few lines of Python code describing it what message to send and when to send it, along with some other parameters.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;br&gt;
Install the library in your Python environment&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip3 &lt;span class="nb"&gt;install &lt;/span&gt;pywhatkit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;em&gt;If you face errors:&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;python &lt;span class="nt"&gt;-m&lt;/span&gt; pip &lt;span class="nb"&gt;install&lt;/span&gt;‚Ää-‚Ääupgrade pip

python &lt;span class="nt"&gt;-m&lt;/span&gt; pip &lt;span class="nb"&gt;install&lt;/span&gt; ‚Äìupgrade Pillow 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Import the package&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# wa_automation.py
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pywhatkit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#write-code"&gt;
  &lt;/a&gt;
  Write Code
&lt;/h2&gt;

&lt;p&gt;After we have installed the package, let us write our python code for automation.&lt;/p&gt;

&lt;p&gt;We will use the function &lt;code&gt;sendwhatmsg()&lt;/code&gt; to send our message to the contact.&lt;br&gt;
The function asks for the following parameters:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;sendwhatmsg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;phone_no&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;time_hour&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;time_min&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;wait_time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;tab_close&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;close_time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Mandatory Parameters: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;phone_no&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Enter phone number as a string&lt;/li&gt;
&lt;li&gt;It is mandatory to add the country code, otherwise you would get error&lt;/li&gt;
&lt;li&gt;Example: "+911234567891"&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;message&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Message to be sent as a string.&lt;/li&gt;
&lt;li&gt;Ex: "One hour to go for the deadline"&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;time_hour&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The hour when you want to send message&lt;/li&gt;
&lt;li&gt;Please note that the time should be given in 24 hour format.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;time_min&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The minutes when you want to send message.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# wa_automation.py
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pywhatkit&lt;/span&gt;
&lt;span class="n"&gt;pywhatkit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendwhatmsg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"+911234567891"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Reminder to go to market"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#customizations"&gt;
  &lt;/a&gt;
  Customizations:
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# wa_automation.py
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pywhatkit&lt;/span&gt;
&lt;span class="n"&gt;pywhatkit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendwhatmsg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"+911234567891"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Reminder to go to market"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;wait_time:&lt;/strong&gt; After the appointed time, this is the time when your messages will be sent. It is set to 20 seconds by default, but you can alter it to suit your needs.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;tab_close&lt;/strong&gt;: Specifies that whether the previous tab should be closed or not after sending the message. It will remain open after sending the message by default. You can change it by marking it &lt;code&gt;True&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;close_time&lt;/strong&gt;: You can control the time after which the tab should be closed &lt;strong&gt;after delivering the message&lt;/strong&gt; by specifying the &lt;code&gt;close_time&lt;/code&gt; parameter &lt;strong&gt;in seconds&lt;/strong&gt;. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ytPtt-i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cd1r20k9k3jwiai64gwl.png" alt="full overview"&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#other-features"&gt;
  &lt;/a&gt;
  Other features
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#send-messages-to-groups"&gt;
  &lt;/a&gt;
  Send messages to groups
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Using the &lt;code&gt;sendwhatmsg_to_group()&lt;/code&gt; method we can send messages to group chats.&lt;/li&gt;
&lt;li&gt;Everything else is the same as the earlier case including the customizations, the only difference is that instead of &lt;code&gt;phone_num&lt;/code&gt; there is &lt;code&gt;group_id&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;You can identify the group_id of your group through the invite link. Highlighted text is your group id.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dJDu5kDX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/413/1%2AVq_3IAcaSeAgcky9ZEwRdg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dJDu5kDX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/413/1%2AVq_3IAcaSeAgcky9ZEwRdg.png" alt="WhatsApp Group ID. https://holithemes.com/whatsapp-chat/fin‚Ä¶ | by venkat |  Click to Chat | Medium"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pywhatkit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendwhatmsg_to_group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AB123CDEFGHijklmn"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"One hour to the deadline"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#send-instant-messages"&gt;
  &lt;/a&gt;
  Send Instant Messages
&lt;/h3&gt;

&lt;p&gt;Here only difference is that there is no &lt;code&gt;time_hour&lt;/code&gt; or &lt;code&gt;time_min&lt;/code&gt; to be scheduled.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;sendwhatmsg_instantly&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;phone_no&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="n"&gt;wait_time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="n"&gt;tab_close&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="n"&gt;close_time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pywhatkit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendwhatmsg_instantly&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"+911234567891"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Can you call me? It is urgent!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#send-imagesgifs"&gt;
  &lt;/a&gt;
  Send Images/gifs
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;sendwhats_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;phone_no&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;img_path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;caption&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;wait_time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;tab_close&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;close_time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pywhatkit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendwhats_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"+911234567891"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;Image.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Question-1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#send-multiple-messages"&gt;
  &lt;/a&gt;
  Send multiple messages
&lt;/h3&gt;

&lt;p&gt;The feature would be launched soon: &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/Ankit404butfound/PyWhatKit/issues/126"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Sending multiple messages to multiple numbers
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#126&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/Elbargho"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--CY9a939n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/67919802%3Fv%3D4" alt="Elbargho avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/Elbargho"&gt;Elbargho&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/Ankit404butfound/PyWhatKit/issues/126"&gt;&lt;time&gt;Oct 07, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;I think you are already working on sending multiple messages to the same person (one after another), if not, this feature is needed.
Also I would like to send a message (or multiple) to multiple numbers.&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Ankit404butfound/PyWhatKit/issues/126"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#possible-pitfalls"&gt;
  &lt;/a&gt;
  Possible pitfalls:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Make sure your WhatsApp web is connected properly and you have a stable internet connection.&lt;/li&gt;
&lt;li&gt;When running the code, you should try to give at least 4-5 minutes from the present time; otherwise, if you set the time 1-2 minutes prior to the current time, the module may throw an error.&lt;/li&gt;
&lt;li&gt;Do not add 0 as a prefix when specifying time. &lt;/li&gt;
&lt;li&gt;Windows users can send Images (all formats) and GIF's. For Linux based distributions, only &lt;code&gt;JPEG&lt;/code&gt; and &lt;code&gt;PNG&lt;/code&gt; are supported. For MacOS users, only &lt;code&gt;JPEG&lt;/code&gt; is supported currently.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#limitations"&gt;
  &lt;/a&gt;
  Limitations
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;This would only work when you are working on the machine, connected to a stable connection.&lt;/li&gt;
&lt;li&gt;So for example, you want to send your parents good morning every day at 7:00 AM while sleeping, this won't work. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#use-cases"&gt;
  &lt;/a&gt;
  Use cases
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;If you are busy doing your work and you have to remind someone, or even schedule a text for meetings, announcements then this would do your work.&lt;/li&gt;
&lt;li&gt;Make aware your study group about the project deadline submission, wish someone a happy birthday on time while not being bothered about it doing work.
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#alternative"&gt;
  &lt;/a&gt;
  Alternative
&lt;/h2&gt;

&lt;p&gt;If you want to send messages while being offline and away from your machine, then there is an alternative method for this using &lt;em&gt;Twilio, python and Heroku&lt;/em&gt;. It is not that convenient and works on the basis of a hack, but it is for free and it works. &lt;br&gt;
Check out these resources to implement it:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/pQeFxdT3FGY"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="https://medium.com/programminghero/how-to-automate-whatsapp-with-15-lines-of-python-code-fa2d3565324d" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UpgJFcgj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/fit/c/96/96/1%2Ac8dWhnGtWGvBdX1LuJ0nIw.png" alt="Shawon Chowdhury"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="https://medium.com/programminghero/how-to-automate-whatsapp-with-15-lines-of-python-code-fa2d3565324d" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to Automate WhatsApp with 15 lines of Python Code | Shawon Chowdhury | by Shawon Chowdhury | Programming Hero | Medium&lt;/h2&gt;
      &lt;h3&gt;Shawon Chowdhury „Éª &lt;time&gt;Oct 3, 2020&lt;/time&gt; „Éª 
      &lt;div class="ltag__link__servicename"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ze5yh_2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/medium_icon-90d5232a5da2369849f285fa499c8005e750a788fdbf34f5844d5f2201aae736.svg" alt="Medium Logo"&gt;
        Medium
      &lt;/div&gt;
    &lt;/h3&gt;
&lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Adding the Google reCAPTCHA v3 to an Angular application</title>
      <author>Rodrigo Kamada</author>
      <pubDate>Sat, 16 Oct 2021 11:29:26 +0000</pubDate>
      <link>https://dev.to/rodrigokamada/adding-the-google-recaptcha-v3-to-an-angular-application-kge</link>
      <guid>https://dev.to/rodrigokamada/adding-the-google-recaptcha-v3-to-an-angular-application-kge</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://angular.io/"&gt;Angular&lt;/a&gt; is a development platform for building WEB, mobile and desktop applications using HTML, CSS and TypeScript (JavaScript). Currently, Angular is at version 12 and Google is the main maintainer of the project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/ng-recaptcha"&gt;ng-recaptcha&lt;/a&gt; is a simple and configurable reCAPTCHA v2 and v3 component library.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;Before you start, you need to install and configure the tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/"&gt;git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/"&gt;Node.js and npm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angular.io/cli"&gt;Angular CLI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IDE (e.g. &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#create-and-configure-the-account-on-the-google-recaptcha"&gt;
  &lt;/a&gt;
  Create and configure the account on the Google reCAPTCHA
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Let's create the account. Access the site &lt;a href="https://www.google.com/recaptcha/"&gt;https://www.google.com/recaptcha/&lt;/a&gt; and click on the button &lt;em&gt;v3 Admin Console&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fFz0IYGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step1_uwkikq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFz0IYGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step1_uwkikq.png" alt="Google reCAPTCHA - Home page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Fill in the field &lt;em&gt;Email or phone&lt;/em&gt; and click on the button &lt;em&gt;Next&lt;/em&gt; to login with your Google account and if you don't have an account, just create a new account.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r-SMr51l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step2_jy3afs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r-SMr51l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step2_jy3afs.png" alt="Google reCAPTCHA - Sign up"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Click on the button &lt;em&gt;+&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_V_CI6Am--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step3_waxzdc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_V_CI6Am--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step3_waxzdc.png" alt="Google reCAPTCHA - Create new"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Fill in the field &lt;em&gt;Label&lt;/em&gt;, click on the option &lt;em&gt;reCAPTCHA 3&lt;/em&gt;, Fill in the field &lt;em&gt;Domains&lt;/em&gt;, click on the checkbox &lt;em&gt;Accept the reCAPTCHA Terms of Service&lt;/em&gt; and click on the button &lt;em&gt;Submit&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MA2LjJNw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step4_edo7dj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MA2LjJNw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step4_edo7dj.png" alt="Google reCAPTCHA - Register a new site"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Click on the button &lt;em&gt;COPY SITE KEY&lt;/em&gt; to copy the key, in my case, the key &lt;code&gt;6Lf7UL0cAAAAAIt_m-d24WG4mA1XFPHE8yVckc5S&lt;/code&gt; was copied because this key will be configured in the Angular application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sMFCITUR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step5_tkjuo4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sMFCITUR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step5_tkjuo4.png" alt="Google reCAPTCHA - Adding reCAPTCHA to your site"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; Ready! The keys have been generated.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-the-angular-application"&gt;
  &lt;/a&gt;
  Create the Angular application
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Let's create the application with the Angular base structure using the &lt;code&gt;@angular/cli&lt;/code&gt; with the route file and the SCSS style format.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ng new angular-recaptcha-v3
? Would you like to add Angular routing? Yes
? Which stylesheet format would you like to use? SCSS   &lt;span class="o"&gt;[&lt;/span&gt; https://sass-lang.com/documentation/syntax#scss                &lt;span class="o"&gt;]&lt;/span&gt;
CREATE angular-recaptcha-v3/README.md &lt;span class="o"&gt;(&lt;/span&gt;1064 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/.editorconfig &lt;span class="o"&gt;(&lt;/span&gt;274 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/.gitignore &lt;span class="o"&gt;(&lt;/span&gt;604 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/angular.json &lt;span class="o"&gt;(&lt;/span&gt;3291 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/package.json &lt;span class="o"&gt;(&lt;/span&gt;1082 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/tsconfig.json &lt;span class="o"&gt;(&lt;/span&gt;783 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/.browserslistrc &lt;span class="o"&gt;(&lt;/span&gt;703 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/karma.conf.js &lt;span class="o"&gt;(&lt;/span&gt;1437 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/tsconfig.app.json &lt;span class="o"&gt;(&lt;/span&gt;287 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/tsconfig.spec.json &lt;span class="o"&gt;(&lt;/span&gt;333 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/favicon.ico &lt;span class="o"&gt;(&lt;/span&gt;948 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/index.html &lt;span class="o"&gt;(&lt;/span&gt;304 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/main.ts &lt;span class="o"&gt;(&lt;/span&gt;372 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/polyfills.ts &lt;span class="o"&gt;(&lt;/span&gt;2820 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/styles.scss &lt;span class="o"&gt;(&lt;/span&gt;80 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/test.ts &lt;span class="o"&gt;(&lt;/span&gt;788 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/assets/.gitkeep &lt;span class="o"&gt;(&lt;/span&gt;0 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/environments/environment.prod.ts &lt;span class="o"&gt;(&lt;/span&gt;51 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/environments/environment.ts &lt;span class="o"&gt;(&lt;/span&gt;658 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/app/app-routing.module.ts &lt;span class="o"&gt;(&lt;/span&gt;245 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/app/app.module.ts &lt;span class="o"&gt;(&lt;/span&gt;393 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/app/app.component.scss &lt;span class="o"&gt;(&lt;/span&gt;0 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/app/app.component.html &lt;span class="o"&gt;(&lt;/span&gt;24617 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/app/app.component.spec.ts &lt;span class="o"&gt;(&lt;/span&gt;1115 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/app/app.component.ts &lt;span class="o"&gt;(&lt;/span&gt;225 bytes&lt;span class="o"&gt;)&lt;/span&gt;
‚úî Packages installed successfully.
    Successfully initialized git.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Install and configure the Bootstrap CSS framework. Do steps 2 and 3 of the post &lt;em&gt;&lt;a href="https://github.com/rodrigokamada/angular-bootstrap"&gt;Adding the Bootstrap CSS framework to an Angular application&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Configure the &lt;code&gt;siteKey&lt;/code&gt; variable with the Google reCAPTCHA key in the &lt;code&gt;src/environments/environment.ts&lt;/code&gt; and &lt;code&gt;src/environments/environment.prod.ts&lt;/code&gt; files as below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;recaptcha&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;siteKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;6Lf7UL0cAAAAAIt_m-d24WG4mA1XFPHE8yVckc5S&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Install the &lt;code&gt;ng-recaptcha&lt;/code&gt; library.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;ng-recaptcha
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Import the &lt;code&gt;FormsModule&lt;/code&gt;, &lt;code&gt;RecaptchaV3Module&lt;/code&gt; modules. Configure the Google reCAPTCHA key. Change the &lt;code&gt;app.module.ts&lt;/code&gt; file and add the lines as below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;FormsModule&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/forms&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;RECAPTCHA_V3_SITE_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;RecaptchaV3Module&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ng-recaptcha&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;environment&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../environments/environment&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nl"&gt;imports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;BrowserModule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;FormsModule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;RecaptchaV3Module&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;AppRoutingModule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="nx"&gt;providers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;provide&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;RECAPTCHA_V3_SITE_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;useValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;recaptcha&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;siteKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; Remove the contents of the &lt;code&gt;AppComponent&lt;/code&gt; class from the &lt;code&gt;src/app/app.component.ts&lt;/code&gt; file. Import the &lt;code&gt;NgForm&lt;/code&gt; component, the &lt;code&gt;ReCaptchaV3Service&lt;/code&gt; service and create the &lt;code&gt;send&lt;/code&gt; method as below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NgForm&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/forms&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ReCaptchaV3Service&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ng-recaptcha&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app-root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;templateUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app.component.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;styleUrls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app.component.scss&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;AppComponent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;recaptchaV3Service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ReCaptchaV3Service&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NgForm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;invalid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;control&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;control&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;markAsTouched&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;recaptchaV3Service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;importantAction&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Token [&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;] generated`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;7.&lt;/strong&gt; Remove the contents of the &lt;code&gt;src/app/app.component.html&lt;/code&gt; file. Add the &lt;code&gt;re-captcha&lt;/code&gt; component as below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container-fluid py-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Angular reCAPTCHA v3&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;#form&lt;/span&gt;&lt;span class="err"&gt;="&lt;/span&gt;&lt;span class="na"&gt;ngForm&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row mt-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-sm-12 mb-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-sm btn-primary"&lt;/span&gt; &lt;span class="na"&gt;(click)=&lt;/span&gt;&lt;span class="s"&gt;"send(form)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Send&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;8.&lt;/strong&gt; Run the application with the command below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm start

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; angular-recaptcha-v3@1.0.0 start
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; ng serve

‚úî Browser application bundle generation complete.

Initial Chunk Files | Names         |      Size
vendor.js           | vendor        |   2.75 MB
styles.css          | styles        | 266.71 kB
polyfills.js        | polyfills     | 128.52 kB
scripts.js          | scripts       |  76.33 kB
main.js             | main          |  12.28 kB
runtime.js          | runtime       |   6.64 kB

                    | Initial Total |   3.23 MB

Build at: 2021-10-09T22:00:31.213Z - Hash: f91dc9237b57212ebd83 - Time: 12001ms

&lt;span class="k"&gt;**&lt;/span&gt; Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ &lt;span class="k"&gt;**&lt;/span&gt;


‚úî Compiled successfully.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;9.&lt;/strong&gt; Ready! Access the URL &lt;code&gt;http://localhost:4200/&lt;/code&gt; and check if the application is working. See the application working on &lt;a href="https://rodrigokamada.github.io/angular-recaptcha-v3/"&gt;GitHub Pages&lt;/a&gt; and &lt;a href="https://stackblitz.com/edit/angular12-recaptcha-v3"&gt;Stackblitz&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GzZOCHMr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966502/Blog/angular-recaptcha-v3/angular-recaptcha-v3_zrgsso.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GzZOCHMr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966502/Blog/angular-recaptcha-v3/angular-recaptcha-v3_zrgsso.png" alt="Angular Google reCAPTCHA v3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The application repository is available at &lt;a href="https://github.com/rodrigokamada/angular-recaptcha-v3"&gt;https://github.com/rodrigokamada/angular-recaptcha-v3&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This tutorial was posted on my &lt;a href="https://rodrigo.kamada.com.br/blog/adicionando-o-google-recaptcha-v3-em-uma-aplicacao-angular"&gt;blog&lt;/a&gt; in portuguese.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>recaptcha</category>
      <category>webdev</category>
      <category>captcha</category>
    </item>
    <item>
      <title>Terraform IaC Scanning with Trivy</title>
      <author>Marcel.L</author>
      <pubDate>Sat, 16 Oct 2021 11:15:25 +0000</pubDate>
      <link>https://dev.to/pwd9000/terraform-iac-scanning-with-trivy-3cai</link>
      <guid>https://dev.to/pwd9000/terraform-iac-scanning-with-trivy-3cai</guid>
      <description>&lt;h2&gt;
  &lt;a href="#trivy-vulnerability-scanner"&gt;
  &lt;/a&gt;
  Trivy Vulnerability Scanner
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Trivy&lt;/code&gt; is a simple and comprehensive scanner for vulnerabilities in container images, file systems, and Git repositories, as well as for configuration issues in IaC. &lt;code&gt;Trivy&lt;/code&gt; detects vulnerabilities of OS packages (Alpine, RHEL, CentOS, etc.) and language-specific packages (Bundler, Composer, npm, yarn, etc.). In addition, &lt;code&gt;Trivy&lt;/code&gt; scans Infrastructure as Code (IaC) files such as Terraform, Dockerfile and Kubernetes, to detect potential configuration issues that expose your deployments to the risk of attack.&lt;/p&gt;

&lt;p&gt;You can scan your Terraform configuration artifacts easily giving you the confidence that all is well with your configuration before deploying your Terraform (IaC) configurations. It is a free/open source tool by AquaSecurity. For more information go check out the &lt;a href="https://github.com/aquasecurity/trivy"&gt;Trivy github page&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Today we will look at how you can utilise &lt;code&gt;Trivy&lt;/code&gt; as part of your DevOps CI/CD process by scanning your Terraform (IaC) code for security risks, before actually deploying the configuration to ensure that there are no vulnerabilities or misconfigurations that could potentially open up security risks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-scan-iac"&gt;
  &lt;/a&gt;
  How to Scan IaC
&lt;/h2&gt;

&lt;p&gt;This tutorial is based on the following &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/main/posts/DevOps-Terraform-Trivy/code"&gt;Azure DevOps Repository&lt;/a&gt; blueprint, which will use a CI/CD YAML pipeline to deploy an Azure Virtual Network using terraform IaC configuration files.&lt;/p&gt;

&lt;p&gt;There are terraform configuration files under the path &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/main/posts/DevOps-Terraform-Trivy/code/Terraform/networking"&gt;/Terraform/networking&lt;/a&gt;. There is also a YAML pipeline &lt;code&gt;network.yml&lt;/code&gt; under &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/main/posts/DevOps-Terraform-Trivy/code/pipelines"&gt;/pipelines/&lt;/a&gt; which is used to deploy the terraform code. The pipeline will trigger a &lt;code&gt;build.yml&lt;/code&gt; template which essentially creates our Terraform artifact and if successful the pipeline will trigger the &lt;code&gt;deploy.yml&lt;/code&gt; template which will apply our terraform configuration artifact. The pipeline templates are kept under the path &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/main/posts/DevOps-Terraform-Trivy/code/task_groups"&gt;/task_groups/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We will utilise &lt;code&gt;Trivy&lt;/code&gt; during our build phase, so lets take a look at the &lt;code&gt;build.yml&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;#// code/task_groups/build.yml#L16-L89&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;build&lt;/span&gt;
    &lt;span class="na"&gt;pool&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;vmImage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.pool }}&lt;/span&gt;
    &lt;span class="na"&gt;workspace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;clean&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;all&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;checkout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;self&lt;/span&gt;
        &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;src&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformInstaller@0&lt;/span&gt;
        &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;terraformVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.terraformVersion }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CmdLine@2&lt;/span&gt;
        &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Download&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;and&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Install&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Trivy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;vulnerability&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;scanner'&lt;/span&gt;
        &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
            &lt;span class="s"&gt;sudo apt-get install rpm&lt;/span&gt;
            &lt;span class="s"&gt;wget https://github.com/aquasecurity/trivy/releases/download/v${{ parameters.trivyVersion }}/trivy_${{ parameters.trivyVersion }}_Linux-64bit.deb&lt;/span&gt;
            &lt;span class="s"&gt;sudo dpkg -i trivy_${{ parameters.trivyVersion }}_Linux-64bit.deb&lt;/span&gt;
            &lt;span class="s"&gt;trivy -v&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformTaskV2@2&lt;/span&gt;
        &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Init&lt;/span&gt;
        &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;azurerm'&lt;/span&gt;
          &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;init'&lt;/span&gt;
          &lt;span class="na"&gt;workingDirectory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Agent.BuildDirectory)/src/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;parameters.root_directory&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
          &lt;span class="na"&gt;backendServiceArm&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.backend_service_connection_name }}&lt;/span&gt;
          &lt;span class="na"&gt;backendAzureRmResourceGroupName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.backend_resource_group }}&lt;/span&gt;
          &lt;span class="na"&gt;backendAzureRmStorageAccountName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.backend_storage_accountname }}&lt;/span&gt;
          &lt;span class="na"&gt;backendAzureRmContainerName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.container_name }}&lt;/span&gt;
          &lt;span class="na"&gt;backendAzureRmKey&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.container_key }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CmdLine@2&lt;/span&gt;
        &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;LOW/MED&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Trivy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;vulnerability&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;scanner&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;in&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;IaC&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;mode'&lt;/span&gt;
        &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
            &lt;span class="s"&gt;trivy config --severity LOW,MEDIUM --exit-code 0 $(Agent.BuildDirectory)/src/${{ parameters.root_directory }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CmdLine@2&lt;/span&gt;
        &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;HIGH/CRIT&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Trivy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;vulnerability&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;scanner&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;in&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;IaC&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;mode'&lt;/span&gt;
        &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
            &lt;span class="s"&gt;trivy config --severity HIGH,CRITICAL --exit-code 1 $(Agent.BuildDirectory)/src/${{ parameters.root_directory }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformTaskV2@2&lt;/span&gt;
        &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Plan&lt;/span&gt;
        &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;azurerm'&lt;/span&gt;
          &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;plan'&lt;/span&gt;
          &lt;span class="na"&gt;workingDirectory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Agent.BuildDirectory)/src/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;parameters.root_directory&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
          &lt;span class="na"&gt;commandOptions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;--var-file=$(Agent.BuildDirectory)/src/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;parameters.root_directory&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;parameters.tfvarFile&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;--out=$(Agent.BuildDirectory)/src/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;parameters.root_directory&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}plan.tfplan'&lt;/span&gt;
          &lt;span class="na"&gt;environmentServiceNameAzureRM&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.deployment_service_connection_name }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CopyFiles@2&lt;/span&gt;
        &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Copy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Files&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;to&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Staging'&lt;/span&gt;
        &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;SourceFolder&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Agent.BuildDirectory)/src'&lt;/span&gt;
          &lt;span class="na"&gt;Contents&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Terraform/**'&lt;/span&gt;
          &lt;span class="na"&gt;TargetFolder&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.ArtifactStagingDirectory)'&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ArchiveFiles@2&lt;/span&gt;
        &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;rootFolderOrFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.ArtifactStagingDirectory)'&lt;/span&gt;
          &lt;span class="na"&gt;archiveFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'&lt;/span&gt;
          &lt;span class="na"&gt;replaceExistingArchive&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
          &lt;span class="na"&gt;includeRootFolder&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
        &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Archive Terraform Artifact&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;publish&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'&lt;/span&gt;
        &lt;span class="na"&gt;artifact&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.BuildId)-trivy'&lt;/span&gt;
        &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Publish Pipeline Artifact&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;As you can see from the &lt;code&gt;build&lt;/code&gt; process above we are performing the following steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Download and Install Terraform.&lt;/li&gt;
&lt;li&gt;Download and Install &lt;code&gt;Trivy&lt;/code&gt; vulnerability scanner.&lt;/li&gt;
&lt;li&gt;Perform a Terraform Init on our terraform network configuration.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;Trivy&lt;/code&gt; vulnerability scanner in IaC mode for (LOW / MEDIUM) risks.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;Trivy&lt;/code&gt; vulnerability scanner in IaC mode for (HIGH / CRITICAL) risks.&lt;/li&gt;
&lt;li&gt;Run a Terraform plan.&lt;/li&gt;
&lt;li&gt;Copy our Terraform deployment files to a staging area.&lt;/li&gt;
&lt;li&gt;Create a Terraform deployment Artifact (zip) from the staging area.&lt;/li&gt;
&lt;li&gt;Publish the Terraform deployment artifact created to the pipeline for later use.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;code&gt;Trivy&lt;/code&gt; will not cause the &lt;code&gt;build&lt;/code&gt; process of the pipeline to fail on (LOW/MEDIUM) risks, but will cause a failure if any (HIGH/CRITICAL) issues are detected. This is defined by the &lt;code&gt;--exist-code (1)(0)&lt;/code&gt; argument:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;#// code/task_groups/build.yml#L51-L61&lt;/span&gt;

&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CmdLine@2&lt;/span&gt;
&lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;LOW/MED&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Trivy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;vulnerability&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;scanner&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;in&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;IaC&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;mode"&lt;/span&gt;
&lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
        &lt;span class="s"&gt;trivy config --severity LOW,MEDIUM --exit-code 0 $(Agent.BuildDirectory)/src/${{ parameters.root_directory }}&lt;/span&gt;

&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CmdLine@2&lt;/span&gt;
&lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;HIGH/CRIT&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Trivy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;vulnerability&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;scanner&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;in&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;IaC&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;mode"&lt;/span&gt;
&lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
        &lt;span class="s"&gt;trivy config --severity HIGH,CRITICAL --exit-code 1 $(Agent.BuildDirectory)/src/${{ parameters.root_directory }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;That is it as far as configuring and integrating &lt;code&gt;Trivy&lt;/code&gt; into your CI/CD process to check your Terraform deployments for any security or misconfiguration issues before completing a build. Let's take a look at an example.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Please note that this example does not protect secrets being committed into source control and is meant as a guide. If you find any secrets in source code or terraform configurations after they have been committed please remove and rotate them as soon as possible.&lt;/p&gt;

&lt;p&gt;As you can see in my Terraform configuration &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/main/posts/DevOps-Terraform-Trivy/code/Terraform/networking/main.tf"&gt;main.tf&lt;/a&gt;. I have configured a second provider using an alias, but I configured my provider with a &lt;code&gt;client_secret&lt;/code&gt; value in plain text:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Terraform/networking/main.tf#L18-L25&lt;/span&gt;

&lt;span class="nx"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;"azurerm"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;features&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="nx"&gt;alias&lt;/span&gt;           &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"core_network"&lt;/span&gt;
  &lt;span class="nx"&gt;subscription_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"00000000-0000-0000-0000-000000000000"&lt;/span&gt;
  &lt;span class="nx"&gt;client_id&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"00000000-0000-0000-0000-000000000000"&lt;/span&gt;
  &lt;span class="nx"&gt;client_secret&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"S3cR3t20!"&lt;/span&gt;
  &lt;span class="nx"&gt;tenant_id&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"00000000-0000-0000-0000-000000000000"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;When &lt;code&gt;Trivy&lt;/code&gt; runs a scan against my Terraform configuration you will see that my &lt;code&gt;build&lt;/code&gt; process fails due to a &lt;strong&gt;CRITICAL&lt;/strong&gt; security risk that it identified.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k_Hc5pbO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/DevOps-Terraform-Trivy/assets/detect.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k_Hc5pbO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/DevOps-Terraform-Trivy/assets/detect.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-checked"&gt;
  &lt;/a&gt;
  What is checked?
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Trivy&lt;/code&gt; checks Terraform IaC using &lt;a href="https://github.com/aquasecurity/tfsec"&gt;TFSEC&lt;/a&gt;. You can take a look at all the checks that &lt;code&gt;Trivy&lt;/code&gt; performs under the &lt;a href="https://github.com/aquasecurity/tfsec#included-checks"&gt;included checks&lt;/a&gt; documentation. In the previous example above &lt;code&gt;Trivy&lt;/code&gt; detected a risk called: &lt;a href="https://tfsec.dev/docs/general/secrets/sensitive-in-attribute/"&gt;Potentially sensitive data stored in block attribute&lt;/a&gt;, which notified us that our code was potentially exposing sensitive information.&lt;/p&gt;

&lt;p&gt;I hope you have enjoyed this post and have learned something new. You can also find the code samples used in this blog post on my &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/main/posts/DevOps-Terraform-Trivy/code"&gt;Github&lt;/a&gt; page. ‚ù§Ô∏è&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#author"&gt;
  &lt;/a&gt;
  &lt;em&gt;Author&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Like, share, follow me on: üêô &lt;a href="https://github.com/Pwd9000-ML"&gt;GitHub&lt;/a&gt; | üêß &lt;a href="https://twitter.com/pwd9000"&gt;Twitter&lt;/a&gt; | üëæ &lt;a href="https://www.linkedin.com/in/marcel-l-61b0a96b/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__620034"&gt;
  
    .ltag__user__id__620034 .follow-action-button {
      background-color: #0cbb58 !important;
      color: #000000 !important;
      border-color: #0cbb58 !important;
    }
  
    &lt;a href="/pwd9000" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Amb4rEJN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--L_SDLOmq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620034/93be2c72-3a13-478e-8af1-a4bedc1b2331.jpeg" alt="pwd9000 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/pwd9000"&gt;Marcel.L&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/pwd9000"&gt;Cloud Solutions &amp;amp; DevOps Architect.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>tutorial</category>
      <category>security</category>
      <category>azure</category>
      <category>devops</category>
    </item>
    <item>
      <title>#(ML) Learn About The Machine  Learningü§π </title>
      <author>Deepak Gupta</author>
      <pubDate>Sat, 16 Oct 2021 10:56:26 +0000</pubDate>
      <link>https://dev.to/deepakguptacoder/ml-learn-about-the-machine-learning-3pfh</link>
      <guid>https://dev.to/deepakguptacoder/ml-learn-about-the-machine-learning-3pfh</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;h4&gt;
  &lt;a href="#hello-everyone"&gt;
  &lt;/a&gt;
  Hello everyone!
&lt;/h4&gt;

&lt;p&gt;In this article, we look into about machine learning in Artificial intelligence&lt;br&gt;
We are using Artificial intelligence in our daily life I will tell you that Machine learning how it work and how many types we are see all the step in this article  it's help you to grow and build your knowledge.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZYs7TMyp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h4h5tlna4lrg47v595ry.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZYs7TMyp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h4h5tlna4lrg47v595ry.jpeg" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
Machine learning is a subset of AI,and it's provide the static ( Statistics )Method and there algorithm and enable to machine and computers learning ,the program to change in any case Machine Learning is utilized in various applications, ranging from automating.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-machine-learning-"&gt;
  &lt;/a&gt;
  What is Machine learning ?
&lt;/h2&gt;

&lt;p&gt;Machine Learning provides many different techniques and algorithms to make the computer learn Machine learning uses a massive amount of structured and semi-structured data so that a machine learning model can generate accurate result or give predictions based on that data. Also it's called (ML)Machine learning enables a computer system to make predictions or take some decisions using historical data without being explicitly programmed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-machine-learning"&gt;
  &lt;/a&gt;
  Types Of Machine Learning
&lt;/h2&gt;

&lt;p&gt;There are Three types of Machine learning&lt;br&gt;
1.Supervised Learning&lt;br&gt;
2.Unsupervised Learning&lt;br&gt;
3.Reinforcement Learning&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#supervised-learning"&gt;
  &lt;/a&gt;
  Supervised Learning
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GqF32Etf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g1wl5s72jtytbv11fh17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GqF32Etf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g1wl5s72jtytbv11fh17.png" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
Supervised learning is typically done in the context of classification, when we want to map input to output labels, or regression.&lt;br&gt;
Supervised learning (SL) is the machine learning task of learning a function that maps an input to an output based on example input-output pairs. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unsupervised-learning"&gt;
  &lt;/a&gt;
  Unsupervised Learning
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tPz7hIL1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgztqf42maobyautb43w.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tPz7hIL1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgztqf42maobyautb43w.jpeg" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
Unsupervised learning is a type of machine learning in which the algorithm is not provided with any pre-assigned labels or scores for the training data.&lt;br&gt;
Advantages of unsupervised learning include a minimal workload to prepare and audit the training set, in contrast to supervised learning techniques where a considerable amount. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reinforcement-learning"&gt;
  &lt;/a&gt;
  Reinforcement Learning
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I83n6Ucu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpkt6guutb09h03w7f9q.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I83n6Ucu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpkt6guutb09h03w7f9q.jpeg" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
Reinforcement learning is a machine learning training method based.It enables an agent to learn through the consequences of actions in a specific environment.&lt;br&gt;
example, types of reinforcement might include praise, getting out of unwanted work, token rewards ,etc.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#its-the-some-of-the-basis-points-of-the-machine-learning-i-will-also-provide-the-machine-learning-and-there-platform-is-also-giving-in-my-last-article-you-can-check-there-and-learn-about-the-machine-learning"&gt;
  &lt;/a&gt;
  It's the some of the basis points of the machine learning I will also provide  the machine learning and there platform is also giving in my last article. You can check there and learn about the machine learning.
&lt;/h5&gt;

&lt;p&gt;.&lt;br&gt;
.&lt;br&gt;
.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#i-hope-you-found-this-article-useful-if-you-need-any-help-please-let-me-know-in-the-comment-section"&gt;
  &lt;/a&gt;
  I hope you found this article useful, if you need any help please let me know in the comment section.üíØ
&lt;/h4&gt;

</description>
      <category>machinelearning</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Hyv√§ Theme
For Magento 2</title>
      <author>‚≠ê JaJuMa ‚≠ê</author>
      <pubDate>Sat, 16 Oct 2021 10:46:53 +0000</pubDate>
      <link>https://dev.to/jajuma/hyva-themefor-magento-2-5169</link>
      <guid>https://dev.to/jajuma/hyva-themefor-magento-2-5169</guid>
      <description>&lt;h2&gt;
  &lt;a href="#no-rocket-science-but-rocket-speed"&gt;
  &lt;/a&gt;
  NO ROCKET SCIENCE, BUT ROCKET SPEED
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#about-hyv%C3%A4-theme-amp-magento-2"&gt;
  &lt;/a&gt;
  ABOUT HYV√Ñ THEME &amp;amp; MAGENTO 2
&lt;/h2&gt;

&lt;p&gt;Magento 2 Frontend Rethought And Redone.&lt;br&gt;
Top performance and fast loading times on mobile and desktop&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fD8lHWk1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xlb39jwrrkmbwjkrik1y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fD8lHWk1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xlb39jwrrkmbwjkrik1y.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-hyv%C3%A4-theme-for-magento-2"&gt;
  &lt;/a&gt;
  WHAT IS HYV√Ñ THEME FOR MAGENTO 2?
&lt;/h2&gt;

&lt;p&gt;The standard Magento frontend "Luma" has been much criticized since its release in 2015. Too slow, unnecessarily complex, too much effort even for smallest adjustments and changes to the design template.&lt;/p&gt;

&lt;p&gt;It was exactly this criticism and dissatisfaction in the Magento community that was the motivation for the development of Hyv√§. The idea behind Hyv√§ is to build a new frontend or design template for Magento 2 from scratch. A template that throws everything "bad" about Luma overboard and instead is built from scratch and well thought out. Without outdated technologies and without unnecessary complex overhead, but still with all the features and possibilities that make Magento stand out.&lt;/p&gt;

&lt;p&gt;A design that with a leaner approach and modern technologies also meets today's expectations and requirements for performance, flexibility and easy customizability and that without bringing new challenges at the same time like it is the case with other frontend approaches (e.g. PWA, Headless...) with much higher implementation efforts and additional complexity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-the-hyv%C3%A4-theme-better"&gt;
  &lt;/a&gt;
  WHY IS THE HYV√Ñ THEME BETTER?
&lt;/h2&gt;

&lt;p&gt;The Hyv√§ Theme promises:&lt;/p&gt;

&lt;p&gt;Reduced complexity&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Improved performance&lt;/li&gt;
&lt;li&gt;Improved developer experience&lt;/li&gt;
&lt;li&gt;Improved development speed&lt;/li&gt;
&lt;li&gt;Lower dependencies&lt;/li&gt;
&lt;li&gt;Lower learning curve&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Boom! That's an announcement!&lt;br&gt;
Does Hyv√§ Theme live up to these promises and is it really that good?&lt;/p&gt;

&lt;p&gt;Short and sweet answer: Yes. Hyv√§ abandons the old and cumbersome frameworks like KnockoutJS, RequireJS and jQuery on which the standard Magento 2 frontend is based.&lt;br&gt;
Instead, Hyv√§ relies on modern and lean frameworks, AlpineJS and TailwindCSS and takes full advantage of the capabilities of modern browsers with VanillaJS. Retained components of the well-known Magento frontend architecture that have proven themselves: Layout XML, PHTML templates, caching...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hyv%C3%A4-theme-highlights"&gt;
  &lt;/a&gt;
  HYV√Ñ THEME HIGHLIGHTS
&lt;/h2&gt;

&lt;p&gt;The Hyv√§ Theme:&lt;br&gt;
The best frontend for Magento 2.&lt;br&gt;
Excellent performance without compromise on all devices,&lt;br&gt;
thanks to most modern technology stack!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rocket Fast Page Load TImes&lt;/li&gt;
&lt;li&gt;Top Core Web Vitals Values LCP / CLS / FID / TBT&lt;/li&gt;
&lt;li&gt;Modern Technologies: AlpineJS &amp;amp; TailwindCS&lt;/li&gt;
&lt;li&gt;Reduced Complexity&lt;/li&gt;
&lt;li&gt;Full Magento Power&lt;/li&gt;
&lt;li&gt;Strong &amp;amp; Fast Growing Hyv√§ Community&lt;/li&gt;
&lt;li&gt;Compatible With Many 3rd Party Modules&lt;/li&gt;
&lt;li&gt;Faster Time-To-Market&lt;/li&gt;
&lt;li&gt;JaJuMa Extensions for Hyv√§ Theme&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.jajuma.de/en/jajuma-develop/magento-extensions"&gt;JaJuMa Magento Extensions&lt;/a&gt; for Hyv√§ To make your Hyv√§ store even better&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#thats-why-hyv%C3%A4-theme-is-the-best-frontend-for-magento-2"&gt;
  &lt;/a&gt;
  That's why Hyv√§ Theme is the best frontend for Magento 2
&lt;/h2&gt;

&lt;p&gt;The streamlining by using the modern frameworks AlpineJS &amp;amp; TailwindCSS is the key to achieving the outstanding performance and the accompanying top user experience that the Hyv√§ theme offers.&lt;/p&gt;

&lt;p&gt;Another effect of this streamlining:&lt;br&gt;
Simplification leads to less complexity, easier implementation of customizations and overall shorter development times.&lt;/p&gt;

&lt;p&gt;For you as a merchant, this means:&lt;br&gt;
A first-class frontend with all the comprehensive possibilities Magento offers, while at the same time lower budget requirements and shorter project times.&lt;/p&gt;

&lt;p&gt;Too good to be true or not convinced yet?&lt;br&gt;
Read on to learn more about the benefits JaJuMa and Hyv√§ can offer you...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amp-pwa-headless-hyv%C3%A4-is-the-future"&gt;
  &lt;/a&gt;
  AMP? PWA? Headless? HYV√Ñ Is The Future!
&lt;/h2&gt;

&lt;p&gt;In the past, there have always been new ideas and approaches to make Magento better, faster, more modern... with new technologies.&lt;br&gt;
Again and again, these ideas also said: This is the future! So you have to do it now, otherwise, you will be left behind.&lt;/p&gt;

&lt;p&gt;Naturally, we have also looked at these earlier approaches and dealt with them. After all, it's fun to deal with new things, learn new things and try them out. Of course, we were also repeatedly approached by customers, whether one would not have to make "PWA" now?.&lt;/p&gt;

&lt;p&gt;However, none of these earlier ideas and hypes could convince us. From our point of view, the disadvantages outweighed the advantages, more hype than "gamechanger". Accordingly, we have also always advised our customers against getting involved in AMP or PWA and investing in these hypes. Too bad about the sales for us, but you don't have to go along with every technology hype. More important in the end is the overall result and a satisfied customer.&lt;/p&gt;

&lt;p&gt;With Hyv√§, it was different from the very first moment, Belly feeling: there's the gamechanger!.&lt;br&gt;
Even when we first read the concept and idea behind Hyv√§ it was an eye-opening experience. It was exactly the realization of many whining conversations over lunch about Magento 2 "You'd have to..."&lt;/p&gt;

&lt;p&gt;So we took a closer look at Hyv√§. Despite the positive gut feeling, but also with some skepticism due to the earlier disillusionments regarding other frontend alternatives. First tests, reading in docs etc. about Hyv√§, AlpineJS, TailwindCSS..., make the first of our extensions compatible with Hyv√§ as the first "real-life" tests...&lt;/p&gt;

&lt;p&gt;Conclusion: Our gut feeling did not deceive us. The skepticism has evaporated!&lt;br&gt;
Hyv√§ keeps what it promises and convinces in every aspect. It is the frontend the Magento community has been waiting for.&lt;br&gt;
Hyv√§ is a gamechanger.&lt;br&gt;
Hyv√§ is the future!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8EVo5IQt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6u9otvc3biooq0637737.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8EVo5IQt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6u9otvc3biooq0637737.gif" alt="Hyv√§ Rocket"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#we-are-excited-about-hyv%C3%A4"&gt;
  &lt;/a&gt;
  We are excited about Hyv√§!
&lt;/h2&gt;

&lt;p&gt;Is Hyv√§ revolutionary?&lt;br&gt;
Maybe not, more appropriate would be: it's a clever rework of the previous Magento frontend architecture.&lt;br&gt;
In which outdated and obsolete components have been replaced with newer and more powerful ones.&lt;br&gt;
It's the powerful frontend Magento deserves.&lt;br&gt;
Is Hyv√§ a hype?&lt;br&gt;
Granted, the attention and comments Hyv√§ has been getting since its release are reminiscent of a hype.&lt;br&gt;
But the concept and implementation are too good to just disappear again like some other inflated hype.&lt;br&gt;
We are convinced:&lt;br&gt;
Hyv√§ is here to stay! Hyv√§ is the front-end "way to go" for a convincing, contemporary and future-proof e-commerce solution based on Magento which is still the most powerful e-commerce system.&lt;/p&gt;

&lt;p&gt;What Do You Think?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-information"&gt;
  &lt;/a&gt;
  Further Information
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.jajuma.de/en/jajuma-shop/demo-shop-with-magento-2-and-hyva-themes"&gt;Experience Hyv√§: Live-Demo&lt;/a&gt;&lt;br&gt;
Experience Hyv√§ live and in action on our fully functional live demo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.jajuma.de/en/jajuma-develop/magento-extensions"&gt;Hyv√§ Extensions: by JaJuMa&lt;/a&gt;&lt;br&gt;
Discover our already available Extensions for Hyv√§ that will make your Hyv√§ store even better.&lt;/p&gt;

</description>
      <category>magento</category>
      <category>performance</category>
      <category>frontend</category>
      <category>development</category>
    </item>
    <item>
      <title>Node.js from Beginners to Advance: REST API using node, express and MongoDB</title>
      <author>Pramit Marattha</author>
      <pubDate>Sat, 16 Oct 2021 10:18:20 +0000</pubDate>
      <link>https://dev.to/aviyel/nodejs-from-beginners-to-advance-rest-api-using-node-express-and-mongodb-c3i</link>
      <guid>https://dev.to/aviyel/nodejs-from-beginners-to-advance-rest-api-using-node-express-and-mongodb-c3i</guid>
      <description>&lt;h2&gt;
  &lt;a href="#rest-api-using-node-express-and-mongodb"&gt;
  &lt;/a&gt;
  REST API using node, express and MongoDB
&lt;/h2&gt;

&lt;p&gt;This is the second part of the node series; if you're unfamiliar with node, don't worry; we covered everything in the first series, which you can find it here =&amp;gt; &lt;a href="https://dev.to/aviyel/node-js-from-beginners-to-advance-31id"&gt;dev.to/aviyel/node-js-from-beginners-to-advance&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, without further ado, let's get this party started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-exactly-is-mongodb"&gt;
  &lt;/a&gt;
  So, what exactly is MongoDB?
&lt;/h2&gt;

&lt;p&gt;MongoDB is a cross-platform document-oriented database application that is open source. MongoDB is a NoSQL database application that works with JSON-like documents and optional schemas. MongoDB is a database that was created by MongoDB Inc. and is distributed under the Server Side Public License.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#now-lets-get-this-project-started-right-away"&gt;
  &lt;/a&gt;
  Now, Let's get this project started right away.
&lt;/h3&gt;

&lt;p&gt;Getting started on our project&lt;/p&gt;

&lt;p&gt;Create a new folder and name it whatever you like, then open it in Visual Studio Code and run the code below from the command prompt.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init &lt;span class="nt"&gt;-y&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Configuring package.json&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To install the dependencies, use the following instructions in the terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i cors express dotenv mongoose nodemon
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LFZ2ug-r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/letgtc5c6s5rb93vzbpb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LFZ2ug-r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/letgtc5c6s5rb93vzbpb.png" alt="npm packages"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;dotenv: needed to retrieve data from.env files.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;express: node.js web application framework.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mongoose:¬† It is a Node. js based Object Data Modeling (ODM) library for MongoDB&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;nodemon: It will keep the server running indefinitely.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cors: allows cross-origin API requests.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The "package.json" file should look like this after the dependencies have been installed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"rest"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"index.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"nodemon server.js"&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"keywords"&lt;/span&gt;&lt;span class="p"&gt;:[],&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"license"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"ISC"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"cors"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"^2.8.5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"dotenv"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"^10.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"express"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"^4.17.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"mongoose"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"^6.0.8"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"nodemon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"^2.0.13"&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ITPYkXdF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9bbclcno2ehvrg9fs2b2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ITPYkXdF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9bbclcno2ehvrg9fs2b2.png" alt="dependencies"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And also, remember to update the scripts as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yIwokG9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ov2r5lflfxup2669kf1j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yIwokG9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ov2r5lflfxup2669kf1j.png" alt="scripts"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#structuring-the-folder"&gt;
  &lt;/a&gt;
  Structuring the folder:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;controllers:&lt;/strong&gt; The files in the controllers‚Äô folder will contain the methods for the endpoints to interface with the database.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;models:&lt;/strong&gt; The files that specify the MongoDB schema will be found in the model‚Äôs folder.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;dbConfig:&lt;/strong&gt; Make a file called db.js in the config folder. The necessary code for connecting to the MongoDB database will be contained in this file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;routers:&lt;/strong&gt; The files with the endpoints will be found in the routers folder.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hH_Lqofw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1633608733731-image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hH_Lqofw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1633608733731-image.png" alt="folder structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configuring-serverjs"&gt;
  &lt;/a&gt;
  Configuring server.js
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Import express.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use express() to start our app.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using the app, create a get method for the endpoint &lt;a href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For our server to run, set the PORT to 6000.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using our app, you may listen to PORT.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//app.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cors&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;dotenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// listen&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Server is running on http://localhost:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now use the following code to start the server with nodemon. Ensure that the following command is executed from the project directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the server has started successfully, the terminal should display the following message.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pBON0ilu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1633672375118-output-resized.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pBON0ilu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1633672375118-output-resized.jpg" alt="npm start"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started-with-mongodb"&gt;
  &lt;/a&gt;
  Getting started with MongoDB
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JC3IC0F_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qn1ugj8dej5ww85ob96.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JC3IC0F_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qn1ugj8dej5ww85ob96.png" alt="Mongodb meme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sign in to MongoDB&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make a new project.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bUH0ZbOX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1633609044884-image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bUH0ZbOX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1633609044884-image.png" alt="make new project"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a cluster&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xCIKfYLq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1633609157284-image-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xCIKfYLq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1633609157284-image-resized.png" alt="cluster"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZNeYcKhZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1633609192655-image-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZNeYcKhZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1633609192655-image-resized.png" alt="cluster creation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Choose a cloud service provider.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tKtYjDY9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1633609274997-image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tKtYjDY9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1633609274997-image.png" alt="cloud service"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Make a cluster&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wait for the cluster to be built before proceeding (usually takes around 5 -10 minutes)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ISPwo-hD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1633609341646-image-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ISPwo-hD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1633609341646-image-resized.png" alt="wait for cluster"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Allow access from anywhere by clicking connect. Then IP address should be added.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dhVoBLK---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1633609405584-image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dhVoBLK---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1633609405584-image.png" alt="add ip address"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DWSLZjPw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1633609429296-image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DWSLZjPw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1633609429296-image.png" alt="connect a cluster"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Create a user in the database. For the MongoDB URI, you'll need the username and password.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select a connection method by clicking on it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Connect your application by clicking on it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Choose the appropriate driver and version.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Copy and paste mongodb+srv into the.env file.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;PORT=6000
MONGO_DB_URL=mongodb+srv://admin:-----------@cluster0.2qee0.mongodb.net/myFirstDatabase?retryWrites=true&amp;amp;w=majority
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now open the database.js file in the dbConfig folder and make the modifications listed below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Import Mongoose.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MONGO_DB_URL should be imported from the.env file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Define the configDatabase method for establishing a database connection.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The configDatabase method should be exported and called in server.js.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//database.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dbURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MONGO_DB_URL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;configDatabase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbURL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;useUnifiedTopology&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Database connected&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;configDatabase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the following changes on server.js file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// server.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cors&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;configDatabase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./dbConfig/database.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;dotenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//connecting to the mongodb database&lt;/span&gt;
&lt;span class="nx"&gt;configDatabase&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cors&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}));&lt;/span&gt;

&lt;span class="c1"&gt;// add the middlewares&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;extended&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;}));&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello there!! Cheers !! The server is up and running&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// listen&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Server is running on http://localhost:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#defining-database-schema"&gt;
  &lt;/a&gt;
  Defining database schema:
&lt;/h2&gt;

&lt;p&gt;Add a todo.models.js file inside the models folder. We will define the entire db schema inside this particular file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// todo.models.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;TodoListSchema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;todo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;TodoListSchema&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#defining-the-entire-endpoint-of-our-api"&gt;
  &lt;/a&gt;
  Defining the entire endpoint of our API
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// todo.routes.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;listAllTodo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;createTodo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;updateTodo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;deleteTodo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../controllers/todo.controller.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listAllTodo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createTodo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/:id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updateTodo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/:id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;deleteTodo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#defining-the-methods-for-our-endpoint"&gt;
  &lt;/a&gt;
  Defining the methods for our endpoint
&lt;/h2&gt;

&lt;p&gt;The methods for the endpoints will be defined in the controllers‚Äô folder.&lt;/p&gt;

&lt;p&gt;The first step is to import the todo models.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../models/todo.models.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;listAllTodo()&lt;/strong&gt; : find() method will return all the todo inside the MongoDB collections.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listAllTodo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;There isnt any todo available&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;createTodo():&lt;/strong&gt; The method create() will create a todo item and return a success message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createTodo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cheers!! You have successfully added TODO&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sorry your todo list cannot be added&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Full article available here =&amp;gt; &lt;a href="https://aviyel.com/post/1150"&gt;https://aviyel.com/post/1150&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow &lt;a href="https://twitter.com/AviyelHq"&gt;@aviyelHQ&lt;/a&gt; or &lt;a href="https://aviyel.com/discussions"&gt;sign-up&lt;/a&gt; on Aviyel for early access if you are a project maintainer, contributor, or just an Open Source enthusiast.&lt;/p&gt;

&lt;p&gt;Join Aviyel's Discord =&amp;gt; &lt;a href="https://discord.gg/TbfZmbvnN5"&gt;Aviyel's world&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Twitter =&amp;gt;&lt;a href="https://twitter.com/AviyelHq"&gt;https://twitter.com/AviyelHq&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>mern</category>
    </item>
    <item>
      <title>Day 8 of 100 Days of Code &amp; Scrum: First Week is Finally Over!</title>
      <author>Rammina</author>
      <pubDate>Sat, 16 Oct 2021 10:13:33 +0000</pubDate>
      <link>https://dev.to/rammina/day-8-of-100-days-of-code-scrum-first-week-is-finally-over-2opn</link>
      <guid>https://dev.to/rammina/day-8-of-100-days-of-code-scrum-first-week-is-finally-over-2opn</guid>
      <description>&lt;p&gt;Happy weekend, everyone!&lt;/p&gt;

&lt;p&gt;Today marks the end of the week, and so I will be doing a Sprint Review and Retrospective as I said I would &lt;a href="https://dev.to/rammina/100-days-of-code-and-scrum-a-new-challenge-24lp"&gt;at the beginning of this challenge&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-previous-weekly-sprint-goals"&gt;
  &lt;/a&gt;
  My Previous Weekly Sprint Goals
&lt;/h2&gt;

&lt;p&gt;For reference, here were the Sprint Goals for this week:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;prepare for and go through 5 phone screening/interviews at different companies&lt;/li&gt;
&lt;li&gt;learn to use &lt;code&gt;GraphQL&lt;/code&gt; and &lt;code&gt;ApolloClient&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;would be happy if I learned how to query data to the client-side&lt;/li&gt;
&lt;li&gt;mutate data&lt;/li&gt;
&lt;li&gt;learning more is always okay&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;get through the howtographql tutorials&lt;/li&gt;
&lt;li&gt;study &lt;code&gt;GraphQL&lt;/code&gt; documentation along the way&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How much of these have I accomplished?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-review"&gt;
  &lt;/a&gt;
  Weekly Review
&lt;/h2&gt;

&lt;p&gt;I believe I've met most of my Sprint Goals for this week, but it honestly could have been better.&lt;/p&gt;

&lt;p&gt;In any case, here were the things I've done:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;go through 3 phone screening/interviews at different companies (2 of them I just withdrew)&lt;/li&gt;
&lt;li&gt;I learned to use frontend &lt;code&gt;GraphQL&lt;/code&gt; and &lt;code&gt;ApolloClient&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;I can somehow utilize:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;ApolloClient&lt;/code&gt; to initialize an ApolloClient object which will be used by React components via the Context API&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;createHttpLink&lt;/code&gt; to create the HTTP link that connects the Apollo client with the GraphQL API&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useQuery&lt;/code&gt; and &lt;code&gt;useLazyQuery&lt;/code&gt; for retrieving data from the server&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useMutation&lt;/code&gt; to alter the data in the server-side&lt;/li&gt;
&lt;li&gt;GraphQL &lt;code&gt;subscriptions&lt;/code&gt; for listening to listen to events via &lt;code&gt;WebSocketLink&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;interacting with the &lt;code&gt;ApolloClient&lt;/code&gt; cache using &lt;code&gt;readQuery&lt;/code&gt; and &lt;code&gt;writeQuery&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;I read through &lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The Scrum Guide 2020&lt;/a&gt; twice this week I think I'm very much familiar with all of the concepts.&lt;/li&gt;
&lt;li&gt;I've done some extra learning what each role in the Scrum Team would do in a real-world setting.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RLshm5Za--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3xfkybxkjuirha3pnrb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RLshm5Za--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3xfkybxkjuirha3pnrb.jpg" alt="Writing down on a clipboard"&gt;&lt;/a&gt;&lt;br&gt;
Image by &lt;a href="https://pixabay.com/users/stocksnap-894430/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=923882"&gt;StockSnap&lt;/a&gt; from &lt;a href="https://pixabay.com/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=923882"&gt;Pixabay&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-retrospective"&gt;
  &lt;/a&gt;
  Weekly Retrospective
&lt;/h2&gt;

&lt;p&gt;Moving on, let's tackle what I've managed to do well, what my shortcomings are, and what I could do better next time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-went-great"&gt;
  &lt;/a&gt;
  What Went Great
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I met my learning goals for &lt;code&gt;GraphQL&lt;/code&gt; and &lt;code&gt;ApolloClient&lt;/code&gt;, and even went for more.&lt;/li&gt;
&lt;li&gt;Got through some interviews, and I got to the last phase for one of them.&lt;/li&gt;
&lt;li&gt;I'm a lot more familiar with Scrum and can recall a lot of concepts.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#some-mistakes-ive-made"&gt;
  &lt;/a&gt;
  Some Mistakes I've Made
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;applying to too many companies.&lt;/li&gt;
&lt;li&gt;scheduling too many interviews, which made me decline some of them.&lt;/li&gt;
&lt;li&gt;fatigued myself too much from dealing with too many things (code, scrumstudy, blog, social media, emails).&lt;/li&gt;
&lt;li&gt;checking notifications too much and distracting myself from focusing on one thing at a time.&lt;/li&gt;
&lt;li&gt;failing to distribute and prioritize which tasks are more important.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#things-i-could-improve-on"&gt;
  &lt;/a&gt;
  Things I Could Improve On
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;most likely check emails, social media, and blog on a set schedule instead.&lt;/li&gt;
&lt;li&gt;I should probably install something that blocks me from checking certain sites at a specific time.&lt;/li&gt;
&lt;li&gt;prioritize tasks that are more likely to help me meet my weekly goals.&lt;/li&gt;
&lt;li&gt;try to make additional changes to whatever tutorial I'm following to help enforce learning.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#first-week-is-finally-over"&gt;
  &lt;/a&gt;
  First Week is Finally Over!
&lt;/h2&gt;

&lt;p&gt;I'm glad that I managed to get through this first week and commit to most of my goals this week.&lt;/p&gt;

&lt;p&gt;However, I will admit that this is pretty brutal because I'm forced to work on concrete goals rather than just learning aimlessly. It was draining, but I think I'm starting to get the hang of this. I'm hoping to apply the things I've learned from here on.&lt;/p&gt;

&lt;p&gt;Thank you to everyone who followed me and interacted with me during the past week!&lt;/p&gt;

&lt;p&gt;Good luck on your developer journeys, and I wish you the best. Have a great weekend, everyone!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H-jXdpLa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5h201peg0l28oqknzkeb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H-jXdpLa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5h201peg0l28oqknzkeb.jpg" alt="thank you card"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Image by &lt;a href="https://pixabay.com/users/gingerquip-438818/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=515514"&gt;June Laves&lt;/a&gt; from &lt;a href="https://pixabay.com/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=515514"&gt;Pixabay&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.howtographql.com/"&gt;The Fullstack Tutorial for GraphQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.apollographql.com/docs/"&gt;Apollo Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>graphql</category>
    </item>
    <item>
      <title>EndSars Photo/Image Gallery Using C# Asp.Net Core 5 Mvc, Cloudinary  and Auth0 Api</title>
      <author>dyagzy</author>
      <pubDate>Sat, 16 Oct 2021 09:52:22 +0000</pubDate>
      <link>https://dev.to/hackmamba/endsars-photoimage-gallery-using-c-aspnet-core-5-mvc-cloudinary-and-auth0-api-4acb</link>
      <guid>https://dev.to/hackmamba/endsars-photoimage-gallery-using-c-aspnet-core-5-mvc-cloudinary-and-auth0-api-4acb</guid>
      <description>&lt;p&gt;&lt;strong&gt;Table of Content&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Required Tools Needed&lt;/li&gt;
&lt;li&gt;Setting Up

&lt;ul&gt;
&lt;li&gt;Cloudinary Account&lt;/li&gt;
&lt;li&gt;Visual Studio&lt;/li&gt;
&lt;li&gt;Auth0 Account&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Coding Proper&lt;/li&gt;
&lt;li&gt;Test One&lt;/li&gt;
&lt;li&gt;Adding Cloudinary Credentials to the  Project&lt;/li&gt;
&lt;li&gt;Test Two&lt;/li&gt;
&lt;li&gt;Test Three&lt;/li&gt;
&lt;li&gt;Test Four&lt;/li&gt;
&lt;li&gt;Cloudinary Check&lt;/li&gt;
&lt;li&gt;Adding Auth0 to the Project&lt;/li&gt;
&lt;li&gt;Test Five&lt;/li&gt;
&lt;li&gt;The End&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are going to build an image or photo gallery using Cloudinary Api as the remote image server, Auth0 for authentication with C# Asp.Net Core as the backend technology. This project is aimed at providing a working tool for human right activist by automating image upload process as they embark on their work in difficult and hazard situations. The users of this tutorial must have some proficiency in C# technology.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Required Tools  We Need&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Sign up with Cloudinary&lt;/li&gt;
&lt;li&gt;Get Visual Studio 2019&lt;/li&gt;
&lt;li&gt;Sign up with Auth0&lt;/li&gt;
&lt;li&gt;Note pad&lt;/li&gt;
&lt;li&gt;Sql server&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Setting Up&lt;/strong&gt;&lt;br&gt;
Cloudinary Account&lt;/p&gt;

&lt;p&gt;The first thing to do is to sign up on Cloudinary here &lt;a href="https://cloudinary.com/documentation/cloudinary_get_started"&gt;https://cloudinary.com/documentation/cloudinary_get_started&lt;/a&gt; so that we can get access to the required Api for image upload.&lt;br&gt;
Upon successful sign up, the following are automatically generated for you:&lt;br&gt;
Cloud name:&lt;br&gt;
API Key:&lt;br&gt;
API Secret:&lt;br&gt;
API Environment variable:&lt;/p&gt;

&lt;p&gt;So click on the account settings section to see what your Api key, Cloud name and Api secret are. Copy out this values and keep it in your notepad.&lt;br&gt;
Since we intend to use Cloudinary within a DotNet application, we will rely heavily on this Cloudinary documentation for DotNet &lt;a href="https://cloudinary.com/documentation/dotnet_integration"&gt;https://cloudinary.com/documentation/dotnet_integration&lt;/a&gt;.&lt;br&gt;
At this moment, this would be all for Cloudinary. Next we set up our coding environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setting Up&lt;/strong&gt;&lt;br&gt;
Visual Studio&lt;br&gt;
The IDE for this project is visual studio 2019, so open your browser and go to &lt;a href="https://visualstudio.microsoft.com/downloads/"&gt;https://visualstudio.microsoft.com/downloads/&lt;/a&gt; click on Visual studio 2019  and download the community version.&lt;br&gt;
Installation and set up procedure for the visual studio 2019 can be found here &lt;a href="https://www.tektutorialshub.com/visual-studio/how-to-download-and-install-visual-studio-2019/"&gt;https://www.tektutorialshub.com/visual-studio/how-to-download-and-install-visual-studio-2019/&lt;/a&gt;&lt;br&gt;
Launch the newly installed app and select create a project and select Asp.Net Core Web Application Net 5 as the version. Lets call the name of this project  ImageGallery.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uJk4kZM8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mh4jrcze73ymq04d969g.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uJk4kZM8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mh4jrcze73ymq04d969g.jpeg" alt="new projectScaffold test"&gt;&lt;/a&gt;&lt;br&gt;
Fig 1.0&lt;br&gt;
Run the project to ensure everything is fine.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MhDnzeEs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2gnnwgmrvmat6f9n3jk1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MhDnzeEs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2gnnwgmrvmat6f9n3jk1.jpeg" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
Fig 1.1&lt;br&gt;
You should see a web browser fired up automatically similar to this shown below:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--chtGDGh4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bq7u527hkt7fgb8ivnaz.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--chtGDGh4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bq7u527hkt7fgb8ivnaz.jpeg" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fig 1.2&lt;br&gt;
Go to the Url section of this page above and now copy the text written there. This should be similar to this  &lt;a href="https://localhost:44375/"&gt;https://localhost:44375/&lt;/a&gt; . This value will be our call back Url which will be used much later in the project. For now just save it inside your notepad:&lt;br&gt;
&lt;strong&gt;Setting Up&lt;/strong&gt;&lt;br&gt;
Auth0 Account&lt;/p&gt;

&lt;p&gt;If you don‚Äôt already have an account with Auth0, the first thing you have to do us is to sign up for    free by using this link &lt;a href="https://auth0.com/"&gt;https://auth0.com/&lt;/a&gt; click the sign up button to sign up and follow the prompts.&lt;br&gt;
Choose a Region where you want the app to be hosted then click the Create account button.&lt;br&gt;
Next click on the link written ‚ÄúCreate Application‚Äù it is similar to the figure below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UoV9RK4Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dyin28g02xw4ssrzz6gj.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UoV9RK4Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dyin28g02xw4ssrzz6gj.jpeg" alt="Auth0 setup"&gt;&lt;/a&gt;&lt;br&gt;
Fig 1.3&lt;br&gt;
The Auth0 service will ask that you supply the following values such as :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Name:  This is asking you to fill in the name of your DotNet application&lt;/li&gt;
&lt;li&gt;Application Type:  Select the type of application you want to build&lt;/li&gt;
&lt;li&gt;What Technology are using to build your project :Select Asp.Net Core v3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A client Id number will be automatically generated for you, copy this and paste it inside the notepad.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Til3S_t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gqytk3aw34gh718sp43c.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Til3S_t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gqytk3aw34gh718sp43c.jpeg" alt="Auth0 setup 2"&gt;&lt;/a&gt;&lt;br&gt;
Fig 1.4&lt;/p&gt;

&lt;p&gt;Next you have to make Auth0 to be aware of your Asp.Net app, by clicking the Settings button in the figure above.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OHHqbaJZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vbpmub3fgria2wdtwrg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OHHqbaJZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vbpmub3fgria2wdtwrg.jpeg" alt="Auth0 setup 3"&gt;&lt;/a&gt;&lt;br&gt;
Fig 1.5&lt;/p&gt;

&lt;p&gt;Copy and paste the following parameters Name, Domain, Client Id, Client secret which were automatically generated for you into the notepad document above.&lt;br&gt;
Scroll down to the Application Url section of the settings, copy the call back Url from the notepad  and paste this into the ‚ÄúAllowed Call Back Url‚Äù box and then attach  /callback at the end of the text.&lt;br&gt;
Next we also copy and past the call back Url into the ‚ÄúAllowed Logout Url‚Äù&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D8NecDA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/06kibe69kie23zp9c4ql.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D8NecDA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/06kibe69kie23zp9c4ql.jpeg" alt="Auth0 setup 4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fig 1.6&lt;br&gt;
Let‚Äôs quickly have a snap shot of what we have in our notepad file&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JlrGx9nY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alw5sjk2t1751s8iwto9.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JlrGx9nY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alw5sjk2t1751s8iwto9.jpeg" alt="Notepad cross section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fig 2.0&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Coding Proper&lt;/strong&gt;&lt;br&gt;
We will return now to the visual studio and start proper coding for the project.&lt;br&gt;
Right click on the solution file and click add new project. This will take you to the same screen where we selected the type of Asp.Net core template that we chose initially.&lt;br&gt;
Go to the search box and type class library and select Class Library (.Net Core), name this SimpleImageGallery.Data&lt;br&gt;
We need one more class library so repeat the process a second time but this time around, we will call the name of this class library SimpleImageGallery.Services. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ZyhBNYW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6cejvaxctlwx26x2hc0.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ZyhBNYW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6cejvaxctlwx26x2hc0.jpeg" alt="Project arrangement"&gt;&lt;/a&gt;&lt;br&gt;
Fig 2.1&lt;br&gt;
We will refer to SimpleImageGallery.Data as the Data layer. This layer will handle all data access issues such as entity model classes, database class , Migration files etc.&lt;br&gt;
We will refer to SimpleImageGallery.Services as the Service layer. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Project  Referencing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now we need to make the three separate projects above communicate with each other.&lt;br&gt;
Starting from the ImageGallery project, click on dependencies, add SimpleImageGallery.Data and  SimpleImageGallery.Services respectively as dependencies.&lt;br&gt;
Now move to the  SimpleImageGallery.Services project add SimpleImageGallery.Data as a dependencies.&lt;br&gt;
Now right click the data layer and add a folder, name this folder Models,  add a class, to the Models folder name this class GalleryImage.cs&lt;br&gt;
&lt;strong&gt;Entity Models&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;We add another entity class Image tag&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Right click on the web ImageGallery project and select ManageNugget package.&lt;br&gt;
add Microsoft.EntityFrameworkCore.Design as dependency.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Database Context&lt;/strong&gt;&lt;br&gt;
Next we need to add the Database context class lets call this class SimpleImageGalleryDbContext.&lt;br&gt;
The SimpleImageGalleryDbContext will represent our data access class i.e. the class via which we can talk to the database.&lt;br&gt;
Add the following nuggets packages as dependencies.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w350dGSE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g6w47l9s1tz4jliu71u2.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w350dGSE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g6w47l9s1tz4jliu71u2.jpeg" alt="nuggets packages"&gt;&lt;/a&gt;&lt;br&gt;
Fig 2.2&lt;br&gt;
We will add three different packages below to the data access layer one after following the process above.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;MicrosoftEntityFrameworkCore (5.0.10)&lt;/li&gt;
&lt;li&gt;MicrosoftEntityFrameworkCore.SqlServer (5.01.0)&lt;/li&gt;
&lt;li&gt;MicrosoftEntityFrameworkCore.Tools (5.01.0)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Add DbSet properties to the SimpleImageGalleryDbContext  and initialize it with the code as written below.&lt;br&gt;
 See the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
&lt;strong&gt;Migrations&lt;/strong&gt;&lt;br&gt;
Return to the ImageGallery project i.e., the web project and open up the appsettings.json file&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1-zz8Y9K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/blua4mrkr4eudc2wmgte.jpeg" alt="appsettings 1"&gt;

&lt;p&gt;Fig 2.3&lt;br&gt;
We need to add connection strings to the appsettings.json file&lt;br&gt;
Just before the "AllowedHosts": "*" add the your connection strings.&lt;br&gt;
 &lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Now we have to register the Sql server in the StartUp class. &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Now we are all set to run our migration&lt;br&gt;
 Select Package manager console and type the command below Add-Migration firstMigration press the enter key.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--URchnAKK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ljy9tdv8ii7r82c6kay1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--URchnAKK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ljy9tdv8ii7r82c6kay1.jpeg" alt="migration cmd"&gt;&lt;/a&gt;&lt;br&gt;
Fig 2.5&lt;br&gt;
Next enter this second command Update-Database at the PM&amp;gt; prompt and press enter.&lt;br&gt;
 Open your Sql server to confirm that your new database has been created there.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YSI5wk5s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5331l1uwvrtjmzf7rnzz.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YSI5wk5s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5331l1uwvrtjmzf7rnzz.jpeg" alt="database cross section"&gt;&lt;/a&gt;&lt;br&gt;
Fig 2.6&lt;br&gt;
Now lets go over to the Web app project (ImageGallery) open it and add a class to the models folder there. Lets call this class UploadImageModel&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
Next we will add another class to the models folder and name it GalleryIndexModel. The GalleryIndexModel will have two properties as shown below.


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Next we will add another class to the models folder and name it GalleryDetailModel. The GalleryDetailModel will have five properties as shown below.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Interface  Declarations&lt;/strong&gt;&lt;br&gt;
Right click on the Data layer project and click add a class name it IImageService.&lt;br&gt;
Copy the following codes into this interface class&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Head over to the Service layer, add a new class which will implement the IImageService.&lt;br&gt;
Create a constructor of the ImageService class and then inject an instance of  the SimpleImageGalleryDbConetx class.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zOvNfjjj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yw9o3y59mutr34fuy5hu.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zOvNfjjj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yw9o3y59mutr34fuy5hu.jpeg" alt="constructor injection"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fig 3.0&lt;br&gt;
Copy the codes below as shown below&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The GetWithTag is similar to the GetById method except that it returns the images alongside the tag description of each images.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Views&lt;/strong&gt;&lt;br&gt;
Return to the web project , right click on the Views folder and add another folder name it Gallery.&lt;br&gt;
Add a file to the folder call name it Index.cshtml&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eL44Jt_e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n1z7e1pqn1b1j3pc4tju.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eL44Jt_e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n1z7e1pqn1b1j3pc4tju.jpeg" alt="empty views file"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fig 3.1&lt;/p&gt;

&lt;p&gt;Delete all the text in fig 3.1 replace with the codes below.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Also, right click on the Views folder and add another folder name it Image then add a new view file call it  UploadImage.cshtml&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eL44Jt_e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n1z7e1pqn1b1j3pc4tju.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eL44Jt_e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n1z7e1pqn1b1j3pc4tju.jpeg" alt="empty views file"&gt;&lt;/a&gt;&lt;br&gt;
Fig 3.2&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The code above basically helps to create a form with a minimalist styling  for presenting an image on the  browser. &lt;br&gt;
&lt;strong&gt;Controller&lt;/strong&gt;&lt;br&gt;
Add a new controller to the controller‚Äôs folder name it GalleryController. Inject the Image service as a constructor injection into this controller&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Q7DT-BZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jk2wg0ptcayvrm0oozac.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Q7DT-BZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jk2wg0ptcayvrm0oozac.jpeg" alt="controller injection"&gt;&lt;/a&gt;&lt;br&gt;
  Fig 3.3&lt;br&gt;
Next we write the Http action method and name it Index&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;CSS Styling&lt;/strong&gt;&lt;br&gt;
Open the wwwroot folder in the web project, click the CSS folder and  double click on the site.css file to open it.&lt;br&gt;
This file already contains the basic CSS styling that is used to render the default Asp.Net core Mvc page when the project is run, we will only modify this file to accommodates the changes that we want to see whenever the Upload.cshtml file is rendered on the browser.&lt;br&gt;
Add this code below to the site.css file&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Add Upload Button&lt;/strong&gt;&lt;br&gt;
Next we need to add an upload button to the navigation bar so that we can begin to upload images to the database&lt;br&gt;
To do this, open the _Layout.cshtml file located in the Shared folder. When this file is opened, it already contains some default codes used for rendering the layout.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7vFpG-KI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/132xd8q846rtj9xd224d.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7vFpG-KI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/132xd8q846rtj9xd224d.jpeg" alt="default codes"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fig 3.4&lt;br&gt;
Identify the portion of the _Layout.cshtml that has the code similar to the one below then delete&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
Paste this code below to replace the code you had just deleted above&lt;br&gt;
 &lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Lastly, before we test our application, go to the Startup class and lets modify the Mvc route.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5QLUbdr2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mg85e3qdk6mzzk361h2m.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5QLUbdr2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mg85e3qdk6mzzk361h2m.jpeg" alt="add routing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fig 3.5&lt;br&gt;
Locate the  app.UseEndPoints method and it should look like what is above.&lt;br&gt;
 &lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Register Interface Service&lt;/strong&gt;&lt;br&gt;
Now we need to register the IImage interface class in the StartUp class by adding the snippet below.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Test One&lt;/strong&gt;&lt;br&gt;
Run the app, you should see a web browser similar to this below&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5q4d8Pfc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p6oydbdw07hg26vlr20m.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5q4d8Pfc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p6oydbdw07hg26vlr20m.jpeg" alt="added upload button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fig 3.6&lt;br&gt;
If you have a similar web browser as shown above then you should congratulate yourself, else, try to go over the steps above a second time so as to trace where you missed out.&lt;br&gt;
Now you can see the Upload button has been  successfully added but when the Upload button is clicked, we get a 404 page not found error, so lets  fix this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Image Upload Service&lt;/strong&gt;&lt;br&gt;
To be able to use the  Cloudinary service in our project, we need to have an interface that will hold the implementation of how we want this Cloudinary Api to function within our application. So return back to the Web project, right click to add a folder name it Infrastructures.&lt;br&gt;
Add an interface class to the Infrastructures name it ICloudinaryImageUpload.cs. Inside this interface class add the code snippet below.&lt;/p&gt;

&lt;p&gt;Task UploadPicture(UploadImageModel model);&lt;/p&gt;

&lt;p&gt;Add another class to the Infrastructures folder name it CloudinaryImageUpload.cs. This class has  to implement the ICloudinaryImageUpload interface &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5RoiImVl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qzuf7i0j4yq2ei1ei2ia.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5RoiImVl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qzuf7i0j4yq2ei1ei2ia.jpeg" alt="cloudinary class"&gt;&lt;/a&gt;&lt;br&gt;
 Fig 4.0&lt;br&gt;
 &lt;strong&gt;Adding Cloudinary Credentials to the  Project&lt;/strong&gt;&lt;br&gt;
Now we need to add the Cloudinary Api credentials that we got upon sign up into our project. We can hide this in the appsettings.json file. Now open the appsettings.json file and add the following code snippets as a json object.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L6HS79d---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/60olvycfmcpeaep0o6v2.jpeg" alt="appsettingCloudinary"&gt;

&lt;p&gt;Fig 4.1&lt;br&gt;
  Go to the CloudinaryImageUpload class and add the Cloudinary credentials to this class as a private properties&lt;br&gt;
 &lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
Right click on the web project and add the nugget package for Cloudinary add Cloudinary.DotNet as a dependency.

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g-Ny--22--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h152mggsm7770p0dsqoz.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g-Ny--22--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h152mggsm7770p0dsqoz.jpeg" alt="Image Cloudinary sdk"&gt;&lt;/a&gt;&lt;br&gt;
  Fig 4.2&lt;br&gt;
Next we initialize all the private properties of the Cloudinary Api credentials  as shown below.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Now lets write the logic that will expose our application to the remote Cloudinary service &lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;We will write a small private function to handle passing in tags  when uploading images for us and then call it in the method above see code snippet below&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
We are done setting up the logic that will expose our application to the Cloudinary Api in the remote server.&lt;br&gt;
Create a constructor of the ImageController and inject the ICloudinaryImageUpload interface service.

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9P-_eUgb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97q97mtgd7l9bqhk8byd.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9P-_eUgb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97q97mtgd7l9bqhk8byd.jpeg" alt="ImageController"&gt;&lt;/a&gt;&lt;br&gt;
  &lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
We are done setting up the logic that will expose our application to the Cloudinary Api in the remote server.&lt;br&gt;
Create a constructor of the ImageController and inject the ICloudinaryImageUpload interface service.

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b72YMqa5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_130D4051B20D7BD1D4482FD2BC142C23536ED27B806A3AC41882727210A27051_1632931700719_ImageController.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b72YMqa5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_130D4051B20D7BD1D4482FD2BC142C23536ED27B806A3AC41882727210A27051_1632931700719_ImageController.JPG" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fig 4.3&lt;br&gt;
 Inside this controller class, we need two methods, the first will handle a Get Http action while the second will handle the POST Http action respectively.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
So lets quickly talk through what is happening here.&lt;br&gt;
Lastly, we return a redirect to action response which basically is to take the user back to the home page where he or she could see the newly uploaded image.&lt;br&gt;
We are all set and ready to run a second test of our application to see how far we are doing or not.

&lt;p&gt;&lt;strong&gt;Test Two&lt;/strong&gt;&lt;br&gt;
Run the application and click on the Upload button, you should see this exception shown in fig 4.4 below.&lt;/p&gt;

&lt;p&gt;See the figure below&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tfx4GuJw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/id3jjji7ri5vw525g0cw.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tfx4GuJw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/id3jjji7ri5vw525g0cw.jpeg" alt="exception page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fig 4.4&lt;/p&gt;

&lt;p&gt;What the exception is saying is that we need to register the ICloudinaryImageUpload in the configure method of the StartUp class.&lt;br&gt;
Now go to the configure method of the StartUp class and register the above Interface as a Scooped service  using the codes snippet below:&lt;br&gt;
services.AddScoped();&lt;/p&gt;

&lt;p&gt;Your code should look like the image below&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5sMmInLP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/drnbwwqi4zqzwmx7e4je.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5sMmInLP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/drnbwwqi4zqzwmx7e4je.jpeg" alt="StartUp class"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fig 4.5&lt;br&gt;
 &lt;strong&gt;Test Three&lt;/strong&gt;&lt;br&gt;
Now we are ready to  test our application again to see how we are doing.&lt;br&gt;
Run the application and then click the Upload button.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b2NFW6QB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0jbs278z99mq3whwuq9.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b2NFW6QB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0jbs278z99mq3whwuq9.jpeg" alt="Image upload viewPage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fig 4.6&lt;br&gt;
 Fill in the  boxes, choose any image from your local machine and then click submit.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m4-54K90--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xucliq2axnfolp29rgl8.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m4-54K90--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xucliq2axnfolp29rgl8.jpeg" alt="EndSars Aisha"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fig 5.0&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Test Four&lt;/strong&gt;&lt;br&gt;
For test four, we simply want to confirm that our uploaded images are stored up in the Cloudinary server and also on our local database.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Local DataBase Check&lt;/strong&gt;&lt;br&gt;
So lets check the database first,&lt;br&gt;
Launch your Sql database, navigate to your database and open the GalleryImages table to check&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BPb5LwcT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqxba1xxzlpv2kd5yent.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BPb5LwcT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqxba1xxzlpv2kd5yent.jpeg" alt="database 2"&gt;&lt;/a&gt;&lt;br&gt;
  Fig 5.1&lt;/p&gt;

&lt;p&gt;Just pay attention to the  Url of the last two images, we can see the Url path to the images we uploaded to the Cloudinary server  sitting right there on our local database. You can copy this Url and past it into your browser to see the exact image.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloudinary Check&lt;/strong&gt;&lt;br&gt;
Next login into your Cloudinary account on the browser, click the Media Library button and you should see  the uploaded image here.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1jE0ngdd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w5nxobfwzwxauxizi4m2.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1jE0ngdd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w5nxobfwzwxauxizi4m2.jpeg" alt="Image cloudinary 3"&gt;&lt;/a&gt;&lt;br&gt;
   Fig 5.2&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m4-54K90--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xucliq2axnfolp29rgl8.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m4-54K90--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xucliq2axnfolp29rgl8.jpeg" alt="EndSars Aisha"&gt;&lt;/a&gt;&lt;br&gt;
Fig 5.3&lt;/p&gt;

&lt;p&gt;At this point we are 85% done with our project.&lt;br&gt;
Now  we need to configure authentication.&lt;br&gt;
&lt;strong&gt;Adding Auth0 to the Project&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We will use the  Auth0 authentication Api, which we have already signed up for at the beginning of this tutorial or you click here&lt;br&gt;
The first thing we have to do is to add the Auth0 credentials i.e. Domain, ClientId, ClientSecret to the appsettings.json file&lt;br&gt;
See the figure below&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a9xGjf6I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jb9n5owp0yf0tpvwa1av.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a9xGjf6I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jb9n5owp0yf0tpvwa1av.jpeg" alt="Auth0 cred"&gt;&lt;/a&gt;&lt;br&gt;
  Fig 5.4&lt;/p&gt;

&lt;p&gt;The next thing we will do is to go to the Web project and add the necessary nugget packages we need in other to be able to use theAuth0 authentication Api.&lt;br&gt;
Go to the manage Nugget manager window and type this&lt;br&gt;
Microsoft.Asp.NetCore.Authentication.OpenIdConnect, then install it.&lt;br&gt;
Then we will follow the Auth0 DotNet documentation &lt;br&gt;
&lt;a href="https://auth0.com/docs/quickstart/webapp/aspnet-core"&gt;here&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZlkUZR3_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q1sbv9k9rhvnzq2bqvky.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZlkUZR3_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q1sbv9k9rhvnzq2bqvky.jpeg" alt="AddScopped"&gt;&lt;/a&gt;&lt;br&gt;
  Fig 5.5&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Click &lt;a href="https://auth0.com/docs/quickstart/webapp/aspnet-core/01-login#configure-your-application-to-use-auth0"&gt;here&lt;/a&gt; to learn more&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Test Five&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Launch the application again and click on Login button.&lt;br&gt;
 It should take you to the Auth0 login page see below.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zjE0wVXc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ce0rmjdnuep6ll1qem7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zjE0wVXc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ce0rmjdnuep6ll1qem7.jpeg" alt="Auth0 login"&gt;&lt;/a&gt;&lt;br&gt;
Fig 5.6&lt;br&gt;
 Provide your username and password that you had used to sign up on Auth0 then click on Continue.&lt;/p&gt;

&lt;p&gt;At this point we are sure that our application is working well.&lt;br&gt;
 But at the moment when a user clicks on the Upload button , the user is able to upload images immediately without login in into our application. This is not supposed to be so. The ideal situation is such that a user must login first before he or she could be allowed to upload an image.&lt;/p&gt;

&lt;p&gt;To fix this, we return back to the ImageController and then add the Authorize attribute on the Upload action method see Fig 6.0 below.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8qfkBfg3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hza6sp6l54jxtvmut01j.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8qfkBfg3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hza6sp6l54jxtvmut01j.jpeg" alt="Authorize Annotation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fig 6.0&lt;br&gt;
Test the application again by clicking on the Upload button and then the application should immediately direct you to the Auth0 login page as above.&lt;/p&gt;

&lt;p&gt;This is the end of this tutorial.&lt;/p&gt;

&lt;p&gt;Please drop me comments, questions, let me know about what you are building with what you have learnt.&lt;br&gt;
The entire code can be found &lt;a href="https://github.com/dyagzy/EndSars-Image-Album/tree/master"&gt;here&lt;/a&gt;&lt;br&gt;
Thank you for your time.&lt;br&gt;
Content created for the &lt;a href="https://content.hackmamba.io/"&gt; Hackmamba &lt;/a&gt; Jamstack Content Hackathon using &lt;a href="https://auth0.com/"&gt; Auth0 &lt;/a&gt;and &lt;a href="https://cloudinary.com/"&gt; Cloudinary&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Made 24 truly free HTML templates for websites and landing pages</title>
      <author>Lucian Tartea</author>
      <pubDate>Sat, 16 Oct 2021 09:39:22 +0000</pubDate>
      <link>https://dev.to/luciantartea/made-24-truly-free-html-templates-for-websites-and-landing-pages-kph</link>
      <guid>https://dev.to/luciantartea/made-24-truly-free-html-templates-for-websites-and-landing-pages-kph</guid>
      <description>&lt;p&gt;&lt;em&gt;How many times where you out and about online to to find a good quality Free HTML template for your online project, only to find that they are not actually as free as they claim them to be.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You either have to use it just for personal projects, whatever that means because all my projects are personal and made by my own hard working person. And you have to pay for commercial usage.&lt;/p&gt;

&lt;p&gt;Or you have to give them your email address, agree to newsletters, shout them out on all your social media, give them your shoe number and your momma's maiden name if possible.&lt;/p&gt;

&lt;p&gt;After going through the process, you also discover that you are not allowed to remove the copyright information and replace it with yours. Everyone in the world needs to know you are using their template.&lt;/p&gt;

&lt;p&gt;From this frustration came the idea of a free HTML templates website with absolutely no restrictions between your need of a good quality template and a quickly completed project.&lt;/p&gt;

&lt;p&gt;So Inovatik was born to solve this problem which many developers and makers have when working on lower budget projects. Or on projects where it's uncertain if they will return any revenue.&lt;/p&gt;

&lt;p&gt;Inovatik is a truly free HTML templates resource for websites and landing pages with simple license, included images and illustrations, no attribution required and unrestricted download.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The license is MIT which means you can use them freely for any type and any number of projects without any doubts&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can reuse the images in your projects because they all come from the best free images website and you have the links to them in the readme files&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can reuse the illustrations too because I've purchased custom licenses from awesome illustrators that allow you to do that&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No attribution required means you can remove my copyright and replace it with yours&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No download restrictions means you are just one click away from the zip file. No email registration, no personal details, no social shout outs&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;They are made with HTML, CSS and a sprinkle of JS. I've used Bootstrap just for the grid and a few components. They don't rely heavily on it. Enjoy them on &lt;a href="https://inovatik.com"&gt;Inovatik.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Currently I am working on a new project to support my work. It's called &lt;strong&gt;Build a product and launch in 30 days with just HTML and CSS&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;To inspire fellow devs interested in making products with just HTML and CSS I tweet transparently all my wins and fails on &lt;a href="https://twitter.com/luciantartea"&gt;@luciantartea&lt;/a&gt; and keep a journal on &lt;a href="https://launchin30html.carrd.co/"&gt;launchin30HTML&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check it out, only few days remaining till launch.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>JS/TS: Using Singleton Classes</title>
      <author>dbigpot</author>
      <pubDate>Sat, 16 Oct 2021 09:19:19 +0000</pubDate>
      <link>https://dev.to/dbigpot/jsts-using-singleton-classes-1ajd</link>
      <guid>https://dev.to/dbigpot/jsts-using-singleton-classes-1ajd</guid>
      <description>&lt;p&gt;Classes were added to JavaScript in ES6 as a template for creating and managing objects in your application. They encapsulate data and the code inside each class helps us work with that data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Vehicle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;weight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;TypeScript is a superset of JavaScript which primarily provides optional static typing, classes and interfaces. Using TypeScript, you can convert the above example of Vehicle into&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Vehicle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;weight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With that simplistic example, we know what classes are and what they help us with. But, you already knew this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-are-singleton-classes"&gt;
  &lt;/a&gt;
  So, what are Singleton classes?
&lt;/h2&gt;

&lt;p&gt;Singleton classes are a design pattern, popularly used in Java - and perhaps other languages as well. In object-oriented programming, a singleton class is a class that can have only one object (an instance of the class) at a time and provide your application a global point of access to that instance. Let me give you an example/use-case right after the basic syntax of writing singleton classes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MySingletonClass&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;INSTANCE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;MySingletonClass&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;noobmaster69&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;getInstance&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nx"&gt;MySingletonClass&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;INSTANCE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;INSTANCE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MySingletonClass&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;INSTANCE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;getGreetingMessage&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`Hello, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, &lt;code&gt;MySingletonClass&lt;/code&gt; is a simple class that follows the singleton pattern with the help of the static members &lt;code&gt;INSTANCE&lt;/code&gt; and &lt;code&gt;getInstance&lt;/code&gt;. The &lt;code&gt;INSTANCE&lt;/code&gt; object is of type &lt;code&gt;MySingletonClass&lt;/code&gt; because it will can contain an instance of the class. The initiation of the object is done inside the &lt;code&gt;getInstance&lt;/code&gt; method. This is a personal preference but I like to make my constructors &lt;em&gt;private&lt;/em&gt; so new objects of &lt;code&gt;MySingletonClass&lt;/code&gt; cannot be made outside the scope of the class.&lt;/p&gt;

&lt;p&gt;Now that you have created your singleton class, how would you access the methods? You'd do it by&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MySingletonClass&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getInstance&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;getGreetingMessage&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#thats-all-great-why-would-i-use-it"&gt;
  &lt;/a&gt;
  That's all great, why would I use it?
&lt;/h2&gt;

&lt;p&gt;That's a good question. Classes are essentially used to &lt;em&gt;create new&lt;/em&gt; objects, meaning each object will encapsulate different - or even unique - data. Like mentioned at the beginning, singleton classes help us maintain a &lt;em&gt;single&lt;/em&gt; instance of an object that can be accessed globally by different parts of your code. The best use-cases for singleton classes would be using them to maintain database services - which is the example I want to use. Here's a look at the code -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;mysql&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Query&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mysql&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;unnamed&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;named-placeholders&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toUnnamed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;unnamed&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Mysql&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Connection&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;INSTANCE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Mysql&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;getInstance&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nx"&gt;Mysql&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;INSTANCE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;INSTANCE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Mysql&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;Mysql&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;INSTANCE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mysql&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createConnection&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DB_HOST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DB_USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DB_PASS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;database&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DB_DB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sqlString&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sqlString&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;namedQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sqlString&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{}):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;queryValues&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;toUnnamed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sqlString&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;queryValues&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;beginTransaction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beginTransaction&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;rollback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rollback&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;release&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you were to use the above snippet for maintaining a connection to your MySQL database, your entire application would have access to the singular connection/instance that is required throughout the lifetime of your application, i.e. you won't have to create new objects each time you want to run MySQL queries in your application. To give you an example, if you wanted to run a MySQL query, you'd simple use&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Mysql&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getInstance&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myQuery&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And, that's it! That's singleton classes for you - cleaner, meaner, and makes code maintenance simpler.&lt;/p&gt;

&lt;p&gt;If you liked what you read, leave a &amp;lt;3 and a comment! :)&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Use Ngrok to share a preview of your web project to everyone!</title>
      <author>Wumi4</author>
      <pubDate>Sat, 16 Oct 2021 09:04:38 +0000</pubDate>
      <link>https://dev.to/hoangtuan110/use-ngrok-to-share-a-preview-of-your-web-project-to-everyone-1h1a</link>
      <guid>https://dev.to/hoangtuan110/use-ngrok-to-share-a-preview-of-your-web-project-to-everyone-1h1a</guid>
      <description>&lt;h2&gt;
  &lt;a href="#situation"&gt;
  &lt;/a&gt;
  Situation
&lt;/h2&gt;

&lt;p&gt;So, you just build a very cool website, but the only problem is that it is only available through your local web server, or &lt;code&gt;localhost&lt;/code&gt;. You can buy a domain, set up a simple web server, get an SSL certificate, and then figure out how to set for the code to work. But what if you just want to share a quick preview of your website to a friend, or test it on mobile devices, without having to deploy or anything?&lt;/p&gt;

&lt;p&gt;That's where tunnels come in! Tunnel allows you to set a secure, but temporary connection between your &lt;code&gt;localhost&lt;/code&gt; and the Internet. In this post, I will show you how you can share a preview of your web project to everyone using Ngrok!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-started"&gt;
  &lt;/a&gt;
  Get Started
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: In here I am assuming you are using Linux or MacOS. If you use Windows or another OS, then this tutorial is maybe not for you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;First, we will need to create a Ngrok account. You can sign up using this &lt;a href="https://dashboard.ngrok.com/signup"&gt;link&lt;/a&gt;, or go to &lt;code&gt;ngrok.com&lt;/code&gt;, and then click on &lt;code&gt;Get Started For Free&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After signing up, you should have a dashboard that looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VgJwoodX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/doa2k5sfhhjbzlesf0cu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VgJwoodX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/doa2k5sfhhjbzlesf0cu.png" alt="Ngrok Tutorial Image 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, click on &lt;code&gt;Download for Linux&lt;/code&gt;, and a zip file should be installed.&lt;/p&gt;

&lt;p&gt;Go to your default &lt;code&gt;Download&lt;/code&gt; directory, and then unzip the zip file using &lt;code&gt;unzip&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After unzipping, you should see an executable called &lt;code&gt;ngrok&lt;/code&gt;. Running this executable should show something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NAME:
   ngrok - tunnel local ports to public URLs and inspect traffic

DESCRIPTION:
    ngrok exposes local networked services behinds NATs and firewalls to the
    public internet over a secure tunnel. Share local websites, build/test
    webhook consumers and self-host personal services.
    Detailed help for each command is available with 'ngrok help &amp;lt;command&amp;gt;'.
    Open http://localhost:4040 for ngrok's web interface to inspect traffic.

[bla bla bla ...]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This means that we have installed Ngrok!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#authenticate-the-ngrok-agent"&gt;
  &lt;/a&gt;
  Authenticate the Ngrok agent
&lt;/h3&gt;

&lt;p&gt;Now, we will need to authenticate the Ngrok agent that we just installed, this will grant us access to more features and longer session time.&lt;/p&gt;

&lt;p&gt;On the dashboard, in the tab &lt;code&gt;Getting Started&lt;/code&gt;, click on &lt;code&gt;Your Authtoken&lt;/code&gt;. Click on that will lead to this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CXSR_eac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mef4w83qzpo0izdq1fa8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CXSR_eac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mef4w83qzpo0izdq1fa8.png" alt="Ngrok Tutorial Image 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, click &lt;code&gt;Copy&lt;/code&gt; to copy your authtoken, and then type this on the terminal to authenticate:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./ngrok authtoken &amp;lt;YOUR_AUTHTOKEN&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After doing that, &lt;code&gt;ngrok&lt;/code&gt; will output something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Authtoken saved to configuration file: path/to/ngrok/config/file/ngrok.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which means that we have authenticated our &lt;code&gt;ngrok&lt;/code&gt; agent.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fire-it-up"&gt;
  &lt;/a&gt;
  Fire it up
&lt;/h3&gt;

&lt;p&gt;Now, we have done setting up our Ngrok, let's fire it up!&lt;/p&gt;

&lt;p&gt;Before we get into it, we will set up &lt;code&gt;ngrok&lt;/code&gt; in our &lt;code&gt;$PATH&lt;/code&gt; to conveniently run &lt;code&gt;ngrok&lt;/code&gt; everywhere in our shell, without having to remember the path.&lt;/p&gt;

&lt;p&gt;Note that this depends on the shell that you are using. On &lt;code&gt;fish&lt;/code&gt; (the shell that I am currently using), I will set up &lt;code&gt;ngrok&lt;/code&gt; in my &lt;code&gt;$PATH&lt;/code&gt; like this in &lt;code&gt;.config/fish/config.fish&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"/path/to/ngrok/:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, restart your terminal, and you should be able to run &lt;code&gt;ngrok&lt;/code&gt; using &lt;code&gt;ngrok&lt;/code&gt; command in the shell.&lt;/p&gt;

&lt;p&gt;Now, we will start using &lt;code&gt;Ngrok&lt;/code&gt; in our web project. For the purpose of this tutorial, I have set up a simple web server using &lt;a href="http://bottlepy.org/docs/dev/index.html"&gt;Bottle Framework&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First, &lt;code&gt;cd&lt;/code&gt; to your web project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /path/to/your/project
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, start the local web server. This depends on your project. For my project, since I only use a single file for my project (which is &lt;code&gt;main.py&lt;/code&gt;), I can start the local web server of my project like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;œÄ python3 main.py
Bottle v0.12.19 server starting up &lt;span class="o"&gt;(&lt;/span&gt;using WSGIRefServer&lt;span class="o"&gt;())&lt;/span&gt;...
Listening on http://localhost:8080/
Hit Ctrl-C to quit.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After start the web server, open another terminal and type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;œÄ ngrok http &amp;lt;PORT&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With &lt;code&gt;&amp;lt;PORT&amp;gt;&lt;/code&gt; is the port of your local web server. In my case, it is &lt;code&gt;8080&lt;/code&gt;, so I will type in the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;œÄ ngrok http 8080
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After press Enter, you should see an interface that looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ngrok by @inconshreveable                                                                                                                                (Ctrl+C to quit)

Session Status                online
Account                       Wumi4 (Plan: Free)
Version                       2.3.40
Region                        United States (us)
Web Interface                 http://127.0.0.1:4040
Forwarding                    http://b0be-2001-ee0-4bab-5020-5343-d3ed-89bc-e519.ngrok.io -&amp;gt; http://localhost:8080
Forwarding                    https://b0be-2001-ee0-4bab-5020-5343-d3ed-89bc-e519.ngrok.io -&amp;gt; http://localhost:8080

Connections                   ttl     opn     rt1     rt5     p50     p90
                              2       0       0.01    0.00    0.01    0.01
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, there are two different links in the &lt;code&gt;Forwarding&lt;/code&gt; part: One is &lt;code&gt;http&lt;/code&gt; and one is &lt;code&gt;https&lt;/code&gt;. Click on any of these links will lead to your website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#end"&gt;
  &lt;/a&gt;
  End
&lt;/h2&gt;

&lt;p&gt;So that's it! You have just learned how to use Ngrok to set up a temporary link that you can use to share it as a preview to everyone!&lt;/p&gt;

&lt;p&gt;I hope you enjoy this tutorial! This is my first blog post since July, so the post may have some errors.&lt;/p&gt;

&lt;p&gt;Ok, that's for all! Goodbye! üòÑ&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>ngrok</category>
    </item>
  </channel>
</rss>
