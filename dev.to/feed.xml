<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Top 10 Animation Libraries – (CSS + JavaScript )</title>
      <author>Rezaul karim</author>
      <pubDate>Wed, 16 Jun 2021 17:59:35 +0000</pubDate>
      <link>https://dev.to/rezaulkarim/top-10-animation-libraries-css-javascript-47cj</link>
      <guid>https://dev.to/rezaulkarim/top-10-animation-libraries-css-javascript-47cj</guid>
      <description>&lt;p&gt;After Designing a static website with HTML and CSS most of the time, you need to add some animation on your website.&lt;/p&gt;

&lt;p&gt;There are many CSS animation and JavaScript animation you can find on the Internet. But sometimes you may confused what should you use on your website.Don’t worry, here we discuss about top 10 Animation Libraries.&lt;/p&gt;

&lt;p&gt;These libraries are really good fit with your website and you can find all the beautiful and most uses animation libraries here. However, you can easily use any one from this list below:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-begin-with"&gt;
  &lt;/a&gt;
  To begin with:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-wowjs"&gt;
  &lt;/a&gt;
  1. wow.js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YC0hhWMk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623864980066/Q-gz9X1gP.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YC0hhWMk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623864980066/Q-gz9X1gP.jpeg" alt="wow js — Reveal Animations When Scrolling.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Very powerful and friendly animation library it is.Reveal CSS animation as you scroll down a page. By default, you can use it to trigger animate.css animations. But you can easily change the settings to your favorite animation library.&lt;/p&gt;

&lt;p&gt;You can easily  &lt;a href="https://wowjs.uk/"&gt;download it from here&lt;/a&gt; .&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-animate-css-animation"&gt;
  &lt;/a&gt;
  2. animate CSS animation
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6iGlehgs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865036826/FnMDeo-P-.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6iGlehgs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865036826/FnMDeo-P-.jpeg" alt="Animate css A cross-browser library of CSS animations.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Animate CSS is free animation libraries. It deliver the most power for the smallest file size. Relatively, easy to use for reasonably code-savvy designers and developers.&lt;/p&gt;

&lt;p&gt;You can easily  &lt;a href="https://animate.style/"&gt;download it from here&lt;/a&gt; .&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-bouncejs"&gt;
  &lt;/a&gt;
  3. bounce.js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8tF4hqT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865087275/x09ORcsDZ.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8tF4hqT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865087275/x09ORcsDZ.jpeg" alt="Bounce js.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bounce.js is a tool and JS library that lets you create beautiful CSS3 powered animations. Animation that you can do with bounce.js: scale, rotate, translate, skew and so on …&lt;/p&gt;

&lt;p&gt;You can easily  &lt;a href="http://bouncejs.com/"&gt;download it from here&lt;/a&gt; .&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-csshake-css-animation"&gt;
  &lt;/a&gt;
  4. csshake -CSS animation
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2VIMCqt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865389361/vCgtZ24zM.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2VIMCqt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865389361/vCgtZ24zM.jpeg" alt="CSShake.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#csshake-some-css-classes-to-move-your-dom"&gt;
  &lt;/a&gt;
  csshake. Some CSS classes to move your DOM!
&lt;/h4&gt;

&lt;p&gt;You could download the complete  &lt;a href="https://elrumordelaluz.github.io/csshake/"&gt;csshake.css&lt;/a&gt;  file or separated files for each shake animation (i.e csshake-little.css). Each one expanded or minified.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-anime-js"&gt;
  &lt;/a&gt;
  5. anime js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NjIxgasP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865422296/ZBNhP4CrG.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NjIxgasP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865422296/ZBNhP4CrG.jpeg" alt="anime js.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Anime. js is a lightweight JavaScript animation library with a simple, yet powerful API. There are many JavaScript animation libraries out there. But  &lt;a href="https://animejs.com/"&gt;anime.js&lt;/a&gt;  is one of the best. It’s easy to use. It works with CSS properties, SVG, DOM attributes and JavaScript Objects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-gsap-greensock"&gt;
  &lt;/a&gt;
  6. GSAP – GreenSock
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FVPaBPbM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865465877/YuV-8uReh.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FVPaBPbM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865465877/YuV-8uReh.jpeg" alt="GSAP.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Professional-grade JavaScript animation for the modern web. One of the most Important animation libraries.Some core features:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Crazy fast, Freakishly robust, Compatible, Animate anything, Lightweight &amp;amp; expandable, No dependencies, Advanced sequencing, Permissive license and so on …&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can easily  &lt;a href="https://greensock.com/gsap/"&gt;download it from here&lt;/a&gt; .&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-mo-js"&gt;
  &lt;/a&gt;
  7. mo js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qw4zJ05B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865491980/HQT_b0oqX.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qw4zJ05B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865491980/HQT_b0oqX.jpeg" alt="mo js.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Motion for the web.  &lt;a href="https://github.com/mojs/mojs"&gt;mo·js&lt;/a&gt;  is A Complete Motion Graphics Library For The Website. That is a** fast, retina ready, modular and open source*&lt;em&gt;. Using mo js on your site will enhance the user experience, enrich your content visually and create **delightful animations&lt;/em&gt;* precisely.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-konvajs"&gt;
  &lt;/a&gt;
  8. konva.js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r2oEbyqp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865516097/AVmviyXE0.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r2oEbyqp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865516097/AVmviyXE0.jpeg" alt="Konva js - JavaScript 2d canvas library.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Konva.js – HTML5 2d canvas js library for desktop and mobile applications.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Object Oriented API with support of many shapes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Support for desktop and mobile devices.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Animations and tweens.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Node nesting, grouping and event bubbling and so on …&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can easily  &lt;a href="https://konvajs.org/"&gt;download it from here&lt;/a&gt; .&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-animista-css-animation"&gt;
  &lt;/a&gt;
  9. animista CSS animation
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q2sX5RmD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865562225/_KqKWnGOv.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q2sX5RmD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865562225/_KqKWnGOv.jpeg" alt="Animista.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://animista.net/"&gt;Animista&lt;/a&gt;  is a place where you can play with a collection of ready to use CSS animations. Tweak them and download only those you will actually use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-wicked-css-animation"&gt;
  &lt;/a&gt;
  10. wicked CSS animation
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cEWZ0Lqv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865606852/8Ki-n97su.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cEWZ0Lqv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865606852/8Ki-n97su.jpeg" alt="Wicked CSS3 Animations.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, wicked css. A library for CSS3 animations. The animations includes regular CSS3 animations to be used in all settings. Additionally, the library includes a number of wicked animations, which aren’t applicable in all situations. And they can be fun to play with.&lt;/p&gt;

&lt;p&gt;You can easily  &lt;a href="https://kristofferandreasen.github.io/wickedCSS/"&gt;download it from here&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;In conclusion, here are the top 10 animation libraries you can use on your website .Thanks for reading and Share if you like this article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mrezaulkarim.com/top-10-animation-libraries-css-animation-javascript-animation/"&gt;Read this article on my blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more exciting tips and tricks please read our  &lt;a href="https://mrezaulkarim.com/blog/"&gt;others articles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find My page on Instagram:  &lt;a href="//instagram.com/stack.content"&gt;@stack.content&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>It's OK to useStore with React-Redux</title>
      <author>Dylan Grandmont</author>
      <pubDate>Wed, 16 Jun 2021 17:56:32 +0000</pubDate>
      <link>https://dev.to/dylangrandmont/it-s-ok-to-usestore-with-react-redux-1fia</link>
      <guid>https://dev.to/dylangrandmont/it-s-ok-to-usestore-with-react-redux-1fia</guid>
      <description>&lt;p&gt;I recently had two members of my team independently confuse themselves with a subtle point in the &lt;a href="https://react-redux.js.org/api/hooks"&gt;react-redux bindings&lt;/a&gt;. We have a few instances where a component includes callbacks and inside of those callbacks we need to compute some values from our redux state. We take those values and dispatch an action:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="c1"&gt;// requires us to compute a value from the state&lt;/span&gt;
    &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;someAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="err"&gt;...&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are two relevant APIs in react-redux here: &lt;code&gt;useSelector&lt;/code&gt; and &lt;code&gt;useStore&lt;/code&gt;. &lt;code&gt;useSelector&lt;/code&gt; accepts a selector, a function which computes a value from state; when that value changes, the component will re-render.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;useStore&lt;/code&gt; on the other-hand, provides access to the redux store within  component, but it will not re-render the component on any state changes.&lt;/p&gt;

&lt;p&gt;The confusion I've seen comes from a small comment within the react-redux docs:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[useStore] should probably not be used frequently. Prefer useSelector() as your primary choice. However, this may be useful for less common scenarios that do require access to the store, such as replacing reducers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I think this statement makes sense. The primary use-case is to connect your component to a store so that when a particular &lt;em&gt;part&lt;/em&gt; of the store changes, the component re-renders. &lt;code&gt;useSelector&lt;/code&gt; achieves this and that is the intent of the statement. However, it's easy to misunderstand this as &lt;code&gt;useStore&lt;/code&gt; is "discouraged" and this causes trouble.&lt;/p&gt;

&lt;p&gt;Suppose you interpret the statement, as my team members did, as "&lt;code&gt;useSelector&lt;/code&gt; should always be preferred". In the above example, this will produce a solution like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useSelector&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;someSelector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// compute value from state&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;someAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="err"&gt;...&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But this doesn't make sense. We don't need to re-render the component when &lt;code&gt;value&lt;/code&gt; changes! Nothing in the rendered output displays the result of &lt;code&gt;value&lt;/code&gt;. We only need to evaluate &lt;code&gt;value&lt;/code&gt; when the callback is executed. And if &lt;code&gt;value&lt;/code&gt; changes frequently in the state, then we are doing a lot of re-renders that we don't need to.&lt;/p&gt;

&lt;p&gt;This is one of those "less common scenarios" where we do want  access to the store directly:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useStore&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useStore&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;someSelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getState&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;someAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="err"&gt;...&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This allows the UI to update only when needed and for the correct value to be computed just-in-time, when the callback is executed.&lt;/p&gt;

</description>
      <category>react</category>
      <category>redux</category>
      <category>javascript</category>
    </item>
    <item>
      <title>What are Module Bundlers ? How to configure Webpack ?</title>
      <author>Sumanth</author>
      <pubDate>Wed, 16 Jun 2021 17:41:58 +0000</pubDate>
      <link>https://dev.to/movingmelody/what-are-module-bundlers-how-to-configure-webpack-75h</link>
      <guid>https://dev.to/movingmelody/what-are-module-bundlers-how-to-configure-webpack-75h</guid>
      <description>&lt;h4&gt;
  &lt;a href="#what-are-module-bundlers-how-we-can-take-advantage-of-them-to-build-large-scale-applications"&gt;
  &lt;/a&gt;
  What are Module Bundlers ? How we can take advantage of them to build large scale applications.
&lt;/h4&gt;

&lt;p&gt;Hey! 🐱&lt;br&gt;
First let's understand when Module Bundlers can be used. &lt;br&gt;
Def :- Module Bundlers can be used to bundle our JavaScript files, images, styles, and fonts together into single folder.&lt;/p&gt;

&lt;p&gt;🌼 &lt;br&gt;
When we are getting started with Web Development we use these basic 3 things : HTML, CSS, JS. But when we dive into it we might replace JS with TypeScript, HTML with React Library, CSS with Sass.&lt;br&gt;
In addition to the above things we might also inject things like firebase, npm packages, D3 Js etc. Many of the injected dependencies might use common &lt;code&gt;Js&lt;/code&gt; which isn't going to work with modern &lt;code&gt;es&lt;/code&gt; syntax. We might get errors like - &lt;code&gt;Uncaught ReferenceError : require is not defined&lt;/code&gt;. And even if we manage the things to get it work we might end up with a massive JS file which then needs to be minified and broken into smaller files to reduce the load time.&lt;/p&gt;

&lt;p&gt;So to solve all the above problems &lt;strong&gt;module bundlers&lt;/strong&gt; like webpack, parcel, rollup, snowpack etc., came into existence to make the process easy and error free.&lt;br&gt;
Okay, now we know why these are introduced but the basic thing they do is taking multiple JS files and combine them into a single large file. which can be used later to load our app in browser. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Okay enough theory!&lt;/strong&gt; Let's 🛠️ configure Webpack from scratch and write some code (&amp;gt;‿◠)✌&lt;/p&gt;

&lt;p&gt;🌻 Follow the below steps to configure Webpack.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#1-create-an-entry-javascript-file"&gt;
  &lt;/a&gt;
  1. Create an entry Javascript file
&lt;/h4&gt;

&lt;p&gt;Create index.js in the &lt;code&gt;src&lt;/code&gt; folder. This &lt;code&gt;src/index.js&lt;/code&gt; will be the entry file because everything starts from here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/index.js&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lets use lodash package to convert this plain text to kebab-case text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now create  &lt;code&gt;public/index.html&lt;/code&gt; file and import the &lt;code&gt;index.js&lt;/code&gt; file in it.&lt;br&gt;
Folder structure 👇🏻&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2iPVf7kO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/id2tcizuf5huinsxewxv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2iPVf7kO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/id2tcizuf5huinsxewxv.png" alt="folder structure"&gt;&lt;/a&gt;&lt;br&gt;
&lt;code&gt;index.html&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- public/index.html --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Configure Webpack&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"../src/index.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;and some text here&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open the html file and you should see the output like :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NGcTWgO9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t3nd5nvigi5kgzfn9zs3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NGcTWgO9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t3nd5nvigi5kgzfn9zs3.png" alt="console output"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#2-install-raw-lodash-endraw-npm-package"&gt;
  &lt;/a&gt;
  2. Install &lt;code&gt;lodash&lt;/code&gt; npm package
&lt;/h4&gt;

&lt;p&gt;Before installing the &lt;code&gt;lodash&lt;/code&gt; package let's first create &lt;code&gt;package.json&lt;/code&gt; file in the project folder using the command &lt;code&gt;npm init -y&lt;/code&gt;.&lt;br&gt;
🌻&lt;br&gt;
Now, Install &lt;code&gt;lodash&lt;/code&gt; using the following command &lt;code&gt;npm i lodash&lt;/code&gt;.&lt;br&gt;
So now try to import any dependency from lodash. Let's import &lt;code&gt;kebabCase&lt;/code&gt; to convert the normal string into kebabCase.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/index.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;kebabCase&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lodash&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="nx"&gt;kebabCase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lets use lodash package to convert this plain text to kebab-case text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you hit the refresh button in the browser you should see the below error.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f_dPM8EW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/417wrggmfu034zbuxgeq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f_dPM8EW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/417wrggmfu034zbuxgeq.png" alt="module import error"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#3-installing-amp-configuring-basic-raw-webpack-endraw-"&gt;
  &lt;/a&gt;
  3. Installing &amp;amp; Configuring Basic &lt;code&gt;webpack&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;So to solve the above error we need to use bundlers like webpack, Parcel. Let's see how we can use webpack to clear the above error. Install it using the command &lt;br&gt;
&lt;code&gt;npm install --save-dev webpack webpack-cli&lt;/code&gt;.&lt;br&gt;
After install webpack lets change the build command in the &lt;code&gt;package.json&lt;/code&gt; file. Build command simply calls the &lt;code&gt;webpack&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="nb"&gt;.&lt;/span&gt;
 &lt;span class="s2"&gt;"scripts"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"build"&lt;/span&gt;: &lt;span class="s2"&gt;"webpack"&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🙌🏻 Now let's run the build command &lt;code&gt;npm run build&lt;/code&gt; from the command line. It will analyze the index.js code and then it will compile it to &lt;code&gt;dist/main.js&lt;/code&gt; file. So to use that main.js file we need to change the script tag in html file to &lt;code&gt;&amp;lt;script src="../dist/main.js"&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;.&lt;br&gt;
Now the error in the browser should be gone and the console output should be look like this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DvRM-iH4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fs7x218tabdpctecspyu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DvRM-iH4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fs7x218tabdpctecspyu.png" alt="error free console output"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#and-thats-it-we-just-completed-configuring-basic-webpack"&gt;
  &lt;/a&gt;
  🎉 And that's it we just completed configuring basic Webpack.
&lt;/h4&gt;
&lt;h4&gt;
  &lt;a href="#4-customize-the-webpack-config"&gt;
  &lt;/a&gt;
  4. Customize the Webpack Config
&lt;/h4&gt;

&lt;p&gt;Till now we are using the default Webpack config. Default config will look for src/index.js file by default. So if the name of the file is other than index.js things will not work. &lt;br&gt;
So to craft our own configuration we need a file. Create &lt;code&gt;webpack.config.js&lt;/code&gt; file in the root directory. Then you can start customizing the behavior of Webpack.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// define your entry point here&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;otherThanMain.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now run the build command again and &lt;code&gt;otherThanMain.js&lt;/code&gt; will be created inside the dist folder. Because we changed the output file name in the config file.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-adding-sass-loader"&gt;
  &lt;/a&gt;
  5. Adding Sass loader
&lt;/h4&gt;

&lt;p&gt;But when building the big projects we might also use the &lt;code&gt;Sass&lt;/code&gt;. So create &lt;code&gt;style.scss&lt;/code&gt; file inside the src folder and write some sass code and then import it insider the index.js file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./style.scss&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;kebabCase&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lodash&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;kebabCase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lets use lodash package to convert this plain text to kebab-case text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we are importing the sass file inside our js file things will not work. So to make the things work we need to install &lt;em&gt;SASS Loader&lt;/em&gt;*. Loaders can be used to process the files that aren't Javascript.&lt;/p&gt;

&lt;p&gt;Run the command &lt;code&gt;npm i --save-dev css-loader style-loader sass-loader&lt;/code&gt;. Right after installing them modify the webpack config file like this :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;awesome.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;s&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;ac&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;ss$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="c1"&gt;// Creates `style` nodes from JS strings&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;style-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="c1"&gt;// Translates CSS into CommonJS&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;css-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="c1"&gt;// Compiles Sass to CSS&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sass-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now run the build command again and everything will be alright. Learn more about module bundlers and webpack &lt;a href="https://webpack.js.org"&gt;here&lt;/a&gt;.&lt;br&gt;
Tutorial video &lt;a href="https://www.youtube.com/watch?v=5IG4UmULyoA"&gt;ref&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webpack</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>Mudar de Carreira (ou emprego): Como decidir?</title>
      <author>Simone Pedrosa</author>
      <pubDate>Wed, 16 Jun 2021 17:01:32 +0000</pubDate>
      <link>https://dev.to/simonepedrosa/mudar-de-carreira-ou-emprego-como-decidir-2oag</link>
      <guid>https://dev.to/simonepedrosa/mudar-de-carreira-ou-emprego-como-decidir-2oag</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IIeQvGzf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hg1os5rpzjbs8u20jypy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IIeQvGzf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hg1os5rpzjbs8u20jypy.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Se você chegou nesse post, imagino que é porque isso já vem martelando na sua cabeça há algum tempo mas você está sentindo alguma dificuldade nesse processo. Muita coisa passa pela cabeça e o velho conselho: “Saia da sua zona de conforto!” chega a dar um arrepio na espinha. &lt;em&gt;&lt;strong&gt;Mas tudo bem, mudanças nem sempre são fáceis e na maioria das vezes levam tempo para acontecer.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Eu já estive nessa posição mais de uma vez e, ainda assim, por muito tempo me vi paralizada na tomada de decisões importantes, quase que esperando por um sinal do universo para seguir por um caminho ou outro. 🛤&lt;/p&gt;

&lt;p&gt;A verdade é que ficamos acomodados dentro da nossa vivência e por mais que a gente não esteja muito feliz ainda &lt;em&gt;“é mais fácil permanecer no mesmo lugar”&lt;/em&gt; afinal, a gente já sabe como tudo funciona e o que precisa ser feito.&lt;/p&gt;

&lt;p&gt;Até que certo dia, vendo um vídeo no youtube, uma conversa me chamou bastante atenção e eu entendi que:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;A vida é feita de escolhas e ninguém além de você pode tomar a decisão de sair de onde você está.&lt;/strong&gt; Nesse dia, entendi que NÃO escolher também é uma escolha e isso irá gerar uma consequência: O fato de permanecer no mesmo lugar.&lt;/em&gt; ❌&lt;/p&gt;

&lt;p&gt;A partir dai eu resolvi que não queria ficar no mesmo lugar e procurei uma estratégia para escolher com mais precisão. Pra isso eu precisava colocar os pés no chão e entender onde cada caminho poderia me levar e pra isso eu usei algumas dicas que me ajudaram a fazer com que essa escolha fizesse mais sentido e são as que eu vou compartilhar aqui hoje. Então vamos lá!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt; Passo 01: Coloque no papel todas as possibilidades que você tem agora&lt;/strong&gt; ✅&lt;br&gt;
Pense no que você faz, você gosta de fazer isso? É possível continuar trabalhando com isso nesse momento? &lt;strong&gt;SE SIM&lt;/strong&gt;, quais a opções de cargos e/ou empresas em que você poderia se encaixar?&lt;/p&gt;

&lt;p&gt;Analise o que você tem a disposição e o que você pode fazer para realizar essa mudança, mesmo ainda estando nesse ambiente.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SE NÃO&lt;/strong&gt;, pense nas coisas que você é bom! Anote o que você poderia ou gostaria de fazer no seu futuro próximo e como isso poderia ser realizado, mesmo que a longo prazo. Faça uma pesquisa de mercado, há algo em que você pode se encaixar?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Exemplo: Hoje, sou advogada, mas gostaria de mudar de carreira para algo que me porporcionasse realização profissional e que aumentasse minha renda nos próximos anos. Tenho pensado em algo relacionado a área de Tecnologia da Informação, pois é uma área em constante expansão.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt; Passo 02: Crie uma linha do tempo&lt;/strong&gt; ✅&lt;br&gt;
A partir do que você pensou no Passo 01, coloque suas ideias no papel! Projete as possibilidades escolhidas a médio e longo prazo. Tente imaginar tudo com a maior quantidade de detalhes que você tiver, alinhando com o tempo que você tem e o que você pode fazer nos próximos meses/anos.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Exemplo: Ainda atuo em alguns processos como advogada, posso esperar terminar todos eles e fazer uma faculdade, mas isso irá adiar meus planos um pouco mais. Ou posso utilizar meu tempo livre para estudar paralelamente e já ir me qualificando o que poderia acelerar minha transição de carreira. Posso investir meu tempo em cursos gratuitos, até decidir o que quero de verdade e investir em um curso técnico pago. Ou Posso não fazer nada e pensar sobre isso daqui alguns meses.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;- Lembre que todas as alternativas, até mesmo a de não fazer nada, geram uma consequencia. Como você encara cada uma delas e qual faz mais sentido pra você agora?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt; Passo 03: O que eu posso fazer a partir de hoje, com as ideias que eu tenho em mente?&lt;/strong&gt; ✅&lt;br&gt;
Depois que você colocou tudo no papel, escolha a opção que faz mais sentido pra você e coloque em prática! Iniciar pesquisas na área, traçar um plano de estudos semanal, colocar metas para atividades que você precisa fazer, se matricule em um curso, converse com pessoas da área, enfim, começe a colocar as coisas em prática!&lt;/p&gt;

&lt;p&gt;A partir daí é com você. &lt;strong&gt;TESTE! Você só saberá o que você gosta ou não gosta TESTANDO!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Entenda, não há nada de errado em começar um curso, depois trancar e iniciar outro. Entrar num estágio em uma empresa e no ano seguinte partir pra outra oportunidade. Este é o momento de você conhecer o mercado e entender o que funciona pra você.&lt;/p&gt;

&lt;p&gt;É claro que você nao vai virar uma bola de &lt;em&gt;pingue-pongue&lt;/em&gt; e ficar pulando de lugar em lugar, mas também não há nada de errado em conhecer o ambiente. Quando a gente não tem referência sobre uma área essa é a melhor maneira de se inserir, conhecer pessoas e criar laços.&lt;/p&gt;

&lt;p&gt;Por fim, &lt;strong&gt;entre em comunidades e converse com pessoas da sua nova carreira/área.&lt;/strong&gt; Mesmo nos cenários mais improváveis pessoas com os mesmos objetivos se ajudam e se motivam entre si e nesse momento, é isso que você precisa. Ver outras pessoas trilhando o mesmo caminho para quando o medo bater você tenha com quem conversar e em quem se inspirar.&lt;/p&gt;

&lt;p&gt;Nada é fácil e não há uma fórmula mágica. Mas isso não quer dizer que você não possa utilizar estratégias que tornem esse caminho mais agradável. E eu realmente espero que a partir dessa leitura e da aplicação das técnicas — &lt;em&gt;colocar no papel e visualizar as possibilidades faz toda diferença!&lt;/em&gt; — você se sinta mais confortável para encarar esse algo novo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Parafraseando Fernando Teixeira de Andrade:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Há um tempo em que é preciso abandonar as roupas usadas, que já tem a forma do nosso corpo, e esquecer os nossos caminhos, que nos levam sempre aos mesmos lugares. É o tempo da travessia: e, se não ousarmos fazê-la, teremos ficado, para sempre, à margem de nós mesmos.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Se esse artigo foi útil pra você ou se você se lembrou de alguém que está passando por isso, envia pra ele! Todo mundo sai ganhando quando a gente compartilha o conhecimento. &lt;strong&gt;Faça diferença na vida de alguém!&lt;/strong&gt; 🙂&lt;/p&gt;

&lt;p&gt;Leia mais sobre Transição de Carreira &lt;a href="https://dev.to/simonepedrosa/o-mito-da-transicao-de-carreira-4n9"&gt;aqui!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>carreira</category>
    </item>
    <item>
      <title>JavaScript-30-Day-16</title>
      <author>KUMAR HARSH</author>
      <pubDate>Wed, 16 Jun 2021 16:58:52 +0000</pubDate>
      <link>https://dev.to/cenacr007_harsh/javascript-30-day-16-a41</link>
      <guid>https://dev.to/cenacr007_harsh/javascript-30-day-16-a41</guid>
      <description>&lt;h2&gt;
  &lt;a href="#css-text-shadow-mouse-move-effect"&gt;
  &lt;/a&gt;
  &lt;center&gt;CSS Text Shadow Mouse Move Effect&lt;/center&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  &lt;a href="https://cenacrharsh.github.io/JS-30-DAY-16/"&gt;demo&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b5v3aRaZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ub115qu5zk0b7vju0u2d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b5v3aRaZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ub115qu5zk0b7vju0u2d.png" alt="ss"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What we will be working on today is a CSS animation in which when you move your mouse, the shadow sort of follows it around.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How?&lt;/strong&gt; We will dynamically update the style on the element depending on the position of our mouse.&lt;/p&gt;

&lt;p&gt;This is the HTML we start working with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hero"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;contenteditable&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;🔥WOAH!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now we will listen for a &lt;code&gt;mousemove&lt;/code&gt; event on our element with class &lt;code&gt;hero&lt;/code&gt;, and when that changes we are going to figure out how far and where we should put the text shadow.&lt;/p&gt;

&lt;p&gt;First we'll grab hero:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hero&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.hero&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now we will attach our event listener:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;hero&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mousemove&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;shadow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now inside our &lt;code&gt;shadow&lt;/code&gt; function:&lt;/p&gt;

&lt;p&gt;First thing we need todo is get the width and height of the thing we have hovered over which is hero in this case:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hero&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetWidth&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hero&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetWeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;ES6&lt;/strong&gt; way to do it is: &lt;br&gt;
&lt;code&gt;const { offsetWidth: width, offsetHeight: height } = hero&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now we will figure out where the persons cursor was:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;offsetX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;offsetY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;But if try to print (x,y) we'll see a issue, as soon we reach the text the coordinate values become inconsistent.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why?&lt;/strong&gt; Because even though we are listening for &lt;code&gt;mousemove&lt;/code&gt; on the hero but if there are children elements inside of the hero, it's going to give the (x,y) of the actual elements that we hovered on , which is kind of a pain.&lt;/p&gt;

&lt;p&gt;So we need consistent x and y values so we'll figure put if, what we are hovering on is an h1 element, then modify the x and y values accordingly.&lt;/p&gt;

&lt;p&gt;In our function:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;this is the div with class of hero(what we listened on),therefore the this value is always going to be hero.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;e.target&lt;/code&gt; will be what the event got triggered on,it will change sometimes, here if we hover elsewhere it will be &lt;code&gt;div&lt;/code&gt; and if we hover on the text it will be &lt;code&gt;h1&lt;/code&gt; tag.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So,&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetLeft&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetRight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Basically we are adding how far we are we from the top and left to get the right coordinates if we are hovering on the &lt;code&gt;h1&lt;/code&gt; tag.&lt;/p&gt;

&lt;p&gt;Now that we have the correct co-ordinates,we will figure out how far the text shadow should actually go.&lt;/p&gt;

&lt;p&gt;We will calculate a walk which is how many pixel at it's most should the shadow be stretched.&lt;/p&gt;

&lt;p&gt;If 100 is our walk 50 is as high (in the bottom right corner of the screen) as we go and -50 is as low (in the upper left corner of the string) as we go, where our element is placed in the middle.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;walk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;xwalk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;round&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;walk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;walk&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ywalk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;round&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;walk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;walk&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Formula makes sure instead of going from 0 to 100 we go from -50 to 50.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now grab text and set shadow&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;h1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textShadow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`
        &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;xwalk&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;ywalk&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px 0 rgba(255,0,255,0.7),
        &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;xwalk&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;ywalk&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px 0 rgba(0,255,255,0.7),
        &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;ywalk&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;xwalk&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px 0 rgba(0,255,0,0.7),
        &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;ywalk&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;xwalk&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px 0 rgba(0,0,255,0.7)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;We have used multiple textShadow properties using varying co-ordinates and different colors for better effect.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and with this our project for the day was completed.&lt;/p&gt;

&lt;p&gt;GitHub repo:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/cenacrharsh"&gt;
        cenacrharsh
      &lt;/a&gt; / &lt;a href="https://github.com/cenacrharsh/JS-30-DAY-16"&gt;
        JS-30-DAY-16
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#blog-on-day15-of-javascript30"&gt;
  &lt;/a&gt;
  Blog on Day-15 of javascript30
&lt;/h3&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/cenacr007_harsh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kOSLbihe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---UOoV_Rg--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/641726/db02e77a-1c1c-423b-8d31-85eca73347ae.jpg" alt="cenacr007_harsh image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/cenacr007_harsh/javascript-30-day-15-l8j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;JavaScript-30-Day-15&lt;/h2&gt;
      &lt;h3&gt;KUMAR HARSH ・ Jun 15 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#blog-on-day14-of-javascript30"&gt;
  &lt;/a&gt;
  Blog on Day-14 of javascript30
&lt;/h3&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/cenacr007_harsh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kOSLbihe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---UOoV_Rg--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/641726/db02e77a-1c1c-423b-8d31-85eca73347ae.jpg" alt="cenacr007_harsh image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/cenacr007_harsh/javascript-30-day-14-3p0i" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;JavaScript-30-Day-14&lt;/h2&gt;
      &lt;h3&gt;KUMAR HARSH ・ Jun 14 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#blog-on-day13-of-javascript30"&gt;
  &lt;/a&gt;
  Blog on Day-13 of javascript30
&lt;/h3&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/cenacr007_harsh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kOSLbihe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---UOoV_Rg--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/641726/db02e77a-1c1c-423b-8d31-85eca73347ae.jpg" alt="cenacr007_harsh image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/cenacr007_harsh/javascript-30-day-13-337i" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;JavaScript-30-Day-13&lt;/h2&gt;
      &lt;h3&gt;KUMAR HARSH ・ Jun 13 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#follow-me-on-twitter"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/cenacr007_harsh"&gt;Follow me on Twitter&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#follow-me-on-linkedin"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.linkedin.com/in/kumarharsh22/"&gt;Follow me on Linkedin&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;DEV Profile&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__641726"&gt;
  
    .ltag__user__id__641726 .follow-action-button {
      background-color: #000000 !important;
      color: #000000 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/cenacr007_harsh" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kOSLbihe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---UOoV_Rg--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/641726/db02e77a-1c1c-423b-8d31-85eca73347ae.jpg" alt="cenacr007_harsh image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cenacr007_harsh"&gt;KUMAR HARSH&lt;/a&gt;
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cenacr007_harsh"&gt;B.Tech (CSE) | Competitive Programming Enthusiast | Front End Web Developer | Cloud Computing (GCP) | Blogger&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;You can also do the challenge at &lt;a href="https://javascript30.com/"&gt;javascript30&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks &lt;a class="mentioned-user" href="https://dev.to/wesbos"&gt;@wesbos&lt;/a&gt;
  , &lt;a href="https://github.com/wesbos"&gt;WesBos&lt;/a&gt; to share this with us! 😊💖&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Please comment and let me know your views&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank You!
&lt;/h2&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>github</category>
      <category>webdev</category>
    </item>
    <item>
      <title>CodeLand 2021: Motivation &amp; Career-Long Connections For Early-Career Devs </title>
      <author>Ben Halpern</author>
      <pubDate>Wed, 16 Jun 2021 16:56:21 +0000</pubDate>
      <link>https://dev.to/devteam/codeland-2021-motivation-career-long-connections-for-early-career-devs-2loa</link>
      <guid>https://dev.to/devteam/codeland-2021-motivation-career-long-connections-for-early-career-devs-2loa</guid>
      <description>&lt;p&gt;CodeLand is coming back in 2021 as a two-day virtual conference on September 23rd and 24th!&lt;/p&gt;

&lt;p&gt;While nothing needs to entirely replace face-to-face conferences, we received such amazing feedback from the global community about how accessible last year’s event was. We want to double down on what made it great and improve on what needs improvement. With a lot of uncertainty remaining in 2021, you can mark this date on your calendar with confidence.&lt;/p&gt;

&lt;p&gt;This will be a two-day event (as opposed to one &lt;strong&gt;very long&lt;/strong&gt; day of talks last year) where the focus will be maximum positive impact for early career developers. When we talk about impact, we mean memorable moments and also memorable people. Look for opportunities to make lasting online connections and make this the most important two days of the year for your career progress as a developer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CodeLand will take place on &lt;a href="https://community.codenewbie.org"&gt;the CodeNewbie Forem&lt;/a&gt; this year. There will be additional registration information to follow, but the first step is to join this community if you have not already.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#codeland-2021-details"&gt;
  &lt;/a&gt;
  CodeLand 2021 Details
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Location:&lt;/strong&gt; Virtual-only, on &lt;a href="https://community.codenewbie.org"&gt;CodeNewbie Community&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Dates:&lt;/strong&gt; Thu, Sept 23 and Fri, Sept 24&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Times:&lt;/strong&gt; Six hours per day – 4-10 PM UTC&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Format:&lt;/strong&gt; A mix of live keynotes, pre-recorded talks, and live speaker panels on both days. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Cost:&lt;/strong&gt; Free access to all keynotes, talks, and panels.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Registration:&lt;/strong&gt; Coming soon!&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CFP:&lt;/strong&gt; Opens June 22&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This year's event will feature more community participation and representation on the program — with more surprises to come. 🎉 &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Join &lt;a href="https://community.codenewbie.org"&gt;The CodeNewbie Forem&lt;/a&gt; and watch out for official conference registration&lt;/li&gt;
&lt;li&gt;Download the &lt;a href="https://dev.to/devteam/forem-for-ios-is-here-4g3f"&gt;Forem iOS app on the App Store&lt;/a&gt; if you have not already. We plan to make the best possible use of our open source technology— So get acquainted. &lt;em&gt;Android app is in the works.&lt;/em&gt;✨&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://eepurl.com/hBb5pv"&gt;Sign up&lt;/a&gt; for the “CodeLand 2021 Updates” email list for one more way to ensure you don’t miss any announcements.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#for-even-more-details-on-codeland-please-visit-this-post-from-saronyitbarek-on-codenewbie-community-and-the-codeland-2021-website"&gt;
  &lt;/a&gt;
  For even more details on CodeLand, please visit &lt;a href="https://community.codenewbie.org/codenewbie/codeland-is-coming-sept-23-24-2021-238p"&gt;this post&lt;/a&gt; from &lt;a class="mentioned-user" href="https://dev.to/saronyitbarek"&gt;@saronyitbarek&lt;/a&gt;
 on CodeNewbie Community and the &lt;a href="https://codelandconf.com"&gt;CodeLand 2021 website&lt;/a&gt;.
&lt;/h2&gt;

</description>
      <category>codeland</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>meta</category>
    </item>
    <item>
      <title>FrontEnd Development Road Map</title>
      <author>shobika</author>
      <pubDate>Wed, 16 Jun 2021 16:55:41 +0000</pubDate>
      <link>https://dev.to/shobilav/frontend-development-road-map-1ao2</link>
      <guid>https://dev.to/shobilav/frontend-development-road-map-1ao2</guid>
      <description>&lt;p&gt;Hey guys!!! Hope everyone are safe and coding. Will take you to the frontend development journey. Let's grow together🤗&lt;br&gt;
Will be posting the detailed ideas on each topic one by one every week....hope you will love the content😍 Keep reading...&lt;/p&gt;

&lt;p&gt;Internet&lt;br&gt;
HTML&lt;br&gt;
CSS&lt;br&gt;
JavaScript&lt;br&gt;
Version control Systems&lt;br&gt;
Web Security&lt;br&gt;
Package Manager&lt;br&gt;
CSS Architecture&lt;br&gt;
CSS Preprocessors&lt;br&gt;
Build Tools&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Task Runner&lt;/li&gt;
&lt;li&gt;Linters and formatters&lt;/li&gt;
&lt;li&gt;Module bundlers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Front End Frameworks&lt;br&gt;
Web components&lt;br&gt;
Modern CSS &lt;br&gt;
CSS Frameworks&lt;br&gt;
Testing the apps&lt;br&gt;
Progressive Web Apps&lt;br&gt;
Server Side Rendering&lt;br&gt;
GraphQL&lt;br&gt;
Static Site Generator&lt;br&gt;
Web assembly&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>webmonetization</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>How to Create an AWS EC2 VM</title>
      <author>mydeveloperplanet</author>
      <pubDate>Wed, 16 Jun 2021 16:48:44 +0000</pubDate>
      <link>https://dev.to/mydeveloperplanet/how-to-create-an-aws-ec2-vm-aoc</link>
      <guid>https://dev.to/mydeveloperplanet/how-to-create-an-aws-ec2-vm-aoc</guid>
      <description>&lt;p&gt;In this post, you will learn how easy it is to create a virtual machine with AWS EC2. You will learn the basics and as an example, you will deploy and run a basic Spring Boot application. Enjoy!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-introduction"&gt;
  &lt;/a&gt;
  1. Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/ec2/"&gt;Amazon&lt;/a&gt; EC2 (Elastic Compute Cloud) is one of the most popular AWS services. It allows you to create cloud computing instances in no time. You have the choice out of predefined templates (AMI) for several Operating Systems. &lt;a href="https://aws.amazon.com/ec2/pricing/"&gt;Pricing&lt;/a&gt; is dependent on what kind of purpose the instance needs to serve. Whether you want to have an instance continuously running, or only at a scheduled interval, or you need bare metal, or a dedicated instance, etc. Many options are available for different purposes. Besides that, a lot of different &lt;a href="https://aws.amazon.com/ec2/instance-types/"&gt;configurations&lt;/a&gt; are available to choose from. You will need to choose the right one for your application. In the Free Tier, you only use the micro instance. All of this information is available at the Amazon website and therefore only links to these pages are provided. The offerings may change and you should refer to the Amazon website for the details.&lt;/p&gt;

&lt;p&gt;As a prerequisite for following this blog yourself, you will need to create an AWS account. You can create a Free Tier AWS account, which will allow you to experiment with most of the AWS services for free. See a &lt;a href="https://mydeveloperplanet.com/2020/10/21/how-to-deploy-a-spring-boot-app-to-aws-elastic-beanstalk/"&gt;previous blog&lt;/a&gt; how to setup the free account.&lt;/p&gt;

&lt;p&gt;The sources used in this blog are available at &lt;a href="https://github.com/mydeveloperplanet/MyAWSPlanet"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-your-first-ec2-instance"&gt;
  &lt;/a&gt;
  2. Your First EC2 Instance
&lt;/h2&gt;

&lt;p&gt;Login to the &lt;strong&gt;AWS Management Console&lt;/strong&gt; and search for the &lt;strong&gt;EC2&lt;/strong&gt; service. This will bring you to the &lt;strong&gt;EC2 Dashboard&lt;/strong&gt;. In the screenshots, the &lt;strong&gt;New EC2 Experience&lt;/strong&gt; is enabled, so it might look a bit different on your side when you did not enable this new layout.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L4XnbEFA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0q52n99gn9890ztmhdzc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L4XnbEFA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0q52n99gn9890ztmhdzc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the left menu, click on &lt;strong&gt;Instances&lt;/strong&gt; and in order to start creating your first EC2 instance, click the &lt;strong&gt;Launch Instances&lt;/strong&gt; button at the top right corner.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fo2GjGYU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr7ys7du695uyt7um1nn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fo2GjGYU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr7ys7du695uyt7um1nn.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A wizard is started which will guide you through the creation process. In step 1, you need to select an AMI. You choose the &lt;strong&gt;Amazon Linux 2 AMI&lt;/strong&gt; which is available in the Free Tier by clicking the &lt;strong&gt;Select&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gn5gQJ77--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/82vwmuof9ql7j7ft6a15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gn5gQJ77--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/82vwmuof9ql7j7ft6a15.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In step 2, you need to choose the &lt;strong&gt;Instance Type&lt;/strong&gt; dependent on your needs concerning CPU, memory, storage and networking capacity. Being in the Free Tier, the choice is easy because there is only one Instance Type available. Choose the &lt;strong&gt;t2.micro&lt;/strong&gt; and click the &lt;strong&gt;Next: Configure Instance Details&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mHteT4Sv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbmmoekdnxywjrh2xscg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mHteT4Sv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbmmoekdnxywjrh2xscg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In step 3, you have the possibility to configure more items for your instance, e.g. the number of instances you want to create. Leave the defaults and click the &lt;strong&gt;Next: Add Storage&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CotNR74---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5h78lvmfkr5pbeo95btw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CotNR74---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5h78lvmfkr5pbeo95btw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In step 4, you can configure the storage for your EC2 instance. Leave the defaults and click the &lt;strong&gt;Next: Add Tags&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Eem0z4ve--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1oz4wkfyqfa7d2vdfoav.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eem0z4ve--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1oz4wkfyqfa7d2vdfoav.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In step 5, you can add tags. You can add for example a &lt;strong&gt;Name&lt;/strong&gt; tag by clicking the &lt;strong&gt;click to add a Name tag&lt;/strong&gt; link.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VsnLyhc4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fsjd8m18n9pukervwyl4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VsnLyhc4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fsjd8m18n9pukervwyl4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Name it &lt;strong&gt;MyFirstEC2Instance&lt;/strong&gt; and click the &lt;strong&gt;Next: Configure Security Group&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NkjRaUQl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cs2i6i8hsm98bu66ydjg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NkjRaUQl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cs2i6i8hsm98bu66ydjg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In step 6, you need to select or configure a Security Group. A Security Group is like a firewall in front of your EC2 instance. You have several options here, it is advised to only allow the traffic which is absolutely necessary. In this case, you will create a new Security Group &lt;strong&gt;MyFirstSG&lt;/strong&gt; for SSH access from your machine. Go to &lt;a href="https://www.whatismyip.com/"&gt;WhatIsMyIP.com&lt;/a&gt; and fill the IPv4 address followed with &lt;strong&gt;/32&lt;/strong&gt; as a source instead of &lt;strong&gt;0.0.0.0/0&lt;/strong&gt;. Click the &lt;strong&gt;Review and Launch&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cgmeGhbk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9h00ww72jyuni73zsb7l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cgmeGhbk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9h00ww72jyuni73zsb7l.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, in step 7, you can review everything and when this is ok, you click the &lt;strong&gt;Launch&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X1pfuCGv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xt2a9limv3lcyqjhqoqu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X1pfuCGv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xt2a9limv3lcyqjhqoqu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before being launched, a popup window is show where we need to select an existing key pair or create a new one. This is necessary for accessing the instance by means of a SSH key. Create a new key pair &lt;strong&gt;EC2Blog&lt;/strong&gt; and download the key pair. A &lt;strong&gt;EC2Blog.pem&lt;/strong&gt; file is downloaded to your machine. Finally, click the &lt;strong&gt;Launch Instances&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FFjiqc__--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/61mmzm2w0taq125n4n3i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FFjiqc__--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/61mmzm2w0taq125n4n3i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;Launch Status&lt;/strong&gt; page is displayed, click the &lt;strong&gt;View Instances&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9hDSgd4T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/923karamls3t62qholyp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9hDSgd4T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/923karamls3t62qholyp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If everything went OK, you first EC2 instance is running now.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--50pyOgvF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrvf5bamg4m2kf0if0u3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--50pyOgvF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrvf5bamg4m2kf0if0u3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-ssh-to-instance"&gt;
  &lt;/a&gt;
  3. SSH to Instance
&lt;/h2&gt;

&lt;p&gt;Now that the EC2 instance is running, you can actually do something with it. Let’s see if you can SSH to the EC2 instance from your machine (note: the instructions are written for Linux). Open a terminal window from the directory where you saved the key pair &lt;code&gt;.pem&lt;/code&gt; file. In the EC2 AWS console, you need the &lt;strong&gt;Public IPv4 address&lt;/strong&gt; of your instance which is located at the right top corner of the &lt;strong&gt;Details&lt;/strong&gt; page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Px6oTgQp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6dwyi415sm5q5v9f12mb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Px6oTgQp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6dwyi415sm5q5v9f12mb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the terminal, you enter the following command with your public IP of course.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh &lt;span class="nt"&gt;-i&lt;/span&gt; EC2Blog.pem ec2-user@3.66.155.101
The authenticity of host &lt;span class="s1"&gt;'3.66.155.101 (3.66.155.101)'&lt;/span&gt; can&lt;span class="s1"&gt;'t be established.
ECDSA key fingerprint is SHA256:/5EorRulTwyFKUJLfTvNPmUlHS9Mt1eTffPD4+9tcwU.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '&lt;/span&gt;3.66.155.101&lt;span class="s1"&gt;' (ECDSA) to the list of known hosts.
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions 0664 for '&lt;/span&gt;EC2Blog.pem&lt;span class="s1"&gt;' are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
Load key "EC2Blog.pem": bad permissions
ec2-user@3.66.155.101: Permission denied (publickey,gssapi-keyex,gssapi-with-mic).
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OK, it seems that something is wrong with the permissions of the &lt;code&gt;.pem&lt;/code&gt; file. Let’s check the file permissions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ll EC2Blog.pem 
&lt;span class="nt"&gt;-rw-rw-r--&lt;/span&gt; EC2Blog.pem
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The permissions are indeed a bit too open, so let’s first fix this issue.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;chmod &lt;/span&gt;400 EC2Blog.pem
&lt;span class="nv"&gt;$ &lt;/span&gt;ll EC2Blog.pem 
&lt;span class="nt"&gt;-r--------&lt;/span&gt; EC2Blog.pem
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Retry the SSH command and now it is successful and you can enter commands at your EC2 instance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh &lt;span class="nt"&gt;-i&lt;/span&gt; EC2Blog.pem ec2-user@3.66.155.101

       __|  __|_  &lt;span class="o"&gt;)&lt;/span&gt;
       _|  &lt;span class="o"&gt;(&lt;/span&gt;     /   Amazon Linux 2 AMI
      ___|&lt;span class="se"&gt;\_&lt;/span&gt;__|___|

https://aws.amazon.com/amazon-linux-2/
&lt;span class="o"&gt;[&lt;/span&gt;ec2-user@ip-172-31-44-246 ~]&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another way to connect via SSH is via the EC2 console. Select the instance and click the &lt;strong&gt;Connect&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cc4pl6-x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9wc53ya9slbjpu2zr03.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cc4pl6-x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9wc53ya9slbjpu2zr03.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Leave the defaults and click the &lt;strong&gt;Connect&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_U-mVNkA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6q4bzddouy8qjrcy67rx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_U-mVNkA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6q4bzddouy8qjrcy67rx.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will, however, not be able to connect because you restricted SSH access to the IP address of your machine only. Therefore, you need to allow the IP address where Instance Connect will connect from. Go to the &lt;a href="https://ip-ranges.amazonaws.com/ip-ranges.json"&gt;page&lt;/a&gt; where the Amazon IP ranges are defined and search for &lt;strong&gt;EC2_INSTANCE_CONNECT&lt;/strong&gt; for the region you are in. The IP below is for the &lt;strong&gt;eu-central-1&lt;/strong&gt; (Frankfurt) region.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"ip_prefix"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"3.120.181.40/29"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"region"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"eu-central-1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"service"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"EC2_INSTANCE_CONNECT"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"network_border_group"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"eu-central-1"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Navigate to the &lt;strong&gt;Security Group&lt;/strong&gt; section (left menu), select the Security Group, the &lt;strong&gt;Inbound rules&lt;/strong&gt; tab and click the &lt;strong&gt;Edit inbound rules&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ishYoxoJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/82fu1saaac46vduqlrrz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ishYoxoJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/82fu1saaac46vduqlrrz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add a SSH inbound rule for the IP address and click the &lt;strong&gt;Save rules&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GpdJQBvq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbyg2n0wh85t7wk9wop1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GpdJQBvq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbyg2n0wh85t7wk9wop1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Retry connecting via Connect Instance and you will have access to your EC2 instance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_66nbipY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ksqqsz4ub108exhaqon.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_66nbipY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ksqqsz4ub108exhaqon.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-install-java"&gt;
  &lt;/a&gt;
  4. Install Java
&lt;/h2&gt;

&lt;p&gt;The goal is to install a Java Spring Boot application to the EC2 instance. First thing to do, is to install Java. The &lt;a href="https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/amazon-linux-install.html"&gt;installation instructions&lt;/a&gt; can be found at the Amazon website. Execute the following command in the SSH terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;yum &lt;span class="nb"&gt;install &lt;/span&gt;java-11-amazon-corretto-headless
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Verify whether Java is available.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;java &lt;span class="nt"&gt;--version&lt;/span&gt;
openjdk 11.0.11 2021-04-20 LTS
OpenJDK Runtime Environment Corretto-11.0.11.9.1 &lt;span class="o"&gt;(&lt;/span&gt;build 11.0.11+9-LTS&lt;span class="o"&gt;)&lt;/span&gt;
OpenJDK 64-Bit Server VM Corretto-11.0.11.9.1 &lt;span class="o"&gt;(&lt;/span&gt;build 11.0.11+9-LTS, mixed mode&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Problem now is that when you want to launch similar instances (right-click the instance &lt;strong&gt;Image and template – Launch more like this&lt;/strong&gt;), you will need to install Java for each new instance. This can be solved by adding user data during the instance creation.&lt;/p&gt;

&lt;p&gt;Exit the terminal and terminate the EC2 (select the instance, right-click and choose &lt;strong&gt;Terminate instance&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;Create the instance again, just like you did before. In step 3, however, you scroll down to the bottom of the page and add &lt;strong&gt;User data&lt;/strong&gt; with installation of java in the &lt;strong&gt;Advanced Details&lt;/strong&gt; section. The &lt;strong&gt;User data&lt;/strong&gt; will be executed as root, therefore there is no need to add &lt;code&gt;sudo&lt;/code&gt; before the command. Also, add the argument &lt;code&gt;-y&lt;/code&gt; to the &lt;code&gt;yum&lt;/code&gt; command, otherwise the installation will fail because the user will be prompted to continue the installation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CB3XzvUY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hhcoghicbekxlrxlsgkc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CB3XzvUY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hhcoghicbekxlrxlsgkc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In step 6, you can select the existing Security Group &lt;strong&gt;MyFirstSG&lt;/strong&gt;. There is also no need to create a new key pair, just choose the existing one &lt;strong&gt;EC2Blog&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;When the instance has been started, connect via SSH to the instance. Beware that the public IP has changed!&lt;/p&gt;

&lt;p&gt;Verify whether Java is installed. When something went wrong, checkout the file &lt;code&gt;cloud-init-output.log&lt;/code&gt;. This will give you more information about any errors occurred during startup.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo cat&lt;/span&gt; /var/log/cloud-init-output.log
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-create-and-install-spring-boot-app"&gt;
  &lt;/a&gt;
  5. Create and Install Spring Boot App
&lt;/h2&gt;

&lt;p&gt;As &lt;a href="https://github.com/mydeveloperplanet/MyAWSPlanet"&gt;Spring Boot Application&lt;/a&gt;, you can use one with a simple Hello World endpoint.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@RestController&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HelloController&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="nd"&gt;@GetMapping&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/hello"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Hello AWS!"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;InetAddress&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;InetAddress&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getLocalHost&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;" From host: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;UnknownHostException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;printStackTrace&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the following command in order to generate the jar file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mvn clean verify
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the application locally.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;java &lt;span class="nt"&gt;-jar&lt;/span&gt; MyAWSPlanet-0.0.1-SNAPSHOT.jar
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Verify whether you can access the URL.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl http://localhost:8080/hello
Hello AWS! From host: &amp;lt;computer name&amp;gt;/127.0.1.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Copy the jar file to the remote EC2 instance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;scp &lt;span class="nt"&gt;-i&lt;/span&gt; EC2Blog.pem MyAWSPlanet-0.0.1-SNAPSHOT.jar ec2-user@18.194.164.14:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Via the SSH connection, start the Spring Boot application.&lt;/p&gt;

&lt;p&gt;The URL will not be accessible yet, therefore you need to add an extra inbound rule to the Security Group. Since the application is running at port 8080, you create a custom TCP rule for port 8080 which can be accessed from anywhere.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2-tLzqYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gzo8idivl6rxsgx0zdac.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2-tLzqYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gzo8idivl6rxsgx0zdac.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Verify whether you can access the URL. You need to use the public IP address of your EC2 instance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl http://18.194.164.14:8080/hello
Hello AWS! From host: ip-172-31-36-30.eu-central-1.compute.internal/172.31.36.30
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Success! Do not forget to terminate the EC2 instance after you are done experimenting with it and to delete the Security Group if you do not need it anymore.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-conclusion"&gt;
  &lt;/a&gt;
  6. Conclusion
&lt;/h2&gt;

&lt;p&gt;In this post, you learned how to create and configure an EC2 instance at Amazon. This is amazingly easy to do. You also learned how to access the remote instance from your laptop and how to install Java on it. Finally, you successfully started a Spring Boot application and accessed it from your machine. All of this has been executed in the Free Tier, so it did not cost you anything!&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>cloud</category>
      <category>java</category>
      <category>aws</category>
    </item>
    <item>
      <title>How to Install Most Interactive Shell On A Linux Machine</title>
      <author>Nirupamvas</author>
      <pubDate>Wed, 16 Jun 2021 16:34:47 +0000</pubDate>
      <link>https://dev.to/nirupamvas/how-to-install-most-interactive-shell-on-a-linux-machine-36ko</link>
      <guid>https://dev.to/nirupamvas/how-to-install-most-interactive-shell-on-a-linux-machine-36ko</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1LGfAKnp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4964vu4e57xwyer2xet.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1LGfAKnp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4964vu4e57xwyer2xet.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello Guys, I am Nirupamvas and I am back again with an other awesome Linux tutorial. So let's get started.&lt;/p&gt;

&lt;p&gt;Before getting into it, let's understand some of the things &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-shell"&gt;
  &lt;/a&gt;
  What Is Shell??
&lt;/h3&gt;

&lt;p&gt;A shell is an interface to the underlying operating system. It allows you to execute operations using text and commands, and it provides users with advanced features like being able to create scripts.&lt;br&gt;
Unix Shell is a powerful tool that allows programmers to accomplish complex tasks with just a few words. There are a lot of widely available Shells such as Bourne Shell, C Shell, etc.&lt;/p&gt;

&lt;p&gt;So, everytime you want to execute a command you need to type entire command, I think this is one messy thing we need to do each and every time. To boost productivity and to save time for our lazy squad we have something called Fish. So let's see what is it all about.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-is-fish"&gt;
  &lt;/a&gt;
  What is FISH?
&lt;/h3&gt;

&lt;p&gt;Fish, or the “Friendly Interactive Shell,” is the most user-friendly and interactive shell, in my opinion.&lt;br&gt;
It is much more customizable than Zsh and Bash. It has a ton of cool features like consistent syntax, nice tab completion and syntax highlighting, is easy to pick up and use, and has excellent runtime help.&lt;br&gt;
You can change the theme and color of your shell just by using a framework called Oh My Fish. Unlike the aforementioned shells, fish is not POSIX compliant, but it also doesn’t intend to be.&lt;br&gt;
You can run Bash scripts in both Zsh and fish by adding the following shebang line to the first line of your Bash file.&lt;/p&gt;

&lt;p&gt;Let's start our installation,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Step 1 : Download Fish&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get install fish
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Step 2 : Entering into Fish&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can now enter the Fish shell simply by typing&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fish
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;step 3 : Setting Fish as your default shell&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can set Fish as your default shell instead of Bash:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;chsh -s /usr/bin/fish
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This way, Fish will be used automatically every time you log in. Test this setting by exiting SSH, then logging back in. Upon logging in, you will be presented with a Fish shell.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Step 4: Creating a config file&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to be able to change the properties of the Fish shell, we first need to create a config file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir -p ~/.config/fish
vim ~/.config/fish/config.fish
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Step 5: Removing the default message&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By default, Fish will show this message when you enter the shell:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Welcome to fish, the friendly interactive shell
Type help for instructions on how to use fish
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can remove this message by adding the following to the ~/.config/fish/config.fish file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;set -g -x fish_greeting ''
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will pop up either vim or nano, in any case type 'I' and start editing and to save type&lt;br&gt;
&lt;code&gt;ESC then :wq then Hit enter&lt;/code&gt;&lt;br&gt;
This will remove the message and rather set it to a blank value. You can add something such as "Welcome to Terminal!" by entering a value instead of leaving it blank:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;set -g -x fish_greeting 'Welcome to Terminal!'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you do not like in any case what you do is, simply uninstall, so how to do that, see below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Step 6: Switching back to Bash&lt;/strong&gt;
If you would like to use Bash again, simply type:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to permanently use Bash as your default shell, type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;chsh -s /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;BONUS&lt;br&gt;
 This will not only work on Virtual machines or Fully installed linux but also in Windows Subsystem for Linux.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's it, now you are good to go!! Hope you enjoy 😎.&lt;/p&gt;

</description>
      <category>ubuntu</category>
      <category>linux</category>
    </item>
    <item>
      <title>16 Beautiful Color Palettes 🎨 for Your Projects 👨‍🎨</title>
      <author>Roden</author>
      <pubDate>Wed, 16 Jun 2021 16:32:13 +0000</pubDate>
      <link>https://dev.to/kerthin/16-beautiful-color-palettes-for-your-projects-a72</link>
      <guid>https://dev.to/kerthin/16-beautiful-color-palettes-for-your-projects-a72</guid>
      <description>&lt;h1&gt;Introduction&lt;/h1&gt;

&lt;p&gt;When developing websites, the first question for developers is about creating a design. But due to their inexperience, many novice developers who do not even know the simple rules of &lt;code&gt;coloristics&lt;/code&gt;, begin to use in their works absolutely any colors that they just liked. At the same time, without paying absolutely no attention to whether these colors are combined at all or not. And as a result, a good project can be ruined due to the lack of minimal taste in the developer, who simply went too far with the color scheme.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cze44DI_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ya1otwlqa8dtl8lprti.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cze44DI_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ya1otwlqa8dtl8lprti.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I was the same myself, until eventually I gained a little experience in selecting colors for projects. I also decided to make a list of my favorite palettes, which I often use when developing my projects. Of course, I understand that not everyone can like them, &lt;code&gt;but there are no friends for the taste and color.&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Different strokes for different folks.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;CodePen&lt;/h1&gt;

&lt;p&gt;I decided to put my palettes on Codepen to make it easier for you to use them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m9pR3_lZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/49dz7ihstsso9ev2pmtp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m9pR3_lZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/49dz7ihstsso9ev2pmtp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/Astap/embed/abJXNVj?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;The End&lt;/h1&gt;

&lt;p&gt;Friends, thank you for your time. See you in the future. And don't forget to color your projects beautifully.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/26ufjTvmGrdtrCqJi/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/26ufjTvmGrdtrCqJi/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>codepen</category>
      <category>css</category>
      <category>ux</category>
    </item>
    <item>
      <title>Styled components cheat sheet</title>
      <author>Keerthi</author>
      <pubDate>Wed, 16 Jun 2021 16:17:59 +0000</pubDate>
      <link>https://dev.to/keefdrive/styled-components-cheat-sheet-58nd</link>
      <guid>https://dev.to/keefdrive/styled-components-cheat-sheet-58nd</guid>
      <description>&lt;p&gt;The use of Styled components in React.js app development has become quiet popular in the last few years, its popularity is mainly due to the fact that it provides a better developer experience when it comes to writing styles for your app. Traditionally you would have one long css style sheet with all your styling centralized in one place. The  problems that you commonly face are CSS name clashes and styling problems due to specificity issues. As well as styled components, many other solutions address these problems particularly BEM, sass, CSS modules, and they all have their pros and cons. This article is not going to discuss which is best to use but rather provide a cheat sheet for styled components. There's also a video that I made on this as well.&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/A35oMQCAtBI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;4 things that makes me want to use styled components in the future are:&lt;/p&gt;

&lt;p&gt;1] Scope level styles, ie component and styles are grouped together, so you dont have to do much searching around finding the style that is breaking your UI.&lt;br&gt;
2] Use of variables and ability to inject props into your components. Yes its dynamic and can use programming logic!&lt;br&gt;
3] No need to waste time thinking up unique class names.&lt;br&gt;
4} Easy to learn.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#lets-dive-in-and-look-at-your-first-styled-component"&gt;
  &lt;/a&gt;
  Lets dive in and look at your first styled component
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s2vCzSrp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sb5lpagl2wa273f2snvp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s2vCzSrp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sb5lpagl2wa273f2snvp.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see from the three steps shown above, its quiet easy. You might find the declaration a bit odd because we are calling the styled component function with back ticks.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const Button = styled.button`color:red;`&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;but this is really same as making a normal function call and passing an array:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const Button = styled.button([`color:red;`])&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Calling function without the brackets and putting your arguments between back ticks is called tagged template literals, this is a Javascript feature. When tagged template literals are interpreted, there will always be one argument that will be of type array.&lt;/p&gt;

&lt;p&gt;To see some examples and &lt;a href="https://wesbos.com/tagged-template-literals"&gt;read more about tagged template literals, go to Wes Bos article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From Wes Bos's article you learn that you can inject variables into tagged template literals. So in styled components you can do the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;primary_color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="s2"&gt;`color:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;primary_color&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;`&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is what gives styled components super powers and you can do all sorts of tricks with it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#heres-a-cheat-sheet-to-get-you-started"&gt;
  &lt;/a&gt;
  Heres a cheat sheet to get you started
&lt;/h2&gt;

&lt;p&gt;Here are some code snippets that will help you get started and make the most of styled components. The code examples in this cheat sheet assumes you have created a basic app using npx create create-react-app.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-install"&gt;
  &lt;/a&gt;
  1] install
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install styled-components
yarn add styled-components
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#2-import-into-your-scripts"&gt;
  &lt;/a&gt;
  2] Import into your scripts
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// then, just import it into your script like:&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#3-basic-styling-of-elements-ie-h1h2divinputspan-etc"&gt;
  &lt;/a&gt;
  3] Basic styling of elements ie h1,h2,div,input,span etc
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Declare wrapper for a h2 element with styling like this&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Headline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="s2"&gt;`
  color: black;
  border-bottom:1px solid black;
`&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//Use Headline wrapper component in your app &lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Headline&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      The Headline goes here
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Headline&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are methods for all html elements so you can style a &lt;code&gt;&amp;lt;diV&amp;gt;&lt;/code&gt; by using &lt;code&gt;styled.div&lt;/code&gt; , or style &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; by using &lt;code&gt;styled.input&lt;/code&gt; &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-include-pseudoclasses-like-hover-focus-active-etc-by-prefixing-a-amp-like-raw-amphover-endraw-"&gt;
  &lt;/a&gt;
  4] Include Pseudo-classes like :hover, :focus, :active etc, by pre-fixing a '&amp;amp;'. Like &lt;code&gt;&amp;amp;:hover {.....}&lt;/code&gt;
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="s2"&gt;`
        width:100px;
        color:white;
        background-color: green;

        //Add hover styling
        &amp;amp;:hover {
            background-color:gray;
        }

    };`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#5-include-media-queries"&gt;
  &lt;/a&gt;
  5] Include media queries.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Wrapper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="s2"&gt;`
    width:50vw;

    //Make it full width on smaller screens 
    @media screen and (max-width: 800px) { //Make full length on smaller screens
        background-color: lightgray;
        width:100vw;

    }
    `&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#6-extending-styles-you-can-use-a-base-style-then-extend-that-with-new-style-rules"&gt;
  &lt;/a&gt;
  6] Extending styles - You can use a base style, then extend that with new style rules
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Base style for heading &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Headline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="s2"&gt;`
  border-bottom:2px solid gray;
  color: blue;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//Extend base style to overide color&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;HeadlineGreen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Headline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;`
  color: green;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;

      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Headline&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Standard Blue headline
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Headline&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;HeadlineGreen&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Extended green headline 
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;HeadlineGreen&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you look carefully at HeadlineGreen declaration you would see that we are passing Headline as an argument ie&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;HeadlineGreen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Headline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;`.....`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#7-you-can-still-use-classes-and-write-styles-for-selectors-like-normal-css-styling"&gt;
  &lt;/a&gt;
  7] You can still use classes and write styles for selectors like normal css styling
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;
&lt;span class="c1"&gt;//Style everything inside the wrapper with css selectors&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Wrapper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="s2"&gt;`
  width:100%;

  .big-heading {
      border-bottom:2px solid blue;
      color: blue;
  }
  button.primary {
    width:100px;
    height:50px;
    background-color:green;
    color:white;
  }
`&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Wrapper&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;      
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'big-heading'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Standard Blue headline
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'primary'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        A plain Button
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Wrapper&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#8-you-can-pass-props-to-your-styled-component"&gt;
  &lt;/a&gt;
  8] You can pass props to your styled component
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Headline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="s2"&gt;`
  color: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
`&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* We are passing color as a prop, we also set its value to pink*/&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Headline&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"pink"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Standard Blue headline
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Headline&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code we are setting the color of Headline dynamically, depending on what is passed as props for the color attribute. You can access props by writing a fragment of code like: &lt;code&gt;${props =&amp;gt; props.color}&lt;/code&gt; and in the JSX we set it like &lt;code&gt;&amp;lt;Headline color="pink"&amp;gt;.....&amp;lt;/Headline&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#9-how-to-apply-global-styles-that-target-raw-ltbodygt-endraw-and-raw-lthtmlgt-endraw-or-where-to-put-your-reset-styles"&gt;
  &lt;/a&gt;
  9] How to apply global styles that target &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; or  where to put your reset styles.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nx"&gt;createGlobalStyle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Remember to import createGlobalStyle as above&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;GlobalStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createGlobalStyle&lt;/span&gt;&lt;span class="s2"&gt;`
    * {
        margin: 0;
        padding: 0;
    }

    body {
        background: teal;
        font-family: Open-Sans, Helvetica, Sans-Serif;
    }
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/*Place the GlobalStyle tag at the very top of your app component tree.*}
      &amp;lt;GlobalStyle /&amp;gt;
      &amp;lt;h1&amp;gt;
        This is a landing page
      &amp;lt;/h1&amp;gt;
    &amp;lt;/&amp;gt;
  );
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remember to import createGlobalStyle from styled-components like this:&lt;code&gt;import styled,{createGlobalStyle} from 'styled-components';&lt;/code&gt;. You can place &lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Best alternative for solar movies </title>
      <author>Inlarn_DotCom</author>
      <pubDate>Wed, 16 Jun 2021 15:59:54 +0000</pubDate>
      <link>https://dev.to/inlarn/best-alternative-for-solar-movies-451h</link>
      <guid>https://dev.to/inlarn/best-alternative-for-solar-movies-451h</guid>
      <description>&lt;p&gt;&lt;a href="https://inlarn.com/putlocker-similar-websites-to-watch-high-quality-hd-movies-for-free/"&gt;https://inlarn.com/putlocker-similar-websites-to-watch-high-quality-hd-movies-for-free/&lt;/a&gt; click here&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
