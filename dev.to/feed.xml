<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to Load More Data on Demand in Flutter Event Calendar</title>
      <author>Techguy</author>
      <pubDate>Tue, 10 Aug 2021 03:39:11 +0000</pubDate>
      <link>https://dev.to/techguy/how-to-load-more-data-on-demand-in-flutter-event-calendar-5h0m</link>
      <guid>https://dev.to/techguy/how-to-load-more-data-on-demand-in-flutter-event-calendar-5h0m</guid>
      <description>&lt;p&gt;Learn how to load more data on-demand in Syncfusion &lt;a href="https://www.syncfusion.com/flutter-widgets/flutter-calendar"&gt;Flutter Event Calendar&lt;/a&gt; widget easily. This video explains how to use the SfCalendar’s loadMoreWidgetBuilder property and how to override the handleLoadMore method of CalendarDataSource abstract class, to perform load more data on demand in the SfCalendar widget.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/yxiNLruP7CI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
      <category>webdev</category>
      <category>mobile</category>
    </item>
    <item>
      <title>Vue 3.2 Released!</title>
      <author>Eugene Kopich</author>
      <pubDate>Tue, 10 Aug 2021 03:26:05 +0000</pubDate>
      <link>https://dev.to/web2033/vue-3-2-released-1n8b</link>
      <guid>https://dev.to/web2033/vue-3-2-released-1n8b</guid>
      <description>&lt;p&gt;We are excited to announce the release of Vue.js 3.2 "Quintessential Quintuplets"! This release includes many significant new features and performance improvements, and contains no breaking changes.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#new-sfc-features"&gt;
  &lt;/a&gt;
  New SFC Features
&lt;/h2&gt;

&lt;p&gt;Two new features for Single File Components (SFCs, aka &lt;code&gt;.vue&lt;/code&gt; files) have graduated from experimental status and are now considered stable:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;script setup&amp;gt;&lt;/code&gt; is a compile-time syntactic sugar that greatly improves the ergonomics when using Composition API inside SFCs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;style&amp;gt; v-bind&lt;/code&gt; enables component state-driven dynamic CSS values in SFC &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is an example component using these two new features together:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt; &lt;span class="na"&gt;setup&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click=&lt;/span&gt;&lt;span class="s"&gt;"color = color === 'red' ? 'green' : 'red'"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Color is: &lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt; &lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;v-bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Try it out in the &lt;a href="https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlZiB9IGZyb20gJ3Z1ZSdcblxuY29uc3QgY29sb3IgPSByZWYoJ3JlZCcpXG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8YnV0dG9uIEBjbGljaz1cImNvbG9yID0gY29sb3IgPT09ICdyZWQnID8gJ2dyZWVuJyA6ICdyZWQnXCI+XG4gICAgQ29sb3IgaXM6IHt7IGNvbG9yIH19XG4gIDwvYnV0dG9uPlxuPC90ZW1wbGF0ZT5cblxuPHN0eWxlIHNjb3BlZD5cbmJ1dHRvbiB7XG4gIGNvbG9yOiB2LWJpbmQoY29sb3IpO1xufVxuPC9zdHlsZT4ifQ=="&gt;SFC Playground&lt;/a&gt;, or read their respective documentations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://v3.vuejs.org/api/sfc-script-setup.html"&gt;&lt;code&gt;&amp;lt;script setup&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://v3.vuejs.org/api/sfc-style.html#state-driven-dynamic-css"&gt;&lt;code&gt;&amp;lt;style&amp;gt; v-bind&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Building on top of &lt;code&gt;&amp;lt;script setup&amp;gt;&lt;/code&gt;, we also have a new RFC for improving the ergonomics of ref usage with compiler-enabled sugar - please share your feedback &lt;a href="https://github.com/vuejs/rfcs/discussions/369"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-components"&gt;
  &lt;/a&gt;
  Web Components
&lt;/h2&gt;

&lt;p&gt;Vue 3.2 introduces a new &lt;code&gt;defineCustomElement&lt;/code&gt; method for easily creating native &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements"&gt;custom elements&lt;/a&gt; using Vue component APIs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineCustomElement&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyVueElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;defineCustomElement&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="c1"&gt;// normal Vue component options here&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// Register the custom element.&lt;/span&gt;
&lt;span class="c1"&gt;// After registration, all `&amp;lt;my-vue-element&amp;gt;` tags&lt;/span&gt;
&lt;span class="c1"&gt;// on the page will be upgraded.&lt;/span&gt;
&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-vue-element&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;MyVueElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This API allows develpers to create Vue-powered UI component libraries that can be used with any framework, or no framework at all. We have also added a new section in our docs on &lt;a href="https://v3.vuejs.org/guide/web-components.html"&gt;consuming and creating Web Components in Vue&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#performance-improvements"&gt;
  &lt;/a&gt;
  Performance Improvements
&lt;/h2&gt;

&lt;p&gt;3.2 includes some significant performance improvements to Vue's reactivity system, thanks to the great work by &lt;a href="https://github.com/basvanmeurs"&gt;@basvanmeurs&lt;/a&gt;. Specifically:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vuejs/vue-next/pull/3995"&gt;More efficient ref implementation (~260% faster read / ~50% faster write)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vuejs/vue-next/pull/4017"&gt;~40% faster dependency tracking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vuejs/vue-next/pull/4001"&gt;~17% less memory usage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The template compiler also received a number of improvements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vuejs/vue-next/pull/3334"&gt;~200% faster creation of plain element VNodes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;More aggressive constant hoisting [&lt;a href="https://github.com/vuejs/vue-next/commit/b7ea7c148552874e8bce399eec9fbe565efa2f4d"&gt;1&lt;/a&gt;] [&lt;a href="https://github.com/vuejs/vue-next/commit/02339b67d8c6fab6ee701a7c4f2773139ed007f5"&gt;2&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally, there is a new &lt;a href="https://v3.vuejs.org/api/directives.html#v-memo"&gt;&lt;code&gt;v-memo&lt;/code&gt; directive&lt;/a&gt; that provides the ability to memoize part of the template tree. A &lt;code&gt;v-memo&lt;/code&gt; hit allows Vue to skip not only the Virtual DOM diffing, but the creation of new VNodes altogether. Although rarely needed, it provides an escape hatch to squeeze out maximum performance in certain scenarios, for example large &lt;code&gt;v-for&lt;/code&gt; lists.&lt;/p&gt;

&lt;p&gt;The usage of &lt;code&gt;v-memo&lt;/code&gt;, which is a one-line addition, places Vue among the fastest mainstream frameworks in &lt;a href="https://github.com/krausest/js-framework-benchmark"&gt;js-framework-benchmark&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iOUlR117--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.vuejs.org/bench.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iOUlR117--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.vuejs.org/bench.png" alt="benchmark"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#serverside-rendering"&gt;
  &lt;/a&gt;
  Server-side Rendering
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;@vue/server-renderer&lt;/code&gt; package in 3.2 now ships an ES module build which is also decoupled from Node.js built-ins. This makes it possible to bundle and leverage &lt;code&gt;@vue/server-renderer&lt;/code&gt; for use inside non-Node.js runtimes such as &lt;a href="https://developers.cloudflare.com/workers/"&gt;CloudFlare Workers&lt;/a&gt; or Service Workers.&lt;/p&gt;

&lt;p&gt;We also improved the streaming render APIs, with new methods for rendering to the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API"&gt;Web Streams API&lt;/a&gt;. Check out the &lt;a href="https://github.com/vuejs/vue-next/tree/master/packages/server-renderer#streaming-api"&gt;documentation of &lt;code&gt;@vue/server-renderer&lt;/code&gt;&lt;/a&gt; for more details.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#effect-scope-api"&gt;
  &lt;/a&gt;
  Effect Scope API
&lt;/h2&gt;

&lt;p&gt;3.2 introduces a new &lt;a href="https://v3.vuejs.org/api/effect-scope.html"&gt;Effect Scope API&lt;/a&gt; for directly controlling the disposal timing of reactive effects (computed and watchers). It makes it easier to leverage Vue's reactivity API out of a component context, and also unlocks some advanced use cases inside components.&lt;/p&gt;

&lt;p&gt;This is low-level API largely intended for library authors, so it's recommended to read the feature's &lt;a href="https://github.com/vuejs/rfcs/blob/master/active-rfcs/0041-reactivity-effect-scope.md"&gt;RFC&lt;/a&gt; for the motivation and use cases of this feature.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#changelog"&gt;
  &lt;/a&gt;
  CHANGELOG
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#compatibility-notes"&gt;
  &lt;/a&gt;
  Compatibility Notes
&lt;/h3&gt;

&lt;p&gt;This release contains no public API breakage. However, there are a few compatibility related notes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Due to usage of new runtime helpers, code generated by the template compiler in &amp;gt;= 3.2 will not be compatible with runtime &amp;lt; 3.2.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This only affects cases where there is a version mismatch between the compiler and the runtime. The most common case is libraries that ship pre-compiled Vue components. If you are a library author and ship code pre-compiled by Vue &amp;gt;= 3.2, your library will be only compatible Vue &amp;gt;= 3.2.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This release ships TypeScript typings that rely on &lt;a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-1.html#template-literal-types"&gt;Template Literal Types&lt;/a&gt; and requires TS &amp;gt;= 4.1.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#sfc"&gt;
  &lt;/a&gt;
  SFC
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;remove experimental status of &lt;code&gt;&amp;lt;script setup&amp;gt;&lt;/code&gt; (&lt;a href="https://github.com/vuejs/vue-next/commit/27104eaaf0f929a4c08b53877b495c5813157232"&gt;27104ea&lt;/a&gt;) (&lt;a href="https://v3.vuejs.org/api/sfc-script-setup.html"&gt;Docs&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/rfcs/blob/master/active-rfcs/0040-script-setup.md"&gt;RFC&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;remove experimental status for sfc &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; v-bind (&lt;a href="https://github.com/vuejs/vue-next/commit/3b38c9ae9b08c41ee3a70c8ef94fd078f05a8925"&gt;3b38c9a&lt;/a&gt;) (&lt;a href="https://v3.vuejs.org/api/sfc-style.html#state-driven-dynamic-css"&gt;Docs&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/rfcs/blob/master/active-rfcs/0043-sfc-style-variables.md"&gt;RFC&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;support non-explicit type imports in &lt;code&gt;&amp;lt;script setup&amp;gt;&lt;/code&gt; by avoiding exposing unused imports to template during dev (&lt;a href="https://github.com/vuejs/vue-next/commit/5a3ccfd9143700c7ca82d2911fe592d0658c5393"&gt;5a3ccfd&lt;/a&gt;), closes &lt;a href="https://github.com/vuejs/vue-next/issues/3183"&gt;#3183&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;support namespaced component tags when using &lt;code&gt;&amp;lt;script setup&amp;gt;&lt;/code&gt; (&lt;a href="https://github.com/vuejs/vue-next/commit/e5a4412764f6db255afe01b8a7e6e40ebf707412"&gt;e5a4412&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;(experimental)&lt;/strong&gt; new ref sugar (&lt;a href="https://github.com/vuejs/vue-next/commit/562bddb3ce76a0e98e499e199e96fa4271e5d1b4"&gt;562bddb&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/rfcs/discussions/369"&gt;RFC&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#custom-elements"&gt;
  &lt;/a&gt;
  Custom Elements
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;defineCustomElement&lt;/code&gt; (&lt;a href="https://github.com/vuejs/vue-next/commit/8610e1c9e23a4316f76fb35eebbab4ad48566fbf"&gt;8610e1c&lt;/a&gt;) (&lt;a href="https://v3.vuejs.org/guide/web-components.html"&gt;Docs&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#reactivity"&gt;
  &lt;/a&gt;
  Reactivity
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;new &lt;code&gt;effectScope&lt;/code&gt; API (&lt;a href="https://github.com/vuejs/vue-next/issues/2195"&gt;#2195&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/vue-next/commit/f5617fc3bb8fd33927b2567622ac4f8b43f9b5d5"&gt;f5617fc&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/rfcs/blob/master/active-rfcs/0041-reactivity-effect-scope.md"&gt;RFC&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;support &lt;code&gt;onTrack/onTrigger&lt;/code&gt; debug options for &lt;code&gt;computed&lt;/code&gt; (&lt;a href="https://github.com/vuejs/vue-next/commit/5cea9a1d4e846f60515ef76ebab4800228645601"&gt;5cea9a1&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#ssr"&gt;
  &lt;/a&gt;
  SSR
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;server-renderer:&lt;/strong&gt; decouple esm build from Node + improve stream API (&lt;a href="https://github.com/vuejs/vue-next/commit/08672222c611a61f6359543aa202f0841d199bcb"&gt;0867222&lt;/a&gt;), closes &lt;a href="https://github.com/vuejs/vue-next/issues/3467"&gt;#3467&lt;/a&gt; &lt;a href="https://github.com/vuejs/vue-next/issues/3111"&gt;#3111&lt;/a&gt; &lt;a href="https://github.com/vuejs/vue-next/issues/3460"&gt;#3460&lt;/a&gt; (&lt;a href="https://github.com/vuejs/vue-next/tree/master/packages/server-renderer#readme"&gt;Docs&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#generic"&gt;
  &lt;/a&gt;
  Generic
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;New &lt;code&gt;v-memo&lt;/code&gt; directive (&lt;a href="https://github.com/vuejs/vue-next/commit/3b64508e3b2d648e346cbf34e1641f4022be61b6"&gt;3b64508&lt;/a&gt;) (&lt;a href="https://v3.vuejs.org/api/directives.html#v-memo"&gt;Docs&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;support &lt;code&gt;v-bind&lt;/code&gt; .prop &amp;amp; .attr modifiers (&lt;a href="https://github.com/vuejs/vue-next/commit/1c7d737cc8ed0384b334d0b3e2dc8ede44906dc4"&gt;1c7d737&lt;/a&gt;) (&lt;a href="https://v3.vuejs.org/api/directives.html#v-bind"&gt;Docs&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;watchPostEffect&lt;/code&gt; API (&lt;a href="https://github.com/vuejs/vue-next/commit/42ace9577da49477ff189950a83d6eead73d0efe"&gt;42ace95&lt;/a&gt;) (&lt;a href="https://v3.vuejs.org/api/computed-watch-api.html#watchposteffect"&gt;Docs&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;watchSyncEffect&lt;/code&gt; API (&lt;a href="https://github.com/vuejs/vue-next/commit/d87d059ac120ed0496f85474344ef76e40fa9bc7"&gt;d87d059&lt;/a&gt;) (&lt;a href="https://v3.vuejs.org/api/computed-watch-api.html#watchsynceffect"&gt;Docs&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;unwrap refs in toDisplayString (&lt;a href="https://github.com/vuejs/vue-next/commit/f994b974c0a1ac95d313c8ccfc258c6ba3910b6e"&gt;f994b97&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;allow &lt;code&gt;compilerOptions.comments&lt;/code&gt; to affect comment inclusion in dev (&lt;a href="https://github.com/vuejs/vue-next/issues/4115"&gt;#4115&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/vue-next/commit/dd0f9d1ce6b0de59c84d334c7190fa9d2cc17a04"&gt;dd0f9d1&lt;/a&gt;), closes &lt;a href="https://github.com/vuejs/vue-next/issues/3392"&gt;#3392&lt;/a&gt; &lt;a href="https://github.com/vuejs/vue-next/issues/3395"&gt;#3395&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#types"&gt;
  &lt;/a&gt;
  Types
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;map declared emits to onXXX props in inferred prop types (&lt;a href="https://github.com/vuejs/vue-next/issues/3926"&gt;#3926&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/vue-next/commit/69344ff1ae724beb648c34ede8050b3b70ddf4b7"&gt;69344ff&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#performance-improvements"&gt;
  &lt;/a&gt;
  Performance Improvements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;reactivity:&lt;/strong&gt; improve reactive effect memory usage (&lt;a href="https://github.com/vuejs/vue-next/issues/4001"&gt;#4001&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/vue-next/commit/87f69fd0bb67508337fb95cb98135fd5d6ebca7d"&gt;87f69fd&lt;/a&gt;), closes &lt;a href="https://github.com/vuejs/vue-next/issues/2345"&gt;#2345&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;reactivity:&lt;/strong&gt; ref-specific track/trigger and miscellaneous optimizations (&lt;a href="https://github.com/vuejs/vue-next/issues/3995"&gt;#3995&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/vue-next/commit/64310405acaccabc24985ade95fb1b5c9c06ef76"&gt;6431040&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;reactivity:&lt;/strong&gt; use bitwise dep markers to optimize re-tracking (&lt;a href="https://github.com/vuejs/vue-next/issues/4017"&gt;#4017&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/vue-next/commit/6cf2377cd49d24814bdff136bf78c77d50d5b41a"&gt;6cf2377&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;compiler-core/runtime-core:&lt;/strong&gt; improve VNode creation performance with compiler hints (&lt;a href="https://github.com/vuejs/vue-next/issues/3334"&gt;#3334&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/vue-next/commit/ceff89905b05381d3d73c480e08c7aff9271b074"&gt;ceff899&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;compiler-core:&lt;/strong&gt; also hoist all-static children array (&lt;a href="https://github.com/vuejs/vue-next/commit/b7ea7c148552874e8bce399eec9fbe565efa2f4d"&gt;b7ea7c1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;compiler-core:&lt;/strong&gt; hoist dynamic props lists (&lt;a href="https://github.com/vuejs/vue-next/commit/02339b67d8c6fab6ee701a7c4f2773139ed007f5"&gt;02339b6&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;compiler-sfc:&lt;/strong&gt; ignore empty blocks (&lt;a href="https://github.com/vuejs/vue-next/issues/3520"&gt;#3520&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/vue-next/commit/b771fdbef9a8dadd4c9cc939cc104f7764e40373"&gt;b771fdb&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>frontend</category>
      <category>webdev</category>
    </item>
    <item>
      <title>MongoDB $weeklyUpdate (August 2, 2021): Latest MongoDB Tutorials, Events, Podcasts, &amp; Streams!</title>
      <author>Adrienne Tacke</author>
      <pubDate>Tue, 10 Aug 2021 03:01:01 +0000</pubDate>
      <link>https://dev.to/mongodb/mongodb-weeklyupdate-august-2-2021-latest-mongodb-tutorials-events-podcasts-streams-4bm1</link>
      <guid>https://dev.to/mongodb/mongodb-weeklyupdate-august-2-2021-latest-mongodb-tutorials-events-podcasts-streams-4bm1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hi-everyone"&gt;
  &lt;/a&gt;
  👋 Hi everyone!
&lt;/h2&gt;

&lt;p&gt;Welcome to MongoDB $weeklyUpdate! &lt;/p&gt;

&lt;p&gt;Here, you'll find the latest developer tutorials, upcoming official MongoDB events, and get a heads up on our latest Twitch streams and podcast, curated by &lt;a href="https://twitter.com/AdrienneTacke"&gt;Adrienne Tacke&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#freshest-tutorials-on-devhub"&gt;
  &lt;/a&gt;
  🎓 Freshest Tutorials on &lt;a href="https://developer.mongodb.com/"&gt;DevHub&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Want to find the latest MongoDB tutorials and articles created for developers, by developers? Look no further than our &lt;a href="https://developer.mongodb.com/"&gt;DevHub&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#generating-mql-shell-commands-using-openai-and-new-mongosh-shell"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/article/generate-mql-with-mognosh-and-openai/"&gt;Generating MQL Shell Commands Using OpenAI and New mongosh Shell&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/developer/author/pavel-duchovny/"&gt;Pavel Duchovny&lt;/a&gt; &lt;br&gt;
Learn how new mongosh external modules can be used to generate MQL language via OpenAI engine.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#unboxing-jetpack-compose-experience-my-first-compose-app"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/quickstart/jetpack-compose-experience-android/"&gt;Unboxing Jetpack Compose: Experience My First Compose App&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/developer/author/mohit-sharma/"&gt;Mohit Sharma&lt;/a&gt; &lt;br&gt;
Learn how to get started with Jetpack Compose on Android.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#mongodb-realm-web-sdk-tutorial"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/quickstart/realm-web-sdk/"&gt;MongoDB Realm Web SDK Tutorial&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/MBeugnet"&gt;Maxime Beugnet&lt;/a&gt; &lt;br&gt;
Send MongoDB queries directly from the web browser with the MongoDB Realm Web SDK.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#get-hyped-synonyms-in-atlas-search"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/how-to/get-hyped-synonyms-atlas-search/"&gt;Get Hyped: Synonyms in Atlas Search&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.nraboy.com/"&gt;Nic Raboy&lt;/a&gt; &amp;amp; &lt;a href="https://www.mongodb.com/developer/author/anaiya-raisinghani/"&gt;Anaiya Raisinghani&lt;/a&gt; &lt;br&gt;
In this tutorial, learn how to index a MongoDB collection to capture searches for words that mean similar things.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#official-mongodb-events"&gt;
  &lt;/a&gt;
  📅 Official MongoDB &lt;a href="https://live.mongodb.com/events/#/calendar"&gt;Events&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Attend an official MongoDB event near you (virtual for now)! Chat with MongoDB experts, learn something new, meet other developers, and win some swag!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Aug 26 (4:00pm GMT | Global) - &lt;a href="https://live.mongodb.com/events/details/mongodb-realm-global-community-presents-deep-dive-into-coroutines-kotlin-flow-and-livedata/"&gt;Deep dive into Coroutines, Kotlin Flow and LiveData&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#mongodb-on-twitch"&gt;
  &lt;/a&gt;
  📺 MongoDB on &lt;a href="https://www.twitch.tv/mongodb"&gt;Twitch&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;We stream tech tutorials, live coding, and talk to members of our community every Friday. Sometimes, we even stream twice a week! Be sure to &lt;a href="https://www.twitch.tv/mongodb"&gt;follow us on Twitch&lt;/a&gt; to be notified of every stream!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Latest Stream&lt;/em&gt;&lt;br&gt;
&lt;iframe src="https://clips.twitch.tv/embed?autoplay=false&amp;amp;clip=1101822414&amp;amp;parent=dev.to" height="399" width="710"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Upcoming Streams&lt;/em&gt;&lt;br&gt;
Aug 11 (9am PT) - &lt;a href="https://www.twitch.tv/mongodb/"&gt;The Generation Z Project (with MongoDB Atlas Search Synonyms)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aug 19 (11am PT) - &lt;a href="https://youtu.be/FjKCmSnomEQ"&gt;Help me unSQLize my app!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🍿 &lt;a href="https://www.twitch.tv/mongodb"&gt;Follow us&lt;/a&gt; on Twitch so you never miss a stream!&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#%F0%9F%8E%99-last-word-on-the-mongodb-podcast"&gt;
  &lt;/a&gt;
  🎙 Last Word on the &lt;a href="https://mongodb.libsyn.com/"&gt;MongoDB Podcast&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Latest Episode&lt;/em&gt;&lt;br&gt;
&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/5BpusNFzpYQUsX0tyd6Ccy"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Catch up on past episodes&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;Ep. 69 - &lt;a href="https://open.spotify.com/episode/16u7s0GjBBCVYTwp9Qrvht?si=irAq74shR_yjEUfSevIk1g&amp;amp;dl_branch=1"&gt;At the Intersection of AI/ML/HCI with Doug Eck of Google&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ep. 68 - &lt;a href="https://open.spotify.com/episode/2AqpryYRv3dVUiAJpfWPdp?si=vQleDoLkTR-bOSJZqY8tpQ&amp;amp;dl_branch=1"&gt;Scaling the Real Estate Industry with Jim McClarty of Keller Williams&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Not listening on Spotify? We got you! We're most likely on your favorite podcast network, including &lt;a href="https://podcasts.apple.com/us/podcast/the-mongodb-podcast/id1500452446"&gt;Apple Podcasts&lt;/a&gt;, &lt;a href="https://player.fm/series/the-mongodb-podcast"&gt;PlayerFM&lt;/a&gt;, &lt;a href="https://podtail.com/en/podcast/the-mongodb-podcast/"&gt;Podtail&lt;/a&gt;, and &lt;a href="https://www.listennotes.com/podcasts/the-mongodb-podcast-mongodb-0g6fUKMDN_y/"&gt;Listen Notes&lt;/a&gt; 😊)&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#mongodb-devrel-around-the-interwebz"&gt;
  &lt;/a&gt;
  🌍 MongoDB DevRel around the Interwebz
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Watch our team do their thang at various conferences, meetups, and podcasts around the world (virtually, for now). Also, find external articles and guest posts from our DevRel team here!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;📅 Upcoming&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Join Adrienne at &lt;a href="https://www.javascriptandfriends.com/"&gt;JavaScript &amp;amp; Friends&lt;/a&gt; on Aug 20th! She'll give her talk &lt;em&gt;Documentation: The Missing Pieces&lt;/em&gt;:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zoPCw0B2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E8Yb7PpX0AEC2rM.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--DcoWe1uT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1101665721153699845/1KspSSg3_normal.png" alt="JSandFriendsConf profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        JSandFriendsConf
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @jsfriendsconf
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Register Now🎟️- &lt;a href="https://t.co/pp19o5G1kQ"&gt;eventbrite.com/e/163395816285…&lt;/a&gt;&lt;br&gt;Join us on Aug-20 to hear &lt;a href="https://twitter.com/AdrienneTacke"&gt;@AdrienneTacke&lt;/a&gt; speak about Documentation- The Missing Pieces at JavaScript and Friends Conference 2021.&lt;br&gt;&lt;a href="https://twitter.com/hashtag/JSFriendsConf2021"&gt;#JSFriendsConf2021&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/TechConference"&gt;#TechConference&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Ohio"&gt;#Ohio&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/DevCommunity"&gt;#DevCommunity&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      22:18 PM - 09 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1424857645815640066" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1424857645815640066" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1424857645815640066" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;





&lt;p&gt;💡 These $weeklyUpdates are always posted to the &lt;a href="https://www.mongodb.com/community/forums/"&gt;MongoDB Community Forums&lt;/a&gt; &lt;em&gt;first&lt;/em&gt;! &lt;a href="https://account.mongodb.com/account/register"&gt;Sign up&lt;/a&gt; today to always get first dibs on these $weeklyUpdates and other MongoDB announcements, interact with the MongoDB community, and help others solve MongoDB related issues!&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>database</category>
      <category>news</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Databases in AWS - RDS and Aurora</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 10 Aug 2021 02:27:24 +0000</pubDate>
      <link>https://dev.to/this-is-learning/databases-in-aws-rds-and-aurora-10bn</link>
      <guid>https://dev.to/this-is-learning/databases-in-aws-rds-and-aurora-10bn</guid>
      <description>&lt;p&gt;There are many managed databases provided by AWS which allows us to setup databases very easily.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-managed-databases-given-by-aws"&gt;
  &lt;/a&gt;
  Why use managed databases given by AWS
&lt;/h2&gt;

&lt;p&gt;You can setup your own Db on your on premises server or on your Ec2 instances but then you have to take care of backups, replication, scaling, availability, durability. Which is a lot of operational work added to your plate. If you mainly want to focus on developing your applications and don't want to worry about managing and handling your data bases then managed DB's by AWS are your best choice. These managed DB have a built in &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Scaling, Availability&lt;/li&gt;
&lt;li&gt;Backups and upgrades&lt;/li&gt;
&lt;li&gt;Monitoring, alarms etc.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#relational-db-services"&gt;
  &lt;/a&gt;
  Relational DB services
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#rds"&gt;
  &lt;/a&gt;
  RDS
&lt;/h3&gt;

&lt;p&gt;Amazon Relational Database Service (Amazon RDS) makes it easy to set up, operate, and scale a relational database in the cloud. It allows you to setup many relational DB with many different engines like  Amazon Aurora, PostgreSQL, MySQL, MariaDB, Oracle Database, and SQL Server. &lt;/p&gt;

&lt;p&gt;Using RDS has the following advantages over traditional Db&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Ease of setup - You can setup a production-ready relational database in minutes&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Scaling - These Db has built in scaling you can also setup replicas to reduce load on each server&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Availability - If you setup a multi-az db then all the data is automatically replicated and we can even recover our DB from there. There are also continuous backups and we can recover DB's from those timestamps&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Secure - It allows you to encrypt your data using industry standard encrypted IPsec VPN. It also offers encryption at rest and encryption in transit.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Maintenance - We have to do less management as OS management and updates are handled by AWS&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#aurora"&gt;
  &lt;/a&gt;
  Aurora
&lt;/h3&gt;

&lt;p&gt;Aurora is a special proprietary DB by AWS and you can use Mysql or Postgres it combines the performance and availability of traditional enterprise databases with the simplicity and cost-effectiveness of open source databases. Amazon Aurora is up to five times faster than standard MySQL databases and three times faster than standard PostgreSQL databases. It auto-scales up to 128TB per database instance and delivers high performance and availability with continuous backup to Amazon S3.&lt;/p&gt;

&lt;p&gt;Next we will do a Hands on setting up RDS on AWS cloud.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>devops</category>
      <category>cloudskills</category>
    </item>
    <item>
      <title>Authentication with Flask and Github || Authlib</title>
      <author>Nelson Adonis Hernandez</author>
      <pubDate>Tue, 10 Aug 2021 02:09:08 +0000</pubDate>
      <link>https://dev.to/nelsoncode/authentication-with-flask-and-github-authlib-19ej</link>
      <guid>https://dev.to/nelsoncode/authentication-with-flask-and-github-authlib-19ej</guid>
      <description>&lt;p&gt;For this example we will use Authlib which is the ultimate Python library in building OAuth and OpenID Connect servers&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip3 &lt;span class="nb"&gt;install &lt;/span&gt;Flask Authlib requests python-dotenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#configuration"&gt;
  &lt;/a&gt;
  Configuration
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url_for&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dotenv&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;load_dotenv&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;getenv&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;authlib.integrations.flask_client&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;OAuth&lt;/span&gt;


&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;secret_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"mysecretkey"&lt;/span&gt;

&lt;span class="n"&gt;oauth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OAuth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;github&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;oauth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'github'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;client_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"CLIENT_ID"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;client_secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"SECRET_ID"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;access_token_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'https://github.com/login/oauth/access_token'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;access_token_params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;authorize_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'https://github.com/login/oauth/authorize'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;authorize_params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;api_base_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'https://api.github.com/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;client_kwargs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'scope'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'user:email'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;   

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;saludo&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Hello"&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;load_dotenv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"0.0.0.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#route-for-authorization"&gt;
  &lt;/a&gt;
  Route for Authorization
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;authorize_redirect&lt;/strong&gt; indicates the url to redirect to the &lt;strong&gt;"Callback URL"&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/login"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;redirect_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;url_for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"authorize"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_external&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;authorize_redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;redirect_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#callback-url"&gt;
  &lt;/a&gt;
  Callback URL
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/authorize"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;authorize&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;authorize_access_token&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'user'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;profile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c1"&gt;# do something with the token and profile
&lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#settings-in-github"&gt;
  &lt;/a&gt;
  Settings in Github
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u-c5IeTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/le02uucwzzt4n09vqcye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u-c5IeTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/le02uucwzzt4n09vqcye.png" alt="OAuth application settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/NelsonCode/authlib-flask-github"&gt;Code of example in Github 🔗&lt;/a&gt;&lt;/p&gt;

</description>
      <category>authlib</category>
      <category>flask</category>
      <category>github</category>
      <category>nelsoncode</category>
    </item>
    <item>
      <title>Complete Web Developer Roadmap</title>
      <author>codeifys</author>
      <pubDate>Tue, 10 Aug 2021 01:27:57 +0000</pubDate>
      <link>https://dev.to/codeifys/complete-web-developer-roadmap-25jb</link>
      <guid>https://dev.to/codeifys/complete-web-developer-roadmap-25jb</guid>
      <description>&lt;p&gt; &lt;span&gt;Web developers work independently as freelancers or with company teams to create websites. Depending on the job, these professionals may focus on front-end development, which involves designing sites and producing content, or back-end development, which involves writing code to make website features work. Web developers may also become webmasters for a site, providing maintenance, updates, and troubleshooting when needed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Prospective web developers can use the following information to choose a career path and understand the required steps for that career, such as completing education and understanding potential web developer roles and contexts. Read on to learn about the daily tasks and skills of a web developer, available career resources, and salary information.&lt;/p&gt;
&lt;h2&gt;What Does a Web Developer Do?&lt;/h2&gt;
&lt;p&gt;Web development and web design share many commonalities, but they differ in some key areas. Web design deals with the front-end of a website, concerning itself with appearance and user experience. Web development, on the other hand, deals with building technical front-end and/or back-end code that informs site function. Web developers may work exclusively on front-end code, back-end code, or both, and many modern jobs also require overlap into web design. These professionals may work independently on a freelance basis or with marketing or IT departments.&lt;/p&gt;
&lt;p&gt;Entry-level jobs often require only a small amount of formal education and training. As the internet continues to expand, so does the demand for talented web developers, making this career an attractive option. The U.S. Bureau of Labor Statistics (BLS) projects that web development jobs will grow by 13% between 2018 and 2028 — much faster than the national average growth for all occupations.&lt;/p&gt;

&lt;p&gt;There has never been a better time to learn to code or make a career change to software engineering. The demand for web developers is at an all-time high, and it’s only increasing. There are both free and premium tutorials online that teach you the skills to get a job as a developer — no CS degree required 🤓.&lt;/p&gt;
&lt;p id="561d"&gt;This article details the needed skills and the corresponding tutorials to learn them effectively. The illustrated guide is provided by &lt;b&gt;&lt;a href="http://www.codelivly.com"&gt;Codelivly&lt;/a&gt;&lt;/b&gt; and can be found on codelivly  — Codelivly work is excellent so be sure to star the repo and subscribe to his newsletter to support his efforts. Don’t be intimidated by the map. It may seem like a lot, but I’ll break it down so you can learn each part step-by-step.&lt;/p&gt;
&lt;p id="dda0"&gt;This article will be divided into the following sections:&lt;/p&gt;
&lt;p id="dda0"&gt;1. &lt;b&gt;&lt;a href="https://www.codelivly.com/web-developer-roadmap-2021/"&gt;Full Stack Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;2. &lt;b&gt;&lt;a href="https://www.codelivly.com/frontend-web-developer-roadmap/"&gt;Frontend Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;3. &lt;b&gt;&lt;a href="https://www.codelivly.com/backend-web-developer-roadmap/"&gt;Backend Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;4. &lt;b&gt;&lt;a href="https://www.codelivly.com/the-best-python-frameworks-for-web-development-in-2021/"&gt;Best Python Framework For Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p id="dda0"&gt;&lt;b&gt;Dear Dev developer and users, You will get all the articles on this platform.&lt;/b&gt;&lt;/p&gt;

&lt;p id="dda0"&gt;Happy Coding 😊&lt;/p&gt;






</description>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Easiest Way To Add Icons To Your React Apps 😎</title>
      <author>Chris Hansen </author>
      <pubDate>Tue, 10 Aug 2021 00:01:58 +0000</pubDate>
      <link>https://dev.to/hyggedev/easiest-way-to-add-icons-to-your-react-apps-5cgd</link>
      <guid>https://dev.to/hyggedev/easiest-way-to-add-icons-to-your-react-apps-5cgd</guid>
      <description>&lt;h2&gt;
  &lt;a href="#a-great-ui-begins-with-some-great-icons"&gt;
  &lt;/a&gt;
  A great UI begins with some great icons.
&lt;/h2&gt;

&lt;p&gt;Icons are important as they add familiarity to your website. Such as a hamburger menu. Everyone knows to click a hamburger icon to get more information, or how a down arrow at the bottom of the page, indicates the user should scroll. &lt;/p&gt;

&lt;p&gt;If you're working with React, it's extremely easy to implement icons into your projects, with thousands of choices from various libraries. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let's begin.&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;react-icons: &lt;a href="https://react-icons.github.io/react-icons"&gt;https://react-icons.github.io/react-icons&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Demo: &lt;a href="https://react-icons-blog-example.netlify.app/"&gt;https://react-icons-blog-example.netlify.app/&lt;/a&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/chansen17"&gt;
        chansen17
      &lt;/a&gt; / &lt;a href="https://github.com/chansen17/react-icons-blog"&gt;
        react-icons-blog
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Example on how to use react-icons in a react-project. 
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#1-were-going-to-be-using-the-raw-reacticons-endraw-package"&gt;
  &lt;/a&gt;
  1. We're going to be using the &lt;code&gt;react-icons&lt;/code&gt; package 📦
&lt;/h2&gt;

&lt;p&gt;Download &lt;code&gt;react-icons&lt;/code&gt; either with yarn or npm. Like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add react-icons 
or 
npm install react-icons --save 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-import-icons"&gt;
  &lt;/a&gt;
  2. Import Icons ↩️
&lt;/h2&gt;

&lt;p&gt;On the react-icons homepage, you'll see a ton of libraries to choose from. From Bootstrap, Font-awesome, Material-UI and many more. Choose your favorite. &lt;/p&gt;

&lt;p&gt;Once you find the icon you like, click to add the code to your clipboard. &lt;/p&gt;

&lt;p&gt;Now, in &lt;code&gt;App.js&lt;/code&gt; all we need to do is import the Icon and the library like so:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// fa is the reference to the font-awesome library
import { FaReact, FaSass, FaLinux} from 'react-icons/fa';

// md is the reference to the material-ui library
import { MdFavoriteBorder, MdChat } from 'react-icons/md';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-lets-use-our-icons"&gt;
  &lt;/a&gt;
  3. Let's use our icons 👍
&lt;/h2&gt;

&lt;p&gt;Lastly, in your &lt;code&gt;App()&lt;/code&gt; component, all you need to do is use the Icon like any other component. So back in step 2, if you imported the React, Sass, Linux, Favorites and Chat Icons, just use them like so:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function App() {
  return (
    &amp;lt;ul&amp;gt;
      &amp;lt;li&amp;gt;&amp;lt;FaReact/&amp;gt;&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;&amp;lt;FaSass/&amp;gt;&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;&amp;lt;FaLinux/&amp;gt;&amp;lt;/li&amp;gt;

      &amp;lt;li&amp;gt;&amp;lt;MdFavoriteBorder/&amp;gt;&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;&amp;lt;MdChat/&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;/ul&amp;gt;
 );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion 😎
&lt;/h2&gt;

&lt;p&gt;Congrats! That's it! That's all it takes to bring Icons into your React projects. You have the choice of thousands of Icons from 21 different libraries! And the best part is you only import the Icons you need from each individual library, which helps with performance! &lt;/p&gt;

&lt;p&gt;&lt;em&gt;So bring some flare to your UI, &amp;amp; get creative!&lt;/em&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#are-you-on-the-web-dev-learning-journey"&gt;
  &lt;/a&gt;
  Are you on the Web Dev learning journey!?
&lt;/h2&gt;

&lt;p&gt;Check out my other posts on &lt;em&gt;productivity&lt;/em&gt; and &lt;em&gt;React.&lt;/em&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/hyggedev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SF2YY4hD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--EoeHCiMq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/273899/c143e65c-a98f-4545-968d-814c095950a0.jpg" alt="hyggedev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/hyggedev/how-to-stay-focused-as-a-self-taught-frontend-web-developer-7gp" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to stay focused 🔍 as a self taught Frontend Web Developer 💻&lt;/h2&gt;
      &lt;h3&gt;Chris Hansen  ・ Jul 29 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devjournal&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/hyggedev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SF2YY4hD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--EoeHCiMq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/273899/c143e65c-a98f-4545-968d-814c095950a0.jpg" alt="hyggedev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/hyggedev/how-to-build-a-responsive-react-navigation-menu-with-styled-components-3682" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to build a Responsive 📱 React Navigation Menu with Styled-Components 💻&lt;/h2&gt;
      &lt;h3&gt;Chris Hansen  ・ Aug 3 ・ 10 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;







&lt;div class="ltag__tag ltag__tag__id__6357"&gt;
  
    .ltag__tag__id__6357 .follow-action-button{
      background-color: #57d700 !important;
      color: #ffffff !important;
      border-color: #57d700 !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/codenewbies" class="ltag__tag__link"&gt;codenewbies&lt;/a&gt; Follow
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__tag ltag__tag__id__2162"&gt;
  
    .ltag__tag__id__2162 .follow-action-button{
      background-color:  !important;
      color:  !important;
      border-color:  !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/tutorials" class="ltag__tag__link"&gt;tutorials&lt;/a&gt; Follow
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>How to do wiring in VanillaJS</title>
      <author>Tarandeep Singh</author>
      <pubDate>Mon, 09 Aug 2021 23:46:54 +0000</pubDate>
      <link>https://dev.to/tarandeep_singh/how-to-do-wiring-in-vanillajs-36gh</link>
      <guid>https://dev.to/tarandeep_singh/how-to-do-wiring-in-vanillajs-36gh</guid>
      <description>&lt;p&gt;After an unbelievable start to my blogging journey, with my first two blogs crossing over 120+ bookmarks combined, here I am with my third blog! This time around we are going to touch on the basics of JavaScript.&lt;/p&gt;

&lt;p&gt;"VanillaJS" is a term that developers use to describe regular JavaScript. It means using the inbuilt JavaScript methods and objects without any additional libraries or frameworks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-vanillajs"&gt;
  &lt;/a&gt;
  Why VanillaJS?
&lt;/h3&gt;

&lt;p&gt;So why use VanillaJS instead of libraries or frameworks? Well, we gotta admit libraries like ReactJS are just amazing but VanillaJS is faster than any other JavaScript framework because it has fewer overheads. Moreover, Using frameworks or libraries in JS is a little like using Bootstrap or Tailwind in CSS, we might miss out on the fundamentals, it eliminates control over your abilities to solve the problem in a different most probably in a better way. For beginners, it's better to start off with VanillaJS and then shift to any framework with the confidence of knowing what actually is going on in that framework!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-wiring"&gt;
  &lt;/a&gt;
  What is wiring?
&lt;/h3&gt;

&lt;p&gt;Wiring is basically connecting different components with a wire. Pretty much like we did in electric circuits while studying physics! Remember connecting a bulb, switch and battery using a wire? That's it! So connecting different code components like input, output and processing is what we are aiming for.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZITgZWUT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ejdn2b8folbqi9vi77mc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZITgZWUT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ejdn2b8folbqi9vi77mc.jpg" alt="circuit image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wiring-a-button"&gt;
  &lt;/a&gt;
  Wiring a Button
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Create a button in HTML &amp;amp; give it an id &lt;code&gt;&amp;lt;button id="btn-click"&amp;gt;Click&amp;lt;/button&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Refer button using &lt;code&gt;querySelector()&lt;/code&gt; in "app.js" &lt;code&gt;var btnClick = document.querySelector("#btn-click");&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Add event listener to button &lt;code&gt;btnClick.addEventListner("click", function clickEventHandler() {
})&lt;/code&gt;
If you are an absolute beginner then do read about the querySelector(), event listener &amp;amp; callbacks in JavaScript at &lt;a href="https://developer.mozilla.org/en-US/"&gt;MDN Docs&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#wiring-a-textarea-input"&gt;
  &lt;/a&gt;
  Wiring a textarea input
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Create a &lt;code&gt;textarea&lt;/code&gt; input tag &amp;amp; give it an id &lt;code&gt;&amp;lt;textarea id="txt-input"&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Now refer it in js file &lt;code&gt;var txtInput = document.querySelector("#txt-input");&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Read the &lt;code&gt;value&lt;/code&gt; of the tag. You can do this only inside event. For this we are using the same event listener we wrote in 3rd point of 'Wiring a Button' &lt;code&gt;btnClick.addEventListner("click", function clickEventHandler() { txtInput.value;
})&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#wiring-a-div-to-show-output"&gt;
  &lt;/a&gt;
  Wiring a div to show output
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Create an output &lt;code&gt;div&lt;/code&gt; with an id &lt;code&gt;&amp;lt;div id="output"&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Refer it in js &lt;code&gt;var outputDiv = document.querySelector("#output");&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;innerText&lt;/code&gt; to write to this div dynamically when button click happens &lt;code&gt;btnClick.addEventListner("click", function clickEventHandler() { outputDiv.innerText = txtInput,value;
})&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now our wiring is complete and the web app is ready to take input in &lt;code&gt;textarea&lt;/code&gt; and &lt;code&gt;onclick&lt;/code&gt; of a button it'll show output in our output &lt;code&gt;div&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;Using this simple concept I have made two fun translator web apps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Minion Translator: &lt;a href="https://minions-bananas.netlify.app/"&gt;See it in action!&lt;/a&gt; | &lt;a href="https://github.com/Tarandeep-s1ngh/Banana-language-translator"&gt;View Source Code&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Yoda Translator: &lt;a href="https://yodatalks.netlify.app/"&gt;See it in action!&lt;/a&gt; | &lt;a href="https://github.com/Tarandeep-s1ngh/Yoda-Speak-Translator"&gt;View Source Code&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DfFS06qG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/quwf8b6zrmjqai2jue9w.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DfFS06qG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/quwf8b6zrmjqai2jue9w.jpg" alt="minion translator app image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all for this one! You can check out my other blogs &lt;a href="https://dev.to/tarandeep_singh"&gt;here.&lt;/a&gt;&lt;br&gt;
Do tell me in the comments if you would like the next blog to be on ReactJS!&lt;/p&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/Tarandeep_s1ngh"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/tarandeep-s1ngh/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>In Memory of Abel Wang</title>
      <author>Davide 'CoderDave' Benvegnù</author>
      <pubDate>Mon, 09 Aug 2021 22:58:28 +0000</pubDate>
      <link>https://dev.to/n3wt0n/in-memory-of-abel-wang-fam</link>
      <guid>https://dev.to/n3wt0n/in-memory-of-abel-wang-fam</guid>
      <description>&lt;p&gt;&lt;strong&gt;Abel Wang&lt;/strong&gt; (1972-2021) was Principal Program Manager, Technical Assistant to the CTO of Azure at Microsoft. &lt;/p&gt;

&lt;p&gt;For many years he was a DevOps enthusiast, and in fact he worked as DevOps Lead and Advocate in the Donovan Brown's team until the recent promotion.&lt;/p&gt;

&lt;p&gt;You may know him by his nickname &lt;em&gt;AbelSquidHead&lt;/em&gt;. He used to be a speaker at many technical events and conferences, and also either a host or guest of countless videos.&lt;/p&gt;

&lt;p&gt;Abel was hands down one of the &lt;strong&gt;most passionate DevOps practitioners&lt;/strong&gt; I've ever had the pleasure to listen to. Actually, he was one of the most passionate people in everything he did.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;He passed away in July 2021&lt;/strong&gt;, cancer took him away.&lt;/p&gt;

&lt;p&gt;This is my small tribute to him, to one of the best of us all.&lt;/p&gt;

&lt;p&gt;In memory of Abel Wang. Rest in Peace. You are and will always be &lt;strong&gt;sorely missed&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Ortp-e5T_8Q"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/Ortp-e5T_8Q"&gt;Link to the video: https://youtu.be/Ortp-e5T_8Q&lt;/a&gt;&lt;/p&gt;

</description>
      <category>abel</category>
      <category>devops</category>
      <category>microsoft</category>
      <category>abelsquidhead</category>
    </item>
    <item>
      <title>Metodologías CSS</title>
      <author>Marcial Ambriz</author>
      <pubDate>Mon, 09 Aug 2021 22:25:56 +0000</pubDate>
      <link>https://dev.to/marskdev/metodologias-css-2pg2</link>
      <guid>https://dev.to/marskdev/metodologias-css-2pg2</guid>
      <description>&lt;h1&gt;
  &lt;a href="#metodolog%C3%ADas-css"&gt;
  &lt;/a&gt;
  Metodologías CSS
&lt;/h1&gt;

&lt;p&gt;Una de las cosas difíciles en el desarrollo web y programación en general es el nombramiento de las cosas y el nombramiento en CSS no es diferente.&lt;/p&gt;

&lt;p&gt;Cuando trabajas en un proyecto pequeño el nombramiento no es una prioridad pero si es una buena practica, todo cambia cuando se convierte en un proyecto grande, entonces el nombramiento se vuelve primordial, mantener el rastro de todos los selectores se vuelve un caos sin una convención de nombres, usar alguna hará la tarea fácil.&lt;/p&gt;

&lt;p&gt;El código se volverá sencillo de leer, mantener y modificar.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#qu%C3%A9-es-la-convenci%C3%B3n-de-nombres"&gt;
  &lt;/a&gt;
  ¿Qué es la convención de nombres?
&lt;/h2&gt;

&lt;p&gt;Una convención de nombres es un conjunto de reglas para la elección de la secuencia de caracteres que se utilice para identificadores que denoten variables, tipos, funciones y otras entidades en el código fuente y la documentación.&lt;/p&gt;

&lt;p&gt;Algunas de las razones para utilizar esta metodología son:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reducir el esfuerzo para leer y entender el código fuente.&lt;/li&gt;
&lt;li&gt;Mejorar la claridad y apariencia del código fuente.&lt;/li&gt;
&lt;li&gt;Ayuda a evitar conflictos de nombres.&lt;/li&gt;
&lt;li&gt;Mejora la comprensión en la reutilización de código.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://es.wikipedia.org/wiki/Convenci%C3%B3n_de_nombres_(programaci%C3%B3n)"&gt;Ver en Wikipedia&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;En lenguajes de programación como JavaScript se utilizan convenciones para nombrar variables, tipos, funciones y algunos otros, dependiendo el caso de uso es el tipo de convención que se utiliza.&lt;/p&gt;

&lt;p&gt;En CSS se utiliza kebab-case, este es una convención bastante estándar en CSS, lo podemos ver incluso en las propiedades de los selectores.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#metodolog%C3%ADas-que-puedes-implementar"&gt;
  &lt;/a&gt;
  Metodologías que puedes implementar
&lt;/h2&gt;

&lt;p&gt;Los siguientes son convenciones de nombres que puedes usar:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#BEM"&gt;BEM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#bem"&gt;
  &lt;/a&gt;
  BEM
&lt;/h3&gt;

&lt;p&gt;BEM (Bloque, Elemento, Modificador) tiene un enfoque en componentes en el desarrollo web. La idea de esta metodología es separar la interfaz de usuario dentro de bloques independientes. Esto hace el desarrollo de interfaces fácil y rápido incluso con una UI compleja y permite la reutilización de código creando pequeños componentes.&lt;/p&gt;

&lt;p&gt;Estos son los 3 problemas que esta convención de nombres trata de resolver:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Saber lo que hace un selector con solo mirar su nombre.&lt;/li&gt;
&lt;li&gt;Tener una idea donde puede ser usado un selector con solo mirarlo.&lt;/li&gt;
&lt;li&gt;Saber la relación entre los nombres de las clases con solo mirarlas.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card-post"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;header&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card-post__header"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Tittle Post&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card-post__body card-post__body_hide"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Here should there some text.&lt;span class="nt"&gt;&amp;lt;p/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;El bloque describe el propósito, el elemento compone una parte del bloque, separado con doble guión bajo &lt;code&gt;__&lt;/code&gt; y el modificador define la apariencia separado por un solo guión bajo &lt;code&gt;_&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#sintaxis"&gt;
  &lt;/a&gt;
  Sintaxis
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.block__element_modifier&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;En la comunidad de BEM hay otra forma de separar el modificador con dos guiones &lt;code&gt;--&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.block__element--modifier&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Conoce más sobre &lt;a href="https://en.bem.info"&gt;BEM&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#smacss"&gt;
  &lt;/a&gt;
  SMACSS
&lt;/h3&gt;

&lt;p&gt;SMACSS (Scalable and Modular Architecture for CSS) es una guía que estructura los estilos en categorías. Es una forma de examinar el proceso de diseño y adaptarlos a un pensamiento flexible. Esta metodología trata de documentar el diseño con un enfoque coherente para el desarrollo los estilos de un sitio.&lt;/p&gt;

&lt;p&gt;Hay 5 tipos de categorías:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Base&lt;/li&gt;
&lt;li&gt;Layout&lt;/li&gt;
&lt;li&gt;Module&lt;/li&gt;
&lt;li&gt;State&lt;/li&gt;
&lt;li&gt;Theme&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;La idea de esta metodología es dividir código en categorías. El mayor propósito es codificar patrones para su reutilización.&lt;/p&gt;

&lt;p&gt;Conoce más sobre &lt;a href="http://smacss.com"&gt;SMACSS&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#itcss"&gt;
  &lt;/a&gt;
  ITCSS
&lt;/h3&gt;

&lt;p&gt;ITCSS representa un triangulo invertido de CSS y la principal filosofía es ayudarte a organizar los archivos CSS del proyecto de tal manera que des un mejor trato al global name-space, la cascada y los selector específicos.&lt;/p&gt;

&lt;p&gt;Conoce más sobre &lt;a href="https://www.xfive.co/blog/itcss-scalable-maintainable-css-architecture/"&gt;ITCSS&lt;/a&gt; mira  &lt;a href="https://dev.to/helleworld_/how-i-use-itcss-to-organize-my-sass-styles-1iec"&gt;como usarlo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#oocss"&gt;
  &lt;/a&gt;
  OOCSS
&lt;/h3&gt;

&lt;p&gt;OOCSS (Object-Oriented CSS) tiene el propósito de fomentar la reutilización de código y el fácil mantenimiento de las hojas de estilos.&lt;/p&gt;

&lt;p&gt;OCSS se centra en dos principales principios:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Separación de la estructura de la apariencia.&lt;/li&gt;
&lt;li&gt;Separar el contenedor del contenido.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Conoce más sobre &lt;a href="https://www.smashingmagazine.com/2011/12/an-introduction-to-object-oriented-css-oocss/"&gt;OOCSS&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#amcss-suit-css-amp-acss"&gt;
  &lt;/a&gt;
  AMCSS, SUIT CSS &amp;amp; ACSS
&lt;/h3&gt;

&lt;p&gt;Estas tres ultimas considero que es avanzado para principiantes. Pero si tienes curiosidad puedes pasar a visitarlos &lt;a href="https://amcss.github.io"&gt;AMCSS&lt;/a&gt; , &lt;a href="https://github.com/suitcss/suit/blob/master/doc/naming-conventions.md"&gt;SUIT CSS&lt;/a&gt; &lt;a href="https://acss.io"&gt;ACSS&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#fuentes"&gt;
  &lt;/a&gt;
  Fuentes
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Organizing"&gt;MDN&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>html</category>
      <category>sass</category>
    </item>
    <item>
      <title>25 Youtube Channels That Every Developer Should Follow!</title>
      <author>Aya Bouchiha</author>
      <pubDate>Mon, 09 Aug 2021 22:24:26 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/25-youtube-channels-that-every-developer-should-follow-4p5f</link>
      <guid>https://dev.to/ayabouchiha/25-youtube-channels-that-every-developer-should-follow-4p5f</guid>
      <description>&lt;p&gt;Hi, I'm &lt;a href="//developer.aya.b@gmail.com"&gt;Aya Bouchiha&lt;/a&gt;, on this amazing day, I decided to share with you these 25 helpful youtube channels.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#youtube-channel-every-developer-should-follow"&gt;
  &lt;/a&gt;
  Youtube Channel Every Developer should follow
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ"&gt;FreeCodeCamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/TechGuyWeb"&gt;Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC4JX40jDee_tINbkjycV4Sg"&gt;Tech With Tim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCTZRcDjjkVajGL6wd76UnGg"&gt;Dennis Ivy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCJZv4d5rbIKd4QHMPkcABCw"&gt;Kevin Powell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCk7xIEmd3MeyhIu2StLX5yA"&gt;Coding Nepal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCFbNIlppjAuEX4znoulh0Cw"&gt;Web Dev Simplified&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UClb90NQQcskPUGDIXsQEz5Q"&gt;Dev Ed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/CodingEntrepreneurs"&gt;CodingEntrepreneurs &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCMZFwxv5l-XtKi693qMJptA"&gt;Coding Addict&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCW5YeuERMmlnqo4oq8vwUpg"&gt;The Net Ninja&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCxX9wt5FWQUAAz4UrysqK9A"&gt;Cs Dojo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCqrILQNl5Ed9Dz6CGMyvMTQ"&gt;Clever Programmer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC80PWRj_ZU8Zu0HSMNVwKWw"&gt;Code evolution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCM-yUTYGmrNvKOCcAl21g3w"&gt;Jenny's lectures CS/IT NET&amp;amp;JRF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/CodingTech/videos"&gt;Coding Tech &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCStj-ORBZ7TGK1FwtGAUgbQ"&gt;Programming Hero &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCeVMnSShP_Iviwkknt83cww"&gt;CodeWithHarry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/edurekaIN"&gt;edureka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/programmingwithmosh"&gt;programmingWithMosh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCbwXnUipZsLfUckBPsC7Jog"&gt;Online Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/thecodercoder"&gt;Coder Coder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC4SVo0Ue36XCfOyb5Lh1viQ"&gt;Bro Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCvM5YYWwfLwpcQgbRr68JLQ"&gt;Adrian Twarog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UChPxqdfDbulLE9PyUqhijWw"&gt;Dipesh Malvia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#suggested-posts"&gt;
  &lt;/a&gt;
  Suggested Posts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/ayabouchiha/youtube-courses-projects-to-master-javascript-3lhc"&gt;Youtube Courses, Projects To Master Javascript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/ayabouchiha/free-resources-to-master-algorithms-data-structure-2nfj"&gt;Free resources to master algorithms &amp;amp; data structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/ayabouchiha/resources-to-master-5-popular-react-libraries-2n81"&gt;Resources to master 5 popular react libraries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To Contact Me:&lt;/p&gt;

&lt;p&gt;email: &lt;a href="mailto:developer.aya.b@gmail.com"&gt;developer.aya.b@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;telegram: &lt;a href="https://t.me/AyaBouchiha"&gt;Aya Bouchiha&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope this post helped you :)&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Understand One-way Data Binding in React the easy way!</title>
      <author>Parnika-Gupta</author>
      <pubDate>Mon, 09 Aug 2021 22:07:40 +0000</pubDate>
      <link>https://dev.to/parnikagupta/one-way-data-binding-in-react-30ea</link>
      <guid>https://dev.to/parnikagupta/one-way-data-binding-in-react-30ea</guid>
      <description>&lt;p&gt;React is a popular JavaScript library for many reasons and one of the reasons is “one-way data binding”. If you want to understand React to its core, you should read along.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It’s a one-way road for the data&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;React apps are made up of carefully organized components. These components receive arguments(props) and return information using the return value of the render function. When data flows from the parent to the child component, it is known as the unidirectional flow of data.&lt;/p&gt;

&lt;p&gt;Parent component passes information to child component using props. But it is also possible that a child component might end up requiring to change something in the UI. What to do in that case?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Is it possible to pass data from the child to parent component?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What if clicking a button in the child component changes the text in the parent component? How do we make sure that the parent component is aware that a button is clicked that is supposed to change its text?&lt;/p&gt;

&lt;p&gt;This is achieved by the parent component by passing a callback function as a prop when calling the child component. The child component now calls this function when the button is clicked. This provides the parent component with all the required information about the state of the child component or the user actions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before anything else, it is essential to understand which UI component should be changed based on the user input. This is where the concept of “state” comes in.&lt;/p&gt;

&lt;p&gt;As we already discussed, we need to change the text in the parent component that is currently “Hello” to “World”. So, that is our element of the state.&lt;/p&gt;

&lt;p&gt;Now, which component should the state live in? The child? The parent? Um.. so here are a few steps that would make it easier for you to decide where the state should reside:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;See which component renders something based on the state.&lt;/li&gt;
&lt;li&gt;Identify the highest component in the hierarchy that relies on the state.&lt;/li&gt;
&lt;li&gt;The state lives in either the highest component in the hierarchy or some other higher component.&lt;/li&gt;
&lt;li&gt;If you are unable to find a component worthy of owning the state, you can create a completely new component whose whole purpose is to hold the state. Then you can add this component as the highest component in the hierarchy.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In our case, it is easy to identify that the state should reside in the “Parent” component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const [text, setText] = useState(“Hello”);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, what do we do to the “Parent” component? We pass the callback function as a prop from the parent component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Child changeText={(text) =&amp;gt; setText(text)} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need a callback function in the “Child” component that is triggered when the button is clicked.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button onClick={() =&amp;gt; props.changeText(“World”)}&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With all individual elements in place, here is what the JavaScript files look for each component:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Parent.js&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useState } from “react”;
import Child from “./Child”;
function Parent(props) {
const [text, setText] = useState(“Hello”);
return (
&amp;lt;div&amp;gt;
&amp;lt;h1&amp;gt;{text}&amp;lt;/h1&amp;gt;
&amp;lt;Child changeText={(text) =&amp;gt; setText(text)} /&amp;gt;
&amp;lt;/div&amp;gt;
);
}
export default Parent;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Child.js&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from “react”;
function Child(props) {
return (
&amp;lt;div&amp;gt;
&amp;lt;button onClick={() =&amp;gt; props.changeText(“World”)}&amp;gt;
Change the text
&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
);
}
export default Child;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;App.js&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import Parent from “./Parent”;
function App() {
return (
&amp;lt;&amp;gt;
&amp;lt;div className=”App”&amp;gt;
&amp;lt;Parent /&amp;gt;
&amp;lt;/&amp;gt;
);
}
export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;How does it work?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the “Parent” component, the content inside the heading tag is supposed to change, initially, it is set to “Hello”. Now when the button(in the child component) is clicked, it triggers the onClick event listener that calls the callback function passed from the “Parent” to the “Child” component, which changes the text to “World” and re-renders the component.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;React follows the unidirectional approach, meaning that data flows from parent to child and not vice versa but if you really need to manipulate your parent component based on something in the child component, you can use a callback function and pass it as a prop from the parent to child.&lt;/p&gt;

&lt;p&gt;This function updates the state in the parent component and once the state is changed, it passes down as props again. This allows the components to re-render and display the required results.&lt;/p&gt;

&lt;p&gt;Here I explained passing data from child to parent component using functional components, the same can be achieved using class components as well.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>redux</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
