<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Tips To Become Great Programmer Of All Time</title>
      <author>Coder</author>
      <pubDate>Mon, 13 Sep 2021 06:02:31 +0000</pubDate>
      <link>https://dev.to/thesamrtcoderzz/tips-to-become-great-programmer-of-all-time-4gic</link>
      <guid>https://dev.to/thesamrtcoderzz/tips-to-become-great-programmer-of-all-time-4gic</guid>
      <description>&lt;p&gt; A good programmer is someone who always looks both ways before crossing a one-way street. ~Doug Linder&lt;/p&gt;

&lt;p&gt;Let me start by saying that I do not consider myself to be a competent coder. I consider my coding abilities to be mediocre, and I am still learning and have a long way to go before I am even remotely satisfied with them.Yes, I am better at programming than a lot of others, but that is just because they are lazy and choose to sit about idle all day instead of programming. Their dreadful abilities make my less dreadful abilities appear fantastic.&lt;/p&gt;

&lt;p&gt;So most of the tips I will mention below are lessons learnt from failed endeavours, they are what I have wanted to be and I am not. So lets dive in. &lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/tips-to-become-a-great-programmer/"&gt;Tips to become a great programmer&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Intro to Doppler: Real-life Use Case</title>
      <author>uma victor</author>
      <pubDate>Mon, 13 Sep 2021 05:57:43 +0000</pubDate>
      <link>https://dev.to/umavictor6/intro-to-doppler-real-life-use-case-4g1a</link>
      <guid>https://dev.to/umavictor6/intro-to-doppler-real-life-use-case-4g1a</guid>
      <description>&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Managing secrets in an application can be a headache. You might have your secrets all over your application and you don’t want to cause chaos in your DevOps workflow. Doppler has got  you covered in managing your secrets. In this tutorial we will look at how we can use doppler to manage and secure our secrets.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#goals"&gt;
  &lt;/a&gt;
  Goals
&lt;/h2&gt;

&lt;p&gt;In this article we have an e-commerce store hooked up to firebase and a chatting system for the buyer to seller communications, both of these services need API keys for the application to function. We will look at how to set up a project in doppler, move our secrets from the traditional &lt;code&gt;.env&lt;/code&gt; file in our project to doppler and setting a fallback for the secrets.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#secret-management"&gt;
  &lt;/a&gt;
  Secret Management
&lt;/h2&gt;

&lt;p&gt;In most modern applications, you will most likely &lt;br&gt;
be using digital authentication credentials (secrets). These secrets can be APIs, tokens, keys, and passwords used in our application or even in micro-services. Secret managers are a convenient and secure storage system for storing these digital authentication credentials (secrets). The secret manager provides a center or a single point or location where you can access and audit these secrets&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-need-for-secret-managers"&gt;
  &lt;/a&gt;
  The need for secret managers
&lt;/h2&gt;

&lt;p&gt;By far the most critical component of any organization's security strategy is passwords and keys which are used to authenticate and set control access to critical systems and services. Because of how important it is for organizations to make sure that third parties do not have access to the business data or customer information, bring about the rise of secret managers&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#doppler-as-a-secret-manager"&gt;
  &lt;/a&gt;
  Doppler as a secret manager
&lt;/h2&gt;

&lt;p&gt;I came across this wonderful service Doppler which has significantly increased my productivity. The Doppler secret manager makes life easier for developers as there is no need for storing application secrets as an environmental variable or have them hardcoded. &lt;br&gt;
The Doppler CLI is a powerful tool that gives developers a centralized view of their app configuration in every environment. It allows them to easily access all of their secrets and provides them with a single, easy-to-use dashboard.&lt;br&gt;
With all languages supported, the Doppler Secret Manager is designed to work seamlessly across all types of apps. Another amazing thing about the doppler service is the numerous integrations with other services like AWS, digital ocean, and other third-party deployment services making for a good developer experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#real-world-use-case-market-place-app"&gt;
  &lt;/a&gt;
  Real World Use case: Market Place App
&lt;/h2&gt;

&lt;p&gt;We have a real-world e-commerce site and in this section, we will be looking at how we can manage the secrets in this application. In our e-commerce site, we have used Firebase for our backend in authorizing users and as a database for storing application data. &lt;br&gt;
We have integrated the app with a chat feature using the cometchat API, where buyers and sellers can discuss and agree before buying a product. We can’t achieve all these functionalities without the use of API keys for connecting with these third-party services. That's where Doppler comes in allowing us to secure our application secrets.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#app-structure"&gt;
  &lt;/a&gt;
  App Structure
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     ┣ cometchat-pro-vue-chat-ui-kit 
     ┣ src
     ┃ ┣ Services
     ┃ ┃ ┗ productService.js
     ┃ ┣ assets
     ┃ ┣ components
     ┃ ┃ ┣ Navigation.vue
     ┃ ┃ ┗ Product.vue
     ┃ ┣ router
     ┃ ┃ ┗ index.js
     ┃ ┣ views
     ┃ ┃ ┣ Home.vue
     ┃ ┃ ┣ Login.vue
     ┃ ┃ ┣ NewProduct.vue
     ┃ ┃ ┣ ProductShow.vue
     ┃ ┃ ┗ Register.vue
     ┃ ┣ App.vue
     ┃ ┗ main.js
     ┣ .browserslistrc
     ┣ .editorconfig
     ┣ .env
     ┣ .eslintrc.js
     ┣ .gitignore
     ┣ README.md
     ┣ babel.config.js
     ┣ mockData.json
     ┣ package.json
     ┣ postcss.config.js
     ┣ tailwind.config.js
     ┣ vue.config.js
     ┗ yarn.lock
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above, we have our file structure and the main focus here is our &lt;code&gt;.env&lt;/code&gt; file that contains all the secrets for our application to connect to both firebase and the cometchat service. In the &lt;code&gt;.env&lt;/code&gt; file, we have&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;VUE_APP_COMETCHAT_APP_ID=192762995a541380
VUE_APP_COMETCHAT_API_KEY=685396b8625e38046f36b7a272b938cedfb4d756
VUE_APP_COMETCHAT_REGION=us
VUE_APP_FIREBASE_API_KEY=AIzaSyDaxAj6IDIXz3Fi13yycyJtwTE3S2XMI70
VUE_APP_FIREBASE_AUTH_DOMAIN=etsy-clone-faf39.firebaseapp.com
VUE_APP_FIREBASE_PROJECT_ID=etsy-clone-faf39
VUE_APP_FIREBASE_STORAGE_BUCKET=etsy-clone-faf39.appspot.com
VUE_APP_FIREBASE_MESSAGING_SENDER_ID=828703135046
VUE_APP_FIREBASE_APP_ID=1:828703135046:web:b9aec5771661dafaef0147
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-doppler"&gt;
  &lt;/a&gt;
  Setting up Doppler
&lt;/h2&gt;

&lt;p&gt;To use Doppler we first create an account. After creating an account, we are prompted to create a workspace that you can name whatever you want. Then Doppler provides a user-friendly walkthrough to show you where and what some functionalities are.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lLqtR1Du--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631114800389_createworkspace.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lLqtR1Du--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631114800389_createworkspace.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-a-project"&gt;
  &lt;/a&gt;
  Creating a Project
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xb5rJEgo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631114952583_createproject.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xb5rJEgo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631114952583_createproject.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Creating a project with Doppler is very straightforward. Although doppler comes with an example project already set up, you can click on the plus icon to create a new project. In my case, I will call the project &lt;code&gt;etsy-ecommerce&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IYXLL8Qu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115130785_projectnaming.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IYXLL8Qu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115130785_projectnaming.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you create a project, Doppler immediately provides you with three environments which are the&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Development&lt;/li&gt;
&lt;li&gt;Staging&lt;/li&gt;
&lt;li&gt;Production&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The environment provided by doppler is where we manage secrets we will be using in our application and API configurations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Ywxe8au--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115157593_devpage.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Ywxe8au--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115157593_devpage.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#installing-doppler"&gt;
  &lt;/a&gt;
  Installing Doppler
&lt;/h2&gt;

&lt;p&gt;In this section, we will talk about how to get you started with using the Doppler CLI and managing your secrets. In the Doppler installation guide, there are different shell commands for installing the CLI. I’m using Ubuntu, so there will be a difference in the command for installation. &lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Install pre-reqs
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install -y apt-transport-https ca-certificates curl gnupg

# Add Doppler's GPG key
curl -sLf --retry 3 --tlsv1.2 --proto "=https" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | sudo apt-key add -

# Add Doppler's apt repo
echo "deb https://packages.doppler.com/public/cli/deb/debian any-version main" | sudo tee /etc/apt/sources.list.d/doppler-cli.list

# Fetch and install latest doppler cli
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install doppler
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;After running the commands above, we can check if the CLI is successfully installed by running&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;doppler --version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;We need a way for our local machine to authenticate with doppler to pull in secrets. We can do this by running &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;doppler login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;We will be asked to open a browser window, where we will authenticate with our email, then an auth token to log in will appear in our terminal which we can use to authenticate doppler.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YDmPkLqZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115306930_authenticate.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YDmPkLqZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115306930_authenticate.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All we have to do now is choose our workspace and if we check our terminal, we can see we have received a welcome message.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-doppler-to-manage-our-app-secret"&gt;
  &lt;/a&gt;
  Using Doppler to Manage Our App Secret
&lt;/h2&gt;

&lt;p&gt;We want to replace the &lt;code&gt;.env&lt;/code&gt; file in our project, so we copy all the content we have in the &lt;code&gt;.env&lt;/code&gt; file and paste it as our secret in development build in doppler and save it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--68m4sgoj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115620061_secretsadded.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--68m4sgoj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115620061_secretsadded.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the secrets have been registered successfully and we can now delete the &lt;code&gt;.env&lt;/code&gt; file in our project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wGAqve6f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115680900_addsecrets.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wGAqve6f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115680900_addsecrets.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In our terminal, we run the setup command to configure doppler&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;doppler setup
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;we choose the project we are working on which is &lt;code&gt;etsy-ecommerce&lt;/code&gt; and select the environment, in this case, the development environment. We can now run our application. Instead of the regular way of starting the project which is &lt;code&gt;yarn run serve&lt;/code&gt;, we will use&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;doppler run -- yarn serve
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;What this command does is it fetches the latest secrets that we stored in doppler and injects them as environmental variables in the node.js process. Now we can delete the &lt;code&gt;.env&lt;/code&gt; file from our project and everything is working perfectly.&lt;br&gt;
To update the secrets in doppler all we have to do is change the secret value and restart our app and our secrets are automatically updated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We have come to the end of the tutorial. We looked at how to set up a project in doppler, move our secrets from the traditional &lt;code&gt;.env&lt;/code&gt; file in our project to doppler and, updating our secrets.&lt;/p&gt;

</description>
      <category>security</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Must-Have Weapons in Your React Armory</title>
      <author>Gaurav Behere</author>
      <pubDate>Mon, 13 Sep 2021 05:48:48 +0000</pubDate>
      <link>https://dev.to/gauravbehere/must-have-weapons-in-your-react-armory-1pcc</link>
      <guid>https://dev.to/gauravbehere/must-have-weapons-in-your-react-armory-1pcc</guid>
      <description>&lt;p&gt;Weapons (tools) make a soldier (developer) effective. Advanced and effective weapons (tools) in your armory ensure you have the firepower to handle the complexity of an ever-growing code base.&lt;br&gt;
Let’s look at a few of the tools I used in my last project. These tools helped me to write code quickly yet maintain quality.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#react-dev-tools"&gt;
  &lt;/a&gt;
  React Dev Tools
&lt;/h2&gt;

&lt;p&gt;Programming is 20% coding and 80% debugging. Debugging is what makes a programmer efficient in comparison to others.&lt;br&gt;
React Developer Tools let you inspect a React tree, including the component hierarchy, props, state, and more. To get started, just open the React Developer Tools and switch to the React Components or React Profiler tab.&lt;br&gt;
By selecting one of the components in the tree, you can inspect and edit its current props and state in the panel on the right. In the breadcrumbs, you can inspect the selected component, the component that created it, the component that created that one, and more.&lt;br&gt;
React developer tools are available for &lt;a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi"&gt;Chrome&lt;/a&gt; and &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/react-devtools"&gt;Firefox&lt;/a&gt; as an extension.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#styled-components"&gt;
  &lt;/a&gt;
  Styled Components
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sCbQQ-yQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/516/1%2ACrJ9gMVMHtMOhGgY1obVJg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sCbQQ-yQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/516/1%2ACrJ9gMVMHtMOhGgY1obVJg.png"&gt;&lt;/a&gt; &lt;br&gt;
While styling components, we also have to take care of vendor prefixes for cross-browser operability. If we’re using LESS or SASS we have to compile code to CSS.&lt;br&gt;
With a component being an individual entity and a basic building block for building apps, it’s recommended for styling to be included within the component, rather than the container app taking care of styling with class names.&lt;br&gt;
Styled components allow us to keep the styles within the component, coupled with the JavaScript code.&lt;br&gt;
Read about some more benefits &lt;a href="https://www.styled-components.com/docs/basics#motivation"&gt;here&lt;/a&gt;.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#reactintl"&gt;
  &lt;/a&gt;
  React-Intl
&lt;/h2&gt;

&lt;p&gt;Having strings, a lot of text in the UI, and having to internationalize it can be painful at times. With the right translation based on browser locale or user preference, presenting the user interface in a different language can be tricky.&lt;br&gt;
React-Intl handles it in an elegant way, wrapping your components in a scope and rendering strings based on the locale.&lt;br&gt;
With support for formatting dates, numbers, plurals, etc out of the box, it makes handling such translations easy. Moreover, for a fully-fledged translation conversion, you can have translations based on languages you want to support and you can configure React-Intl to pick up the right translation file at runtime.&lt;br&gt;
Read more &lt;a href="https://github.com/formatjs/react-intl/blob/master/docs/Getting-Started.md#introduction"&gt;here&lt;/a&gt;.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#storybook"&gt;
  &lt;/a&gt;
  Storybook
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PtQpDc3G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1100804485616566273/sOct-Txm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PtQpDc3G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1100804485616566273/sOct-Txm.png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://storybook.js.org/"&gt;Storybook&lt;/a&gt; allows you to write and test components in isolation.&lt;br&gt;
When there are multiple people working on UI components that need integration at a later point in time, storybook makes it easier for individual developers to write and test their components in isolation.&lt;br&gt;
Moreover, the storybook also serves as a living document of what has been done so far. You can look at all the components at a glance and check how they behave. You can play with a component by modifying supplied props and testing its behavior.&lt;br&gt;
I may sound crazy if you’ve only worked with a smaller codebase but when projects grow, there are times when a developer ends up writing a component that already existed or a behavior variation of an existing component could have met the purpose. In such cases, the storybook acts as a go-to page to see what components &amp;amp; what behaviors already exist.&lt;br&gt;
Check out how you can add stories to your components and make it available as a storybook, &lt;a href="https://github.com/storybookjs/storybook"&gt;here&lt;/a&gt;.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#react-testing-library"&gt;
  &lt;/a&gt;
  React Testing Library
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lSDYucfB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/testing-library/react-testing-library/main/other/goat.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lSDYucfB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/testing-library/react-testing-library/main/other/goat.png"&gt;&lt;/a&gt;&lt;br&gt;
It comes last in this piece but this is the most important one and a lifesaver when testing React apps.&lt;br&gt;
Based on this principle, and I quote the author,&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;The more your tests resemble the way your software is used, the more confidence they can give you.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;The biggest confusion I have as a developer is when writing tests whether my suite is under mocked or over mocked. Am I testing with the right expectations?&lt;br&gt;
React Testing Library comes up with guidelines about what should be tested, allowing us to test the DOM changes and updates as good as what the end-user will perceive.&lt;br&gt;
Combine it with Jest and you get a robust set of APIs that you need to be able to render your components in isolation, mimic behavioral changes, and observe DOM changes.&lt;br&gt;
Get started &lt;a href="https://testing-library.com/docs/dom-testing-library/intro"&gt;here&lt;/a&gt;.&lt;/p&gt;




&lt;br&gt;&lt;br&gt;
I have listed the tools that have helped me. That said, there may be tools that have helped you, which you think are better than the ones I’ve listed. I’d love to hear about them.

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tooling</category>
    </item>
    <item>
      <title>Highly Rated and Used CSS Properties</title>
      <author>Coder</author>
      <pubDate>Mon, 13 Sep 2021 05:37:30 +0000</pubDate>
      <link>https://dev.to/thesamrtcoderzz/high-rated-and-loved-css-properties-9pf</link>
      <guid>https://dev.to/thesamrtcoderzz/high-rated-and-loved-css-properties-9pf</guid>
      <description>&lt;p&gt;Whether you're at the beginning of your CSS journey or somewhere else, you got to admit - a number of CSS properties is massive.&lt;/p&gt;
&lt;p&gt;And it's easy to confuse yourself in that vast sea. &lt;/p&gt;
&lt;p&gt;You're copying code from StackOverflow until you find a solution that fits. But how will that scale? Why does it even work?&lt;/p&gt;
&lt;p&gt;Most of the time, you don't care about the answer. You just focus on the result.&lt;/p&gt;
&lt;p&gt;When building a website, some of the CSS properties are must-haves; yet, it's hard to recognize them. &lt;/p&gt;
&lt;p&gt;This article exists to help you solve the most common CSS problems while building a website.&lt;/p&gt;
&lt;p&gt;Let's dive into properties you cannot avoid. &lt;/p&gt;

&lt;p&gt;Read More: &lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/all-css-properties-you-need-to-know-to-build-a-website/&amp;amp;ved=2ahUKEwj-otjisOfyAhVJyzgGHXG4CUcQFnoECAMQBQ&amp;amp;usg=AOvVaw2_ALco9oEYEYfcDMBxpqL0&amp;amp;cshid=1630829382032"&gt;&lt;b&gt;High Used and Rated CSS Properties&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>40+ JavaScript Projects for Beginners – Easy Ideas to Get Started Coding JS</title>
      <author>Coder</author>
      <pubDate>Mon, 13 Sep 2021 05:35:31 +0000</pubDate>
      <link>https://dev.to/thesamrtcoderzz/40-javascript-projects-for-beginners-easy-ideas-to-get-started-coding-js-292b</link>
      <guid>https://dev.to/thesamrtcoderzz/40-javascript-projects-for-beginners-easy-ideas-to-get-started-coding-js-292b</guid>
      <description>&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;The best way to learn a new programming language is to build projects.

I have created a list of 40 beginner friendly project tutorials in Vanilla JavaScript, React, and TypeScript.

My advice for tutorials would be to watch the video, build the project, break it apart and rebuild it your own way. Experiment with adding new features or using different methods.

That will test if you have really learned the concepts or not.

You can click on any of the projects listed below to jump to that section of the article.

&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/40-javascript-projects-for-beginners/&amp;amp;ved=2ahUKEwiB9tj0rPjyAhUMX30KHZQ5CG0QFnoECAgQAQ&amp;amp;usg=AOvVaw26RDQjHugdhbATVS83LI83"&gt;40 JavaScript Projects for Beginners – Easy Ideas to Get Started Coding JS

&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Things to know about Event-Driven Architecture </title>
      <author>hridyesh bisht</author>
      <pubDate>Mon, 13 Sep 2021 04:39:40 +0000</pubDate>
      <link>https://dev.to/aws-builders/things-to-know-about-event-driven-architecture-3kk9</link>
      <guid>https://dev.to/aws-builders/things-to-know-about-event-driven-architecture-3kk9</guid>
      <description>&lt;p&gt;Event-driven architecture provides developers with increased availability, elasticity, scalability, and cost optimization. With the rise of microservices and the cloud, event-driven architecture is becoming increasingly important for developers to understand.&lt;/p&gt;

&lt;p&gt;This blog explains what serverless architecture is, when it should be used, and how to use AWS serverless services like API Gateway, Lambda, SQS, SNS, and SES.&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;&lt;em&gt;Q.What do you mean by Serverless?&lt;/em&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;Deploying an application usually requires a server infrastructure. This means either a virtual or physical server needs to be managed, along with its os and prerequisites. Using a virtual server from a cloud provider such as Amazon does eliminate physical constraints, although it still requires some level of customization for the operating system and its software processes.&lt;/p&gt;

&lt;p&gt;The serverless architecture is a way to build and run applications and services without having to manage the infrastructure behind it.  &lt;strong&gt;With a serverless architecture, your application still runs on servers, of course, but the server management is done by AWS. So you focus purely on the individual functions in your application code. &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AWS defines its serverless services as “the native architecture of the cloud that enables you to shift more of your operational responsibilities to AWS, increasing your agility and innovation.”  The diagram below presents the serverless architecture you can deploy in minutes using the solution's implementation guide.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O-8YJllj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/d1.awsstatic.com/product-marketing/Serverless/diagram_serverless-computing_weather-app.216b17d18ea1b3ed6e6e24b2cd9b58264b52058d.png%3Fresize%3D1100%252C405%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O-8YJllj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/d1.awsstatic.com/product-marketing/Serverless/diagram_serverless-computing_weather-app.216b17d18ea1b3ed6e6e24b2cd9b58264b52058d.png%3Fresize%3D1100%252C405%26ssl%3D1" alt=""&gt;&lt;/a&gt;Credits: &lt;a href="https://i1.wp.com/d1.awsstatic.com/product-marketing/Serverless/diagram_serverless-computing_weather-app.216b17d18ea1b3ed6e6e24b2cd9b58264b52058d.png?resize=1100%2C405&amp;amp;ssl=1"&gt;https://i1.wp.com/d1.awsstatic.com/product-marketing/Serverless/diagram_serverless-computing_weather-app.216b17d18ea1b3ed6e6e24b2cd9b58264b52058d.png?resize=1100%2C405&amp;amp;amp;ssl=1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is also known as Function-as-a-Service (FaaS) is a serverless way to execute modular pieces of code, which can be executed in response to an event, such as a user clicking on an element in an application. This makes it easy to develop and deploy microservices with ease. &lt;/p&gt;

&lt;p&gt;As each function can be scaled automatically which is a very cost-effective way of paying for computing resources. You only pay for the times that your functions get called, rather than paying to have your application always on and waiting for requests on so many different instances.&lt;/p&gt;

&lt;h4&gt;
&lt;strong&gt;&lt;em&gt;Q.When and why should you consider serverless&lt;/em&gt;&lt;/strong&gt; ?&lt;/h4&gt;

&lt;p&gt;You should consider using a serverless provider if you have a small number of functions that you need to be deployed. It may make more sense to migrate small pieces of the application into serverless functions over time, as migrating an entire application might be very complex with system architecture.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Cost-effective, a cost is based on the CPU Usage time.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Simplified scalability&lt;/strong&gt;, as the  vendor handles all of the scaling on demand.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Event driven,&lt;/strong&gt; so no need for a complicated deploy process to roll out bug fixes and new features, developers can add and modify code for particular events.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u6wmcWq_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hexaware.com/wp-content/uploads/2020/04/characteristics-of-Serverless-Computing.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u6wmcWq_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hexaware.com/wp-content/uploads/2020/04/characteristics-of-Serverless-Computing.png" alt=""&gt;&lt;/a&gt;Credits: &lt;a href="https://hexaware.com/wp-content/uploads/2020/04/characteristics-of-Serverless-Computing.png"&gt;https://hexaware.com/wp-content/uploads/2020/04/characteristics-of-Serverless-Computing.png&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
&lt;strong&gt;&lt;em&gt;A Few of AWS Serverless services&lt;/em&gt;&lt;/strong&gt;:&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;A.Amazon API Gateway: &lt;/em&gt;&lt;/strong&gt;The AWS API Gateway is a managed service for building, deploying, and scaling various types of APIs. An API Gateway can remove some overhead in managing multiple APIs by monitoring, logging, throttling, caching, and other infrastructural requirements.&lt;/p&gt;

&lt;p&gt;With a few clicks in the AWS Management Console, you can create REST and Web Socket APIs that act as a front door for your applications to access data, business logic, or other AWS services from your back-end services. Some of its other benefits are,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You can run multiple versions of the same API simultaneously with API Gateway. &lt;/li&gt;
&lt;li&gt;You can monitor performance of metrics and information - on API calls, data latency, error rates - from the API Gateway dashboard.&lt;/li&gt;
&lt;li&gt;You can decrease your costs based on the number of API requests you make, per Region, across your AWS accounts. &lt;/li&gt;
&lt;li&gt;You can authorize access to your APIs with AWS Identity and Access Management, or IAM, as well as Amazon Cognito.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GKX5Dzdz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.aws.amazon.com/whitepapers/latest/microservices-on-aws/images/image3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GKX5Dzdz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.aws.amazon.com/whitepapers/latest/microservices-on-aws/images/image3.png" alt=""&gt;&lt;/a&gt;Credits: &lt;a href="https://docs.aws.amazon.com/whitepapers/latest/microservices-on-aws/images/image3.png"&gt;https://docs.aws.amazon.com/whitepapers/latest/microservices-on-aws/images/image3.png&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For more information regarding the implementation of Amazon API Gateway.&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;&lt;li&gt;&lt;a rel="noreferrer noopener" href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-create-api-from-example.html"&gt;https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-create-api-from-example.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;B.AWS Lambda:&lt;/strong&gt; AWS Lambda is a serverless compute service that has been designed to allow you to run your application code without having to manage and provision your own EC2 instances. This saves you from having to maintain and administer an additional layer of technical responsibility within your solution. Instead, that responsibility is passed over to AWS to manage for you.&lt;/p&gt;

&lt;p&gt;Just upload your code, and Lambda takes care of everything required to run and scale your code with high availability and cost-effectiveness as, you pay only for the requests served and the compute time required to run your code for each of those requests.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uvJmgnMM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2019/06/27/Screen-Shot-2019-06-27-at-2.23.51-PM-1024x510.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uvJmgnMM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2019/06/27/Screen-Shot-2019-06-27-at-2.23.51-PM-1024x510.png" alt=""&gt;&lt;/a&gt;Credits: &lt;a href="https://aws.amazon.com/blogs/architecture/understanding-the-different-ways-to-invoke-lambda-functions/"&gt;https://aws.amazon.com/blogs/architecture/understanding-the-different-ways-to-invoke-lambda-functions/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A Lambda function on its own doesn't do much. It needs to be executed. We call that triggers. There are many AWS services that can trigger a Lambda function. When your Lambda function gets executed, Lambda needs to know what piece of your code it needs to execute. That is the entry point for your code(handler). This tells Lambda in which file or class the function to execute is, as well as its name. &lt;/p&gt;

&lt;p&gt;Lambda will use that handler to execute your Lambda from the trigger is received, but your code probably needs to receive some more information about what just triggered it. That information is passed to the handler via what we call an "event payload." &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;C.Simple Queue Service (SQS)&lt;/em&gt;&lt;/strong&gt; is a fully managed service offered by AWS that works with serverless systems, or any distributed architecture.&lt;/p&gt;

&lt;p&gt;It's simply a queueing service for messages between components, It has the capability of sending, storing, and receiving these messages at scale. It is also possible to configure the service using the AWS Management Console, the AWS CLI, or using the AWS SDKs. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The producer component of your architecture is responsible for sending messages to your queue. &lt;/li&gt;
&lt;li&gt;The SQS service stores the message across a number of SQS servers for resiliency within the specified queue. &lt;/li&gt;
&lt;li&gt;Consumers are responsible for processing the messages within your queue.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nicEQOyp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://knowledgehills.com/images/aws/AWS-SQS-Flow.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nicEQOyp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://knowledgehills.com/images/aws/AWS-SQS-Flow.jpg" alt=""&gt;&lt;/a&gt;Credits: &lt;a href="https://knowledgehills.com/images/aws/AWS-SQS-Flow.jpg"&gt;https://knowledgehills.com/images/aws/AWS-SQS-Flow.jpg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When the consumer element of your architecture is ready to process the message from the queue, the message is retrieved and is then marked as being processed by activating the visibility timeout on the message. &lt;strong&gt;This timeout ensures that the same message will not be read and processed by another consumer. When the message has been processed, the consumer then deletes the message from the queue. &lt;/strong&gt;During this period, the consumer processes the message. If it fails to process a message, perhaps due to a communication error, the consumer will not send a delete message request back to SQS. As a result, if the visibility timeout expires and it doesn't receive the request to delete the message, the message will become available again in the queue for other consumers to process.  There are two queues which can be used,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Standard queues, you have unlimited throughput, at-least-once delivery, and best-effort ordering. &lt;/li&gt;
&lt;li&gt;First-in, first-out queues, you have high throughput, first-in, first-out delivery, and exactly-once processing.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A dead-letter queue differs from the standard and FIFA queues as this dead-letter queue is not used as a source queue to hold messages submitted by producers.&lt;strong&gt; Instead, the dead-letter queue is used by the source queue to send messages that fail to process for one reason or another. &lt;/strong&gt;A dead-letter queue must be configured as the same queue type as the source is used against.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;D. Simple Notification Service  (SNS)&lt;/em&gt;&lt;/strong&gt; is used as a publishing and subscribe messaging service. It is centered around topics (group for collecting messages). &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Users over endpoints can then subscribe to this topic and messages or events are then published to that particular topic. &lt;/li&gt;
&lt;li&gt;When a message is published, all subscribers to that topic receive a notification of that message. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;SNS is a managed service and highly scalable, allowing you to distribute messages automatically to all subscribers across your environment, including mobile devices. It can be configured with the AWS management console, the CLI, or the AWS SDK. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gGsXQZMg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2017/11/20/introducing_sns_message_filtering_image_4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gGsXQZMg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2017/11/20/introducing_sns_message_filtering_image_4.png" alt=""&gt;&lt;/a&gt;Credits: &lt;a href="https://aws.amazon.com/blogs/compute/simplify-pubsub-messaging-with-amazon-sns-message-filtering/"&gt;https://aws.amazon.com/blogs/compute/simplify-pubsub-messaging-with-amazon-sns-message-filtering/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SNS uses the concept of publishers and subscribers, similar to SQS. &lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The producers, or publishers, send messages to a topic, which is used as a central communication control point.&lt;/li&gt;
&lt;li&gt;The consumers, or subscribers of the topic, are then notified of this message by HTTP, HTTPS, Email, Email-JSON, etc ... . &lt;/li&gt;
&lt;li&gt;SNS offers methods of controlling specific access to your topics through a topic policy. The policy themselves follow the same format as IAM policies.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;By integrating SNS and SQS with each other, together, a solution can be designed to send messages to subscribers through a push method.  To do this, you'll need to have your SQS queue subscribed to the SNS topic. &lt;/strong&gt; Integration with  AWS Lambda allows SNS notifications to invoke existing Lambda functions. Like SQS, the Lambda function has to be subscribed to the topic. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;For more information on SNS,&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/mobile/invoking-aws-lambda-functions-via-amazon-sns/" rel="noreferrer noopener"&gt;https://aws.amazon.com/blogs/mobile/invoking-aws-lambda-functions-via-amazon-sns/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/compute/simplify-pubsub-messaging-with-amazon-sns-message-filtering/" rel="noreferrer noopener"&gt;https://aws.amazon.com/blogs/compute/simplify-pubsub-messaging-with-amazon-sns-message-filtering/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;E. Simple Email Service (SES)&lt;/em&gt;&lt;/strong&gt; makes it possible to handle an automated email system to communicate with your customers. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When receiving emails, you can architect your application to respond automatically to incoming emails, such as a request to unsubscribe from newsletter.&lt;/li&gt;
&lt;li&gt;When sending emails, you can architect your application to emails automatically for an event, such as email confirmation. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;AWS will automatically scan for spam and viruses, and reject any messages from untrusted sources. When receiving an email, there are two ways to configure SES to instruct it as to what to do with the email. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Recipient-based control, you set up configurations to direct the email based on the recipient. These recipient lists are classed as conditions. Receipt rules are used to control what action is taken when a condition is met. &lt;/li&gt;
&lt;li&gt;IP address-based control defines what happens to your email based on its source IP address. This method allows you to select if email should be accepted or rejected based on its originating IP address. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r5ctru9h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/632667547e7cd3e0466547863e1207a8c0c0c549/2020/11/18/blogses_diagram.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r5ctru9h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/632667547e7cd3e0466547863e1207a8c0c0c549/2020/11/18/blogses_diagram.jpg" alt=""&gt;&lt;/a&gt;Credits: &lt;a href="https://aws.amazon.com/blogs/messaging-and-targeting/auto-reply-to-incoming-emails-using-amazon-simple-email-service-ses/"&gt;https://aws.amazon.com/blogs/messaging-and-targeting/auto-reply-to-incoming-emails-using-amazon-simple-email-service-ses/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For more information on event-driven architecture,&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;&lt;li&gt;&lt;strong&gt;&lt;a rel="noreferrer noopener" href="https://aws.amazon.com/event-driven-architecture/"&gt;https://aws.amazon.com/event-driven-architecture/&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&lt;/ol&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
    </item>
    <item>
      <title>8 resources to start with opensource immediately</title>
      <author>Tapas Adhikary</author>
      <pubDate>Mon, 13 Sep 2021 04:17:41 +0000</pubDate>
      <link>https://dev.to/atapas/8-resources-to-start-with-opensource-immediately-abb</link>
      <guid>https://dev.to/atapas/8-resources-to-start-with-opensource-immediately-abb</guid>
      <description>&lt;p&gt;An open-source software or application is publicly available for us to use and contribute to it. We can contribute to its source code, documentation, writing articles about it, and many more. &lt;/p&gt;

&lt;p&gt;There are many advantages in contributing to open source communities. A few are, &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Upskill yourself.&lt;/li&gt;
&lt;li&gt;Make the software/application better with code &amp;amp; documentation.&lt;/li&gt;
&lt;li&gt;Meet like-minded people, build networks.&lt;/li&gt;
&lt;li&gt;Understand the application development, maintenance cycles.&lt;/li&gt;
&lt;li&gt;Learn how to manage your code as open source.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For many beginners, the common question is,&lt;br&gt;
&lt;strong&gt;&lt;em&gt;How to get started with the Opensource contributions?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here is a list of eight resources to get you started immediately with it. Also, I have a bonus for you at the end of the list.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#1-github-explore"&gt;
  &lt;/a&gt;
  1. GitHub Explore
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--udhTCXws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631380194378/h-7mamXzu.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--udhTCXws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631380194378/h-7mamXzu.jpeg" alt="github-explore.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔗 Link: &lt;a href="https://github.com/explore/"&gt;https://github.com/explore/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Find repositories based on your interest.&lt;/li&gt;
&lt;li&gt;You can set the notification to get informed.&lt;/li&gt;
&lt;li&gt;Search repositories by topics, trends.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#2-contributor-ninja"&gt;
  &lt;/a&gt;
  2. Contributor Ninja
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i6IyZ5gE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631379928844/ERPm7E_yK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i6IyZ5gE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631379928844/ERPm7E_yK.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔗 Link: &lt;a href="https://contributor.ninja/"&gt;https://contributor.ninja/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It provides you a list of languages to chose from, JS, HTML, rust, go, and many more.&lt;/li&gt;
&lt;li&gt;You get the cards of repositories to select from. A simple place to get started.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#3-first-contributions"&gt;
  &lt;/a&gt;
  3. First Contributions
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZIRj5sNT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631380064161/yE713KnmK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZIRj5sNT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631380064161/yE713KnmK.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔗 Link: &lt;a href="https://firstcontributions.github.io/"&gt;https://firstcontributions.github.io/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A vast list of open-source projects to search and filter.&lt;/li&gt;
&lt;li&gt;A very well-guided documentation to get started.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#4-code-triage"&gt;
  &lt;/a&gt;
  4. Code Triage
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kk20kNPW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631379778513/2_TITtOhy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kk20kNPW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631379778513/2_TITtOhy.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔗 Link: &lt;a href="https://www.codetriage.com/"&gt;https://www.codetriage.com/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mammoth list of projects with open issues.&lt;/li&gt;
&lt;li&gt;Shows a separation of issues and docs to triage. The website is beneficial.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#5-up-for-grabs"&gt;
  &lt;/a&gt;
  5. Up for Grabs
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jmUzyRJW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631379726650/1nKI3V5Jc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jmUzyRJW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631379726650/1nKI3V5Jc.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔗 Link: &lt;a href="https://up-for-grabs.net/#/"&gt;https://up-for-grabs.net/#/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A comprehensive list of opensource projects to pick from based on your interest.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#6-good-first-issues"&gt;
  &lt;/a&gt;
  6. Good First Issues
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A0AunULn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631379663082/l_bTSZZ4f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A0AunULn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631379663082/l_bTSZZ4f.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔗 Link: &lt;a href="https://goodfirstissues.com/"&gt;https://goodfirstissues.com/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Perfect place to get started.&lt;/li&gt;
&lt;li&gt;Find repositories and issues based on your interest.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#7-first-timers-only"&gt;
  &lt;/a&gt;
  7. First Timers Only
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---LJFErrn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631379596598/gFCDyZ100.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---LJFErrn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631379596598/gFCDyZ100.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔗 Link: &lt;a href="https://www.firsttimersonly.com/"&gt;https://www.firsttimersonly.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have never contributed to an open-source project before and you’re just getting started, consider reading this page. &lt;/p&gt;

&lt;p&gt;You may see many sources we have already discussed, but the page is full of motivations.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#8-open-source-friday"&gt;
  &lt;/a&gt;
  8. Open Source Friday
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h9VT4-M1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631379529218/Hu0qkIQO_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h9VT4-M1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631379529218/Hu0qkIQO_.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔗 Link: &lt;a href="https://opensourcefriday.com/"&gt;https://opensourcefriday.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What are you doing this Friday, or the next one? How about investing a few hours contributing to the software you use and love? Please check this out and register.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Here is a comprehensive documentation of resources from &lt;code&gt;freeCodeCamp&lt;/code&gt; to get started with the open-source contributions. Apart from various resources, it also provides information about tools, tips &amp;amp;t tricks, articles, and ecosystems—a must-read for beginners.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/freeCodeCamp"&gt;
        freeCodeCamp
      &lt;/a&gt; / &lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source"&gt;
        how-to-contribute-to-open-source
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A guide to contributing to open source
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;


&lt;strong&gt; Read this guide in other languages &lt;/strong&gt;

    &lt;ul&gt;
        &lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source./README.md"&gt; English &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source./README-MR.md"&gt; मराठी &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source./README-BN.md"&gt; বাংলা &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source./README-CN.md"&gt; 中文 &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source./README-RU.md"&gt; русский &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source./README-RO.md"&gt; Românesc &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source./README-IT.md"&gt; Italiano &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source./README-ES.md"&gt; Español &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source./README-pt-BR.md"&gt; Português (BR) &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source./README-DE.md"&gt; Deutsch &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source./README-GR.md"&gt; Ελληνικά &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source./README-FR.md"&gt; Français &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source./README-KO.md"&gt; 한국어 &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source./README-JA.md"&gt; 日本語 &lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;h1&gt;
Welcome newbie Open Source contributors!&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://makeapullrequest.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/58e45dedeb7342e0487c805f92b20dd215e093f18137b3abd5fe37de7c49088e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c6174" alt="Pull Requests Welcome"&gt;&lt;/a&gt;
&lt;a href="https://www.firsttimersonly.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/afdaea001be5a8c3fe777c0353fca25dcfa1bc80d464067351e1daaa6a678b05/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f66697273742d2d74696d6572732d2d6f6e6c792d667269656e646c792d626c75652e737667" alt="first-timers-only Friendly"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/freeCodeCamp/how-to-contribute-to-open-source" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a903b667cd52c14f038742d977aaa5678d54595165a7e1e28814ff028b0c0177/68747470733a2f2f6170692e7472617669732d63692e6f72672f66726565436f646543616d702f686f772d746f2d636f6e747269627574652d746f2d6f70656e2d736f757263652e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a list of resources for people who are new to contributing to Open Source.&lt;/p&gt;
&lt;p&gt;If you find additional resources, please contribute a pull request.&lt;/p&gt;
&lt;p&gt;If you have questions or comments, please create an issue.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source#contributing-to-open-source-in-general"&gt;Contributing to Open Source in general&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source#direct-github-searches"&gt;Direct GitHub searches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source#mozillas-contributor-ecosystem"&gt;Mozilla's contributor ecosystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source#useful-articles-for-new-open-source-contributors"&gt;Useful articles for new Open Source contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source#using-version-control"&gt;Using Version Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source#open-source-books"&gt;Open Source books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source#open-source-contribution-initiatives"&gt;Open Source contribution initiatives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source#open-source-programs-to-participate-in"&gt;Open Source programs to participate in&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Contributing to Open Source in general&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.freecodecamp.org/news/the-definitive-guide-to-contributing-to-open-source-900d5f9f2282/" rel="nofollow"&gt;The Definitive Guide to Contributing to Open Source&lt;/a&gt; by &lt;a href="https://twitter.com/DoomHammerNG" rel="nofollow"&gt;@DoomHammerNG&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.digitalocean.com/community/tutorial_series/an-introduction-to-open-source" rel="nofollow"&gt;An Intro to Open Source&lt;/a&gt; - Tutorials by DigitalOcean to guide you on your way to contribution success here on GitHub.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://issuehub.pro/" rel="nofollow"&gt;Issuehub.pro&lt;/a&gt; - a tool for searching GitHub issues by label and language.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.codetriage.com/" rel="nofollow"&gt;Code Triage&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Another invaluable article by Catalin Pit: &lt;a href="https://catalins.tech/getting-started-with-open-source-how-to-contribute-as-a-beginner"&gt;Getting Started With Open-Source: How To Contribute As A Beginner&lt;/a&gt; is a must-read.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's all for now. The eight resources discussed in this article was initially published as a Twitter thread,&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--jpJ_XdNK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1433475384482275351/geM4Q3QC_normal.jpg" alt="Tapas Adhikary profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Tapas Adhikary
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @tapasadhikary
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Looking forward to contributing to OPENSOURCE? Here are 8 RESOURCES to get you started immediately.&lt;br&gt;&lt;br&gt;A 🧵  👇
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:07 PM - 08 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1435590663035310086" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1435590663035310086" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1435590663035310086" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;




&lt;br&gt;
&lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest 2021&lt;/a&gt; is just around the corner. I hope this guide helps you to get started.

&lt;p&gt;Let's connect. You can follow me on,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/tapasadhikary"&gt;Twitter(@tapasadhikary)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/tapasadhikary"&gt;Youtube(tapasadhikary)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/atapas"&gt;GitHub(atapas)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/tapasadhikary/"&gt;LinkedIn(tapasadhikary)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>opensource</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>github</category>
    </item>
    <item>
      <title>Python 🤫 Hidden Syntax 🤫, You'll be using always from now 😝</title>
      <author>Rajesh Joshi</author>
      <pubDate>Mon, 13 Sep 2021 02:35:25 +0000</pubDate>
      <link>https://dev.to/rajeshj3/python-hidden-syntax-you-ll-be-using-always-from-now-3lfe</link>
      <guid>https://dev.to/rajeshj3/python-hidden-syntax-you-ll-be-using-always-from-now-3lfe</guid>
      <description>&lt;h2&gt;
  &lt;a href="#ellipsis"&gt;
  &lt;/a&gt;
  Ellipsis
&lt;/h2&gt;

&lt;p&gt;Use ... (Ellipsis), an alternative to &lt;code&gt;pass&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#single-line-return"&gt;
  &lt;/a&gt;
  single line return
&lt;/h2&gt;

&lt;p&gt;For single line utility functions use, single line return statement.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Welcome!"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#document-your-functions"&gt;
  &lt;/a&gt;
  Document Your Functions
&lt;/h2&gt;

&lt;p&gt;To get proper documented Classes or functions with auto-completion define types of parameters and return types&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;rectangle_area&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;area&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;area&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZjI5xyK_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h7999vuuuvg3a0n2hyf7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZjI5xyK_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h7999vuuuvg3a0n2hyf7.png" alt="Python 🤫 Hidden Syntax 🤫, You'll be using always from now 😝"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#clever-use-of-raw-type-endraw-method"&gt;
  &lt;/a&gt;
  Clever use of &lt;code&gt;type()&lt;/code&gt; method
&lt;/h2&gt;

&lt;p&gt;Call type function to know default value of any datatype.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;512&lt;/span&gt;&lt;span class="p"&gt;)()&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)()&lt;/span&gt;
&lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, Use for type checking&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Apple'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;
&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'3'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;
&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks and Cheers&lt;br&gt;
RajeshJ3&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>EKS Anywhere: The What, The Why and The How</title>
      <author>Abhay Krishna Arunachalam</author>
      <pubDate>Mon, 13 Sep 2021 02:00:44 +0000</pubDate>
      <link>https://dev.to/abhaykrishna/eks-anywhere-the-what-the-why-and-the-how-1h67</link>
      <guid>https://dev.to/abhaykrishna/eks-anywhere-the-what-the-why-and-the-how-1h67</guid>
      <description>&lt;p&gt;AWS recently made the headlines with the launch of Amazon EKS Anywhere, a new and much-awaited deployment option for Amazon Elastic Kubernetes Service (EKS). But what is it and how can you benefit from it? Read on to find out!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-what"&gt;
  &lt;/a&gt;
  The What
&lt;/h1&gt;

&lt;p&gt;Amazon EKS Anywhere is an open-source offering through which customers can host and operate secure, reliable Kubernetes clusters on-premises. It allows you to stay completely off AWS infrastructure (why, you don't even need an AWS account to get started) while offering a cluster management experience on par with EKS. &lt;/p&gt;

&lt;p&gt;EKS Anywhere builds on the strengths of &lt;a href="https://github.com/aws/eks-distro"&gt;Amazon EKS Distro&lt;/a&gt;, the same open-source distribution of Kubernetes that is used by Amazon EKS on the cloud, thus fostering consistency and compatibility between clusters both on AWS as well as on-premises.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-why"&gt;
  &lt;/a&gt;
  The Why
&lt;/h1&gt;

&lt;p&gt;This section covers the motivation for using EKS Anywhere. &lt;/p&gt;

&lt;p&gt;To understand better how EKS Anywhere may be more suited to customer needs, we will first need to understand the high-level architecture of EKS clusters. An Amazon EKS cluster consists of two primary components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The Amazon EKS control plane, consisting of nodes running components such as the Kubernetes API Server, Controller Manager, Scheduler, &lt;code&gt;etcd&lt;/code&gt;, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Worker nodes that are registered with the control plane and run customer workloads.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The control plane is provisioned on AWS infrastructure in an account managed by EKS, while the worker nodes run in customer accounts, thus providing a managed Kubernetes experience on AWS.&lt;/p&gt;

&lt;p&gt;However, some customers may have applications that need to run on-premises due to regulatory, latency, and data residency requirements as well as requirements to leverage existing infrastructure investments. With EKS Anywhere, both control plane and application workloads run on the customer infrastructure, thus providing complete flexibility to the cluster administrator. Also, customers can make use of the &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-connector.html"&gt;EKS Connector*&lt;/a&gt; to connect EKS Anywhere clusters running on their infrastructure to the EKS console, for a centralized view of their on-premises clusters and workloads along with EKS clusters.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;*In public preview&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-how"&gt;
  &lt;/a&gt;
  The How
&lt;/h1&gt;

&lt;p&gt;EKS Anywhere currently supports customer-managed vSphere infrastructure provider as the production-grade deployment environment for Kubernetes clusters, with bare-metal support coming in 2022. For local development and testing, it also supports the Docker provider, wherein the control plane and worker nodes are provisioned as Docker containers. The Docker provider is not intended to be used in production environments.&lt;/p&gt;

&lt;p&gt;In this section, I shall demonstrate a step-by-step walkthrough of creating an EKS Anywhere cluster with the Docker provider. Fasten your seatbelts for an &lt;em&gt;EKS&lt;/em&gt;-iting adventure!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;At its core, EKS Anywhere provides an installable CLI &lt;code&gt;eksctl-anywhere&lt;/code&gt; that allows users to create a fully-functional Kubernetes cluster in a matter of minutes. The CLI is provided as an extension to &lt;code&gt;eksctl&lt;/code&gt;, a command-line tool for creating clusters on Amazon EKS. These two binaries and a running Docker environment are all you need to create an EKS Anywhere cluster.&lt;/p&gt;

&lt;p&gt;You can install both &lt;code&gt;eksctl&lt;/code&gt; and &lt;code&gt;eksctl-anywhere&lt;/code&gt; directly using Homebrew on MacOS and Linux. In addition, it is a good idea to install &lt;code&gt;kubectl&lt;/code&gt; for interacting with your cluster post-creation&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;brew &lt;span class="nb"&gt;install &lt;/span&gt;aws/tap/eks-anywhere
brew &lt;span class="nb"&gt;install &lt;/span&gt;kubectl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#cluster-creation"&gt;
  &lt;/a&gt;
  Cluster creation
&lt;/h2&gt;

&lt;p&gt;The first step in creating an EKS Anywhere cluster is to generate a cluster config for the desired infrastructure provider. This is a manifest containing the cluster spec that allows you to declaratively manage your EKS Anywhere cluster. Before we proceed, let us give our cluster a suitable name that will be used as a reference for all future operations.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;CLUSTER_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;eks-anywhere-test
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The following command generates the cluster config for the Docker provider, with default replica counts, networking and external &lt;code&gt;etcd&lt;/code&gt; configurations.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;eksctl anywhere generate clusterconfig &lt;span class="nv"&gt;$CLUSTER_NAME&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; docker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Running the above command will generate the following output.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apiVersion: anywhere.eks.amazonaws.com/v1alpha1
kind: Cluster
metadata:
  name: eks-anywhere-test
spec:
  clusterNetwork:
    cni: cilium
    pods:
      cidrBlocks:
      - 192.168.0.0/16
    services:
      cidrBlocks:
      - 10.96.0.0/12
  controlPlaneConfiguration:
    count: 1
  datacenterRef:
    kind: DockerDatacenterConfig
    name: eks-anywhere-test
  externalEtcdConfiguration:
    count: 1
  kubernetesVersion: "1.21"
  workerNodeGroupConfigurations:
  - count: 1

---
apiVersion: anywhere.eks.amazonaws.com/v1alpha1
kind: DockerDatacenterConfig
metadata:
  name: eks-anywhere-test
spec: {}

---
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If desired, you may modify the spec as per your requirements. EKS Anywhere supports both stacked and unstacked &lt;code&gt;etcd&lt;/code&gt; topologies, with the latter being the default. If you prefer to use stacked &lt;code&gt;etcd&lt;/code&gt;, you can remove the &lt;code&gt;externalEtcdConfiguration&lt;/code&gt; section from the spec.&lt;/p&gt;

&lt;p&gt;For the purpose of this tutorial, we shall use the default values generated by the command. In order to use the config for cluster operations, the cluster config must be stored in a file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;eksctl anywhere generate clusterconfig &lt;span class="nv"&gt;$CLUSTER_NAME&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; docker &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLUSTER_NAME&lt;/span&gt;.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now for the fun part - actually creating the cluster!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;eksctl anywhere create cluster &lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="nv"&gt;$CLUSTER_NAME&lt;/span&gt;.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command will kick-start the cluster creation and update the progress on each step in the creation workflow. A detailed explanation of the workflow is provided &lt;a href="https://anywhere.eks.amazonaws.com/docs/concepts/clusterworkflow/"&gt;here&lt;/a&gt;. Optionally, you can set an appropriate verbosity level (0 through 9) using the &lt;code&gt;-v&lt;/code&gt; flag for more verbose logging and for a deeper understanding of what is going on behind the scenes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Performing setup and validations
✅ Docker Provider setup is valid
Creating new bootstrap cluster
Installing cluster-api providers on bootstrap cluster
Provider specific setup
Creating new workload cluster
Installing networking on workload cluster
Installing storage class on workload cluster
Installing cluster-api providers on workload cluster
Moving cluster management from bootstrap to workload cluster
Installing EKS-A custom components &lt;span class="o"&gt;(&lt;/span&gt;CRD and controller&lt;span class="o"&gt;)&lt;/span&gt; on workload cluster
Creating EKS-A CRDs instances on workload cluster
Installing AddonManager and GitOps Toolkit on workload cluster
GitOps field not specified, bootstrap flux skipped
Writing cluster config file
Deleting bootstrap cluster
🎉 Cluster created!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Woot, we have created our first EKS Anywhere cluster! The whole process should take around 8-15 minutes or so.&lt;/p&gt;

&lt;p&gt;The CLI creates a folder with the same name as the cluster and places a kubeconfig file with Admin privileges inside this folder. This kubeconfig file can be used to interact with our EKS Anywhere cluster.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;KUBECONFIG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;/&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CLUSTER_NAME&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;/&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CLUSTER_NAME&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="nt"&gt;-eks-a-cluster&lt;/span&gt;.kubeconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us look at the pods to verify that they are all running.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;kubectl get pods &lt;span class="nt"&gt;-A&lt;/span&gt;
NAMESPACE                           NAME                                                             READY   STATUS    RESTARTS   AGE
capd-system                         capd-controller-manager-659dd5f8bc-wj4hl                         2/2     Running   0          1m
capi-kubeadm-bootstrap-system       capi-kubeadm-bootstrap-controller-manager-69889cb844-m87x8       2/2     Running   0          1m
capi-kubeadm-control-plane-system   capi-kubeadm-control-plane-controller-manager-6ddc66fb75-hz4hm   2/2     Running   0          1m
capi-system                         capi-controller-manager-db59f5789-sjnv5                          2/2     Running   0          1m
capi-webhook-system                 capi-controller-manager-64b8c548db-kwntg                         2/2     Running   0          1m
capi-webhook-system                 capi-kubeadm-bootstrap-controller-manager-68b8cc9759-7zczt       2/2     Running   0          1m
capi-webhook-system                 capi-kubeadm-control-plane-controller-manager-7dc88f767d-p7bbk   2/2     Running   0          1m
cert-manager                        cert-manager-5f6b885b4-8l5f9                                     1/1     Running   0          2m
cert-manager                        cert-manager-cainjector-bb6d9bcb5-jr7x2                          1/1     Running   0          2m
cert-manager                        cert-manager-webhook-56cbc8f5b8-47wmg                            1/1     Running   0          2m
eksa-system                         eksa-controller-manager-6769764b45-gw6sp                         2/2     Running   0          1m
etcdadm-bootstrap-provider-system   etcdadm-bootstrap-provider-controller-manager-54476b7bf9-8fr2k   2/2     Running   0          1m
etcdadm-controller-system           etcdadm-controller-controller-manager-d5795556-d9cmz             2/2     Running   0          1m
kube-system                         cilium-operator-6bf46cc6c6-j5c8v                                 1/1     Running   0          2m
kube-system                         cilium-operator-6bf46cc6c6-vsf79                                 1/1     Running   0          2m
kube-system                         cilium-q4gg6                                                     1/1     Running   0          2m
kube-system                         cilium-xgffq                                                     1/1     Running   0          2m
kube-system                         coredns-7c68f85774-4kvcb                                         1/1     Running   0          2m
kube-system                         coredns-7c68f85774-9z9kn                                         1/1     Running   0          2m
kube-system                         kube-apiserver-eks-anywhere-test-29qnl                           1/1     Running   0          2m
kube-system                         kube-controller-manager-eks-anywhere-test-29qnl                  1/1     Running   0          2m
kube-system                         kube-proxy-2fx4g                                                 1/1     Running   0          2m
kube-system                         kube-proxy-r4cc8                                                 1/1     Running   0          2m
kube-system                         kube-scheduler-eks-anywhere-test-29qnl                           1/1     Running   0          2m

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using the following command, we can fetch the container images running on our pods, and verify that the control plane images, i.e., API server, Controller Manager, etc are all vended by EKS Distro.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl get pods &lt;span class="nt"&gt;-A&lt;/span&gt; &lt;span class="nt"&gt;-o&lt;/span&gt; yaml | yq e &lt;span class="s1"&gt;'.items[] | .spec.containers[] | .image'&lt;/span&gt; - | &lt;span class="nb"&gt;sort&lt;/span&gt; &lt;span class="nt"&gt;-ur&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;public.ecr.aws/eks-anywhere/brancz/kube-rbac-proxy:v0.8.0-eks-a-1
public.ecr.aws/eks-anywhere/cluster-controller:v0.5.0-eks-a-1
public.ecr.aws/eks-anywhere/jetstack/cert-manager-cainjector:v1.1.0-eks-a-1
public.ecr.aws/eks-anywhere/jetstack/cert-manager-controller:v1.1.0-eks-a-1
public.ecr.aws/eks-anywhere/jetstack/cert-manager-webhook:v1.1.0-eks-a-1
public.ecr.aws/eks-anywhere/kubernetes-sigs/cluster-api/capd-manager:v0.3.23-eks-a-1
public.ecr.aws/eks-anywhere/kubernetes-sigs/cluster-api/cluster-api-controller:v0.3.23-eks-a-1
public.ecr.aws/eks-anywhere/kubernetes-sigs/cluster-api/kubeadm-bootstrap-controller:v0.3.23-eks-a-1
public.ecr.aws/eks-anywhere/kubernetes-sigs/cluster-api/kubeadm-control-plane-controller:v0.3.23-eks-a-1
public.ecr.aws/eks-anywhere/mrajashree/etcdadm-bootstrap-provider:v0.1.0-beta-4.1-eks-a-1
public.ecr.aws/eks-anywhere/mrajashree/etcdadm-controller:v0.1.0-beta-4.1-eks-a-1
public.ecr.aws/eks-distro/coredns/coredns:v1.8.3-eks-1-21-4
public.ecr.aws/eks-distro/kubernetes/kube-apiserver:v1.21.2-eks-1-21-4
public.ecr.aws/eks-distro/kubernetes/kube-controller-manager:v1.21.2-eks-1-21-4
public.ecr.aws/eks-distro/kubernetes/kube-proxy:v1.21.2-eks-1-21-4
public.ecr.aws/eks-distro/kubernetes/kube-scheduler:v1.21.2-eks-1-21-4
public.ecr.aws/isovalent/cilium:v1.9.10-eksa.1
public.ecr.aws/isovalent/operator-generic:v1.9.10-eksa.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Upon retrieving the nodes, we can see that our cluster has one control plane ("master") node and one worker node as specified in our manifest.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;kubectl get nodes
NAME                                      STATUS   ROLES                  AGE   VERSION
eks-anywhere-test-29qnl                   Ready    control-plane,master   4m   v1.21.2-eks-1-21-4
eks-anywhere-test-md-0-7796db4bdd-4wmd5   Ready    &amp;lt;none&amp;gt;                 3m   v1.21.2-eks-1-21-4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To log onto a node, we can simply run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker &lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="nt"&gt;-it&lt;/span&gt; &amp;lt;node name&amp;gt; bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h2&gt;

&lt;p&gt;Let us test our EKS Anywhere cluster by deploying a simple Nginx service.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;apiVersion: apps/v1
kind: Deployment
metadata:
  name: eks-anywhere-nginx-test
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 3
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: public.ecr.aws/nginx/nginx:latest
        ports:
        - containerPort: 8080
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can create the Nginx workload using the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; eks-anywhere-nginx-test.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will provision 3 pods for our application in the &lt;code&gt;default&lt;/code&gt; namespace.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;```NAME                                       READY   STATUS    RESTARTS   AGE&lt;br&gt;
eks-anywhere-nginx-test-7676d696c8-c5ths   1/1     Running   0          1m&lt;br&gt;
eks-anywhere-nginx-test-7676d696c8-c76lf   1/1     Running   0          1m&lt;br&gt;
eks-anywhere-nginx-test-7676d696c8-m25r5   1/1     Running   0          1m&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;

To test our application, we can use the following command to forward the deployment port to our host machine port 80.


```shell
$ kubectl port-forward deploy/eks-anywhere-nginx-test 8080:80
Forwarding from 127.0.0.1:8080 -&amp;gt; 80
Forwarding from [::1]:8080 -&amp;gt; 80
Handling connection for 8080
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then, when we navigate to &lt;code&gt;localhost:8080&lt;/code&gt; on the browser, we are greeted by the Nginx welcome page.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rFX7YEOf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mixbk8eszp0i9smzmyo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rFX7YEOf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mixbk8eszp0i9smzmyo.png" alt="Nginx welcome page"&gt;&lt;/a&gt;&lt;br&gt;
Alternatively, we can fetch the contents of the site using &lt;code&gt;curl&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl localhost:8080
&amp;lt;&lt;span class="o"&gt;!&lt;/span&gt;DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;&lt;span class="nb"&gt;head&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&amp;lt;title&amp;gt;Welcome to nginx!&amp;lt;/title&amp;gt;
&amp;lt;style&amp;gt;
html &lt;span class="o"&gt;{&lt;/span&gt; color-scheme: light dark&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
body &lt;span class="o"&gt;{&lt;/span&gt; width: 35em&lt;span class="p"&gt;;&lt;/span&gt; margin: 0 auto&lt;span class="p"&gt;;&lt;/span&gt;
font-family: Tahoma, Verdana, Arial, sans-serif&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Welcome to nginx!&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;For online documentation and support please refer to
&amp;lt;a &lt;span class="nv"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"http://nginx.org/"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;nginx.org&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;
Commercial support is available at
&amp;lt;a &lt;span class="nv"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"http://nginx.com/"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;nginx.com&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;Thank you &lt;span class="k"&gt;for &lt;/span&gt;using nginx.&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thus, we have successfully created and tested our EKS Anywhere cluster. If you wish to go one step further, you can deploy the deploy the Kubernetes Dashboard UI for your cluster using the intstructions &lt;a href="https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cluster-deletion"&gt;
  &lt;/a&gt;
  Cluster deletion
&lt;/h2&gt;

&lt;p&gt;After testing, the cluster can be deleted using the command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;eksctl anywhere delete cluster &lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="nv"&gt;$CLUSTER_NAME&lt;/span&gt;.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That brings us to the end of this walkthrough. Thank you very much for reading and I hope you will give EKS Anywhere a spin. The complete documentation is available &lt;a href="https://anywhere.eks.amazonaws.com/"&gt;here&lt;/a&gt;. If you are interested in contributing, please open an issue or pull request on the &lt;a href="https://github.com/aws/eks-anywhere"&gt;EKS Anywhere GitHub repo&lt;/a&gt;. Let me know your thoughts in the comments below. If you have more questions, feel free to reach out to me on &lt;a href="https://www.linkedin.com/in/abhayk96/"&gt;LinkedIn&lt;/a&gt; or &lt;a href="https://twitter.com/abhay_krishna96"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>showdev</category>
      <category>aws</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Using Generators in Python: The Why, The What, and The When</title>
      <author>Jerry Ng</author>
      <pubDate>Mon, 13 Sep 2021 00:43:52 +0000</pubDate>
      <link>https://dev.to/jerrynsh/using-generators-in-python-the-why-the-what-and-the-when-55l</link>
      <guid>https://dev.to/jerrynsh/using-generators-in-python-the-why-the-what-and-the-when-55l</guid>
      <description>&lt;p&gt;Today, “what are Generators in Python” and “what are Generators used for in Python” are some of the most popular Python interview questions.&lt;/p&gt;

&lt;p&gt;Often, &lt;a href="https://wiki.python.org/moin/Generators"&gt;Generator&lt;/a&gt; is considered as one of the more intermediate concepts in Python. If you are new to learning Python, you may not have come across Generator before. Here’s a tip, it has something to do with the use of &lt;code&gt;yield&lt;/code&gt; statements inside a function.&lt;/p&gt;

&lt;p&gt;In this post, I am going to highlight some of the use cases, reasons, and advantages of using Generators in Python. In short, you should consider using Generators when dealing with large datasets with memory constraints.&lt;/p&gt;

&lt;p&gt;Let’s dive a little bit deeper, shall we?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  Consider using Generator when dealing with a huge dataset&lt;/li&gt;
&lt;li&gt;  Consider using Generator in scenarios where we do not need to reiterate it more than once&lt;/li&gt;
&lt;li&gt;  Generators give us lazy evaluation&lt;/li&gt;
&lt;li&gt;  They are a great way to generate sequences in a memory-efficient manner&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#why-should-i-care-about-using-generators"&gt;
  &lt;/a&gt;
  Why Should I Care About Using Generators
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#memory-constraints"&gt;
  &lt;/a&gt;
  Memory constraints
&lt;/h3&gt;

&lt;p&gt;To understand why you should use Generators, we have to first understand that computers have a finite amount of memory (&lt;a href="https://en.wikipedia.org/wiki/Random-access_memory"&gt;RAM&lt;/a&gt;). Whenever we are storing or manipulating variables, lists, etc., all that is being stored inside our memory.&lt;/p&gt;

&lt;p&gt;You might ask, why do computer programs store them in memory? Because it’s the fastest way for us to write and retrieve data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scenarios"&gt;
  &lt;/a&gt;
  Scenarios
&lt;/h3&gt;

&lt;p&gt;Have you ever had to work with a list so large that you run into &lt;code&gt;MemoryError&lt;/code&gt;? Perhaps, you have tried reading rows from a super large Excel (or &lt;code&gt;.csv&lt;/code&gt;) file.&lt;/p&gt;

&lt;p&gt;All I remember was that performing these tasks is painfully slow or impossible.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-a-generator-function"&gt;
  &lt;/a&gt;
  What Is a Generator Function
&lt;/h2&gt;

&lt;p&gt;To put it simply, a Generator function is a special kind of function that returns many items. The point here is that the items are returned one by one rather than all at once.&lt;/p&gt;

&lt;p&gt;The main difference between a regular function and a Generator function lies in the use of &lt;code&gt;return&lt;/code&gt; and &lt;code&gt;yield&lt;/code&gt; statements in Python.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#generators-give-you-lazy-evaluation"&gt;
  &lt;/a&gt;
  Generators give you lazy evaluation
&lt;/h3&gt;

&lt;p&gt;You may have come across this statement. But, what does it really mean?&lt;/p&gt;

&lt;p&gt;If you are familiar with &lt;a href="https://www.w3schools.com/python/python_iterators.asp"&gt;Iterator&lt;/a&gt;, a Generator function is essentially a function that behaves just like that.&lt;/p&gt;

&lt;p&gt;Behind the scene, Generators don’t compute the value of each item when being instantiated. Rather, they compute it when we ask for it. This is what people mean by Generators give you lazy evaluation.&lt;/p&gt;

&lt;p&gt;As a result, Generators allow us to process and deal with one value at a time without having to load everything in memory first.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#when-and-where-should-i-use-generators"&gt;
  &lt;/a&gt;
  When and Where Should I Use Generators
&lt;/h2&gt;

&lt;p&gt;Generators are great when you encounter problems that require you to read from a large dataset. Reading from a large dataset means our computer or server would have to allocate memory for it.&lt;/p&gt;

&lt;p&gt;The only condition to remember is that a Generator can only be iterated &lt;strong&gt;once&lt;/strong&gt;. In other words, as long as we do not need the previous value from our dataset, we can always use Generator.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reading-sizable-csv"&gt;
  &lt;/a&gt;
  Reading sizable CSV
&lt;/h3&gt;

&lt;p&gt;Another common use case of using Generators is when we are working with large files such as Excel or CSV documents. Without using a Generator function, here’s how we can write it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Example of using a regular function
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;csv&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;read_csv_from_regular_fn&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'large_dataset.csv'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;reader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;result_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;read_csv_from_regular_fn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# Output:
# [['a','b','c', ... ], ['x','y','z', ... ] ... ]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Upon running the example above, we may experience some slowness or even &lt;code&gt;MemoryError&lt;/code&gt; depending on our computers.&lt;/p&gt;

&lt;p&gt;Looking at the code example above, to generate the result, the &lt;code&gt;read_csv_from_regular_fn&lt;/code&gt; would open our CSV file and loads everything in memory in an instance.&lt;/p&gt;

&lt;p&gt;This is not a good solution when working with larger files than our available memory. Alternatively, we could do this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Example of using a Generator function
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;csv&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;read_csv_from_generator_fn&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'large_dataset.csv'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;reader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;

&lt;span class="c1"&gt;# To get the same output as result_1,
# We generate a list using our newly created Generator function:
&lt;/span&gt;&lt;span class="n"&gt;result_2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;read_csv_from_generator_fn&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;

&lt;span class="c1"&gt;# Output same as result_1:
# [['a','b','c', ... ], ['x','y','z', ... ] ... ]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this scenario, we use &lt;code&gt;read_csv_from_generator_fn&lt;/code&gt; as our Generator function. This new Generator opens our large CSV file, loops through every row, and yields each row at a time rather than all at once.&lt;/p&gt;

&lt;p&gt;Here, we would not run into any &lt;code&gt;MemoryError&lt;/code&gt; or even any slowness due to memory constraints when reading data from our &lt;code&gt;large_dataset.csv&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To check the memory usage in bytes, we could do the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;read_csv_from_generator_fn&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt; &lt;span class="c1"&gt;# 112 bytes
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;read_csv_from_regular_fn&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt; &lt;span class="c1"&gt;# 1624056 bytes
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#iterating-through-a-large-list-array"&gt;
  &lt;/a&gt;
  Iterating through a large list (array)
&lt;/h3&gt;

&lt;p&gt;Another example where Generators are often used is where we intend to process values from a large list:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Example 1
&lt;/span&gt;&lt;span class="n"&gt;nums_list_comprehension&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100_000_000&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums_list_comprehension&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 333333328333333350000000
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Depending on your computer, you may encounter &lt;code&gt;MemoryError&lt;/code&gt; or at least a couple of seconds of slowness when evaluating the expression above.&lt;/p&gt;

&lt;p&gt;Like &lt;a href="https://www.w3schools.com/python/python_lists_comprehension.asp"&gt;list comprehensions&lt;/a&gt;, the Generator expression allows us to quickly create a Generator object without having to use the &lt;code&gt;yield&lt;/code&gt; statement.&lt;/p&gt;

&lt;p&gt;To cope with our memory constraint, we could turn the code example above into a Generator expression. This line of code below evaluates almost immediately:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Example 2
&lt;/span&gt;&lt;span class="n"&gt;nums_generator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; \&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100_000_000&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# &amp;lt;generator object &amp;lt;genexpr&amp;gt; at 0x106ecc580&amp;gt;
&lt;/span&gt;
&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums_generator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 333333328333333350000000
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In Example 1, &lt;code&gt;i ** i&lt;/code&gt; for the entire range of &lt;code&gt;100_000_000&lt;/code&gt; is being evaluated and stored in memory beforehand. It returns a full list.&lt;/p&gt;

&lt;p&gt;In Example 2, &lt;code&gt;i ** i&lt;/code&gt; is only evaluated when being iterated, one at a time. It returns a Generator expression.&lt;/p&gt;

&lt;p&gt;Remember, Generators don’t compute the value of each item when being instantiated.&lt;/p&gt;

&lt;p&gt;The differences in memory usage are below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums_generator&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 112 bytes
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums_list_comprehension&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 835128600 bytes
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#when-not-to-use-generators"&gt;
  &lt;/a&gt;
  When NOT To Use Generators
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#we-need-the-previous-values"&gt;
  &lt;/a&gt;
  We need the previous values
&lt;/h3&gt;

&lt;p&gt;A Generator can only be iterated once.&lt;br&gt;
The example below shows that the Generator expression from nums_generator can only be iterated once. Using sum on it for the second time resulted in zero as the Generator was exhausted.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Continuing from Example 2
&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums_generator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 333333328333333350000000
&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums_generator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 0, because it can only be iterated once.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#dealing-with-relatively-small-files"&gt;
  &lt;/a&gt;
  Dealing with relatively small files
&lt;/h3&gt;

&lt;p&gt;When dealing with relatively small files or lists, we may not want to use Generator as it might actually slow us down.&lt;/p&gt;

&lt;p&gt;We can use our previous examples &lt;a href="https://docs.python.org/3/library/profile.html"&gt;cProfile&lt;/a&gt; to profile the performance differences between list comprehension and Generator expression when summing the values up.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;cProfile of summing using List Comprehension vs. Generator Expression:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# List Comprehension
# ------------------
&lt;/span&gt;&lt;span class="n"&gt;cProfile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'sum([i * i for i in range(100_000_000)])'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#    5 function calls in 13.956 seconds
#    Ordered by: standard name
#    ncalls  tottime  percall  cumtime  percall filename:lineno(function)
#         1    8.442    8.442    8.442    8.442 &amp;lt;string&amp;gt;:1(&amp;lt;listcomp&amp;gt;)
#         1    0.841    0.841   13.956   13.956 &amp;lt;string&amp;gt;:1(&amp;lt;module&amp;gt;)
#         1    0.000    0.000   13.956   13.956 {built-in method builtins.exec}
#         1    4.672    4.672    4.672    4.672 {built-in method builtins.sum}
#         1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Generator Expression
# --------------------
&lt;/span&gt;&lt;span class="n"&gt;cProfile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'sum((i * i for i in range(100_000_000)))'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#    100000005 function calls in 22.996 seconds
#    Ordered by: standard name
#    ncalls  tottime  percall  cumtime  percall filename:lineno(function)
# 100000001   11.745    0.000   11.745    0.000 &amp;lt;string&amp;gt;:1(&amp;lt;genexpr&amp;gt;)
#         1    0.000    0.000   22.996   22.996 &amp;lt;string&amp;gt;:1(&amp;lt;module&amp;gt;)
#         1    0.000    0.000   22.996   22.996 {built-in method builtins.exec}
#         1   11.251   11.251   22.996   22.996 {built-in method builtins.sum}
#         1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From our &lt;code&gt;cProfile&lt;/code&gt; result above, we can tell that using list comprehension is a lot faster provided we don’t run into memory constraints.&lt;/p&gt;

&lt;p&gt;Evidently, if memory is not an issue, we should stick with using regular functions or list comprehensions.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In summary, Generator is an amazing tool in Python given the scenario where we do not need to reiterate it more than once.&lt;/p&gt;

&lt;p&gt;As Generators give us lazy evaluation, they are a great way to generate sequences in a memory-efficient manner. We should definitely consider using Generator when dealing with huge datasets to optimize our program.&lt;/p&gt;

&lt;p&gt;Thank you for reading!&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Developing my first mobile app to ~70k users</title>
      <author>Charli Bregnballe</author>
      <pubDate>Sun, 12 Sep 2021 22:56:26 +0000</pubDate>
      <link>https://dev.to/charlibregnballe/developing-my-first-mobile-app-to-70k-users-3nbl</link>
      <guid>https://dev.to/charlibregnballe/developing-my-first-mobile-app-to-70k-users-3nbl</guid>
      <description>&lt;h4&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h4&gt;

&lt;p&gt;I've had "App development" on my things-I-want-to-learn-list for some time when suddenly I got the chance to do a deep dive and build a project in the process.&lt;/p&gt;

&lt;p&gt;This blog post is the aftermath of a 6-month long process where I taught myself react-native and developed my first app for iOS and Android.&lt;/p&gt;

&lt;p&gt;I will reflect upon the process of developing my first app without any prior experience and rolling it out to more than 70k users. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#background"&gt;
  &lt;/a&gt;
  Background
&lt;/h3&gt;

&lt;p&gt;Some background information might be useful before I start.&lt;/p&gt;

&lt;p&gt;In my daily job as Head of IT at Kino.dk, a cinema movie website and ticket machine, writing code is not something I do on a normal workday.  Normally I am a one-man-army, where I flex my generalist muscle in different fields like data analysis, dev obs, development, GDPR, business, and strategy.&lt;/p&gt;

&lt;p&gt;So I enjoyed writing some code and doing a deep dive into a specific area for once.&lt;/p&gt;

&lt;p&gt;Another benefit was that it was a perfect scenario for me to practice the deep-work methodology and mindset.  A methodology for strong and narrow focused sessions of uninterrupted work, that I've grown to love and enjoy.  I would like to reflect on the combination of stoicism and deep work, but that is for another blog post. &lt;/p&gt;

&lt;p&gt;This project was born during the covid-19 lockdown of Denmark (and the cinemas), where my workload was limited, but my urge to spend my time productively was strong.&lt;br&gt;
So I decided to see if I was able to create a new app for Kino.dk while the cinemas were closed.&lt;/p&gt;

&lt;p&gt;Maybe I'm a geek, some might even call me a nerd, but I enjoy diving into new tech areas.  Skilling-up as they say.&lt;br&gt;
I keep a (pretty long) list of topics I want to take a look at and try out.&lt;br&gt;
The list grows all the time, because tech moves fast.  I do use it, though.&lt;br&gt;&lt;br&gt;
Every year I pick a topic (or maybe a few) from the list and then make a plan for how I can get my hands dirty with this new technology.&lt;br&gt;
I then create a list of tasks or elements, everything from project ideas, tutorials, blog posts, and so on, actually just picking up resources.&lt;br&gt;
They will be listed in a sensible order and I just plow through them one by one, when I have the time and energy.  Eventually, I end up with some kind of knowledge.&lt;br&gt;&lt;br&gt;
At some point, I will lose my patience and start a project.  This usually happens after I've researched/learned the most essential parts.&lt;/p&gt;

&lt;p&gt;The whole idea behind my "plan" is that I always know what's next. &lt;br&gt;
I don't need to start by figuring out what to do when I sit by the computer, I can always just sit down and start right away.&lt;br&gt;&lt;br&gt;
The progress is very clear and visible. &lt;br&gt;
The goal is to constantly be moving forward.  Consistency is the key to my methodology.  No jumping between topics that are too far apart, no randomness in the steps, just a straightforward and clear path.&lt;/p&gt;

&lt;p&gt;Ouch, this section became longer than expected, but don't worry, we are getting to the good stuff.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#planning-limits-and-requirements"&gt;
  &lt;/a&gt;
  Planning; limits and requirements
&lt;/h3&gt;

&lt;p&gt;I work by a simple principle.  Plan what you do, do what you plan.&lt;br&gt;
So the first thing I do when I try to learn something new is to read the &lt;a href="https://reactnative.dev/"&gt;documentation&lt;/a&gt;.   &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FUODHQSk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://external-preview.redd.it/NWrFUZX9p0ZWkSS8ioH3LYtNIo15rNeO1UIgb9D28bY.jpg%3Fauto%3Dwebp%26s%3D41d516ea004df577ce3d1d3063e2a19968c2cf9f" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FUODHQSk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://external-preview.redd.it/NWrFUZX9p0ZWkSS8ioH3LYtNIo15rNeO1UIgb9D28bY.jpg%3Fauto%3Dwebp%26s%3D41d516ea004df577ce3d1d3063e2a19968c2cf9f" alt="documentation and debugging"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Usually, I read the documentation to get some kind of overview before I start setting up the dev environment and such.  Once that is set I re-read the documentation with a focus on the things I know I need and try out and tinker with the sample code/tutorial/introduction.&lt;/p&gt;

&lt;p&gt;Before I started the actual project, I stitched some rough sketches or wireframes together.&lt;/p&gt;

&lt;p&gt;The goal for the project was clear; &lt;br&gt;
I want to make the fastest way to a cinema ticket, with as few interactions as possible.&lt;br&gt;
When you go to the cinema there are 3 parameters in play.  The movie, the cinema and the date.  If I can get the user to select either one of the 3, I can easily display a good overview of the other 2 options.&lt;br&gt;
Therefore I decided to present the most popular movies and the cinemas closest to the user on the home screen. So the home screen can be quick navigation for the users to either the cinema or movie he is interested in. Pretty simple, huh?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rDD0ASrG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/99ttmhswy09tfn1jktaz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rDD0ASrG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/99ttmhswy09tfn1jktaz.png" alt="homescreen wireframe kino app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next up is the movie's screen.  Here I want to present a list of movies as a kind of overview.  Nothing new in presenting movies like this.&lt;br&gt;&lt;br&gt;
Since the list tends to get a bit long, I do want to add some kind of search on the top, to help the users who are trying to find a specific movie.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oiGxJbCF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/frq32pm8g63skr56j2za.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oiGxJbCF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/frq32pm8g63skr56j2za.png" alt="movie screen wireframe kino app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Touching a movie poster will lead to the movie screen, with a more detailed view of the selected movie.  On this screen, the user will be able to view the trailer, read more about the movie, see showtimes, crew, and order tickets.&lt;br&gt;
The vertical bar with the dates is what I think is the easiest way to present selectable dates.  The goal is that the user should be able to touch the date he wants to see the showtimes and they will update.  Default is today's date.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---pTS_OlW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/srs4n7fy2f765yuq9yal.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---pTS_OlW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/srs4n7fy2f765yuq9yal.png" alt="movie show screen wireframe kino app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A similar structure for the cinemas with an overview screen and a detailed view.&lt;br&gt;&lt;br&gt;
The order of the cinemas is important, though.  By default, the cinemas are sorted in alphabetical order, which is not very useful. &lt;br&gt;
So to improve the user experience, I figured I should prompt the user to let me use his geo coordinates.  I can then use them to calculate the distance from the user to each cinema and sort the cinemas with the nearest first.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wdWzrHuh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dxr7hgr1769l3vbi7lyf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wdWzrHuh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dxr7hgr1769l3vbi7lyf.png" alt="cinema screen wireframe kino app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The user can select a cinema and go to the cinema screen to read more about the cinema, see the program, showtimes, and order tickets.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qtyqGotS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjw010h1pbltnduwaj0n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qtyqGotS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjw010h1pbltnduwaj0n.png" alt="cinema show screen wireframe kino app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The last thing is the user login screen.  Users should be able to log in to autofill the form with the info that's needed when ordering tickets.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--afqeABWh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://confident-code.s3.eu-central-1.amazonaws.com/Manual%2Bupload/kinoApp/Login.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--afqeABWh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://confident-code.s3.eu-central-1.amazonaws.com/Manual%2Bupload/kinoApp/Login.png" alt="login screen wireframe kino app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For now, I want to keep it simple and just show the user's purchase history.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0wZG7EVU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8nqt83ejwc4xmtrbtz7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0wZG7EVU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8nqt83ejwc4xmtrbtz7.png" alt="profile screen wireframe kino"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Besides the different screens, the observant reader might notice the bottom navigation in the app.  This is nothing new, actually pretty standard navigation between the different screens.&lt;/p&gt;

&lt;p&gt;Let me know if you think, I should pursue a career as a designer, ok?&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#initial-setup-and-the-first-lines-of-code"&gt;
  &lt;/a&gt;
  Initial setup and the first lines of code
&lt;/h3&gt;

&lt;p&gt;Now that I have some kind of idea of what the app should look like, I can start setting up my dev environment and start the actual coding journey.&lt;/p&gt;

&lt;p&gt;Following the documentation, setting the development environment up on my mac was pretty straightforward.  &lt;a href="https://reactnative.dev/%5D"&gt;https://reactnative.dev/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Starting a new app with npx react-native init KinoApp and I had a very basic structure of the app ready.&lt;/p&gt;

&lt;p&gt;I am a bad designer, I know that. Sometimes I miss details, another weakness. Therefore, I like to help myself with some design decisions. So I started out making a "Theme file". It contains a lot of reusable code for the UI. It would help me keep the app design consistent across all screens and components. This is just a habit I've got from web development.  So I created a range of fonts with different sizes, widths, heights, and paddings. I should note that I made the widths and heights dynamic, so they are calculated on the fly to make the best fit on every screen size, but still consistent!&lt;br&gt;
Then I created all the different screens and started wiring them together through the navigation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p-RyXSrN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ytimg.com/vi/Mk9G40p9Igg/hqdefault.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p-RyXSrN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ytimg.com/vi/Mk9G40p9Igg/hqdefault.jpg" alt="meme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well, I knew about stack navigator, bottom tab navigator, and drawer navigator, but making them work together was the hard part. Apparently, I had to nest a stack navigator inside the bottom tab navigator. For experienced developers, this might be obvious, but nevertheless, it took me some time to wrap my head around it.&lt;br&gt;
 It is pretty different from normal web development, because the navigators have their own history, so it's very easy to mess up the "Back" button.&lt;br&gt;
Confused? Me too!&lt;/p&gt;

&lt;p&gt;It is a bit technical, so I will leave that to another post, where I go into detail with the technical decisions.&lt;br&gt;
Somehow, I managed to get the navigation to work as intended, so I could navigate between the different blank screens on my simulator.  Next up: let's fetch some data into the app and start working on the UI and design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q5m9xIwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3904vshtzkz0fe78pxdn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q5m9xIwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3904vshtzkz0fe78pxdn.gif" alt="initial navigation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-data"&gt;
  &lt;/a&gt;
  The Data
&lt;/h3&gt;

&lt;p&gt;The data used in the app is fetched through JSON feeds and API endpoints from Kino.dk. I wanted to pre-fetch as much data as possible, to make the app fast and with a native feel, once it was loaded.  The data had to be stored somewhere and here react (and react-native) has a wide range of options. Because this is not a normal server-side-rendered website, this is different too! Long story short, I decided to go with the Context API and not the very popular Redux library. I did put a lot of thought into this, keep my limited experience in mind, this did require some research. The reason why I went with the Context API, was that I had no need for very complex data structures, but even more important, I tried to favor the "out-of-the-box" solution. If possible, I tried to avoid using external dependencies. I believe in control over code and with limited dependencies. Hopefully, I did myself a favor when maintaining the app.  For the same reason, I am using the standard javascript fetch() method and not the very popular Axios library. It is another topic I would like to discuss, but that will be for another blog post.&lt;/p&gt;

&lt;p&gt;I set up a data-fetching component, which will run every time the app "wakes up", and on initial load. An array of movies and an array of cinemas are fetched and stored in the context. I remembered to wrap the main component with the contexts, so the data is available everywhere in? the app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;CinemaProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;MovieProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;AuthProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StatusBar&lt;/span&gt; &lt;span class="na"&gt;barStyle&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"light-content"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;FetchData&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BottomTabNavigator&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;AuthProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;MovieProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;CinemaProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This might seem strange for those who are new to react (native).  It was strange to me at least. &lt;br&gt;
Let me clarify;  The CinemaProvider is the Cinema Context component.  It fetches, updates, and exposes the cinema data.  Same with MovieProvider, except it's for movies.  The AuthProvider is used to handle the login of the user.&lt;br&gt;
Then you see the FetchData component I mentioned above, this is a component that pre-fetches the data and stores it in Context.&lt;br&gt;&lt;br&gt;
This means that the data can be available inside all components, where the context is imported.&lt;br&gt;
The last thing is the BottomTabNavigator.  Inside this is where we find the main app component, which contains the app.&lt;br&gt;
So to make the data available in the app, we have to wrap it around the app component.  Pretty simple and pretty strange.&lt;/p&gt;

&lt;p&gt;There are so many resources on this topic so a simple google search will enlighten you far more than my silly post.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#ui"&gt;
  &lt;/a&gt;
  UI
&lt;/h3&gt;

&lt;p&gt;Finally, some data to work with. Let's start looking at the Movies screen, the screen that has a list of all the movies.&lt;/p&gt;

&lt;p&gt;React-Native has a few components that you quickly will get familiar with if you start coding. Let's shortly inspect a few of the most common ones.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The

&lt;code&gt;&amp;lt;View&amp;gt;&lt;/code&gt;

component -&amp;gt; This is very similar to the

&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;

tag we know and love from html&lt;/li&gt;
&lt;li&gt;The

&lt;code&gt;&amp;lt;Text&amp;gt;&lt;/code&gt;

component -&amp;gt; This is a component that contains text.  Surprised?  It is similar to tags you know from html:

&lt;code&gt;&amp;lt;p&amp;gt;, &amp;lt;i&amp;gt;, &amp;lt;h1&amp;gt;, &amp;lt;h2&amp;gt;, &amp;lt;h3&amp;gt;&lt;/code&gt;

and so on. 
- The

&lt;code&gt;&amp;lt;Image&amp;gt;&lt;/code&gt;

component -&amp;gt; This component can display an image.&lt;/li&gt;
&lt;li&gt;The

&lt;code&gt;&amp;lt;TouchableOpacity&amp;gt;&lt;/code&gt;

component -&amp;gt; This is a bit similar to a view but will make the "area" touchable, which means we can have an onPress function on the component that will do something.  Can be used to navigate the user somewhere.
- The

&lt;code&gt;&amp;lt;FlatList&amp;gt;&lt;/code&gt;

component -&amp;gt; This one is interesting.  This is a list of items.  It takes in an array and loops over the items and displays them.  These items can be anything... images, views, text, or a combination.  Pretty handy, huh? In our case, this component is ideal for our list of movies.&lt;/li&gt;
&lt;li&gt;All the components are well described in the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I started out creating a FlatList on the movies overview screen. It will take in the array of movies from context and the loop through it and for each item display a poster image and a movie title. Sounds simple, right?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../context/MoviesContext&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import the movies context&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// set the movie context to state&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;movies&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setMovies&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;orderBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movies&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;selling_position&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Sets the movies list to the constant movies and order it by selling_position to make the most popular movies appear on top.&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;FlatList&lt;/span&gt;
  &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;movies&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="na"&gt;numColumns&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="na"&gt;showsVerticalScrollIndicator&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="na"&gt;renderItem&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="na"&gt;keyExtractor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;numColumns is set to 3, so the data is present in 3 columns. The key extractor is an ID that the FlatList needs to identify for each object in the array.  Notice the renderItem function? Good! It's important! It calls a function called Item and takes an item as a parameter. Clever naming, right? - I didn't come up with it, I was inspired! Nevertheless, the Item function is responsible for presenting each item in the array.&lt;/p&gt;

&lt;p&gt;So the function looks something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;View&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Image&lt;/span&gt; &lt;span class="na"&gt;source&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;imageUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;View&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Item function is where I continued to work with styling and adding the option to navigate the user to a screen for a single movie. One strange thing, which is actually not strange at all, is that you need to add some kind of width and height to the image, otherwise it won't be visible. Again, thank you documentation!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N2R8kxQU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zauxeohqrikc0o070mc7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N2R8kxQU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zauxeohqrikc0o070mc7.jpg" alt="movie overview kino app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#screenshot-is-from-the-final-app-and-not-the-first-draft"&gt;
  &lt;/a&gt;
  (screenshot is from the final app and not the first draft)
&lt;/h6&gt;

&lt;p&gt;I will not go through the cinema overview page, since it's very very similar.  Contains a list of cinemas.  You can see the "final" result here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bZj7DuMk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bdgvzep50dt602vdwzhm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bZj7DuMk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bdgvzep50dt602vdwzhm.jpg" alt="cinema overview kino app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#screenshot-is-from-the-final-app-and-not-the-first-draft"&gt;
  &lt;/a&gt;
  (screenshot is from the final app and not the first draft)
&lt;/h6&gt;

&lt;p&gt;Everything except the navigation has been pretty straightforward until now. Next up was to navigate the user to the movie screen, when pressing a movie poster. I still don't understand why this very basic functionality was so difficult for me, but the combination of the stack and bottomtab navigator created some issues. When I face issues like this, I combine reading on StackOverflow, checking blog posts, and just trying a few things out. A deeper understanding of the problem is required in order to get enough information to make a detailed search for a solution.&lt;/p&gt;

&lt;p&gt;To sum up, I tried to keep the structure simple, with a screen listing all movies and one with all cinemas. From there the user can navigate to the movie or cinema and order tickets.&lt;/p&gt;

&lt;p&gt;In addition to the navigation, I added a search bar on top, where the user can search for a movie or cinema instead of scrolling down. I called it search, but it's actually just a filter functionality!&lt;/p&gt;

&lt;p&gt;When ordering a cinema ticket, there are 3 variables to consider: The movie, the cinema, and the day. We need the user to choose at least 2 of the 3 before we can present a view with showtimes that is not too overwhelming.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#design"&gt;
  &lt;/a&gt;
  Design
&lt;/h3&gt;

&lt;p&gt;The movie and cinema profile is the last step before selecting a showtime and purchasing a ticket. Therefore, I wanted to keep the information to a bare minimum, so it is very obvious how and where to tap to order a ticket. If the user wants further information, like a review or list of actors, a little more work is required. I hope to satisfy the majority of the users with minimal initial information. Of course, information like a movie title, genre, and so on must be present and easy to see.&lt;/p&gt;

&lt;p&gt;The result currently looks like this for a movie:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rmlRHVLl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2mpj9h559bwvbbzda4e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rmlRHVLl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2mpj9h559bwvbbzda4e.jpg" alt="the father movie profile kino app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5x3UKkGD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo2n8k80jlfqol38f72h.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5x3UKkGD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo2n8k80jlfqol38f72h.jpg" alt="suicide squad movie profile kino app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some fun featured I decided to implement, was to fetch colors from the movie poster and use them throughout the movie profile.  So all the movie profiles will look different depending on their poster.  Another good thing about this was that I didn't have to figure out some kind of cool color scheme.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3cJJapoM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f4fp0wu0og5ubtr7w7kd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3cJJapoM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f4fp0wu0og5ubtr7w7kd.jpg" alt="a quiet place screenshot kino app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Kty8YMu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l8s92z7udi5qchj5h56h.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Kty8YMu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l8s92z7udi5qchj5h56h.jpg" alt="promising young woman screenshot kino app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3slRbpKb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/31gcccob00t082zmde1g.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3slRbpKb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/31gcccob00t082zmde1g.jpg" alt="pagten screenshot kino app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---qzvnVuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzs2i4xdssub36ba63o1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---qzvnVuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzs2i4xdssub36ba63o1.jpg" alt="druk screenshot kino app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am fetching a primary background color, a primary non-background color, and a secondary color. These are used throughout the different elements to hopefully create a more unique experience for each movie. This feature does create some problems, though. One of the issues is that it works well for some posters, but others will not be that great. And I have no control over this. But somehow I'm still responsible!&lt;/p&gt;

&lt;p&gt;From a technical point of view, this feature does collide a bit with my hopes and dreams about load speed. Keep in mind that each movie screen will have different colors, so these colors must be fetched on the fly, without making the user fall asleep in the process.&lt;/p&gt;

&lt;p&gt;For the cinema profile, I'll use a very similar design, but without the unique colors. The information presented is pretty similar and I want to keep some kind of consistency in the design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--31wznpLz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b4vjr28g3oy2edphqgf2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--31wznpLz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b4vjr28g3oy2edphqgf2.jpg" alt="cinema profile screenshot kino app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the tougher design decisions, I had to make in the process, was how to present the showtimes. I was (of course) inspired by other apps and figured that the user most likely know which day he wants to go to the cinema. So we can keep the view to be showtimes for 1 day at the time. I tried to follow some conventions by choosing a vertical list that works as a date picker. Selecting a date will fetch showtimes data for the movie or cinema and present it.&lt;/p&gt;

&lt;p&gt;When selecting a cinema, you can see this particular cinemas program for the selected day:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6WINdXD6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efo1snwhqu1tgnt3melt.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6WINdXD6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efo1snwhqu1tgnt3melt.jpg" alt="cinema show times screen kino app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you select a movie, you can see the showtimes in the different cinemas for the selected day:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V7QsQrU2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p311tfmxhqio31unaqa6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V7QsQrU2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p311tfmxhqio31unaqa6.jpg" alt="movie show times screenshot kino app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This way, you will get an overview of the "entire" program for that day. So either the user selects a cinema or a movie and sees the showtimes for that day.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#animations-and-smoothness"&gt;
  &lt;/a&gt;
  Animations and smoothness
&lt;/h3&gt;

&lt;p&gt;How do we judge quality?  Whenever something is aesthetically pleasant?&lt;br&gt;
A well-timed and carefully selected animation can do wonders for how the app "feels".&lt;br&gt;
It's an art and something that I by no means master.  I do know if it was successful or not.  But hey!  I figured out how to do animations!&lt;/p&gt;

&lt;p&gt;I have added a few animations to ease the transition between screens and on the loading of screens.&lt;/p&gt;

&lt;p&gt;If you have tried the app, you might have noticed how the images slide back and forth when you go from the movie/cinema overview and to a movie/cinema.  I combine animations and navigations to try to make the transition smooth.&lt;/p&gt;

&lt;p&gt;Also, I do a fade-in with a slight delay on some elements on the movie profile, like the play icon for the trailer.  It "drops in" shortly after the screen is loaded.  Why?  - Well there are a few reasons for it.  One is to draw some attention to the button, if you press this, then you can watch the trailer.  Another reason is that 95% of all movies will have trailers, while some won't.  So I have to do a check in the data to see if the movie has a trailer or not and I don't want to bother the user and make him wait for that check.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jezTQnP_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fqa3hw0le3qowss93v85.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jezTQnP_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fqa3hw0le3qowss93v85.gif" alt="kino app movie profiles"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another small and maybe useless animation is when the user presses either a button or poster.  It will mimic a real physical button being pressed down and go back up.&lt;/p&gt;

&lt;p&gt;It's a small thing, but it all adds up and contributes to the overall touch and feel of the app.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#challenges-in-the-process-and-how-to-overcome-them"&gt;
  &lt;/a&gt;
  Challenges in the process and how to overcome them
&lt;/h3&gt;

&lt;p&gt;One of the issues that took me the longest to figure out was the data structure and how to re-arrange it to meet my needs.&lt;/p&gt;

&lt;p&gt;Next up was the geo-location, where I fetch the user's GPS coordinates, pair it with the cinemas coordinations, calculate the distance, and sort the cinema list by distance to the user, with nearest first.&lt;/p&gt;

&lt;p&gt;Simply displaying the showtimes for a movie, for each cinema was a challenge, too.&lt;br&gt;
When users select a showtime, a webview opens because there are no API endpoints for the last few steps of the ticket purchasing flow. So this was my only option and the biggest weakness of the app.&lt;/p&gt;

&lt;p&gt;Figuring out how to auth the user and pass the user to the webview was also something that took me a while to make work.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#data-structure-and-restructure"&gt;
  &lt;/a&gt;
  Data structure and restructure
&lt;/h4&gt;

&lt;p&gt;The data structure was one of the first challenges I faced.  To understand the issues, we need a quick overview of the data.  First off we have a list of cinemas and a list of movies.  Each movie will have a list of showtimes, queried by date.  So we can fetch all showtimes for a movie on a specific date.  The showtimes is an array of arrays, where they are grouped by cinema.  It makes sense, right?  And then there is a similar structure for the cinemas, where you can get all showtimes for that cinema on a particular date, grouped by movies.&lt;/p&gt;

&lt;p&gt;Example for a movie:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"cinema_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1196251"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Name"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"city"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"City"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"showtimes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"start_time"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2021-08-27 12:15:00"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"room_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Sal 4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"showtime_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"3852882"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"room_seats"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"293"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"ticket_available"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"283"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"movie_version_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"42824"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"start_time"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2021-08-27 14:30:00"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"room_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Sal 4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"showtime_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"3852884"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"room_seats"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"293"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"ticket_available"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"288"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"movie_version_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"42824"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; 
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So the structure is an array of cinemas and under each cinema, there's a showtime object that contains an array of showtime objects. Mind the "movie_version_id", this is a reference to if it’s a 2D, 3D, or something else. I wanted to group the showtimes by version. So I wrote a small function to restructure and re-arrange the array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;showtimes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groupBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;showtimes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;movie_version_id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Even though I try to minimize the 3rd party libraries, I am using lodash.  Why isn't this javascript just like this? phew.&lt;br&gt;
Well, it's easy to understand, showtimes are grouped by movie_version_id, which is the version.  So all 2d movies will be grouped under the same version label.  Perfect.&lt;/p&gt;

&lt;p&gt;And the new structure:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"cinema_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1196251"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Name"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"city"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"City"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"showtimes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"42924"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"start_time"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2021-08-27 12:15:00"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"room_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Sal 4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"showtime_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"3852882"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"room_seats"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"293"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"ticket_available"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"283"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"movie_version_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"42824"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"start_time"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2021-08-27 14:30:00"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"room_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Sal 4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"showtime_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"3852884"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"room_seats"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"293"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"ticket_available"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"288"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"movie_version_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"42824"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; 
      &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; 
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; 
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#geo-location"&gt;
  &lt;/a&gt;
  Geo Location
&lt;/h4&gt;

&lt;p&gt;Geolocation was another issue. Keep in mind, my goal was to make it as easy and fast as possible to get a cinema ticket. Even though Denmark is a small country, it's very unlikely that people will travel through the entire country to go to a specific cinema. They will almost always want to go to a cinema near their current location. So I implemented the option to fetch the user's geolocation and pair it with each cinema location and calculate the distance from the user to each cinema.  Once the user opens the app, he will be asked if the app can get access to the GPS to determine his location. The location data is not saved, but only used in real-time to calculate the distance to the different cinemas. Let's pretend the user said ok and then some coordinates are returned to us to use.  I wrote a function that will calculate the distance between the location of the user and another location. Then looping through all the cinemas, asking this very question and using each answer to add a "Distance" parameter to the array of cinemas. The distance (big surprise) is how far the user is located from each cinema. And then sorting it with nearest first.&lt;/p&gt;

&lt;p&gt;How the heck do you calculate the distance between 2 sets of coordinates?  And get the answer in kilometers?&lt;br&gt;
Well, thank you internet!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;computeDistance&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;prevLat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;prevLong&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;long&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;prevLatInRad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;toRad&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prevLat&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;prevLongInRad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;toRad&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prevLong&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;latInRad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;toRad&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;longInRad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;toRad&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;long&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="c1"&gt;// In kilometers&lt;/span&gt;
    &lt;span class="mf"&gt;6377.830272&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
    &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;acos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prevLatInRad&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;latInRad&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
        &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prevLatInRad&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
          &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;latInRad&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
          &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;longInRad&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;prevLongInRad&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;toRad&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;angle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PI&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I feel like I want to write more about this because I spent some time researching to understand what is going on and it's fascinating. If you want to talk about this, let me know. I'll buy you a beer that you can drink while I talk nonsense about this.&lt;/p&gt;

&lt;p&gt;Then I made an updateCinemas function in the Cinemas Context.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updateCinemas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cinemas&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;referenceLat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;referenceLong&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cinemasWithDistance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cinemas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cinema&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;cinema&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;computeDistance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;cinema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cinema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;referenceLat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;referenceLong&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;// Calculate the distance&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;orderedCinemas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;orderBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cinemasWithDistance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;distance&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;update_cinemas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;orderedCinemas&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt; 
    &lt;span class="c1"&gt;// Update cinemas is called with cinemas array and user coordinates&lt;/span&gt;
    &lt;span class="c1"&gt;// A distance value is added to each cinema based on user coords and cinema cords&lt;/span&gt;
    &lt;span class="c1"&gt;// cinemas are sorted by distance&lt;/span&gt;
    &lt;span class="c1"&gt;// state is updated with new cinemas array and a value of cinemaSorted to be true&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Voila!  The cinema's array now has a distance value and is now sorted by that.  So the cinema that is closest to the user will be the first one on the list.&lt;br&gt;
Notice the comments?  - Yes, I'm a nice guy like that!&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#geo-location-for-movie-showtimes"&gt;
  &lt;/a&gt;
  Geo Location for movie showtimes
&lt;/h4&gt;

&lt;p&gt;Next big issue; How am I going to use this on the cinema overview screen? I need it in the showtimes for each movie, too, so the sorting of cinemas is consistent across the entire app.&lt;/p&gt;

&lt;p&gt;Well, diving into the way I display the showtimes for each movie, I wrote a function that handles the group by showtimes issue but adding the distance value to each cinema. Because this distance value is only in the cinema list, not the list for the movies showtimes. Luckily I could match on the cinema IDs since they were present in both arrays and then merge them.&lt;/p&gt;

&lt;p&gt;Finally, it looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;mergeArrays&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;itmInner&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;itmInner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;cinema_id&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;showtimes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groupBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;showtimes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;movie_version_id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Each time showtimes are loaded for a movie, data is restructured to have the right sorting and distance value on cinemas.&lt;br&gt;&lt;br&gt;
Now both the list of cinemas on the cinema overview page and the cinemas on the movie screen showtimes are sorted by the distance parameter.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#display-the-showtimes"&gt;
  &lt;/a&gt;
  Display the showtimes
&lt;/h4&gt;

&lt;p&gt;All of this leads me to the issue of displaying these showtimes. So we talked about FlatLists already. They are great and perfect for this use case. Let's pretend we are looking at showtimes for a movie. The data structure is sensible, because for each movie there is an array of cinemas, and nested inside this cinema’s array there is an array of showtimes. But I grouped all the showtimes by their version and so it's a 3-stack deep nested array before we get the actual showtimes.&lt;/p&gt;

&lt;p&gt;This calls for nested FlatLists! The first FlatList will contain all Cinemas. Then for each cinema, a nested FlatList is rendered, this one will contain all the versions. And finally, inside each movie version, yet another FlatList is rendered, to display the showtimes for this movie version at this cinema. Phew.&lt;br&gt;
 BUT PERFORMANCE? Well, actually it's not a problem, since we use the keyExtractor ID to index the items AND they are lazy-loaded. It is interesting, though, because each time a user selects a date on a movie, all this will happen, including grouping the showtimes by version, merging, and sorting of the cinemas.&lt;br&gt;
Remember, the order of the cinemas will vary depending on the user's location.  I wish I could query the API with longitude and latitude coordinates, and it would then return a perfect structured array of the items, but that would make this section both very short and very boring.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#no-api-end-point"&gt;
  &lt;/a&gt;
  NO API end point
&lt;/h4&gt;

&lt;p&gt;The biggest challenge, issue, and flaw in this app is how I handle what happens when a user presses a showtime and wants to select seats and buy a ticket. Kino.dk, the website, has some deeper integrations to the different ticket systems, which makes it feel like a part of kino.dk. There are no API endpoints for this part, so the only option I had was to open a webview on kino.dk targeting the selected showtime.&lt;/p&gt;

&lt;p&gt;This is by no means the best implementation, but the only current option I had. My plan for Kino.dk was to extract the ticket system logic out to an external service and then I could hook both Kino.dk and the app to that service and provide a true native app experience. Without having thought this through, there could still be some issues. I could make the deeper integration with the app and ticket systems/middle layer, so the users can select a number of tickets, select seats, etc, but how did I handle the payment? I had to use the cinema’s/ticket systems payment gateway since we are selling tickets on behalf of the tickets system or cinema. So it is not Kino.dk’s money, but the cinemas’.  It would require Kino to have its own payment gateway that will distribute the money to the cinemas. I am not sure it will happen.&lt;br&gt;
If you got any good ideas on how to solve this, I would love to hear from you!&lt;br&gt;
Another twist with the webview was that I had to fetch cookie and session data and pass it to the webview to make sure the user was logged in.  The webview is just an in-app browser that will show the mobile website. The user will get validated/logged in with the right cookies. These cookies or strings are available to me through the authentication endpoint.  What happens behind the scenes when the user login, is that some strings (cookies) are returned from the API and saved on the phone through AsyncStorage. These strings will be passed as cookies to the webview, to validate the user and log him in, so he doesn't have to add fill out redundant data.&lt;br&gt;
Luckily there's a react-native library (react-native-cookies) to make this easier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;CookieManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://kino.dk&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;domain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.kino.dk&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;secure&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;httpOnly&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#finalizations"&gt;
  &lt;/a&gt;
  Finalizations
&lt;/h3&gt;

&lt;p&gt;ne thing that surprised me was something the cool people call the 80 / 20 - rule. It means that you can do 80% of the project in 20% of the time. That leaves us with the last 20% that will take 80% of the time. It is not entirely true for my project, but I experienced a lot of missing pieces just before the release.  And that is without talking about the actual release, which is a huge pain.&lt;br&gt;
I eventually ended up reaching out to a freelance React Native developer, who could help me with some code review and speed up the last bit of the process.&lt;/p&gt;

&lt;p&gt;Thank you, Stefan! You are amazing and I admire your patience.&lt;br&gt;
If you need a react native developer, I can recommend this guy.  You can find him here: &lt;a href="https://github.com/Hyllesen"&gt;&lt;/a&gt; and take his course: &lt;a href="https://www.udemy.com/user/stefan-hyltoft/"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The whole deployment of the app to AppStore and PlayStore should be a chapter by itself. It was not difficult, it just took a long time to make the images fit, fill out the information, and all that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lessons-learned-and-key-takeaways"&gt;
  &lt;/a&gt;
  Lessons learned and key take-aways
&lt;/h3&gt;

&lt;p&gt;I have learned a lot in the process and there are a lot of key take-aways that could benefit anyone who might consider similar craziness. When I started out, everything was a bit confusing and I had to look up almost everything. But as I progressed, some of the stuff somehow got stuck in my brain, so I was able to operate more freely. The more you know, the more you know that you don't know. And this is true. But while you build knowledge and insight, your solutions will also become better. And maybe the most important thing when expanding your knowledge is all the ideas and solutions that pops up. Alongside the knowledge expansion, a range of possibilities will become clear and it’s in this space my innovation thrives.&lt;/p&gt;

&lt;p&gt;Even though the last bit of this article was full of problems that I faced in the process, I finish the project with a feeling that this is doable for anyone. I am no genius, just methodical and very stubborn. I have a lot of experience in teaching myself new programing languages and tech stuff in general. I have developed a method (that works for me) for learning new things, which means that I can fairly quickly pick new things up. I keep a list of things I want to dive into and every year I pick a topic (like React Native), make a plan and start my deep dive. It’s just a hobby and the pressure is off, so I can do it out of interest and not out of need.&lt;/p&gt;

&lt;p&gt;I made a checklist with a few notes on what to consider;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Deploy to AppStore and PlayStore early&lt;/li&gt;
&lt;li&gt;Test on physical devices all the time&lt;/li&gt;
&lt;li&gt;Screen sizes -&amp;gt; they vary. So check on different sizes&lt;/li&gt;
&lt;li&gt;Some users have extra big fonts. That will break the design. For me, it was not an option to just force the size of the font. I wanted the design to adjust to users who needed bigger fonts. It took me a while&lt;/li&gt;
&lt;li&gt;Tracking. Think about it from the start. Implement it, test it and then test it again&lt;/li&gt;
&lt;li&gt;Handle what happens if the user is offline&lt;/li&gt;
&lt;li&gt;Some kind of error message to the user, if the API call fails&lt;/li&gt;
&lt;li&gt;Be aware of what happens if the user puts the app in the background, but without closing it. (I used a method where data is refreshed upon making the app active again)&lt;/li&gt;
&lt;li&gt;How do you want to present the app in AppStore and PlayStore? - Creating those images does require some work and if you want it to look good x2 that work&lt;/li&gt;
&lt;li&gt;How consistent is your data? Can you count on every attribute being there? If not, handle it&lt;/li&gt;
&lt;li&gt;There is no caching on the default Image element in react native&lt;/li&gt;
&lt;li&gt;Animations are fun and nice, but they should be used with care&lt;/li&gt;
&lt;li&gt;Plan the component structure&lt;/li&gt;
&lt;li&gt;Follow conventions&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  Whats next?
&lt;/h3&gt;

&lt;p&gt;I like to work in small, but never-ending iterations, where I develop an MVP and then take small steps based on a combination of data and user feedback. So far I have got extremely good feedback and some great ideas for the next steps. There has been some bad rating and reviews in the store, though. Annoying as it is, they are all related to the webview implementation, the big weakness of the app.&lt;/p&gt;

&lt;p&gt;I have actually already released a new update, where users can add cinemas as favorites. They will then be listed at the top of the showtimes list for a movie and on the cinema overview. The reason why this is the first feature was that I could see that 20% of the users did not allow geolocation. That means that they will get a list of cinemas in alphabetical order, which is not very useful. And I want to keep the focus narrow and centered on how to make it as fast and easy as possible to order a cinema ticket.&lt;/p&gt;

&lt;p&gt;What else is in the backlog? I have a list and it is pretty long and without any filter.&lt;/p&gt;

&lt;p&gt;I do know for sure that I want to add news to the app, too. Kino.dk is a ticket sales machine for cinema tickets, but it is also Denmark's biggest movie media. So supporting that part of the business would be a natural next step.&lt;br&gt;
I also want to give the editors more freedom to make an impact on the app. That could be promoting a certain movie or communicate with the users either through articles or competitions/polls. How? I have no idea.&lt;/p&gt;

&lt;p&gt;Another idea I consider is to add a view/screen where the user selects a date and then a list of cinemas and their movies (and showtimes) will be displayed. It should answer the question: "What's in the cinema on Saturday? Something worth watching?"&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final words
&lt;/h3&gt;

&lt;p&gt;Did you really read all this? Phew, good job!&lt;/p&gt;

&lt;p&gt;Now that the app is up and live, I can show off, brag and all that. There are currently around ~70.000 users on the app and the number keeps increasing without any marketing.&lt;/p&gt;

&lt;p&gt;Honestly, it was pretty hard. At times it felt like a mental marathon. I started with no idea at all how to do this. Doing small baby steps, consistency, no pressure, and lots of time were the key ingredients. I was able to work my way through it and tackle each issue with a calm focus. I did this project alongside my normal job, but on shorter hours. I tried to code at least 1 hour each day, and it took me around 5-6 months to learn and build.&lt;/p&gt;

&lt;p&gt;It was fun to dive into app development and figure out how to build an actual app.  And I will recommend you to give it a shot if you have the time and interest.  I believe that this is doable for anyone who can dedicate the needed time and focus.&lt;/p&gt;

&lt;p&gt;I know for sure that I do not want to be a mobile developer full-time. It's interesting and fun, but I would get tired and I need to dance in the space between tech and business. Not only in one of the 2 camps.&lt;/p&gt;

&lt;p&gt;Thank you for reading the article!  And feel free to leave a comment or reach out to me if you have any feedback, question or want to chat about development and IT.&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>showdev</category>
      <category>learning</category>
      <category>development</category>
    </item>
    <item>
      <title>29 Projects To Help You Practice HTML CSS Javascript 2021</title>
      <author>Niemvuilaptrinh</author>
      <pubDate>Sun, 12 Sep 2021 22:20:21 +0000</pubDate>
      <link>https://dev.to/haycuoilennao19/29-projects-to-help-you-practice-html-css-javascript-2021-1j88</link>
      <guid>https://dev.to/haycuoilennao19/29-projects-to-help-you-practice-html-css-javascript-2021-1j88</guid>
      <description>&lt;p&gt;Today we will go into learning about UI Page projects to increase design ability and how to apply HTML, CSS, Javascript to actual website development!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#responsive-social-platform-ui"&gt;
  &lt;/a&gt;
  Responsive Social Platform UI
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F3LekeGa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Responsive%2520Social%2520Platform%2520UI%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F3LekeGa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Responsive%2520Social%2520Platform%2520UI%2520%25281%2529.png" alt="Responsive Social Platform UI"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/TurkAysenur/embed/RwWKYMO?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#fox-news-templates"&gt;
  &lt;/a&gt;
  Fox News Templates
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t6-_7d6u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Fox%2520News%2520Templates%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t6-_7d6u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Fox%2520News%2520Templates%2520%25281%2529.png" alt="Fox News Templates"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/havardob/embed/GRjPywY?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#netflix-landing-page-clone"&gt;
  &lt;/a&gt;
  Netflix Landing Page Clone
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ROm3dfZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Netflix%2520Landing%2520Page%2520Clone%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ROm3dfZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Netflix%2520Landing%2520Page%2520Clone%2520%25281%2529.png" alt="Netflix Landing Page Clone"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/bradtraversy/embed/yWPONg?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#book-store-ui"&gt;
  &lt;/a&gt;
  Book Store UI
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3B6FXZtq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Book%2520Store%2520UI%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3B6FXZtq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Book%2520Store%2520UI%2520%25281%2529.png" alt="Book Store UI"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/TurkAysenur/embed/JjGKKrP?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#project-management-dashboard-ui"&gt;
  &lt;/a&gt;
  Project Management Dashboard UI
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OJjoYdaN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Project%2520Management%2520Dashboard%2520UI%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OJjoYdaN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Project%2520Management%2520Dashboard%2520UI%2520%25281%2529.png" alt="Project Management Dashboard UI"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/aybukeceylan/embed/OJRNbZp?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#microsoft-homepage-clone"&gt;
  &lt;/a&gt;
  Microsoft Homepage Clone
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--56nUue3Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Microsoft%2520Homepage%2520Clone%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--56nUue3Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Microsoft%2520Homepage%2520Clone%2520%25281%2529.png" alt="Microsoft Homepage Clone"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/bradtraversy/embed/ZEGGNRb?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#task-manager-ui-with-css-grid"&gt;
  &lt;/a&gt;
  Task Manager UI with CSS Grid
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hiedTYjT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Task%2520Manager%2520UI%2520with%2520CSS%2520Grid%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hiedTYjT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Task%2520Manager%2520UI%2520with%2520CSS%2520Grid%2520%25281%2529.png" alt="Task Manager UI with CSS Grid"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/TurkAysenur/embed/QWyPMgq?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#file-sharing-web-app"&gt;
  &lt;/a&gt;
  File Sharing Web App
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gp636NNs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/File%2520Sharing%2520Web%2520App%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gp636NNs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/File%2520Sharing%2520Web%2520App%2520%25281%2529.png" alt="File Sharing Web App"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/aybukeceylan/embed/yLOxRyG?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#messaging-app-ui-with-dark-mode"&gt;
  &lt;/a&gt;
  Messaging App UI with Dark Mode
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D-EjXrJC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Messaging%2520App%2520UI%2520with%2520Dark%2520Mode%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D-EjXrJC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Messaging%2520App%2520UI%2520with%2520Dark%2520Mode%2520%25281%2529.png" alt="Messaging App UI with Dark Mode"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/TurkAysenur/embed/ZEbXoRZ?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#booking-app-ui"&gt;
  &lt;/a&gt;
  Booking App UI
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pg2Ra2E5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Booking%2520App%2520UI%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pg2Ra2E5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Booking%2520App%2520UI%2520%25281%2529.png" alt="Booking App UI"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/aybukeceylan/embed/pobaKGX?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#job-search-platform-ui"&gt;
  &lt;/a&gt;
  Job Search Platform UI
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_uZps-5S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Job%2520Search%2520Platform%2520UI%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_uZps-5S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Job%2520Search%2520Platform%2520UI%2520%25281%2529.png" alt="Job Search Platform UI"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/TurkAysenur/embed/jOqdNbm?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#skateboard-video-platform"&gt;
  &lt;/a&gt;
  Skateboard Video Platform
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bMHaOxly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Skateboard%2520Video%2520Platform%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bMHaOxly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Skateboard%2520Video%2520Platform%2520%25281%2529.png" alt="Skateboard Video Platform"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/TurkAysenur/embed/LYRKpWe?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#instagram-redesign"&gt;
  &lt;/a&gt;
  Instagram re-design
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dSm3NjEv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Instagram%2520re-design%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dSm3NjEv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Instagram%2520re-design%2520%25281%2529.png" alt="Instagram re-design"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/TurkAysenur/embed/qeNvRM?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#videocall-app-ui"&gt;
  &lt;/a&gt;
  VideoCall App UI
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L6rOl1nA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/VideoCall%2520App%2520UI%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L6rOl1nA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/VideoCall%2520App%2520UI%2520%25281%2529.png" alt="VideoCall App UI"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/aybukeceylan/embed/pobbEYB?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#gym-website-tailwind-starter-kit"&gt;
  &lt;/a&gt;
  Gym Website - Tailwind Starter Kit
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V1hm--ab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Gym%2520Website%2520-%2520Tailwind%2520Starter%2520Kit%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V1hm--ab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Gym%2520Website%2520-%2520Tailwind%2520Starter%2520Kit%2520%25281%2529.png" alt="Gym Website - Tailwind Starter Kit"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/bradtraversy/embed/zYqVgXO?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#task-management-dashboard-ui"&gt;
  &lt;/a&gt;
  Task Management Dashboard UI
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jfw3G3xO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Task%2520Management%2520Dashboard%2520UI%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jfw3G3xO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Task%2520Management%2520Dashboard%2520UI%2520%25281%2529.png" alt="Task Management Dashboard UI"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/aybukeceylan/embed/gOpbRPO?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#internal-video-platform-ui"&gt;
  &lt;/a&gt;
  Internal Video Platform UI
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s_ENOSMd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Internal%2520Video%2520Platform%2520UI%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s_ENOSMd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Internal%2520Video%2520Platform%2520UI%2520%25281%2529.png" alt="Internal Video Platform UI"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/aybukeceylan/embed/VweooYQ?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#gmail-redesign"&gt;
  &lt;/a&gt;
  Gmail Redesign
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HjrncAeN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Gmail%2520Redesign%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HjrncAeN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Gmail%2520Redesign%2520%25281%2529.png" alt="Gmail Redesign"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/aybukeceylan/embed/xxKqyVO?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#chat-app-ui"&gt;
  &lt;/a&gt;
  Chat App UI
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kXVuvDYd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Chat%2520App%2520UI%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kXVuvDYd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Chat%2520App%2520UI%2520%25281%2529.png" alt="Chat App UI"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/aybukeceylan/embed/gVmZmJ?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#responsivewebpage"&gt;
  &lt;/a&gt;
  Responsive-Webpage
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tH3DB9K5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Responsive-Webpage%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tH3DB9K5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Responsive-Webpage%2520%25281%2529.png" alt="Responsive-Webpage"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/TurkAysenur/embed/wLOejj?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#dashboard-design-with-flexbox"&gt;
  &lt;/a&gt;
  Dashboard Design with Flexbox
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O4wcQvll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Dashboard%2520Design%2520with%2520Flexbox%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O4wcQvll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Dashboard%2520Design%2520with%2520Flexbox%2520%25281%2529.png" alt="Dashboard Design with Flexbox"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/TurkAysenur/embed/YmVYYR?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#services-section"&gt;
  &lt;/a&gt;
  Services Section
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wSvBVINm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Services%2520Section%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wSvBVINm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Services%2520Section%2520%25281%2529.png" alt="Services Section"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ahmadnasr/embed/KKpvNGY?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#spotify-artist-page-ui"&gt;
  &lt;/a&gt;
  Spotify Artist Page UI
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DeY-Rbbp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Spotify%2520Artist%2520Page%2520UI%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DeY-Rbbp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Spotify%2520Artist%2520Page%2520UI%2520%25281%2529.png" alt="Spotify Artist Page UI"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/alowenthal/embed/rxboRv?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#twitter-client-ui-in-css-html"&gt;
  &lt;/a&gt;
  Twitter Client UI in CSS + HTML
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2lxGxBk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Twitter%2520Client%2520UI%2520in%2520CSS%2520%2B%2520HTML%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2lxGxBk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Twitter%2520Client%2520UI%2520in%2520CSS%2520%2B%2520HTML%2520%25281%2529.png" alt="Twitter Client UI in CSS + HTML"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/marceloag/embed/fDmtq?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#responsive-movie-app-ui"&gt;
  &lt;/a&gt;
  Responsive Movie App UI
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LFXULPxo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Responsive%2520Movie%2520App%2520UI%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LFXULPxo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Responsive%2520Movie%2520App%2520UI%2520%25281%2529.png" alt="Responsive Movie App UI"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/nicklassandell/embed/soAyr?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#twitch-redesign-mockup"&gt;
  &lt;/a&gt;
  Twitch Redesign Mockup
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ESSBykvR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Twitch%2520Redesign%2520Mockup%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ESSBykvR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Twitch%2520Redesign%2520Mockup%2520%25281%2529.png" alt="Twitch Redesign Mockup"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/colewaldrip/embed/aqpRmQ?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#task-management-ui"&gt;
  &lt;/a&gt;
  Task Management UI
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sw88Q3hP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Task%2520Management%2520UI%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sw88Q3hP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Task%2520Management%2520UI%2520%25281%2529.png" alt="Task Management UI"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/aaronmcg/embed/GRjaRva?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#facebook-profile-page-ui-concept"&gt;
  &lt;/a&gt;
  Facebook Profile Page UI Concept
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uaSEDtbD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Facebook%2520Profile%2520Page%2520UI%2520Concept%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uaSEDtbD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/UI/Facebook%2520Profile%2520Page%2520UI%2520Concept%2520%25281%2529.png" alt="Facebook Profile Page UI Concept"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/himalayasingh/embed/bxoBZZ?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/nhat"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
