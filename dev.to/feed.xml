<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Why open-source to get a better job as a developer is nonsense *(and what you should do instead)</title>
      <author>Dragos Nedelcu</author>
      <pubDate>Tue, 01 Jun 2021 08:30:04 +0000</pubDate>
      <link>https://dev.to/dragosgn/why-open-source-to-get-a-better-job-as-a-developer-is-nonsense-and-what-you-should-do-instead-3id0</link>
      <guid>https://dev.to/dragosgn/why-open-source-to-get-a-better-job-as-a-developer-is-nonsense-and-what-you-should-do-instead-3id0</guid>
      <description>&lt;p&gt;Have you heard it before?&lt;/p&gt;

&lt;p&gt;To get a great job as a developer, you should contribute to open-source projects.&lt;/p&gt;

&lt;p&gt;I say it is a bunch of nonsense.&lt;/p&gt;

&lt;p&gt;Think about it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you have a full-time job, you just don't have the time to do it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Even if you could, where would you get the time from? If you are already employed where can you take the time from and do it? You would have two jobs now, one of them unpaid. You will feel exhausted and burn out. And for what? An entry in your CV?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Doing open-source while having a job puts you at risk of burnout.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I love contributing and giving back to the community, yes. But for the right reasons and in a sustainable way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you don‚Äôt have a job, your time is better invested elsewhere.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now, if you don‚Äôt have a job, you are better off putting all your time and energy in looking for one instead of forking random projects. You need to pay those bills my friend and unless you are in a special position* the bits and bytes in that boilerplate won‚Äôt do it for you. There are easier ways to put a roof under your head and provide for your loved ones.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you have to pay the bills, you need to code for $$$.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Yet, let‚Äôs for a moment imagine you have the time and energy. Let‚Äôs imagine you could actually do it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It might be too far away from your current skills&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs say you find a project where you can contribute. And you spend a few hours, onboard yourself and even help out and update some documentation. Yes, you made some progress, but that progress might be too far away from your current skills and from the skills employers demand.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The knowledge you get is probably out of context.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The hard truth is, contributing is just hard. It is something that you can afford once you get that high-paying job at a top tech company. Probably because the company will give you the space to do that in working hours and you will work with like-minded developers that also do it.&lt;/p&gt;

&lt;p&gt;And though contributing to open-source can be extremely rewarding for certain developers in certain positions. For the average software developer, it is just incredibly hard.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The good news?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are easier ways to get better at software development. In fact, at CodeWithDragos we have developed and battle-tested a system whose objective is just that. Turning you into a software rockstar, so you can get that high-paying job you deserve as a developer.&lt;/p&gt;

&lt;p&gt;If you truly want a high-paying job as a developer and you are curious about how you could actually get it, just drop me a line or book a FREE consultation call below.&lt;/p&gt;

&lt;p&gt;Together we will analyze your situation and build a step-by-step plan to help you get that developer job you dream of.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#click-here-to-apply-now"&gt;
  &lt;/a&gt;
  &lt;a href="//codewithdragos.com"&gt;&lt;strong&gt;Click here to apply now!&lt;/strong&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;I look forward to consulting you personally soon!&lt;/p&gt;

&lt;p&gt;Dragos Nedelcu&lt;/p&gt;

&lt;p&gt;Founder at CodeWithDragos&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>I made something </title>
      <author>atulit023</author>
      <pubDate>Tue, 01 Jun 2021 08:15:19 +0000</pubDate>
      <link>https://dev.to/icecoffee/i-made-something-3ad5</link>
      <guid>https://dev.to/icecoffee/i-made-something-3ad5</guid>
      <description>&lt;p&gt;Hey everyone. It's an absolute pleasure to write something again. &lt;br&gt;
Since the past couple of days I've been busy with my university exams (footnote: still not over üòê).&lt;br&gt;
But I still managed to learn ReactJS and Java.&lt;/p&gt;

&lt;p&gt;And here is what I made as my very first single page application.&lt;br&gt;
Not technically but still it's something more then a frekin TODO app lol&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3dG9tHbD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jxtks9axuq0s89y5js9k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3dG9tHbD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jxtks9axuq0s89y5js9k.png" alt="my app tablet view"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yep! A beautiful implementation of dev.to API.&lt;/p&gt;

&lt;p&gt;It isn't my idea per say but this application is till not complete. This is just a branch of it.&lt;br&gt;
I want to implement so much more in it after this. NO SPOILERS. Just stay tuned you won't be disappointed.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#my-experience"&gt;
  &lt;/a&gt;
  my experience
&lt;/h1&gt;

&lt;p&gt;Since the very day I started to learn I knew about &lt;em&gt;git bash&lt;/em&gt;. Still I just use to drag and drop my code everywhere. But while making this I thought of using it. I wanted to see how version control works. Well I'd say it is the &lt;strong&gt;best tool after vs code&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I also deployed it on &lt;em&gt;AWS&lt;/em&gt;, but their is some issue. IDK what but some of my styling is not visible. What a pitty Mr Jeff.üòÇ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/icecoffee-dev/devto-api-bootstap/tree/search-withoutportal"&gt;AWS Deployment&lt;/a&gt; -- here&lt;/p&gt;

&lt;p&gt;That should actually look like this.&lt;br&gt;
And it must also include my search box.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L07TJu2i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2b1cb1r754u3hqj8774.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L07TJu2i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2b1cb1r754u3hqj8774.png" alt="mobile view"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Despite of that I also found out the topics that I don't know enough.&lt;br&gt;
This project is more of less like stepping stones but the next version is going to be amazing. I can feel it.&lt;/p&gt;

&lt;p&gt;You can checkout my repository here.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/icecoffee-dev/devto-api-bootstap/"&gt;main&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/icecoffee-dev/devto-api-bootstap/tree/search-withoutportal"&gt;search-withoutportal&lt;/a&gt; - completed &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/icecoffee-dev/devto-api-bootstap/tree/searchbox"&gt;searchbox&lt;/a&gt; - working on it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I learned a lot and I feel good about it.&lt;/p&gt;

&lt;p&gt;I'm down for suggestions and hope you may like it.&lt;br&gt;
I have also opened up some issues in the repositories. Feel free to check'em out and comment . &lt;br&gt;
Other then that a special thanks to &lt;a class="mentioned-user" href="https://dev.to/mwrpwr"&gt;@mwrpwr&lt;/a&gt;
 for his article regarding dev.to API. Since this is my first API I wanted someone to show me how to use it and &lt;a class="mentioned-user" href="https://dev.to/coffeestasia"&gt;@coffeestasia&lt;/a&gt;
 for that amazing article on portfolio website. Because I will include full version of this app in my portfolio with proper styling n all.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#goodreads-"&gt;
  &lt;/a&gt;
  Goodreads :)
&lt;/h2&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mwrpwr" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mhiTRQg---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--xMQblGGs--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/600844/618bf69b-a4e0-4483-8668-22ce6270a1f7.png" alt="mwrpwr image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mwrpwr/exploring-dev-to-api-45ni" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Exploring DEV.to API&lt;/h2&gt;
      &lt;h3&gt;Joseph Maurer „Éª May 28 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#todayilearned&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#api&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/coffeestasia" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m9lVgk9G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--lXaYQ4Mo--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/452501/9bf1251a-c9ff-460b-a2b1-3fd4985d7d04.jpg" alt="coffeestasia image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/actitime/how-to-build-a-great-developer-portfolio-examples-tools-bkj" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to Build a Great Developer Portfolio (+ Examples &amp;amp; Tools)&lt;/h2&gt;
      &lt;h3&gt;Anastasia üèÑüèª‚Äç‚ôÄÔ∏è „Éª May 26 „Éª 15 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#100daysofcode&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Oh shoot did I forgot to mention. &lt;br&gt;
I launched an npm package&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#reactrouterparcel"&gt;
  &lt;/a&gt;
  reactrouter-parcel
&lt;/h4&gt;

&lt;p&gt;which is nothing but my boilerplate for my react apps.&lt;br&gt;
You can check it out &lt;a href="https://www.npmjs.com/package/reactrouter-parcel"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's amazing for beginners still I just think it's better than create react app.&lt;/p&gt;

&lt;p&gt;And done! That's it for today.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;br&gt;
Have a beautiful day.üòÄ&lt;/p&gt;

</description>
      <category>react</category>
      <category>aws</category>
      <category>github</category>
      <category>career</category>
    </item>
    <item>
      <title>Solution: Max Area of Island</title>
      <author>seanpgallivan</author>
      <pubDate>Tue, 01 Jun 2021 08:12:25 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-max-area-of-island-4njk</link>
      <guid>https://dev.to/seanpgallivan/solution-max-area-of-island-4njk</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/max-area-of-island/discuss/1244552"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-695-medium-max-area-of-island"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/max-area-of-island/"&gt;Leetcode Problem #695 (&lt;em&gt;Medium&lt;/em&gt;): Max Area of Island&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You are given an &lt;code&gt;m x n&lt;/code&gt; binary matrix grid. An island is a group of &lt;code&gt;1&lt;/code&gt;'s (representing land) connected &lt;strong&gt;4-directionally&lt;/strong&gt; (horizontal or vertical.) You may assume all four edges of the grid are surrounded by water.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;area&lt;/strong&gt; of an island is the number of cells with a value &lt;code&gt;1&lt;/code&gt; in the island.&lt;/p&gt;

&lt;p&gt;Return &lt;em&gt;the maximum &lt;strong&gt;area&lt;/strong&gt; of an island in grid&lt;/em&gt;. If there is no island, return &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;grid = [[0,0,1,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,1,1,0,1,0,0,0,0,0,0,0,0],[0,1,0,0,1,1,0,0,1,0,1,0,0],[0,1,0,0,1,1,0,0,1,1,1,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,0,0,0,0,0,0,1,1,0,0,0,0]]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;The answer is not 11, because the island must be connected 4-directionally.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zmStxdoq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.leetcode.com/uploads/2021/05/01/maxarea1-grid.jpg" alt="Example 1 Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;grid = [[0,0,0,0,0,0,0,0]]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;m == grid.length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;n == grid[i].length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= m, n &amp;lt;= 50&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;grid[i][j]&lt;/code&gt; is either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;So we can just use a simple iteration through the &lt;strong&gt;grid&lt;/strong&gt; and look for islands. When we find an island, we can use a &lt;strong&gt;recursive&lt;/strong&gt; helper function (&lt;strong&gt;trav&lt;/strong&gt;) to sum up all the connected pieces of land and &lt;strong&gt;return&lt;/strong&gt; the total land mass of the island. &lt;/p&gt;

&lt;p&gt;As we traverse over the island, we can replace the &lt;strong&gt;1&lt;/strong&gt;s with &lt;strong&gt;0&lt;/strong&gt;s to prevent "finding" the same land twice. We can also keep track of the largest island found so far (&lt;strong&gt;ans&lt;/strong&gt;), and after the &lt;strong&gt;grid&lt;/strong&gt; has been fully traversed, we can &lt;strong&gt;return ans&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N * M)&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; and &lt;strong&gt;M&lt;/strong&gt; are the lengths of the sides of the &lt;strong&gt;grid&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;&lt;strong&gt;Space Complexity: O(L)&lt;/strong&gt; where &lt;strong&gt;L&lt;/strong&gt; is the size of the largest island, representing the maximum &lt;strong&gt;recursion stack&lt;/strong&gt;&lt;/em&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;or &lt;strong&gt;O(N * M + L)&lt;/strong&gt; if we create an &lt;strong&gt;N * M&lt;/strong&gt; matrix in order to not modify the input&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;maxAreaOfIsland&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;trav&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;trav&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;trav&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;trav&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;trav&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;trav&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;maxAreaOfIsland&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;trav&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
            &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;trav&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;trav&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;trav&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;trav&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;trav&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;maxAreaOfIsland&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; 
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;trav&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;trav&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;trav&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;trav&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;trav&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;trav&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;maxAreaOfIsland&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;trav&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nl"&gt;private:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;trav&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;trav&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;trav&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;trav&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;trav&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Introduction to Microservices</title>
      <author>Pasindu Chinthana</author>
      <pubDate>Tue, 01 Jun 2021 07:31:36 +0000</pubDate>
      <link>https://dev.to/edpchinthana/introduction-to-microservices-2aom</link>
      <guid>https://dev.to/edpchinthana/introduction-to-microservices-2aom</guid>
      <description>&lt;h3&gt;
  &lt;a href="#monolithic-architecture"&gt;
  &lt;/a&gt;
  Monolithic Architecture
&lt;/h3&gt;

&lt;p&gt;In earlier days, monolithic architecture was used everywhere. It was a single application which facilitate the all functions in the system. It was simple and easy to organize early. But when the systems get complex, developers had to face a lot of issues.&lt;/p&gt;

&lt;p&gt;Lets take this taxi app(like Uber) architecture. It has a central application that handles every feature of the system.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EMq54IzH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l39yvvkuphkolmee250n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EMq54IzH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l39yvvkuphkolmee250n.png" alt="monolith architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In this example, these modules are resident inside one application. So the code base must be huge and consume more resources. These modules are coupled tight. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Imagine you are going to add a feature or change the code. Then you need to test the code and all integration testing so on. Even you need to understand the whole flow of the code before modifying it. This happens because it is tightly coupled with other components. A small change in one component can affect another component's flow.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Usually, trip tracking might have more traffic than billing components. Since all of these are inside one application you need to scale up the whole application. But it is not efficient.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Whole features should be implemented using one technology or framework. But technologies are getting changed, updated frequently. With a monolithic approach, it is hard to upgrade frequently.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#service-oriented-architecture"&gt;
  &lt;/a&gt;
  Service Oriented Architecture
&lt;/h3&gt;

&lt;p&gt;In early, most of the systems were developed in monolithic architecture. But with time, developers understood it would be easy if the application is more modular. &lt;/p&gt;

&lt;p&gt;So they started developing separate applications with separate technologies, and infrastructures. With that, they could write and test modules separately and even scale. &lt;/p&gt;

&lt;p&gt;The services were running on the same network and services communicated internally over the network.&lt;/p&gt;

&lt;p&gt;But still, it had some kind of coupling between services. &lt;/p&gt;

&lt;p&gt;Then developers start thinking to develop more modular components than in service oriented approach.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#microservices"&gt;
  &lt;/a&gt;
  Micro-services
&lt;/h3&gt;

&lt;p&gt;Micro-services architecture is an extension from service oriented architecture. A module in micro-services can be modified, tested, deployed without affecting other modules.&lt;/p&gt;

&lt;p&gt;Micro-services has hexagonal architecture. Which means a module can be plugged in anywhere, any application. They are more granular. &lt;/p&gt;

&lt;p&gt;Each micro-service is a mini application that has its own hexagonal architecture consisting of business logic along with various adapters. Sometimes micro-services would expose and API that is consumed by other micro-services or by the application's clients. &lt;/p&gt;

&lt;p&gt;At runtime, each instance is often a cloud virtual machine(VM) or a Docker container.&lt;/p&gt;

&lt;p&gt;Lets take the same example we got earlier. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wAsWZgIJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rf9kfyh7ksnkp55m1i6a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wAsWZgIJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rf9kfyh7ksnkp55m1i6a.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Since the micro services are separated applications, we can modify, and add new features without affecting other applications. We don't need to test other applications. But in product testing it might be overhead.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We can scale up selected micro services at demand. So it does not need much resources for unnecessary applications. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Since we can run multiple instances, we can have much availability. Imagine one instance fails due to some reason. But we have another instance up and running. So with this approach we can have better availability and reliability with this approach.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
&lt;li&gt;With this hexagonal architecture, we can use this component in any applications. These micro-services are more oriented on their task. So a new developer can easily adapt to working on a micro service, since he does not need to know about the whole application idea.

&lt;/li&gt;
&lt;/ul&gt;



&lt;h4&gt;
  &lt;a href="#characteristics-of-microservices-architecture"&gt;
  &lt;/a&gt;
  Characteristics of Micro-services Architecture
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Decentralized&lt;br&gt;
Micro-services architectures are distributed systems with decentralized data management. They do not rely on a unifying schema in a central database.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Polyglot&lt;br&gt;
Micro-services architecture take a heterogeneous approach to operating systems, programming languages, data stores and tools.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do one thing well&lt;br&gt;
Each micro-service component it designed for a set of capabilities and focuses on a specific domain.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You build it, you run it&lt;br&gt;
The team responsible for building a service is also responsible for operating and maintaining it in production.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Black Box&lt;br&gt;
They hide the details of their complexity from other components.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Independent&lt;br&gt;
Different components in a micro-services architecture can be changed, upgraded or replaced independently without affecting the functioning of other components.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;h4&gt;
  &lt;a href="#advantages-of-microservices-architecture"&gt;
  &lt;/a&gt;
  Advantages of Micro-Services Architecture
&lt;/h4&gt;

&lt;p&gt;Enables the continuous delivery and deployment of large, complex applications and enables to organize the development effort around multiple, auto teams.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Better test-ability - services are smaller and faster to test&lt;/li&gt;
&lt;li&gt;Better deploy-ability - services can be deployed independently&lt;/li&gt;
&lt;li&gt;Agility&lt;/li&gt;
&lt;li&gt;Flexible scaling&lt;/li&gt;
&lt;li&gt;Easy deployment&lt;/li&gt;
&lt;li&gt;Technological freedom&lt;/li&gt;
&lt;li&gt;Reusable code&lt;/li&gt;
&lt;li&gt;Resilience

&lt;/li&gt;
&lt;/ul&gt;



&lt;h4&gt;
  &lt;a href="#drawbacks-of-microservices-architecture"&gt;
  &lt;/a&gt;
  Drawbacks of Micro-Services Architecture
&lt;/h4&gt;

&lt;p&gt;Developers must deal with the additional complexity of creating a distributed application.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Developer tools/ IDEs are oriented on building monolithic applications.&lt;/li&gt;
&lt;li&gt;Developers must implement the inter service communication mechanism.&lt;/li&gt;
&lt;li&gt;Implementing distributed transactions is difficult.&lt;/li&gt;
&lt;li&gt;Implementing use cases that span multiple services requires careful coordination between the teams.&lt;/li&gt;
&lt;li&gt;Testing is more difficult&lt;/li&gt;
&lt;li&gt;More deployment complexity.&lt;/li&gt;
&lt;li&gt;In production, there is also the operational complexity of deploying and managing a system comprised of many different service types.&lt;/li&gt;
&lt;li&gt;Increased memory consumption.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
Resources:&lt;br&gt;
Introduction to microservices  by Ashish Pandey&lt;br&gt;
&lt;a href="https://www.udemy.com/course/introduction-to-microservices-edyoda/"&gt;https://www.udemy.com/course/introduction-to-microservices-edyoda/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>microservices</category>
      <category>monolithic</category>
      <category>architecture</category>
    </item>
    <item>
      <title>How to use Github as a Cloud Storage For Web Development </title>
      <author>Deep Bag</author>
      <pubDate>Tue, 01 Jun 2021 07:29:14 +0000</pubDate>
      <link>https://dev.to/erdeepbag/how-to-use-github-as-a-cloud-storage-for-web-development-2n79</link>
      <guid>https://dev.to/erdeepbag/how-to-use-github-as-a-cloud-storage-for-web-development-2n79</guid>
      <description>&lt;p&gt;Github provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management functionality of Git, plus its own features.&lt;/p&gt;

&lt;p&gt;GitHub is where over 65 million developers shape the future of software, together. Contribute to the open source community, manage your Git repositories.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can use anywhere this link like Website Development.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#access-or-use-files-directly-via-link-from-github"&gt;
  &lt;/a&gt;
  Access or use Files Directly via link From Github
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;First You need Github account 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NczDHQeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/44odwwv9hygz1sc1hnbf.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Create new Repository
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jA_2ekfh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y7p5xxcemvj8bso0g66.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Fill all given info prefer below image
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ezJQY0we--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o1vuqs4m9gujyec6wjbn.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Create new file - path &lt;code&gt;foldername/readme&lt;/code&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TpNAUnc4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1h1ysm8f9u7j8alksm0f.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Upload your images in your path &lt;code&gt;foldername/&lt;/code&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SbCt51wY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u59oy22i5tialtbzfrao.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Click Your image which image you want to access directly via link
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RYaMElfl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xndkn35wyn7c94tdfnl.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Right click in your image &lt;code&gt;Open in a new tab&lt;/code&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wODmwgO---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jz5ojm7a9i84071styrc.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Copy Link and Use where you 
&lt;code&gt;Web Development ( &amp;lt;img src="examplelink" alt="example" /&amp;gt; )&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;yeahh! now i have github for multiple uses.&lt;/p&gt;

</description>
      <category>github</category>
      <category>cloudstorage</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to increase income as a web developer in 2021?</title>
      <author>themeselection</author>
      <pubDate>Tue, 01 Jun 2021 07:27:40 +0000</pubDate>
      <link>https://dev.to/theme_selection/how-to-increase-income-as-a-web-developer-in-2021-3a3a</link>
      <guid>https://dev.to/theme_selection/how-to-increase-income-as-a-web-developer-in-2021-3a3a</guid>
      <description>&lt;p&gt;In the previous article, we discussed &lt;a href="https://dev.to/theme_selection/how-to-make-passive-income-as-a-web-developer-in-2021-5gjl"&gt;How To Make Side Income As a Web Developer&lt;/a&gt;. Here we are going to discuss &lt;a href="https://dev.to/theme_selection/how-to-increase-income-as-a-web-developer-in-2021-3a3a"&gt;How to increase income as a web developer&lt;/a&gt; in 2021?&lt;/p&gt;

&lt;p&gt;In this article, we have listed down some points that can help you get paid more as a web developer. We do not claim this article to be the perfect one as there can be more ways. Although, we have tried to include the best ones.&lt;/p&gt;

&lt;p&gt;We are sure that after going through the article, you'll be able to earn more while having a job or if you are applying for the new one.&lt;/p&gt;

&lt;p&gt;Now, let's begin...!!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-study-how-to-get-paid-more-as-a-web-developer"&gt;
  &lt;/a&gt;
  1. Study How to Get Paid More as a Web Developer
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QEvwbzaE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ae5dzbl9t87d5arre92.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QEvwbzaE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ae5dzbl9t87d5arre92.jpg" alt="Get paid more as a web developer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit: &lt;a href="https://www.freepik.com/free-vector/hand-drawn-web-developers_12063795.htm#page=1&amp;amp;query=website%20development&amp;amp;position=16"&gt;freepik&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first step is to categorize which skills you can learn in order to get paid more. More the skills, more the salary. In order to know which skill you are gonna need, you'll have to prioritize your field of interest such as designing, programming, which particular framework and language you can master.&lt;/p&gt;

&lt;p&gt;Once you start learning them, develop projects alongside them. You can present the projects in the CV, which will surely create a good impact and will help you to get paid more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-website-developer-skills-that-will-boost-your-pay"&gt;
  &lt;/a&gt;
  2.  Website Developer Skills That Will Boost Your Pay
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AYkZ_Fqy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvar7lu7yvju2ld7h2wh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AYkZ_Fqy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvar7lu7yvju2ld7h2wh.jpg" alt="website development"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit: &lt;a href="https://www.freepik.com/free-vector/website-development-banner_5467393.htm#page=1&amp;amp;query=website%20development&amp;amp;position=26"&gt;Freepik&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;According to Payscale data, the &lt;a href="https://www.payscale.com/research/US/Job=Web_Developer/Salary"&gt;average base pay&lt;/a&gt;  for a Web Developer is $60,050/year. Additional cash compensation like bonuses and profit-sharing can range from $803 - $13,113.&lt;/p&gt;

&lt;p&gt;Well, being able to create your own design for your webpage can help you increase your earning potential. You and your client will not have to hire a separate web designer which will cut the cost, and you will be able to get the work completed faster since you don't need another person. You can create your own design and work with your client to create a page that they will be happy with.&lt;/p&gt;

&lt;p&gt;While designing a good and catchy website you'll require some resources. You can check the following collection.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/theme_selection" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KfopPUEP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---c-0NR02--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/307204/326109cb-a894-412a-b963-1cf36950736d.jpg" alt="theme_selection image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theme_selection/best-design-resources-websites-every-developer-should-bookmark-1p5d" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Best design üé® resources websites every developer üíª should bookmarküîñ&lt;/h2&gt;
      &lt;h3&gt;themeselection „Éª Sep 17 '20 „Éª 13 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;You should be also familiar with Search Engine Optimization. If you are able to create content for your website, you will not have to hire a content manager for the site. Be sure that you are taking a good technical writing class that will teach you how to create the best SEOs for your site. You can work directly with your client to create content that will create web traffic&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-career-paths-that-will-boost-pay"&gt;
  &lt;/a&gt;
  3.  Career Paths That Will Boost Pay
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MDL1Tb2c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sxnxp1cjqejo5ho8auv3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MDL1Tb2c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sxnxp1cjqejo5ho8auv3.jpg" alt="Career development"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit: &lt;a href="a%20href='https://www.freepik.com/vectors/certificate'&amp;gt;Certificate%20vector%20created%20by%20vectorjuice%20-%20www.freepik.com&amp;lt;/ahttps://www.freepik.com/free-vector/engineer-developer-with-laptop-tablet-code-cross-platform-development-cross-platform-operating-systems-software-environments-concept-bright-vibrant-violet-isolated-illustration_10780377.htm#page=1&amp;amp;query=website%20development&amp;amp;position=23"&gt;Freepik&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create a personal website:&lt;/strong&gt;  If you create your own website, you can show clients what you are capable of doing. This will surely bring you more income and help your career get started. If you are just getting started and want some fresh ideas you can check out the  &lt;a href="http://www.beautifullife.info/web-design/15-best-free-website-builders/"&gt;15 best free website builders&lt;/a&gt;  online for some tips on how to make your website stand out from the rest.&lt;/p&gt;

&lt;p&gt;While building your website you will have to keep an eye on web development trends. For that, you can check the following article.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/theme_selection" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KfopPUEP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---c-0NR02--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/307204/326109cb-a894-412a-b963-1cf36950736d.jpg" alt="theme_selection image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theme_selection/dominating-web-development-trends-2021-2ihp" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Dominating Web Development Trends 2021üí•&lt;/h2&gt;
      &lt;h3&gt;themeselection „Éª Dec 7 '20 „Éª 19 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Clients:&lt;/strong&gt;  If you are freelancing or increasing your income by working on the side, you need to pick and choose your clients with care. You want a client that will work with you and will pay you upfront. Clients that want to control everything about your work or who are reluctant to pay you should be avoided. You want to work with honest people who appreciate what you are doing for them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Network:&lt;/strong&gt;  You can get your name out and about by networking with different people. Finding the right person to work with can be a good option. Get your name out to potential clients by promoting yourself among your colleagues, family, and friends. Let people around you know you are working as a website developer and ask them to pass along your information to potential clients. You can then pick and choose between the offers and choose one that will help you boost your career path and pay.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-how-to-get-a-raise-as-a-website-developer"&gt;
  &lt;/a&gt;
  4.  How to Get a Raise as a Website Developer
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UXYOQUU2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yisff6xw3qfqtgb0dwx2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UXYOQUU2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yisff6xw3qfqtgb0dwx2.jpg" alt="Website developer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit: &lt;a href="https://www.freepik.com/free-vector/social-support-concept-residents-getting-basic-benefits-from-government_11235868.htm#page=1&amp;amp;query=people%20vector%20money&amp;amp;position=3"&gt;Freepik&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are two key ways to increase your income as a web developer: upsell and work more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.creativebloq.com/business/ecommerce-upsells-41514771https://rushax.com/30-services-to-upsell-as-a-web-designer/"&gt;Upselling is when you offer&lt;/a&gt;  your clients more features for an additional cost. A few features can mean extra dollars in your pocket. Have a list of additional features with costs and be ready to sell them to your clients. You should be developing a base webpage at a certain cost. If your client wants extra, they will have to pay extra. For each feature, your client requests you will earn a bonus on top of your agreed-upon salary.&lt;/p&gt;

&lt;p&gt;The more hours you work, the more you can accomplish and the more money you will make. If you can work at least eight hours or more a day when you are starting out you should be able to get more clients and earn more money. The more clients you can satisfy, the more money you will earn.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-how-to-get-promoted-as-a-website-developer"&gt;
  &lt;/a&gt;
  5.  How to Get Promoted as a Website Developer
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CexqTToV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4p388lzje91ex6rzqxbk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CexqTToV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4p388lzje91ex6rzqxbk.jpg" alt="Promotion"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit: &lt;a href="https://unsplash.com/photos/NbtIDoFKGO8"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like most industries, promotions come with experience and success. In the world of web development, ongoing education and new skill development are very important.&lt;/p&gt;

&lt;p&gt;The  &lt;a href="https://skillcrush.com/blog/be-a-successful-web-designer/"&gt;more skills you know&lt;/a&gt;, the more likely you will be to get promoted. You can learn a new coding language or some technical writing skills. The more you explore and show your skill, the more your company will appreciate what you do and the better your chances of getting promoted.&lt;/p&gt;

&lt;p&gt;Furthermore, if you can satisfy clients that are investing large amounts of money into your company you will be noticed. You want to be sure to make their page exactly the way they want it and maybe add a few more perks on the side. If high-paying clients ask for you, you are more likely to get a promotion.&lt;/p&gt;

&lt;p&gt;When you‚Äôve positioned yourself and you‚Äôre ready to ascend the career ladder, ask your boss for a meeting to discuss your role. Here are a few things to keep in mind.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Do plan the meeting.&lt;/strong&gt; It‚Äôs really a good idea to have your agenda outlined in advance so you can explain that you‚Äôre a fit for the new position. Having everything laid out in advance allows you to focus on important points, which makes you appear more composed and confident.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Don‚Äôt skimp on the presentation.&lt;/strong&gt;  Presentation will never get old in any field. Point to point presentation will help you present yourself more sufficiently. If you have insights or data to share, get them down on paper so you can present them to your boss with flair.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Don‚Äôt make it all about you.&lt;/strong&gt; Your boss likely doesn‚Äôt care that your rent went up, or that it‚Äôs been a couple of years since your last promotion. Remember, it‚Äôs not about what your company can do for you, but what you can do for the company.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Do focus on the benefits.&lt;/strong&gt; Your boss‚Äôs job is to look after the best interests of the company. He or she needs to see how promoting you will improve that bottom line.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Don‚Äôt assume you deserve a raise simply based on your length of employment.&lt;/strong&gt; Many workers think that longevity should equal a promotion. Well, that‚Äôs not the case in today‚Äôs workplace. You‚Äôll need to show how your contributions create value. Having a work exposure is a good thing but it's the set of the skill that matters the most.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Don‚Äôt compare yourself to others.&lt;/strong&gt; Be better for yourself. No need to compare with others even if you are doing good. Do point out your skills without bringing others into the talk. Your meeting should focus on your own merit and accomplishments.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Do think in terms of what you deserve, not what you need.&lt;/strong&gt; You may need more money, and deserve it as well, but unless you can prove that you also deserve it you won‚Äôt get far in your quest for promotion. So, be prepared to demonstrate why you‚Äôre the right person for the job.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Do consider timing.&lt;/strong&gt; It makes good sense to ask for a promotion just after you‚Äôve achieved a significant milestone. If your biggest successes are months in the past, you‚Äôll want to wait until some of your current projects have come to fruition.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Do dress for success.&lt;/strong&gt; Even if your company dress code is casual, make sure you dress well on the day of your meeting. You don‚Äôt have to wear a three-piece suit if your work attire is usually business casual, but make sure you‚Äôre looking clean and polished.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Don‚Äôt forget to rehearse before your meeting.&lt;/strong&gt; At the very least, prepare and rehearse by yourself. If you can, ask a trusted friend to listen to your pitch. &lt;a href="http://www.salary.com/9-things-never-say-ask-for-raise/"&gt;Consider these nine things&lt;/a&gt; you should never say when you‚Äôre asking for a promotion.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#6-how-to-get-a-new-higher-paying-job"&gt;
  &lt;/a&gt;
  6.  How to Get a New, Higher Paying Job
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Aa-aMiwi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4f6buo3228456zi6rimq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Aa-aMiwi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4f6buo3228456zi6rimq.jpg" alt="Web development job"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit: &lt;a href="https://unsplash.com/photos/6dW3xyQvcYE"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you are working as a website developer at a company you can get a higher paying job by branching out to freelancing or working for a bit com client. You can get a higher-paying website developer job as you hone your skills and get better at your craft. You can also do some of the following:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Teach:&lt;/strong&gt;  There are many people who want to learn how to develop websites. You can set up a video teaching tutorial and earn more money by showing others how to develop websites.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Partner with an agency:&lt;/strong&gt;  You can offer your clients more perks and upsells by pairing with a marketing agency. You will also put yourself in a position to earn a higher salary. The more things you can offer your clients, the higher you will be paid.&lt;/p&gt;

&lt;p&gt;Here are a few additional professions with high earning potential based on &lt;a href="https://www.payscale.com/"&gt;Payscale&lt;/a&gt; data:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Senior Web Developer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Average Base Pay: $88,254/year&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Front-End Web Developer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Average Base Pay: $74,880/ year&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Senior Software Engineer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Average Base Pay: $119,126/ year&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Web Administrator&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Average Base Pay: $59,962/ year&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Web Designer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Average Base Pay: $51,353/ year&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;E-Commerce Analyst&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Average Base Pay: $54,939/ year&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h3&gt;

&lt;p&gt;Well, so here we discussed some of the best ways to double up your income as a web developer in 2021. Obviously, there can be many other ways as well. Although, we have tried to suggest some of the best ways.&lt;/p&gt;

&lt;p&gt;In order to get a raise or have a well-paid job, it is necessary that you develop some of the required skills. Along with the required skills, it will be good to have some additional skills also. So, start with developing skills. Learn the language, designing, programming as per your expertise or interest. Once you acquire the essential skill, you can go with additional skills. &lt;/p&gt;

&lt;p&gt;This article is not just for those who are already doing a job. The intention here is to help every web developer who is looking for a raise.&lt;/p&gt;

&lt;p&gt;We hope you find this article noteworthy. Do tell us in the comment section below, what're your opinion or other ways that we can add. Also, don't forget to bookmark and share.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#about-us"&gt;
  &lt;/a&gt;
  About Us:
&lt;/h2&gt;

&lt;p&gt;We, at  &lt;a href="https://themeselection.com/"&gt;ThemeSelection&lt;/a&gt;, provide selected high quality, modern design, professional and easy-to-use premium and  &lt;a href="https://themeselection.com/"&gt;free bootstrap admin template&lt;/a&gt;, and UI Kits. &lt;/p&gt;

&lt;p&gt;You can check some of the admin templates which have used the mentioned sources.  &lt;strong&gt;&lt;a href="https://themeselection.com/products/chameleon-admin-free-bootstrap-dashboard-template/"&gt;Chameleon Free Bootstrap Admin Template&lt;/a&gt;&lt;/strong&gt;  and  &lt;strong&gt;&lt;a href="https://themeselection.com/go/download-vuexy-vuejs/"&gt;Vuexy Vuejs, React, HTML &amp;amp; Laravel Admin Dashboard Template&lt;/a&gt;&lt;/strong&gt;  are the best example of how you can use these resources for making your project awesome.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Useful Git Commands.üíª</title>
      <author>shubham yadav</author>
      <pubDate>Tue, 01 Jun 2021 07:25:58 +0000</pubDate>
      <link>https://dev.to/shubh/useful-git-commands-1fdn</link>
      <guid>https://dev.to/shubh/useful-git-commands-1fdn</guid>
      <description>&lt;h4&gt;
  &lt;a href="#git-is-an-example-of-a-distributed-version-control-system-commonly-used-for-open-source-and-commercial-software-development"&gt;
  &lt;/a&gt;
  Git is an example of a distributed version control system commonly used for open source and commercial software development.
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Let's go :&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;initalize git in files/directories.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2.Clone the repository in your local system.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/&amp;lt;your-user-name&amp;gt;/&amp;lt;repo-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3.To check the current status of the repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git status
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;4.To add specific file to the staging area.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add &amp;lt;file-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;5.To add all changed file to staging area.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;6.To unstage a certain file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git restore --stagged &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;7.To see recent changes in the repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git diff
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;8.To give a message and commit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit -m "your-message"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;9.To see the commit history.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git log
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;10.To see last specific commits (eg. Last 3 commits).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git log -3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;11.To discard the specific commit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git revert &amp;lt;commit-token&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;12.To undo the commit and bring back changes to staging area.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git reset --soft HEAD &amp;lt;no._of_commit_to_revert&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;13.To show remote URLs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git remote -v
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;14.To fetch the changes from origin to your local system.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git pull origin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;15.To create a branch named branch-name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git branch &amp;lt;branch-name&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;16.To make changes in the specific branch.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git checkout &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;17.To merge sub branch to main branch.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git merge &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;18.To delete a specific branch.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git branch -d &amp;lt;branch-name&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;19.To push the recent commits.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push origin &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>github</category>
      <category>git</category>
      <category>tooling</category>
      <category>commands</category>
    </item>
    <item>
      <title>JavaScript new features in ECMAScript 2021</title>
      <author>Muhammad Bilal Bangash</author>
      <pubDate>Tue, 01 Jun 2021 07:23:57 +0000</pubDate>
      <link>https://dev.to/bangash1996/javascript-new-features-in-ecmascript-2021-1gg8</link>
      <guid>https://dev.to/bangash1996/javascript-new-features-in-ecmascript-2021-1gg8</guid>
      <description>&lt;p&gt;Below are some new features that you can expect from the ECMAScript:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;replaceAll&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Promise.any&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WeakRefs and finalizer&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Logical Assignment Operators&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Numeric separator&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's begin with the first one.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-replaceall-method"&gt;
  &lt;/a&gt;
  1. replaceAll() method
&lt;/h3&gt;

&lt;p&gt;The &lt;strong&gt;replaceAll()&lt;/strong&gt; method allows you to replace all occurrences of a substring with another string that you defined. Currently, the &lt;strong&gt;replace()&lt;/strong&gt; method only replace the first occurrence of the substring while ignoring the rest:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const str = 'How+are+you?';
const addSpaces = str.replace('+', ' ');
console.log(addSpaces); // How are+you?
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The only way to replace all occurrences is to use &lt;strong&gt;replace()&lt;/strong&gt; with a global regular expression as follows:&lt;br&gt;
&lt;code&gt;// replace all '+' with a 'space'&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const str = 'How+are+you?';
const addSpaces = str.replace(/\+/g, ' ');
console.log(addSpaces); // How are you?
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the &lt;strong&gt;replaceAll()&lt;/strong&gt; method, you don‚Äôt have to use a regular expression anymore:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const str = 'How+are+you?';
const addSpaces = str.replaceAll('+', ' ');
console.log(addSpaces) //How are you?
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-promiseany"&gt;
  &lt;/a&gt;
  2. Promise.any()
&lt;/h3&gt;

&lt;p&gt;The &lt;strong&gt;Promise.any()&lt;/strong&gt; method returns a promise that will resolve as soon as one of the promises are resolved. If all of the promises are rejected, the method will throw an AggregateError exception holding the rejection reasons.&lt;br&gt;
Here‚Äôs an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const firstPromise = new Promise((resolve, reject) =&amp;gt; {
  setTimeout(() =&amp;gt; resolve("First Promise Fulfilled"), 3000);
});
const secondPromise = new Promise((resolve, reject) =&amp;gt; {
  setTimeout(() =&amp;gt; resolve("Second Promise Fulfilled"), 2000);
});
const thirdPromise = new Promise((resolve, reject) =&amp;gt; {
  setTimeout(() =&amp;gt; resolve("Third Promise Fulfilled"), 1000);
});
Promise.any([firstPromise, secondPromise, thirdPromise]).then(
  (promiseFulfilled) =&amp;gt; {
    // Any of the promises was fulfilled.
    console.log(promiseFulfilled); // Third Promise Fulfilled
  },
  (error) =&amp;gt; {
    console.log(error)// Error Handling
  }
);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If all of the promises given are rejected, the AggregateError exception will be thrown.&lt;br&gt;
Here‚Äôs another example showing the exception using the async/await syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const firstPromise = new Promise((resolve, reject) =&amp;gt; {
  setTimeout(() =&amp;gt; reject(), 1000);
});
try {
  const first = await Promise.any([firstPromise]);
  // Any of the promises was fulfilled.
} catch (error) {
  console.log(error);
  // AggregateError: All promises were rejected
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-weakrefs"&gt;
  &lt;/a&gt;
  3. WeakRefs
&lt;/h3&gt;

&lt;p&gt;The &lt;strong&gt;WeakRef&lt;/strong&gt;, which stands for &lt;strong&gt;Weak References&lt;/strong&gt;, allows you to create a weak reference to an object. The primary use of Weak Reference is to implement caches or mappings of a large object.&lt;br&gt;
A regular/ strong JavaScript object reference will never be claimed by the garbage collector. A weak reference to an object, in contrast, can be claimed by JavaScript garbage collector:&lt;br&gt;
&lt;code&gt;const simpleObj = {name: "John Doe"};&lt;br&gt;
const referenceObj = new WeakRef({name: "John Doe"});&lt;/code&gt;&lt;br&gt;
When you need to read the value of WeakRefs , you need to use the &lt;strong&gt;deref()&lt;/strong&gt; method to return the instance‚Äôs target object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const referenceObj = new WeakRef({name: "John Doe"});
const obj = referenceObj.deref();
console.log(obj.name); // John Doe
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because the implementation detail of when, how, and whether JavaScript garbage collection actually occurs or not is up to the JavaScript engine implementation, you may observe different behavior between one JavaScript environment and another.&lt;br&gt;
The correct use of &lt;strong&gt;WeakRef&lt;/strong&gt; takes careful thought, and it‚Äôs best to avoid implementing one if possible. Unless you‚Äôre a JavaScript library maintainer, you will most likely never need to use it.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#4-finalizers"&gt;
  &lt;/a&gt;
  4. Finalizers
&lt;/h3&gt;

&lt;p&gt;The &lt;strong&gt;Finalizer&lt;/strong&gt; is a companion feature of WeakRef that allows you to execute a piece of code after an object has become unreachable to the program.&lt;br&gt;
In short, you can register a callback function that gets triggered after the garbage collection occurs. You can create a registry by passing the callback to the &lt;strong&gt;FinalizationRegistry&lt;/strong&gt; object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const registry = new FinalizationRegistry(value =&amp;gt; {
  console.log(value);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, you can register any object you want to cleanup for by calling the register() method, passing both the object and the value you want to pass to the callback function:&lt;br&gt;
&lt;code&gt;registry.register({name: "John"}, "any value");&lt;/code&gt;&lt;br&gt;
The object passed into the register() method will be weak-referenced so that it can be garbage collected. Based on the code above, the callback will log ‚Äúany value‚Äù to the console.&lt;br&gt;
Both WeakRefs and Finalizers are tricky concepts. You can learn more about weak reference and FinalizationRegistry. &lt;br&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakRef"&gt;WeakRef&lt;/a&gt;&lt;br&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry"&gt;FinalizationRegistry&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#5-logical-assignment-operator"&gt;
  &lt;/a&gt;
  5. Logical assignment operator
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; ||= &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment"&gt;Logical OR assignment&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &amp;amp;&amp;amp;= &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment"&gt;Logical AND assignment &lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; ??= &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment"&gt;Logical nullish assignment&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The logical assignment operator combines Logical Operators and Assignment Expressions, allowing you to write a shorter syntax for variable value checking.&lt;/p&gt;

&lt;p&gt;For example, the following code checks whether the value of x is falsy and only assign a new value when it is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let x;
if(!x){
  x = 7;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using the logical assignment operator, you can replace the above code with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let x;
**x ||= 11;** // since x is undefined, it's assigned the number 11
console.log(x); // 11
The logical assignment works with logical AND (**&amp;amp;&amp;amp;**) and nullish coalescing operator (**??**) as well:
let x = null;
x ??= 11 // assign 11 to x when it's null or undefined
let y = "JavaScript";
y &amp;amp;&amp;amp;= 11 // assign 11 to y when it's value is truthy

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-numeric-separator"&gt;
  &lt;/a&gt;
  6. Numeric separator
&lt;/h3&gt;

&lt;p&gt;The numeric separator proposal helps you to write more readable code by allowing you to use underscore (&lt;strong&gt;_&lt;/strong&gt;) as a separator when you define a numeric value.&lt;br&gt;
The following code shows the comparison between a normal number and a separated number for one million:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
const oneMillion = 1000000;
const separatedOneMillion = 1_000_000;
console.log(separatedOneMillion); //1000000

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, separating the number with an underscore makes it much more readable. You can even use it on numbers with floating points as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const randomFloat = 4.11_857_111_1211;
console.log(randomFloat) //4.118571111211
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The separator won‚Äôt be included when you use the value for operations:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const randomFloat = 4.7_857_123;
console.log(randomFloat); // 4.7857123
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#imported-note-that-you-can-only-use-the-separator-between-two-digits"&gt;
  &lt;/a&gt;
  Imported Note that you can only use the separator between two digits:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const num = 4_111; // 4111
// All the below throws an error
const a = 47_; //Uncaught SyntaxError: Numeric separators are not allowed at the end of numeric literals
const b = _11;//Uncaught ReferenceError: _47 is not defined
const c= 7._11;Uncaught SyntaxError: Invalid or unexpected token
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>ecmascript</category>
      <category>react</category>
    </item>
    <item>
      <title>AWS open source news and updates #70</title>
      <author>Ricardo Sueiras</author>
      <pubDate>Tue, 01 Jun 2021 07:20:48 +0000</pubDate>
      <link>https://dev.to/aws/aws-open-source-news-and-updates-70-5bj2</link>
      <guid>https://dev.to/aws/aws-open-source-news-and-updates-70-5bj2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1st-june-2021-instalment-70"&gt;
  &lt;/a&gt;
  1st June, 2021 - Instalment #70
&lt;/h2&gt;

&lt;p&gt;Due to it being a bank holiday in the UK, Newsletter #70 is a day later than usual.&lt;/p&gt;

&lt;p&gt;Make sure you check out this weeks "Quick Updates" as there are some updates that I know a lot of people will be happy about, and I always share great nuggets that sometimes folk miss. More great projects this week, from iamzero which helps you simplify your identity and access management, PMapper that you will find helpful for identifying risks in your IAM configurations, an AWS CDK construct to help you deploy a VSCode server, Orkestra, a super nice project that lets you create workflows using Lambda functions a la Apache Airflow and many more. You will find blog posts from AWS and the community covering Apache Airflow, Apache Spark, Apache Zeppelin, TensorFlow, Packer, lots of containers goodies and more. Finally, do not forget the events section, which is a great seg-way into the biggest news last week...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open@Amazon&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Last week we announced Open@Amazon, a celebration of open source on AWS with a fabulous cast of speakers, a fantastic broad set of topics and the event will be fully live so you can get your chance to interact with the speakers and the broader open source and AWS community. Check out the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/jo"&gt;What‚Äôs up with open source at AWS? Attend Open@Amazon live on Twitch June 16&lt;/a&gt; or just register to get a handy calendar invite &lt;a href="https://aws-oss.beachgeek.co.uk/jn"&gt;HERE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DevAx connect&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Also, later this week we have a new regular open source series by developers for developers that will be streamed live via Twitch, hosted by the awesome Heitor Lessa. The first Thursday of every month you will be able to join Heitor and invited guests as they take you through a variety of interesting open source topics, projects and more. This week we have Lars Jacobsson, and I am looking forward to it. Check out the events section for more details.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Please help me improve this newsletter&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thank you to those who have provided such great feedback already, I am currently reviewing and thinking how to incorporate the suggestions. I would still love to hear from more of you, and I have more AWS credit vouchers as a thank you for taking the time to complete the survey. The first 20 will get an AWS credit voucher for $25, so thank you again. It is only 5 questions, and will probably only take you a minute or two to complete.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/jp"&gt;Take me to the survey!&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#celebrating-open-source-contributors"&gt;
  &lt;/a&gt;
  Celebrating open source contributors
&lt;/h3&gt;

&lt;p&gt;The articles posted in this series are only possible thanks to contributors and project maintainers and so I would like to shout out and thank those folks who really do power open source and enable us all to build on top of what they have created. &lt;/p&gt;

&lt;p&gt;So thank you to the following open source heroes: Stephan Fitzpatrick, Daniel Burkhardt, Malte Luecken, Mrudhula Balasubramanyan, Imaya Kumar Jagannathan, Joerg Woehrle, Brad Kashani, Carl Youngblood, Danilo Poccia, Christian Weber, Alolita Sharma, Nizar Tyrewalla, Josiah Davis, Yin Song, Anne Hu,  Joshua McKiddy, Olivier Cruchant, Arunprasath Shankar, Mark Roy, Eli Fisher, Luke Kysow, Devarshi Shah, Horace Nelson, Brian Schiller, Mike Apted, Serhii Vasylenko, Ibrahim Cesar, Niko Virtala, Troy Ameigh and Andrew Glenn.&lt;/p&gt;

&lt;p&gt;Make sure you find and follow these builders and keep up to date with their open source projects and contributions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#latest-from-open-source-projects"&gt;
  &lt;/a&gt;
  Latest from open source projects
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;orkestra&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/kw"&gt;orkestra&lt;/a&gt; this new open source project from Stephan Fitzpatrick looks very promising, allowing you to create workflow tasks via Lambda functions and then orchestrate these similar to how Apache Airflow works. The &lt;a href="https://aws-oss.beachgeek.co.uk/kx"&gt;documentation&lt;/a&gt; says "a seamless way of building observable (scheduled or event-driven) cloud-native workflows. It aims to bring a similar development experience to that of Airflow while leveraging the full power of AWS."&lt;/p&gt;

&lt;p&gt;This is a project that is going to get some closer inspection from myself for sure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BP-iugHt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/knowsuchagency/orkestra/main/docs/assets/images/hello_orkestra_sfn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BP-iugHt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/knowsuchagency/orkestra/main/docs/assets/images/hello_orkestra_sfn.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;iamzero&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/kk"&gt;iamzero&lt;/a&gt; is an open source tool that helps simplify your identity and access management on AWS. IAM Zero detects identity and access management issues and automatically suggests least-privilege policies. Check out the &lt;a href="https://aws-oss.beachgeek.co.uk/km"&gt;newly formed website&lt;/a&gt; and business that has started to help customers who want support from this tool, and you can read more about the backstory in this &lt;a href="https://aws-oss.beachgeek.co.uk/kl"&gt;post from Reddit&lt;/a&gt;. As per the Reddit post:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The tool is in a similar space to iamlive, policy_sentry, and consoleme (all of which are worth checking out too if you're interested in making AWS security easier) but the main points of difference I see are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;iam-zero can run transparently on any or all of your roles just by swapping your AWS SDK import to the iam-zero instrumented version or using the instrumented CLI&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;iam-zero can run continuously as a service (deployed into a isolated AWS account in an organization behind an SSO proxy) and could send notifications through Slack, email etc&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;iam-zero uses TLS to dispatch events and doesn't include any session tokens in the dispatched event (AWS Client Side Monitoring, which iamlive utilises, includes authentication header details in the event - however iamlive is awesome for local policy development)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;PMapper&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/kn"&gt;PMapper&lt;/a&gt; Principal Mapper (PMapper) is a script and library for identifying risks in the configuration of AWS Identity and Access Management (IAM) for an AWS account or an AWS organization. It models the different IAM Users and Roles in an account as a directed graph, which enables checks for privilege escalation and for alternate paths an attacker could take to gain access to a resource or action in AWS. PMapper includes a querying mechanism that uses a local simulation of AWS's authorization behavior. When running a query to determine if a principal has access to a certain action/resource, PMapper also checks if the user or role could access other users or roles that have access to that action/resource. This catches scenarios such as when a user doesn't have permission to read an S3 object, but could launch an EC2 instance that can read the S3 object.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aurora-serverless-to-s3&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ki"&gt;aurora-serverless-to-s3&lt;/a&gt; this open source project from Devetry simplifies the automation necessary to export Amazon RDS Aurora Serverless snapshots to S3 for a specific database whenever an automated snapshot is created. The project outlines how it achieves its task, provides clear examples and an AWS CDK app to help easily deploy this project. Brian Schiller has put together a short blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/kj"&gt;Aurora Serverless DB Export&lt;/a&gt; that provides some additional context. If you want to see a demo, check this short video&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/lyNGeDg6EII"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Image-Flex&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/kg"&gt;Image-Flex&lt;/a&gt; is an open sourced solution from Horace Nelson that provides a robust image resizing service built on AWS Serverless technologies and used to resize, optimise, and cache images on "the edge," on the fly. If you want to know more about how you might use or deploy it, he has helpfully put together a detailed blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/kh"&gt;An Open Source and Completely Serverless Image Resizing Service in AWS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T4dnrD-8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--HJI5FI4v--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8bhb9if8fn1hesm31bq2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T4dnrD-8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--HJI5FI4v--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8bhb9if8fn1hesm31bq2.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ecs-anywhere-tutorial&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ke"&gt;ecs-anywhere-tutorial&lt;/a&gt; last week one of the big announcements was the general availability of &lt;a href="https://aws-oss.beachgeek.co.uk/kf"&gt;Amazon ECS Anywhere&lt;/a&gt;, and this project/tutorial is intended to walk you through an opinionated demonstration of how ECS Anywhere works. The initial steps will show you how to deploy a (somewhat) sophisticated multi services application in an AWS region as an ECS service running on AWS Fargate. Further in the tutorial, the steps will guide you through how to deploy parts of this application on ECS Anywhere managed instances in a customer managed infrastructure outside of the AWS region. If you saw Massimo's presentation and demo, you will know how nice this was and I am looking forward to dusting off my Raspberry Pi's and trying this out for myself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s2KyBRlD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-containers/ecs-anywhere-tutorial/raw/master/images/stretched-architecture.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s2KyBRlD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-containers/ecs-anywhere-tutorial/raw/master/images/stretched-architecture.png" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-do-docker&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/kd"&gt;aws-do-docker&lt;/a&gt; this project provides a simple pattern for building and deployment of Docker containers to AWS. It can be used "as is" to build and run a sample container, or can be customized and used to build, test, and deploy containerized microservices, jobs, or serverless functions. Containers built using this project can be run locally or on a number of AWS compute environments by a simple change to the configuration files.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S99jXwAe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/aws-samples/aws-do-docker/blob/main/docs/img/aws-do-docker-demo.gif%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S99jXwAe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/aws-samples/aws-do-docker/blob/main/docs/img/aws-do-docker-demo.gif%3Fraw%3Dtrue" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;serverless-rules&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/kv"&gt;serverless-rules&lt;/a&gt; is new project that provides a compilation of rules to validate infrastructure as code template against recommended practices. This currently provides a module for cfn-lint and a plugin for tflint. This is currently in public preview, so if you do try it out please feedback anything you find.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cdk-vscode-fargate&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ko"&gt;cdk-vscode-fargate&lt;/a&gt; this was one of my favourite projects that I came across last week, although I have not had a chance to test it out yet. cdk-vscode-fargate is a JSII construct library for AWS CDK from Mike Apted that allows you to deploy Code-server running VS Code remotely, on a AWS Fargate container. The project provides you with a quick how-to guide to get you started, so hopefully something I can try over the weekend. You can find the source code in the GitHub repository &lt;a href="https://aws-oss.beachgeek.co.uk/kp"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SpHvMC1e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mikeapted/cdk-vscode-fargate/blob/main/diagram.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SpHvMC1e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mikeapted/cdk-vscode-fargate/blob/main/diagram.png%3Fraw%3Dtrue" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mwaa-local-runner&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/kc"&gt;mwaa-local-runner&lt;/a&gt; I shared this project a few weeks ago (#66) but that was for Apache Airflow 1.x, and the project has been quickly updated to align with the launch last week of Apache Airflow version 2.0.2 support in Amazon Managed Workflows for Apache Airflow (MWAA). Everything is the same, just now using the latest version.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;S3AssetDeploy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/kb"&gt;S3AssetDeploy&lt;/a&gt; if you are a Ruby developer then you are going to find this open source tool from Loomly very nice indeed. The folks at Loomly use this to safely package up and deploy their web assets to Amazon S3 that are being served via Cloudfront. This gem is designed to upload and clean unneeded assets from S3 in a safe manner such that older versions or recently removed assets are kept on S3 during the rolling deploy process. It also maintains a version limit and TTL (time-to-live) on assets to avoid deleting recent and outdated versions (up to a limit) or those that have been recently removed. Nice detailed docs and clear examples too.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;amazonlinux-dind&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/kt"&gt;amazonlinux-dind&lt;/a&gt; this repo from Niko Virtala is an Amazon Linux 2 container image with systemd and Docker Engine, and as Niko said in his tweet:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I built a #Docker in Docker image that meets the #ECS Agent systemd requirement, so you don't have to ‚Äì you can find it from all well-stocked container registries and #GitHub&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#tweet-of-the-week"&gt;
  &lt;/a&gt;
  Tweet of the week
&lt;/h3&gt;

&lt;p&gt;We have not had a Tweet of the week for a while, but last week there were a couple that caught my eye and worth sharing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Blender&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This &lt;a href="https://aws-oss.beachgeek.co.uk/k3"&gt;tweet&lt;/a&gt; shared by John Mark, linked to an example of how the AWS open source teams are working with open source projects and foundations to strengthen upstream communities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Copilot vs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This &lt;a href="https://aws-oss.beachgeek.co.uk/k4"&gt;tweet&lt;/a&gt; from Jonathan Matthews asking about using AWS Copilot vs the AWS cli started a great discussion and it was good to hear from the likes of Massimo, Romain and Efe. Massimo shared a &lt;a href="https://aws-oss.beachgeek.co.uk/k5"&gt;response&lt;/a&gt; but make sure you check out the thread.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS CDK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Henrique Lima had &lt;a href="https://aws-oss.beachgeek.co.uk/k6"&gt;an ask&lt;/a&gt; this week for folks who are using AWS CDK. He is specifically looking for developers interested in checking or automating compliance of infrastructure changes, to provide 30 minutes to &lt;a href="https://aws-oss.beachgeek.co.uk/k7"&gt;complete a survey&lt;/a&gt; to help him as he works on a Change Analysis tool for his Master's thesis to do just that. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#community-open-source-posts"&gt;
  &lt;/a&gt;
  Community open source posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;GraakVM&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ks"&gt;Converting Java Lambda functions to GraalVM native-image&lt;/a&gt; Mark Sailes with a quick guide on how to create binary files that you can use in your Lambda functions, showing you how to configure your maven files to do this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OpenSearch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Eli Fisher shared the new public roadmap for the OpenSearch project, hosted in GitHub. The roadmap shows the next several months of planned features and releases. Going forward, this roadmap will show what the maintainers and contributors of the various components of the project intend to work on and when that work aims to launch. Read more in the post, &lt;a href="https://aws-oss.beachgeek.co.uk/k8"&gt;The OpenSearch roadmap is now available on GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GCoBr65P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://opensearch.org/assets/media/blog-images/2021-05-26-opensearch-roadmap-announcement/opensearch-roadmap.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GCoBr65P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://opensearch.org/assets/media/blog-images/2021-05-26-opensearch-roadmap-announcement/opensearch-roadmap.png" alt="roadmap"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Consul Service Mesh&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/k9"&gt;Announcing Tech Preview of Consul Service Mesh for Amazon ECS&lt;/a&gt; Luke Kysow and Devarshi Shah wrote last week about the availability (at this stage it is a tech preview) of HashiCorp Consul service mesh for Amazon ECS, with this tech preview letting you deploy non-production versions of Consul for testing on the Fargate launch type for ECS. The post covers how it works and provides a simple Web and API example to demonstrate this further.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--krZSpl2E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.datocms-assets.com/2885/1622050365-consul-on-ecs.png%3Ffit%3Dmax%26fm%3Dwebp%26q%3D80%26w%3D2500" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--krZSpl2E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.datocms-assets.com/2885/1622050365-consul-on-ecs.png%3Ffit%3Dmax%26fm%3Dwebp%26q%3D80%26w%3D2500" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anisible&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the past week (and indeed this week) there have been a number of posts around how you can use open source tools as part of your CI/CD pipeline to build your applications for the Mac operating systems. In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/ka"&gt;Run Ansible playbook on mac1.metal instances fleet with AWS Systems Manager&lt;/a&gt; AWS Community Builder Serhii Vasylenko shows you how you can use Ansible in conjunction with AWS Services. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reddis&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another AWS Commuinity Builder, Ibrahim Cesar has put this post, &lt;a href="https://aws-oss.beachgeek.co.uk/kr"&gt;Redis: Exploring Redis as Serverless Database to solve idempotence in APIs&lt;/a&gt; which is part of a series, but in this he explores what Reddis is and how to get started with it. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-and-amazon-open-source-posts"&gt;
  &lt;/a&gt;
  AWS and Amazon open source posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Assisted Log Enabler&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In my #67 newsletter I introduced you to this open source project from AWS, &lt;a href="https://aws-oss.beachgeek.co.uk/h7"&gt;assisted-log-enabler-for-aws&lt;/a&gt; an interesting tool that helps customers manage logging for various services. Joshua McKiddy has put together this blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/k0"&gt;Introducing Assisted Log Enabler for AWS&lt;/a&gt; showing you how to use Assisted Log Enabler for AWS to ensure logging is turned on within an AWS environment. Make sure you check this out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mqv9q_T4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/05/19/mckiddy_assisted-log-enabler-diagram.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mqv9q_T4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/05/19/mckiddy_assisted-log-enabler-diagram.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Distro for OpenTelemetry&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/jy"&gt;AWS Distro for OpenTelemetry 0.10.0 is now available with AWS Lambda layers for .Net&lt;/a&gt; Alolita Sharma and Nizar Tyrewalla provide a quick update on the availability of version 0.10.0 of AWS Distro for OpenTelemetry (ADOT). This is now available in AWS Lambda layers for AWS X-Ray support in .Net. The latest versions of AWS Lambda layers with AWS X-Ray support are now available for the OpenTelemetry Collector, Java, Java instrumentation, JavaScript, and Python. The post also covers news of some updated sample applications as well as news that StatsD is now supported within the ADOT Collector. Read the post for the full details.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vim, tmux and Zsh&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As an extensive user of these tools, this post brought a huge smile to my face. In, &lt;a href="https://aws-oss.beachgeek.co.uk/jz"&gt;Enhancing data science environments with Vim, tmux, and Zsh on Amazon EC2&lt;/a&gt; Josiah Davis, Yin Song, and Anne Hu share how you can use these tools to enable data scientists to be more productive in their day to day working environment. From providing Cloudformation templates that enable you to get this up and running yourself, to providing some great examples, this post is your must read post this week. Whether you are a data scientist or not, you can take some of the tips shared here to help you work smarter. Very nice indeed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0OuQvKr1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/29/davjosia_Enhance-data-science-vim-tmux-zsh_f1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0OuQvKr1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/29/davjosia_Enhance-data-science-vim-tmux-zsh_f1.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Zeppelin&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Launched last week, Amazon Kinesis Data Analytics Studio uses a number of open source projects to help make it easier for customers to analyse streaming data. You can now easily launch Apache Zeppelin notebooks, and interact and work with streaming data using SQL, Python or Scala. In, &lt;a href="https://aws-oss.beachgeek.co.uk/jw"&gt;Introducing Amazon Kinesis Data Analytics Studio ‚Äì Quickly Interact with Streaming Data Using SQL, Python, or Scala&lt;/a&gt; Danilo Poccia provides you an overview of the features as well as a follow along example to help get you orientated. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2vrnNQJ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/05/19/KinesisAnalyticsStudio-1-1024x655.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2vrnNQJ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/05/19/KinesisAnalyticsStudio-1-1024x655.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My favourite part of this blog post is where Danilo writes:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"In Kinesis Data Analytics Studio, we run the open-source versions of Apache Zeppelin and Apache Flink, and we contribute changes upstream. For example, we have contributed bug fixes for Apache Zeppelin, and we have contributed to AWS connectors for Apache Flink, such as those for Kinesis Data Streams and Kinesis Data Firehose. Also, we are working with the Apache Flink community to contribute availability improvements, including automatic classification of errors at runtime to understand whether errors are in user code or in application infrastructure."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Apache Spark&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bigstream is an AWS ISV Partner and pioneer in the field of hardware and software level acceleration. Brad Kashani, CEO at Bigstream, shares in this post, &lt;a href="https://aws-oss.beachgeek.co.uk/ju"&gt;Bigstream Provides Big Data Acceleration with Apache Spark and Amazon EMR&lt;/a&gt; why acceleration has better potential than CPU scaling, the historic challenges organisations have had in implementing accelerators, and how Bigstream are able to address those for a seamless, accelerated Spark experience.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ypx2_PQP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/77de68daecd823babbb58edb1c8e14d7106e83bb/2021/05/24/Bigstream-Spark-EMR-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ypx2_PQP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/77de68daecd823babbb58edb1c8e14d7106e83bb/2021/05/24/Bigstream-Spark-EMR-2.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Packer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Packer is an open source tool from HashiCorp for building identical machine images for multiple platforms from a single source configuration. In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/jt"&gt;Building Amazon Machine Images (AMIs) for EC2 Mac instances with Packer&lt;/a&gt; Joerg Woehrle shares best practices for building custom AMIs for EC2 Mac instances using HashiCorp Packer. Joerg covers how to create an AMI of an EC2 Mac instance, understake administrative tasks such as resizing the hard drive, resetting ec2-macos-init and installing some base software (golang) onto the image as well as demonstrating how to facilitate SSM to connect to an EC2 instance without the need to open any ports or a public IP. Read on to dive deeper...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hFI08hRo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/05/24/Packer1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hFI08hRo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/05/24/Packer1.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;git&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ku"&gt;Use Git pre-commit hooks to avoid AWS CloudFormation errors&lt;/a&gt; Troy Ameigh and Andrew Glenn with a post that walks you through how you can use GitHub pre-commit hooks with a number of open source tools to help address a number of common issues when using AWS Cloudformation. The post takes a look at some of those open source tools and how you can use them to help you with things like checking shell scripts, validating end of line, dealing with white space, enforcing style and much more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vkdI43fC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b7eb6c689c037217079766fdb77c3bac3e51cb4c/2021/03/20/customize-quick-start-example-architecture.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vkdI43fC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b7eb6c689c037217079766fdb77c3bac3e51cb4c/2021/03/20/customize-quick-start-example-architecture.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS CDK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Christian Weber provides another one of his regular monthly updates covering all things AWS CDK related, in his &lt;a href="https://aws-oss.beachgeek.co.uk/jx"&gt;CDK Corner ‚Äì May 2021&lt;/a&gt;. Plenty of highlights, including updates from the recent CDK Day, news on the CDK v2 developer preview, AWS CDK for Go developer preview and a nice list of updated/new constructs you should check out. This is essential reading in my opinion, and hats off to all those listed as having their first PRs merged. Please get in touch, I have an AWS Credit voucher waiting for you..&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TensorFlow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A couple of posts this week on TensorFlow. The first post covers how to optimise the inference latency of TensorFlow Serving in the post, &lt;a href="https://aws-oss.beachgeek.co.uk/k1"&gt;How Contentsquare reduced TensorFlow inference latency with TensorFlow Serving on Amazon SageMaker&lt;/a&gt;. Olivier Cruchant shares how one customer was able to experiment with a number of approaches to find an optimum solution for hosting their inference endpoints.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PFSsrgcM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/03/25/Capture-d%25E2%2580%2599%25C3%25A9cran-2021-03-25-%25C3%25A0-13.03.31.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PFSsrgcM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/03/25/Capture-d%25E2%2580%2599%25C3%25A9cran-2021-03-25-%25C3%25A0-13.03.31.jpg" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Following that we have the post, &lt;a href="https://aws-oss.beachgeek.co.uk/k2"&gt;Host multiple TensorFlow computer vision models using Amazon SageMaker multi-model endpoints&lt;/a&gt;, where Arunprasath Shankar and Mark Roy demonstrate how to use SageMaker multi-model endpoints to host two computer TensorFlow vision models with different model architectures and datasets for image classification. They provide the sample notebook so you can try this for yourself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IdqlqtlN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/05/11/1-2888-Architecture.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IdqlqtlN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/05/11/1-2888-Architecture.jpg" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open Problems&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Open Problems provides a framework for researchers to define formalized tasks in single-cell genomics and benchmark model performance on those tasks using AWS. In the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/jr"&gt;Driving innovation in single-cell analysis on AWS&lt;/a&gt; Daniel Burkhardt, Malte Luecken, and Mrudhula Balasubramanyan take a look in more detail how they are running this on AWS, looking at the architecture of the platform, benchmarking computational methods for single-cell analysis and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W6I60fSe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/9e6a55b6b4563e652a23be9d623ca5055c356940/2021/05/27/CHANNEL_SIM-ID_international-competition-open-problems-repository-clipped-2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W6I60fSe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/9e6a55b6b4563e652a23be9d623ca5055c356940/2021/05/27/CHANNEL_SIM-ID_international-competition-open-problems-repository-clipped-2.jpg" alt="open problems"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ethereum&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Managed Blockchain support for managed Ethereum nodes makes it possible to build your own decentralized applications (dapps) without having to worry about maintaining reliable Ethereum nodes for relaying blockchain transactions or querying the state of blockchain data. In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/jv"&gt;Deploy an Ethereum node on Amazon Managed Blockchain&lt;/a&gt; Carl Youngblood walks you through setting up and connecting to an Ethereum node with Managed Blockchain&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-updates"&gt;
  &lt;/a&gt;
  Quick updates
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Apache Airflow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can now launch Apache Airflow 2.0 environments on Amazon Managed Workflows for Apache Airflow (MWAA). Apache Airflow 2.0 is the latest version of the popular open-source tool that helps customers author, schedule, and monitor workflows.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AWS Database Migration Service (AWS DMS) has expanded functionality by adding support for PostgreSQL version 13 in preview mode. Using AWS DMS, you can now perform live migrations from any AWS DMS supported sources to PostgreSQL 13 databases, and from PostgreSQL 13 databases to any AWS DMS supported targets.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Kakfa&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Managed Streaming for Apache Kafka (Amazon MSK) now supports Apache Kafka version 2.7.1 for new and existing clusters. Apache Kafka 2.7.1 includes several bug fixes. For a complete list of fixes, see the Apache Kafka &lt;a href="https://aws-oss.beachgeek.co.uk/jq"&gt;release notes for 2.7.1&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Cassandra&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A couple of quick updates this week.&lt;/p&gt;

&lt;p&gt;First up is news that Amazon Keyspaces (for Apache Cassandra), a fully managed Apache Cassandra‚Äìcompatible database service, is now Health Insurance Portability and Accountability Act of 1996 (HIPAA) eligible to help you run healthcare workloads more easily. AWS enables covered entities and their business associates subject to HIPAA to use the secure AWS environment to process, maintain, and store protected health information. Now, you can run Cassandra workloads that are subject to HIPAA compliance more easily by using a fully managed and serverless database service. Amazon Keyspaces helps you secure PHI through features such as encryption, audit logging via AWS CloudTrail, and access management through AWS Identity and Access Management.&lt;/p&gt;

&lt;p&gt;Following that is news you can manage service quotas for Amazon Keyspaces (for Apache Cassandra), through the Service Quotas console. Using the Service Quotas console, you can view and manage quotas (formerly referred to as limits) easily and at scale as your AWS workloads grow. For example, you can manage Amazon Keyspaces quotas such as account-level throughput, keyspaces and tables per AWS Region, and concurrent Data Definition Language (DDL) operations. Service Quotas makes requesting quota increases easier: search for a quota, enter your desired value, and submit a quota increase request. You can manage your quotas proactively by configuring Amazon CloudWatch alarms that monitor usage and alert you to approaching quotas.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Spark 3.1.1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon EMR 6.3 release version now supports Apache Spark 3.1.1 and provides runtime performance improvements with EMR Runtime for Spark. Amazon EMR 6.3 also supports Apache Hudi 0.7.0, Flink 1.12.1, PrestoDB 0.245.1, PrestoSQL 350, Hue 4.9, JupyterHub 1.2, Oozie 5.2.1 and TensorFlow 2.4.1.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JetBrains&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The AWS Toolkit for JetBrains now provides developers with convenient IDE functionality to create and manage deployments from their code or image repositories using AWS AppRunner. AWS App Runner that was recently announced  is a new service that makes it easy for customers without any prior containers or infrastructure experience to build, deploy, and run containerised web applications and APIs in just a few clicks.&lt;/p&gt;

&lt;p&gt;With new App Runner features in the AWS Toolkit for JetBrains, users of any JetBrains IDE can configure and deploy web services, track deployment status (i.e. view deployment notification logs) and monitor state of deployed services (i.e., services active, running, or paused), all without leaving their IDEs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lustre&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon FSx for Lustre, a service that provides cost-effective, high-performance, scalable file storage for compute workloads, now supports data compression. Data compression enables you to reduce storage consumption of both your file system storage and your file system backups. The data compression feature is designed to deliver high levels of compression without adversely impacting file system performance. Once data compression is enabled, newly written files are automatically compressed by FSx for Lustre before they are written to disk and automatically uncompressed when they are read. In addition to compression, Amazon FSx for Lustre offers a range of storage options to help you reduce costs, including a variety of SSD and HDD storage options, along with an option to store data on unreplicated storage for short-term processing of data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#videos-of-the-week"&gt;
  &lt;/a&gt;
  Videos of the week
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Observability&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Implementing observability in applications a requirement for achieving Operational Excellence, and a well implemented observability plan allows customers to react to operational events, run workloads effectively and gain insights into their applications. In this video, Imaya Kumar Jagannathan will walk you through how to use Amazon managed open source tools for observability, how to use Amazon Managed Prometheus to monitor the performance of containerised workloads and how Amazon Managed Service for Prometheus and Amazon Managed Service for Grafana work with other AWS services&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/YlupF_OAGIg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#events-for-your-diary"&gt;
  &lt;/a&gt;
  Events for your diary
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;DevAx&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;June 3rd, 2pm CET&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I am excited to let you know about DevAx, a new workshop series by developers for developers that will be streamed live via Twitch. The first Thursday of every month you will bel able to join our AWS experts and invited guests as they take you through a variety of interesting open source topics, projects and more.&lt;/p&gt;

&lt;p&gt;Make sure you check out Twitch and join in on the fun! &lt;a href="https://www.twitch.tv/aws"&gt;https://www.twitch.tv/aws&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data Hack for Good 2021&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;June 5th, Belfast/Virtual&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Allstate Data Hack for Good, is taking place virtually Saturday and Sunday 5th and 6th June 2021. It is being held in partnership with Belfast City Council and supported by the Department of Finance Open Data Innovation and Outreach Fund. This year this event is collaborating with AWS.&lt;/p&gt;

&lt;p&gt;The hackathon is open to technologists of all experience levels and backgrounds, with the goal to use data and technology to make life better in Belfast. During the hackathon, on demand technical training will be available, including data visualisation, data manipulation, model building, and Alexa Skills. Experts will be on hand throughout the event to answer questions, troubleshoot and support a collaborative approach to using data to solve problems.&lt;/p&gt;

&lt;p&gt;Find out more and register via &lt;a href="https://www.meetup.com/Everything-Data/events/277828428/"&gt;this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Maintainer Week&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;week of June 7th&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Make sure you check out this week long event starting on the 7th of June, for open source maintainers to gather, share, and be celebrated. You can find details of &lt;a href="https://aws-oss.beachgeek.co.uk/kq"&gt;all the weeks sessions on their GitHub page&lt;/a&gt;, with Upstream on June 7th, Global Maintainer Summit on the 8/9th, The Changelog: Maintainer Spotlight on the 10th and FundOSS on the 11th.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open@Amazon&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;June 16th, 9:00am - 5:00PM EDT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Of course I am biased, but this is a must attend event. A celebration of open source on AWS with a fabulous cast of speakers, a fantastic broad set of topics and the event will be fully live so you can get your chance to interact with the speakers and the broader open source and AWS community.&lt;/p&gt;

&lt;p&gt;Check out the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/jo"&gt;What‚Äôs up with open source at AWS? Attend Open@Amazon live on Twitch June 16&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Or just register to get a handy calendar invite &lt;a href="https://aws-oss.beachgeek.co.uk/jn"&gt;HERE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud Native Day&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;23rd September, Bern Switzerland&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What is this, an in person event returning? A stellar line up including our own Michael Hausenblas, an event looking at CNCF projects and the future of IT. Find out more and to view prices/register, by clicking &lt;a href="https://cloudnativeday.ch/en/#speakers"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stay-in-touch-with-open-source-at-aws"&gt;
  &lt;/a&gt;
  Stay in touch with open source at AWS
&lt;/h3&gt;

&lt;p&gt;I hope this summary has been useful. Remember to check out the &lt;a href="https://aws.amazon.com/opensource/?opensource-all.sort-by=item.additionalFields.startDate&amp;amp;opensource-all.sort-order=asc"&gt;Open Source homepage&lt;/a&gt; to keep up to date with all our activity in open source by following us on &lt;a href="https://twitter.com/AWSOpen"&gt;@AWSOpen&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>aws</category>
    </item>
    <item>
      <title>GirlScript Summer Of Code 2021 !! First Open Source Program !! ü§©ü§©</title>
      <author>Rohan Kulkarni</author>
      <pubDate>Tue, 01 Jun 2021 07:09:37 +0000</pubDate>
      <link>https://dev.to/rohank_2502/girlscript-summer-of-code-2021-first-open-source-program-1hgl</link>
      <guid>https://dev.to/rohank_2502/girlscript-summer-of-code-2021-first-open-source-program-1hgl</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-is-gssoc"&gt;
  &lt;/a&gt;
  What is GSSOC?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;GirlScript Summer of Code&lt;/strong&gt; is the 3 month-long &lt;strong&gt;Open Source Program&lt;/strong&gt; during summers conducted by &lt;strong&gt;GirlScript Foundation,&lt;/strong&gt; with an aim to help beginners get started with &lt;strong&gt;Open Source Development&lt;/strong&gt; while encouraging &lt;strong&gt;diversity.&lt;/strong&gt; Throughout the program, participants contribute to different projects under the guidance of experienced mentors.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-get-enrolled"&gt;
  &lt;/a&gt;
  How to Get Enrolled?
&lt;/h3&gt;

&lt;p&gt;You have to register as a Participant or as Mentor. &lt;/p&gt;

&lt;p&gt;I have registered as a &lt;strong&gt;Participant.&lt;/strong&gt; After getting selected I was informed by an &lt;strong&gt;Email&lt;/strong&gt; and was asked to join &lt;strong&gt;Discord Server!&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1TZIfpTe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ufhrc34u7z1vjfnf0430.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1TZIfpTe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ufhrc34u7z1vjfnf0430.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#project-"&gt;
  &lt;/a&gt;
  Project !!
&lt;/h3&gt;

&lt;p&gt;There were 100+ Projects which were open for contribution with different tech stacks!! My major contribution was in Single Project  &lt;strong&gt;SFC-Foundations Website.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SFC - Foundation&lt;/strong&gt; is an NGO that is active in Northern India. The project was to create a new website from Scratch. I was having basic knowledge of &lt;strong&gt;Front-end Development&lt;/strong&gt; so I selected this project to work on !!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#contribution-statistics-till-1st-june-2021-"&gt;
  &lt;/a&gt;
  Contribution Statistics ( Till 1st June 2021 )
&lt;/h3&gt;

&lt;p&gt;Project :-   &lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/himanshu007-creator"&gt;
        himanshu007-creator
      &lt;/a&gt; / &lt;a href="https://github.com/himanshu007-creator/SFC-foundations"&gt;
        SFC-foundations
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SFC bringing change to the society. Drop a ‚≠ê
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/himanshu007-creator/SFC-foundations/master/Assets/bnr.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nt78ebhg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/himanshu007-creator/SFC-foundations/master/Assets/bnr.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div&gt;&lt;h1&gt;
SFC FOUNDATIONS&lt;/h1&gt;&lt;/div&gt;
&lt;p&gt;
The SFC is a Youth NGO that has its roots in Tricity and Delhi. SFC inspires the younger generation to come forward to serve Mother Earth by igniting a spark in them. SFC is established to launch and nurture activities and programs which will reach the most impecunious and vulnerable people from our community. The motive is that Youth is the beaming future of our country and they are the ONLY ones who can change trite plots into buoyant podiums
Hence our projects are designed keeping in mind the barbaric surroundings of our Society. With the help of our stalwart volunteers, we can focus on capacity-building activities rather than the traditional gap-filling initiatives. SFC is an organization of dedicated and staunch amateurs who are dead set at uplifting the unfortunate lots in our society and sheltering our Country
SFC has set up two more units (JALANDHAR,MUMBAI)‚ú®
&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/f2e066a3469c10ced3308f0601e60fdc9d02b818476d786e2dddb3458c73df67/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73"&gt;&lt;img src="https://camo.githubusercontent.com/f2e066a3469c10ced3308f0601e60fdc9d02b818476d786e2dddb3458c73df67/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73" alt="Issues"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/907d2be4d78a30667d674c7e4035b97209fc053259cdb82f628825a018e1b6e2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73"&gt;&lt;img src="https://camo.githubusercontent.com/907d2be4d78a30667d674c7e4035b97209fc053259cdb82f628825a018e1b6e2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73" alt="Pull Requests"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/c5b816080bca896c251b317a28e4f48d7ded5627a92cc13d529b338c06854a89/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73"&gt;&lt;img src="https://camo.githubusercontent.com/c5b816080bca896c251b317a28e4f48d7ded5627a92cc13d529b338c06854a89/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73" alt="Forks"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9157f4f680f4c8d8108d859b5f98289536fc6d96ae2cdc786ec3e763fab524e8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73"&gt;&lt;img src="https://camo.githubusercontent.com/9157f4f680f4c8d8108d859b5f98289536fc6d96ae2cdc786ec3e763fab524e8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73" alt="Stars"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/f2e066a3469c10ced3308f0601e60fdc9d02b818476d786e2dddb3458c73df67/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73"&gt;&lt;img src="https://camo.githubusercontent.com/f2e066a3469c10ced3308f0601e60fdc9d02b818476d786e2dddb3458c73df67/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73" alt="Issues"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5478d1b27b935353569a8c4a74f50513ef154e0909cbdcb61f433abe70453d05/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e733f7374796c653d736f6369616c"&gt;&lt;img src="https://camo.githubusercontent.com/5478d1b27b935353569a8c4a74f50513ef154e0909cbdcb61f433abe70453d05/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e733f7374796c653d736f6369616c" alt="Forks"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/daa18a63b53f483a2f443ed12ff14518f9159982abc045957dbd4ba4ff9f4b78/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e733f7374796c653d736f6369616c"&gt;&lt;img src="https://camo.githubusercontent.com/daa18a63b53f483a2f443ed12ff14518f9159982abc045957dbd4ba4ff9f4b78/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e733f7374796c653d736f6369616c" alt="Stars"&gt;&lt;/a&gt;
&lt;a href="https://github.com/himanshu007-creator/SFC-foundations/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/3c2ed01cbccf4d5cc87abd9d43790e76bfd9905e4a2abfbe5f89d4b63a0693bd/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73" alt="License"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/38d143abbfa66ea4ada152d1ea75e58ce6fea8a2102a4443dc4e899c89243b65/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e732e7376673f6c6162656c3d5265706f25323073697a65267374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/38d143abbfa66ea4ada152d1ea75e58ce6fea8a2102a4443dc4e899c89243b65/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e732e7376673f6c6162656c3d5265706f25323073697a65267374796c653d666c61742d737175617265" alt=""&gt;&lt;/a&gt;
&lt;a href="https://img.shields.io/codecov/c/github/himanshu007-creator/SFC-foundations" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fcde78929eac55f501efdd092d9220910a82d60fe9694a7e0ea21fb704990760/68747470733a2f2f636f6465636f762e696f2f67682f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;¬†&lt;/p&gt;

&lt;h1&gt;
GitHub&lt;/h1&gt;‚Ä¶&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/himanshu007-creator/SFC-foundations"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Commits:- 206 ( On 1st June ) &lt;/p&gt;

&lt;p&gt;Addition :- 44,311 ++&lt;/p&gt;

&lt;p&gt;Deletions :- 15,429 --&lt;/p&gt;

&lt;p&gt;Issues Created :- 81&lt;/p&gt;

&lt;p&gt;Pull Requests Created :- 72 ( 70 Merged ) &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gkpYREx3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0pbtk36guc7u3re1ipr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gkpYREx3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0pbtk36guc7u3re1ipr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#learnings"&gt;
  &lt;/a&gt;
  Learnings:-
&lt;/h3&gt;

&lt;p&gt;-&amp;gt; Got Experience in Real-World Development &lt;br&gt;
-&amp;gt; Learned to work with the group.&lt;br&gt;
-&amp;gt; Workflow of GitHub &lt;br&gt;
-&amp;gt; Learned how to set up a particular Project on &lt;code&gt;Local System&lt;/code&gt;&lt;br&gt;
-&amp;gt; Had a great Networking with Amazing Peoples! &lt;br&gt;
-&amp;gt; Brushed Up My Skills of Front-end Web Development! &lt;/p&gt;

&lt;p&gt;Get Connected with Me üôÇ&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/rohan-k-2502/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/rohan-kulkarni-25"&gt;GitHub&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/rohan_2502"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>webdev</category>
      <category>firstpost</category>
      <category>github</category>
    </item>
    <item>
      <title>All you need to know about High Order Functions in JavaScript</title>
      <author>Rahul</author>
      <pubDate>Tue, 01 Jun 2021 07:04:34 +0000</pubDate>
      <link>https://dev.to/rahxuls/all-you-need-to-know-about-high-order-functions-in-javascript-3e2i</link>
      <guid>https://dev.to/rahxuls/all-you-need-to-know-about-high-order-functions-in-javascript-3e2i</guid>
      <description>&lt;p&gt;As a JavaScript developer you will utilize high order functions frequently, so having a decent comprehension of these functions is vital. Presently I see individuals get frequently confounded when finding out about the &lt;code&gt;reduce()&lt;/code&gt; technique, yet I had clarified everything in detail so attempt to comprehend it bit by bit and I'm certain you will dominate it.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#what-are-high-order-functions"&gt;
  &lt;/a&gt;
  What are high order functions?
&lt;/h3&gt;

&lt;p&gt;In a nutshell, high order functions are those functions that take other functions as arguments OR returning other functions. The function passed as arguments in high order function is known as callbacks. &lt;/p&gt;

&lt;p&gt;Why use High Order Function? &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;They help us to write clean and simple code&lt;/li&gt;
&lt;li&gt;Since the code will be clean, it will be easier to debug&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now javascript have some built-in high order functions, you may have already be using them without even realising. &lt;code&gt;(filter(), reduce(), sort(), forEach())&lt;/code&gt;. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#filter"&gt;
  &lt;/a&gt;
  filter()
&lt;/h3&gt;

&lt;p&gt;The filter method returns a new array of elements that passes a specific test provided by a callback function. And since &lt;code&gt;filter&lt;/code&gt; takes a callback function, therefore &lt;code&gt;filter()&lt;/code&gt; is known as high order function. &lt;br&gt;
Now the callback function that is passed into &lt;code&gt;filter()&lt;/code&gt; is known as the high order function. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;value of the element&lt;/code&gt; (required)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;index of the element&lt;/code&gt; (optional)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;the array object&lt;/code&gt; (optional)
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; 

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resultant&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resultantArray&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [4, 5]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In the above example, what's happening is that the elements of the &lt;code&gt;arr&lt;/code&gt; array are getting passed one by one into the &lt;code&gt;filter()&lt;/code&gt; callback method and they are getting tested for a specific test that is &lt;code&gt;element &amp;gt; 3&lt;/code&gt; and those elements which are passing the test are getting pushed in the &lt;code&gt;resultantArray&lt;/code&gt;, that's why the output is [4,5] since 4 and 5 were the only elements that pass the test. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;element argument&lt;/code&gt; is getting the value of elements of &lt;code&gt;arr&lt;/code&gt; array one by one, it will first become 1 and then it will test &lt;code&gt;1&amp;gt;3&lt;/code&gt; if it's true 1 will get pushed in the resultant array and if it's false it will be skipped to the next element. &lt;/p&gt;

&lt;p&gt;Example:-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// filter age that is less than 18&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ageArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; 

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;filterAgeArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ageArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt; 

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;filterAgeArray&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// [10, 12, 15]&lt;/span&gt;

&lt;span class="o"&gt;-----------------&lt;/span&gt;

&lt;span class="c1"&gt;// /filter positive numbers&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; 

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;positiveArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;numArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;});&lt;/span&gt; 

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;positiveArray&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// [1, 50, 20]&lt;/span&gt;

&lt;span class="o"&gt;-----------------&lt;/span&gt;

&lt;span class="c1"&gt;// filter names that contains `sh` in it&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;namesArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;samuel&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rahul&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;harsh&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hitesh&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; 

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;filterNameArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;namesArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sh&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;});&lt;/span&gt; 

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;filterNameArray&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// ["harsh", "hitesh"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#map"&gt;
  &lt;/a&gt;
  map()
&lt;/h3&gt;

&lt;p&gt;As the name suggests, the  &lt;code&gt;map()&lt;/code&gt; method is used to map the values of an existing array to new values and it pushes that new values to a new array and it returns that new array. Now &lt;code&gt;map()&lt;/code&gt; also takes a callback function and hence it is known as high order function. &lt;/p&gt;

&lt;p&gt;Now the callback fucntion that is passed into &lt;code&gt;map()&lt;/code&gt; method takes three arguments:- &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;values of the element&lt;/code&gt; (required)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;index of the element&lt;/code&gt; (optional)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;the array object&lt;/code&gt; (optional)
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; 

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;increasedArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;numArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;});&lt;/span&gt; 

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;increasedArray&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Just like in &lt;code&gt;filter()&lt;/code&gt;, the elements of numArray will be passed one by one into the &lt;code&gt;map()&lt;/code&gt; callback function (as the element argument) and they will get mapped into a new value that is &lt;code&gt;element + 1&lt;/code&gt; and then they will be pushed into the &lt;code&gt;increasedArray&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Firstly 1 will get a pass as an element argument and it will get the map to a new value that is &lt;code&gt;element + 1&lt;/code&gt; such that 1 + 1 (because here element is 1) and the 2 will get pushed into increased Array and so on for 5, 3, 6, 4, 7. &lt;/p&gt;

&lt;p&gt;Example:-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// exponentiate every number on an array&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; 

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;poweredArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;numArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;});&lt;/span&gt; 

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;poweredArray&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// [4, 9 ,16, 25, 144, 225]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// extract the marks of student&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;studentsArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Rahul&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="na"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="p"&gt;},&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Samuel&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="na"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="p"&gt;},&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Chris&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="na"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt; 

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ScoreArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;studentsArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;student&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;student&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;});&lt;/span&gt; 

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scoreArray&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// [45, 85, 25]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#reduce"&gt;
  &lt;/a&gt;
  reduce()
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;reduce()&lt;/code&gt; method is used to reduce the array to a single value, just like &lt;code&gt;filter()&lt;/code&gt; and &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;reduce()&lt;/code&gt; also takes a callback function as an argument hence it is known as High Order Function. &lt;br&gt;
BUT. &lt;br&gt;
&lt;code&gt;reduce()&lt;/code&gt; takes one more argument other than the callback function and that is &lt;code&gt;initialValue&lt;/code&gt;. And again like &lt;code&gt;filter()&lt;/code&gt; and &lt;code&gt;map()&lt;/code&gt; the callback function passed into &lt;code&gt;reduce()&lt;/code&gt; takes some arguments but the callback functions passed into reduce takes 4 arguments instead of 3. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;total&lt;/code&gt; (required)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;value of the elements&lt;/code&gt; (required)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;index of the element&lt;/code&gt; (optional)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;the array object&lt;/code&gt; (optional)
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// A basic example reduce()&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; 

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;numArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;});&lt;/span&gt; 

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let's first understand what &lt;strong&gt;total argument&lt;/strong&gt; is:- Total argument is the previous value returned by &lt;code&gt;reduce()&lt;/code&gt; function, now when the &lt;code&gt;reduce()&lt;/code&gt; will run for the first time there will be no previous returned value therefore for the first time &lt;code&gt;total argument&lt;/code&gt; is equal to the initialValue(remember the second argument that we passed into &lt;code&gt;reduce()&lt;/code&gt;). &lt;/p&gt;

&lt;p&gt;Now we also haven't used the initialValue in our example, so what is that &lt;strong&gt;when we don't pass initialValue, the reduce() method skips the first element of the numArray becomes the value of total argument&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Coming to our example, we haven't passed initialValue so the first element of numArray such that &lt;code&gt;1&lt;/code&gt; will become the value of total argument and the second element of &lt;code&gt;numArray&lt;/code&gt; will pass as num argument, and the reduction will return &lt;code&gt;total + num&lt;/code&gt; such that &lt;code&gt;1+2 = 3&lt;/code&gt;, 3 will become the new value of total and now the third element from &lt;code&gt;numArray&lt;/code&gt; will get a pass into &lt;code&gt;reduce()&lt;/code&gt; callback as &lt;strong&gt;num argument&lt;/strong&gt;, again reduce will return &lt;strong&gt;total + num&lt;/strong&gt; that is 3 + 3 = 6 and 6 will become the new value of total and so on. &lt;/p&gt;

&lt;p&gt;(This explanation is a bit tough and confusing. If you try to learn step by step you will master &lt;code&gt;reduce()&lt;/code&gt;). &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#the-initialvalue-argument"&gt;
  &lt;/a&gt;
  The initialValue argument
&lt;/h4&gt;

&lt;p&gt;initialValue as the name suggests, is the initial value of the total argument, as we know when &lt;code&gt;reduce()&lt;/code&gt; runs for the first time there is no previous returned value and hence the first element from existing array &lt;strong&gt;(numArray in our case)&lt;/strong&gt; becomes the value of the total argument, so instead of doing that we can give an initial value to the total argument. (remember initialValue will be the initial value of the total argument, the total argument will become the previous return value of reduce() later). &lt;/p&gt;

&lt;p&gt;Note:- When you will use the initialValue argument, numArray will not skip it's the first element hence every element will get passed into the &lt;code&gt;reduce()&lt;/code&gt; callback. &lt;/p&gt;

&lt;p&gt;Syntax of reduce() with initial value:-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resultantArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;existingArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// return something&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;initialValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Thank you Reading‚ö°&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Get Data From DynamoDB Using AWS SDK (Go) - The Cloud Resume Challenge Series (Part 15)</title>
      <author>Lou (üöÄ Open Up The Cloud ‚òÅÔ∏è)</author>
      <pubDate>Tue, 01 Jun 2021 06:59:28 +0000</pubDate>
      <link>https://dev.to/aws-builders/get-data-from-dynamodb-using-aws-sdk-with-golang-the-cloud-resume-challenge-series-part-14-44m9</link>
      <guid>https://dev.to/aws-builders/get-data-from-dynamodb-using-aws-sdk-with-golang-the-cloud-resume-challenge-series-part-14-44m9</guid>
      <description>&lt;p&gt;Hey cloud engineering friends! &lt;/p&gt;

&lt;p&gt;Over the past weeks I've been completing &lt;a href="https://cloudresumechallenge.dev/"&gt;the cloud resume challenge&lt;/a&gt;. It's a free challenge started by AWS hero Forest Brazeal to help people get into the cloud by doing a hands-on project. &lt;a href="https://dev.to/forrestbrazeal/the-cloud-resume-challenge-503g"&gt;Original announcement post here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The challenge is to create an online resume with a view counter, this video is the last piece of the puzzle for the view counter, by getting the view count out of my DynamoDB database and returning it as part of an AWS Lambda function that's set up as a REST/HTTP API. &lt;/p&gt;

&lt;p&gt;As a bonus, I also go through how to set up AWS SAM with local invocation, so that you can test your lambda locally, by passing in AWS credentials using &lt;a href="https://github.com/99designs/aws-vault"&gt;aws-vault&lt;/a&gt;, which involves a little bit of Docker, too. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nc7pPfn4BsY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you're thinking getting into cloud I do really recommend you check out the cloud resume challenge as a place to start! &lt;/p&gt;




&lt;p&gt;Hey! üëã If we haven't met, let me introduce myself, I'm &lt;a href="https://twitter.com/loujaybee"&gt;Lou&lt;/a&gt;, and I created &lt;em&gt;&lt;a href="http://thedevcoach.co.uk/"&gt;Open Up The Cloud&lt;/a&gt;&lt;/em&gt; to help you get your start, and grow your career in cloud üöÄ. &lt;/p&gt;

&lt;p&gt;If you're interested in cloud, the best way to keep up-to-date with news, and everything I publish is via the &lt;a href="http://newsletter.thedevcoach.co.uk/"&gt;monthly cloud newsletter&lt;/a&gt;. And find &lt;em&gt;Open Up The Cloud&lt;/em&gt; on &lt;a href="https://www.youtube.com/channel/UCAklaE5D59xWtip-3Jwa7xA"&gt;YouTube&lt;/a&gt;, &lt;a href="https://twitter.com/openupthecloud"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.instagram.com/openupthecloud"&gt;Instagram&lt;/a&gt;... wherever you like hang out! üòÑ&lt;/p&gt;

</description>
      <category>devops</category>
      <category>cloud</category>
      <category>aws</category>
      <category>serverless</category>
    </item>
  </channel>
</rss>
