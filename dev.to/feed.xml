<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>üé¨Clock App | Vanilla JavaScript‚è±Ô∏è</title>
      <author>Robson Muniz</author>
      <pubDate>Tue, 10 Aug 2021 12:43:28 +0000</pubDate>
      <link>https://dev.to/robsonmuniz16/clock-app-vanilla-javascript-3g34</link>
      <guid>https://dev.to/robsonmuniz16/clock-app-vanilla-javascript-3g34</guid>
      <description>&lt;p&gt;Hey DEVs In today's episode, we will create from scratch a ‚ÄúClock App | Vanilla JavaScript‚Äù,  will also are gonna use this new and popular trend Glassmorphism on it‚Ä¶&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-youtube-kcltsfaqgl8-"&gt;
  &lt;/a&gt;
  &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/KcLTSfAqGl8"&gt;
&lt;/iframe&gt;

&lt;/h2&gt;




&lt;p&gt;Essentially, the main aspect of this trend is simple: we have a semi-transparent background, with a sublime shadow and border.&lt;br&gt;
We also have a blur on it so that whatever is behind the background is beautifully "morphed" into the element itself.&lt;/p&gt;

&lt;p&gt;It‚Äôs a quite simple project to do, but at the same time it will teach you a lot of cool things in css and also JavaScript.&lt;/p&gt;




&lt;p&gt;üìöResources&lt;br&gt;
Sound | Fonts | Pics used in this Project:&lt;br&gt;
&lt;a href="https://bit.ly/3rHKDPl"&gt;https://bit.ly/3rHKDPl&lt;/a&gt;&lt;/p&gt;




</description>
      <category>javascript</category>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Nhost - open source Firebase alternative with GraphQL</title>
      <author>Tomek Poniatowicz</author>
      <pubDate>Tue, 10 Aug 2021 12:19:10 +0000</pubDate>
      <link>https://dev.to/tomekponiat/nhost-open-source-firebase-alternative-with-graphql-90b</link>
      <guid>https://dev.to/tomekponiat/nhost-open-source-firebase-alternative-with-graphql-90b</guid>
      <description>&lt;p&gt;Most devs are probably at least somewhat familiar with Firebase, Google‚Äôs out of the box backend-solution for mobile &amp;amp; web apps. It's been a few years since Google bought it and as usual the community has provided us with a growing number of alternatives. Although Firebase does work with GraphQL that connection can always be improved to give us more and that is exactly where Nhost comes in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nhost-postgresql-hasuras-graphql-engine-hasura-backend-plus"&gt;
  &lt;/a&gt;
  Nhost = PostgreSQL + Hasura's GraphQL Engine + Hasura Backend Plus
&lt;/h2&gt;

&lt;p&gt;I touched a bit recently on combining technologies to get the most out of them when talking about the GRAND Stack, well this will be a bit of a deja vu as Nhost is also a stack. It's basically PostgreSQL combined with Hasura's GraphQL Engine and Hasura Backend Plus, this together creates an open source Backend as a Service. Nhost uses them to get you everything you need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;out of the box backend with a relational database,&lt;/li&gt;
&lt;li&gt;user authentication&lt;/li&gt;
&lt;li&gt;data storage,&lt;/li&gt;
&lt;li&gt;serverless fucntions,&lt;/li&gt;
&lt;li&gt;GraphQL API.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aJ3O_bAX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62ley12ca3pzded4rtik.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aJ3O_bAX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62ley12ca3pzded4rtik.png" alt="Nhost"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#source-nhostio"&gt;
  &lt;/a&gt;
  Source: &lt;a href="https://nhost.io/"&gt;nhost.io&lt;/a&gt;
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#the-main-draw"&gt;
  &lt;/a&gt;
  The main draw
&lt;/h2&gt;

&lt;p&gt;Well that‚Äôs just the inner workings and if it's supposed to be an alternative to Firebase the most interesting part is obviously the features. After all no one gets interested in a tool based just on how it works but rather what it can do for them, so let's dive into that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;out of the box:&lt;/strong&gt; provides you with a solid base for starting a project, database, storage, scalability, authentication, user management and API,&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;customization and versatility&lt;/strong&gt;: aside from the defaults it can be customized and works well with others. Hasura Backend Plus supports customisable storage rules on any S3-compatible instance and works with third party Open Authentication providers like GitHub, Google, Facebook, Twitter and others,&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;performance&lt;/strong&gt;: PostgreSQL and Hasura GraphQL Engine are preconfigured to work as fast as possible,&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;subscriptions&lt;/strong&gt;: one often voiced complaint about GraphQL is the lack of a good subscription solution and manual query updates. No worries there, Nhost handles all that for you via Hasura,&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Dart and Flutter support&lt;/strong&gt;: provides easy to use software development kit packages for Flutter devs (beta).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S4DV2kzc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b8l8uuxk5c8yvl3plqg1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S4DV2kzc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b8l8uuxk5c8yvl3plqg1.png" alt="Nhost dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#source-nhostio"&gt;
  &lt;/a&gt;
  Source: &lt;a href="https://nhost.io/"&gt;nhost.io&lt;/a&gt;
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#who-is-it-for"&gt;
  &lt;/a&gt;
  Who is it for?
&lt;/h2&gt;

&lt;p&gt;Well you the reader, right? Well to be exact it's geared towards indie devs, startups and small to medium teams, at least for now according to the developers. The project has raised 3 million dollars for its next stage of development with prominent investors including the founders of GitHub, Netlify and WorkOS. &lt;br&gt;
So you can bank on it growing quite a bit in the near future and if it doesn't sound convincing to you yet, it might soon as they add new features. For now it's already a useful tool which provides you with a great base out of the box for starting your project. Even if you‚Äôre already using Firebase, Strapi or Openbase it's always good to check out an alternative and see if it does something better, after all its open source.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;A guest blog post for &lt;a href="https://blog.graphqleditor.com/"&gt;GraphQL Editor blog&lt;/a&gt; by Micha≈Ç Tyszkiewicz&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#speed-up-your-graphql-api-development"&gt;
  &lt;/a&gt;
  Speed up your GraphQL API development
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;GraphQL Editor&lt;/strong&gt; is a supportive tool for both advanced GraphQL users as well as those taking their first steps with GraphQL APIs. Our all-in-one development environment for GraphQL will help you build, manage &amp;amp; deploy your GraphQL API much faster. &lt;strong&gt;&lt;a href="https://graphqleditor.com"&gt;Try GraphQL Editor for free!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xh8ZaRkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hz2iv2u1073dy9orexxf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xh8ZaRkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hz2iv2u1073dy9orexxf.gif" alt="New features of GraphQL Editor gif"&gt;&lt;/a&gt; &lt;/p&gt;

</description>
      <category>graphql</category>
      <category>beginners</category>
      <category>database</category>
      <category>webdev</category>
    </item>
    <item>
      <title>React Style Guide Collection</title>
      <author>Kumar Nitesh</author>
      <pubDate>Tue, 10 Aug 2021 12:07:42 +0000</pubDate>
      <link>https://dev.to/knitesh/react-style-guide-collection-4p42</link>
      <guid>https://dev.to/knitesh/react-style-guide-collection-4p42</guid>
      <description>&lt;p&gt;I am in process of creating style guide for my react projects, and started looking online for already popular ones to get inspiration. Here are collection of all that I think are really good and will be helpful for developers like me looking for React style guide.&lt;/p&gt;

&lt;p&gt;Please comment If I am missing any or if you had a preferred one that I should look into.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#khan-react-style-guid"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/Khan/style-guides/blob/master/style/react.md"&gt;KHAN : React Style Guid&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uh4Z9yYu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yfo6tc0rujr7p3rg4th.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uh4Z9yYu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yfo6tc0rujr7p3rg4th.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#pagarme-react-code-style-guide"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/pagarme/react-style-guide"&gt;PAGARME: React Code Style Guide&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cfz5L15i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9f055iwfm0jgwq1qt4qj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cfz5L15i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9f055iwfm0jgwq1qt4qj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#airbnb-reactjsx-style-guide"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/airbnb/javascript/tree/master/react"&gt;AIRBNB: React/JSX Style Guide&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4kFGzafY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lp7qrkl9wz5dyxd8v99p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4kFGzafY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lp7qrkl9wz5dyxd8v99p.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#csstricks-react-code-style-guide"&gt;
  &lt;/a&gt;
  &lt;a href="https://css-tricks.com/react-code-style-guide/"&gt;CSS-TRICKS: React Code Style Guide&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J1dzD95X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hul1kdx4hb9runcxajim.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J1dzD95X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hul1kdx4hb9runcxajim.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#airbnb-issue-discussion-around-es62015"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/airbnb/javascript/issues/247"&gt;AIRBNB: Issue discussion around ES6/2015&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Really a good read.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wIfAnIRf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4yw7osd8cbg9tkwossrv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wIfAnIRf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4yw7osd8cbg9tkwossrv.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#google-javascript-guide"&gt;
  &lt;/a&gt;
  &lt;a href="https://google.github.io/styleguide/jsguide.html"&gt;Google: JavaScript Guide&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A general JS style guide.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tZNiHCv7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uwgc61j4d5igl48yq5yl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tZNiHCv7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uwgc61j4d5igl48yq5yl.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#reactjsorg-file-structure"&gt;
  &lt;/a&gt;
  &lt;a href="https://reactjs.org/docs/faq-structure.html"&gt;ReactJs.org: File Structure&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F1GSYQIq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6n2p23i3dxcblvrklnxf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F1GSYQIq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6n2p23i3dxcblvrklnxf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Also, if interested, &lt;a href="https://dev.to/knitesh/react-project-folder-structure-30cm"&gt;here&lt;/a&gt; you can read about my preferred folder structure.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#lessonly-engineering-react-styleguide"&gt;
  &lt;/a&gt;
  &lt;a href="https://about.lessonly.engineering/styleguide/react/"&gt;Lessonly Engineering: React Styleguide&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2it-Pz-h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2f8brtz0jhs5ds54cjf3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2it-Pz-h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2f8brtz0jhs5ds54cjf3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;ps: I will soon write a blog post detailing my style guide.&lt;/p&gt;

&lt;p&gt;Thanks&lt;br&gt;
Kumar Nitesh&lt;br&gt;
&lt;a href="https://twitter.com/imknitesh"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>styleguide</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Reactjs perfect toolsüõ†Ô∏èüí•</title>
      <author>KR Tirtho</author>
      <pubDate>Tue, 10 Aug 2021 12:00:07 +0000</pubDate>
      <link>https://dev.to/krtirtho/reactjs-perfect-tools-56jg</link>
      <guid>https://dev.to/krtirtho/reactjs-perfect-tools-56jg</guid>
      <description>&lt;p&gt;React is awesome &amp;amp; one of the most wanted &amp;amp; most used JavaScript frameworks according to &lt;a href="https://insights.stackoverflow.com/survey/2021#most-popular-technologies-webframe"&gt;StackOverflow survey 2021&lt;/a&gt;. With React simplest to complex applications can be done easily. But there are so many reactjs based libraries that we often find "finding libraries" an overwhelming task. Many times, we can't even remember/guess the term related to that library making it way harder to find. So I present you all the perfect tools for perfect the use cases of React&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I'm not going into full detail here. Just a simple introduction to the libraries that I mentioned or not at all. You'll find their docs more useful than this post/article/blog&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#state-management"&gt;
  &lt;/a&gt;
  State Management
&lt;/h3&gt;

&lt;p&gt;A major part of React is state management. But there are 2 types of state management done in frontend UI libraries:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;UI state (e.g. UI schemes, light/dark mode, etc..)&lt;/li&gt;
&lt;li&gt;Data fetching/Async-data state (e.g. request-response caching, WebSocket event caching, etc..)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Many people don't even know that these 2 types of state management exist. They just give one solution Redux/Mobx/XState etc.  But these are only UI state managers. Though some of 'em (e.g Redux) has Data fetching support through other packages/middlewares (e.g rtk-query) or have started recently, still it isn't complete&lt;/p&gt;

&lt;p&gt;Data fetching/Network response caching requires caching, invalidation of outdated data, memoization, garbage collection, etc.. which are extremely hard to do manually through a UI state manager. Doing this with UI state managers can often lead to memory leak/high resource usage &amp;amp; other issues&lt;/p&gt;

&lt;p&gt;Client-side state managers:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://zustand.surge.sh/"&gt;zustand&lt;/a&gt;&lt;/strong&gt;: A real simple, scalable, bearbones (barebone) state manager with no boilerplate but using the same FLUX principal. It's completely hooks-based &amp;amp; follows a single-store pattern. Though multiple stores can be created, all of them will be individual from each other. It's lightweight, fast, supports redux devtools, can be integrated with another awesome state-management pattern library &lt;a href="https://immerjs.github.io/immer/"&gt;&lt;code&gt;immer&lt;/code&gt;&lt;/a&gt; &amp;amp; it supports middleware for stores. It's like the perfect state manager that React was missing&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://redux.js.org/"&gt;Redux&lt;/a&gt;&lt;/strong&gt;: The God of state managers. Every UI framework including Dart's Flutter is even supported by it. The pioneer library to implement the FLUX pattern. Redux changed the way of state management. Its performant, configurable, production-ready &amp;amp; provides robust API. Always proved its worth while being in larger production applications. But its boilerplate is overwhelming. Even being so great &amp;amp; useful, many people still hate it because of its huge boilerplate. Though redux-toolkit tried to mitigate that problem. But once you get off the first phase (boilerplate), I can guarantee you'll never regret that you used Redux&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://mobx.js.org/"&gt;MobX&lt;/a&gt;&lt;/strong&gt;: Simple, scalable state manager &amp;amp; its framework agnostic. MobX even has Dart support. Its architectural freedom really lets one organize their state any way one wants. Just like Redux, it's battle-tested &amp;amp; production-proven. Its also store based &amp;amp; it mainly provides reactivity through Observables. Also, it's so much transparent &amp;amp; exposes the way it works to the end-user which is really uncommon compared to other libraries'&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://recoiljs.org/"&gt;recoil&lt;/a&gt;&lt;/strong&gt;: Experimental warning! This state manager is from Facebook. It creates a graph for state attached to the React's tree &amp;amp; state changes flow from roots of this graph (which they call atom) through pure functions known as selectors &amp;amp; into components. It's boilerplate-free, simple, lightweight, compatible with Concurrent React (when this feature in react will be available) &amp;amp; provides ease of usability. It closes the gap that React's Context API can't do&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://jotai.pmnd.rs/"&gt;jotai&lt;/a&gt;&lt;/strong&gt;: An awesome state-manager based on individual state pattern. Instead of creating a central store, it allows to create/manage state using individual atoms. And yeah, those states are called Atom. It's primitive, flexible, lightweight &amp;amp; super performant. It's from the same creator of &lt;code&gt;zustand&lt;/code&gt; but with a different mental model. It's more close to &lt;code&gt;recoil&lt;/code&gt; where &lt;code&gt;zustand&lt;/code&gt; is close to Redux/MobX&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://xstate.js.org/"&gt;XState&lt;/a&gt;&lt;/strong&gt;: An unique state management solution that uses the &lt;em&gt;Finite State machine's&lt;/em&gt; concept.&lt;em&gt;"A finite state machine is a mathematical model of computation that describes the behavior of a system that can be in only one state at any given time".&lt;/em&gt; At first glance, xstate can be confusing but it'd all make sense once you get there. It's a neat state manager&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Data fetching/Async-data management libraries:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://react-query.tanstack.com/"&gt;react-query&lt;/a&gt;&lt;/strong&gt;: The missing data-fetching library for React, but in more technical terms, it makes fetching, caching, synchronizing, and updating server state in your React applications a breeze. Before react-query synchronizing with server state &amp;amp; caching was a neck-breaking job. Especially when you get only UI state managers. It removes the pain of managing memory, memoization, caching &amp;amp; outdated data invalidating manually. It's available for react-native too. It's one of the reasons why many developers choose React over other frontend frameworks&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://swr.vercel.app/"&gt;swr&lt;/a&gt;&lt;/strong&gt;: It's pretty similar to react-query. Provides hooks for data fetching &amp;amp; lightweight, supports JAM stack. Also transport &amp;amp; protocol agnostic. It provides fast page navigation, polling on intervals, data dependency, revalidation of cached data on focus, pagination/scroll position recovery &amp;amp; many more. It's from the same team of &lt;em&gt;Nextjs &amp;amp; vercel&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://www.apollographql.com/docs/react/"&gt;apollo-client&lt;/a&gt;&lt;/strong&gt;: A comprehensive state management library that enables one to manage both local and remote data with GraphQL. Can be used to fetch, cache, and modify application data, all while automatically updating your UI. It's like react-query but for GraphQL. Shares the same hook names too. But it's cross-framework compatible thanks to its community. It's the best Data-fetching library specifically for GraphQL&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://redux-toolkit.js.org/tutorials/rtk-query/"&gt;rtk-query&lt;/a&gt;&lt;/strong&gt;: It's from &lt;code&gt;redux-toolkit&lt;/code&gt; &amp;amp; it's the best match if you're using Redux/redux-toolkit as your UI state manager. It's simple &amp;amp; lightweight. Unlike others, it's store-based. So all requests are individual. As it is from Redux, you can expect production-grade performance too&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#styling"&gt;
  &lt;/a&gt;
  Styling
&lt;/h3&gt;

&lt;p&gt;Component styling is a very important part of any frontend project. The best way is of course with brae minimum CSS but time's most valuable so using some kind of framework or pre-built library is always a plus point&lt;/p&gt;

&lt;p&gt;Styling using JavaScript is a new option too though it has an extra runtime cost but provides high customizability. Its called CSS in JS&lt;/p&gt;

&lt;p&gt;Another way to keep the customizability freedom but cut off the runtime cost is to use CSS pre-processors. These're highly modular, customizable, offer easy-to-use syntax. And these finally get compiled to functioning CSS&lt;/p&gt;

&lt;p&gt;CSS based:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://tailwindcss.com/"&gt;tailwindcss&lt;/a&gt;&lt;/strong&gt;: Highly modular/configurable, utility first CSS framework. Has its own jit(Just in time) compiler to cut off unused CSS &amp;amp; push CSS styles on the fly in development. In production, can cut off 100% of unused CSS using &lt;code&gt;purgecss&lt;/code&gt;. Almost anything that can be done through CSS can be done using tailwindcss classes&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://getbootstrap.com/"&gt;bootstrap&lt;/a&gt;&lt;/strong&gt;: Twitter's bootstrap is one of the best CSS component frameworks. For being over 10 years in the game, it's the most mature CSS framework. Best for quickly building user interfaces. Provides robust CSS classes that can be used to build any component. Bootstrap provides they're own component set. Also, there are tons of libraries built for bootstrap. So you'll never run out of custom component libraries&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://sass-lang.com/"&gt;scss&lt;/a&gt;&lt;/strong&gt;: scss/sass is a CSS pre-processor that allows doing all cool stuff with a fairly easy syntax. Previously Sass's compiler was written in Ruby but later it was re-written in Dart. Scss/Sass is also the main building block of bootstrap where previously bootstrap was completely CSS-based&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://create-react-app.dev/docs/adding-a-css-modules-stylesheet/"&gt;css modules&lt;/a&gt;&lt;/strong&gt;: Simply, CSS files in which all class names and animation names are scoped locally by default. It keeps the class names of that CSS file completely unique using UUID at the end of each class at build time. It's the best way to keep your component's styles individual from other's&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;CSS in JS  based:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://styled-components.com/"&gt;styled-components&lt;/a&gt;&lt;/strong&gt;: One of the best CSS in JS library. It allows styling using JS's new tag template function syntax. Allows theming, supports style inheritance, editor's CSS IntelliSense support, cross-compatible with other CSS frameworks &amp;amp; allows passing/accessing props through style functions/arguments&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://emotion.sh/"&gt;emotion&lt;/a&gt;&lt;/strong&gt;: Another CSS-in-JS library but its framework-agnostic. Offers high performance &amp;amp; ease of usability. It supports styling with both object &amp;amp; string. Emotion is really developer friendly &amp;amp; thus many bigger UI component libraries use it&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://xstyled.dev/"&gt;xstyled&lt;/a&gt;&lt;/strong&gt;: It's a utility-first CSS-in-JS framework built for React. It makes it easy to consistent design system and scale it over time. Unlike other CSS-in-JS libraries, it allows one to style via passing props. It matches React's declarative term perfectly. Provides theming support. It's like tailwindcss but made with CSS-in-JS. But it isn't a complete CSS-in-JS library. It requires either &lt;code&gt;styled-component&lt;/code&gt; or &lt;code&gt;@emotion/react @emotion/styled&lt;/code&gt; as it uses them under the hood&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://cssinjs.org/"&gt;JSS&lt;/a&gt;&lt;/strong&gt;: Another framework-agnostic CSS-in-JS library. It's simple, minimal &amp;amp; provides all the basic &amp;amp; barebones without any bloat &amp;amp; has a plugin system. It's a major choice for bigger UI component frameworks as it can do a lot if one can define it. Its also very lightweight&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#ui-components"&gt;
  &lt;/a&gt;
  UI components
&lt;/h3&gt;

&lt;p&gt;UI components are simply pre-built components that can be configured/tweaked for other design foundations. UI components save a lot of developer time &amp;amp; make the development easier. Also, its managed by so many people that they're often more secure &amp;amp; performant comparing to components built manually&lt;/p&gt;

&lt;p&gt;So many UI component libraries are available. Many of them are completely individual &amp;amp; many are based on the philosophy &amp;amp; design pattern of bigger design systems&lt;/p&gt;

&lt;p&gt;Here is the list:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://chakra-ui.com/"&gt;chakra-ui&lt;/a&gt;:&lt;/strong&gt; Modular component library. It's like the tailwindcss of React but made with style as props pattern. Highly configurable theming support. Can be configured to look like anything &amp;amp; has a huge component library&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://material-ui.com/"&gt;material-ui&lt;/a&gt;:&lt;/strong&gt; The most famous UI component library in React ecosystem. Provides 200+ components, highly configurable &amp;amp; based on google's material-design principal. But currently, it's suffering from a Typescript type-related bug that makes the tsserver super slow to determine types. But it'll be fixed in the next major update v5 which is already in beta. This bug can slow down low-spec PCs easily but if you've got a mid-high spec PC then don't stop, use it. Also awesome if you're not using Typescript in your project&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://react-bootstrap.github.io/"&gt;react-bootstrap&lt;/a&gt;:&lt;/strong&gt; React implementation of famous CSS framework bootstrap&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://ant.design/docs/react/introduce"&gt;ant-design react&lt;/a&gt;:&lt;/strong&gt; A UI component framework provided by ant-design for React based on the ant-design system. Highly customizable, supports theming &amp;amp; provides a huge number of components.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://v2.grommet.io/"&gt;grommet&lt;/a&gt;:&lt;/strong&gt; Responsive, mobile-first, carefully designed UI component library for react. Has a large number of components. And their design is just beautiful. Simple, minimal &amp;amp; highly responsive&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://evergreen.segment.com/"&gt;evergreen&lt;/a&gt;:&lt;/strong&gt; A flexible, contributor-friendly, sensible-default style providing UI component framework. Its foundation is super beautiful, provides a minimal design system &amp;amp; is unique among all&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Info!&lt;/strong&gt;: I'm building a UI component library based on &lt;strong&gt;tailwindcss&lt;/strong&gt; which is gonna be a cross-framework library. At the start, react &amp;amp; vue support will be provided &amp;amp; svelte support is planned too. Its name is &lt;strong&gt;revind.&lt;/strong&gt; &lt;em&gt;And the project needs more contributors.&lt;/em&gt; If you want to contribute, head to &lt;a href="https://github.com/FotieMConstant/revind"&gt;https://github.com/FotieMConstant/revind&lt;/a&gt; or contact me via &lt;a href="https://twitter.com/KrTirtho"&gt;Twitter&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#form-handlers"&gt;
  &lt;/a&gt;
  Form handlers
&lt;/h3&gt;

&lt;p&gt;Handling Forms is a hard thing in react. Controlling, validating input, reset state on successful submit, checking whether the input was touched, etc.. are a lot of work to do. But luckily, there are form handling libraries that make it a breeze&lt;/p&gt;

&lt;p&gt;List of form handlers:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://formik.org/"&gt;formik&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://react-hook-form.com/"&gt;react-hook-form&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://final-form.org/react/"&gt;react-final-form&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#graphql"&gt;
  &lt;/a&gt;
  GraphQL
&lt;/h3&gt;

&lt;p&gt;The graph query language provides a way to fetch only required data saving both user's &amp;amp; server's bandwidth. A technology by Facebook that sits on top of HTTP to work. It only uses the HTTP POST verb to transfer data. It's modern &amp;amp; makes HTTP connections more eco-friendly&lt;/p&gt;

&lt;p&gt;Popular graphql libraries for React are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.apollographql.com/docs/react/"&gt;Apollo Client&lt;/a&gt; by Apollo Server&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://relay.dev/"&gt;Relay&lt;/a&gt; by facebook&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://formidable.com/open-source/urql"&gt;urql&lt;/a&gt; - universal react query library&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#essential-ui-helper-componentshook"&gt;
  &lt;/a&gt;
  Essential UI helper components/hook
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; &lt;strong&gt;Tables&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tables are most often needed for data-driven applications. But handling this amount of dynamic text manually can be a hazard. But these React Table libraries saves the day&lt;/p&gt;

&lt;p&gt;List of table libraries:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://material-table.com"&gt;material-table&lt;/a&gt;&lt;/strong&gt; (best if using material-ui)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://react-table.tanstack.com/"&gt;react-table&lt;/a&gt;&lt;/strong&gt; (from the creator of react-query)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://www.material-ui-datatables.com/"&gt;MUI-Datatables&lt;/a&gt;&lt;/strong&gt; (another best match for material-ui)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://bvaughn.github.io/react-virtualized"&gt;react-virtualized&lt;/a&gt;&lt;/strong&gt; (awesome for being framework-agnostic)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;2. Animation libraries&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Animations are now a modern trend. Every website/app has some kind of animations to make the end user's experience amazing. But creating such awesome animations isn't easy, it includes mathematics, algorithms &amp;amp; sometimes GPU acceleration too. But following react animation libraries made that work easy...&lt;/p&gt;

&lt;p&gt;List of animation libraries:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://react-spring.io/"&gt;react-spring&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.framer.com/motion/"&gt;framer-motion&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.remotion.dev/"&gt;remotion&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://react-move-docs.netlify.app/"&gt;react-move&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; &lt;strong&gt;Loaders/Skeleton/Progress-bar&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Always need a fallback when data is being fetched from the server, right? Showing loaders/skeleton/progress-bar makes it easier for users to wait &amp;amp; gives your site fewer "go away at first click" scores&lt;/p&gt;

&lt;p&gt;Below are awesome loader libraries that can be used with React:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://skeletonreact.com/"&gt;react-content-loader&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/mhnpd/react-loader-spinner"&gt;react-loader-spinner&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.davidhu.io/react-spinners/"&gt;react-spinners&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/tanem/react-nprogress"&gt;@tenem/react-nprogress&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/dvtng/react-loading-skeleton"&gt;react-loading-skeleton&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://klendi.github.io/react-top-loading-bar/"&gt;react-top-loading-bar&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;4. Infinite Scroll&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Pagination is becoming an older way. Because of the increasing amount of smartphone users, it's now more convenient to use infinite scroll to get more data or an infinite amount of data. But doing so involves a lot of DOM manipulation via &lt;em&gt;refs&lt;/em&gt; thus doing it manually is kind of a hazard. So infinite scroll component/hook libraries exist&lt;/p&gt;

&lt;p&gt;List of infinite scroll component/hook libraries:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/civiccc/react-waypoint"&gt;react-waypoint&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://danbovey.uk/react-infinite-scroller/"&gt;react-infinite-scroller&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/caseywebdev/react-list"&gt;react-list&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ankeetmaini/react-infinite-scroll-component"&gt;react-infinite-scroll-component&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/jaredpalmer/react-simple-infinite-scroll"&gt;react-simple-infinite-scroll&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/streamich/libreact"&gt;Libreact&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another awesome react library is &lt;a href="https://github.com/streamich/libreact"&gt;&lt;code&gt;libreact&lt;/code&gt;&lt;/a&gt;. It's an awesome collection of all misc. react components that we don't need very often but sometimes become essential. &lt;code&gt;libreact&lt;/code&gt; provides these components separately or as a collection. But either way, it almost contains all less essential components at the perfect time when we need 'em&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>typescript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to do a subsearch in Splunk?</title>
      <author>Maxime Guilbert</author>
      <pubDate>Tue, 10 Aug 2021 11:57:05 +0000</pubDate>
      <link>https://dev.to/adaendra/how-to-do-a-subsearch-in-splunk-3n56</link>
      <guid>https://dev.to/adaendra/how-to-do-a-subsearch-in-splunk-3n56</guid>
      <description>&lt;p&gt;When we debug an application, we may need to do some data aggregation to know what happened. So, like in SQL, we can do some sub-searches in Splunk to quickly retrieve a lot of information.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#simple-search"&gt;
  &lt;/a&gt;
  Simple search
&lt;/h1&gt;

&lt;p&gt;First, we will check how to do a simple search and how the data is retrieved.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For what happened next, we will use the following example :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;an api that always log the transaction id [&lt;strong&gt;transaction_id&lt;/strong&gt;] and a generic error code [&lt;strong&gt;error_code&lt;/strong&gt;] &lt;em&gt;(if the transaction was incorrect)&lt;/em&gt; before to answer to the user&lt;/li&gt;
&lt;li&gt;a log with the transaction id [&lt;strong&gt;transaction_id&lt;/strong&gt;] and with the exception content [&lt;strong&gt;exception&lt;/strong&gt;] if a field was missing&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;So here, with simple searches, we can search which transactions failed&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;error_code=* | table transaction_id
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;transaction_id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;or search an error log&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;transaction_id="1" AND exception=* | table timestamp, transaction_id, exception
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;timestamp&lt;/th&gt;
&lt;th&gt;transaction_id&lt;/th&gt;
&lt;th&gt;exception&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2021-01-01 00:00:00.000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Missing field&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h1&gt;
  &lt;a href="#subsearch"&gt;
  &lt;/a&gt;
  Subsearch
&lt;/h1&gt;

&lt;p&gt;Now that we see what we can do with simple searches, we will be able to combine them to retrieve all the transaction_id with an exception!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-how-do-we-do-a-subsearch"&gt;
  &lt;/a&gt;
  So how do we do a subsearch?
&lt;/h3&gt;

&lt;p&gt;In your Splunk search, you just have to add&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[ search &lt;em&gt;[subsearch content]&lt;/em&gt; ]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;example&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[ search transaction_id="1" ]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So in our example, the search that we need is&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[search error_code=* | table transaction_id ] AND exception=* | table timestamp, transaction_id, exception
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And we will have&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;timestamp&lt;/th&gt;
&lt;th&gt;transaction_id&lt;/th&gt;
&lt;th&gt;exception&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2021-01-01 00:00:00.000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Missing field&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021-01-03 00:00:00.000&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Auth failed&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The transaction_id 2 is missing because it wasn't a transaction with an error.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#but-how-does-it-works"&gt;
  &lt;/a&gt;
  But how does it works?
&lt;/h3&gt;

&lt;p&gt;It's quite simple! In my example, I did a simple search that returns only one information per log.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;error_code=* | table transaction_id
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;transaction_id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;So when you are doing this kind of search as a subsearch, Splunk transforms it to &lt;strong&gt;OR&lt;/strong&gt; condition for each line.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[search error_code=* | table transaction_id ] AND exception=*

becomes

(transaction_id = "1" OR transaction_id = "2" OR transaction_id = "3") AND exception=*
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And if you are retrieving more than one info in your subsearch, Splunk will transform it as an if condition, where each tuple is a matching case. &lt;em&gt;(The condition to be valid is to match all values from the same line.)&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[search error_code=* | table transaction_id, timestamp ] AND exception=*

becomes

(
  (transaction_id = "1" AND timestamp = "2021-01-01 00:00:00.000") OR  
  (transaction_id = "2" AND timestamp = "2021-01-02 00:00:00.000") OR
  (transaction_id = "3" AND timestamp = "2021-01-03 00:00:00.000") 
) AND exception=*
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#splunk-documentation"&gt;
  &lt;/a&gt;
  Splunk documentation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;"Use a subsearch" : &lt;a href="https://docs.splunk.com/Documentation/Splunk/8.2.1/SearchTutorial/Useasubsearch"&gt;https://docs.splunk.com/Documentation/Splunk/8.2.1/SearchTutorial/Useasubsearch&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;"About subsearches" : &lt;a href="https://docs.splunk.com/Documentation/Splunk/8.2.1/Search/Aboutsubsearches"&gt;https://docs.splunk.com/Documentation/Splunk/8.2.1/Search/Aboutsubsearches&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;And that's it! You've learned how to do subsearches in Splunk!&lt;/p&gt;

&lt;p&gt;I hope you enjoyed it and it will help you! üç∫&lt;/p&gt;

</description>
      <category>devops</category>
      <category>sre</category>
      <category>monitoring</category>
    </item>
    <item>
      <title>How to convert Float to int in Python?</title>
      <author>hrishikesh1990</author>
      <pubDate>Tue, 10 Aug 2021 11:47:36 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/how-to-convert-float-to-int-in-python-5785</link>
      <guid>https://dev.to/hrishikesh1990/how-to-convert-float-to-int-in-python-5785</guid>
      <description>&lt;p&gt;In this short tutorial, we learn how to convert float to int Python. We look at all the various methods and discuss their pros and cons. &lt;/p&gt;

&lt;p&gt;In case you are looking only for a safe solution to use in your application, I would recommend the second solution. However, if you are interested in the various methods available please follow along. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents-float-to-int-python"&gt;
  &lt;/a&gt;
  Table of Contents - Float to Int Python
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#why-convert-float-to-int-in-python"&gt;Why convert float to int in Python?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#solution-1-using-int"&gt;Solution 1 - Using int()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#solution-2-using-the-math-module"&gt;Solution 2 - Using the math module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#limitations-amp-caveats-float-to-int-python"&gt;Limitations &amp;amp; Caveats - Float to Int Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-convert-float-to-int-in-python"&gt;
  &lt;/a&gt;
  Why convert float to int in Python?
&lt;/h2&gt;

&lt;p&gt;Converting data types is a common practice and Python comes with a few in-built methods to achieve this. However, converting Float to int in Python must be dealt with more caution; we talk more about this later in the article.  &lt;/p&gt;

&lt;p&gt;A common use case of converting a float to int is to display a floating value as a number or a percentage. Since int values are immutable the values can be displayed as integer values without changing the original data type. &lt;/p&gt;

&lt;p&gt;Apart from all this, when it comes to the efficiency of calculations, integer values are always preferred.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution-1-using-int"&gt;
  &lt;/a&gt;
  Solution 1 - Using int():
&lt;/h2&gt;

&lt;p&gt;This method of converting float to int in Python uses the int() method to convert float to int. However, this method is prone to data loss and hence isn't recommended.&lt;/p&gt;

&lt;p&gt;The below example would give you a better understanding:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;float_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.1&lt;/span&gt;
&lt;span class="n"&gt;float_2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.5&lt;/span&gt;
&lt;span class="n"&gt;float_3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.9&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;float_1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output - 1
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;float_2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output - 1
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;float_3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output - 1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, Python converts all the values into 1 which is an integer value. The data loss here may not seem significant unless you are dealing with currency values. In that case, the inefficient rounding of the float values can cause monetary losses.&lt;/p&gt;

&lt;p&gt;Due to this, as a common practice, this method of conversion is not recommended.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution-2-using-the-math-module"&gt;
  &lt;/a&gt;
  Solution 2 - Using the math module:
&lt;/h2&gt;

&lt;p&gt;The math module provides access to a lot of additional mathematical functions and among them, we make use of the ‚Äòmath.ceil‚Äô and ‚Äòmath.floor‚Äô functions.&lt;/p&gt;

&lt;p&gt;The ‚Äòmath.ceil‚Äô takes a floating value as a parameter and returns the smallest integer value that is greater than or equal to the argument. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax-of-mathceil"&gt;
  &lt;/a&gt;
  Syntax of math.ceil:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The ‚Äòmath.floor‚Äô function does the opposite of ‚Äòceil‚Äô and returns the largest integer less than or equal to the argument.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax-of-mathfloor"&gt;
  &lt;/a&gt;
  Syntax of math.floor
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since both methods return an integer value, this second method can also be used to convert float to Int in Python. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#parameter"&gt;
  &lt;/a&gt;
  Parameter:
&lt;/h3&gt;

&lt;p&gt;x - Required, the number that you are looking to convert &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-amp-explanation"&gt;
  &lt;/a&gt;
  Code &amp;amp; Explanation:
&lt;/h3&gt;

&lt;p&gt;Since both the above-mentioned methods are part of the math module, it needs to be imported before we use them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;

&lt;span class="n"&gt;float_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.1&lt;/span&gt;
&lt;span class="n"&gt;float_2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.5&lt;/span&gt;
&lt;span class="n"&gt;float_3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.9&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;float_1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;float_1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output - 1
#Output - 2
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;float_2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;float_2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output - 1
#Output - 2
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;float_3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;float_3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output - 1
#Output - 2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see in the above code snippet, the values can be converted based on your preference reducing data loss. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#limitations-amp-caveats-float-to-int-python"&gt;
  &lt;/a&gt;
  Limitations &amp;amp; Caveats - Float to Int Python
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Although the int() method works, it is not recommended as there could be data loss. However, it can be used if you are just looking to understand the concept and not working on anything significant.&lt;/li&gt;
&lt;li&gt;The math methods prevent data loss while converting float to int in Python; however, you could still cause a loss if the correct function is not used. I would recommend practicing it a few times to ensure you have a better understanding.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Building A URL Shortener Application</title>
      <author>Oluwole Ajewole</author>
      <pubDate>Tue, 10 Aug 2021 11:15:49 +0000</pubDate>
      <link>https://dev.to/wolemercy/building-a-url-shortener-application-5clb</link>
      <guid>https://dev.to/wolemercy/building-a-url-shortener-application-5clb</guid>
      <description>&lt;p&gt;Welcome to my first of many #DEV posts!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#intro"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dev"&gt;Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deploy"&gt;Deployment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lessons"&gt;Lessons&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;As part of my dev growth, I thought I'd build an application that ticked the following boxes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;functionality: it should serve a specific purpose rather than just be a dummy&lt;/li&gt;
&lt;li&gt;usefulness: users should derive some meaningful merit from it &lt;/li&gt;
&lt;li&gt;instructiveness: it should be to me, an opportunity to learn and improve my software engineering skills&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, there are other needs‚Äîin addition to the ones aforementioned‚Äîthat applications should fulfil, but I reasoned it best to focus on those three for now. It resulted in me building a &lt;a href="https://weburlshortener.herokuapp.com/"&gt;&lt;strong&gt;URL Shortener App&lt;/strong&gt;&lt;/a&gt; that is scalable and ultimately, satisfying.&lt;/p&gt;

&lt;p&gt;This post is not a "How To" guide on recreating this application; rather,¬† it's a summary of the project, and the documentation of the things I learnt‚Äîor more aptly, the things I learnt and still rememberüòÖ.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-stack"&gt;
  &lt;/a&gt;
  The Stack
&lt;/h3&gt;

&lt;p&gt;The core aspects of the project as well as the elements associated with them are summarized as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Programming Language - Python&lt;/li&gt;
&lt;li&gt;Backend - Django&lt;/li&gt;
&lt;li&gt;Frontend - Django (HTML/CSS and Bootstrap)&lt;/li&gt;
&lt;li&gt;Database - PostgreSQL&lt;/li&gt;
&lt;li&gt;Hosting - Heroku&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can find the repository for this project on my &lt;a href="https://github.com/Wolemercy/url-shortener"&gt;GitHub&lt;/a&gt;. You can check out the application &lt;a href="https://weburlshortener.herokuapp.com/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#development"&gt;
  &lt;/a&gt;
  Development &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Django uses the Model-View-Template (MVT) pattern which is only slightly different from the general¬† Model-View-Controller (MVC) pattern because Django takes care of the Controller aspect. The Models, Views and Templates are essentially the building blocks of the project as they define how your app functions and interacts with the user.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-model"&gt;
  &lt;/a&gt;
  The Model
&lt;/h3&gt;

&lt;p&gt;The Django model provides an Object-relational Mapping (ORM) to the database. The models you define are mapped to tables in your database and they can all be connected. This &lt;a href="https://weburlshortener.herokuapp.com/"&gt;&lt;strong&gt;URL Shortener App&lt;/strong&gt;&lt;/a&gt; uses a model called &lt;code&gt;Shortener&lt;/code&gt;. Its fields are as seen in the snippet below. The save method is called to update the database with the shortened URL associated with the user's original URL.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#the-utility-function"&gt;
  &lt;/a&gt;
  The Utility Function
&lt;/h3&gt;

&lt;p&gt;An utility function is used to generate the shortened URL as seen below. It checks if the created URL is unique¬† and only returns the generated code once that condition has been satisfied.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#the-form"&gt;
  &lt;/a&gt;
  The Form
&lt;/h3&gt;

&lt;p&gt;Forms are the receptacles of a user's input and they define the actions and methods (POST, GET) that get sent to the server. The &lt;code&gt;Form&lt;/code&gt; class is what handles forms in Django. It accepts specifics such as form fields, layouts, valid values, and so forth. More on that can be read &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Forms"&gt;here&lt;/a&gt;. Forms can be inherited from Models and that's the road more travelled. It was also the road I took.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#views"&gt;
  &lt;/a&gt;
  Views
&lt;/h3&gt;

&lt;p&gt;The Views in Django are what take a user's web request and returns a response. Two basic view functions were used; one received the user's original URL and returned the shortened link while the other was responsible for redirecting the shortened link to the destination of the original URL.&lt;/p&gt;

&lt;p&gt;In defining the views, I also -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;defined the logic that monitors the number of times the shortened link has been followed&lt;/li&gt;
&lt;li&gt;ensured that shortened links were only created if the user's URL wasn't currently existing in the database. If a record of the URL existed, the shortened URL associated with that record will simply be returned.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#templates"&gt;
  &lt;/a&gt;
  Templates
&lt;/h3&gt;

&lt;p&gt;These are files that define the structure of the HTML pages associated with the rendered views. Two templates were used‚Äîthe base template and the home template. The former defines the general boilerplate¬† html code to be inherited by other more specific templates like the home template. The templates were written in HTML and the Django Template Language. The former reprised its role as the standard markup language for web pages while the latter made it possible to extend templates, insert conditionals, and call URLs associated with the application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tests"&gt;
  &lt;/a&gt;
  Tests
&lt;/h3&gt;

&lt;p&gt;This was my first experience writing tests for an application. Thankfully, the Django documentation proved really helpful. You can learn more about Django tests &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Testing"&gt;here&lt;/a&gt; and &lt;a href="https://docs.djangoproject.com/en/3.2/topics/testing/"&gt;here&lt;/a&gt;. I wrote tests for¬† the forms, models, and views. Below is a snippet of the unit tests written for the forms.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#deployment"&gt;
  &lt;/a&gt;
  Deployment &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://weburlshortener.herokuapp.com/"&gt;&lt;strong&gt;URL Shortener App&lt;/strong&gt;&lt;/a&gt; was deployed using Heroku's free tier cloud service. It was a bit tricky but all I needed to do was follow the documentation as seen &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Deployment"&gt;here&lt;/a&gt;, and it was fine in the end. Heroku is well integrated with git so deploying and even redeploying after making some changes is not so complex.&lt;/p&gt;

&lt;p&gt;Furthermore, by default, Django makes use of an sqlite database which Heroku does not directly support. There are a few workarounds to that solves that problem but I ended up using a PostgreSQL database even in my local development environment. I could have done without that, yes. However, I wanted to learn how to incorporate a different database into an application and it was interesting doing exactly that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#opportunities-for-improvement"&gt;
  &lt;/a&gt;
  Opportunities for Improvement
&lt;/h3&gt;

&lt;p&gt;For the next iteration of this project, I intend to add a couple of functionalities including (and probably beyond):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;showing users the links they've created&lt;/li&gt;
&lt;li&gt;allowing users delete their created links&lt;/li&gt;
&lt;li&gt;dockerizing the application&lt;/li&gt;
&lt;li&gt;automating the tests&lt;/li&gt;
&lt;li&gt;making the UI a bit better &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lessons"&gt;
  &lt;/a&gt;
  Lessons &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;I have categorized the critical things I learnt and the "big" challenges I faced into two; code-related and non-code-related.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coderelated-lessons"&gt;
  &lt;/a&gt;
  Code-related Lessons
&lt;/h3&gt;

&lt;p&gt;These lessons specifically have to do with new approaches to solving problems I discovered (I'm not Christopher Columbus, I know) in the course of this project. Some, you may already know, but are, to me, worthy of note.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#windows-terminal-is-the-truth"&gt;
  &lt;/a&gt;
  Windows Terminal is the Truth
&lt;/h3&gt;

&lt;p&gt;I use a Windows environment and for a long time, Git Bash was sufficient to fulfill my command-line needs. In deploying the application to Heroku, however, I struggled with adding a SECRET_KEY to my application environment. It turned out that the ampersand (&amp;amp;) character which was part of my SECRET_KEY¬† was a  reserved character and it was not getting parsed as intended. I was stuck for a few hours trying to find a way around it and I tried different solutions as seen on the web to no avail. Single quotes, double quotes, backslashes, etc. Nothing worked.&lt;/p&gt;

&lt;p&gt;Then I decided to change my command-line environment from Git Bash to Windows Terminal and that did the trick. Using a PowerShell profile in Windows Terminal, I only had to wrap the ampersand character‚Äîand the close-parenthesis character,")"‚Äîin double quotes and the entire string in single quotes to get it to work. Honestly, I'm not quite sure why I stayed away from Windows Terminal for so long but I'll be using it here on out. It's customizable; it can be integrated with CMD, PowerShell and Linux environments; it supports "Ctrl + C" and "Ctrl + V" as the default copy and paste commands unlike Git Bash; and it also looks nice. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#python-decouple-for-environment-variables"&gt;
  &lt;/a&gt;
  Python Decouple for Environment Variables
&lt;/h3&gt;

&lt;p&gt;In the past, I've always approached accessing environment variables by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;creating a JSON file and storing the environment variables therein&lt;/li&gt;
&lt;li&gt;writing a a few lines of code in my settings.py file to read the JSON file&lt;/li&gt;
&lt;li&gt;accessing each variable in the JSON file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, in the course of this project, I picked up on using the Python Decouple library to access my secret keys. Once installed with pip, I only needed to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create an &lt;code&gt;.env&lt;/code&gt; file and store the environment variables&lt;/li&gt;
&lt;li&gt;import the config object from decouple in my settings.py file&lt;/li&gt;
&lt;li&gt;access each variable in the &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In both methods, it is necessary to include the JSON and &lt;code&gt;.env&lt;/code&gt; files in a &lt;code&gt;gitignore&lt;/code&gt; file. However, the latter  is a lot quicker to implement than the former as it saves me a couple of lines, and going forward, it is definitely the way to go.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#noncoderelated-lessons"&gt;
  &lt;/a&gt;
  Non-Code-related Lessons
&lt;/h3&gt;

&lt;p&gt;These lessons aren't particularly linked to code but they were important things to note.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sometimes-it-is-okay-to-fail-a-test"&gt;
  &lt;/a&gt;
  Sometimes, it is okay to fail a test
&lt;/h3&gt;

&lt;p&gt;If you'd told me in high school that I'd one day look forward to failing a test, I would have punched you in the face to snap you out of that illusion. Okay, maybe that's going a bit too far but you catch the drift. Being optimistic and more so, delighted about a failed test is not exactly a "natural" emotional state. &lt;/p&gt;

&lt;p&gt;However, while writing tests for this &lt;a href="https://weburlshortener.herokuapp.com/"&gt;&lt;strong&gt;URL Shortener App&lt;/strong&gt;&lt;/a&gt;, some were specifically designed to fail. The successes of these tests were hinged on their failure. The tests had to fail for them to pass, for lack of a less ironic expression. This was for me, a rather poignant reminder that failure is not inherently a bad thing. For all the stigma and unenviable disrepute it continues to garner, failure, sometimes, is okay.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#frontend-isnt-bread-and-butter"&gt;
  &lt;/a&gt;
  Front-end isn't bread and butter
&lt;/h3&gt;

&lt;p&gt;"It's just styling". Eh, no it's not! At least not for me. Giving the &lt;a href="https://weburlshortener.herokuapp.com/"&gt;&lt;strong&gt;URL Shortener App&lt;/strong&gt;&lt;/a&gt; a good interface wasn't the easiest of things for me. From the layout and the elements to the fonts and colors, it was a bit difficult. I refer more to deciding on what to do rather than the implementation. For instance, choosing the color scheme for the site was  a bit frustrating. If you think my final decision isn't so good, wait till you see what my many iterations looked like. For this bit, I'd appreciate any resource or tips that could help improve the choice of colors and page styling in general.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-have-a-thing-for-this-thing-called-raw-code-endraw-"&gt;
  &lt;/a&gt;
  I have a thing for this thing called &lt;code&gt;Code&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;I thoroughly enjoyed building this App. I'm not exactly a code newbie but I'm green to Software Engineering, and it is, for  me, an exciting frontier. I look forward to building even better products, and learning from and collaborating with other Engineers.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;Let me know what you think about this &lt;a href="https://weburlshortener.herokuapp.com/"&gt;&lt;strong&gt;URL Shortener App&lt;/strong&gt;&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Also connect with me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;LinkedIn: &lt;a href="https://www.linkedin.com/in/wolemercy"&gt;Wolemercy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Twitter:  &lt;a href="https://twitter.com/wolemercy"&gt;Wolemercy&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>django</category>
      <category>webdev</category>
      <category>heroku</category>
    </item>
    <item>
      <title>How to spin a multi cloud application with CAST AI</title>
      <author>CAST AI</author>
      <pubDate>Tue, 10 Aug 2021 11:12:16 +0000</pubDate>
      <link>https://dev.to/castai/how-to-spin-a-multi-cloud-application-with-cast-ai-oo</link>
      <guid>https://dev.to/castai/how-to-spin-a-multi-cloud-application-with-cast-ai-oo</guid>
      <description>&lt;p&gt;Multi cloud has been touted as &lt;strong&gt;the magic pill for many cloud &lt;/strong&gt;pain points: getting locked into the services of a single vendor, ensuring business continuity in the case of an outage, and having your cloud bill spiral out of control.&lt;/p&gt;

&lt;p&gt;But more often than not, the &lt;strong&gt;effort of using multi cloud&lt;/strong&gt; brings engineers more complexities to deal with - and a cost increase.&lt;/p&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;b&gt;Multi cloud (CAST AI)&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;b&gt;Cluster federation &lt;/b&gt;&lt;b&gt;(other services)&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;A multi cloud cluster is a single cluster - the connection between clouds is at network level.¬†&lt;/span&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;span&gt;Kubernetes doesn‚Äôt know that there are multiple cloud services or locations at play - it just sees a single network of nodes.&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;A cluster federation is made of multiple clusters where the connection is at the level of Kubernetes.¬†&lt;/span&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;span&gt;Great for coordinating the configuration of multiple clusters from a single set of APIs in a hosting cluster.¬†&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;b&gt;Benefits:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span&gt;Instant multi cloud in the same region&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Cost optimization&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Access to best-in-class services&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Performance optimization&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Security¬†&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Disaster prevention&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;b&gt;Benefits:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span&gt;Easier deployment of multi-geo applications&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Disaster recovery&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;¬†&lt;/p&gt;
&lt;p&gt;¬†&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;



&lt;blockquote&gt;&lt;p&gt;So how do you actually run a multi cloud application that gives you the freedom to choose among the best-in-class services from various providers, prevents disasters, and helps you save, not increase, on the cloud?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This may sound too good to be true, but that‚Äôs the promise of multi cloud. And we guarantee that it works.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Take a look at this guide to see how multi cloud works in practice:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#whatismulticloud"&gt;What is multi cloud all about?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#benefitsofmulticloud"&gt;What‚Äôs there to gain with multi cloud?&lt;/a&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="#costoptimization"&gt;Cost optimization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#accesstoservices"&gt;Access to best-in-class services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#performanceoptimization"&gt;Performance optimization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#security"&gt;Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#disasterprevention"&gt;Disaster prevention&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#howmulticloudworks"&gt;How multi cloud works in CAST AI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#multicloudcasestudy"&gt;Case study: How multi cloud works in CAST AI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="whatismulticloud"&gt;What is multi cloud all about?&lt;/h2&gt;

&lt;p&gt;In a multi cloud setup, teams can deploy applications and other assets across several cloud environments at the same time. A typical multi cloud architecture uses two or more public clouds, sometimes in combination with private clouds. In a &lt;a href="https://www.gartner.com/en/conferences/apac/infrastructure-operations-cloud-india/featured-topics/cloud"&gt;Gartner survey&lt;/a&gt;, 81% of respondents admitted using two or more providers already.¬†&lt;/p&gt;

&lt;p&gt;Check out this video to learn more: &lt;a href="https://www.youtube.com/watch?v=qkj5W98Xdvw&amp;amp;t=608s"&gt;Hybrid Cloud and MultiCloud | Why are companies adopting it?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here‚Äôs how we understand multi cloud at the level of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Data&lt;/strong&gt; - having a single source of data shared among different workloads, regardless of which public cloud service they‚Äôre in.¬†&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Service&lt;/strong&gt; - making services built in one cloud available for reuse in other cloud services. If you use Amazon RDS and have a process that uses the Machine Learning engine from Google Cloud, you should be able to make these things work together to use the best of both worlds.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Workload&lt;/strong&gt; - applications and data work together using abstract processes that may be installed in different VMs - some owned by AWS, others by Google Cloud or Azure.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Translated into the Kubernetes world, multi cloud means the ability to create and manage a Kubernetes cluster in any number of clouds. &lt;/strong&gt;To the point where the number of cloud services becomes irrelevant.¬†&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Developers should be able to deploy their applications to clusters easier and then have these clusters optimized all the time. This is what true multi-cloud is for us. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This approach is on its way to becoming the core of the future multi cloud initiatives as more and more companies realize the limitations of monocloud setups and start looking for a better cost vs. performance balance.&lt;/p&gt;

&lt;h2 id="benefitsofmulticloud"&gt;What‚Äôs there to gain with multi cloud?&lt;/h2&gt;

&lt;h3 id="costoptimization"&gt;1. Cost optimization&lt;/h3&gt;

&lt;p&gt;A multi cloud environment gives you the freedom to compare different cloud providers and secure the best offers depending on your changing needs. You can choose services that offer exactly what you need - from flexible payments to customizable capacity. And a better price.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here‚Äôs an example from our research: &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's say that you have two instances with 4 CPU and 16 GB RAM from Google Cloud and AWS. Compare them and you‚Äôll see that the instance from Google is 10% cheaper and offers 7% more compute capacity in the EU Central Frankfurt region.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hJEE2PC1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/IfwBsbksoCjCL1QruwiVxm9O9fQxgiDjS5w-3uAN0uOlqfByaWTlJffN29dcQ6nOZAGDhCRnFnASebzsYfE7a3qoje5LJhnFgwvxXV1zpUEvRZKB82pwn910eqDGE3C29cWYXJ_F" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hJEE2PC1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/IfwBsbksoCjCL1QruwiVxm9O9fQxgiDjS5w-3uAN0uOlqfByaWTlJffN29dcQ6nOZAGDhCRnFnASebzsYfE7a3qoje5LJhnFgwvxXV1zpUEvRZKB82pwn910eqDGE3C29cWYXJ_F" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p6v4Iqvo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/GAKZbBe2J-opkKauIYis5ZwBcUIIinHF2o9GK9Be51B_464i9hkxotk1o5SrJXLu7T9EKxJ1jYt2qWZCFU64zfba78xp5qD9ykCIp3wqnJYtiyPQnuFzP6_7gfBhsjE98GgkCSZk" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p6v4Iqvo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/GAKZbBe2J-opkKauIYis5ZwBcUIIinHF2o9GK9Be51B_464i9hkxotk1o5SrJXLu7T9EKxJ1jYt2qWZCFU64zfba78xp5qD9ykCIp3wqnJYtiyPQnuFzP6_7gfBhsjE98GgkCSZk" alt="multi cloud cost optimization"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="accesstoservices"&gt;2. Access to best-in-class services&lt;/h3&gt;

&lt;p&gt;To make the most of the public cloud services, engineers should be able to use the best services and features. In a multi cloud setting, a team can select a primary cloud provider and a secondary one for for extra value or carrying out a specific task (like machine learning training) and then bring the results over to the first cloud solution to build and deploy applications.¬†&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Say your team uses Amazon RDS but wants to use the Machine Learning engine from Azure - making these two things work together is possible if you go multi cloud.&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3 id="performanceoptimization"&gt;3. Performance optimization&lt;/h3&gt;

&lt;p&gt;Optimizing performance across various cloud services is another perk of a multi cloud setup.¬†&lt;/p&gt;

&lt;p&gt;Say you have an application that experiences a sudden increase of requests per second. Your team can check which cloud service eligible for multi cloud (in a so-called &lt;a href="https://cast.ai/blog/learn-how-to-find-the-multi-cloud-goldilocks-zone-with-cast-ai/"&gt;Goldilocks Zone&lt;/a&gt;) has the available resources at the lowest possible price - and then start deploying additional capacity immediately.&lt;/p&gt;

&lt;h3 id="security"&gt;4. Security&lt;/h3&gt;

&lt;p&gt;Multi cloud opens the doors to finding the best security solutions that might come in handy as your infrastructure and applications evolve. In this scenario, you‚Äôre free to switch providers anytime and find a good match for ensuring the security level you need or achieve compliance.&lt;/p&gt;

&lt;h3 id="disasterprevention"&gt;5. Disaster prevention&lt;/h3&gt;

&lt;p&gt;Even the most well-known cloud service vendors experience outages. Since downtime may have serious financial and reputational consequences for your business, you should do your best to avoid this risk. &lt;/p&gt;

&lt;p&gt;One way to prevent this from happening is by replicating large parts of your infrastructure and workloads in two places. But it's a costly solution.&lt;/p&gt;

&lt;p&gt;Here‚Äôs one that doesn‚Äôt increase your cloud bill: multi cloud. When one cloud service goes down, your business isn‚Äôt hurt in any way because your workloads and data are moved to other clouds.&lt;/p&gt;

&lt;h2 id="howmulticloudworks"&gt;How multi cloud works in CAST AI&lt;/h2&gt;

&lt;p&gt;CAST AI uses the Cloud Service Provider (CSP) accounts of its users to create the required cloud resources (VPCs, Resource Groups, and networking layer) and set up multi cloud clusters. It then selects the right regions with cross-cloud latency of no more than 10 ms in normal operation.¬†&lt;/p&gt;

&lt;p&gt;Here are a few &lt;a href="https://cast.ai/disaster-prevention/"&gt;multi cloud features&lt;/a&gt; we included to :&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Active-Active Multi Cloud&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Using the active-active approach, CAST AI replicated applications along with data across multiple cloud services. If one of them fails, others keep your workloads afloat and guarantee business continuity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Global Server Load Balancing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Traffic is distributed evenly across all the participating clouds, choosing the cloud endpoints that are up and healthy.¬†&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Automated Data Movement&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When working across cloud boundaries, it's essential that you can move data seamlessly. CAST AI provides automated block storage migration with advanced replication through our partners.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Multi-Region Mono-Cloud&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A Kubernetes cluster in CAST AI works on a single cloud service stretched across multiple regions. Thanks to this, you can connect nearby regions with low latency and still secure the active-active approach to disaster prevention.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cross-Node Live Migration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Moving pods from one node to another can cause disruptions, especially when the pods in question handle long-running transactions or network connections. Thanks to live migrations, pods can move and stay intact without breaking any connections.&lt;/p&gt;

&lt;h2 id="multicloudcasestudy"&gt;Case study: How multi cloud works in CAST AI&lt;/h2&gt;

&lt;h3&gt;TL;DR&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Let‚Äôs put the CAST AI multi cloud feature to the test. Imagine that you have a cluster that consists of one worker node. We then deploy an app and find our that there‚Äôs not enough space for all the pods on the cluster. This is when CAST AI automatically scales up our setup with additional machines.¬†&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sounds good so far? Then get this: CAST AI decided to add VMs from a different cloud provider because it judged them to be most cost-effective (including the use of spot instances for even more cost savings!). This is how multi cloud Kubernetes works in CAST AI.&lt;/em&gt;&lt;em&gt;¬†&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Step 1: Create a multi cloud¬† cluster¬†&lt;/h2&gt;

&lt;p&gt;Let‚Äôs start by creating a cluster that has multi cloud capabilities. In the CAST AI platform, we can easily create a cluster in the US-East region spread between AWS and Google - in US-East-1 (Virginia). CAST AI automatically connects the cluster via Wireguard VPN - but we have a choice of the cloud VPN-as-a-service as well.&lt;/p&gt;

&lt;p&gt;This is what the cluster creation dashboard looks like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XE6PlWnK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/_vAsphFCtFgr38PU97lV1cgckk3H7e9y6NUdi_sJN1eupPLjtPO_qp7Wsly3MIqycvIRSnNPFsojgjVo2QOCuTTWH_tMl1TKi1z4nSB6NV6I_0-HpuO6PHepNCUVv2GRqha8Yiv4" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XE6PlWnK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/_vAsphFCtFgr38PU97lV1cgckk3H7e9y6NUdi_sJN1eupPLjtPO_qp7Wsly3MIqycvIRSnNPFsojgjVo2QOCuTTWH_tMl1TKi1z4nSB6NV6I_0-HpuO6PHepNCUVv2GRqha8Yiv4" alt="create a multi cloud cluster"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our cluster is ready! It took me just 5 minutes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NMbWoqsw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/snMG_0zoK0VRZ8fZj7Lij1p9iqd8mLhTnm1Gnck4YWWOpJE1DLcePnxsa2k7gMws0o87CYqj9SrO3p_JVqoKJfIS8uELcjqsdRoZemjFF1RWZrLkYczTsfiNFgXt3nz4xzqeKUU1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NMbWoqsw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/snMG_0zoK0VRZ8fZj7Lij1p9iqd8mLhTnm1Gnck4YWWOpJE1DLcePnxsa2k7gMws0o87CYqj9SrO3p_JVqoKJfIS8uELcjqsdRoZemjFF1RWZrLkYczTsfiNFgXt3nz4xzqeKUU1" alt="multi cloud Kubernetes cluster"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs take a closer look at our cluster. It has one worker node and one master node. Both are hosted on AWS by default:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CuNqF21e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/-G5iEhNOsHyPR9DnOlOcdw29rgxJlnuPAv2JscCSTUl8m_HtV6vAY7D55FX6zjDP1D9Eo-1IhZynDOG8kzOY5S5-wKZ69VyW8FAg4Km6lcisX6extBNQPGC3JBqYcNOCkSsENAre" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CuNqF21e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/-G5iEhNOsHyPR9DnOlOcdw29rgxJlnuPAv2JscCSTUl8m_HtV6vAY7D55FX6zjDP1D9Eo-1IhZynDOG8kzOY5S5-wKZ69VyW8FAg4Km6lcisX6extBNQPGC3JBqYcNOCkSsENAre" alt="node selection in multi cloud"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next we download the Kubeconfig file and import it to Lens:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NMAAs4r5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/1ZXzBvjLm6qKmVVZJ3BfP5Y4XHZSAyGAid5m1j2jZAdroJ_cWeHS3HDrzfErvxztrB9I32_inuHCY67omG3yYcDDW8pkGyJ0t8sYmhG1PVQZLRZHM5GgZ5VhGJjnuBBFjls7AWb4" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NMAAs4r5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/1ZXzBvjLm6qKmVVZJ3BfP5Y4XHZSAyGAid5m1j2jZAdroJ_cWeHS3HDrzfErvxztrB9I32_inuHCY67omG3yYcDDW8pkGyJ0t8sYmhG1PVQZLRZHM5GgZ5VhGJjnuBBFjls7AWb4" alt="multi cloud code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†Here‚Äôs a visualization of our cluster composed of one master and one worker node.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V4ZekmVW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/y5ICMcChwkEiGE2Jt7iEY-1N9TF63US2QkK_Ft_ZxVvag8rWKvZ735oOPk0bxl0WyRuaMNixbD-JVv60T4wblUfOJVePh7jR8Ebz2ksvIQY9RzS33lUYHvNATLOnjc2fm6RB8Ipf" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V4ZekmVW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/y5ICMcChwkEiGE2Jt7iEY-1N9TF63US2QkK_Ft_ZxVvag8rWKvZ735oOPk0bxl0WyRuaMNixbD-JVv60T4wblUfOJVePh7jR8Ebz2ksvIQY9RzS33lUYHvNATLOnjc2fm6RB8Ipf" alt="Kubernetes cluster"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Step 2: Deploy an application on the cluster&lt;/h2&gt;

&lt;p&gt;Now, let‚Äôs deploy our Kubernetes application! This is what is happening now in my setup:¬†&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s8C9JHNZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/zfsDbfhUBANiMm4_Ew2OdJ7WPxeP0_WTgzt4L_YqB5irBJEiD5ZaCmrMGZBae7DNoH0UL4FaQeMI0WwL_rA-kl7UNy0jOGJ2AdCR83f8zULeNBQlOHvm1zhzgqlN2Tz7SemXntoL" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s8C9JHNZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/zfsDbfhUBANiMm4_Ew2OdJ7WPxeP0_WTgzt4L_YqB5irBJEiD5ZaCmrMGZBae7DNoH0UL4FaQeMI0WwL_rA-kl7UNy0jOGJ2AdCR83f8zULeNBQlOHvm1zhzgqlN2Tz7SemXntoL" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our worker node is now full with CPU of more than 89%. We also have a lot of pods that are unscheduled (marked in yellow) - they simply have no room to run on our existing node.¬†&lt;/p&gt;

&lt;h2&gt;Step 3: Let the autoscaling begin&lt;/h2&gt;

&lt;p&gt;CAST AI autoscales our setup by adding nodes to the application. As you can see, it added two additional VMs on Google Cloud: e2-standard-4 with 4 CPUs/16 GB and e2-standard-2 with 2 CPUs/8 GB.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---rNh4GFd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/4ILortWI2FVsBp-7EcO_ReB18iFm4ONy3HH6kuIrT8H6KYM2C73TrzzTwaKyBoRB48qy4LvCw4-9Me3NWohqBR1zlWVGzQy913aGQY0HAFTUqFpeSB6vPh19mPmYHgFLunV7uZ7T" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---rNh4GFd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/4ILortWI2FVsBp-7EcO_ReB18iFm4ONy3HH6kuIrT8H6KYM2C73TrzzTwaKyBoRB48qy4LvCw4-9Me3NWohqBR1zlWVGzQy913aGQY0HAFTUqFpeSB6vPh19mPmYHgFLunV7uZ7T" alt="autoscaling multi cloud"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs take a look at our setup now. Do you see how optimized our CPU is on the first two worker node machines (the VM on top is the master node).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0H7PV4dZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/MolJbek0xd1MP6Wnjc0MuxFnm5YcAvNaUYizPv_Pkbx6_ZkWdz4NC7jYcwsllcCUheNwOZanwAASwWCSFYxoD4lcxVJt3-R20i8GYi3dIiAgN0-KnI-ix4CuHEuFWfEtOKYTBHnh" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0H7PV4dZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/MolJbek0xd1MP6Wnjc0MuxFnm5YcAvNaUYizPv_Pkbx6_ZkWdz4NC7jYcwsllcCUheNwOZanwAASwWCSFYxoD4lcxVJt3-R20i8GYi3dIiAgN0-KnI-ix4CuHEuFWfEtOKYTBHnh" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Why did the solution select two instances on Google and not on AWS? Because they were the most cost-effective at this time.&lt;/p&gt;

&lt;p&gt;Let‚Äôs confirm this. Here are the prices of Google and Amazon.&lt;/p&gt;

&lt;h3&gt;Cost savings&lt;/h3&gt;

&lt;p&gt;On Google Cloud, the e2-standard-4 costs $0.134012 per hour:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vO3O3DoR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/rt5ZrEDzzuQ07HWj6u_73bNp86vRlDPah601-J7FrO1J2QFkNlFcmnNwljNpOEsNuyHDmv9YZL1kr1T7c2H3ju0eE1snPEBAn5vnKHZ2olU-cvgPFapnSDB5hLodGuyvvYA7lFXr" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vO3O3DoR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/rt5ZrEDzzuQ07HWj6u_73bNp86vRlDPah601-J7FrO1J2QFkNlFcmnNwljNpOEsNuyHDmv9YZL1kr1T7c2H3ju0eE1snPEBAn5vnKHZ2olU-cvgPFapnSDB5hLodGuyvvYA7lFXr" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And here‚Äôs an equivalent on AWS. We can see that every single 4 CPUs/16 GB are more expensive, even the t4g instance equipped with the Arm processor. Note: We didn‚Äôt consider this since we were looking at x86 CPUs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vOuJ-L4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/y4w_7_z_WIcoXgpq_4mtR31qFzTTE-BoRTnDEFatRMjxVF4TzEDUPJoAsEsvmCJYfkQ3kZCaB_bUa-SkhholP7ZytCh_qqXpaL5PTqE29QF_crBIduw6VZXugUAwWd50vm7HXANv" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vOuJ-L4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/y4w_7_z_WIcoXgpq_4mtR31qFzTTE-BoRTnDEFatRMjxVF4TzEDUPJoAsEsvmCJYfkQ3kZCaB_bUa-SkhholP7ZytCh_qqXpaL5PTqE29QF_crBIduw6VZXugUAwWd50vm7HXANv" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On Google Cloud, the e2-standard-2 is $0.067006 per hour:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--APsEY-39--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/r0ohn3ixi0VEVkbu2Vxc5n7h_7BXDLh0FGe1tWeVxDJLRCnXp3fV7uIh35BV6YWzm0If279AbfdaoxnZn-wHaPJ0FD0zi4edVnaFf7qJIM2PCsOLTyyaxXfqj_D-Mj5wW79zycT2" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--APsEY-39--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/r0ohn3ixi0VEVkbu2Vxc5n7h_7BXDLh0FGe1tWeVxDJLRCnXp3fV7uIh35BV6YWzm0If279AbfdaoxnZn-wHaPJ0FD0zi4edVnaFf7qJIM2PCsOLTyyaxXfqj_D-Mj5wW79zycT2" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The AWS equivalent costs $0.0832 per hour (excluding the Arm processor-based instances):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FQjrYa28--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/FDKxDM7CUK-s9RRn98JraqTVRXyib1TWw_EeSaEiEOsqNZigBgjjoXFAGKNkXuAbKUy-IvZ4z0U0gqaiW0Qf7HeIzOy3XNQuF3qQJ6m8f_eIfhxdsmKu1J5gQO17EBi2tlvkv0-E" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FQjrYa28--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/FDKxDM7CUK-s9RRn98JraqTVRXyib1TWw_EeSaEiEOsqNZigBgjjoXFAGKNkXuAbKUy-IvZ4z0U0gqaiW0Qf7HeIzOy3XNQuF3qQJ6m8f_eIfhxdsmKu1J5gQO17EBi2tlvkv0-E" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;span id="mce_1_start"&gt;As you can see, CAST AI made the right decision. It intelligently selected the most cost-effective additional instances choosing Google Cloud instead of sticking to AWS.&lt;/span&gt;¬†&lt;span id="mce_1_end"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;Step 4: Testing the pod autoscaler further&lt;/h2&gt;

&lt;p&gt;Let‚Äôs simulate a pod autoscaler by adding more replicas to one pod. We‚Äôre going from 5 replicas to 50:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3HXZ0XT---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/xf6AtvVRRQGKd2pXaXGp8ZH9owDjievWMVrEuiS5foCNGs0LJi8GjZQ4mixBLnTlE_qUBYC82NKoV4m8_OrL9KFTQfgHVWErXDIKOCzGQb0rsjOdYTFTGWlWxcg7JS_qFxDmiDLs" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3HXZ0XT---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/xf6AtvVRRQGKd2pXaXGp8ZH9owDjievWMVrEuiS5foCNGs0LJi8GjZQ4mixBLnTlE_qUBYC82NKoV4m8_OrL9KFTQfgHVWErXDIKOCzGQb0rsjOdYTFTGWlWxcg7JS_qFxDmiDLs" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As expected, some pods filled up the spot instance and the rest became unscheduled. This triggered an autoscaling event and after a minute, CAST AI added new nodes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hS9ibRLC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/iPSUJ4umUn5ZxnlQws9ZdXjugxq9YbhIC-0BoA9SyrP7xOVxTLNgJkMTNNXDINwOMInVb6C4NrWL-l5v9Xi4RWgHpMLlPUvEwmhLJqPJoajdrfyueeUKEN6cvMaFentSMcvz7V0e" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hS9ibRLC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/iPSUJ4umUn5ZxnlQws9ZdXjugxq9YbhIC-0BoA9SyrP7xOVxTLNgJkMTNNXDINwOMInVb6C4NrWL-l5v9Xi4RWgHpMLlPUvEwmhLJqPJoajdrfyueeUKEN6cvMaFentSMcvz7V0e" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A few minutes later, the solution reshuffled all the nodes automatically. Since many of the new pods were friendly to spot instances, it decided to add one spot instance and was able to consolidate both the unscheduled pods and pods from the former e2-standard-2 into an all new spot n1-standard-4. This brought the total cost even lower than before scaling up the pods.&lt;/p&gt;

&lt;p&gt;So this is the final look of the nodes for our cluster:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0d02vkFu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/IDq6RVGPYMM2dx-zFd7HN7GA7LH0Vc8iOS1b2YD301JDfHibAiivAZ-cCPwKYmZVTOiK5HFHpWD8X5a43RA6Wnhc_-C-xTHO_RYuLJvniAwSgUaoKNEt4KGwAf1IQMLxx5c4Z576" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0d02vkFu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/IDq6RVGPYMM2dx-zFd7HN7GA7LH0Vc8iOS1b2YD301JDfHibAiivAZ-cCPwKYmZVTOiK5HFHpWD8X5a43RA6Wnhc_-C-xTHO_RYuLJvniAwSgUaoKNEt4KGwAf1IQMLxx5c4Z576" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cfe7FOTm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/dg7pNkLS9oI5zOa5-4RQdMp0qYjWbiPuGbXgze9ykWWoCRaxUJ697iEVWeeI51UbV9JO6SfnxxOJl9UcixWBXqrNprBeX3LkFxJxmpR3MHj3tH9NH5_V8VmorbVHMNO8p_usexiE" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cfe7FOTm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/dg7pNkLS9oI5zOa5-4RQdMp0qYjWbiPuGbXgze9ykWWoCRaxUJ697iEVWeeI51UbV9JO6SfnxxOJl9UcixWBXqrNprBeX3LkFxJxmpR3MHj3tH9NH5_V8VmorbVHMNO8p_usexiE" alt="multi cloud cost optimization"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Cost savings&lt;/h3&gt;

&lt;p&gt;The e2-standard-2 (2 CPUs/8GB) on demand was replaced by a larger n1-standard-4 (4 CPUs/16GB) spot instance.&lt;/p&gt;

&lt;p&gt;Google Cloud‚Äôs n1-standard-4 pricing¬† 4 CPUs/16 GB is $0.04280 per hour:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O2YJgi1t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/d0L6ko2zQ-OQNx2et9dJZI9VrPCHw9IonCwpN4ni1QwItxV08OqLwPS-W-e6Cue-AVaXLtSSwM-Yhdqe6GcW28mM4qUkfepuhzCyO8r1nlGqQ2BMmuuhgI6FuKsgkoItvDi2OxqH" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O2YJgi1t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/d0L6ko2zQ-OQNx2et9dJZI9VrPCHw9IonCwpN4ni1QwItxV08OqLwPS-W-e6Cue-AVaXLtSSwM-Yhdqe6GcW28mM4qUkfepuhzCyO8r1nlGqQ2BMmuuhgI6FuKsgkoItvDi2OxqH" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The equivalent on AWS would be at $0.0687 per hour:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZP_XudU7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/hzGRlMW95MJUn6Hcb-s7ILaj-1_qL5X7_QdZXf4jSDriFx6cViDRxhMzRkKoXtCo7j-4iWNV-zJvovtS87-oi-Ikf8ExfPkvI_fb8OCrcYQth2o0EQZIc_nkAjbapLjRU_fNPjRl" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZP_XudU7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/hzGRlMW95MJUn6Hcb-s7ILaj-1_qL5X7_QdZXf4jSDriFx6cViDRxhMzRkKoXtCo7j-4iWNV-zJvovtS87-oi-Ikf8ExfPkvI_fb8OCrcYQth2o0EQZIc_nkAjbapLjRU_fNPjRl" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;CAST AI decided to eliminate the expensive On Demand e2 instance, and consolidate its pods (and the new unscheduled pods) on a highly discounted spot instance (called Preemptible Instance on Google Cloud).&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;Curious to see how multi cloud works in CAST AI? You can start by automatically creating a Kubernetes cluster in 10 minutes: &lt;a href="https://console.cast.ai/?screen_hint=SIGNUP"&gt;Start now&lt;/a&gt;.¬†&lt;/h3&gt;

&lt;h3&gt;If you‚Äôre a business user, &lt;a href="https://cast.ai/get-a-demo/"&gt;book a short demo&lt;/a&gt; to get a walkthrough of the solution and see the value of multi cloud.&lt;/h3&gt;

</description>
      <category>kubernetes</category>
      <category>multicloud</category>
      <category>cloudnative</category>
      <category>devops</category>
    </item>
    <item>
      <title>11 git command i use Everyday</title>
      <author>Hahauaio</author>
      <pubDate>Tue, 10 Aug 2021 11:04:00 +0000</pubDate>
      <link>https://dev.to/hahauaio/11-git-command-i-use-everyday-56gc</link>
      <guid>https://dev.to/hahauaio/11-git-command-i-use-everyday-56gc</guid>
      <description>&lt;p&gt;When I started my career, I was always afraid of losing my code changes. Sometimes, I would copy the code to text files just to be sure that I won't miss something.&lt;/p&gt;
&lt;p&gt;That's not a great practice. If you know how to use git properly, you won't have these doubts.&lt;/p&gt;
&lt;p&gt;Git has everything you need to make you safe. And much more.&lt;/p&gt;

&lt;p&gt;Let's dive in.&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Read More: &lt;/span&gt;&lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/11-git-commands-i-use-every-day/"&gt;11 Git Command i use Everyday&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>ü§∑‚Äç‚ôÄÔ∏è ü§∑‚Äç‚ôÇÔ∏è PostgreSQL error with using over jackc/pgx driver in Golang: cannot convert X to Y</title>
      <author>Vic Sh√≥stak</author>
      <pubDate>Tue, 10 Aug 2021 10:54:06 +0000</pubDate>
      <link>https://dev.to/koddr/postgresql-error-with-using-over-jackc-pgx-driver-in-golang-cannot-convert-x-to-y-1e6e</link>
      <guid>https://dev.to/koddr/postgresql-error-with-using-over-jackc-pgx-driver-in-golang-cannot-convert-x-to-y-1e6e</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hey, DEV people! üëã Today, I am starting a new series of short articles called "&lt;strong&gt;Simple Errors&lt;/strong&gt;", where I will cover various dead ends and pitfalls that I have encountered so far in my programming practice.&lt;/p&gt;

&lt;p&gt;I will always try to follow four rules when writing such articles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;An explanation of the cause of the error;&lt;/li&gt;
&lt;li&gt;A description of the input data in which the error occurred to me;&lt;/li&gt;
&lt;li&gt;My solution to the error;&lt;/li&gt;
&lt;li&gt;Conclusions and words of motivation;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Don't judge too harshly, write what you think of such articles, suggest your own topics for parsing in the comments... Here we go! üöÄ&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  üìù Table of contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#explanation-of-the-error"&gt;Explanation of the error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#input-data-when-an-error-occurs"&gt;Input data when an error occurs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#resolving-the-error"&gt;Resolving the error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusions"&gt;Conclusions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#explanation-of-the-error"&gt;
  &lt;/a&gt;
  Explanation of the error
&lt;/h2&gt;

&lt;p&gt;When developing a REST API (or any other product) in Golang with PostgreSQL database over the high-performance driver &lt;a href="https://github.com/jackc/pgx"&gt;&lt;strong&gt;jackc/pgx&lt;/strong&gt;&lt;/a&gt;, sometimes you may get a simple error that can be confusing to search for information. Especially, newcomers.&lt;/p&gt;

&lt;p&gt;This simple error sounds like this: &lt;code&gt;cannot convert [SOMETHING] to [SOMETHING]&lt;/code&gt;. In my case, it looked like &lt;code&gt;cannot convert 1 to Text&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This error message comes from the &lt;strong&gt;jackc/pgx&lt;/strong&gt; package and is caused by the combination of this package internally using prepared statements and PostgreSQL not being able to determine the type of the placeholders.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üëç Thanks for this explanation to author of this &lt;a href="https://github.com/jackc/pgx/issues/798#issuecomment-665060509"&gt;comment&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="#toc"&gt;‚Üë Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#input-data-when-an-error-occurs"&gt;
  &lt;/a&gt;
  Input data when an error occurs
&lt;/h2&gt;

&lt;p&gt;First, let's take a look at the migration file that creates the projects table in my application's database:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- ./platform/migration/000001_create_init_tables.up.sql&lt;/span&gt;

&lt;span class="c1"&gt;-- Create projects table&lt;/span&gt;
&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="nv"&gt;"projects"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nv"&gt;"id"&lt;/span&gt; &lt;span class="n"&gt;UUID&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="k"&gt;DEFAULT&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uuid_generate_v4&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
  &lt;span class="nv"&gt;"created_at"&lt;/span&gt; &lt;span class="nb"&gt;timestamp&lt;/span&gt; &lt;span class="k"&gt;DEFAULT&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
  &lt;span class="nv"&gt;"updated_at"&lt;/span&gt; &lt;span class="nb"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nv"&gt;"user_id"&lt;/span&gt; &lt;span class="n"&gt;UUID&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nv"&gt;"alias"&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;UNIQUE&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nv"&gt;"project_status"&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nv"&gt;"project_attrs"&lt;/span&gt; &lt;span class="n"&gt;JSONB&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We see that the fields have a very specific type, which will be validated by Postgres when creating/modifying data in this table.&lt;/p&gt;

&lt;p&gt;Now, let's look at the Go model, which will fit this migration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="c"&gt;// ./app/controllers/project_model.go&lt;/span&gt;

&lt;span class="c"&gt;// Project struct to describe project object.&lt;/span&gt;
&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;Project&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ID&lt;/span&gt;            &lt;span class="n"&gt;uuid&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UUID&lt;/span&gt;    &lt;span class="s"&gt;`db:"id" json:"id"`&lt;/span&gt;
    &lt;span class="n"&gt;CreatedAt&lt;/span&gt;     &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Time&lt;/span&gt;    &lt;span class="s"&gt;`db:"created_at" json:"created_at"`&lt;/span&gt;
    &lt;span class="n"&gt;UpdatedAt&lt;/span&gt;     &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Time&lt;/span&gt;    &lt;span class="s"&gt;`db:"updated_at" json:"updated_at"`&lt;/span&gt;
    &lt;span class="n"&gt;UserID&lt;/span&gt;        &lt;span class="n"&gt;uuid&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UUID&lt;/span&gt;    &lt;span class="s"&gt;`db:"user_id" json:"user_id"`&lt;/span&gt;
    &lt;span class="n"&gt;Alias&lt;/span&gt;         &lt;span class="kt"&gt;string&lt;/span&gt;       &lt;span class="s"&gt;`db:"alias" json:"alias"`&lt;/span&gt;
    &lt;span class="n"&gt;ProjectStatus&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;          &lt;span class="s"&gt;`db:"project_status" json:"project_status"`&lt;/span&gt;
    &lt;span class="n"&gt;ProjectAttrs&lt;/span&gt;  &lt;span class="n"&gt;ProjectAttrs&lt;/span&gt; &lt;span class="s"&gt;`db:"project_attrs" json:"project_attrs"`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;// ProjectAttrs struct to describe project attributes.&lt;/span&gt;
&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;ProjectAttrs&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Title&lt;/span&gt;       &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="s"&gt;`json:"title"`&lt;/span&gt;
    &lt;span class="n"&gt;Description&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="s"&gt;`json:"description"`&lt;/span&gt;
    &lt;span class="n"&gt;Picture&lt;/span&gt;     &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="s"&gt;`json:"picture"`&lt;/span&gt;
    &lt;span class="n"&gt;URL&lt;/span&gt;         &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="s"&gt;`json:"url"`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;// ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yes, you're quite right that the &lt;code&gt;JSOB&lt;/code&gt; field type in the Go model has become a regular structure and will be stored in JSON format in the &lt;code&gt;project_attrs&lt;/code&gt; database field.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üëå Other fields are quite normal for any Go project.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="#toc"&gt;‚Üë Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pIWUge-E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gf7chbq35mtc2zgxk7zn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pIWUge-E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gf7chbq35mtc2zgxk7zn.jpg" alt="solve the problem"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resolving-the-error"&gt;
  &lt;/a&gt;
  Resolving the error
&lt;/h2&gt;

&lt;p&gt;Let's move smoothly to the solution to this simple error.&lt;/p&gt;

&lt;p&gt;All you need to know for the solution is that in PostgreSQL, you can specify types for placeholders directly in the query. Just simply add the types you specified in the migration file to the query.&lt;/p&gt;

&lt;p&gt;The format for specifying the field type will be as follows: &lt;code&gt;$N::&amp;lt;TYPE&amp;gt;&lt;/code&gt; (dollar sign + placeholder number + two colons + field type from DB).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="c"&gt;// ./app/controllers/project_query.go&lt;/span&gt;

&lt;span class="c"&gt;// CreateProject method for creating project by given Project object.&lt;/span&gt;
&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ProjectQueries&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;CreateProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;// Define query string.&lt;/span&gt;
    &lt;span class="c"&gt;// We define type for each field to solve this simple error.&lt;/span&gt;
    &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;`
    INSERT INTO projects 
    VALUES ($1::uuid, $2::timestamp, $3::timestamp, $4::uuid, $5::varchar, $6::int, $7::jsonb)
    `&lt;/span&gt;

    &lt;span class="c"&gt;// Send query to database.&lt;/span&gt;
    &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreatedAt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UpdatedAt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UserID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Alias&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProjectStatus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProjectAttrs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;// Return only error.&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// This query returns nothing.&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;// ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;‚òùÔ∏è Once again, please note that we are specifying the PostgreSQL field type from the migration, not the Go structure from the model!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After building the project and requesting this endpoint, the error will no longer be displayed, and the request will succeed! üéâ&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;‚Üë Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h2&gt;

&lt;p&gt;Personally, I like this kind of entry more than completely disabling this check in the &lt;strong&gt;jackc/pgx&lt;/strong&gt; package config (more information &lt;a href="https://pkg.go.dev/github.com/jackc/pgx/v4#ConnConfig"&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Just because it gives you an immediate understanding of the field type at a glance of the SQL query, without having to dive into the details of the implementation in the controller.&lt;/p&gt;

&lt;p&gt;Choose the option that is convenient to you and use it, I just showed the way of the solution, which helped me personally. Have a successful work and let simple errors &lt;strong&gt;never stop you&lt;/strong&gt; on the way to realizing your projects! üòâ&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;‚Üë Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#photos-and-videos-by"&gt;
  &lt;/a&gt;
  Photos and videos by
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Arun Prakash &lt;a href="https://unsplash.com/photos/pE9mgLMwee0"&gt;https://unsplash.com/photos/pE9mgLMwee0&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Kendall Ruth &lt;a href="https://unsplash.com/photos/AijuW-HlE30"&gt;https://unsplash.com/photos/AijuW-HlE30&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ps"&gt;
  &lt;/a&gt;
  P.S.
&lt;/h2&gt;

&lt;p&gt;If you want more articles like this on this blog, then post a comment below and subscribe to me. Thanks! üòò&lt;/p&gt;

</description>
      <category>postgres</category>
      <category>go</category>
      <category>beginners</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Django Pagination-Simple than any Framework</title>
      <author>Joseph Mania</author>
      <pubDate>Tue, 10 Aug 2021 10:46:27 +0000</pubDate>
      <link>https://dev.to/maniamartial/django-pagination-simple-that-any-framework-2i6d</link>
      <guid>https://dev.to/maniamartial/django-pagination-simple-that-any-framework-2i6d</guid>
      <description>&lt;p&gt;Django Pagination&lt;/p&gt;

&lt;p&gt;I am in love with Django. Of course, it is not my best framework, but the simplicity of some tasks makes it awesome. Some factors like authentication, forms, pagination require just few code lines and you are ready to go.&lt;/p&gt;

&lt;p&gt;Whenever you want to learn a framework in the best way, read the documentation first. Pagination is the bottom numbers or words that contain links directing y9ou to the next page. Most commonly used when we want to increase the loading speed of a site. You don‚Äôt need to load all the content (especially images), they take a lot of bytes downloading, hence slowing the site down. And that is how the idea of pagination was invented.&lt;/p&gt;

&lt;p&gt;First, after creating your content on the site. In the view.py, just below the main class, which contains the content to be displayed, add paginate_by=x. The value of X is the number of items required on a single page. &lt;/p&gt;

&lt;p&gt;class PostListView(ListView):&lt;br&gt;
    model = Post&lt;br&gt;
    template_name = 'blog/home.html'&lt;br&gt;
    context_object_name = 'posts'&lt;br&gt;
    ordering = ['-date_posted']&lt;br&gt;
    paginate_by = 5&lt;/p&gt;

&lt;p&gt;Go inside your HTML file, let's say home.html then set up some buttons for first, last, next, and previous which are common. &lt;/p&gt;

&lt;p&gt;Let us discuss each line of the cover image-Kindly look at the image to get clear view.: &lt;/p&gt;

&lt;p&gt;Line 1&lt;br&gt;
Confirm if this page is paginated. If you indicated ‚Äòpaginated by‚Äô in views.py then it will set the Boolean to true.&lt;/p&gt;

&lt;p&gt;Line 2&lt;br&gt;
This line confirms if there is a previous page so that it can display the previous link, if not it hides.&lt;/p&gt;

&lt;p&gt;Line 3&lt;br&gt;
If there is a previous page then it will display the first-page link to direct you back to the first content.&lt;/p&gt;

&lt;p&gt;Line 4&lt;br&gt;
If there is a previous, then this link directs to the previous page.&lt;/p&gt;

&lt;p&gt;Line 5&lt;br&gt;
This tag closes the if page_obj.has_previous&lt;/p&gt;

&lt;p&gt;Line 6&lt;br&gt;
This line confirms if there is the next page. For the last page, this will be set to false and the following links won't be displayed (Next and Last).&lt;/p&gt;

&lt;p&gt;Line 7&lt;br&gt;
This link directs the user to the next page.&lt;/p&gt;

&lt;p&gt;Line 8&lt;br&gt;
This link will total the number of pages and open the last page.&lt;/p&gt;

&lt;p&gt;Line 9&lt;br&gt;
The line terminates the testing of has_next.&lt;/p&gt;

&lt;p&gt;Line 10&lt;br&gt;
This line terminates the Pagination test&lt;/p&gt;

&lt;p&gt;Happy Django coding.&lt;/p&gt;

</description>
      <category>django</category>
      <category>python</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>How To Become A Frontend Developer</title>
      <author>practern</author>
      <pubDate>Tue, 10 Aug 2021 10:24:51 +0000</pubDate>
      <link>https://dev.to/practern/how-to-become-a-frontend-developer-366</link>
      <guid>https://dev.to/practern/how-to-become-a-frontend-developer-366</guid>
      <description>&lt;p&gt;Want to become a front-end developer? Do you know what tools, technologies and programming languages are going to be best for it? Today, we'll assist you out with all the questions you would possibly have for building a career as a front-end developer. Please note that this roadmap is simply here to assist you identify what you ought to learn next and understand the necessity surely tools and frameworks. So let‚Äôs start with the basics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How To Become Front-End Web Developer :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A front-end developer may be a one that develops the interface of the web site and applications. They are liable for determining the structure and style of the online application, build features to enhance user experience, make a balance between design and functionality, optimize web app for different devices, optimize pages for speed and scalability, use different markup languages for coding sites , maintain brand consistency and write reusable codes. In simple terms, front-end development refers to the lines of code that determine the operation and structure of the interface . However, the front-end web development isn't just limited to using HTML, CSS or JS instead there are a bunch of other technologies that you simply got to learn if you wanna become a prominent developer this year.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RoadMap For Front-End Web Developer :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;How to become a front-end developer ? So here‚Äôs the roadmap i used to be pertaining to at the start of this blog. It includes personal recommendations, alternative options, and other good-to-know technologies and tools that you simply can learn anytime.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rDZLy8N_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0rarsh2072dmtnbickd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rDZLy8N_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0rarsh2072dmtnbickd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills A Front-End Developer Should Have :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In order to build a website, you first need to have a fundamental understanding of the web, how it is structured, and how your application fits within it. What is the web, what is a server, what is a client, how do various devices communicate with each other, how does the website you build on your computer in San Jose end up on someone‚Äôs phone in Shanghai. Undoubtedly, front-end development is a creative side of web development. By now you'd have checked the roadmap given above, so we'll discuss the talents and technologies you ought to familiarize yourself with to become a front-end web developer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. HTML, CSS, Sass, LeSS, JavaScript &amp;amp; TypeScript :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To become a front-end web developer the primary step is to know the fundamentals of the web , what a server is, how different applications will communicate with one another . After knowing networks, clients, servers and databases, you'll advance to the particular basis of web development, i.e., coding. The coding languages that are used to build a client-side source code contains HTML, CSS, Sass, LeSS, JavaScript and TypeScript.&lt;/p&gt;

&lt;p&gt;HTML: HyperText Markup Language is the foundation of every website. It is the standard markup language to display web pages in a web browser. HTML is easy to learn and use. Using HTML, you can create a basic website. HTML is the code that describes the page content that is later executed by the browser. You can use HTML to add text, images, videos, audio, forms, layout and so much more into the web page.&lt;/p&gt;

&lt;p&gt;CSS: Cascading Style Scripts or CSS is a styling language for HTML. While HTML informs the browser about content, CSS describes the way to format that content. Some of the basics of CSS you will come across are CSS positioning, grid, box model, flexbox, and responsive design.&lt;/p&gt;

&lt;p&gt;Sass: Syntactically Awesome Style Sheets is a preprocessor stylesheet language compiled to CSS. Sass is an extension to CSS and is compatible with all versions of it. Sass offers features that don‚Äôt exist in CSS, like mixins, functions, variables, nested rules, partials, modules and so on. It helps in organizing large stylesheets while making it easier to share design across projects.&lt;/p&gt;

&lt;p&gt;LeSS: Leaner Style Sheets is a pre-processor backward-compatible language compiled into CSS. It is influenced by Sass and facilitates reusable, manageable, and customizable style sheets. LeSS looks similar to CSS, so learning it will be easier. It has only added a few conveniences to CSS, i.e, variables, nesting, nested at-rules &amp;amp; bubbling, operations, escaping, calc() exception, functions, and much more.&lt;/p&gt;

&lt;p&gt;JavaScript: JavaScript or JS is a lightweight and rendered programming and scripting language, developed for network-centric applications. It‚Äôs used in both front-end and back-end development. It helps in creating appealing, fast and dynamic websites. While using JS, you can implement elements like interactive animations and maps. A few basics of Javascript you need to learn are its syntax, DOM manipulation, the concept of closure, scope, async-await, hoisting, shadow DOM, event bubbling &amp;amp; prototype and fetching APIs.&lt;/p&gt;

&lt;p&gt;TypeScript: TypeScript is an open-source programming language that is a superset of JavaScript. It is purely object-oriented and offers optional static typing, interfaces, and classes that are later compiled into JavaScript for execution. TypeScript allows IDEs to provide a richer environment for identifying common errors while writing the code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. CSS &amp;amp; JavaScript Frameworks :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Web Frameworks is a package of files and folders including standardized code, used as a template to start the development of a website or web app. It makes the mixing and development of front-end programming easier. With the variety of frameworks to choose from it can be difficult to opt for what‚Äôs ideal for your requirements. So here‚Äôs an inventory of CSS and JavaScript frameworks that you simply should consider adding to your skillset&lt;/p&gt;

&lt;p&gt;CSS Frameworks :&lt;/p&gt;

&lt;p&gt;Bootstrap&lt;/p&gt;

&lt;p&gt;Ulkit&lt;/p&gt;

&lt;p&gt;Semantic UI&lt;/p&gt;

&lt;p&gt;Foundation&lt;/p&gt;

&lt;p&gt;Bulma&lt;/p&gt;

&lt;p&gt;Tailwind CSS&lt;/p&gt;

&lt;p&gt;Spectre&lt;/p&gt;

&lt;p&gt;JavaScript Frameworks :&lt;/p&gt;

&lt;p&gt;Angular&lt;/p&gt;

&lt;p&gt;React&lt;/p&gt;

&lt;p&gt;Vue.js&lt;/p&gt;

&lt;p&gt;Ember.js&lt;/p&gt;

&lt;p&gt;Meteor&lt;/p&gt;

&lt;p&gt;Node.js&lt;/p&gt;

&lt;p&gt;jQuery&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Version Control System :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Version control is the practice of managing and tracking changes made in the source code of a web application. A version control system is a software tool that helps developers to communicate and manage changes done in code over time while providing information like who made what changes. A separate branch is made for every contributor who modifies the code but changes aren't merged into the source code until it's been analyzed. The version control system enhances the project speed with collaboration, leverages productivity, reduces possibilities of conflicts &amp;amp; errors and helps to recover code in case of an accidental situation.&lt;/p&gt;

&lt;p&gt;Some of the top-rated version control systems that you can learn are:&lt;/p&gt;

&lt;p&gt;GitHub&lt;/p&gt;

&lt;p&gt;GitLab&lt;/p&gt;

&lt;p&gt;AWS CodeCommit&lt;/p&gt;

&lt;p&gt;Beanstalk&lt;/p&gt;

&lt;p&gt;Apache Subversion&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Micro-Frontend :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Developing a good front-end is hard and scaling it for different teams to work together on a complex product is harder. That‚Äôs why the idea of Micro-frontend architecture came into view. It is a design approach where front-end apps are divided into micro, independent and individual apps that work loosely together. The concept of micro-frontend is practically inspired by microservices. The source code for each micro-frontend is smaller than the monolithic front-end. This smaller codebase made it easier and simpler for developers to work simultaneously. Just like microservices, it also allows independent deployment which as a result reduces the chances of errors and risks to breakdown the entire system. And having micro-frontend as a skill will also be beneficial for your career as a front-end developer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Testing &amp;amp; Code Analysis Tools :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Testing front-end development is a technique where functionality, usability and GUI of a web application or software are tested. The core aim of front-end testing is to analyze the overall operations &amp;amp; functions to ensure that the user interface of the application is working as expected. Types of front-end testing include the following tests:&lt;/p&gt;

&lt;p&gt;Unit Testing: Individual sets of codes are tested for their functionality.&lt;/p&gt;

&lt;p&gt;Visual Regression Testing : Image comparison is done to recognise the difference between old and new code.&lt;/p&gt;

&lt;p&gt;Acceptance Testing : The compliance of the system is evaluated with business requirements for the acceptability for project delivery.&lt;/p&gt;

&lt;p&gt;Performance Testing : The responsiveness, stability and speed are tested to provide excellence in the performance of the application.&lt;/p&gt;

&lt;p&gt;Integration Testing : Individual modules of the application are logically coupled and tested in a group to expose errors in the interaction between these modules.&lt;/p&gt;

&lt;p&gt;Accessibility Testing : It is done to ensure that the application can be accessed by everyone. It helps to make the app accessible to those with certain disabilities.&lt;/p&gt;

&lt;p&gt;End-to-end Testing : It ensures that the app is behaving as expected.&lt;/p&gt;

&lt;p&gt;Cross-Browser Compatibility Testing : It is done to enable users to have a similar experience of the web app on different browsers.&lt;/p&gt;

&lt;p&gt;Tools for Code Analysis &amp;amp; Testing :&lt;/p&gt;

&lt;p&gt;LambdaTest&lt;/p&gt;

&lt;p&gt;Chrome DevTools&lt;/p&gt;

&lt;p&gt;Selenium&lt;/p&gt;

&lt;p&gt;Needle&lt;/p&gt;

&lt;p&gt;Page Speed&lt;/p&gt;

&lt;p&gt;YSlow&lt;/p&gt;

&lt;p&gt;Jest&lt;/p&gt;

&lt;p&gt;Mocha&lt;/p&gt;

&lt;p&gt;Jasmine&lt;/p&gt;

&lt;p&gt;Cypress&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Web Security &amp;amp; Communication Protocols :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As a developer, you must know the importance of web security and communication protocols because connecting to the internet can cause major security issues. With the wide range of security protocols, you can easily determine the level of security needed for their applications and deploy it virtually. The major protocols for web security and communication to know about are:&lt;/p&gt;

&lt;p&gt;IPsec - Internet Protocol Security&lt;/p&gt;

&lt;p&gt;IKE - Internet Key Exchange&lt;/p&gt;

&lt;p&gt;SSH - Secure Shell&lt;/p&gt;

&lt;p&gt;SSL - Secure Socket Layer&lt;/p&gt;

&lt;p&gt;HTTPS - Secure Embedded Web Server&lt;/p&gt;

&lt;p&gt;RADIUS - Remote Authentication Dial-In User Service&lt;/p&gt;

&lt;p&gt;TLS - Transport Layer Security&lt;/p&gt;

&lt;p&gt;SET - Secure Electronic Transaction&lt;/p&gt;

&lt;p&gt;PEM - Privacy Enhanced Mail&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Static Site Generator (SSG) :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Static site generator processes pages through a set of templates and raw data. SSG handles the build process before the pages are requested by users, i.e., the pages are ready to be served when requested. Static site generator is a compromise between CMS and hand-coded static site. Similar to CMS, it allows developers to use templates to generate web pages automatically, however, it automatically generates web pages ahead of time rather than waiting for the user request. SSG offers more flexibility, fewer server-side dependencies, better reliability, version control &amp;amp; testing and enhanced security.&lt;/p&gt;

&lt;p&gt;Here is the list of some commonly used SSGs&lt;/p&gt;

&lt;p&gt;Next.js&lt;/p&gt;

&lt;p&gt;Gatsby&lt;/p&gt;

&lt;p&gt;Hugo&lt;/p&gt;

&lt;p&gt;GitBook&lt;/p&gt;

&lt;p&gt;Jekyll&lt;/p&gt;

&lt;p&gt;Eleventy&lt;/p&gt;

&lt;p&gt;Nuxt&lt;/p&gt;

&lt;p&gt;Docsify&lt;/p&gt;

&lt;p&gt;VuePress&lt;/p&gt;

&lt;p&gt;Gridsome&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Progressive Web Apps :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Progressive Web Apps or PWAs are web apps that are built and improved using modern web browser APIs. PWAs take advantage of both native and web apps functionalities. It offers enhanced reliability, capabilities and integration to reach anyone, anywhere, on any device with just one codebase. So learning more about will help you in designing a more functional web app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Responsive Web Design :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Responsive web design is a perspective based on which the development and design of the web app or website should be done in such a way that it responds accurately to the user‚Äôs environment based on platform, screen size and orientation. Simply put, an application or web app should be designed in such a way that the web pages alter their appearance and layout to match the resolution and width of the device screen. By learning the way to design a responsive web app, you can make it user-friendly and improve the ranking in search engines simultaneously.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. Package Manager :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A package manager is a tool that automates the process of installation, configuration, management and elimination of the product dependencies and software packages. You should know the basics of the package manager and one of its tools.&lt;/p&gt;

&lt;p&gt;Some popular package manager tools out there consists of:&lt;/p&gt;

&lt;p&gt;NPM&lt;/p&gt;

&lt;p&gt;Yarn&lt;/p&gt;

&lt;p&gt;Bower&lt;/p&gt;

&lt;p&gt;JSPM&lt;/p&gt;

&lt;p&gt;Keep Learning!&lt;/p&gt;

&lt;p&gt;The web keeps changing and with advancements in technologies comes new methods and tools. So, it is essential to keep yourself up-to-date with the latest trends and technologies, and never stop learning.&lt;/p&gt;

&lt;p&gt;It doesn‚Äôt mean that what you have learned so far will be of no use. Your basic knowledge will always be an advantage for your career. But you must keep updating your skills for better growth.&lt;/p&gt;

&lt;p&gt;To become pro in your skills apply for global internships through &lt;a href="https://www.practern.com/"&gt;Practern&lt;/a&gt;&lt;/p&gt;

</description>
      <category>frontend</category>
      <category>internships</category>
      <category>developer</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
