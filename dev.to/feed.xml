<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to use Open Graph</title>
      <author>Kritebh Lagan Bibhakar</author>
      <pubDate>Sun, 13 Jun 2021 05:51:56 +0000</pubDate>
      <link>https://dev.to/kritebh/how-to-use-open-graph-2a1h</link>
      <guid>https://dev.to/kritebh/how-to-use-open-graph-2a1h</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tKV4sRSn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0a170echpghkj0p67izy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tKV4sRSn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0a170echpghkj0p67izy.png" alt="Open Graph Tag Comparison"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now tell me which one more likely to be clicked by a normal user.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/2Wf4evHz9Yd7Y8mPNR/giphy-downsized.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/2Wf4evHz9Yd7Y8mPNR/giphy-downsized.gif" alt="One"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First Link, but WHY ??&lt;/p&gt;

&lt;p&gt;Because at first glance I got what's in that link and it is more appealing than the second one.&lt;/p&gt;

&lt;p&gt;Open graph was originally developed by Facebook and now it is used by Twitter, Pinterest and LinkedIn.&lt;/p&gt;

&lt;p&gt;The benefit of Open Graph is simple, it converts any webpage into a social rich object which becomes more attractive on Social Media upon sharing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#open-graph-meta-tag"&gt;
  &lt;/a&gt;
  Open Graph Meta Tag
&lt;/h3&gt;

&lt;p&gt;Implementing Open Graph is very simple, You just need to write some meta tag in the head section of an HTML document.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:title"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Open Graph Uses"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:type"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"article"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:url"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"http://example.com"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:image"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"https://ogp.me/logo.png"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:image:type"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"image/png"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:image:width"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"300"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:image:height"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"300"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:image:alt"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"The Open Graph logo"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:description"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"The Open Graph protocol enables any web page to become a rich object in a social graph."&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Open Graph&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see the meta property with "og" is the Open Graph Tag.&lt;/p&gt;

&lt;p&gt;There are different types of Open Graph Meta Tag which you can use as per your requirement.&lt;/p&gt;

&lt;p&gt;Some of the most commonly used meta tags are - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;og:title&lt;/li&gt;
&lt;li&gt;og:image&lt;/li&gt;
&lt;li&gt;og:url&lt;/li&gt;
&lt;li&gt;og:type&lt;/li&gt;
&lt;li&gt;og:description&lt;/li&gt;
&lt;li&gt;og:locale&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whole List of Tags - &lt;a href="https://ogp.me/"&gt;Open Graph Tags&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#validate-the-tags"&gt;
  &lt;/a&gt;
  Validate the Tags
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.facebook.com/tools/debug/"&gt;Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cards-dev.twitter.com/validator"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.pinterest.com/tools/url-debugger/"&gt;Pinterest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, if you have any suggestions or feedback let me know in the comment.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>programming</category>
    </item>
    <item>
      <title>DEV COMMUNITY BADGE</title>
      <author>Ammar Mukadam</author>
      <pubDate>Sun, 13 Jun 2021 05:35:38 +0000</pubDate>
      <link>https://dev.to/ammarmukadam/dev-community-badge-29n4</link>
      <guid>https://dev.to/ammarmukadam/dev-community-badge-29n4</guid>
      <description>&lt;p&gt;&lt;a href="https://dev.to/ammarmukadam"&gt;&lt;br&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bQ9x1qu_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2fltix0v2e0sb.cloudfront.net/dev-badge.svg" alt="Ammar Mukadam's DEV Community Profile"&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

</description>
      <category>android</category>
      <category>security</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>Back to Basic: Should we use Rem, Em or Pixel?</title>
      <author>Theodorus Clarence</author>
      <pubDate>Sun, 13 Jun 2021 05:05:59 +0000</pubDate>
      <link>https://dev.to/theodorusclarence/back-to-basic-should-we-use-rem-em-or-pixel-1hd0</link>
      <guid>https://dev.to/theodorusclarence/back-to-basic-should-we-use-rem-em-or-pixel-1hd0</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Using Rem and Em units is better than using px.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When we use px, it means that we hardcode the font-size to all of the users. The user can't change the value whatsoever. This actually troubles the user that wants to have a bigger font-size from the default &lt;code&gt;16px&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-rem-works"&gt;
  &lt;/a&gt;
  How do rem works?
&lt;/h2&gt;

&lt;p&gt;Rem and Em is a relative unit that many developers use to preserve accessibility.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Rem (root em) stands for "root element's font-size"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Usually, the default root font-size is &lt;code&gt;16px&lt;/code&gt;. So, if we see a font-size that is 1rem, we are looking at 16px&lt;/p&gt;

&lt;p&gt;Because Rem means root element's font-size, we can also override the default value by using CSS like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because we changed the root font-size, now &lt;code&gt;1rem = 20px&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-if-we-want-to-use-value-other-than-16px"&gt;
  &lt;/a&gt;
  What if we want to use value other than 16px?
&lt;/h3&gt;

&lt;p&gt;We can get the rem value of a pixels by dividing it with 16px. For example, if we want to use a font-size of 20px, we will write &lt;code&gt;font-size: 1.25rem&lt;/code&gt;. Which is 20/16.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-its-so-annoying-"&gt;
  &lt;/a&gt;
  But it's so annoying ?!
&lt;/h3&gt;

&lt;p&gt;Yep, using rem will make the development process longer because we need to calculate the rem value. But this gives some freedom to the user, and we are not messing with the accessibility.&lt;/p&gt;

&lt;p&gt;They can change the font-size like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OUVToTBb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/siei13f4x98q0nxpzgun.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OUVToTBb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/siei13f4x98q0nxpzgun.gif" alt="resize-rem"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-em-works"&gt;
  &lt;/a&gt;
  How do em works?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Em stands for "parent element's font-size"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Because css is &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance"&gt;cascading and inheritable&lt;/a&gt;, em will inherit font-size value from the parent element. For example, we have a parent div, and p tag inside:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;hi&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;//&lt;/span&gt; &lt;span class="err"&gt;8px&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;//&lt;/span&gt; &lt;span class="err"&gt;??px&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because &lt;code&gt;p&lt;/code&gt; inherit the parent element's font-size, so &lt;code&gt;1em = 8px&lt;/code&gt;. This means, that the &lt;code&gt;p&lt;/code&gt; will have &lt;code&gt;font-size: 8px&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That kind of confusing right? That's why using &lt;strong&gt;em for font-size is not recommended&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Always use REM for font-size to be consistent.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#where-can-we-use-em-unit"&gt;
  &lt;/a&gt;
  Where can we use em unit?
&lt;/h3&gt;

&lt;p&gt;Because of the inheritable, em unit will be helpful for &lt;strong&gt;padding&lt;/strong&gt; and *&lt;em&gt;margin&lt;/em&gt;. By using em, we can make the padding and margin scale proportionately&lt;/p&gt;

&lt;p&gt;For example, we are making a button. The button can have different font-sizes in mobile and desktop view. We can see the difference between &lt;strong&gt;rem&lt;/strong&gt; and &lt;strong&gt;em&lt;/strong&gt; on this codepen:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/theodorus/embed/OJbwPow?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;As we can see, by using &lt;strong&gt;em&lt;/strong&gt; the padding stays proportionate to the scaling of font-size. Whereas &lt;strong&gt;rem&lt;/strong&gt; has the same padding value on any font-sizes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#do-we-really-cant-use-px-anymore"&gt;
  &lt;/a&gt;
  Do we really can't use px anymore?
&lt;/h2&gt;

&lt;p&gt;For me, usage of rem and em will be very good on the elements that are crucial like font-size, padding, and margin. But, when giving out border-width, I do still use px value because the value we give is so small that it is almost not noticeable if we change the root font-size.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;There you go. Try to always use rem for font-size. And utilize the benefit of em for the proportionate padding if you need to.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Originally posted on &lt;a href="https://theodorusclarence.com/?ref=devto"&gt;my personal site&lt;/a&gt;, find more &lt;a href="https://theodorusclarence.com/blog?ref=devto"&gt;blog posts&lt;/a&gt; and &lt;a href="https://theodorusclarence.com/library?ref=devto"&gt;code snippets library&lt;/a&gt; I put up for easy access on my site 🚀&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>beginners</category>
      <category>css</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Software development through Kanban</title>
      <author>Menard Maranan</author>
      <pubDate>Sun, 13 Jun 2021 04:51:22 +0000</pubDate>
      <link>https://dev.to/menard_codes/software-development-through-kanban-28d0</link>
      <guid>https://dev.to/menard_codes/software-development-through-kanban-28d0</guid>
      <description>&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#terms-used"&gt;
  &lt;/a&gt;
  Terms used:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Kanban&lt;/strong&gt; - a workflow management method for defining, managing, and improving services that deliver knowledge work. It aims to help you visualize your work, maximize efficiency, and improve continuously. &lt;sup id="fnref1"&gt;&lt;a href="#fn1"&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Backlog&lt;/strong&gt; - an accumulation of uncompleted work that needs to be dealt with&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Agile&lt;/strong&gt; - In software development, agile practices involve discovering requirements and developing solutions through the collaborative effort of self-organizing and cross-functional teams and their customer/end user. &lt;sup id="fnref2"&gt;&lt;a href="#fn2"&gt;2&lt;/a&gt;&lt;/sup&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Scrum&lt;/strong&gt; - An agile mindset for developing, delivering, and sustaining complex products,mostly defined by sprints and increments. &lt;sup id="fnref3"&gt;&lt;a href="#fn3"&gt;3&lt;/a&gt;&lt;/sup&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#kanban-in-software-development"&gt;
  &lt;/a&gt;
  Kanban (in software development)
&lt;/h2&gt;

&lt;p&gt;Kanban is a flavor of Agile methodology as an approach to build software.&lt;/p&gt;

&lt;p&gt;This approach have many similarities and overlaps to another popular agile approach to software development called &lt;a href="https://dev.to/menard_codes/a-quick-guide-about-scrum-5485"&gt;Scrum&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In a nutshell, you break down a project into multiple software requirements which then becomes the product backlog of the Kanban board. The team then plans how to move the backlog into tasks under &lt;strong&gt;To-Do&lt;/strong&gt; column. That's when the team will work on the task until it's defined as &lt;strong&gt;Done&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#planning"&gt;
  &lt;/a&gt;
  Planning
&lt;/h2&gt;

&lt;p&gt;Kanban is less strict compared to Scrum, because in Scrum, meetings are fixed on the schedule (like the daily scrum, sprint planning, sprint retrospective, etc.). Meanwhile, in kanban, meetings can be held whenever there's capacity, or held meetings in demand, and there can also be meetings on planning for example.&lt;/p&gt;

&lt;p&gt;During the meetings, the team analyzes the backlog and plan the &lt;strong&gt;"To-Do"&lt;/strong&gt; and moves tasks here.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cycle-time-and-lead-time"&gt;
  &lt;/a&gt;
  Cycle time and Lead time
&lt;/h2&gt;

&lt;p&gt;In Kanban, we have &lt;strong&gt;Cycle Time&lt;/strong&gt; which measures how long does it take for a task to move from &lt;strong&gt;To-Do status&lt;/strong&gt; to &lt;strong&gt;Done&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This is similar to &lt;strong&gt;Velocity&lt;/strong&gt; in Scrum.&lt;/p&gt;

&lt;p&gt;This metric tells how efficient a team is on their work. A &lt;em&gt;lower cycle time&lt;/em&gt; tells that the team can finish tasks in a shorter period of time, reflecting their productivity is high.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kanban-board"&gt;
  &lt;/a&gt;
  Kanban Board
&lt;/h2&gt;

&lt;p&gt;The kanban board is perhaps the core of this idea, so to speak. This board is a nice visual representation of the progress of a project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3ZauYou7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zotn71rgy3r1e6fxhji3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3ZauYou7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zotn71rgy3r1e6fxhji3.jpg" alt="Kanban Board"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Normally, the kanban board consists of the &lt;strong&gt;Backlog&lt;/strong&gt;, the &lt;strong&gt;To-Do&lt;/strong&gt;, &lt;strong&gt;In-progress&lt;/strong&gt;, and &lt;strong&gt;Done&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Some teams prefer to add or modify the columns depending on their needs, even mixing it with scrum, since it's very similar to the scrum board.&lt;/p&gt;

&lt;p&gt;You might find there columns for blockers, to-verify or to-test, rejected, etc.&lt;/p&gt;

&lt;p&gt;Often, the top priority tasks like those involved directly in the business are placed on top of the board.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#limits"&gt;
  &lt;/a&gt;
  Limits
&lt;/h3&gt;

&lt;p&gt;On a Kanban board, teams set limits to columns on the board, such as the &lt;em&gt;Todo&lt;/em&gt; column or &lt;em&gt;To-test&lt;/em&gt; column.&lt;/p&gt;

&lt;p&gt;This is a little different to Scrum where the limit is set for the entire scrum board rather than per column.&lt;/p&gt;

&lt;p&gt;Such limits are placed to meet the team's cycle time, and to also figure out which process gives them a bottleneck where the team needs to discuss how to clean it up.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;Kanban is a great way to manage your projects, and can also be applicable to other areas outside software development.&lt;/p&gt;

&lt;p&gt;Developers can boost their productivity by dividing the problems into isolated and independent chunks of tasks, while also understanding the progress of their work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-link"&gt;
  &lt;/a&gt;
  My Link:
&lt;/h2&gt;

&lt;p&gt;Follow me on twitter!&lt;br&gt;
&lt;a href="https://twitter.com/menard_codes"&gt;@menard_codes&lt;/a&gt;&lt;/p&gt;




&lt;ol&gt;

&lt;li id="fn1"&gt;
&lt;p&gt;&lt;a href="https://kanbanize.com/kanban-resources/getting-started/what-is-kanban"&gt;Kanbanize&lt;/a&gt; &lt;a href="#fnref1"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn2"&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Agile_software_development"&gt;Agile software development - Wikipedia&lt;/a&gt; &lt;a href="#fnref2"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn3"&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Scrum_(software_development)"&gt;Scrum - Wikipedia&lt;/a&gt; &lt;a href="#fnref3"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;

</description>
      <category>agile</category>
      <category>webdev</category>
      <category>kanban</category>
      <category>softwaredevelopment</category>
    </item>
    <item>
      <title>Steps to Create a Mind Blowing (🤯) Portfolio</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 13 Jun 2021 03:46:34 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/steps-to-create-a-mind-blowing-portfolio-4562</link>
      <guid>https://dev.to/ruppysuppy/steps-to-create-a-mind-blowing-portfolio-4562</guid>
      <description>&lt;p&gt;If you have a desire to build your &lt;em&gt;personal brand&lt;/em&gt;, then a website that can promote your work is a must. &lt;strong&gt;Personal Portfolio&lt;/strong&gt; is the go-to place to list out your &lt;em&gt;experience&lt;/em&gt;, &lt;em&gt;achievements&lt;/em&gt;, and any other relevant information. This article will show you the steps to create an amazing portfolio that leaves the viewers spellbound. I would also be sharing the things I discovered along the way of building my own &lt;a href="https://tapajyoti-bose.vercel.app/"&gt;portfolio&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M5wopylc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4cr6ocq4videj46wyssr.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M5wopylc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4cr6ocq4videj46wyssr.PNG" alt="Portfolio"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-design"&gt;
  &lt;/a&gt;
  1. Design
&lt;/h1&gt;

&lt;p&gt;It is definitely a good idea to keep a design (at least a rough one) handy. It is far easier to make changes to a design than revamping an entire website. &lt;a href="https://www.adobe.com/in/products/xd.html"&gt;&lt;strong&gt;Adobe XD&lt;/strong&gt;&lt;/a&gt; or &lt;a href="https://www.figma.com/"&gt;&lt;strong&gt;Figma&lt;/strong&gt;&lt;/a&gt; are the best tools for this purpose. &lt;strong&gt;Figma&lt;/strong&gt; has a free tier for its services and &lt;strong&gt;XD&lt;/strong&gt; is free for students.&lt;/p&gt;

&lt;p&gt;Feel free to look at other people's portfolios and templates for inspiration, but don't copy them. Modify &amp;amp; improvise them to suit your own style.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C1NqF3z5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uduxcg14144x0ygzermc.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C1NqF3z5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uduxcg14144x0ygzermc.PNG" alt="Rough Design"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-things-to-list-out-on-the-website"&gt;
  &lt;/a&gt;
  2. Things to List out on the Website
&lt;/h1&gt;

&lt;p&gt;Your portfolio is the perfect place for some &lt;strong&gt;shameless self-promotion&lt;/strong&gt;, so don't shy away from mentioning any project, &lt;em&gt;experience&lt;/em&gt;, &lt;em&gt;achievements&lt;/em&gt;, &lt;em&gt;blogs&lt;/em&gt; or any other relevant details about you.&lt;/p&gt;

&lt;p&gt;If you are just starting out, it is a good idea to build out a couple of projects before diving into building a portfolio, or else it will definitely look empty just like my &lt;a href="https://tapajyoti-portfolio.herokuapp.com/"&gt;first portfolio&lt;/a&gt; - which is just a template filled up with my details (looking at this website now makes me cringe).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-what-technology-should-i-use"&gt;
  &lt;/a&gt;
  3. What Technology should I use?
&lt;/h1&gt;

&lt;p&gt;Everyone has their own choice of technology. So use any technology you are comfortable using. The target is &lt;em&gt;smooth&lt;/em&gt; and &lt;em&gt;engaging&lt;/em&gt; &lt;strong&gt;end-user experience&lt;/strong&gt;, people using the website will not be bothered about the technology you build your application with.&lt;/p&gt;

&lt;p&gt;But I definitely would give you a suggestion: if you want your website to be indexed by search engines and plan on building a &lt;strong&gt;Single Page App&lt;/strong&gt; (&lt;code&gt;SPA&lt;/code&gt;), it is a good idea to create a static site using frameworks like &lt;strong&gt;Next.js&lt;/strong&gt;. Usually, &lt;code&gt;SPA&lt;/code&gt; performs poorly at &lt;strong&gt;Search Engine Optimizations&lt;/strong&gt; leading to poor ranking on &lt;strong&gt;Google&lt;/strong&gt; &amp;amp; other search engines.&lt;/p&gt;

&lt;p&gt;The last thing you want to do is having to revamp the complete website just because your site is not ranked well by &lt;strong&gt;Google&lt;/strong&gt; like I did to bring my website to &lt;em&gt;page 1&lt;/em&gt; from &lt;em&gt;page 4&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NXwNsc-j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ust78g3fc9ibimbjxeru.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NXwNsc-j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ust78g3fc9ibimbjxeru.png" alt="Search Results"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-developing-the-website"&gt;
  &lt;/a&gt;
  4. Developing the Website
&lt;/h1&gt;

&lt;p&gt;Now it is finally the time to develop the website. This is the time to bring out your inner artistic persona and actually improvise and implement the design you made in &lt;em&gt;step 1&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Bonus Tip: Add micro-interactions particularly &lt;em&gt;hover effects&lt;/em&gt; to make your website more engaging.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-hosting-the-app"&gt;
  &lt;/a&gt;
  5. Hosting the app
&lt;/h1&gt;

&lt;p&gt;There are hundreds of hosting service providers available, my personal recommendations are &lt;a href="https://firebase.google.com/"&gt;&lt;strong&gt;Firebase&lt;/strong&gt;&lt;/a&gt; or &lt;a href="https://vercel.com/"&gt;&lt;strong&gt;Vercel&lt;/strong&gt;&lt;/a&gt; for simplified hosting as well as getting a professional domain free of cost (&lt;code&gt;&amp;lt;app-name&amp;gt;.web.app&lt;/code&gt; for &lt;strong&gt;Firebase&lt;/strong&gt; and &lt;code&gt;&amp;lt;app-name&amp;gt;.vercel.app&lt;/code&gt; for &lt;strong&gt;Vercel&lt;/strong&gt;).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6-search-optimizations"&gt;
  &lt;/a&gt;
  6. Search Optimizations
&lt;/h1&gt;

&lt;p&gt;Now that the website is ready, it's time for it to be listed by Search Engines. Submit your website details at &lt;a href="https://search.google.com/search-console"&gt;&lt;strong&gt;Google Search Console&lt;/strong&gt;&lt;/a&gt;. You can generate a &lt;code&gt;sitemap&lt;/code&gt; for your website from sites like &lt;a href="https://www.xml-sitemaps.com/"&gt;&lt;strong&gt;XML Sitemaps&lt;/strong&gt;&lt;/a&gt; which will be required by &lt;strong&gt;Google&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can skip this step if you don't want your website to be visible on &lt;strong&gt;Google Search&lt;/strong&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7-network-with-other-developers"&gt;
  &lt;/a&gt;
  7. Network with other developers
&lt;/h1&gt;

&lt;p&gt;You might be wondering &lt;em&gt;"How will networking with other developers help me create a portfolio?"&lt;/em&gt; Let me enlighten you. &lt;/p&gt;

&lt;p&gt;I met this amazing guy, &lt;a href="https://dev.to/itsnitinr"&gt;Nitin Ranganath&lt;/a&gt; from whom I took the idea for the circle in and out animation for the dark mode (only for desktop). He also helped me a lot in incorporating this feature.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---0V7vZHM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2deev0i5ptgyuscj85km.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---0V7vZHM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2deev0i5ptgyuscj85km.gif" alt="Dark Mode Toggle"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Always ask for help if you need it and don't hold back from helping others in their journey as well :)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Hopefully, this article gave you an idea of the steps involved in creating a portfolio website and streamline the things I had to learn through trial and error, and avoid some silly pitfalls.&lt;/p&gt;

&lt;p&gt;Don't be discouraged if the first version of your portfolio doesn't turn out as you wanted it to. Keep making tiny tweaks and improvements and over time, you will develop a jaw-dropping portfolio.&lt;/p&gt;

&lt;p&gt;Now it is your turn to stun the world with your outstanding portfolio website. Best of luck in your endeavor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w_zzxv9a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pn5ga5oud0109544mu1x.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w_zzxv9a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pn5ga5oud0109544mu1x.PNG" alt="Best of Luck"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Did I miss something? Share your thoughts in the comments below 👇&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Want to work together? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a student &amp;amp; freelancer who will soon start off as a Digital Nomad as soon as I graduate. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to see what I am working on? Check out my &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for weekly new tidbits on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Connect to me on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Portfolio&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.linkedin.com/in/tapajyoti-bose-429a601a0"&gt;LinkedIn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>ux</category>
      <category>ui</category>
      <category>portfolio</category>
    </item>
    <item>
      <title>What is CLI?</title>
      <author>ZakiMax</author>
      <pubDate>Sun, 13 Jun 2021 03:15:29 +0000</pubDate>
      <link>https://dev.to/zakimax/what-is-cli-5c0</link>
      <guid>https://dev.to/zakimax/what-is-cli-5c0</guid>
      <description>&lt;p&gt;On working, there're something I didn't understand "CLI".&lt;/p&gt;

&lt;p&gt;I'was searching for this Answer.&lt;/p&gt;

&lt;p&gt;The Answer I found is stand for Command Line Interface.&lt;/p&gt;

&lt;p&gt;But I'm not sure.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Top courses to learn MERN.</title>
      <author>Amritanshu Dev Rawat</author>
      <pubDate>Sun, 13 Jun 2021 02:45:57 +0000</pubDate>
      <link>https://dev.to/amritanshu/top-courses-to-learn-mern-2i2g</link>
      <guid>https://dev.to/amritanshu/top-courses-to-learn-mern-2i2g</guid>
      <description>&lt;p&gt;MERN stands for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MongoDB -&amp;gt; NoSQL Database&lt;/li&gt;
&lt;li&gt;Express.js -&amp;gt; Web Framework for Node&lt;/li&gt;
&lt;li&gt;React.js -&amp;gt; JavaScript Library For UI&lt;/li&gt;
&lt;li&gt;Node.js -&amp;gt; Runtime environment to execute JavaScript.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Paid Courses:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.udemy.com/course/mern-stack-front-to-back/"&gt;https://www.udemy.com/course/mern-stack-front-to-back/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lHchbIw---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0vqv4m2shfxohht98vit.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lHchbIw---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0vqv4m2shfxohht98vit.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.udemy.com/course/react-nodejs-express-mongodb-the-mern-fullstack-guide/"&gt;https://www.udemy.com/course/react-nodejs-express-mongodb-the-mern-fullstack-guide/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RqsLajuS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/stnqo319t3lp82cpwlah.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RqsLajuS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/stnqo319t3lp82cpwlah.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.coursera.org/specializations/full-stack-react"&gt;https://www.coursera.org/specializations/full-stack-react&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--olGDhxx3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yf4vy7prju6tud41c7f1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--olGDhxx3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yf4vy7prju6tud41c7f1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.pluralsight.com/courses/react-express-full-stack-app-building"&gt;https://www.pluralsight.com/courses/react-express-full-stack-app-building&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SyHSqT5X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/byc339ksag7m7s714oek.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SyHSqT5X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/byc339ksag7m7s714oek.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Free:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=7CqJlxBYj-M"&gt;https://www.youtube.com/watch?v=7CqJlxBYj-M&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mp9_icJi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl476y3ntngmmjfa5xw9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mp9_icJi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl476y3ntngmmjfa5xw9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PLillGF-RfqbbiTGgA77tGO426V3hRF9iE"&gt;https://www.youtube.com/playlist?list=PLillGF-RfqbbiTGgA77tGO426V3hRF9iE&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yGpMiZwV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aazb8fuorqbpo3ztu25y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yGpMiZwV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aazb8fuorqbpo3ztu25y.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Getting Comfortable With CSS Selectors (Part 1)</title>
      <author>Victor Ikechukwu</author>
      <pubDate>Sun, 13 Jun 2021 02:38:12 +0000</pubDate>
      <link>https://dev.to/mr_victor/getting-comfortable-with-css-selectors-part-1-24a9</link>
      <guid>https://dev.to/mr_victor/getting-comfortable-with-css-selectors-part-1-24a9</guid>
      <description>&lt;p&gt;So you have learned the basic id, class, and descendant selectors—and then called it a day? If so, you're missing out on an enormous level of flexibility. You owe it to yourself to commit these advanced CSS and CSS3 selectors to memory&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-rules"&gt;
  &lt;/a&gt;
  CSS Rules
&lt;/h2&gt;

&lt;p&gt;Every CSS rule follows this general pattern&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;selector&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;property&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;where we have of a selector (e.g. h1) and a declaration block ({}) where we declare our styles.&lt;br&gt;
In understanding CSS The biggest key player is understanding selectors and how they work, CSS selectors are what allows us to target specific Html Elements and apply styles in the declaration block to them, we won't be focusing on styles right now though, our focus would be on the selecting and what goes in that selector area &lt;/p&gt;

&lt;p&gt;Let's get into it 👇&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-universal-selector"&gt;
  &lt;/a&gt;
  1. Universal Selector
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Selects everything&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Selects all elements */&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The CSS universal selector is donated by an asterisk ✳. It selects all elements regardless of their type present on the page.&lt;br&gt;
In the example above all elements on the page will get the style of &lt;code&gt;color: black;&lt;/code&gt; assuming we don't have any more specific selectors that conflict with that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-element-type-selector"&gt;
  &lt;/a&gt;
  2. Element (Type) Selector
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Selects all img */&lt;/span&gt;
&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;Element&lt;/code&gt; Selector Selects all instances of a tag or element present on the page, in our case, we would be giving all &lt;code&gt;img&lt;/code&gt; HTML elements on the page the specified width and height.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-class-selector"&gt;
  &lt;/a&gt;
  3. Class Selector
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Selects all elements with class of 'blue' */&lt;/span&gt;
&lt;span class="nc"&gt;.blue&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;dotted&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The CSS &lt;code&gt;class&lt;/code&gt; selector is probably the most useful and versatile selector, it selects all elements that have given the &lt;code&gt;class value&lt;/code&gt; in their &lt;code&gt;class&lt;/code&gt; attribute. In the example above it will select all elements that have the "blue" value in their &lt;code&gt;class&lt;/code&gt; attribute&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-id-selector"&gt;
  &lt;/a&gt;
  4. ID Selector
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Selects the element with the id attribute set to '#header' */&lt;/span&gt;
&lt;span class="nf"&gt;#header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;dotted&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we have the &lt;code&gt;ID&lt;/code&gt; selector. ID selectors are the most powerful in terms of &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity"&gt;CSS specificity&lt;/a&gt;, just like the &lt;code&gt;class&lt;/code&gt; selector, it targets specific elements in our markup, that we can then reference in our CSS. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: The value of an element's &lt;code&gt;ID&lt;/code&gt; must be unique on a web page. It is a violation of the &lt;a href="https://www.w3.org/TR/html/dom.html#the-id-attribute"&gt;HTML standard&lt;/a&gt; to use the value of an ID more than once in the same document tree. id selectors are rigid and don't allow for reuse&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#5-selector-list"&gt;
  &lt;/a&gt;
  5. Selector List
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Selects all matching elements in the list */&lt;/span&gt;
&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The CSS &lt;code&gt;selector list&lt;/code&gt; &lt;code&gt;(,)&lt;/code&gt; allows us to select multiple elements with &lt;strong&gt;different selectors&lt;/strong&gt; at once and style them. You have more than one thing which uses the same CSS then the individual selectors can be combined into a selector list so that the rule is applied to all of the individual selectors. This is done by grouping them in a comma-separated list and CSS selects all the matching elements in the list&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note:  When you group selectors in this way, if any selector is invalid the whole rule will be ignored.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;&lt;u&gt; Combinator Selectors &lt;/u&gt;&lt;/h1&gt;

&lt;p&gt;This final group of selectors combines other selectors in order to target elements within our documents&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-descendant-combinator"&gt;
  &lt;/a&gt;
  6. Descendant Combinator
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Selects all &amp;lt;a&amp;gt;'s that are nested inside an &amp;lt;ul&amp;gt; */&lt;/span&gt;
&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;dodgerblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This &lt;code&gt;selector&lt;/code&gt; allows us to select elements that are descendants of some other selector. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;we are selecting all &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; nested anywhere within an &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;, it doesn't have to be the first child or first descendant it can be  anywhere nested inside the &lt;code&gt;ul&lt;/code&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#7-adjacent-sibling-combinator"&gt;
  &lt;/a&gt;
  7. Adjacent Sibling Combinator
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Selects only &amp;lt;p&amp;gt; tags that are immediately preceded by a &amp;lt;h1&amp;gt; */&lt;/span&gt;
&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dark-grey&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The + combinator selects adjacent element siblings.it will select only the element that is immediately preceded by the former element. In this case, only the first paragraph after each &lt;code&gt;h1&lt;/code&gt; will have dark-grey text. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This means that the second element must directly follow the first, and both share the same parent.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#8-direct-child-combinator"&gt;
  &lt;/a&gt;
  8. (Direct) Child Combinator
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Selects all &amp;lt;h2&amp;gt; that are direct children of a &amp;lt;div&amp;gt; */&lt;/span&gt;
&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;&amp;gt;&lt;/code&gt; combinator acts more like the &lt;code&gt;descendant combinator&lt;/code&gt; expect that it is more particular and selects direct children of the parent element, in the Example: &lt;code&gt;div &amp;gt; h2&lt;/code&gt; will match all &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; elements that are nested directly inside of a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;With the &lt;code&gt;descendant combinator&lt;/code&gt; we would select any nested child or grandchild of the parent element. But the child combinator &lt;code&gt;&amp;gt;&lt;/code&gt; selects only direct children.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sorry grandchildren only children allowed 😋.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#attribute-selectors"&gt;
  &lt;/a&gt;
  Attribute Selectors
&lt;/h2&gt;

&lt;p&gt;The attribute selectors allow us to select elements based on the presence of a certain attribute on an element:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-xhreffoo"&gt;
  &lt;/a&gt;
  9. X[href="foo"]
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"https://hashnode.com/"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The snippet above will style all anchor tags which link to &lt;a href="https://hashnode.com/"&gt;https://hashnode.com/&lt;/a&gt;; they'll receive the blue color. All other anchor tags will remain unaffected.&lt;/p&gt;

&lt;p&gt;What if the link does indeed direct to Hashnode, but maybe the path is hashnode.com rather than the full URL?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-xhreffoo"&gt;
  &lt;/a&gt;
  10. X[href*="foo"]
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;*=&lt;/span&gt;&lt;span class="s1"&gt;"hashnode"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There we go. The star designates that the proceeding value must appear somewhere in the attribute's value&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-xhrefhttp"&gt;
  &lt;/a&gt;
  11. X[href^="http"]
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;^=&lt;/span&gt;&lt;span class="s1"&gt;"http"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="nl"&gt;padding-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the carat symbol &lt;code&gt;^&lt;/code&gt; designates the beginning of a string. If we want to target all anchor tags that have an href which begins with http, we could use a selector similar to the snippet shown above.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-xhrefjpg"&gt;
  &lt;/a&gt;
  12. X[href$=".jpg"]
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;".jpg"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the symbol &lt;code&gt;$&lt;/code&gt; refers to the end of a string. In this case, we're searching for all anchors which link to an image—or a URL that ends with .jpg.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Alright coder we have covered quite a bit about CSS selectors! 🎉.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Universal Selector&lt;/li&gt;
&lt;li&gt;Element (Type) Selector&lt;/li&gt;
&lt;li&gt;Class and ID Selectors&lt;/li&gt;
&lt;li&gt;Combinators

&lt;ul&gt;
&lt;li&gt;Adjacent, Descendant, and Direct Child Combinators&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Attribute Selectors and their variants.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the next part of this series, we are going to talk about &lt;strong&gt;Pseudo Selectors&lt;/strong&gt;, a big and widely confusing topic in CSS 🤔.&lt;/p&gt;

&lt;p&gt;So what are you waiting for, take this knowledge out there and go write some top-notch CSS styles that will impress your friends. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enjoyed reading this as much as i enjoyed writing it for you?&lt;/strong&gt; 😍 . support me with a coffee 😃&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/molipa"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>css3</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>
S3 Same-Region Replication (SRR) vs Cross-Region Replication (CRR)</title>
      <author>Arun Kumar</author>
      <pubDate>Sun, 13 Jun 2021 02:34:07 +0000</pubDate>
      <link>https://dev.to/aws-builders/s3-same-region-replication-srr-vs-cross-region-replication-crr-b60</link>
      <guid>https://dev.to/aws-builders/s3-same-region-replication-srr-vs-cross-region-replication-crr-b60</guid>
      <description>&lt;p&gt;&lt;strong&gt;Overview&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This document is to evaluate and provide guidance on the benefits/feature of Amazon S3’s SRR and CRR replication strategy.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Replication enables automatic, asynchronous copying of objects across Amazon S3 buckets. Buckets that are configured for object replication can be owned by the same AWS account or by different accounts.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Replication can be achieved within the same AWS Region or different AWS Region.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Use Cases&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BSS9zL77--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrl01e7stw463779m0ei.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BSS9zL77--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrl01e7stw463779m0ei.png" alt="1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Same-Region Replication (SRR)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Automatically replicates data between buckets within the same AWS Region.&lt;/li&gt;
&lt;li&gt;Replication can be setup at a bucket level, a shared prefix level, or an object level using S3 object tags.&lt;/li&gt;
&lt;li&gt;SRR can be use to make a second copy of data in the same AWS Region.&lt;/li&gt;
&lt;li&gt;Helps to address data sovereignty and compliance requirements by keeping a copy of your data in a separate AWS account in the same region as the original.&lt;/li&gt;
&lt;li&gt;Allows to change account ownership for the replicated objects to protect data from accidental deletion.&lt;/li&gt;
&lt;li&gt;Allows to aggregate logs from different S3 buckets for in-region processing, or to configure live replication between test and development environment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Observations&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Both source and target buckets must be version enabled.&lt;/li&gt;
&lt;li&gt;Object deletions are not replicated to target bucket (so it’s not like rsync — delete).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tOddSogn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dt25u0eej7xmk3g0yk5g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tOddSogn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dt25u0eej7xmk3g0yk5g.png" alt="2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cross-Region Replication (CRR)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Automatically replicates data between buckets across different AWS Regions.&lt;/li&gt;
&lt;li&gt;Provides ability to replicate data at a bucket level, a shared prefix level, or an object level using S3 object tags.&lt;/li&gt;
&lt;li&gt;CRR provide lower-latency data access in different geographic regions.&lt;/li&gt;
&lt;li&gt;CRR can help with compliance requirement to store copies of data hundreds of miles apart.&lt;/li&gt;
&lt;li&gt;Allows to change account ownership for the replicated objects to protect data from accidental deletion.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CXukDueG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvgckidqopxd75hl1n00.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CXukDueG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvgckidqopxd75hl1n00.png" alt="3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Security&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Objects are remained encrypted throughout the replication process.&lt;/li&gt;
&lt;li&gt;The encrypted objects are transmitted securely via SSL within the same region (if using SRR) or from the source region to the destination region (if using CRR).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pricing for S3 Replication&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For CRR and SRR, Amazon S3 charges for storage in the selected destination S3 storage class, in addition to the storage charges for the primary copy, and replication PUT requests.&lt;/li&gt;
&lt;li&gt;For CRR, you will be charge for inter-region Data Transfer OUT from Amazon S3 to your destination region.&lt;/li&gt;
&lt;li&gt;Pricing for the replicated copy of storage is based on the destination AWS Region, while pricing for requests and inter-region data transfers are based on the source AWS Region.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Read More&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;[&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html"&gt;https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html&lt;/a&gt;]&lt;/p&gt;

</description>
      <category>aws</category>
      <category>s3</category>
      <category>replication</category>
      <category>security</category>
    </item>
    <item>
      <title>Deploy a React Application to Netlify</title>
      <author>Victor Ikechukwu</author>
      <pubDate>Sun, 13 Jun 2021 02:22:01 +0000</pubDate>
      <link>https://dev.to/mr_victor/deploy-a-react-application-to-netlify-ime</link>
      <guid>https://dev.to/mr_victor/deploy-a-react-application-to-netlify-ime</guid>
      <description>&lt;p&gt;Hey guys 👋, in this article we are going to look at the two different methods that we can use to host and deploy your react applications using Netlify.&lt;/p&gt;

&lt;p&gt;The first method takes less than a minute, &lt;strong&gt;which is crazy&lt;/strong&gt;. and the second method which includes continuous deployments and updates to our app through GitHub will only take you a few minutes to set up 🤠. That's amazing. excited? i am too 😀, let's get right into it 👇.&lt;/p&gt;

&lt;blockquote&gt;
    To follow along with this tutorial, you need to have a &lt;a href="https://github.com/"&gt;Github&lt;/a&gt;
    and
    &lt;a href="https://www.netlify.com/"&gt;Netlify&lt;/a&gt; account. so go to their sites and create one if
    you
    haven't already.
&lt;/blockquote&gt;

&lt;p&gt;with that done. we are going to create a new react app. so that you can follow along 100% of the&lt;br&gt;
way.&lt;/p&gt;

&lt;h1&gt;Create a new React App&lt;/h1&gt;

&lt;p&gt;create a new empty folder on your desktop or any directory of your choice. give it a name. I'm gonna&lt;br&gt;
call mine &lt;code&gt;react_app&lt;/code&gt;. great.&lt;/p&gt;

&lt;p&gt;open it in your VS Code or any editor of your choice.&lt;/p&gt;

&lt;p&gt;Next, we will need to open up a terminal. you can make use of your operating system default Terminal, Git bash, or the integrated terminal that is built-in with VS Code.&lt;/p&gt;

&lt;p&gt;Navigate to the directory where your app is. mine is&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;desktop/react_app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;you won't have to do this if you are using the integrated VS code terminal 😏.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;From here you will be able to initialize your react app. by simply running&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-react-app &lt;span class="o"&gt;(&lt;/span&gt;Name_Of_App&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;where &lt;code&gt;(Name_Of_App)&lt;/code&gt; would be what you want to name your react app.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This might take some time. so feel free to go make yourself a hot cup of tea ☕ while it runs on your device 😊.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Great!, after that's done your folder structure should look similar to this in your code editor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hxyKCENV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620856597519/uKInHJStX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hxyKCENV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620856597519/uKInHJStX.png" alt="folder structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;to start the application and preview it in your browser. you should see something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H297NjNX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620787771597/EL3y0gHkL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H297NjNX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620787771597/EL3y0gHkL.png" alt="our react app in the&amp;lt;br&amp;gt;
browser"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great! 🎉🎇. we successfully created a demo react app.&lt;/p&gt;

&lt;h1&gt;&lt;/h1&gt;

&lt;p&gt;you can go to the &lt;code&gt;src&lt;/code&gt; folder and edit the &lt;code&gt;App.js&lt;/code&gt; file before deploying. to customize it a bit.&lt;/p&gt;

&lt;p&gt;Something like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;header&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App-header&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;logo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App-logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="nx"&gt;Deployment&lt;/span&gt; &lt;span class="err"&gt;😊🎉&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/header&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Save, and now you should see your edited version in the browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i-zF5KIU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620787837688/urYTG9Ea0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i-zF5KIU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620787837688/urYTG9Ea0.png" alt="edited version of our&amp;lt;br&amp;gt;
app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great!, now let's focus on the main goal of this article. to show you how we can take our app from the &lt;code&gt;localhost port 3000&lt;/code&gt;&lt;br&gt;
that only we can see. to the internet. so that you can share it with your friends, employers. really anyone.&lt;/p&gt;

&lt;h1&gt; Time to Deploy! &lt;/h1&gt;

&lt;h2&gt; Manual Deployment &lt;/h2&gt;

&lt;p&gt;We are going to try out the first and easiest method of deploying react apps. but you need to have a &lt;br&gt;
&lt;a href="https://www.netlify.com/"&gt;Netlify&lt;/a&gt; account. so go ahead and signup or log in if you&lt;br&gt;
already have one.&lt;/p&gt;

&lt;p&gt;after logging in. go to the bottom of the page and you will see this empty box. where we can drag and drop our site folder.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gniiQ1PV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620787999263/Y9ZxMB8oE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gniiQ1PV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620787999263/Y9ZxMB8oE.png" alt="image of empty drag-and-drop&amp;lt;br&amp;gt;
box"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before getting to it. first, stop the react server by hitting &lt;code&gt;Ctrl C&lt;/code&gt; in our terminal.&lt;br&gt;
next, we would need to &lt;code&gt;build&lt;/code&gt; our react app. simply run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is going to create a &lt;code&gt;built&lt;/code&gt; version of react that our browsers can natively understand. and we can freely deploy on the web. read more about this &lt;br&gt;
&lt;a href="https://docs.npmjs.com/cli/v6/commands/npm-build/"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;once done, you should see the &lt;code&gt;build&lt;/code&gt; folder. in your folder structure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sslbWfSa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620788203439/J-c2dJm8a.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sslbWfSa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620788203439/J-c2dJm8a.jpeg" alt="Folder structure showing the build&amp;lt;br&amp;gt;
folder"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;open your react app in finder if you're on a mac or file explorer for windows.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;next, drag and drop the build folder into the empty box on the Netlify page. that is it. after a few seconds, the application should be deployed on the web! 🎉. now we have a real URL&lt;br&gt;
that we can share with people to access the site 😊. that is it this process works for any frontend react application. it's that simple.&lt;/p&gt;

&lt;h2&gt;Automated Deployment&lt;/h2&gt;

&lt;p&gt;One major problem with our current deployed version is that. if we make a change to our source code, the changes are not going to be reflected on the deployed version.&lt;/p&gt;

&lt;p&gt;And this makes sense, because. remember it is the &lt;code&gt;build&lt;/code&gt; folder that contains the version of our app that is accessible by web browsers. And we had manually pushed it to Netlify already, so changes made to our code, won't be reflected on our &lt;code&gt;build&lt;/code&gt; folder on Netlify. unless we &lt;code&gt;build&lt;/code&gt; our app again. and deploy it manually again 👀.&lt;/p&gt;

&lt;p&gt;As you can see this process is impossible 😞🤦‍♂️.&lt;/p&gt;

&lt;p&gt;🤔 So how do we deploy our applications so that, all the changes made to the code are reflected on the deployed site, each time we push to Github.&lt;/p&gt;

&lt;p&gt;To do that we need to add the project to a Github repository. go to &lt;a href=""&gt;Github&lt;/a&gt; and create a new empty repository for your app. follow this guide on the &lt;a href="https://docs.github.com/en/github/importing-your-projects-to-github/adding-an-existing-project-to-github-using-the-command-line"&gt;Github docs&lt;/a&gt;, on how to connect your app to a remote repo on github.&lt;/p&gt;

&lt;p&gt;once your repo is connected to your app. run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git push &lt;span class="nt"&gt;-u&lt;/span&gt; origin main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;on your terminal to push your code to GitHub.&lt;/p&gt;

&lt;p&gt;we can head back to Netlify. scroll to the top and press on the "New site from Git" button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fK7GRtXB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620788502193/r73NY6HC1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fK7GRtXB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620788502193/r73NY6HC1.png" alt='image of "New site from Git" button'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will be asked to choose the Git provider where your site’s source code is hosted. When you push&lt;br&gt;
to Git.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Then you can search for the specific repository you wish to deploy, among all your Github&lt;br&gt;
repositories. Click on it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kogbPX7y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620857044256/PTFyg0dYN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kogbPX7y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620857044256/PTFyg0dYN.png" alt="A list of our GitHub repository "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on the "Deploy" button.&lt;/p&gt;

&lt;p&gt;And there you have it!. your app is now Live!. congratulations! 🎉&lt;/p&gt;

&lt;h3&gt;Proving that our Deployment is Automated&lt;/h3&gt;

&lt;p&gt;Now, whenever you push to Github. Netlify would automatically &lt;code&gt;build&lt;/code&gt; our app for us and update our&lt;br&gt;
deployed version.&lt;/p&gt;

&lt;p&gt;To prove this. we are going to make some tweaks to our &lt;code&gt;App.js&lt;/code&gt; file by simply changing some text. To see if truly our&lt;br&gt;
changes would be reflected on the live site. once we push to Github.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;header&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App-header&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;logo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App-logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;SECOND&lt;/span&gt; &lt;span class="nx"&gt;DEPLOYMENT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;BREAKING&lt;/span&gt; &lt;span class="nx"&gt;CHANGES&lt;/span&gt; &lt;span class="err"&gt;😊🎉&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/header&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once those changes are made. commit and push your code to Github.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;In no time you should see your changes reflect in your Netlify website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XplhMy_n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620856489994/LwsZuoMnt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XplhMy_n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620856489994/LwsZuoMnt.png" alt="final deployed  app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hurray!&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;And that is it, guys. we now have a deployed version of our react application, which would be updated whenever we push&lt;br&gt;
our changes to Github.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Thanks so much for reading. hope you wouldn't break a sweat when next you are deploying your react&lt;br&gt;
applications 😅.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Let me know in the comments which free hoisting service you have been using. and maybe I might write&lt;br&gt;
on that.&lt;/p&gt;

&lt;p&gt;What are you still waiting for? 🤷‍♂️. go deploy that react app to Netlify!.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/molipa"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I hope you found this helpful, Thanks so much for reading!! 💖 And keep on coding! 👨‍💻.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>netlify</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Storing python objects inside PysonDB</title>
      <author>Adwaith Rajesh</author>
      <pubDate>Sun, 13 Jun 2021 02:14:27 +0000</pubDate>
      <link>https://dev.to/adwaithrajesh/storing-python-objects-in-pysondb-2f9m</link>
      <guid>https://dev.to/adwaithrajesh/storing-python-objects-in-pysondb-2f9m</guid>
      <description>&lt;p&gt;Let's see how we can store python objects, this include strings, list, function, etc.., inside a DB like &lt;a href="https://pypi.org/project/pysondb/"&gt;pysonDB&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Consider I've function &lt;code&gt;foo&lt;/code&gt; which takes an argument &lt;code&gt;x&lt;/code&gt; and return &lt;code&gt;x * (x + x)&lt;/code&gt;. Which I want to store inside a DB.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First things first we nee to convert this object to byte string. To do that we can use the &lt;code&gt;pickle&lt;/code&gt;. module.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pickle&lt;/span&gt;
&lt;span class="n"&gt;byte_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This byte string cannot be directly added to a PysonDB database, as byte strings are not JSON serializable. So a simple workaround will be to add quotes around the byte string which can be easily done like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;obj_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;byte_string&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This string can be now added to the DB&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pysondb&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getDb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"test.json"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"foo_function"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"obj"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;obj_string&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get the object back we can do the following steps.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getBy&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"foo_function"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now &lt;code&gt;data&lt;/code&gt; will look something like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'foo_function'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'obj'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"b'&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x80&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x04&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x95&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x14&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x00&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x00&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x00&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x00&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x00&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x00&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x00&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x8c&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x08__main__&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x94&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x8c&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x03foo&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x94&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x93&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;x94.'"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;316182400052721056&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To convert the obj string back to a callable function. We can do the following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;str_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;"obj"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remember that  &lt;code&gt;str_obj&lt;/code&gt; is still a string and not a byte string, which is what we need, since the required byte string is inside this string, we can simply evaluate the string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ast&lt;/span&gt;
&lt;span class="n"&gt;byte_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;literal_eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To call the function we can do this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;call_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte_obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;call_obj&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# output
&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#entire-code"&gt;
  &lt;/a&gt;
  Entire Code
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ast&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pickle&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pysondb&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;byte_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;obj_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;byte_string&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getDb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"test2.json"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"foo_function"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"obj"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;obj_string&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getBy&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"foo_function"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="n"&gt;str_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;"obj"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;byte_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;literal_eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;call_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte_obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;call_obj&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we have successfully stored a python object inside a DB. The steps are the same for all the objects like list or dict.&lt;/p&gt;

</description>
      <category>python</category>
      <category>database</category>
      <category>objects</category>
    </item>
    <item>
      <title>Isolamento de aplicações: Pilha de rede</title>
      <author>Eduardo Klosowski</author>
      <pubDate>Sun, 13 Jun 2021 01:35:19 +0000</pubDate>
      <link>https://dev.to/acaverna/isolamento-de-aplicacoes-pilha-de-rede-3d71</link>
      <guid>https://dev.to/acaverna/isolamento-de-aplicacoes-pilha-de-rede-3d71</guid>
      <description>&lt;p&gt;Uma das formas de comunicação mais comum entre processos é através da rede, o que permite tanto a comunicação de processos no mesmo computador, quanto em diferentes computadores. A comunicação pela rede normalmente utiliza portas &lt;a href="https://pt.wikipedia.org/wiki/Transmission_Control_Protocol"&gt;TCP&lt;/a&gt; ou &lt;a href="https://pt.wikipedia.org/wiki/User_Datagram_Protocol"&gt;UDP&lt;/a&gt;, porém algumas aplicações podem querer utilizar a mesma porta de rede, como a porta 80 TCP que é a porta padrão para serviços &lt;a href="https://pt.wikipedia.org/wiki/Hypertext_Transfer_Protocol"&gt;HTTP&lt;/a&gt;, ou 443 TCP para &lt;a href="https://pt.wikipedia.org/wiki/Hyper_Text_Transfer_Protocol_Secure"&gt;HTTPS&lt;/a&gt;, o que geraria conflitos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solu%C3%A7%C3%B5es-poss%C3%ADveis"&gt;
  &lt;/a&gt;
  Soluções possíveis
&lt;/h2&gt;

&lt;p&gt;Existem algumas formas de lidar com essa questão:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#definindo-o-n%C3%BAmero-da-porta"&gt;
  &lt;/a&gt;
  Definindo o número da porta
&lt;/h3&gt;

&lt;p&gt;A solução mais simples para o caso de dois processos quererem utilizar o mesmo número de porta é alterar a porta utilizada por algum dos processos. Isso normalmente envolve alterar a configuração da aplicação, e torna obrigatório informar o endereço da porta para acessar o serviço, uma vez que ele não se encontra mais em sua porta padrão. Um exemplo é &lt;code&gt;http://127.0.0.1:8080/&lt;/code&gt;, onde esse endereço informa para conectar na porta 8080 em vez da porta 80 (padrão). Porém algumas aplicações não foram feitas pensando na possibilidade de executar em outra porta, e mesmo se configuradas para tal, podem não funcionar corretamente, como um sistema web, onde são utilizados endereços fixos que assumem que o serviço esteja rodando na porta padrão e acabam redirecionando o usuário para ela.&lt;/p&gt;

&lt;p&gt;Para os sistemas que puderem ser executados em outras portas, essa configuração variará conforme o programa. Mas para verificar quais portas estão sendo utilizadas é possível executar o comando &lt;code&gt;ss -nltup&lt;/code&gt; que lista todas as portas que estão no modo de escuta (aguardando uma conexão no caso do TCP, ou esperando receber dados no caso do UDP) assim como o processo que está utilizando cada porta, facilitando tanto encontrar um número de porta disponível, quanto identificar qual outra aplicação está utilizando a porta desejada. Porém com essa configuração, além do endereço do servidor, também será necessário lembrar em qual porta que o serviço está rodando para conseguir acessá-lo.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#definindo-outro-endere%C3%A7o-ip"&gt;
  &lt;/a&gt;
  Definindo outro endereço IP
&lt;/h3&gt;

&lt;p&gt;Embora muitas vezes se pense em um serviço ouvindo apenas uma porta (ou mais de uma porta, dependendo da aplicação), para o sistema operacional cada processo ouve uma porta de um endereço de rede. Desta forma é possível que dois serviços utilizem a mesma porta TCP ou UDP, porém desde que em endereços de rede diferentes, sendo necessário configurar um segundo endereço no computador (adicionando um novo endereço na interface no caso do IPv6, ou criando um &lt;em&gt;alias&lt;/em&gt; para a interface no caso do IPv4), ou configurar para um serviço ser disponibilizado para o endereço de uma interface de rede, e outro serviço para o endereço de outra interface de rede.&lt;/p&gt;

&lt;p&gt;Com a configuração dos endereços de rede feita, na configuração da aplicação é necessário informar em qual endereço de rede e porta que ela deverá aguardar conexões, e isso novamente varia conforme o programa. Porém quando estiver em execução, o mesmo também pode ser visto pelo comando &lt;code&gt;ss -nltup&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;O exemplo a baixo mostra um computador com dois servidores de nomes (&lt;a href="https://pt.wikipedia.org/wiki/Sistema_de_Nomes_de_Dom%C3%ADnio"&gt;DNS&lt;/a&gt;) em execução. O primeiro ouvindo no IP 127.0.0.1 e porta 53, tanto TCP, quanto UDP. Esse serviço, por utilizar o endereço de &lt;em&gt;loopback&lt;/em&gt;, é acessível apenas da máquina local. O segundo servidor de nomes ouve no IP 192.168.122.1 e porta 53, também nos protocolos TCP e UDP. Nesse caso, o serviço está disponível para uma rede de &lt;a href="https://pt.wikipedia.org/wiki/M%C3%A1quina_virtual"&gt;máquinas virtuais&lt;/a&gt; do &lt;a href="https://libvirt.org/"&gt;libvirt&lt;/a&gt;. Em ambos os casos, esse serviço está atribuído a um endereço de rede específico, diferente do &lt;a href="https://pt.wikipedia.org/wiki/Secure_Shell"&gt;SSH&lt;/a&gt; que ouve em qualquer endereço de rede (0.0.0.0 no caso de IPv4 e [::] no caso de IPv6) na porta 22 apenas TCP.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Netid     State       Recv-Q      Send-Q            Local Address:Port            Peer Address:Port
udp       UNCONN      0           0                     127.0.0.1:53                   0.0.0.0:*         users:(("dnsmasq",pid=994,fd=4))
udp       UNCONN      0           0                 192.168.122.1:53                   0.0.0.0:*         users:(("dnsmasq",pid=838,fd=5))
tcp       LISTEN      0           32                    127.0.0.1:53                   0.0.0.0:*         users:(("dnsmasq",pid=994,fd=5))
tcp       LISTEN      0           32                192.168.122.1:53                   0.0.0.0:*         users:(("dnsmasq",pid=838,fd=6))
tcp       LISTEN      0           128                     0.0.0.0:22                   0.0.0.0:*         users:(("sshd",pid=695,fd=3))
tcp       LISTEN      0           128                        [::]:22                      [::]:*         users:(("sshd",pid=695,fd=4))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#outra-pilha-de-rede"&gt;
  &lt;/a&gt;
  Outra pilha de rede
&lt;/h3&gt;

&lt;p&gt;Outra opção é utilizar instâncias diferentes da pilha de rede do sistema operacional para cada aplicação, onde cada instância teria suas interfaces e endereços de rede, e assim uma não conflitaria com a outra. Uma forma de fazer isso é através do espaço de nomes, e informado que tal processo será executado dentro de tal espaço.&lt;/p&gt;

&lt;p&gt;Todo o controle do espaço de nomes (criação, configuração e execução de processos) pode ser feito através do comando &lt;code&gt;ip&lt;/code&gt; que faz parte do &lt;a href="https://wiki.linuxfoundation.org/networking/iproute2"&gt;iproute2&lt;/a&gt;, que substitui o antigo &lt;a href="https://sourceforge.net/projects/net-tools/"&gt;net-tools&lt;/a&gt;. Nesse exemplo ele será utilizado para criar um espaço de nomes (&lt;code&gt;app1&lt;/code&gt;), criar duas interfaces virtuais conectadas entre si (&lt;code&gt;veth0&lt;/code&gt; e &lt;code&gt;veth1&lt;/code&gt;), atribuir uma interface ao espaço de nomes da aplicação (&lt;code&gt;veth1&lt;/code&gt;), configurado os endereços de rede, e por fim, executado um processo dentro desse espaço:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Cria espaço de nomes app1&lt;/span&gt;
ip netns add app1

&lt;span class="c"&gt;# Cria interfaces de redes virtuais&lt;/span&gt;
ip &lt;span class="nb"&gt;link &lt;/span&gt;add veth0 &lt;span class="nb"&gt;type &lt;/span&gt;veth peer name veth1

&lt;span class="c"&gt;# Atribui uma interface de rede para a aplicação&lt;/span&gt;
ip &lt;span class="nb"&gt;link set &lt;/span&gt;veth1 netns app1

&lt;span class="c"&gt;# Define endereços de rede das interfaces&lt;/span&gt;
ip addr add 10.1.1.1/30 dev veth0
ip netns &lt;span class="nb"&gt;exec &lt;/span&gt;app1 ip addr add 10.1.1.2/30 dev veth1

&lt;span class="c"&gt;# Liga as interfaces&lt;/span&gt;
ip &lt;span class="nb"&gt;link set &lt;/span&gt;veth0 up
ip netns &lt;span class="nb"&gt;exec &lt;/span&gt;app1 ip &lt;span class="nb"&gt;link set &lt;/span&gt;veth1 up
ip netns &lt;span class="nb"&gt;exec &lt;/span&gt;app1 ip &lt;span class="nb"&gt;link set &lt;/span&gt;lo up

&lt;span class="c"&gt;# Configura gateway para a interface da aplicação&lt;/span&gt;
ip netns &lt;span class="nb"&gt;exec &lt;/span&gt;app1 ip route add default via 10.1.1.1

&lt;span class="c"&gt;# Executa processo do Bash dentro do espaço de nomes&lt;/span&gt;
ip netns &lt;span class="nb"&gt;exec &lt;/span&gt;app1 bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Esse último comando abrirá um terminal do &lt;a href="http://tiswww.case.edu/php/chet/bash/bashtop.html"&gt;Bash&lt;/a&gt; que terá acesso à outra pilha de rede, sendo possível executar comandos como &lt;code&gt;ping 10.1.1.1&lt;/code&gt; para verificar a comunicação com a pilha de rede que está rodando fora desse espaço de nomes. O Bash também pode ser substituído por outro processo, como o &lt;a href="https://nginx.org/"&gt;NGINX&lt;/a&gt; (exemplo &lt;code&gt;ip netns exec app1 nginx -g 'daemon off;'&lt;/code&gt;), e que assim poderia ser acessado pelo navegador através do endereço &lt;code&gt;http://10.1.1.2/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para que esse serviço possa ser acessado de outro computador, ainda é necessário fazer algumas configurações adicionais, como configurar a rota para a rede das interfaces virtuais nos dispositivos de rede, ou alguma tradução de endereços (&lt;a href="https://pt.wikipedia.org/wiki/Network_address_translation"&gt;NAT&lt;/a&gt;) ou porta (&lt;a href="https://pt.wikipedia.org/wiki/Port_address_translation"&gt;PAT&lt;/a&gt;), uma vez que a pilha de rede padrão funcionará como um &lt;a href="https://pt.wikipedia.org/wiki/Roteador"&gt;roteador&lt;/a&gt; ou &lt;a href="https://pt.wikipedia.org/wiki/Firewall"&gt;firewall&lt;/a&gt; para a segunda pilha criada desta forma.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#considera%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  Considerações
&lt;/h2&gt;

&lt;p&gt;A criação de espaços de nomes de rede pode ser bastante interessante para isolar aplicações para que elas não conflitem pelo uso de alguma porta, mas também pode ser utilizada para isolar a comunicação entre processos, de tal forma que a rede entre eles não seja acessível por terceiros. Um exemplo que isola a comunicação entre os processos em redes diferentes é o &lt;a href="https://www.openstack.org/"&gt;OpenStack&lt;/a&gt;, que é uma solução para a criação de nuvens privadas (criar um ambiente de nuvem dentro de seu próprio &lt;a href="https://pt.wikipedia.org/wiki/Centro_de_processamento_de_dados"&gt;&lt;em&gt;data center&lt;/em&gt;&lt;/a&gt;), onde alguns desses comandos do &lt;code&gt;ip netns&lt;/code&gt; aparecem no &lt;a href="https://docs.openstack.org/operations-guide/ops-network-troubleshooting.html#dealing-with-network-namespaces"&gt;guia para soluções de problemas de rede&lt;/a&gt;, permitindo assim executar comando com acessos as redes virtuais da nuvem, o qual não seria possível normalmente.&lt;/p&gt;

</description>
      <category>operationalsystem</category>
      <category>network</category>
      <category>braziliandevs</category>
    </item>
  </channel>
</rss>
