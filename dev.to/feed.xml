<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Intro to Remix üíø</title>
      <author>Abdur-Rahman</author>
      <pubDate>Wed, 05 Jan 2022 17:25:54 +0000</pubDate>
      <link>https://dev.to/shafspecs/intro-to-remix-41l7</link>
      <guid>https://dev.to/shafspecs/intro-to-remix-41l7</guid>
      <description>&lt;h3&gt;
  &lt;a href="#intro-totally-offtopic"&gt;
  &lt;/a&gt;
  Intro (Totally off-topic):
&lt;/h3&gt;

&lt;p&gt;It's being approximately 6 months since my last blog post and there are reasons for that.&lt;/p&gt;

&lt;p&gt;I just finished high school education ending of last year, we were supposed to write our O-Levels in August/September but due to COVID, we had it postponed till September/November. Post-exam, I had things I had to wrap up and couldn't find time to actually sit down and write a post.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  &lt;u&gt;üî∞ Introduction:&lt;/u&gt;
&lt;/h1&gt;

&lt;p&gt;This article is just an explanation and summary of &lt;em&gt;what&lt;/em&gt; Remix is. You might have heard of the wonderkid framework that is taking React communities by storm, less than 3 months old, approx. 27K followers on Twitter, 10.3K stars on Github and they say it is &lt;em&gt;good&lt;/em&gt; with a capital 'G'. &lt;/p&gt;

&lt;p&gt;What is it? And where do I find resources online besides the docs? Well, you are at your destination. This is a brief summary of Remix and what &lt;strong&gt;it is.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You could say this a theory article, so before you go opening VS Code, we aren't writing any code here, at least not in this article. The reason I decided to write this is due to the several misinformation about Remix which are going around in communities and they just keep getting weirder. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;...&lt;a href="https://twitter.com/remix_run"&gt;@remix-run&lt;/a&gt; is the same as &lt;a href="https://twitter.com/reactjs"&gt;@reactjs&lt;/a&gt; with just a different syntax&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;-Anonymous Twitter User&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;...&lt;a href="https://twitter.com/nextjs"&gt;@nextjs&lt;/a&gt; is used for building todo apps, and from what I see, Remix is no different.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;-Anonymous Discord User&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://twitter.com/remix_run"&gt;@remix-run&lt;/a&gt; is a fullstack framework, meaning it is like React that renders to the Virtual DOM at the front and it is like Node.js at the back&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;-Anonymous Discord User&lt;/p&gt;

&lt;p&gt;There are many more outrageous info and quotes like these (these are all true quotes!) and besides a handful of communities and expert developers, there aren't really any resource or reference out there to tell what's true from not true. Hopefully, that can change in the near coming future.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-remix-"&gt;
  &lt;/a&gt;
  &lt;u&gt;What's Remix üíø?&lt;/u&gt;
&lt;/h1&gt;

&lt;p&gt;A one-line answer, Remix is a full-stack web framework. To explain what a full-stack framework and what is soo special about it is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A server framework üì∂&lt;/li&gt;
&lt;li&gt;A browser framework üåç&lt;/li&gt;
&lt;li&gt;A compiler ‚öô&lt;/li&gt;
&lt;li&gt;A server-side HTTP handler üì°&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#1-serverside-framework-"&gt;
  &lt;/a&gt;
  &lt;u&gt;1. Server-side framework üì∂:&lt;/u&gt;
&lt;/h3&gt;

&lt;p&gt;To understand what a server-side framework is, let me introduce you to the concept of MVC. MVC is is a pattern in software design commonly used to implement user interfaces, data, and controlling logic of an application. The full meaning of MVC is &lt;em&gt;Model&lt;/em&gt;-&lt;em&gt;View&lt;/em&gt;-&lt;em&gt;Controller&lt;/em&gt;, and is a pattern that emphasizes a separation between the software‚Äôs business logic and display (UI).&lt;/p&gt;

&lt;p&gt;Let's take a look at an example to further understand what MVCs really are: Imagine a simple shopping list app. All we want is a list of the name, quantity and price of each item we need to buy this week. Below we'll describe how we could implement some of this functionality using MVC.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R3HfWoCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2w0ltua0i6bmi75lili2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R3HfWoCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2w0ltua0i6bmi75lili2.png" alt="MVC example" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Image sourced from &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/MVC"&gt;MDN Docs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#the-model"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The Model&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;The model defines what data the app should contain. If the state of this data changes, then the model will usually notify the view (so the display can change as needed) and sometimes the controller (if different logic is needed to control the updated view).&lt;/p&gt;

&lt;p&gt;Going back to our shopping list app, the model would specify what data the list items should contain ‚Äî item, price, etc. ‚Äî and what list items are already present.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-view"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The View&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;The view defines how the app's data should be displayed.&lt;/p&gt;

&lt;p&gt;In our shopping list app, the view would define how the list is presented to the user, and receive the data to display from the model. It is the frontend endpoint that your users would see (UI)&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-controller"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The Controller&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;The controller contains logic that updates the model and/or view in response to input from the users of the app.&lt;/p&gt;

&lt;p&gt;So for example, our shopping list could have input forms and buttons that allow us to add or delete items. These actions require the model to be updated, so the input is sent to the controller, which then manipulates the model as appropriate, which then sends updated data to the view.&lt;/p&gt;

&lt;p&gt;You might however also want to just update the view to display the data in a different format, e.g., change the item order to alphabetical, or lowest to highest price. In this case the controller could handle this directly without needing to update the model. Whichever way, the controller is the first step outside your app's UI that accepts all inputs/changes from the user and notifies the model with the changes according to a specific criteria (logic).&lt;/p&gt;

&lt;p&gt;Examples of server-side MVC frameworks include Laravel, Meteor, Ruby on Rails, etc.&lt;/p&gt;

&lt;p&gt;Now that you have an idea about MVC, think of Remix as the view and controller but it leaves the model up to you. Meaning the schema (layout) of your data, databases, ORMs, etc. are left up to you the developer to tweak according to your taste and needs.&lt;/p&gt;

&lt;p&gt;Another thing Remix does is unifying the view and the controller instead of seperating them as two different entities. So, the developer can simultaneously set up both the view (UI) and controller (APIs, fetch, data logic, etc.) in one codebase (in one project!)&lt;/p&gt;

&lt;p&gt;Most server side frameworks are "&lt;em&gt;model focused&lt;/em&gt;" - A controller manages multiple URLs for a single model. Remix on the other hand, is &lt;em&gt;UI focused&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Remix routes can handle an entire URL or just a segment of the URL. When a route maps (points) to just a segment of the URL, the nested URL segments become nested layouts in the UI. In this way, each layout (view) can be its own controller and then Remix will aggregate the data and components to build the complete UI. To better undersatnd all these &lt;em&gt;tech-talk&lt;/em&gt;, take a look at the GIF below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mH-BzgfB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bbfdsdbgw6v2useccox0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mH-BzgfB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bbfdsdbgw6v2useccox0.gif" alt="Layout GIF" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Each URL segment is a seperate layout that inherits the general layout of it's parent. The reason I say inherit is due to the fact that it is nested in it's parent route and uses the page layout of the parent. That being said, it is it's own controller. Each URL segment (route) is it's own controller, it handles it's own data-fetching, error handling, etc. itself (independently)&lt;/p&gt;

&lt;p&gt;More often than not, a Remix route module can contain both the UI and the interactions with the models in the same file, which leads to really nice developer ergonomics and productivity.&lt;/p&gt;

&lt;p&gt;If you're not familiar with traditional back end web frameworks, you can think of Remix routes as React components that are already their own API route and already know how to load and submit data to themselves on the server. (&lt;em&gt;Amazing!&lt;/em&gt;)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-a-browser-framework-"&gt;
  &lt;/a&gt;
  &lt;u&gt;2. A Browser Framework üåç:&lt;/u&gt;
&lt;/h3&gt;

&lt;p&gt;Once Remix has served the document to the browser, it "hydrates" the page with the browser build's JavaScript modules.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;What is hydration?&lt;/u&gt; Hydration refers to the process of adding the JavaScript behavior back into the compiled HTML in the page when the HTML renders in the browser. &lt;/p&gt;

&lt;p&gt;Now that, is a way to speed up your site greatly. But it doesn't stop there, when the user clicks a link, instead of making a round trip to the server for the entire document and all of the assets, Remix simply fetches the data for the next page and updates the UI. &lt;/p&gt;

&lt;p&gt;This has many performance benefits over making a full document request:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Assets don't need to be re-downloaded (or pulled from cache)&lt;/li&gt;
&lt;li&gt;Assets don't need to be parsed by the browser again&lt;/li&gt;
&lt;li&gt;The data fetched is much smaller than the entire document (sometimes orders of magnitude)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To understand this point better, refer back to the GIF above:&lt;/p&gt;

&lt;p&gt;We see our current URL: &lt;code&gt;example.com/sales/invoices/102000&lt;/code&gt; and we see how Remix breaks down the site into small, bite-sized chunks that load simulataneously. Imagine we want to navigate to &lt;code&gt;example.com/sales/subscriptions/302900&lt;/code&gt;, in our normal front-end framework, we request the new URL and the server responds with the page, the &lt;strong&gt;whole page&lt;/strong&gt;. It takes time to load &lt;code&gt;example.com&lt;/code&gt;, then the "sales" route, etc. And God help us if caching is disabled and our page is UI heavy (lots of animations, designs,transitions, etc.). In Remix, because the only route changing is &lt;code&gt;invoices/102000&lt;/code&gt; =&amp;gt; &lt;code&gt;subscriptions/302900&lt;/code&gt;, the server doesn't need to re-fetch the entire document, just the segment it needs &lt;em&gt;because they all share the same layout&lt;/em&gt;. This speeds up page load because the data fetched is obviously smaller, thus the Time-To-Interact (TTI) is much smaller which leads to a happier user experience.&lt;/p&gt;

&lt;p&gt;Remix can also prefetch all resources for a page when the user is about to click a link. The browser framework knows about the compiler's asset manifest. It can match the URL of the link, read the manifest, and then prefetch all data, JavaScript modules, and even CSS resources for the next page. This is how Remix apps feel fast even when networks are slow.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-a-compiler-%E2%9A%99"&gt;
  &lt;/a&gt;
  &lt;u&gt;3. A compiler ‚öô:&lt;/u&gt;
&lt;/h3&gt;

&lt;p&gt;The compiling aspect is actually the first step of every, and any Remix app and what it does is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;To create a configurable server HTTP handler, that includes all routes (URL routes) and modules (external packages, etc.) together to be able to render on the server and handle any other server side requests for resources.&lt;/li&gt;
&lt;li&gt;A browser build. This includes automatic code splitting by route, fingerprinted asset imports (like CSS and images), etc. Anything needed to run an application in the browser&lt;/li&gt;
&lt;li&gt;An asset manifest. Both the client and the server use this manifest to know the entire dependency graph. This is useful for preloading resources in the initial server render as well as prefetching them for client side transitions. This is how Remix is able to eliminate the render+fetch waterfalls so common in web apps today.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#4-http-handler-"&gt;
  &lt;/a&gt;
  &lt;u&gt;4. HTTP Handler üì°:&lt;/u&gt;
&lt;/h3&gt;

&lt;p&gt;While Remix runs on the server, it is not actually a server. It's just a handler that is given to an actual JavaScript server.&lt;/p&gt;

&lt;p&gt;It's built on the &lt;em&gt;Web Fetch API&lt;/em&gt; instead of Node.js. This enables Remix to run in any Node.js server like Vercel, Netlify, Architect, etc. as well as non-Node.js environments like like Cloudflare Workers and Deno Deploy.&lt;/p&gt;




&lt;p&gt;I have used Remix personally and I can say it's been quite the journey, building some open-source projects with Remix and some open-source resources for Remix I would share when I can finish a good portion of it. What do I think? Should you or should you not use it? Firstly, I think Remix is the beginning of a new dawn in web development. Remix was developed ny the team who created React Router so I can confidently say that we are in good hands. You should definitely try it out. In the coming days, I would try and regularly post tips, tricks and maybe a full-blown tutorial. Remix has an official &lt;a href="https://www.youtube.com/channel/UC_9cztXyAZCli9Cky6NWWwQ"&gt;Youtube Channel&lt;/a&gt;, you should definitely check it out. And if you don't mind a full blown course, &lt;a href="https://twitter.com/kentcdodds"&gt;@kentcdodds&lt;/a&gt; did a full &lt;a href="https://www.youtube.com/watch?v=hsIWJpuxNj0"&gt;6 hour&lt;/a&gt; tutorial on Remix covering A-Z. He is a great guy too, if you're on Twitter, give him a follow. Second question, should you use Remix? It depends, if you are creating a calculator app that has just buttons and an output screen and just simple maths calculations with 0 data-fetching, async backend operations, etc. Then no, for that project, React would be more than enough. If it's something that includes routing, nested layouts, data fetching, etc. Then you can definitely try out Remix. With that, I wish you happy learning and hunting üëã.&lt;/p&gt;




&lt;p&gt;&lt;u&gt;References &amp;amp; Resources:&lt;/u&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://remix.run/docs/en/v1"&gt;Remix Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/"&gt;MDN Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/home"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discord.gg/DBRRUV5j"&gt;Official Remix Discord&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>javascript</category>
      <category>remix</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>Built-In Angular Pipes - DecimalPipe - Part 3</title>
      <author>Anubhab Mukherjee</author>
      <pubDate>Wed, 05 Jan 2022 17:15:40 +0000</pubDate>
      <link>https://dev.to/this-is-angular/built-in-angular-pipes-decimalpipe-part-3-33p1</link>
      <guid>https://dev.to/this-is-angular/built-in-angular-pipes-decimalpipe-part-3-33p1</guid>
      <description>&lt;p&gt;&lt;strong&gt;T&lt;/strong&gt;oday we will continue with the remaining built in Angular pipes. If you are not aware of pipe I would recommend you to go through the &lt;a href="https://dev.to/this-is-angular/built-in-angular-pipes-part-1-23ec"&gt;post&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;&lt;code&gt;DecimalPipe&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The DecimalPipe is used to format a value/ number as per the required decimal digits and locale information.&lt;/p&gt;

&lt;p&gt;The name of the pipe is &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;{{ value | number [ : digitsInfo [ : locale ] ] }}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Present in the &lt;code&gt;Common Module&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-input-value"&gt;
  &lt;/a&gt;
  The Input value
&lt;/h3&gt;

&lt;p&gt;Input Value which the pipe accepts must be either in &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-parameter"&gt;
  &lt;/a&gt;
  The Parameter
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;digitsInfo&lt;/code&gt;&lt;br&gt;
It is of type &lt;code&gt;string&lt;/code&gt;.&lt;br&gt;
It is used to set the digit and decimal representation.&lt;br&gt;
It is Optional.&lt;br&gt;
Default value is undefined.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;locale&lt;/code&gt;&lt;br&gt;
It is of type string.&lt;br&gt;
It specifies what locale format that will be implemented.&lt;br&gt;
It is Optional.&lt;br&gt;
Default value is undefined.&lt;/p&gt;

&lt;p&gt;The digitsInfo follows the following format -&lt;br&gt;
&lt;code&gt;{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;minIntegerDigits&lt;/code&gt;&lt;br&gt;
Minimum number of integer digits before the decimal point.&lt;br&gt;
Default value is 1.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;minFractionDigits&lt;/code&gt;&lt;br&gt;
Minimum number of digits allowed after the decimal point.&lt;br&gt;
Default is 0.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;maxFractionDigits&lt;/code&gt;&lt;br&gt;
Maximum number of digits allowed after the decimal point.&lt;br&gt;
Default is 3.&lt;/p&gt;

&lt;p&gt;Now, lets see in practice. Lets open the component.ts file -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2MdG8dUs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r6h986m6wqhn9dkew7sc.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2MdG8dUs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r6h986m6wqhn9dkew7sc.PNG" alt="Image description" width="509" height="284"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And add a variable &lt;code&gt;pi&lt;/code&gt; and assign the value &lt;u&gt;3.14159&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  pi = 3.14159;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and in the corresponding template file lets add the below code -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;h2&amp;gt;Decimal Pipe&amp;lt;/h2&amp;gt;

&amp;lt;h4&amp;gt;Without the pipe&amp;lt;/h4&amp;gt;
&amp;lt;p&amp;gt;{{ pi }}&amp;lt;/p&amp;gt;
&amp;lt;hr /&amp;gt;
&amp;lt;h4&amp;gt;Default Decimal Pipe&amp;lt;/h4&amp;gt;
&amp;lt;p&amp;gt;{{ pi | number }}&amp;lt;/p&amp;gt;
&amp;lt;hr /&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will see the below output -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gbrvp7NV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7997prub6pd8jbze3d2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gbrvp7NV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7997prub6pd8jbze3d2.PNG" alt="Image description" width="236" height="301"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So here in the above output we can see when we display the value of &lt;code&gt;pi&lt;/code&gt; without any pipe it shows the entire value. But when we use the decimal pipe the number of digits after decimal becomes &lt;strong&gt;3&lt;/strong&gt; and does the rounding off too.&lt;/p&gt;

&lt;p&gt;Now lets see the &lt;code&gt;digitsInfo&lt;/code&gt; parameter in detail-&lt;/p&gt;

&lt;p&gt;Lets paste in the below code -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;h4&amp;gt;digitsInfo Example&amp;lt;/h4&amp;gt;

&amp;lt;p&amp;gt;
  Here number of digits before decimal is 1. &amp;lt;br&amp;gt;
  Minimum number of digits after decimal is 1 &amp;lt;br&amp;gt;
  Maximum numberof digits after decimal is 2 &amp;lt;br&amp;gt;
  &amp;lt;i&amp;gt;Output- &amp;lt;/i&amp;gt;
  &amp;lt;b&amp;gt;{{ pi | number: "1.1-2" }}&amp;lt;/b&amp;gt;
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  Here number of digits before decimal is 3. 
Since the value has only one digit so the remaining 
digits are covered by 0.&amp;lt;br&amp;gt;
  Minimum number of digits after decimal is 2. &amp;lt;br&amp;gt;
  Maximum numberof digits after decimal is 4. 
Number of digits shown after decimal is 4. &amp;lt;br&amp;gt;
  &amp;lt;i&amp;gt;Output- &amp;lt;/i&amp;gt;
  &amp;lt;b&amp;gt;{{ pi | number: "3.2-4" }}&amp;lt;/b&amp;gt;
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  No digits after the Decimal Point. &amp;lt;br&amp;gt;
  &amp;lt;i&amp;gt;Output- &amp;lt;/i&amp;gt;
  &amp;lt;b&amp;gt;{{ pi | number: "1.0-0" }}&amp;lt;/b&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the output for the above code you would see - &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LS6B6oz1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j44wxh4qjcp273mtbelh.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LS6B6oz1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j44wxh4qjcp273mtbelh.PNG" alt="Image description" width="766" height="279"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all for now. &lt;br&gt;
Coming up the remaining pipes in the next post.&lt;br&gt;
So stay tuned...&lt;br&gt;
Hope you enjoyed the post if yes do like share and comment!!!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cheers&lt;/strong&gt;!!!&lt;br&gt;
&lt;em&gt;Happy Coding&lt;/em&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>pipe</category>
    </item>
    <item>
      <title>üî• Serverless boilerplate with TypeScript and Express [Open Source] üöÄ</title>
      <author>Remi W.</author>
      <pubDate>Wed, 05 Jan 2022 16:50:09 +0000</pubDate>
      <link>https://dev.to/ixartz/serverless-boilerplate-with-typescript-and-express-open-source-3h0l</link>
      <guid>https://dev.to/ixartz/serverless-boilerplate-with-typescript-and-express-open-source-3h0l</guid>
      <description>&lt;p&gt;A Serverless boilerplate to build a backend in Express JS with TypeScript. Built with developer-experience in mind with ESLint, Prettier, Husky and Lint-Staged to help you writing high-quality code.&lt;/p&gt;

&lt;p&gt;It also includes VSCode integration for better debugging session.&lt;/p&gt;

&lt;p&gt;The Serverless starter code supports several features like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;‚ö°Ô∏è Offline support&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;‚öôÔ∏è Environment variable&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;üöÄ Production-ready&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;‚ú® Live reload&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ixartz"&gt;
        ixartz
      &lt;/a&gt; / &lt;a href="https://github.com/ixartz/Serverless-Boilerplate-Express-TypeScript"&gt;
        Serverless-Boilerplate-Express-TypeScript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üöÄ Boilerplate and Starter for Serverless framework, ExpressJS and TypeScript ‚ö°Ô∏è Made with developer experience first: Serverless framework + Live reload + Offline support + ExpressJS + TypeScript + ESLint + Prettier + Husky + Lint-Staged + Dotenv + VSCode
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Serverless Boilerplate with Serverless Framework, ExpressJS and TypeScript &lt;a href="https://twitter.com/ixartz" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/22898de970db41d476e65546387c7b5147565904f1a4197980bb0e3eb30eb8ab/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f747769747465722e636f6d2f636c6f7564706f7373652e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f7725323025343049786172747a" alt="Twitter"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;
  &lt;a href="https://creativedesignsguru.com/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rh5YlA6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://repository-images.githubusercontent.com/341987132/6a6a5100-777a-11eb-8b21-8c8c71881eb2" alt="Serverless Boilerplate Banner"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;üöÄ Serverless Boilerplate is starter code for your backend and REST API based on Serverless framework with Express JS and TypeScript. ‚ö°Ô∏è Made with Serverless framework, Live reload, Offline support, ExpressJS, TypeScript, ESLint, Prettier, Husky, Lint-Staged, Dotenv, VSCode.&lt;/p&gt;

&lt;p&gt;Clone this project and use it to create your own backend.&lt;/p&gt;

&lt;h3&gt;
Features&lt;/h3&gt;

&lt;p&gt;Developer experience first:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
üî• &lt;a href="https://www.serverless.com" rel="nofollow"&gt;Serverless framework&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
üìñ Local support with Serverless Offline&lt;/li&gt;
&lt;li&gt;
‚öôÔ∏è Environment variable with Serverless Dotenv&lt;/li&gt;
&lt;li&gt;
‚ö°Ô∏è &lt;a href="http://expressjs.com" rel="nofollow"&gt;ExpressJS&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
üéâ Type checking &lt;a href="https://www.typescriptlang.org" rel="nofollow"&gt;TypeScript&lt;/a&gt; with strict mode&lt;/li&gt;
&lt;li&gt;
‚úèÔ∏è Linter with &lt;a href="https://eslint.org" rel="nofollow"&gt;ESLint&lt;/a&gt; with Airbnb configuration&lt;/li&gt;
&lt;li&gt;
üõ† Code Formatter with &lt;a href="https://prettier.io" rel="nofollow"&gt;Prettier&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
ü¶ä Husky for Git Hooks&lt;/li&gt;
&lt;li&gt;
üö´ Lint-staged for running linters on Git staged files&lt;/li&gt;
&lt;li&gt;
üóÇ VSCode configuration: Debug, Settings, Tasks and extension for ESLint, Prettier, TypeScript&lt;/li&gt;
&lt;li&gt;
‚ú® HTTP Api instead of API gateway for cost optimization&lt;/li&gt;
&lt;li&gt;
üí® Live reload&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
Philosophy&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Minimal code&lt;/li&gt;
&lt;li&gt;
üöÄ Production-ready&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
Nextless.js SaaS Boilerplate&lt;/h3&gt;

&lt;p&gt;Building your SaaS product faster with‚Ä¶&lt;/p&gt;
&lt;/div&gt;


&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ixartz/Serverless-Boilerplate-Express-TypeScript"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;I use this boilerplate to build all my backend projects. Perfect to start any backend projects like building a REST Api in Serverless.&lt;/p&gt;

&lt;p&gt;Fully managed without any server maintenance. No need to learn or use Docker. Highly scalable and keep your cost low.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fullstack-serverless-saas-application"&gt;
  &lt;/a&gt;
  Full-stack serverless SaaS application
&lt;/h2&gt;

&lt;p&gt;If you want to build a SaaS application faster and better without losing your time configuring and installing dependencies, I have built a &lt;a href="https://nextlessjs.com"&gt;Serverless SaaS Boilerplate&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It includes everything you need to launch your SaaS in 1 month with authentication, subscription payment, user dashboards, landing pages, form management, infrastructure as code, etc. A full-stack application, 100% Serverless written in TypeScript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextlessjs.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c1qKLlCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/nextless-react-saas-boilerplate.png" alt="Serverless SaaS Boilerplate" width="720" height="482"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>serverless</category>
    </item>
    <item>
      <title>Converting to Vite (Part 1)</title>
      <author>Matthew Foley</author>
      <pubDate>Wed, 05 Jan 2022 16:41:57 +0000</pubDate>
      <link>https://dev.to/opensauced/converting-to-vite-part-1-4ff4</link>
      <guid>https://dev.to/opensauced/converting-to-vite-part-1-4ff4</guid>
      <description>&lt;p&gt;This is Part 1 of a series about how recently in &lt;a href="https://opensauced.pizza"&gt;Open Sauced&lt;/a&gt;, we converted the project from using Webpack v4 to using &lt;a href="https://vitejs.dev"&gt;Vite&lt;/a&gt;! A lot of what we'll cover in this series deals with &lt;a href="https://github.com/open-sauced/open-sauced/pull/1322"&gt;PR #1322&lt;/a&gt;. &lt;a class="mentioned-user" href="https://dev.to/bdougieyo"&gt;@bdougieyo&lt;/a&gt; started this as a &lt;code&gt;create-react-app&lt;/code&gt; project 5+ years ago and so this conversion certainly turned out to be an undertaking!&lt;/p&gt;

&lt;p&gt;You can read in many different places about the benefits of using Vite for tooling, as well as how it works under the hood, but we can unequivocally tell you that it significantly improved on the build times for our project. My fellow contributor &lt;a class="mentioned-user" href="https://dev.to/0vortex"&gt;@0vortex&lt;/a&gt; spent plenty of time with this PR, and he observed going from build times with Webpack around 220 seconds, to full build times with Vite around 9 seconds (and hot module reloads measured in milliseconds at worst).&lt;/p&gt;

&lt;p&gt;So how did we get here? &lt;strong&gt;Well, it's a good thing to describe alternatives considered when you add issues to a repo!&lt;/strong&gt; Months ago, &lt;a class="mentioned-user" href="https://dev.to/0vortex"&gt;@0vortex&lt;/a&gt; described in &lt;a href="https://github.com/open-sauced/open-sauced/issues/1131"&gt;Issue #1131&lt;/a&gt; some opportunities for dependency updates that would require version 5 of webpack with our webpack configuration, and warned that the dependency management would probably be tricky. I fixated on an alternative that he mentioned about converting the project to use &lt;a href="https://www.snowpack.dev/"&gt;Snowpack&lt;/a&gt;. I had wanted to learn more about bundling tools, so I took a few days here and there after Thanksgiving and got Open Sauced mostly working with it (see &lt;a href="https://github.com/open-sauced/open-sauced/pull/1320"&gt;PR #1320&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/bdougieyo"&gt;@bdougieyo&lt;/a&gt; looked over that PR on &lt;a href="https://twitch.tv/bdougieYO"&gt;stream&lt;/a&gt;, and pointed out that there was a lot more momentum recently with Vite as opposed to Snowpack. He pointed out that &lt;a href="https://astro.build"&gt;Astro&lt;/a&gt; was changing from using &lt;a href="https://astro.build/blog/astro-021-preview/"&gt;Snowpack to Vite&lt;/a&gt; for bundling, and that these were the same folks responsible for Snowpack. &lt;/p&gt;

&lt;p&gt;As it turned out, the conversion steps for getting our project working with Vite were pretty similar to those for Snowpack, so I managed to get a branch &lt;em&gt;mostly working&lt;/em&gt; with Vite in about 25 minutes while the stream was still going. Little did I know, there was still plenty to be done!&lt;/p&gt;

&lt;p&gt;In Part 2 of this series, I'll talk about some of the snags and learnings we had with the conversion, and in Parts 3 and 4, I'll talk about some of the ways the scope for this PR grew.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Cover Image by &lt;a href="https://unsplash.com/@andersjilden?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Anders Jild√©n&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/fast?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>vite</category>
      <category>webdev</category>
      <category>tooling</category>
      <category>react</category>
    </item>
    <item>
      <title>WhatsApp Custom Link Message</title>
      <author>Alexandre Freire</author>
      <pubDate>Wed, 05 Jan 2022 16:39:04 +0000</pubDate>
      <link>https://dev.to/alexandrefreire/whatsapp-custom-link-message-51kp</link>
      <guid>https://dev.to/alexandrefreire/whatsapp-custom-link-message-51kp</guid>
      <description>&lt;p&gt;Make custom link messages to Whatsapp with nuget package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var waComposer = new WaComposer();
waComposer.WriteText("Pedido",1,1);
//Observation: this 1,1 is break line. 1 before and 1 after

waComposer.WriteText("Item One");

//can format - available options: Italic, Bold, Strikethrough, Monospace.
waComposer.WriteText(WaFormat.Bold("Two")); 
waComposer.WriteText(WaFormat.Italic("Example Number: ") + "3");

var textResult = waComposer.GetText();

var whatsAppLink = WaSender.GetLink("PHONE_NUMBER_HERE",textResult);

//example output of whatsAppLink 
"https://wa.me/123/?text=THE_MESSAGE_FORMATED_BY_PACKAGE_HERE"
or on mobile 
"whatsapp://send?text=THE_MESSAGE_FORMATED_BY_PACKAGE_HERE&amp;amp;phone=123"

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;being able to stay like this for example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ElQ4Gvxh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q1ryh9gyx52ewymp6ecr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ElQ4Gvxh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q1ryh9gyx52ewymp6ecr.png" alt="Image description" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Available on &lt;a href="https://www.nuget.org/packages/WhatsAppLink/"&gt;https://www.nuget.org/packages/WhatsAppLink/&lt;/a&gt;&lt;br&gt;
Github &lt;a href="https://github.com/oalexandrefreire/WhatsAppLinkCSharp"&gt;https://github.com/oalexandrefreire/WhatsAppLinkCSharp&lt;/a&gt;&lt;/p&gt;

</description>
      <category>csharp</category>
    </item>
    <item>
      <title>1 line of code: How to convert tabs to spaces
</title>
      <author>martin krause</author>
      <pubDate>Wed, 05 Jan 2022 16:12:31 +0000</pubDate>
      <link>https://dev.to/martinkr/1-line-of-code-how-to-convert-tabs-to-spaces-529p</link>
      <guid>https://dev.to/martinkr/1-line-of-code-how-to-convert-tabs-to-spaces-529p</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tabsToSpaces&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tabsize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replaceAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tabsize&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Returns the string and replaces a series of spaces (&lt;code&gt;tab size&lt;/code&gt;) with a tab.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-repository-amp-npm-package"&gt;
  &lt;/a&gt;
  The repository &amp;amp; npm package
&lt;/h2&gt;

&lt;p&gt;You can find the all the utility functions from this series at &lt;a href="https://github.com/martinkr/onelinecode"&gt;github.com/martinkr/onelinecode&lt;/a&gt;&lt;br&gt;
The library is also published to &lt;a href="https://www.npmjs.com/package/@onelinecode/onelinecode"&gt;npm as @onelinecode&lt;/a&gt; for your convenience.&lt;/p&gt;

&lt;p&gt;The code and the npm package will be updated every time I publish a new article.&lt;/p&gt;




&lt;p&gt;Follow me on &lt;a href="http://twitter.com/_martinkr"&gt;Twitter: @martinkr&lt;/a&gt; and consider to &lt;a href="https://www.buymeacoffee.com/martinkr"&gt;buy me a coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@zoo_monkey"&gt;zoo_monkey&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/fuji"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://modernfrontend.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cH97ToOx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://modernfrontend.dev/banner/banner_583-111.png" alt="Subscribe to the weekly modern frontend development newsletter" width="583" height="111"&gt;&lt;/a&gt;&lt;/p&gt;




</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>codequality</category>
    </item>
    <item>
      <title>What is AI, Machine Learning, Deep Learning, and Data Science?</title>
      <author>Vijay Patel</author>
      <pubDate>Wed, 05 Jan 2022 15:55:23 +0000</pubDate>
      <link>https://dev.to/easyawslearn/what-is-ai-machine-learning-deep-learning-and-data-science-1heg</link>
      <guid>https://dev.to/easyawslearn/what-is-ai-machine-learning-deep-learning-and-data-science-1heg</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-ai"&gt;
  &lt;/a&gt;
  What is AI?
&lt;/h2&gt;

&lt;p&gt;AI on its own really isn‚Äôt anything: just lines of code. When it comes to how that code is used in society and how those uses impact people, however‚Äîthat‚Äôs when AI becomes more than just code. In The People‚Äôs Guide to AI (written by the fantastic Mimi ·ªån·ª•·ªçha and Diana J. Nucera), AI is described as ‚Äúlike salt,‚Äù in that when it is added to a product, that product is transformed.&lt;/p&gt;

&lt;p&gt;AI can be employed to help software and other tech products accomplish a wide variety of tasks, from sorting or locating information in a search engine to recommending music on Spotify. Forms of AI exist in public spaces such as schools, hospitals, and workplaces, as well as in the privacy of our homes.&lt;/p&gt;

&lt;p&gt;To function, AI needs data. Data allows AI systems to build patterns, which they then use to generate predictions and simulations or to infer information about the world. Often, this data is gathered, extracted, and mined as a focused process to build an understanding of communities and of how we use technology.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Here is the video which is fully based on the Difference between AI, Machine Learning, Deep Learning, and Data Scienceüëáüëá&lt;/code&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=16DNT-uUKfw"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hDIg08V5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dh518zbwm1ub18004s64.png" alt="Image description" width="600" height="320"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-machine-learning"&gt;
  &lt;/a&gt;
  What is Machine Learning?
&lt;/h2&gt;

&lt;p&gt;Machine learning is a subset of artificial intelligence (AI). It is focused on teaching computers to learn from data and to improve with experience ‚Äì instead of being explicitly programmed to do so. In machine learning, algorithms are trained to find patterns and correlations in large data sets and to make the best decisions and predictions based on that analysis. Machine learning applications improve with use and become more accurate the more data they have access to. Applications of machine learning are all around us ‚Äìin our homes, our shopping carts, our entertainment media, and our healthcare.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-deep-learning"&gt;
  &lt;/a&gt;
  What is Deep Learning?
&lt;/h2&gt;

&lt;p&gt;Deep learning is a branch of machine learning. Unlike traditional machine learning algorithms, many of which have a finite capacity to learn no matter how much data they acquire, deep learning systems can improve their performance with access to more data: the machine version of more experience. After machines have gained enough experience through deep learning, they can be put to work for specific tasks such as driving a car, detecting weeds in a field of crops, detecting diseases, inspecting machinery to identify faults, and so on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-data-science"&gt;
  &lt;/a&gt;
  What is Data Science?
&lt;/h2&gt;

&lt;p&gt;Deep learning networks learn by discovering intricate structures in the data they experience. By building computational models that are composed of multiple processing layers, the networks can create multiple levels of abstraction to represent the data.&lt;/p&gt;

&lt;p&gt;For example, a deep learning model known as a convolutional neural network can be trained using large numbers (as in millions) of images, such as those containing cats. This type of neural network typically learns from the pixels contained in the images it acquires. It can classify groups of pixels that are representative of a cat‚Äôs features, with groups of features such as claws, ears, and eyes indicating the presence of a cat in an image.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-data-science"&gt;
  &lt;/a&gt;
  What is Data Science?
&lt;/h2&gt;

&lt;p&gt;Data science is a multidisciplinary approach to finding, extracting, and surfacing patterns in data through a fusion of analytical methods, domain expertise, and technology. This approach generally includes the fields of data mining, forecasting, machine learning, predictive analytics, statistics, and text analytics. As data is growing at an alarming rate, the race is on for companies to harness the insights in their data. However, most organizations are faced with a shortage of experts to analyze their big data to find insights and explore issues the company didn‚Äôt even know it had. To realize and monetize the value of data science, organizations must infuse predictive insights, forecasting, and optimization strategies into business and operational systems. Many businesses are now empowering their knowledge workers with platforms that can help them conduct their own machine learning projects and tasks. Being able to extract trends and opportunities in the massive amounts of data being infused into a business will give an organization a competitive advantage.&lt;/p&gt;




&lt;p&gt;‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨ WANT TO LEARN MORE? ‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨&lt;br&gt;
Full Terraform tutorial ‚ñ∫ &lt;a href="https://bit.ly/2GwK8V2"&gt;https://bit.ly/2GwK8V2&lt;/a&gt;&lt;br&gt;
DevOps Tools, like Ansible ‚ñ∫ &lt;a href="https://bit.ly/3iASHuP"&gt;https://bit.ly/3iASHuP&lt;/a&gt;&lt;br&gt;
Docker Tutorial ‚ñ∫ &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;br&gt;
AWS Tutorial ‚ñ∫ &lt;a href="https://bit.ly/30GFv1q"&gt;https://bit.ly/30GFv1q&lt;/a&gt;&lt;br&gt;
GCP Tutorial ‚ñ∫ &lt;a href="https://bit.ly/3mwh412"&gt;https://bit.ly/3mwh412&lt;/a&gt;&lt;br&gt;
Jenkins Tutorials ‚ñ∫ &lt;a href="https://bit.ly/3iHnfv4"&gt;https://bit.ly/3iHnfv4&lt;/a&gt;&lt;br&gt;
Jenkins Pipeline ‚ñ∫ &lt;a href="https://bit.ly/30CJGLB"&gt;https://bit.ly/30CJGLB&lt;/a&gt;&lt;br&gt;
Python ‚ñ∫ &lt;a href="https://bit.ly/3I7bewU"&gt;https://bit.ly/3I7bewU&lt;/a&gt;&lt;br&gt;
Python in just 1 video ‚ñ∫ &lt;a href="https://bit.ly/3EeqGVy"&gt;https://bit.ly/3EeqGVy&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ai</category>
      <category>machinelearning</category>
      <category>deeplearning</category>
      <category>datascience</category>
    </item>
    <item>
      <title>What happens when Amazon accidentally sends all of their support traffic your way?</title>
      <author>Tim</author>
      <pubDate>Wed, 05 Jan 2022 15:44:16 +0000</pubDate>
      <link>https://dev.to/tevko/what-happens-when-amazon-accidentally-sends-all-of-their-support-traffic-your-way-3bhg</link>
      <guid>https://dev.to/tevko/what-happens-when-amazon-accidentally-sends-all-of-their-support-traffic-your-way-3bhg</guid>
      <description>&lt;p&gt;A sudden massive spike in web traffic is something every tech startup dreams of (unless you‚Äôre on the SRE team). When it happened to us at &lt;a href="https://openbase.com"&gt;Openbase&lt;/a&gt;, we were thrilled. While we already take in ~400k visitors per month, we wanted to be thorough and dive into our analytics in order to find the source of all this new traffic, in hopes that we could capitalize on it and keep the trend going.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9OIPnbOQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05q5alonc15w9cl3uk9b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9OIPnbOQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05q5alonc15w9cl3uk9b.png" alt="A graph displaying a sudden increase in web traffic on GA" width="880" height="132"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, this proved to be a little difficult to investigate. All of the traffic was direct, meaning that the sudden influx of users weren‚Äôt clicking on a viral tweet. Instead they were typing &lt;a href="https://openbase.com"&gt;openbase.com&lt;/a&gt; directly into their browser URL bar - or so we thought. After a few mentions of this during our morning standup meetings, and a cursory glance at the horizon for unsolicited ‚ÄúGo to Openbase.com right now‚Äù billboards, the investigation took a backseat while we went back to the typical startup stuff. New features, improving the world of open source, building Yelp for package discovery, etc.&lt;/p&gt;

&lt;p&gt;Then the strange support tickets started flowing in. ‚ÄúFireTV not working‚Äù. ‚ÄúMy package came but it‚Äôs broken‚Äù. ‚ÄúWe redeemed an Amazon gift card and wanted the money back on the card.‚Äù - Okay perhaps that last one (which is entirely real) was a bit of a helpful clue.&lt;/p&gt;

&lt;p&gt;For some reason, Amazon support requests were coming to us.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_sADl4wv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vspiu0jahhqsh4lh5obw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_sADl4wv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vspiu0jahhqsh4lh5obw.gif" alt='Gif of Ryan Reynolds saying "But Why?"' width="480" height="259"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At first glance, Openbase.com doesn't share any similarities with Amazon.com. To start, we‚Äôre not an ecommerce brand, we‚Äôre an open source package search and discovery platform. ‚ÄúA‚Äù and ‚ÄúO‚Äù are very far apart from each other on a standard QWERTY keyboard. Why then were we getting a 900% increase in direct traffic from angry Amazon.com customers?&lt;/p&gt;

&lt;p&gt;After pouring through all of our analytics services, logs, and anything else we could think of, we still had nothing. Finally, through a third party SEO service, we found a new backlink - &lt;a href="http://amazom.com"&gt;http://amazom.com&lt;/a&gt; - which redirects to &lt;a href="https://openbase.com"&gt;https://openbase.com&lt;/a&gt;. Surprisingly, this link isn‚Äôt just the result of fat-fingering, a quick google search will reveal this typo exists all across the web.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PVDbRZhd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/56jjr929cyzwl3elrxci.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PVDbRZhd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/56jjr929cyzwl3elrxci.png" alt="A whois record showing Amazon ownership" width="366" height="63"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here‚Äôs where things get really strange - Amazon owns this domain. Why does it redirect to us at Openbase? Is it possible that the almighty DevOps at Amazon love Openbase SO MUCH?  Why did the traffic start pouring in on December 4th? Why did one of Kaitlyn‚Äôs 2 pack color changing mugs arrive broken in the box?  We don‚Äôt know. We‚Äôve reached out to Amazon for clarification, and are excited for (but certainly not expecting) an explanation.&lt;/p&gt;

&lt;p&gt;We‚Äôve learned a few things from this ordeal:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Always investigate traffic spikes thoroughly&lt;/li&gt;
&lt;li&gt;Angry users understandably don‚Äôt care that Openbase.com looks nothing like Amazon&lt;/li&gt;
&lt;li&gt;Double boxing, along with plenty of styrofoam and bubble wrap isn‚Äôt always enough to ensure mugs don‚Äôt break in transit. While we don‚Äôt do any shipping here at Openbase, we do care very deeply about open source packages, so be sure to start your search for tools, frameworks, and libraries at &lt;a href="https://openbase.com"&gt;openbase.com&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>devops</category>
      <category>analytics</category>
      <category>javascript</category>
      <category>sre</category>
    </item>
    <item>
      <title>Add Web Push Notification to WordPress Website</title>
      <author>elinabey</author>
      <pubDate>Wed, 05 Jan 2022 15:37:07 +0000</pubDate>
      <link>https://dev.to/elinabey/add-web-push-notification-to-wordpress-website-7oh</link>
      <guid>https://dev.to/elinabey/add-web-push-notification-to-wordpress-website-7oh</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nnSV9aBi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/33jdakihej6vxsscm9u9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nnSV9aBi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/33jdakihej6vxsscm9u9.jpg" alt="Add Web Push Notification to WordPress Website" width="600" height="300"&gt;&lt;/a&gt;&lt;br&gt;
Add Web Push Notification to WordPress Website. Build more powerful, more useful customer connections with desktop and browser notifications. Push notifications allow you to send notices to customers even when they are not visiting your website. This will help you to get visitors back to your website, grow traffic, and make better money.&lt;/p&gt;

&lt;p&gt;In this post, we will show you how to create web push notifications to your WordPress site.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-add-web-push-notification-to-wordpress-website"&gt;
  &lt;/a&gt;
  How to Add Web Push Notification to WordPress Website
&lt;/h2&gt;

&lt;p&gt;Push notifications for WordPress websites can be a very useful marketing tool for your blog, as they inspire readers and users to come back to your site.&lt;/p&gt;

&lt;p&gt;Here we'll use a simple and easy plugin to do this job done.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#install-the-perfecty-push-notification-plugin"&gt;
  &lt;/a&gt;
  Install the &lt;strong&gt;Perfecty Push Notification&lt;/strong&gt; Plugin
&lt;/h2&gt;

&lt;p&gt;First of all, install the &lt;a href="https://wordpress.org/plugins/perfecty-push-notifications/"&gt;Perfecty Push Notifications&lt;/a&gt; plugin. Here‚Äôs how to do so:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open your WordPress &lt;strong&gt;Dashboard&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Navigate to &lt;strong&gt;Plguins&lt;/strong&gt; &amp;gt;&amp;gt; &lt;strong&gt;Add New&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Search for "&lt;strong&gt;Perfecty Push Notifications&lt;/strong&gt;" via search bar.&lt;/li&gt;
&lt;li&gt;When you find Perfecty Push Notifications among the results, then click &lt;strong&gt;Install Now&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--70yVzaC9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xr2tddescq8qpn9uqz24.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--70yVzaC9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xr2tddescq8qpn9uqz24.jpg" alt="Perfecty Push Notifications" width="553" height="292"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5.Once it‚Äôs installed, click the¬†&lt;strong&gt;Activate¬†button&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The plugin will create a new tab in your dashboard called Perfecty Push. Open it, and you'll see different pages with setting page as well.&lt;/p&gt;

&lt;p&gt;To style the notification screen, we need to add the below code to Additional CSS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.perfecty-push-dialog-box&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;450px&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#perfecty-push-dialog-cancel&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#0078d1&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;span class="nf"&gt;#perfecty-push-dialog-subscribe&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#0078d1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.perfecty-push-dialog-buttons&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.perfecty-push-dialog-icon&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;padding-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I shared this post from &lt;a href="https://softcodeon.com/wordpress/add-web-push-notification-to-wordpress-website.htm"&gt;Add Web Push Notification to WordPress Website&lt;/a&gt; you can read in detail from there.&lt;/p&gt;

&lt;p&gt;You can change the background colors, text size, border radius, etc. We hope this post supported you learn how to add web push notifications to your WordPress website. If you have any questions or suggestions please discuss below.&lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Meet NFTW - The NFT Marketplace</title>
      <author>Amol Borkar</author>
      <pubDate>Wed, 05 Jan 2022 15:31:18 +0000</pubDate>
      <link>https://dev.to/amolbr_/meet-nftw-the-nft-marketplace-dfj</link>
      <guid>https://dev.to/amolbr_/meet-nftw-the-nft-marketplace-dfj</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;The world is witnessing a decentralized revolution with the rapid rise in the adoption of blockchain technologies accross the globe. Non-fungible Tokens (NFTs) are a great way to establish authenticity, ownership and economic value of any digital asset. I've been fascinated by crypto recently and knew I wanted to build something in this space as soon I saw the announcement.&lt;/p&gt;

&lt;p&gt;NFTW is built on top of the Opensea API and allows users to browse and search through thousands of NFTs listed on the platform. Additionally, NFTW includes social features like liking and sharing so users can share their thoughts on any asset.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nftw.netlify.app/"&gt;Link to the project&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;E-Commerce Creation&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/amolbrkr/nftw-dev-hackathon"&gt;https://github.com/amolbrkr/nftw-dev-hackathon&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#some-highlights-of-the-project"&gt;
  &lt;/a&gt;
  Some highlights of the project:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Powerful Search which works on multiple datapoints powered by &lt;a href="https://docs.atlas.mongodb.com/atlas-search/"&gt;Atlas Search&lt;/a&gt; and &lt;a href="https://www.mongodb.com/atlas/database"&gt;Database&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Automatic fetching &amp;amp; updating of asset data using &lt;a href="https://docs.mongodb.com/realm/functions/"&gt;Realm Functions&lt;/a&gt; &amp;amp; &lt;a href="https://docs.mongodb.com/realm/triggers/trigger-types/"&gt;Triggers&lt;/a&gt;. This is necessary since &lt;a href="https://docs.opensea.io/reference/api-overview"&gt;Opensea API&lt;/a&gt; is rate-limited.&lt;/li&gt;
&lt;li&gt;Social Features like liking &amp;amp; sharing (commenting coming soon)&lt;/li&gt;
&lt;li&gt;Frontend is done in &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; SSR and &lt;a href="https://bulma.io"&gt;Bulma&lt;/a&gt; deployed on &lt;a href="https://www.netlify.com/"&gt;Netlify&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3pTX8oWJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/36noa3b1qg3wg6nf3p3h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3pTX8oWJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/36noa3b1qg3wg6nf3p3h.png" alt="nftw-homepage" width="880" height="425"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mlr_OL2R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ws249aco3gg5sws8se3p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mlr_OL2R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ws249aco3gg5sws8se3p.png" alt="nftw assets page" width="880" height="423"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks to DEV and MongoDB for making this event happen, it was amazing to see so many good projects. I Hope you like my submission, happy to answer any questions you might have :) &lt;/p&gt;

</description>
      <category>atlashackathon</category>
      <category>mongodb</category>
      <category>nextjs</category>
    </item>
    <item>
      <title>Monaco Editor, Prometheus &amp; Alertmanager support in QuestDB</title>
      <author>Brian Thomas Smith</author>
      <pubDate>Wed, 05 Jan 2022 15:25:14 +0000</pubDate>
      <link>https://dev.to/questdb/monaco-editor-prometheus-alertmanager-support-in-questdb-1dbn</link>
      <guid>https://dev.to/questdb/monaco-editor-prometheus-alertmanager-support-in-questdb-1dbn</guid>
      <description>&lt;p&gt;QuestDB version 6.1.3 includes Prometheus Alertmanager support, new counters in the Prometheus endpoint for memory info, automatic query timeout, Monaco as the new SQL editor for QuestDB's web interface, and more UI additions. Here's a roundup of changes!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#monaco-editor-from-vs-code-in-questdb-ui"&gt;
  &lt;/a&gt;
  Monaco Editor from VS Code in QuestDB UI
&lt;/h2&gt;

&lt;p&gt;The SQL editor in QuestDB's web console now includes the&lt;br&gt;
&lt;a href="https://microsoft.github.io/monaco-editor/"&gt;Monaco Editor that powers VS Code&lt;/a&gt;. Upgrading the SQL editor to use the Monaco Editor brings with it many improvements and functionality that comes by default with VS Code, so now you get convenient features like bracket matching, find and replace-all, multiple cursor selection, and more right out of the box:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fhqAzKff--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lb9pg3iizy2uwiozu2cg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fhqAzKff--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lb9pg3iizy2uwiozu2cg.png" alt="Find all functionality in the Monaco Editor within QuestDB database" width="880" height="633"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more information on using the Monaco Editor in QuestDB, type F1 in QuestDB's web console, or refer to the official &lt;a href="https://code.visualstudio.com/docs/editor/codebasics"&gt;Monaco documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#prometheus-metrics"&gt;
  &lt;/a&gt;
  Prometheus metrics
&lt;/h2&gt;

&lt;p&gt;Prometheus is an open-source systems monitoring and alerting toolkit which collects and stores metrics as time series data. Prometheus collects small pieces of data about many components to help build a picture of the state and trajectory of a system. The scraped metrics are stored, and rules can be applied to aggregate and generate new metrics from existing data or generate alerts based on user-defined triggers.&lt;/p&gt;

&lt;p&gt;QuestDB has a &lt;code&gt;/metrics&lt;/code&gt; HTTP endpoint on port &lt;code&gt;9003&lt;/code&gt; which provide counters in Prometheus format. Prometheus can be used to visualize and graph QuestDB metrics prefixed with &lt;code&gt;questdb_&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ag5udsOM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2u5mflc6ucj83if1z6xu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ag5udsOM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2u5mflc6ucj83if1z6xu.png" alt="Prometheus graphing tab showing QuestDB instance metrics on a chart" width="880" height="514"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more information on configuring QuestDB and Prometheus to graph QuestDB metrics, see the &lt;a href="https://dev.to/docs/third-party-tools/prometheus/"&gt;Prometheus documentation&lt;/a&gt; for examples and hints for setup and configuration.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#prometheus-alertmanager"&gt;
  &lt;/a&gt;
  Prometheus Alertmanager
&lt;/h2&gt;

&lt;p&gt;Release 6.1.3 introduces a new log writer for QuestDB that sends any message to Prometheus &lt;a href="https://prometheus.io/docs/alerting/latest/alertmanager/"&gt;Alertmanager&lt;/a&gt;. To configure this writer, add it to the &lt;code&gt;writers&lt;/code&gt; config alongside other log writers. Details on logging configuration can be found on the &lt;a href="https://dev.to/docs/reference/configuration/#configuration-file"&gt;server configuration documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Configuring that QuestDB should send alerts to Alertmanager alerting is done in QuestDB's log config with the address and port for Alertmanager:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# The writers to enable&lt;/span&gt;
&lt;span class="nv"&gt;writers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;stdout,alert

&lt;span class="c"&gt;# Prometheus Alertmanager&lt;/span&gt;
w.alert.class&lt;span class="o"&gt;=&lt;/span&gt;io.questdb.log.LogAlertSocketWriter
w.alert.level&lt;span class="o"&gt;=&lt;/span&gt;CRITICAL
w.alert.alertTargets&lt;span class="o"&gt;=&lt;/span&gt;172.17.0.2:9093
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For details on configuring QuestDB to send alerts to Alertmanager, see the &lt;a href="https://dev.to/docs/third-party-tools/prometheus/"&gt;Prometheus documentation&lt;/a&gt; for examples and guides for setup and configuration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sql-syntax-for-bulk-inserts"&gt;
  &lt;/a&gt;
  SQL syntax for bulk inserts
&lt;/h2&gt;

&lt;p&gt;It's now possible to bulk insert vales into a table via SQL. This functionality follows the 'multirow' &lt;code&gt;VALUES&lt;/code&gt; syntax used in PostgreSQL and acts as an accelerator when inserting data in bulk:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;my_table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="n"&gt;SYMBOL&lt;/span&gt; &lt;span class="k"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="nb"&gt;DOUBLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ts&lt;/span&gt; &lt;span class="nb"&gt;TIMESTAMP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nb"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;my_table&lt;/span&gt;
&lt;span class="k"&gt;VALUES&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'d1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'2021-10-05T11:31:35.878Z'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'d1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'2021-10-05T12:31:35.878Z'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'d2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;201&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'2021-10-05T12:31:35.878Z'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'d2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;201&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'2021-10-05T13:31:35.878Z'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'d2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;201&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'2021-10-05T14:31:35.878Z'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#automatic-sql-query-timeout"&gt;
  &lt;/a&gt;
  Automatic SQL query timeout
&lt;/h2&gt;

&lt;p&gt;Users can now define automatic timeouts for SQL queries via server configuration. This is set using the &lt;code&gt;query.timeout.sec&lt;/code&gt; server configuration and is a global timeout in seconds used for long-running queries. For more&lt;br&gt;
information on setting this parameter, see the &lt;a href="https://dev.to/docs/reference/configuration/"&gt;server configuration documentation&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Default is 60 sec&lt;/span&gt;
query.timeout.sec&lt;span class="o"&gt;=&lt;/span&gt;10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#next-up"&gt;
  &lt;/a&gt;
  Next up
&lt;/h2&gt;

&lt;p&gt;The team have added Java 17 support and are working on a JIT (Just-in-time) compiler for filters which will massively improve performance of queries using &lt;code&gt;WHERE&lt;/code&gt; clauses.&lt;/p&gt;

&lt;p&gt;We hope you enjoyed the latest roundup, for the complete list of additions and fixes, see the &lt;a href="https://github.com/questdb/questdb/releases/tag/6.1.3"&gt;release notes on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Feel free to reach out to let us know how we're doing or just come by and say hello &lt;a href="//slack.questdb.io"&gt;in our Slack Community&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>database</category>
      <category>timeseries</category>
      <category>opensource</category>
      <category>monitoring</category>
    </item>
    <item>
      <title>How to choose the right CSS properties</title>
      <author>Jesse de Bruijne</author>
      <pubDate>Wed, 05 Jan 2022 15:10:16 +0000</pubDate>
      <link>https://dev.to/jessedebruijne/how-to-choose-the-right-css-properties-48ca</link>
      <guid>https://dev.to/jessedebruijne/how-to-choose-the-right-css-properties-48ca</guid>
      <description>&lt;p&gt;CSS might seem very daunting. There are many properties to choose from, and it may sometimes look like it's not doing what you tell it to. Or, sometimes you find yourself thinking: "There is more than one way to do this in CSS". In this blog post I'll cover some of these scenarios, and help you understand how you can justify your CSS decisions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-edge-cases"&gt;
  &lt;/a&gt;
  1. Edge cases
&lt;/h2&gt;

&lt;p&gt;In my opinion, the most important reasoning behind your CSS usage. If you find yourself in a situation where you have multiple CSS solutions, this should be your first thought. Think of scenarios that might not be included in the design, and how your CSS would react to those. Examples of edge cases include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What if the text in this element becomes very long?&lt;/li&gt;
&lt;li&gt;What if the user uses a smaller device?&lt;/li&gt;
&lt;li&gt;What if the user zooms in using the browser zoom?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's take for example: how to center a div.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"example"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;1&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.example&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;magenta&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;.example&lt;/code&gt; element is a magenta circle of 40x40. Say we want to place this &lt;code&gt;1&lt;/code&gt; exactly in the middle of the &lt;code&gt;.example&lt;/code&gt; div. You &lt;em&gt;could&lt;/em&gt; do this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.example&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;11px&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which works, and looks like this:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Essej2/embed/WNZyGvq?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Looks perfect! But now watch what happens if it's not 1, but 11 as a number:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Essej2/embed/NWazRxV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Now the text is not centered in the div anymore! A different approach like Flexbox might be your preferred solution then:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.example&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Essej2/embed/zYEaKBN?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Thinking outside of the box can help a great deal in deciding which CSS solution is the right fit, because it actually eliminates "wrong" solutions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-browser-support"&gt;
  &lt;/a&gt;
  2. Browser support
&lt;/h2&gt;

&lt;p&gt;The never-ending struggle of the front-end developer. Browsers all have their unique quirks and features! Or as we developers call them, bugs and inconsistencies. Taking browser support into account can be a deciding factor on which CSS properties to use. The main browsers to take into account are &lt;strong&gt;Safari&lt;/strong&gt; and, to a lesser extent, &lt;strong&gt;Internet Explorer 11&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;
  If you want to know more about why these browsers specifically, click here
  &lt;br&gt;
Safari has a very different approach to development compared to Edge, Chrome or Firefox. They only release new versions every 6 months, and so bugs are always there for at least 6 months. &lt;a href="https://httptoolkit.tech/blog/safari-is-killing-the-web/"&gt;To read a more extensive rant on Safari, I can recommend this article.&lt;/a&gt;

&lt;p&gt;&lt;a href="https://blogs.windows.com/windowsexperience/2021/05/19/the-future-of-internet-explorer-on-windows-10-is-in-microsoft-edge/"&gt;Internet Explorer 11 is reaching its end of life very soon&lt;/a&gt;, and the whole development world will breathe a sigh of relief when it does. The browser has been ridiculously outdated for a while now, and new awesome features like CSS Grid, or Flexbox, were either not implemented at all, or implemented in their own way. This resulted in many inconsistencies when comparing your page in IE11 to for example Google Chrome.&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;For example, let's say you want to change the opacity of an element. You could use either of these two lines:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.element&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first way, using &lt;code&gt;filter&lt;/code&gt;, actually performs better because browsers can use hardware acceleration. However, &lt;a href="https://caniuse.com/css-filters"&gt;it's not supported in IE11&lt;/a&gt;. So, if your users use IE11, you might want to avoid using &lt;code&gt;filter&lt;/code&gt;. Alternatively, some browsers offer compatibility through the use of &lt;em&gt;prefixes&lt;/em&gt; like &lt;code&gt;-webkit-animation&lt;/code&gt; instead of &lt;code&gt;animation&lt;/code&gt;. Many projects these days use a form of &lt;a href="https://github.com/postcss/autoprefixer"&gt;Autoprefixer&lt;/a&gt; to automatically do this for you.&lt;/p&gt;

&lt;p&gt;Whenever you're in doubt about what CSS to use, you could check which approach works best in all browsers. Test your solution in Safari or Internet Explorer, or use &lt;a href="https://caniuse.com/"&gt;Caniuse&lt;/a&gt; to check if something is supported in all (or enough) browsers. If there is a clear difference, you'll have your answer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#maintainability"&gt;
  &lt;/a&gt;
  Maintainability
&lt;/h2&gt;

&lt;p&gt;From this point the reasoning becomes more subjective, and so I've stopped numbering them. Whatever floats your boat more.&lt;/p&gt;

&lt;p&gt;What if someone has to come back to your HTML/CSS and made some adjustments? Will that person be able to understand what's going on in the ruleset? Can they easily amend some of the HTML without the rules becoming invalid? Keep in mind, this person could be you! Think of the future when you write your CSS.&lt;/p&gt;

&lt;p&gt;For example, let's say your HTML structure looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Options&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want your options button to be aligned to the right within the nav, you could achieve that like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="nd"&gt;:first-child&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that would be completely fine! For now. If a developer comes back to this after a month or two and makes a slight tweak to the HTML, this CSS will not work anymore. &lt;br&gt;
Here's some HTML tweaking examples that break this CSS rule:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Blogs&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!-- Now this element is targeted --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Options&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!-- This is now the first child, and it has no sibling --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Options&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"company-logo"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"..."&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!-- Now this element is targeted --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Options&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Furthermore, it is not very easy to read. Instead, you could do this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"home-button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"options-button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Options&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="nc"&gt;.options-button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This CSS is much clearer to read (the &lt;code&gt;.options-button&lt;/code&gt; in the &lt;code&gt;nav&lt;/code&gt; should have space to the left). It is also unaffected if for example a wrapper &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; is added around the buttons, or if more menu items are added before it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#semantics"&gt;
  &lt;/a&gt;
  Semantics
&lt;/h2&gt;

&lt;p&gt;This is in my opinion the best way to settle 50/50 questions like: should I use &lt;code&gt;padding&lt;/code&gt; or &lt;code&gt;margin&lt;/code&gt;? Should the top element have &lt;code&gt;margin-bottom&lt;/code&gt; or should the bottom element have &lt;code&gt;margin-top&lt;/code&gt;? Let me explain what I mean.&lt;/p&gt;

&lt;p&gt;Let's take as an example a button containing some text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"example-button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;Click me!&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You could use either of these rulesets to achieve the same effect:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.example-button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.example-button&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Result:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Essej2/embed/mdBKrrG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;But which of these rules make more sense? Is it more logical that the button should always have 10px of breathing room on the inside, or that the div inside the button always has 10px of breathing room on the outside?&lt;/p&gt;

&lt;p&gt;A trick I like to use here is: &lt;em&gt;try to imagine there's another element in the equation&lt;/em&gt;. In this case, maybe the button has an icon before the text. In that case, is it more important that the button has the padding, or that the text has the margin? Then it seems more logical that the button should have padding.&lt;/p&gt;

&lt;p&gt;Let's look at another example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"example-header"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Beautiful header&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"example-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Lovely bit of text&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's say we want to add 20px of space between these elements. Do you give the &lt;code&gt;.example-header&lt;/code&gt; a &lt;code&gt;margin-bottom&lt;/code&gt;? Or the &lt;code&gt;.example-text&lt;/code&gt; a &lt;code&gt;margin-top&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;If we apply the same trick as before, we can for example imagine another paragraph before &lt;code&gt;.example-text&lt;/code&gt;. Would you want the 20px space to be between the two paragraphs, or between the header and the first paragraph? By looking at it this way it makes more sense to add the margin on the bottom of the header.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#less-is-more"&gt;
  &lt;/a&gt;
  Less is more
&lt;/h2&gt;

&lt;p&gt;Performance is important. Longer CSS means more bytes. More bytes means longer loading time. It's not the reasoning I use often, since the differences are often minimal and not as impactful as reducing your JavaScript code, but it's a valid reason to write &lt;code&gt;margin: 0 3px 6px 1px;&lt;/code&gt; instead of spelling out each individual property.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope this post will help you either make a decision on which CSS properties to use, or justify a decision that you've already made. I now leave it up to you to put these in your personal order of importance. Personally, I love semantics and I find myself often basing my CSS decisions on that rule, after checking for edge cases or browser support. However, I know preferences differ and I want everybody to write their CSS the way they want to. Just, keep this in the back of your mind üòâ.&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>design</category>
    </item>
  </channel>
</rss>
