<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Understanding Built In
 Angular Directives - Part 1</title>
      <author>Anubhab Mukherjee</author>
      <pubDate>Mon, 20 Dec 2021 07:51:45 +0000</pubDate>
      <link>https://dev.to/anubhab5/understanding-built-in-angular-directives-part-1-oln</link>
      <guid>https://dev.to/anubhab5/understanding-built-in-angular-directives-part-1-oln</guid>
      <description>&lt;p&gt;&lt;strong&gt;T&lt;/strong&gt;oday we will learn the built in directives Angular provides.&lt;br&gt;
Before diving in we need to understand what is a &lt;code&gt;directive&lt;/code&gt;.&lt;br&gt;
As per Angular' s definition -&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Directives are classes that add additional behavior to elements in your Angular applications&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So now lets break it into simpler words to understand. A normal HTML element/ tag like &lt;code&gt;ul li&lt;/code&gt; is used to show some text in bullet form. Eg.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
    &amp;lt;li&amp;gt;83&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;32&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;66&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;will only display the text like below &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hrx7IrXV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5kk9zclvxmpj8q3jn1q8.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hrx7IrXV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5kk9zclvxmpj8q3jn1q8.PNG" alt="Image description" width="127" height="66"&gt;&lt;/a&gt;&lt;br&gt;
It don't have any extra ability like adding CSS class or styles on the basis of a condition, show/ hide items on the basis of certain condition etc.&lt;br&gt;
To give the normal HTML element an extra power the Angular introduced the concept of Directive. It is a class that does all the trick/ magic internally/ behind the scene.&lt;/p&gt;

&lt;p&gt;So lets dive in to understand the various directives available in Angular.&lt;br&gt;
There are broadly three different types of directives - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Component Directive - (Will talk about it at the very end)&lt;/li&gt;
&lt;li&gt;Attribute Directive

&lt;ol&gt;
&lt;li&gt;ngClass&lt;/li&gt;
&lt;li&gt;ngStyle&lt;/li&gt;
&lt;li&gt;ngModel&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Structural Directive

&lt;ol&gt;
&lt;li&gt;ngIf&lt;/li&gt;
&lt;li&gt;ngFor&lt;/li&gt;
&lt;li&gt;ngSwitch&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;strong&gt;Attribute Directives&lt;/strong&gt;&lt;br&gt;
Directives that changes the behavior of HTML element's attributes on which it has been used. Behavior includes CSS style CSS class etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ngClass&lt;/strong&gt;&lt;br&gt;
This directive adds or removes CSS class on the element it has been added to on the basis of a condition.&lt;br&gt;
Lets see in practice.&lt;br&gt;
Lets create a project and create a component &lt;code&gt;attributeDirectiveDemo&lt;/code&gt;. If you are not familiar about angular component or how to create one, I would suggest you to go through the below link -&lt;br&gt;
&lt;a href="https://dev.to/anubhab5/creating-angular-component-129e"&gt;Creating_Angular_Component&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are different syntax of using ngClass directive&lt;/p&gt;



&lt;p&gt;a. &lt;strong&gt;Directly passing class name to the ngClass directive&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;[ngClass]="'&amp;lt;class name&amp;gt;'"&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;Step1&lt;/strong&gt; Add CSS classes to the css file&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gNyLS9sY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xe0soyxxf4lkhhyovm2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gNyLS9sY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xe0soyxxf4lkhhyovm2.PNG" alt="Image description" width="468" height="146"&gt;&lt;/a&gt;&lt;br&gt;
In the file showed with arrow in the above image lets put the below CSS code -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.success {
  color: green;
}

.error {
  color: red;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are two simple CSS classes named &lt;code&gt;success&lt;/code&gt;and &lt;code&gt;error&lt;/code&gt;. When success class is used it will color the text green. While the error class will color the text with red.&lt;br&gt;
&lt;strong&gt;Step2&lt;/strong&gt; Use the directive in the template/ HTML file&lt;br&gt;
Now lets open the html file and paste the below code -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div [ngClass]="'success'"&amp;gt;Server One&amp;lt;/div&amp;gt;
&amp;lt;div [ngClass]="'error'"&amp;gt;Server Two&amp;lt;/div&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the application and once you navigate to localhost:4200 you will see the below output -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0jfqWo7N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ldhqox6z9chxiryelbxq.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0jfqWo7N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ldhqox6z9chxiryelbxq.PNG" alt="Image description" width="293" height="122"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now lets understand the code we wrote in html file.&lt;br&gt;
All the attribute directives are written inside a &lt;code&gt;[]&lt;/code&gt; Square Bracket. The directive name is placed inside the square bracket. Then the equal &lt;code&gt;=&lt;/code&gt; operator comes followed by the class name. The class name &lt;code&gt;success&lt;/code&gt;/ &lt;code&gt;error&lt;/code&gt;is enclosed in double quotes &lt;code&gt;"&lt;/code&gt; and single quote &lt;code&gt;'&lt;/code&gt;. &lt;br&gt;
Here the order of quotes is not important. You can also use&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div [ngClass]='"success"'&amp;gt;Server One&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But you should not be writing like below code -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zIudHmgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xs97p9h7090l1xaskkus.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zIudHmgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xs97p9h7090l1xaskkus.PNG" alt="Image description" width="731" height="61"&gt;&lt;/a&gt;&lt;br&gt;
If you just use a pair of double quotes and write the class name inside it like below -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div [ngClass]="success"&amp;gt;Server One&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then Angular will think success as a variable/ property present in the component ts file and will throw error and not work as expected. &lt;/p&gt;




&lt;p&gt;b. &lt;strong&gt;Applying a CSS class on the basis of a condition&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[ngClass]="{ &amp;lt;class_name&amp;gt;: &amp;lt;condition&amp;gt; }"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step1&lt;/strong&gt;&lt;br&gt;
Now, lets open the component typescript file and add a variable&lt;br&gt;
&lt;code&gt;serverOneStatus&lt;/code&gt; and initialize it with the value &lt;strong&gt;up&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hieK6hJc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbb9j8tz6tymdu1k3c4l.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hieK6hJc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbb9j8tz6tymdu1k3c4l.PNG" alt="Image description" width="787" height="146"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Step2&lt;/strong&gt;&lt;br&gt;
Now, lets open the component html file and type in the below code -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div [ngClass]="{ success: serverOneStatus === 'up' }"&amp;gt;Server One&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now once you open the application in browser you will see the below output. The text is becoming green so the success class is getting correctly applied.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OrV_w5QM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/463b1gy8beo17lgudmv8.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OrV_w5QM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/463b1gy8beo17lgudmv8.PNG" alt="Image description" width="305" height="134"&gt;&lt;/a&gt;&lt;br&gt;
So, here in the above code we are checking if the variable &lt;code&gt;serverOneStatus&lt;/code&gt; has a value of &lt;u&gt;up&lt;/u&gt; (Remember we initialized the variable serverOneStatus in the TS file with the value up) i.e. the condition evaluates to true then the corresponding CSS class &lt;code&gt;success&lt;/code&gt; will be applied else the CSS class wont be applied.&lt;/p&gt;



&lt;p&gt;c. &lt;strong&gt;Applying Multiple Condition&lt;/strong&gt;&lt;br&gt;
We can also pass multiple condition to ngClass directive&lt;br&gt;
&lt;code&gt;[ngClass]="{&lt;br&gt;
    &amp;lt;Class_1&amp;gt;: &amp;lt;Condition_1&amp;gt;,&lt;br&gt;
    &amp;lt;Class_2&amp;gt;: &amp;lt;Condition_2&amp;gt;&lt;br&gt;
  }"&lt;/code&gt;&lt;br&gt;
So, here we are adding one more class along with the condition separated by a &lt;code&gt;,&lt;/code&gt;. Depending on which condition evaluates to true the corresponding class will be applied. If both the condition results to true then both the class will be applied.&lt;br&gt;
Lets see how it can be implemented in our code -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div
  [ngClass]="{
    success: serverOneStatus === 'up',
    error: serverOneStatus === 'down'
  }"
&amp;gt;
  Server One
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So here we added an extra class and an extra condition &lt;br&gt;
&lt;code&gt;error: serverOneStatus === 'down'&lt;/code&gt;&lt;br&gt;
Now lets understand the whole stuff - if the variable &lt;code&gt;serverOneStatus&lt;/code&gt; has a value &lt;code&gt;up&lt;/code&gt; then the success class will be appended and if the variable holds a value &lt;code&gt;down&lt;/code&gt; then the error class will be appended to the element on which ngClass is used, here in this case &lt;code&gt;div&lt;/code&gt;.&lt;/p&gt;



&lt;p&gt;d. &lt;strong&gt;Passing Ternary operator to ngClass&lt;/strong&gt;&lt;br&gt;
We can also pass condition by using ternary operator.&lt;br&gt;
&lt;code&gt;[ngClass]="&amp;lt;codition&amp;gt; ? &amp;lt;'Class_Name1'&amp;gt; : &amp;lt;'Class_Name2'&amp;gt;"&lt;/code&gt;&lt;br&gt;
So, now lets open the component html file and add the below code -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div [ngClass]="serverOneStatus == 'up' ? 'success' : 'error'"&amp;gt;Server One&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are passing a ternary operator. We are checking a condition if the condition &lt;code&gt;serverOneStatus == 'up'&lt;/code&gt; evaluates to true then the success class will be appended else error.&lt;/p&gt;

&lt;p&gt;Now if you see in browser you will see the text is colored green.&lt;/p&gt;

&lt;p&gt;That's all in this part.&lt;br&gt;
In this section we learnt the basic concept of directives, different built-in directives available in Angular and ngClass in detail.&lt;br&gt;
Will cover the remaining directives in the upcoming posts.&lt;br&gt;
Stay Tuned...&lt;br&gt;
If you liked the post do like and comment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cheers&lt;/strong&gt;!!!&lt;br&gt;
&lt;em&gt;Happy Coding&lt;/em&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>directives</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>JavaScript Array Methods</title>
      <author>Nasirul Islam</author>
      <pubDate>Mon, 20 Dec 2021 07:31:44 +0000</pubDate>
      <link>https://dev.to/nasirulislam/javascript-array-methods-2n59</link>
      <guid>https://dev.to/nasirulislam/javascript-array-methods-2n59</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-the-array-method-in-javascript"&gt;
  &lt;/a&gt;
  What is the array method in JavaScript?
&lt;/h2&gt;

&lt;p&gt;Array method in JavaScript is some of the built-in functions of JavaScript. Which we can apply to an array. Each method has different functions and features. Using which we can perform various tasks on an array. This saves us from having to write simple functions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;These are the array methods of JavaScript:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mAeebO_b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3kd41rkjg2lazl24q6cr.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mAeebO_b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3kd41rkjg2lazl24q6cr.jpeg" alt="Image description" width="880" height="489"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concat"&gt;
  &lt;/a&gt;
  concat():
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;concat()&lt;/strong&gt; method is used to add two or more arrays. It does not change the existing array, but creates a new array and returns a copy of that array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array1 = ['a', 'b', 'c'];
const array2 = ['d', 'e', 'f'];
const array3 = array1.concat(array2);
console.log(array3);
// expected output: Array ["a", "b", "c", "d", "e", "f"]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#filter"&gt;
  &lt;/a&gt;
  filter():
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;filter()&lt;/strong&gt; method creates a new array with each element of an array, with the elements that meet the conditions inside the function. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];

const result = words.filter(word =&amp;gt; word.length &amp;gt; 6);

console.log(result);
// expected output: Array ["exuberant", "destruction", "present"]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#find"&gt;
  &lt;/a&gt;
  find():
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;find()&lt;/strong&gt; method returns the value of the first element of an array by comparing it with each element of an array. The element that meets the conditions inside the function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array1 = [5, 12, 8, 130, 44];

const found = array1.find(element =&amp;gt; element &amp;gt; 10);

console.log(found);
// expected output: 12

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#findindex"&gt;
  &lt;/a&gt;
  findIndex():
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;findIndex()&lt;/strong&gt; method gives the index number of the first element of an array by comparing it with each element of an array. The component that meets the conditions inside the function. Otherwise, it returns -1, indicating that no element met the condition.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array1 = [5, 12, 8, 9, 140, 130, 44];

const isLargeNumber = (element) =&amp;gt; element &amp;gt; 13;

console.log(array1.findIndex(isLargeNumber));
// expected output: 4

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#foreach"&gt;
  &lt;/a&gt;
  forEach():
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;forEach()&lt;/strong&gt; method calls a function once for each element of an array, and the function returns one element at a time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array1 = ['a', 'b', 'c'];

array1.forEach(element =&amp;gt; console.log(element));

// expected output: "a"
// expected output: "b"
// expected output: "c"

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#includes"&gt;
  &lt;/a&gt;
  includes():
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;includes()&lt;/strong&gt; method checks an array to see if it contains that specific element. And it returns true or false.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array1 = [1, 2, 3];
console.log(array1.includes(2));
// expected output: true
const pets = ['cat', 'dog', 'bat'];
console.log(pets.includes('cat'));
// expected output: true
console.log(pets.includes('at'));
// expected output: false

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#indexof"&gt;
  &lt;/a&gt;
  indexOf():
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;indexOf()&lt;/strong&gt; method returns the first index of the specified element in the array, otherwise returns -1 if it is not found.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const beasts = ['ant', 'bison', 'camel', 'duck', 'bison'];

console.log(beasts.indexOf('bison'));
// expected output: 1

console.log(beasts.indexOf('giraffe'));
// expected output: -1

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#pop"&gt;
  &lt;/a&gt;
  pop():
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;pop()&lt;/strong&gt; method removes the last element from an array and returns that element. And forms a new array with the rest of the elements except the last one. This method changes the length of the array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const plants = ['broccoli', 'cauliflower', 'cabbage', 'kale', 'tomato'];

console.log(plants.pop());
// expected output: "tomato"

console.log(plants);
// expected output: Array ["broccoli", "cauliflower", "cabbage", "kale"]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#shift"&gt;
  &lt;/a&gt;
  shift():
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;shift()&lt;/strong&gt; method removes the first element from an array and returns that removed element. And forms a new array with all the other elements except the first one. This method changes the length of the array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array1 = [1, 2, 3];

console.log(array1.shift());
// expected output: 1

console.log(array1);
// expected output: Array [2, 3]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#push"&gt;
  &lt;/a&gt;
  push():
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;push()&lt;/strong&gt; method adds new elements to the end of an array, forms a new array with the element at the end, and returns a new length. This method changes the length of the array. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const animals = ['pigs', 'goats', 'sheep'];

console.log(animals);
// expected output: Array ["pigs", "goats", "sheep"]

animals.push('chickens', 'cats', 'dogs');
console.log(animals);
// expected output: Array ["pigs", "goats", "sheep", "chickens", "cats", "dogs"]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#unshift"&gt;
  &lt;/a&gt;
  unshift():
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;unshift()&lt;/strong&gt; method adds one or more new elements to the beginning of an array, forms a new array with the first elements, and returns a new length. This method changes the length of the array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array1 = [1, 2, 3];

console.log(array1);
// expected output: Array [1, 2, 3]

array1.unshift(4, 5)

console.log(array1);
// expected output: Array [4, 5, 1, 2, 3]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;From this tutorial, we have learned some common array methods. Part-2 will come soon with more details of the Array Method.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/"&gt;MDN Web Docs&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/"&gt;W3Schools Web Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Reach out to me on:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nasirul-islam.netlify.app/"&gt;Portfolio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nasirul-Islam"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/nasirul866/"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>array</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Tailwind CSS buttons collection including gradients and colored shadows</title>
      <author>Zoltán Szőgyényi</author>
      <pubDate>Mon, 20 Dec 2021 07:25:41 +0000</pubDate>
      <link>https://dev.to/zolidev/tailwind-css-buttons-collection-including-gradients-and-colored-shadows-kb5</link>
      <guid>https://dev.to/zolidev/tailwind-css-buttons-collection-including-gradients-and-colored-shadows-kb5</guid>
      <description>&lt;p&gt;I'd like to show you a couple of &lt;a href="https://flowbite.com/docs/components/buttons/"&gt;Tailwind CSS buttons&lt;/a&gt; that I've built together with my friends for the Flowbite library.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E0km-K-C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/images/december2021/Screenshot%25202021-12-17%2520at%252016.17.02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E0km-K-C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/images/december2021/Screenshot%25202021-12-17%2520at%252016.17.02.png" alt="Tailwind CSS buttons from Flowbite" width="880" height="484"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These examples are extracted from the official documentation and you'll find many variaties of buttons with styles including gradients, colored shadows, payment buttons, social login buttons, and more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#default-button"&gt;
  &lt;/a&gt;
  Default button
&lt;/h2&gt;

&lt;p&gt;Use these default button styles with multiple colors to indicate an action or link within your website.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"&amp;gt;Default&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="py-2 px-4 mr-2 mb-2 text-sm font-medium text-gray-900 bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700"&amp;gt;Alternative&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-gray-800 hover:bg-gray-900 focus:ring-4 focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:bg-gray-800 dark:hover:bg-gray-700 dark:focus:ring-gray-800 dark:border-gray-700"&amp;gt;Dark&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-gray-900 bg-white border border-gray-300 hover:bg-gray-100 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:bg-gray-600 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-700 dark:focus:ring-gray-800"&amp;gt;Light&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800"&amp;gt;Green&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900"&amp;gt;Red&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-yellow-400 hover:bg-yellow-500 focus:ring-4 focus:ring-yellow-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:focus:ring-yellow-900"&amp;gt;Yellow&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mb-2 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900"&amp;gt;Purple&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#button-pills"&gt;
  &lt;/a&gt;
  Button pills
&lt;/h2&gt;

&lt;p&gt;The button pills can be used as an alternative style by using fully rounded edges.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-full text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"&amp;gt;Default&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="py-2 px-4 mr-2 mb-2 text-sm font-medium text-gray-900 bg-white rounded-full border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700"&amp;gt;Alternative&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-gray-800 hover:bg-gray-900 focus:ring-4 focus:ring-gray-300 font-medium rounded-full text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:bg-gray-800 dark:hover:bg-gray-700 dark:focus:ring-gray-800 dark:border-gray-700"&amp;gt;Dark&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-gray-900 bg-white border border-gray-300 hover:bg-gray-100 focus:ring-4 focus:ring-blue-300 font-medium rounded-full text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:bg-gray-600 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-700 dark:focus:ring-gray-800"&amp;gt;Light&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-full text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800"&amp;gt;Green&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-full text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900"&amp;gt;Red&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-yellow-400 hover:bg-yellow-500 focus:ring-4 focus:ring-yellow-300 font-medium rounded-full text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:focus:ring-yellow-900"&amp;gt;Yellow&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-full text-sm px-5 py-2.5 text-center mb-2 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900"&amp;gt;Purple&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#gradient-monochrome"&gt;
  &lt;/a&gt;
  Gradient monochrome
&lt;/h2&gt;

&lt;p&gt;These beautifully colored buttons built with the gradient color stops utility classes from Tailwind CSS can be used as a creative alternative to the default button styles.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button" class="text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Blue&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-gradient-to-r from-green-400 via-green-500 to-green-600 hover:bg-gradient-to-br focus:ring-4 focus:ring-green-300 dark:focus:ring-green-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Green&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-gradient-to-r from-cyan-400 via-cyan-500 to-cyan-600 hover:bg-gradient-to-br focus:ring-4 focus:ring-cyan-300 dark:focus:ring-cyan-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Cyan&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-gradient-to-r from-teal-400 via-teal-500 to-teal-600 hover:bg-gradient-to-br focus:ring-4 focus:ring-teal-300 dark:focus:ring-teal-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Teal&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-gray-900 bg-gradient-to-r from-lime-200 via-lime-400 to-lime-500 hover:bg-gradient-to-br focus:ring-4 focus:ring-lime-300 dark:focus:ring-lime-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Lime&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-gradient-to-r from-red-400 via-red-500 to-red-600 hover:bg-gradient-to-br focus:ring-4 focus:ring-red-300 dark:focus:ring-red-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Red&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-gradient-to-r from-pink-400 via-pink-500 to-pink-600 hover:bg-gradient-to-br focus:ring-4 focus:ring-pink-300 dark:focus:ring-pink-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Pink&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Purple&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#gradient-duotone"&gt;
  &lt;/a&gt;
  Gradient duotone
&lt;/h2&gt;

&lt;p&gt;These buttons use a style that includes two contrasted colors creating an impressive mesh gradient effect.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button" class="text-white bg-gradient-to-br from-purple-600 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Purple to Blue&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-gradient-to-r from-cyan-500 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:ring-cyan-300 dark:focus:ring-cyan-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Cyan to Blue&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-gradient-to-br from-green-400 to-blue-600 hover:bg-gradient-to-bl focus:ring-4 focus:ring-green-200 dark:focus:ring-green-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Green to Blue&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-gradient-to-r from-purple-500 to-pink-500 hover:bg-gradient-to-l focus:ring-4 focus:ring-purple-200 dark:focus:ring-purple-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Purple to Pink&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:ring-pink-200 dark:focus:ring-pink-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Pink to Orange&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-gray-900 bg-gradient-to-r from-teal-200 to-lime-200 hover:bg-gradient-to-l hover:from-teal-200 hover:to-lime-200 focus:ring-4 focus:ring-lime-200 dark:focus:ring-teal-700 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Teal to Lime&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-gray-900 bg-gradient-to-r from-red-200 via-red-300 to-yellow-200 hover:bg-gradient-to-bl focus:ring-4 focus:ring-red-100 dark:focus:ring-red-400 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Red to Yellow&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#gradient-outline"&gt;
  &lt;/a&gt;
  Gradient outline
&lt;/h2&gt;

&lt;p&gt;This is a special button style that incorporates a gradient color for the outline that can be used as a secondary style to the fully colored gradient buttons.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button class="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-600 to-blue-500 group-hover:from-purple-600 group-hover:to-blue-500 hover:text-white dark:text-white focus:ring-4 focus:ring-blue-300 dark:focus:ring-blue-800"&amp;gt;
  &amp;lt;span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0"&amp;gt;
      Purple to blue
  &amp;lt;/span&amp;gt;
&amp;lt;/button&amp;gt;
&amp;lt;button class="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-cyan-500 to-blue-500 group-hover:from-cyan-500 group-hover:to-blue-500 hover:text-white dark:text-white focus:ring-4 focus:ring-cyan-200 dark:focus:ring-cyan-800"&amp;gt;
  &amp;lt;span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0"&amp;gt;
      Cyan to blue
  &amp;lt;/span&amp;gt;
&amp;lt;/button&amp;gt;
&amp;lt;button class="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-green-400 to-blue-600 group-hover:from-green-400 group-hover:to-blue-600 hover:text-white dark:text-white focus:ring-4 focus:ring-green-200 dark:focus:ring-green-800"&amp;gt;
  &amp;lt;span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0"&amp;gt;
      Green to blue
  &amp;lt;/span&amp;gt;
&amp;lt;/button&amp;gt;
&amp;lt;button class="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-500 to-pink-500 group-hover:from-purple-500 group-hover:to-pink-500 hover:text-white dark:text-white focus:ring-4 focus:ring-purple-200 dark:focus:ring-purple-800"&amp;gt;
  &amp;lt;span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0"&amp;gt;
      Purple to pink
  &amp;lt;/span&amp;gt;
&amp;lt;/button&amp;gt;
&amp;lt;button class="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-pink-500 to-orange-400 group-hover:from-pink-500 group-hover:to-orange-400 hover:text-white dark:text-white focus:ring-4 focus:ring-pink-200 dark:focus:ring-pink-800"&amp;gt;
  &amp;lt;span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0"&amp;gt;
      Pink to orange
  &amp;lt;/span&amp;gt;
&amp;lt;/button&amp;gt;
&amp;lt;button class="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-teal-300 to-lime-300 group-hover:from-teal-300 group-hover:to-lime-300 dark:text-white dark:hover:text-gray-900 focus:ring-4 focus:ring-lime-200 dark:focus:ring-lime-800"&amp;gt;
  &amp;lt;span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0"&amp;gt;
      Teal to Lime
  &amp;lt;/span&amp;gt;
&amp;lt;/button&amp;gt;
  &amp;lt;button class="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-red-200 via-red-300 to-yellow-200 group-hover:from-red-200 group-hover:via-red-300 group-hover:to-yellow-200 dark:text-white dark:hover:text-gray-900 focus:ring-4 focus:ring-red-100 dark:focus:ring-red-400"&amp;gt;
  &amp;lt;span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0"&amp;gt;
      Red to Yellow
  &amp;lt;/span&amp;gt;
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#colored-shadows"&gt;
  &lt;/a&gt;
  Colored shadows
&lt;/h2&gt;

&lt;p&gt;These beautiful button elements with color shadows can be used since the release of Tailwind v3.0.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button" class="text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-blue-300 dark:focus:ring-blue-800 shadow-lg shadow-blue-500/50 dark:shadow-lg dark:shadow-blue-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 "&amp;gt;Blue&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-gradient-to-r from-green-400 via-green-500 to-green-600 hover:bg-gradient-to-br focus:ring-4 focus:ring-green-300 dark:focus:ring-green-800 shadow-lg shadow-green-500/50 dark:shadow-lg dark:shadow-green-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Green&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-gradient-to-r from-cyan-400 via-cyan-500 to-cyan-600 hover:bg-gradient-to-br focus:ring-4 focus:ring-cyan-300 dark:focus:ring-cyan-800 shadow-lg shadow-cyan-500/50 dark:shadow-lg dark:shadow-cyan-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Cyan&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-gradient-to-r from-teal-400 via-teal-500 to-teal-600 hover:bg-gradient-to-br focus:ring-4 focus:ring-teal-300 dark:focus:ring-teal-800 shadow-lg shadow-teal-500/50 dark:shadow-lg dark:shadow-teal-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Teal&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-gray-900 bg-gradient-to-r from-lime-200 via-lime-400 to-lime-500 hover:bg-gradient-to-br focus:ring-4 focus:ring-lime-300 dark:focus:ring-lime-800 shadow-lg shadow-lime-500/50 dark:shadow-lg dark:shadow-lime-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Lime&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-gradient-to-r from-red-400 via-red-500 to-red-600 hover:bg-gradient-to-br focus:ring-4 focus:ring-red-300 dark:focus:ring-red-800 shadow-lg shadow-red-500/50 dark:shadow-lg dark:shadow-red-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Red&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-gradient-to-r from-pink-400 via-pink-500 to-pink-600 hover:bg-gradient-to-br focus:ring-4 focus:ring-pink-300 dark:focus:ring-pink-800 shadow-lg shadow-pink-500/50 dark:shadow-lg dark:shadow-pink-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Pink&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"&amp;gt;Purple&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#social-buttons"&gt;
  &lt;/a&gt;
  Social buttons
&lt;/h2&gt;

&lt;p&gt;Use these button styles when building social media login forms using Facebook, Twitter, GitHub, Google, and Apple. These buttons use the new &lt;code&gt;bg-[#hex]&lt;/code&gt; utility classses from Tailwind CSS v3.0.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button" class="text-white bg-[#3b5998] hover:bg-[#3b5998]/90 focus:ring-4 focus:ring-[#3b5998]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-[#3b5998]/55 mr-2 mb-2"&amp;gt;
  &amp;lt;svg class="mr-2 -ml-1 w-4 h-4" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="facebook-f" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"&amp;gt;&amp;lt;path fill="currentColor" d="M279.1 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.4 0 225.4 0c-73.22 0-121.1 44.38-121.1 124.7v70.62H22.89V288h81.39v224h100.2V288z"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;
  Sign in with Facebook
&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-[#1da1f2] hover:bg-[#1da1f2]/90 focus:ring-4 focus:ring-[#1da1f2]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-[#1da1f2]/55 mr-2 mb-2"&amp;gt;
  &amp;lt;svg class="mr-2 -ml-1 w-4 h-4" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="twitter" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"&amp;gt;&amp;lt;path fill="currentColor" d="M459.4 151.7c.325 4.548 .325 9.097 .325 13.65 0 138.7-105.6 298.6-298.6 298.6-59.45 0-114.7-17.22-161.1-47.11 8.447 .974 16.57 1.299 25.34 1.299 49.06 0 94.21-16.57 130.3-44.83-46.13-.975-84.79-31.19-98.11-72.77 6.498 .974 12.99 1.624 19.82 1.624 9.421 0 18.84-1.3 27.61-3.573-48.08-9.747-84.14-51.98-84.14-102.1v-1.299c13.97 7.797 30.21 12.67 47.43 13.32-28.26-18.84-46.78-51.01-46.78-87.39 0-19.49 5.197-37.36 14.29-52.95 51.65 63.67 129.3 105.3 216.4 109.8-1.624-7.797-2.599-15.92-2.599-24.04 0-57.83 46.78-104.9 104.9-104.9 30.21 0 57.5 12.67 76.67 33.14 23.72-4.548 46.46-13.32 66.6-25.34-7.798 24.37-24.37 44.83-46.13 57.83 21.12-2.273 41.58-8.122 60.43-16.24-14.29 20.79-32.16 39.31-52.63 54.25z"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;
  Sign in with Twitter
&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-[#24292F] hover:bg-[#24292F]/90 focus:ring-4 focus:ring-[#24292F]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-gray-500 dark:hover:bg-[#050708]/30 mr-2 mb-2"&amp;gt;
  &amp;lt;svg class="mr-2 -ml-1 w-4 h-4" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="github" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512"&amp;gt;&amp;lt;path fill="currentColor" d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3 .3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5 .3-6.2 2.3zm44.2-1.7c-2.9 .7-4.9 2.6-4.6 4.9 .3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3 .7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3 .3 2.9 2.3 3.9 1.6 1 3.6 .7 4.3-.7 .7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3 .7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3 .7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;
  Sign in with Github
&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-[#4285F4] hover:bg-[#4285F4]/90 focus:ring-4 focus:ring-[#4285F4]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-[#4285F4]/55 mr-2 mb-2"&amp;gt;
  &amp;lt;svg class="mr-2 -ml-1 w-4 h-4" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="google" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 488 512"&amp;gt;&amp;lt;path fill="currentColor" d="M488 261.8C488 403.3 391.1 504 248 504 110.8 504 0 393.2 0 256S110.8 8 248 8c66.8 0 123 24.5 166.3 64.9l-67.5 64.9C258.5 52.6 94.3 116.6 94.3 256c0 86.5 69.1 156.6 153.7 156.6 98.2 0 135-70.4 140.8-106.9H248v-85.3h236.1c2.3 12.7 3.9 24.9 3.9 41.4z"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;
  Sign in with Google
&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-[#050708] hover:bg-[#050708]/90 focus:ring-4 focus:ring-[#050708]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-[#050708]/50 dark:hover:bg-[#050708]/30 mr-2 mb-2"&amp;gt;
  &amp;lt;svg class="mr-2 -ml-1 w-5 h-5" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="apple" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"&amp;gt;&amp;lt;path fill="currentColor" d="M318.7 268.7c-.2-36.7 16.4-64.4 50-84.8-18.8-26.9-47.2-41.7-84.7-44.6-35.5-2.8-74.3 20.7-88.5 20.7-15 0-49.4-19.7-76.4-19.7C63.3 141.2 4 184.8 4 273.5q0 39.3 14.4 81.2c12.8 36.7 59 126.7 107.2 125.2 25.2-.6 43-17.9 75.8-17.9 31.8 0 48.3 17.9 76.4 17.9 48.6-.7 90.4-82.5 102.6-119.3-65.2-30.7-61.7-90-61.7-91.9zm-56.6-164.2c27.3-32.4 24.8-61.9 24-72.5-24.1 1.4-52 16.4-67.9 34.9-17.5 19.8-27.8 44.3-25.6 71.9 26.1 2 49.9-11.4 69.5-34.3z"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;
  Sign in with Apple
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#payment-buttons"&gt;
  &lt;/a&gt;
  Payment buttons
&lt;/h2&gt;

&lt;p&gt;Use these payment buttons for your product checkout or NFT minting landing page including MetaMask, Bitcoin, Ethereum, Paypal, Visa, Mastercard, and American Express.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button" class="text-gray-900 bg-white hover:bg-gray-100 border border-gray-200 focus:ring-4 focus:ring-gray-100 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-gray-600 dark:bg-gray-800 dark:border-gray-700 dark:text-white dark:hover:bg-gray-700 mr-2 mb-2"&amp;gt;
  &amp;lt;svg class="mr-2 -ml-1 w-6 h-5" viewBox="0 0 2405 2501" fill="none" xmlns="http://www.w3.org/2000/svg"&amp;gt; &amp;lt;g clip-path="url(#clip0_1512_1323)"&amp;gt; &amp;lt;path d="M2278.79 1730.86L2133.62 2221.69L1848.64 2143.76L2278.79 1730.86Z" fill="#E4761B" stroke="#E4761B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1848.64 2143.76L2123.51 1767.15L2278.79 1730.86L1848.64 2143.76Z" fill="#E4761B" stroke="#E4761B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M2065.2 1360.79L2278.79 1730.86L2123.51 1767.15L2065.2 1360.79ZM2065.2 1360.79L2202.64 1265.6L2278.79 1730.86L2065.2 1360.79Z" fill="#F6851B" stroke="#F6851B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1890.29 1081.17L2285.34 919.338L2265.7 1007.99L1890.29 1081.17ZM2253.21 1114.48L1890.29 1081.17L2265.7 1007.99L2253.21 1114.48Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M2253.21 1114.48L2202.64 1265.6L1890.29 1081.17L2253.21 1114.48ZM2332.34 956.82L2265.7 1007.99L2285.34 919.338L2332.34 956.82ZM2253.21 1114.48L2265.7 1007.99L2318.65 1052.01L2253.21 1114.48Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1542.24 2024.17L1641 2055.7L1848.64 2143.75L1542.24 2024.17Z" fill="#E2761B" stroke="#E2761B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M2202.64 1265.6L2253.21 1114.48L2296.64 1147.8L2202.64 1265.6ZM2202.64 1265.6L1792.71 1130.55L1890.29 1081.17L2202.64 1265.6Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1987.86 617.696L1890.29 1081.17L1792.71 1130.55L1987.86 617.696Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M2285.34 919.338L1890.29 1081.17L1987.86 617.696L2285.34 919.338Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1987.86 617.696L2400.16 570.1L2285.34 919.338L1987.86 617.696Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M2202.64 1265.6L2065.2 1360.79L1792.71 1130.55L2202.64 1265.6Z" fill="#F6851B" stroke="#F6851B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M2382.31 236.33L2400.16 570.1L1987.86 617.696L2382.31 236.33Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M2382.31 236.33L1558.3 835.45L1547.59 429.095L2382.31 236.33Z" fill="#E2761B" stroke="#E2761B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M934.789 380.309L1547.59 429.095L1558.3 835.449L934.789 380.309Z" fill="#F6851B" stroke="#F6851B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1792.71 1130.55L1558.3 835.449L1987.86 617.696L1792.71 1130.55Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1792.71 1130.55L2065.2 1360.79L1682.65 1403.04L1792.71 1130.55Z" fill="#E4761B" stroke="#E4761B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1682.65 1403.04L1558.3 835.449L1792.71 1130.55L1682.65 1403.04Z" fill="#E4761B" stroke="#E4761B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1987.86 617.696L1558.3 835.45L2382.31 236.33L1987.86 617.696Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M940.144 2134.24L1134.69 2337.11L869.939 2096.16L940.144 2134.24Z" fill="#C0AD9E" stroke="#C0AD9E" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1848.64 2143.75L1940.86 1793.33L2123.51 1767.15L1848.64 2143.75Z" fill="#CD6116" stroke="#CD6116" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M151.234 1157.92L487.978 803.917L194.666 1115.67L151.234 1157.92Z" fill="#E2761B" stroke="#E2761B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M2123.51 1767.15L1940.86 1793.33L2065.2 1360.79L2123.51 1767.15ZM1558.3 835.449L1230.48 824.74L934.789 380.309L1558.3 835.449Z" fill="#F6851B" stroke="#F6851B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M2065.2 1360.79L1940.86 1793.33L1930.74 1582.12L2065.2 1360.79Z" fill="#E4751F" stroke="#E4751F" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1682.65 1403.04L2065.2 1360.79L1930.74 1582.12L1682.65 1403.04Z" fill="#CD6116" stroke="#CD6116" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1230.48 824.74L1558.3 835.449L1682.65 1403.04L1230.48 824.74Z" fill="#F6851B" stroke="#F6851B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1230.48 824.74L345.784 6.08252L934.79 380.309L1230.48 824.74ZM934.195 2258.58L165.513 2496.56L12.0146 1910.53L934.195 2258.58Z" fill="#E4761B" stroke="#E4761B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M265.465 1304.27L555.803 1076.41L799.14 1132.93L265.465 1304.27Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M799.139 1132.93L555.803 1076.41L686.098 538.567L799.139 1132.93Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M194.666 1115.67L555.803 1076.41L265.465 1304.27L194.666 1115.67Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1930.74 1582.12L1780.81 1506.56L1682.65 1403.04L1930.74 1582.12Z" fill="#CD6116" stroke="#CD6116" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M194.666 1115.67L169.083 980.618L555.803 1076.41L194.666 1115.67Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1749.88 1676.72L1780.81 1506.56L1930.74 1582.12L1749.88 1676.72Z" fill="#233447" stroke="#233447" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1940.86 1793.33L1749.88 1676.72L1930.74 1582.12L1940.86 1793.33Z" fill="#F6851B" stroke="#F6851B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M555.803 1076.41L169.082 980.618L137.55 866.982L555.803 1076.41ZM686.098 538.567L555.803 1076.41L137.55 866.982L686.098 538.567ZM686.098 538.567L1230.48 824.74L799.139 1132.93L686.098 538.567Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M799.14 1132.93L1230.48 824.74L1422.65 1411.96L799.14 1132.93ZM1422.65 1411.96L826.508 1399.47L799.14 1132.93L1422.65 1411.96Z" fill="#E4761B" stroke="#E4761B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M265.465 1304.27L799.14 1132.93L826.508 1399.47L265.465 1304.27ZM1682.65 1403.04L1422.65 1411.96L1230.48 824.74L1682.65 1403.04Z" fill="#F6851B" stroke="#F6851B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1780.81 1506.56L1749.88 1676.72L1682.65 1403.04L1780.81 1506.56Z" fill="#CD6116" stroke="#CD6116" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M345.784 6.08252L1230.48 824.74L686.098 538.567L345.784 6.08252Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M12.0146 1910.53L758.088 1879.59L934.195 2258.58L12.0146 1910.53Z" fill="#E4761B" stroke="#E4761B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M934.194 2258.58L758.088 1879.59L1124.58 1861.75L934.194 2258.58Z" fill="#CD6116" stroke="#CD6116" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1749.88 1676.72L1940.86 1793.33L2046.16 2041.42L1749.88 1676.72ZM826.508 1399.47L12.0146 1910.53L265.465 1304.27L826.508 1399.47ZM758.088 1879.59L12.0146 1910.53L826.508 1399.47L758.088 1879.59ZM1682.65 1403.04L1731.43 1580.33L1495.83 1594.02L1682.65 1403.04ZM1495.83 1594.02L1422.65 1411.96L1682.65 1403.04L1495.83 1594.02Z" fill="#F6851B" stroke="#F6851B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1134.69 2337.11L934.194 2258.58L1631.48 2375.79L1134.69 2337.11Z" fill="#C0AD9E" stroke="#C0AD9E" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M265.465 1304.27L151.234 1157.91L194.666 1115.67L265.465 1304.27Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1710.61 2288.92L1631.48 2375.79L934.194 2258.58L1710.61 2288.92Z" fill="#D7C1B3" stroke="#D7C1B3" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1748.09 2075.93L934.194 2258.58L1124.58 1861.75L1748.09 2075.93Z" fill="#E4761B" stroke="#E4761B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M934.194 2258.58L1748.09 2075.93L1710.61 2288.92L934.194 2258.58Z" fill="#D7C1B3" stroke="#D7C1B3" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M137.55 866.982L110.777 409.462L686.098 538.567L137.55 866.982ZM194.665 1115.67L115.536 1035.35L169.082 980.618L194.665 1115.67Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1289.38 1529.76L1422.65 1411.96L1403.61 1699.92L1289.38 1529.76Z" fill="#CD6116" stroke="#CD6116" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1422.65 1411.96L1289.38 1529.76L1095.43 1630.31L1422.65 1411.96Z" fill="#CD6116" stroke="#CD6116" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M2046.16 2041.42L2009.87 2014.65L1749.88 1676.72L2046.16 2041.42Z" fill="#F6851B" stroke="#F6851B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1095.43 1630.31L826.508 1399.47L1422.65 1411.96L1095.43 1630.31Z" fill="#CD6116" stroke="#CD6116" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1403.61 1699.92L1422.65 1411.96L1495.83 1594.02L1403.61 1699.92Z" fill="#E4751F" stroke="#E4751F" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M89.3589 912.199L137.55 866.982L169.083 980.618L89.3589 912.199Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1403.61 1699.92L1095.43 1630.31L1289.38 1529.76L1403.61 1699.92Z" fill="#233447" stroke="#233447" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M686.098 538.567L110.777 409.462L345.784 6.08252L686.098 538.567Z" fill="#763D16" stroke="#763D16" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1631.48 2375.79L1664.2 2465.03L1134.69 2337.12L1631.48 2375.79Z" fill="#C0AD9E" stroke="#C0AD9E" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1124.58 1861.75L1095.43 1630.31L1403.61 1699.92L1124.58 1861.75Z" fill="#F6851B" stroke="#F6851B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M826.508 1399.47L1095.43 1630.31L1124.58 1861.75L826.508 1399.47Z" fill="#E4751F" stroke="#E4751F" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1495.83 1594.02L1731.43 1580.33L2009.87 2014.65L1495.83 1594.02ZM826.508 1399.47L1124.58 1861.75L758.088 1879.59L826.508 1399.47Z" fill="#F6851B" stroke="#F6851B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1495.83 1594.02L1788.55 2039.64L1403.61 1699.92L1495.83 1594.02Z" fill="#E4751F" stroke="#E4751F" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1403.61 1699.92L1788.55 2039.64L1748.09 2075.93L1403.61 1699.92Z" fill="#F6851B" stroke="#F6851B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1748.09 2075.93L1124.58 1861.75L1403.61 1699.92L1748.09 2075.93ZM2009.87 2014.65L1788.55 2039.64L1495.83 1594.02L2009.87 2014.65Z" fill="#F6851B" stroke="#F6851B" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M2068.18 2224.07L1972.99 2415.05L1664.2 2465.03L2068.18 2224.07ZM1664.2 2465.03L1631.48 2375.79L1710.61 2288.92L1664.2 2465.03Z" fill="#C0AD9E" stroke="#C0AD9E" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1710.61 2288.92L1768.92 2265.72L1664.2 2465.03L1710.61 2288.92ZM1664.2 2465.03L1768.92 2265.72L2068.18 2224.07L1664.2 2465.03Z" fill="#C0AD9E" stroke="#C0AD9E" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M2009.87 2014.65L2083.05 2059.27L1860.54 2086.04L2009.87 2014.65Z" fill="#161616" stroke="#161616" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1860.54 2086.04L1788.55 2039.64L2009.87 2014.65L1860.54 2086.04ZM1834.96 2121.15L2105.66 2088.42L2068.18 2224.07L1834.96 2121.15Z" fill="#161616" stroke="#161616" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M2068.18 2224.07L1768.92 2265.72L1834.96 2121.15L2068.18 2224.07ZM1768.92 2265.72L1710.61 2288.92L1748.09 2075.93L1768.92 2265.72ZM1748.09 2075.93L1788.55 2039.64L1860.54 2086.04L1748.09 2075.93ZM2083.05 2059.27L2105.66 2088.42L1834.96 2121.15L2083.05 2059.27Z" fill="#161616" stroke="#161616" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1834.96 2121.15L1860.54 2086.04L2083.05 2059.27L1834.96 2121.15ZM1748.09 2075.93L1834.96 2121.15L1768.92 2265.72L1748.09 2075.93Z" fill="#161616" stroke="#161616" stroke-width="5.94955"/&amp;gt; &amp;lt;path d="M1860.54 2086.04L1834.96 2121.15L1748.09 2075.93L1860.54 2086.04Z" fill="#161616" stroke="#161616" stroke-width="5.94955"/&amp;gt; &amp;lt;/g&amp;gt; &amp;lt;defs&amp;gt; &amp;lt;clipPath id="clip0_1512_1323"&amp;gt; &amp;lt;rect width="2404" height="2500" fill="white" transform="translate(0.519043 0.132812)"/&amp;gt; &amp;lt;/clipPath&amp;gt; &amp;lt;/defs&amp;gt; &amp;lt;/svg&amp;gt;
  Connect with MetaMask
&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-[#FF9119] hover:bg-[#FF9119]/80 focus:ring-4 focus:ring-[#FF9119]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:hover:bg-[#FF9119]/80 dark:focus:ring-[#FF9119]/40 mr-2 mb-2"&amp;gt;
  &amp;lt;svg class="mr-2 -ml-1 w-4 h-4" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="bitcoin" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"&amp;gt;&amp;lt;path fill="currentColor" d="M504 256c0 136.1-111 248-248 248S8 392.1 8 256 119 8 256 8s248 111 248 248zm-141.7-35.33c4.937-32.1-20.19-50.74-54.55-62.57l11.15-44.7-27.21-6.781-10.85 43.52c-7.154-1.783-14.5-3.464-21.8-5.13l10.93-43.81-27.2-6.781-11.15 44.69c-5.922-1.349-11.73-2.682-17.38-4.084l.031-.14-37.53-9.37-7.239 29.06s20.19 4.627 19.76 4.913c11.02 2.751 13.01 10.04 12.68 15.82l-12.7 50.92c.76 .194 1.744 .473 2.829 .907-.907-.225-1.876-.473-2.876-.713l-17.8 71.34c-1.349 3.348-4.767 8.37-12.47 6.464 .271 .395-19.78-4.937-19.78-4.937l-13.51 31.15 35.41 8.827c6.588 1.651 13.05 3.379 19.4 5.006l-11.26 45.21 27.18 6.781 11.15-44.73a1038 1038 0 0 0 21.69 5.627l-11.11 44.52 27.21 6.781 11.26-45.13c46.4 8.781 81.3 5.239 95.99-36.73 11.84-33.79-.589-53.28-25-65.99 17.78-4.098 31.17-15.79 34.75-39.95zm-62.18 87.18c-8.41 33.79-65.31 15.52-83.75 10.94l14.94-59.9c18.45 4.603 77.6 13.72 68.81 48.96zm8.417-87.67c-7.673 30.74-55.03 15.12-70.39 11.29l13.55-54.33c15.36 3.828 64.84 10.97 56.85 43.03z"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;
  Pay with Bitcoin
&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-gray-900 bg-[#F7BE38] hover:bg-[#F7BE38]/90 focus:ring-4 focus:ring-[#F7BE38]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-[#F7BE38]/50 mr-2 mb-2"&amp;gt;
  &amp;lt;svg class="mr-2 -ml-1 w-4 h-4" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="paypal" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"&amp;gt;&amp;lt;path fill="currentColor" d="M111.4 295.9c-3.5 19.2-17.4 108.7-21.5 134-.3 1.8-1 2.5-3 2.5H12.3c-7.6 0-13.1-6.6-12.1-13.9L58.8 46.6c1.5-9.6 10.1-16.9 20-16.9 152.3 0 165.1-3.7 204 11.4 60.1 23.3 65.6 79.5 44 140.3-21.5 62.6-72.5 89.5-140.1 90.3-43.4 .7-69.5-7-75.3 24.2zM357.1 152c-1.8-1.3-2.5-1.8-3 1.3-2 11.4-5.1 22.5-8.8 33.6-39.9 113.8-150.5 103.9-204.5 103.9-6.1 0-10.1 3.3-10.9 9.4-22.6 140.4-27.1 169.7-27.1 169.7-1 7.1 3.5 12.9 10.6 12.9h63.5c8.6 0 15.7-6.3 17.4-14.9 .7-5.4-1.1 6.1 14.4-91.3 4.6-22 14.3-19.7 29.3-19.7 71 0 126.4-28.8 142.9-112.3 6.5-34.8 4.6-71.4-23.8-92.6z"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;
  Check out with PayPal
&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-[#050708] hover:bg-[#050708]/80 focus:ring-4 focus:ring-[#050708]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:hover:bg-[#050708]/40 dark:focus:ring-gray-600 mr-2 mb-2"&amp;gt;
  Check out with Apple Pay
  &amp;lt;svg class="ml-2 -mr-1 w-5 h-5" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="apple" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"&amp;gt;&amp;lt;path fill="currentColor" d="M318.7 268.7c-.2-36.7 16.4-64.4 50-84.8-18.8-26.9-47.2-41.7-84.7-44.6-35.5-2.8-74.3 20.7-88.5 20.7-15 0-49.4-19.7-76.4-19.7C63.3 141.2 4 184.8 4 273.5q0 39.3 14.4 81.2c12.8 36.7 59 126.7 107.2 125.2 25.2-.6 43-17.9 75.8-17.9 31.8 0 48.3 17.9 76.4 17.9 48.6-.7 90.4-82.5 102.6-119.3-65.2-30.7-61.7-90-61.7-91.9zm-56.6-164.2c27.3-32.4 24.8-61.9 24-72.5-24.1 1.4-52 16.4-67.9 34.9-17.5 19.8-27.8 44.3-25.6 71.9 26.1 2 49.9-11.4 69.5-34.3z"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;
&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-[#2557D6] hover:bg-[#2557D6]/90 focus:ring-4 focus:ring-[#2557D6]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-[#2557D6]/50 mr-2 mb-2"&amp;gt;
  &amp;lt;svg class="mr-2 -ml-1 w-10 h-3" viewBox="0 0 256 64" fill="none" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;path d="M28.812 0L0 63.76H34.492L38.768 53.594H48.542L52.818 63.76H90.784V56.001L94.167 63.76H113.806L117.189 55.837V63.76H196.148L205.749 53.858L214.739 63.76L255.294 63.842L226.391 32.058L255.294 0H215.368L206.022 9.71899L197.315 0H111.418L104.042 16.457L96.493 0H62.073V7.495L58.244 0C58.244 0 28.812 0 28.812 0ZM35.486 9.05399H52.299L71.41 52.29V9.05399H89.828L104.589 40.054L118.193 9.05399H136.519V54.806H125.368L125.277 18.955L109.02 54.806H99.045L82.697 18.955V54.806H59.757L55.408 44.549H31.912L27.572 54.797H15.281C15.281 54.797 35.486 9.05399 35.486 9.05399ZM146.721 9.05399H192.063L205.931 24.034L220.246 9.05399H234.114L213.043 32.049L234.114 54.779H219.617L205.749 39.625L191.361 54.779H146.721V9.05399ZM43.665 16.795L35.924 35.067H51.397L43.665 16.795ZM157.918 18.527V26.879H182.654V36.188H157.918V45.306H185.663L198.555 31.876L186.21 18.519H157.918V18.527Z" fill="white"/&amp;gt;&amp;lt;/svg&amp;gt;
  Pay with American Express
&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-gray-900 bg-white hover:bg-gray-100 border border-gray-200 focus:ring-4 focus:ring-gray-100 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-gray-800 dark:bg-white dark:border-gray-700 dark:text-gray-900 dark:hover:bg-gray-200 mr-2 mb-2"&amp;gt;
  &amp;lt;svg class="mr-2 -ml-1 w-10 h-3" viewBox="0 0 660 203" fill="none" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;path d="M233.003 199.762L266.362 4.002H319.72L286.336 199.762H233.003V199.762ZM479.113 8.222C468.544 4.256 451.978 0 431.292 0C378.566 0 341.429 26.551 341.111 64.604C340.814 92.733 367.626 108.426 387.865 117.789C408.636 127.387 415.617 133.505 415.517 142.072C415.384 155.195 398.931 161.187 383.593 161.187C362.238 161.187 350.892 158.22 333.368 150.914L326.49 147.803L319.003 191.625C331.466 197.092 354.511 201.824 378.441 202.07C434.531 202.07 470.943 175.822 471.357 135.185C471.556 112.915 457.341 95.97 426.556 81.997C407.906 72.941 396.484 66.898 396.605 57.728C396.605 49.591 406.273 40.89 427.165 40.89C444.611 40.619 457.253 44.424 467.101 48.39L471.882 50.649L479.113 8.222V8.222ZM616.423 3.99899H575.193C562.421 3.99899 552.861 7.485 547.253 20.233L468.008 199.633H524.039C524.039 199.633 533.198 175.512 535.27 170.215C541.393 170.215 595.825 170.299 603.606 170.299C605.202 177.153 610.098 199.633 610.098 199.633H659.61L616.423 3.993V3.99899ZM551.006 130.409C555.42 119.13 572.266 75.685 572.266 75.685C571.952 76.206 576.647 64.351 579.34 57.001L582.946 73.879C582.946 73.879 593.163 120.608 595.299 130.406H551.006V130.409V130.409ZM187.706 3.99899L135.467 137.499L129.902 110.37C120.176 79.096 89.8774 45.213 56.0044 28.25L103.771 199.45L160.226 199.387L244.23 3.99699L187.706 3.996" fill="#0E4595"/&amp;gt;&amp;lt;path d="M86.723 3.99219H0.682003L0 8.06519C66.939 24.2692 111.23 63.4282 129.62 110.485L110.911 20.5252C107.682 8.12918 98.314 4.42918 86.725 3.99718" fill="#F2AE14"/&amp;gt;&amp;lt;/svg&amp;gt;
  Pay with Visa
&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-gray-900 bg-white hover:bg-gray-100 border border-gray-200 focus:ring-4 focus:ring-gray-100 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-gray-600 dark:bg-gray-800 dark:border-gray-700 dark:text-white dark:hover:bg-gray-700 mr-2 mb-2"&amp;gt;
  &amp;lt;svg class="mr-2 -ml-1 w-7 h-4" viewBox="0 0 601 360" fill="none" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;path d="M359.01 179.504C359.01 278.647 278.639 359.004 179.5 359.004C80.361 359.004 0 278.643 0 179.504C0 80.3709 80.362 0.00390625 179.5 0.00390625C278.637 0.00390625 359.01 80.3749 359.01 179.504Z" fill="#D9222A"/&amp;gt;&amp;lt;path d="M420.489 0C374.11 0 331.846 17.596 299.989 46.467C293.499 52.356 287.441 58.704 281.864 65.463H318.131C323.096 71.5 327.667 77.85 331.816 84.475H268.181C264.354 90.597 260.9 96.944 257.839 103.483H342.152C345.046 109.668 347.583 116.013 349.753 122.487H250.24C248.15 128.721 246.408 135.067 245.023 141.495H354.963C357.652 153.985 359.008 166.726 359.005 179.503C359.005 199.438 355.751 218.615 349.751 236.524H250.238C252.402 243.001 254.938 249.348 257.834 255.532H342.15C339.087 262.073 335.631 268.421 331.803 274.545H268.178C272.325 281.165 276.897 287.511 281.863 293.541H318.122C312.552 300.313 306.492 306.668 299.992 312.554C331.849 341.42 374.109 359.008 420.492 359.008C519.631 359.008 600.002 278.647 600.002 179.508C600.002 80.379 519.631 0.00799561 420.492 0.00799561" fill="#EE9F2D"/&amp;gt;&amp;lt;path d="M576.07 279.564C576.07 276.365 578.662 273.763 581.866 273.763C585.07 273.763 587.662 276.365 587.662 279.564C587.662 282.763 585.07 285.365 581.866 285.365C578.662 285.365 576.07 282.763 576.07 279.564ZM581.866 283.972C584.3 283.971 586.273 281.998 586.274 279.564C586.274 277.132 584.303 275.162 581.872 275.16H581.866C579.437 275.157 577.466 277.123 577.462 279.551V279.565C577.46 281.998 579.43 283.971 581.862 283.973C581.863 283.972 581.865 283.972 581.866 283.972V283.972ZM581.083 282.112H579.896V277.016H582.045C582.495 277.016 582.953 277.016 583.35 277.27C583.763 277.549 583.996 278.041 583.996 278.549C583.996 279.12 583.658 279.653 583.112 279.861L584.05 282.111H582.735L581.956 280.094H581.085L581.083 282.112V282.112ZM581.083 279.222H581.741C581.987 279.222 582.246 279.243 582.467 279.122C582.662 278.997 582.763 278.763 582.763 278.538C582.758 278.329 582.651 278.136 582.475 278.02C582.268 277.891 581.939 277.919 581.717 277.919H581.083V279.222ZM137.583 199.159C135.537 198.921 134.638 198.858 133.233 198.858C122.187 198.858 116.595 202.645 116.595 210.126C116.595 214.737 119.324 217.671 123.582 217.671C131.521 217.671 137.241 210.112 137.583 199.159V199.159ZM151.754 232.155H135.608L135.979 224.479C131.053 230.544 124.483 233.428 115.553 233.428C104.99 233.428 97.7492 225.178 97.7492 213.199C97.7492 195.175 110.345 184.658 131.966 184.658C134.174 184.658 137.008 184.857 139.907 185.228C140.511 182.787 140.67 181.74 140.67 180.427C140.67 175.519 137.274 173.69 128.17 173.69C118.637 173.582 110.774 175.961 107.545 177.023C107.749 175.794 110.245 160.364 110.245 160.364C119.957 157.518 126.361 156.447 133.57 156.447C150.302 156.447 159.166 163.96 159.149 178.159C159.182 181.964 158.552 186.659 157.57 192.83C155.879 203.564 152.25 226.551 151.754 232.155V232.155ZM89.5962 232.155H70.1092L81.2712 162.158L56.3462 232.155H43.0672L41.4252 162.558L29.6922 232.155H11.4502L26.6872 141.099H54.7082L56.4082 192.067L73.5002 141.099H104.667L89.5962 232.155ZM444.566 199.159C442.529 198.921 441.625 198.858 440.224 198.858C429.183 198.858 423.59 202.645 423.59 210.126C423.59 214.737 426.316 217.671 430.573 217.671C438.513 217.671 444.237 210.112 444.566 199.159V199.159ZM458.75 232.155H442.604L442.97 224.479C438.044 230.544 431.47 233.428 422.548 233.428C411.983 233.428 404.748 225.178 404.748 213.199C404.748 195.175 417.336 184.658 438.961 184.658C441.169 184.658 443.998 184.857 446.895 185.228C447.499 182.787 447.658 181.74 447.658 180.427C447.658 175.519 444.266 173.69 435.162 173.69C425.629 173.582 417.775 175.961 414.533 177.023C414.737 175.794 417.242 160.364 417.242 160.364C426.954 157.518 433.354 156.447 440.555 156.447C457.295 156.447 466.159 163.96 466.142 178.159C466.174 181.964 465.545 186.659 464.563 192.83C462.879 203.564 459.242 226.551 458.75 232.155V232.155ZM238.36 231.03C233.027 232.709 228.869 233.428 224.36 233.428C214.398 233.428 208.961 227.703 208.961 217.161C208.819 213.89 210.394 205.281 211.632 197.424C212.757 190.507 220.081 146.895 220.081 146.895H239.452L237.189 158.103H248.888L246.246 175.899H234.504C232.254 189.982 229.05 207.524 229.013 209.849C229.013 213.665 231.05 215.332 235.684 215.332C237.905 215.332 239.624 215.105 240.938 214.632L238.36 231.03V231.03ZM297.752 230.43C291.098 232.464 284.677 233.447 277.873 233.43C256.189 233.409 244.886 222.084 244.886 200.398C244.886 175.085 259.266 156.451 278.785 156.451C294.756 156.451 304.956 166.884 304.956 183.247C304.956 188.676 304.256 193.976 302.568 201.459H263.994C262.689 212.2 269.564 216.676 280.831 216.676C287.766 216.676 294.019 215.247 300.973 212.013L297.752 230.43V230.43ZM286.864 186.53C286.971 184.987 288.919 173.313 277.851 173.313C271.68 173.313 267.268 178.017 265.471 186.53H286.864V186.53ZM163.444 181.513C163.444 190.88 167.986 197.339 178.286 202.189C186.178 205.898 187.398 206.999 187.398 210.359C187.398 214.976 183.919 217.06 176.207 217.06C170.394 217.06 164.986 216.152 158.749 214.138C158.749 214.138 156.186 230.459 156.069 231.24C160.499 232.207 164.449 233.101 176.348 233.43C196.911 233.43 206.407 225.601 206.407 208.68C206.407 198.505 202.431 192.534 192.67 188.046C184.499 184.296 183.562 183.459 183.562 180.001C183.562 175.997 186.799 173.955 193.099 173.955C196.924 173.955 202.149 174.363 207.099 175.067L209.874 157.892C204.828 157.092 197.178 156.45 192.724 156.45C170.923 156.451 163.377 167.838 163.444 181.513V181.513ZM392.534 158.397C397.946 158.397 402.992 159.818 409.946 163.318L413.134 143.555C410.28 142.434 400.23 135.855 391.717 135.855C378.676 135.855 367.652 142.326 359.897 153.005C348.588 149.259 343.939 156.83 338.24 164.372L333.177 165.551C333.56 163.068 333.906 160.601 333.789 158.105H315.893C313.448 181.022 309.115 204.233 305.722 227.18L304.838 232.156H324.334C327.588 211.013 329.371 197.476 330.455 188.314L337.796 184.23C338.893 180.152 342.325 178.772 349.213 178.939C348.287 183.947 347.824 189.03 347.83 194.123C347.83 218.348 360.9 233.431 381.88 233.431C387.284 233.431 391.921 232.719 399.101 230.773L402.531 210.014C396.073 213.195 390.772 214.691 385.972 214.691C374.643 214.691 367.788 206.328 367.788 192.506C367.788 172.455 377.984 158.397 392.534 158.397" fill="black"/&amp;gt;&amp;lt;path d="M95.2095 226.744H75.7184L86.8895 156.756L61.9635 226.744H48.6805L47.0385 157.156L35.3055 226.744H17.0645L32.3015 135.702H60.3224L61.1104 192.064L80.0145 135.702H110.281L95.2095 226.744Z" fill="white"/&amp;gt;&amp;lt;path d="M557.52 141.104L553.199 167.413C547.87 160.4 542.145 155.325 534.587 155.325C524.754 155.325 515.804 162.78 509.945 173.75C501.787 172.058 493.348 169.187 493.348 169.187L493.344 169.254C494.002 163.12 494.265 159.379 494.206 158.108H476.306C473.868 181.025 469.535 204.236 466.149 227.183L465.256 232.159H484.748C487.381 215.063 489.396 200.868 490.881 189.608C497.539 183.592 500.873 178.342 507.602 178.692C504.623 185.897 502.877 194.195 502.877 202.709C502.877 221.222 512.243 233.434 526.41 233.434C533.552 233.434 539.031 230.972 544.377 225.263L543.464 232.147H561.899L576.741 141.105L557.52 141.104V141.104ZM533.149 215.045C526.515 215.045 523.166 210.137 523.166 200.449C523.166 185.894 529.437 175.574 538.278 175.574C544.973 175.574 548.598 180.678 548.598 190.083C548.599 204.762 542.228 215.045 533.149 215.045V215.045Z" fill="black"/&amp;gt;&amp;lt;path d="M143.19 193.764C141.148 193.528 140.244 193.465 138.844 193.465C127.798 193.465 122.21 197.252 122.21 204.731C122.21 209.335 124.939 212.278 129.189 212.278C137.136 212.277 142.857 204.719 143.19 193.764V193.764ZM157.368 226.748H141.222L141.589 219.085C136.668 225.139 130.089 228.035 121.168 228.035C110.601 228.035 103.363 219.785 103.363 207.806C103.363 189.774 115.955 179.264 137.58 179.264C139.788 179.264 142.622 179.464 145.518 179.835C146.122 177.394 146.281 176.348 146.281 175.027C146.281 170.118 142.889 168.298 133.785 168.298C124.248 168.19 116.389 170.569 113.156 171.619C113.36 170.394 115.856 154.982 115.856 154.982C125.564 152.124 131.976 151.053 139.176 151.053C155.913 151.053 164.78 158.57 164.764 172.757C164.793 176.578 164.16 181.27 163.18 187.432C161.493 198.156 157.861 221.156 157.368 226.748V226.748ZM418.748 138.156L415.557 157.923C408.607 154.427 403.557 153.003 398.15 153.003C383.599 153.003 373.4 167.061 373.4 187.109C373.4 200.93 380.257 209.29 391.584 209.29C396.384 209.29 401.68 207.798 408.138 204.615L404.717 225.365C397.533 227.322 392.901 228.035 387.492 228.035C366.515 228.035 353.441 212.951 353.441 188.726C353.441 156.176 371.5 133.426 397.329 133.426C405.836 133.427 415.89 137.035 418.748 138.156V138.156ZM450.191 193.764C448.15 193.528 447.25 193.465 445.844 193.465C434.803 193.465 429.211 197.252 429.211 204.731C429.211 209.335 431.94 212.278 436.194 212.278C444.132 212.277 449.857 204.719 450.191 193.764V193.764ZM464.369 226.748H448.219L448.59 219.085C443.665 225.139 437.09 228.035 428.169 228.035C417.606 228.035 410.365 219.785 410.365 207.806C410.365 189.774 422.961 179.264 444.577 179.264C446.79 179.264 449.619 179.464 452.518 179.835C453.119 177.394 453.281 176.348 453.281 175.027C453.281 170.118 449.888 168.298 440.786 168.298C431.253 168.19 423.39 170.569 420.156 171.619C420.36 170.394 422.86 154.982 422.86 154.982C432.569 152.124 438.976 151.053 446.176 151.053C462.917 151.053 471.78 158.57 471.759 172.757C471.792 176.578 471.163 181.27 470.18 187.432C468.498 198.156 464.857 221.156 464.369 226.748ZM243.979 225.627C238.641 227.306 234.483 228.035 229.979 228.035C220.017 228.035 214.58 222.309 214.58 211.767C214.442 208.488 216.018 199.887 217.255 192.031C218.375 185.105 225.7 141.497 225.7 141.497H245.068L242.808 152.709H252.749L250.103 170.497H240.128C237.878 184.589 234.665 202.117 234.632 204.447C234.632 208.277 236.673 209.929 241.303 209.929C243.524 209.929 245.241 209.713 246.557 209.238L243.979 225.627V225.627ZM303.37 225.035C296.72 227.068 290.291 228.047 283.491 228.035C261.806 228.014 250.504 216.689 250.504 195.002C250.504 169.681 264.883 151.052 284.403 151.052C300.374 151.052 310.574 161.481 310.574 177.852C310.574 183.286 309.874 188.585 308.19 196.064H269.616C268.31 206.805 275.185 211.286 286.453 211.286C293.383 211.286 299.641 209.851 306.591 206.609L303.37 225.035V225.035ZM292.479 181.123C292.595 179.585 294.539 167.906 283.466 167.906C277.299 167.906 272.887 172.623 271.091 181.123H292.479ZM169.059 176.118C169.059 185.485 173.601 191.936 183.901 196.793C191.793 200.502 193.013 201.605 193.013 204.965C193.013 209.581 189.53 211.664 181.825 211.664C176.009 211.664 170.6 210.756 164.358 208.743C164.358 208.743 161.804 225.064 161.687 225.844C166.108 226.811 170.062 227.694 181.962 228.035C202.528 228.035 212.021 220.206 212.021 203.289C212.021 193.109 208.05 187.139 198.284 182.652C190.117 178.893 189.171 178.068 189.171 174.606C189.171 170.606 192.417 168.547 198.713 168.547C202.534 168.547 207.759 168.968 212.717 169.672L215.488 152.493C210.446 151.693 202.796 151.052 198.342 151.052C176.538 151.052 168.996 162.431 169.059 176.118V176.118ZM567.509 226.748H549.071L549.988 219.855C544.641 225.572 539.163 228.035 532.02 228.035C517.854 228.035 508.492 215.822 508.492 197.309C508.492 172.679 523.013 151.917 540.2 151.917C547.759 151.917 553.479 155.004 558.804 162.013L563.129 135.705H582.35L567.509 226.748V226.748ZM538.763 209.639C547.838 209.639 554.213 199.356 554.213 184.686C554.213 175.281 550.584 170.177 543.888 170.177C535.051 170.177 528.773 180.492 528.773 195.052C528.772 204.738 532.13 209.639 538.763 209.639ZM481.921 152.71C479.48 175.627 475.148 198.84 471.759 221.773L470.867 226.749H490.358C497.33 181.474 499.016 172.632 509.946 173.74C511.688 164.473 514.928 156.357 517.345 152.261C509.182 150.561 504.624 155.174 498.657 163.936C499.128 160.148 499.99 156.469 499.819 152.711L481.921 152.71V152.71ZM321.501 152.71C319.055 175.627 314.722 198.84 311.334 221.773L310.446 226.749H329.946C336.909 181.474 338.592 172.632 349.516 173.74C351.266 164.473 354.507 156.357 356.915 152.261C348.761 150.561 344.198 155.174 338.236 163.936C338.707 160.148 339.56 156.469 339.398 152.711L321.501 152.71V152.71ZM576.071 220.951C576.067 217.752 578.657 215.156 581.855 215.152H581.867C585.064 215.148 587.66 217.738 587.663 220.935V220.951C587.662 224.152 585.068 226.746 581.867 226.748C578.666 226.746 576.072 224.152 576.071 220.951V220.951ZM581.867 225.356C584.298 225.358 586.269 223.387 586.27 220.957V220.953C586.273 218.52 584.302 216.547 581.871 216.545H581.867C579.432 216.546 577.46 218.519 577.459 220.953C577.461 223.385 579.434 225.356 581.867 225.356ZM581.083 223.485H579.895V218.403H582.048C582.494 218.403 582.957 218.412 583.344 218.657C583.761 218.94 583.998 219.424 583.998 219.931C583.998 220.506 583.661 221.043 583.11 221.248L584.051 223.484H582.731L581.952 221.475H581.082L581.083 223.485ZM581.083 220.606H581.736C581.982 220.606 582.249 220.625 582.465 220.506C582.661 220.381 582.761 220.145 582.761 219.918C582.752 219.708 582.647 219.514 582.474 219.395C582.27 219.278 581.932 219.311 581.711 219.311H581.082L581.083 220.606V220.606Z" fill="white"/&amp;gt;&amp;lt;/svg&amp;gt;
  Pay with MasterCard
&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-gray-900 bg-gray-100 hover:bg-gray-200 focus:ring-4 focus:ring-gray-100 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-gray-500 mr-2 mb-2"&amp;gt;
  &amp;lt;svg class="w-4 h-4 mr-2 -ml-1 text-[#626890]" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="ethereum" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"&amp;gt;&amp;lt;path fill="currentColor" d="M311.9 260.8L160 353.6 8 260.8 160 0l151.9 260.8zM160 383.4L8 290.6 160 512l152-221.4-152 92.8z"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;
  Pay with Ethereum
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#outline-buttons"&gt;
  &lt;/a&gt;
  Outline buttons
&lt;/h2&gt;

&lt;p&gt;Use the following button styles to show the colors only for the border of the element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button" class="text-blue-700 hover:text-white border border-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:border-blue-500 dark:text-blue-500 dark:hover:text-white dark:hover:bg-blue-600 dark:focus:ring-blue-800"&amp;gt;Default&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-gray-900 hover:text-white border border-gray-800 hover:bg-gray-900 focus:ring-4 focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:border-gray-600 dark:text-gray-400 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-800"&amp;gt;Dark&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-green-700 hover:text-white border border-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:border-green-500 dark:text-green-500 dark:hover:text-white dark:hover:bg-green-600 dark:focus:ring-green-800"&amp;gt;Green&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-red-700 hover:text-white border border-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:border-red-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-900"&amp;gt;Red&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-yellow-400 hover:text-white border border-yellow-400 hover:bg-yellow-500 focus:ring-4 focus:ring-yellow-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:border-yellow-300 dark:text-yellow-300 dark:hover:text-white dark:hover:bg-yellow-400 dark:focus:ring-yellow-900"&amp;gt;Yellow&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-purple-700 hover:text-white border border-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:border-purple-400 dark:text-purple-400 dark:hover:text-white dark:hover:bg-purple-500 dark:focus:ring-purple-900"&amp;gt;Purple&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#button-sizes"&gt;
  &lt;/a&gt;
  Button sizes
&lt;/h2&gt;

&lt;p&gt;Use these examples if you want to use smaller or larger buttons.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button" class="py-2 px-3 text-xs font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"&amp;gt;Extra small&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="py-2 px-3 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"&amp;gt;Small&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"&amp;gt;Base&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="py-3 px-5 text-base font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"&amp;gt;Large&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-base px-6 py-3.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"&amp;gt;Extra large&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#buttons-with-icon"&gt;
  &lt;/a&gt;
  Buttons with icon
&lt;/h2&gt;

&lt;p&gt;Use the following examples to add a SVG icon inside the button either on the left or right side.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center mr-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"&amp;gt;
  &amp;lt;svg class="mr-2 -ml-1 w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;path d="M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;
  Buy now
&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"&amp;gt;
    Choose plan
    &amp;lt;svg class="ml-2 -mr-1 w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#button-with-label"&gt;
  &lt;/a&gt;
  Button with label
&lt;/h2&gt;

&lt;p&gt;This example can be used to show a notification count or helper text inside a button using the badge element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button" class="inline-flex items-center px-5 py-2.5 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"&amp;gt;
  Messages
  &amp;lt;span class="inline-flex justify-center items-center ml-2 w-4 h-4 text-xs font-semibold text-blue-800 bg-blue-200 rounded-full"&amp;gt;
    2
  &amp;lt;/span&amp;gt;
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#icon-buttons"&gt;
  &lt;/a&gt;
  Icon buttons
&lt;/h2&gt;

&lt;p&gt;Sometimes you need a button to indicate an action using only an icon.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm p-2.5 text-center inline-flex items-center mr-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"&amp;gt;
  &amp;lt;svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;
&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-full text-sm p-2.5 text-center inline-flex items-center mr-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"&amp;gt;
  &amp;lt;svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;
&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-blue-700 border border-blue-700 hover:bg-blue-700 hover:text-white focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm p-2.5 text-center inline-flex items-center mr-2 dark:border-blue-500 dark:text-blue-500 dark:hover:text-white dark:focus:ring-blue-800"&amp;gt;
  &amp;lt;svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;
&amp;lt;/button&amp;gt;
&amp;lt;button type="button" class="text-blue-700 border border-blue-700 hover:bg-blue-700 hover:text-white focus:ring-4 focus:ring-blue-300 font-medium rounded-full text-sm p-2.5 text-center inline-flex items-center dark:border-blue-500 dark:text-blue-500 dark:hover:text-white dark:focus:ring-blue-800"&amp;gt;
  &amp;lt;svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#disabled"&gt;
  &lt;/a&gt;
  Disabled
&lt;/h2&gt;

&lt;p&gt;Use the following styles to indicate a disabled button. This can be often used inside form elements to disable the submit button before all the form elements have been completed and validated.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button" class="text-white bg-blue-400 dark:bg-blue-500 cursor-not-allowed font-medium rounded-lg text-sm px-5 py-2.5 text-center" disabled&amp;gt;Disabled button&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check out the full list of &lt;a href="https://flowbite.com/docs/components/buttons/"&gt;Tailwind CSS components from Flowbite&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>showdev</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Xdebug con PHP en XAMPP</title>
      <author>Nelson R. Graña</author>
      <pubDate>Mon, 20 Dec 2021 06:51:17 +0000</pubDate>
      <link>https://dev.to/nelsongraa8/xdebug-con-php-en-xampp-209h</link>
      <guid>https://dev.to/nelsongraa8/xdebug-con-php-en-xampp-209h</guid>
      <description>&lt;p&gt;En el día a día de la programación se necesita una herramienta para hacer debug de nuestro software, trabajando con PHP, la herramienta por excelencia es &lt;a href="//www.xdebug.org"&gt;XDebug&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Primero descargamos el &lt;a href="https://xdebug.org/download"&gt;php_xdebug.dll&lt;/a&gt; de la siguiente dirección, acorde claro con nuestra versión de PHP instalada.&lt;/p&gt;

&lt;p&gt;Nos dirigimos al archivo php.ini de nuestro PHP y añadimos la ruta del .dll así como la configuración que le daremos a nuestra extensión de xdebug&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[XDEBUG]
zend_extension="C:\xampp\php\ext\php_xdebug.dll"
xdebug.mode=debug
xdebug.client_host = 127.0.0.1
xdebug.client_port = 9003
#xdebug.start_with_request=trigger
xdebug.start_with_request=yes

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Luego revisamos que este correctamente y funcionando el Xdebug en nuestro PHP&lt;/p&gt;

&lt;p&gt;&lt;code&gt;php -v&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;PHP 8.0.11 (cli) (built: Sep 21 2021 18:26:06) ( ZTS Visual C++ 2019 x64 )
Copyright (c) The PHP Group
Zend Engine v4.0.11, Copyright (c) Zend Technologies
    with Xdebug v3.1.1, Copyright (c) 2002-2021, by Derick Rethans
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;En Visual Studio Code tenemos entonces que instalar el plugins para hacer el debug de PHP&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=felixfbecker.php-debug"&gt;PHP Debug&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;El paso final es configurar un archivo launch.json para el espacio de trabajo o proyecto:&lt;/p&gt;

&lt;p&gt;En la sección de RUN AND DEBUG pulsaremos sobre el enlace "create a launch.json file", se selecciona el espacio de trabajo y posteriormente PHP, se pega la siguiente configuración en el archivo que se ha creado dentro de .vscode/launch.json en la raíz del proyecto.&lt;/p&gt;

</description>
      <category>php</category>
      <category>xdebug</category>
      <category>vscode</category>
      <category>window</category>
    </item>
    <item>
      <title>The world of DOM</title>
      <author>Argen Turatbek</author>
      <pubDate>Mon, 20 Dec 2021 05:19:05 +0000</pubDate>
      <link>https://dev.to/northpolicy/the-world-of-dom-1j71</link>
      <guid>https://dev.to/northpolicy/the-world-of-dom-1j71</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Pre-note: everything that I write here may not be fully correct as it is for my personal learning purposes. Before finding out dev.to, I was purely using paper notes. From now on, I decided to jot down my learning notes from tutorials. As I am still in the process of studying the DOM, the content may keep changing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--59ceQSGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7dc75eve8v8wxqdo9us.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--59ceQSGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7dc75eve8v8wxqdo9us.png" alt="Image description" width="500" height="380"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Public Solving: Decoding a secret message</title>
      <author>Chris Bongers</author>
      <pubDate>Mon, 20 Dec 2021 04:29:45 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/public-solving-decoding-a-secret-message-27ig</link>
      <guid>https://dev.to/dailydevtips1/public-solving-decoding-a-secret-message-27ig</guid>
      <description>&lt;p&gt;Santa got a super weird email, and at first, he thought he might have been hacked.&lt;/p&gt;

&lt;p&gt;But it was just a cool hacker kid not wanting the public to see his letter to Santa.&lt;/p&gt;

&lt;p&gt;But Santa doesn't know much about computers and asked us to decode the message he received.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/devadvent/puzzle-9"&gt;You can find the complete puzzle here.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thinking-about-the-solution"&gt;
  &lt;/a&gt;
  Thinking about the solution
&lt;/h2&gt;

&lt;p&gt;Let's first look at what we get. There seems to be a message that looks kind of like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="mi"&gt;01001010&lt;/span&gt;
&lt;span class="mi"&gt;01101001&lt;/span&gt;
&lt;span class="mi"&gt;01101110&lt;/span&gt;
&lt;span class="mi"&gt;01100111&lt;/span&gt;
&lt;span class="mi"&gt;01101100&lt;/span&gt;
&lt;span class="mi"&gt;01100101&lt;/span&gt;
&lt;span class="mi"&gt;00100000&lt;/span&gt;
&lt;span class="mi"&gt;01100010&lt;/span&gt;
&lt;span class="mi"&gt;01100101&lt;/span&gt;
&lt;span class="mi"&gt;01101100&lt;/span&gt;
&lt;span class="mi"&gt;01101100&lt;/span&gt;
&lt;span class="mi"&gt;01110011&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you've been through any basic computer science class you might have spotted this is &lt;a href="https://en.wikipedia.org/wiki/Binary_code"&gt;binary code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Something your computer uses underwater because it only knows ones and zeros.&lt;/p&gt;

&lt;p&gt;Knowing this, we can see each line is actually a specific symbol. This could be a letter, symbol, number, or space.&lt;/p&gt;

&lt;p&gt;Let's get right into solving this problem so we can feel like Ackerman.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3knKct3fGqxhK/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3knKct3fGqxhK/giphy.gif" alt="Hackerman gif" width="500" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#decoding-a-binary-message-in-javascript"&gt;
  &lt;/a&gt;
  Decoding a binary message in JavaScript
&lt;/h2&gt;

&lt;p&gt;The first thing we want to do is make sure we can access all the individual lines.&lt;/p&gt;

&lt;p&gt;Knowing they are all on different lines, we can use the &lt;a href="https://daily-dev-tips.com/posts/vanilla-javascript-string-split/"&gt;&lt;code&gt;split&lt;/code&gt; method&lt;/a&gt; to split on a new line like so.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will give us an array of binary codes.&lt;/p&gt;

&lt;p&gt;And seeing it's now an array, we can use the all-around excellent &lt;a href="https://daily-dev-tips.com/posts/javascript-reduce-method/"&gt;&lt;code&gt;reduce&lt;/code&gt; method&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;binary&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// todo&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The reduce takes two arguments: the accumulator (&lt;code&gt;string&lt;/code&gt;) and the current looped element (&lt;code&gt;binary&lt;/code&gt;).&lt;br&gt;
We set the accumulator default value at the end, and I set it as an empty string.&lt;/p&gt;

&lt;p&gt;We need to return the string and append the decoded symbol for this binary code inside.&lt;/p&gt;

&lt;p&gt;To decode a binary code, we can use the following JavaScript function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromCharCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;binary&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Two things are happening there:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;parseInt&lt;/code&gt;: This piece will convert the binary code to a character code. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;String.fromCharCode&lt;/code&gt; converts the character code to a string.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's take the following binary code and see what happens:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;binary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;01001010&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;charCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;binary&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// 74&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;symbol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromCharCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;charCode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// J&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Meaning that this binary range is the letter &lt;code&gt;J&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now let's use this and combine it into the reduce function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;binary&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromCharCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;binary&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's it!&lt;br&gt;
We now have a binary decoder in JavaScript 😎.&lt;/p&gt;

&lt;p&gt;Look at us being hackers.&lt;/p&gt;

&lt;p&gt;There is only one more thing to do,&lt;br&gt;
Run the tests.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g0ZyhTO1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639064865804/YKigDlBlg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g0ZyhTO1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639064865804/YKigDlBlg.png" alt="All test succeeded" width="576" height="284"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Build A Markdown Editor In Reactjs</title>
      <author>oyedeletemitope</author>
      <pubDate>Mon, 20 Dec 2021 03:52:17 +0000</pubDate>
      <link>https://dev.to/oyedeletemitope/build-a-markdown-editor-in-reactjs-4g0i</link>
      <guid>https://dev.to/oyedeletemitope/build-a-markdown-editor-in-reactjs-4g0i</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;In this tutorial, we'll be building a markdown editor. As we all know that react is one of the most popular frameworks out there so that's what we'll be using, also it's my favorite framework so that's another reason why I'll be using it. We'll also be using a package called &lt;code&gt;remarkable&lt;/code&gt; and also &lt;code&gt;tailwind&lt;/code&gt; cdn. Remarkable library includes a Markdown component that converts Markdown to HTML. It's very simple, nice and easy so let's get started!!!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-the-app-and-packages"&gt;
  &lt;/a&gt;
  Installing the app and packages
&lt;/h3&gt;

&lt;p&gt;The first thing we need to do is create our app so let's open up our terminal and navigate to the folder we want to install React and paste this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-react-app react-markdown
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next cd into the just installed folder install &lt;code&gt;remarkable&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;remarkable
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need to add tailwind cdn so let's navigate to our &lt;code&gt;public/index.html&lt;/code&gt; and add this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&amp;lt;&lt;span class="nb"&gt;link &lt;/span&gt;&lt;span class="nv"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"stylesheet"&lt;/span&gt; &lt;span class="nv"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.15/tailwind.min.css"&lt;/span&gt; &lt;span class="nv"&gt;referrerpolicy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"no-referrer"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#building-the-markdown"&gt;
  &lt;/a&gt;
  Building the markdown
&lt;/h3&gt;

&lt;p&gt;We need to change some things. so let's head over to our &lt;code&gt;app.js&lt;/code&gt;, delete everything and paste this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Remarkable&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;remarkable&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;md&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Remarkable&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;p-5 md:max-w-4xl md:mx-auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-gray-900 text-4xl text-center font-bold&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;markdown&lt;/span&gt; &lt;span class="nx"&gt;editor&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="nx"&gt;htmlFor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;markdown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mt-5 mb-3 block&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 
        &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;some&lt;/span&gt; &lt;span class="nx"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/label&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;textarea&lt;/span&gt;
            &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;textarea&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;markdown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;cols&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;30&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;10&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;required&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;type in some markdown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bg-white p-5 rounded shadow w-full&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/textarea&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/article&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Still in our &lt;code&gt;app.js&lt;/code&gt; the next thing we want to work on is getting the input and displaying it on the output&lt;br&gt;
inside the &lt;code&gt;textarea&lt;/code&gt; let's add a value prop:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This means that whatever is typed in our input will be stored in our value prop&lt;br&gt;
we then need to add an &lt;code&gt;onchange&lt;/code&gt; event handler.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next thing we need to do is convert the text to markdown so inside our &lt;code&gt;div&lt;/code&gt; in the output part, add this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;dangerouslySetInnerHTML&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;__html&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;md&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or better still replace the &lt;code&gt;div&lt;/code&gt; with this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;dangerouslySetInnerHTML&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;__html&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;md&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This &lt;code&gt;render&lt;/code&gt; method is coming from the remarkable package that we imported and initialized&lt;/p&gt;

&lt;p&gt;We want to add background color so let's go back to our &lt;code&gt;index.css&lt;/code&gt; and paste this into our &lt;code&gt;body&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt; &lt;span class="nt"&gt;background-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#68&lt;/span&gt;&lt;span class="nt"&gt;e0e0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll also be pasting at the end of our &lt;code&gt;CSS&lt;/code&gt; codes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt; &lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h4&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h5&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h6&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;36px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;32px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;h3&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;28&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;h4&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;24px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;h5&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;h6&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;underline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's start up our app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dtILxb5K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q537iwd74ut8z51boykr.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtILxb5K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q537iwd74ut8z51boykr.gif" alt="markdown" width="600" height="333"&gt;&lt;/a&gt;&lt;br&gt;
If you have something like that congratulations!!! you just built yourself a markdown editor in React.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;We successfully built a markdown editor in React also using a package called remarkable. we also learned what it is. For those who couldn't get it, here's a &lt;a href="https://github.com/oyedeletemitope/markdown-in-react"&gt;link&lt;/a&gt; to the repo on my Github. Please share if you found this helpful.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>A method to compute the Betweenness Centrality against Nebula Graph</title>
      <author>lisahui</author>
      <pubDate>Mon, 20 Dec 2021 03:48:36 +0000</pubDate>
      <link>https://dev.to/lisahui/how-to-compute-the-betweenness-centrality-against-nebula-graph-3ke2</link>
      <guid>https://dev.to/lisahui/how-to-compute-the-betweenness-centrality-against-nebula-graph-3ke2</guid>
      <description>&lt;p&gt;​Betweenness Centrality (BC for short) reflects the significance of vertices in the entire network. This article will introduce how to compute Betweenness Centrality against Nebula Graph.    &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#relevant-concepts"&gt;
  &lt;/a&gt;
  Relevant Concepts
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Centrality&lt;/strong&gt; represents how central a vertex is in the entire network graph, including Degree Centrality, Closeness Centrality, and Betweenness Centrality, etc. Degree Centrality reflects the popularity of a vertex by counting the number of its incoming and outgoing edges, while Closeness Centrality computes the sum of the length of the shortest paths between a vertex and all other vertices in the graph. Thus, the more central a vertex is, the closer it is to all other vertices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Betweenness Centrality&lt;/strong&gt; counts the number of times a vertex appears on the shortest path between any two other vertices, so as to represent the significance of this vertex to the network connectivity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Betweenness Centrality&lt;/strong&gt; of a vertex is the proportion of the number of paths passing through this vertex in all the shortest paths to the total number of shortest paths.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Computing the Betweenness Centrality of a vertex in a graph can be conducted in a weighted graph or in an unweighted graph.&lt;/strong&gt; For unweighted graphs, Breadth-First Search (BFS for short) is used to find the shortest path, while for weighted graphs, Dijkstra’s algorithm is used.&lt;/p&gt;

&lt;p&gt;The following algorithms are all targeted at undirected graphs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#applicable-scenarios"&gt;
  &lt;/a&gt;
  Applicable Scenarios
&lt;/h2&gt;

&lt;p&gt;Betweenness Centrality reflects the significance of vertices in the entire network by measuring how a vertex bridges all other vertices in a graph or network. As we can see, Vertex C in the following figure acts as an important bridging vertex.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IoCWG1fh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ot1d74lzm97f9a19hmc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IoCWG1fh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ot1d74lzm97f9a19hmc.jpg" alt="Applicable Scenarios" width="200" height="179"&gt;&lt;/a&gt;&lt;br&gt;
Betweenness Centrality can be used to identify&lt;/p&gt;

&lt;p&gt;a. The intermediary entities in anti-fraud scenarios in the field of financial risk control.&lt;/p&gt;

&lt;p&gt;b. Specific disease control genes in the medical field to improve drug targets.&lt;/p&gt;

&lt;p&gt;Betweenness Centrality Algorithm&lt;br&gt;
The Betweenness Centrality of a vertex can be computed as follows:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;C_B = \sum_{s{\not=} v {\not=} t \in V} \frac{\sigma_{st}(v)}{\sigma_{st}}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;（Formula 1）&lt;/p&gt;

&lt;p&gt;In this formula,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\sigma_{st}(v)&lt;/code&gt; is the number of shortest paths from Vertex s to Vertex t.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\sigma_{st}&lt;/code&gt; is the number of shortest paths that pass through Vertex v.&lt;/p&gt;

&lt;p&gt;Vertex s and Vertex t are a pair of vertices belonging to the vertex set.&lt;/p&gt;

&lt;p&gt;To make it more convenient, the betweenness of each pair of vertices can be computed as:&lt;br&gt;
&lt;code&gt;\delta_{st}(v) = \frac{\sigma_{st}(v)}{\sigma_{st}}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;（Formula 2）&lt;/p&gt;

&lt;p&gt;So Formula 1 can be replaced by Formula 2, which gives rise to Formula 3 as follows:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;C_B(v) = \sum_{s{\not=} v {\not=} t \in V} \delta_{st}(v)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;（Formula 3）&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution-procedure"&gt;
  &lt;/a&gt;
  Solution Procedure
&lt;/h2&gt;

&lt;p&gt;To get the Betweenness Centrality of Vertex v, namely to get &lt;code&gt;$$\frac{&lt;/code&gt;, we need to know whether Vertex v lies on the path from Vertex s to Vertex t.&lt;/p&gt;

&lt;p&gt;(1) To know whether Vertex v lies on the shortest path from Vertex s to Vertex t, use the following formula &lt;code&gt;d_G&lt;/code&gt; represents the shortest path from Vertex s to Vertex t):&lt;/p&gt;

&lt;p&gt;If Vertex v lies on the shortest path from Vertex s to Vertex t, then &lt;code&gt;d_G(s,t) = d_G(s,v) + d_G(v,t)&lt;/code&gt;&lt;br&gt;
is satisfied.&lt;/p&gt;

&lt;p&gt;（Formula 4）&lt;/p&gt;

&lt;p&gt;&lt;code&gt;d_G(s,v)&lt;/code&gt; and &lt;code&gt;d_G(v,t)&lt;/code&gt; are mutually independent. According to the rules of combination, the total number of shortest paths from Vertex s to Vertex t is the product of the number of shortest paths from Vertex s to Vertex t and the number of shortest paths from Vertex s to Vertex t.&lt;/p&gt;

&lt;p&gt;Based on the above two situations, Formula 5 can be inferred:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\sigma_{st}(v) = \begin{cases}&lt;br&gt;
\sigma_{sv} \times \sigma_{vt} &amp;amp;\text{if } d(s,v) + d(v,t) = d(s,t) \&lt;br&gt;
0 &amp;amp;\text{if } other&lt;br&gt;
\end{cases}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;（Formula 5）&lt;/p&gt;

&lt;p&gt;（2）According to the above formula, we can get the conclusion that the number of shortest paths from Vertex s to Vertex t that pass through Vertex w is the result of &lt;code&gt;\sigma_{st}(w) = \sigma_{sw} \times \sigma_{wt}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;. In the graph, Vertex v is the preceding vertex of Vertex w. Therefore, the formula to count the number of shortest paths from Vertex s to Vertex t passing through Vertex v to Vertex w is:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\sigma_{st}(v,{v,w}) = \sigma_{sv} \times \sigma_{wt}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;（Formula 6）&lt;/p&gt;

&lt;p&gt;Here are two situations, &lt;code&gt;t = w&lt;/code&gt;&lt;br&gt;
and &lt;code&gt;t \not= w&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;a. If &lt;code&gt;t = w&lt;/code&gt;&lt;br&gt;
, then &lt;code&gt;\sigma_{wt}&lt;/code&gt;&lt;br&gt;
will not exist and we can get&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\delta(v,{v,w}) = \frac{\sigma_{sv}}{\sigma_{sw}}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;（Formula 7）&lt;/p&gt;

&lt;p&gt;b. If &lt;code&gt;t \not= w&lt;/code&gt;&lt;br&gt;
, then we can get&lt;br&gt;
&lt;code&gt;\delta(v,{v,w}) = \frac{\sigma_{sw}(v)}{\sigma_{sw}} \times&lt;br&gt;
\frac{\sigma_{st}(w)}{\sigma_{st}}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;（Formula 8）&lt;/p&gt;

&lt;p&gt;(3) So considering the above two situations, we can get&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\delta_s(v) = \sum_{w:v \in P_s(w)}(\frac{\sigma_{sw}(v)}{\sigma_{sw}} + \sum_{t \not= w \in V}\frac{\sigma_{sw}(v)}{\sigma_{sw}} \times \frac{\sigma_{st}(w)}{\sigma_{st}}) \&lt;br&gt;
= \sum_{w:v \in P_s(w)}\frac{\sigma_{sw}(v)}{\sigma_{sw}}(1 + \sum_{t \not= w \in V} \frac{\sigma_{st}(w)}{\sigma_{st}}) \&lt;br&gt;
= \sum_{w:v \in P_s(w)}\frac{\sigma_{sw}(v)}{\sigma_{sw}} (1 + \delta_s(w))&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;（Formula 9）&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;w:v \in P_s(w)&lt;/code&gt;&lt;br&gt;
, Vertex v is the predecessor of Vertex w in the path from Vertex s to Vertex w.&lt;/p&gt;

&lt;p&gt;(4) According to the above formula that gets the result of , the algorithm workflow of Betweenness Centrality in unweighted graphs can be given as follows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OzbjRodr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rr8dw9hsg6b0dz2fugkf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OzbjRodr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rr8dw9hsg6b0dz2fugkf.png" alt="Image description" width="378" height="118"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cN9PsoWT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7pwg481s5v0e0nb3s24b.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cN9PsoWT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7pwg481s5v0e0nb3s24b.jpg" alt="Image description" width="880" height="1132"&gt;&lt;/a&gt;&lt;br&gt;
For unweighted graphs, follow the above process.&lt;/p&gt;

&lt;p&gt;To compute the Betweenness Centrality in weighted graphs requires Dijkstra’s algorithm, that is, to change the code in the first while loop.&lt;/p&gt;

&lt;p&gt;The Betweenness Centrality against Nebula Graph has achieved the algorithms for both weighted and unweighted graphs. For the code, see &lt;a href="https://github.com/vesoft-inc/nebula-algorithm/blob/master/nebula-algorithm/src/main/scala/com/vesoft/nebula/algorithm/lib/BetweennessCentralityAlgo.scala"&gt;https://github.com/vesoft-inc/nebula-algorithm/blob/master/nebula-algorithm/src/main/scala/com/vesoft/nebula/algorithm/lib/BetweennessCentralityAlgo.scala&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#computation-examples"&gt;
  &lt;/a&gt;
  Computation Examples
&lt;/h2&gt;

&lt;p&gt;Firstly, read the graph data in Nebula Graph to specify the edge data for data reading.&lt;/p&gt;

&lt;p&gt;Secondly, make a topological graph based on the edge data of Nebula Graph and perform centrality computation.&lt;/p&gt;

&lt;p&gt;The graph data read in Nebula Graph can be illustrated in the following unweighted graph:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iasey-VM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujbiqqrfrtkx97rrystd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iasey-VM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujbiqqrfrtkx97rrystd.jpg" alt="Image description" width="600" height="452"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Compute the BC of Vertex 1:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;The vertex pair with the shortest path passing through Vertex 1&lt;/th&gt;
&lt;th&gt;The total number of shortest paths between the vertex pair&lt;/th&gt;
&lt;th&gt;The number of the shortest path passing through Vertex 1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2-4&lt;/td&gt;
&lt;td&gt;3 （2-3-4, 2-5-4, 2-1-4）&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;The BC of Vertex 1:&lt;/td&gt;
&lt;td&gt;1/3&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Compute the BC of Vertex 2:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;The vertex pair with the shortest path passing through Vertex 2&lt;/th&gt;
&lt;th&gt;The total number of shortest paths between the vertex pair&lt;/th&gt;
&lt;th&gt;The number of the shortest path passing through Vertex 2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1-3&lt;/td&gt;
&lt;td&gt;2 （1-2-3, 1-4-3）&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3-5&lt;/td&gt;
&lt;td&gt;2（3-2-5, 3-4-5）&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;The BC of Vertex 2:&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Compute the BC of Vertex 3:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;The vertex pair with the shortest path passing through Vertex 3&lt;/th&gt;
&lt;th&gt;The total number of shortest paths between the vertex pair&lt;/th&gt;
&lt;th&gt;The number of the shortest path passing through Vertex 3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2-4&lt;/td&gt;
&lt;td&gt;3 （2-3-4, 2-5-4, 2-1-4）&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;The BC of Vertex 3:&lt;/td&gt;
&lt;td&gt;1/3&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Compute the BC of Vertex 4:&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;The vertex pair with the shortest path passing through Vertex 4&lt;/th&gt;
&lt;th&gt;The total number of shortest paths between the vertex pair&lt;/th&gt;
&lt;th&gt;The number of the shortest path passing through Vertex 4&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1-3&lt;/td&gt;
&lt;td&gt;2 （1-4-3, 1-2-3）&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3-5&lt;/td&gt;
&lt;td&gt;2（3-4-5, 3-2-5)&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;The BC of Vertex 4:&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Compute the BC of Vertex 5:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;The vertex pair with the shortest path passing through Vertex 5&lt;/th&gt;
&lt;th&gt;The total number of shortest paths between the vertex pairs&lt;/th&gt;
&lt;th&gt;The number of the shortest path passing through Vertex 5&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2-4&lt;/td&gt;
&lt;td&gt;3 （2-3-4, 2-5-4, 2-1-4）&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;The BC of Vertex 5:&lt;/td&gt;
&lt;td&gt;1/3&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Therefore, the BC of each vertex is: Vertex 1: 1/3 Vertex 2: 1 Vertex 3: 1/3 Vertex 4: 1 Vertex 5: 1/3&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#result-examples"&gt;
  &lt;/a&gt;
  Result Examples
&lt;/h2&gt;

&lt;p&gt;Data: Read the edge data in the Nebula Graph test, and take srcId, dstId, and rank as the triplet of edges in the topological graph (Source Vertex, Destination Vertex, and Rank).&lt;/p&gt;

&lt;p&gt;(root@nebula) [test]&amp;gt; match (v:node) -[e:relation] -&amp;gt; ()  return e&lt;br&gt;
+------------------------------------+&lt;br&gt;
| e                                  |&lt;br&gt;
+------------------------------------+&lt;br&gt;
| [:relation "3"-&amp;gt;"4" @1 {col: "f"}] |&lt;br&gt;
+------------------------------------+&lt;br&gt;
| [:relation "2"-&amp;gt;"3" @2 {col: "d"}] |&lt;br&gt;
+------------------------------------+&lt;br&gt;
| [:relation "2"-&amp;gt;"5" @4 {col: "e"}] |&lt;br&gt;
+------------------------------------+&lt;br&gt;
| [:relation "4"-&amp;gt;"5" @2 {col: "g"}] |&lt;br&gt;
+------------------------------------+&lt;br&gt;
| [:relation "1"-&amp;gt;"5" @1 {col: "a"}] |&lt;br&gt;
+------------------------------------+&lt;br&gt;
| [:relation "1"-&amp;gt;"2" @3 {col: "b"}] |&lt;br&gt;
+------------------------------------+&lt;br&gt;
| [:relation "1"-&amp;gt;"4" @5 {col: "c"}] |&lt;br&gt;
+------------------------------------+&lt;br&gt;
Read the edge data in Nebula Graph, set the graph as unweighted, and compute the Betweenness Centrality of each vertex. The results are as follows:&lt;/p&gt;

&lt;p&gt;vid: 4 BC: 1.0&lt;br&gt;
vid: 1 BC: 0.3333333333333333&lt;br&gt;
vid: 3 BC: 0.3333333333333333&lt;br&gt;
vid: 5 BC: 0.3333333333333333&lt;br&gt;
vid: 2 BC: 1.0&lt;br&gt;
Read the edge data of Nebula Graph, set the graph as weighted, and compute the Betweenness Centrality of each vertex. The results are as follows:&lt;/p&gt;

&lt;p&gt;vid: 4 BC: 2.0&lt;br&gt;
vid: 1 BC: 0.5&lt;br&gt;
vid: 3 BC: 1.0&lt;br&gt;
vid: 5 BC: 2.0&lt;br&gt;
vid: 2 BC: 0.0&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;Paper: A Faster Algorithm for Betweenness Centrality&lt;br&gt;
The source code of Python’s NetworkX realizing Betweenness Centrality: &lt;a href="https://github.com/networkx/networkx/blob/master/networkx/algorithms/centrality"&gt;https://github.com/networkx/networkx/blob/master/networkx/algorithms/centrality&lt;/a&gt;&lt;/p&gt;

</description>
      <category>database</category>
      <category>opensource</category>
      <category>devops</category>
    </item>
    <item>
      <title>An NFT without a Blockchain. No gas fees. No Eth. No gatekeepers</title>
      <author>Hari Haren</author>
      <pubDate>Mon, 20 Dec 2021 03:12:03 +0000</pubDate>
      <link>https://dev.to/thisishariharen/an-nft-without-a-blockchain-no-gas-fees-no-eth-no-gatekeepers-3de9</link>
      <guid>https://dev.to/thisishariharen/an-nft-without-a-blockchain-no-gas-fees-no-eth-no-gatekeepers-3de9</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;WEB3&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;This is a small proof-of-concept. It relies on PGP - but you could use Keybase, GPG, or any other hard-to-use encryption program.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#background"&gt;
  &lt;/a&gt;
  Background
&lt;/h2&gt;

&lt;p&gt;Suppose you want to support an artist and give them money. That's easy. Most artists take PayPal, bank transfer, or cash. But how can you prove that you've paid an artist for a specific piece of work? That is, in essence, all an NFT is - the seller signing a statement that the buyer has sent them money related to a thing.&lt;/p&gt;

&lt;p&gt;Whether that claim can be meaningfully sold on to someone else is outside the scope of this discussion.&lt;/p&gt;

&lt;p&gt;The artist's signature&lt;br&gt;
Most cryptographic schemes let a user digitally sign a file. Essentially, all this says is "this string of bits was seen by this user". It cannot say whether the signer was the person who originally created the file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2SBfEtvj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbhnxz4dackhmnmsbznd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2SBfEtvj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbhnxz4dackhmnmsbznd.png" alt="CRYPTOGRAPHY" width="800" height="533"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;-----BEGIN PGP SIGNED MESSAGE----- 
I, Terence Eden, created "monkey.jpg"  with a SHA512 hash of  123a887f3d5e7f246077eee40d0c073fa5ecad85d5b9bd130a87eb07408… 
This token was created at  2021-12-25T01:02:03.5Z 
-----BEGIN PGP SIGNATURE----- Version: 1.2.3  456aae68585c9b176e06792396a08ad9ab92e335940e33c79ab69053a55e4f19… 
----------END PGP SIGNATURE-----
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hey presto! Now the seller has a token - the above file - which offers strong proof that they were in possession of that exact  &lt;code&gt;monkey.jpg&lt;/code&gt;  file.&lt;/p&gt;

&lt;p&gt;(In reality, this would be a formal schema - JSON, ASN.1, XML, whatever - with lots of metadata. But for these examples, let's keep it simple and human readable.)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-transaction"&gt;
  &lt;/a&gt;
  The transaction
&lt;/h2&gt;

&lt;p&gt;The sale can go via any medium. Cash in hand, PayPal, bank transfer, or even unregulated cryptocurrency. The problem with Blockchain is that you cannot guard against off-chain transactions. There's nothing to stop me buying an NFT for 100ETH and the seller immediately returning that to me in cash.&lt;/p&gt;

&lt;p&gt;Here's how a buyer can create their own "receipt" saying that they purchased the above token:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;----------BEGIN PGP SIGNED MESSAGE----- 
I, Luke Skywalker, have purchased "monkey.jpg"  with a SHA512 hash of  123a887f3d5e7f246077eee40d0c073fa5ecad85d5b9bd130a87eb07408… 
And signed with  456aae68585c9b176e06792396a08ad9ab92e335940e33c79ab69053a55e4f19… 
For 100ETH This payment was sent at  2021-12-26T02:03:04.5Z -
---------BEGIN PGP SIGNATURE----- Version: 1.2.3  798a42cec24ff0cc40a9270a645f115c137625e1868563044adb139a1d0a3050… 
----------END PGP SIGNATURE-----
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;he seller can verify the transaction once they have received the money:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;----------BEGIN PGP SIGNED MESSAGE----- 
I, Terence Eden, have sold "monkey.jpg"  with a SHA512 hash of  123a5887f3d5e7f246077eee40d0c073fa5ecad85d5b9bd130a87eb07408… 
And signed with  456aae68585c9b176e06792396a08ad9ab92e335940e33c79ab69053a55e4f19… 
For 100ETH To Luke Skywalker With transaction signature 789a42cec24ff0cc40a9270a645f115c137625e1868563044adb139a1d0a3050… 
This receipt was generated at  2021-12-27T02:03:04.5Z 
----------BEGIN PGP SIGNATURE----- Version: 1.2.3  000a7324409938862ff8006291b5471aef8c7ba4732a60e6823e77284d42cf17… 
----------END PGP SIGNATURE-----
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ta-da! The buyer now has a chain of cryptographically signed, Non-Fungible Tokens, which shows that an artist claims to have created a file and claims to have received funds from the buyer.&lt;/p&gt;

&lt;p&gt;Sure, you can pad it out with a bit more back-and-forth, adding promises to sell, more thorough metadata. You could even use a publicly agreed-on Merkle Tree to add a bit more "trust".&lt;/p&gt;

&lt;p&gt;And that's how you mint an NFT with none of the baggage and none of the fees. Easy!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#problems"&gt;
  &lt;/a&gt;
  Problems
&lt;/h2&gt;

&lt;p&gt;But there are a few drawbacks with this.&lt;/p&gt;

&lt;p&gt;Without a published chain of transactions, there is no guarantee that the artist hasn't sold the same item multiple times.&lt;/p&gt;

&lt;p&gt;Without a verified on-chain transaction, there is a risk that either the buyer or the seller may be lying about the transaction price.&lt;/p&gt;

&lt;p&gt;Because there are no third-parties involved, there is no opportunity for escrow or complaint resolution.&lt;/p&gt;

&lt;p&gt;To be clear -  &lt;em&gt;all&lt;/em&gt;  of these problems are also present in "traditional" NFTs. Buyers have no idea of the provenance of the piece, there's nothing stopping multiple sales of visually identical artworks, scams are rife and smart-contracts are buggy.&lt;/p&gt;

&lt;p&gt;But if you want to create an Non-Fungible Token - there's no reason to pay inflated "gas" fees. You don't need any centralised brokers or platforms. You can own your own ledger and be completely decentralised for free.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Web3 should be about  &lt;em&gt;you&lt;/em&gt;  being in control - not endlessly paying micro-transactions to hundreds of gatekeepers.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Originally Posted - &lt;a href="https://shkspr.mobi/blog/2021/12/an-nft-without-a-blockchain-no-gas-fees-no-eth/"&gt;Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you liked it and you never heard this before. You owe me one coffee before leaving mate. Cheers! 😉✌&lt;/strong&gt; &lt;br&gt;
Stay Safe💖&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/hariharen"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQj764Ae--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-orange.png" width="434" height="100"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>nft</category>
      <category>ethereum</category>
      <category>web3</category>
    </item>
    <item>
      <title>All You Need To Know About Using Tables on Appsmith </title>
      <author>uma victor</author>
      <pubDate>Mon, 20 Dec 2021 02:52:14 +0000</pubDate>
      <link>https://dev.to/appsmith/all-you-need-to-know-about-using-tables-on-appsmith-2poi</link>
      <guid>https://dev.to/appsmith/all-you-need-to-know-about-using-tables-on-appsmith-2poi</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Statistical data and database information are often represented using table models. These models might be used to represent large amounts of data sets hence there is a need for customization between table sets to help distinguish them. Finding a suitable application to help develop tables that meet up to these requirements is often times an uphill task. Appsmith is an open-source framework that enables developers to easily build internal tools for applications and add functionality to it. With Appsmith we can also build tables, link them up to an API or database and perform crud applications with it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#goals"&gt;
  &lt;/a&gt;
  Goals
&lt;/h2&gt;

&lt;p&gt;In this tutorial, we will learn how to style tables in Appsmith. We will also learn how&lt;br&gt;
to customize different aspects of our table to change the appearance and how the&lt;br&gt;
table data is displayed. We will apply different styles to different tables to help distinguish them.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-do-we-need-to-style-tables"&gt;
  &lt;/a&gt;
  Why do we need to style tables
&lt;/h2&gt;

&lt;p&gt;In situations where we are building numerous tables on Appsmith, to be able to differentiate these tables we will need to add labels to each table. Alternatively, we can also apply different styles to each individual table ranging from: color-gradients, cell colors, borders and box-shadows. Styling helps to improve the overall appearance of tables and when styles are used to identify specifically stored data, it makes it easier for viewers to pinpoint what they need to see in a table. For example, a table may have a specific cell color for table columns reflecting profit or loss in an account and this could be indicated to make the table easier for general access and understandability in an organization.  We can apply lots of styles ranging from shadows, to text and background colors among others.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-styling-works-in-appsmith"&gt;
  &lt;/a&gt;
  How Styling Works in Appsmith
&lt;/h2&gt;

&lt;p&gt;Appsmith tables provide an ordered form of representing data from a data source in rows and columns.  This table can also be used to view large amounts of data, and the data can be arranged in the form of server-side pagination in which the amount of data displayed is limited per page. Below are a few examples of some tables built with Appsmith:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YhXFtClP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1638266320820_screenshot1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YhXFtClP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1638266320820_screenshot1.png" alt="" width="763" height="620"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XexhZ2eq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1638266428001_screenshot2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XexhZ2eq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1638266428001_screenshot2.png" alt="" width="791" height="631"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Appsmith provides us with a property pane. This panel contains the datasource, rows and columns in the table, and actions that can be carried out on them. Numerous styles which can be applied to produce various results with the  widgets can also be found in the property pane. To get to this style pane, select the widget you wish to style and click on the &lt;code&gt;cog-wheel&lt;/code&gt; icon at the top right. The &lt;code&gt;Style&lt;/code&gt; section is located at the bottom of the menu that pops-up.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zc_s4_8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1637334305363_style%2Bpanel.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zc_s4_8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1637334305363_style%2Bpanel.png" alt="style pane" width="367" height="567"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This panel may vary based on which widget is selected. The image above is the &lt;code&gt;Style&lt;/code&gt; panel of the Table widget. Starting from the top,  we have the folliowing options: there’s the &lt;code&gt;Cell Background&lt;/code&gt;, the &lt;code&gt;Text Color&lt;/code&gt; , &lt;code&gt;Font Style&lt;/code&gt;, &lt;code&gt;Text Align&lt;/code&gt; and &lt;code&gt;Vertical Alignment&lt;/code&gt;. We will go over these options in the course of this tutorial and discuss the effects of each of them.&lt;/p&gt;

&lt;p&gt;In these style options there is a Javascript toggle button. Clicking on the &lt;code&gt;JS&lt;/code&gt; toggle button changes the mode of input for the options and lets us enter strings of characters or Javacript for the property we wish to apply. For instance, we can set visibility to none by toggling the &lt;code&gt;Js&lt;/code&gt; toggle for the visible property and entering “false” in the field or entering &lt;code&gt;{{false}}&lt;/code&gt;. The latter is Javascript enclosed in mustache syntax. We will talk more about what mustache syntax is and its usage in the later part of this tutorial. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#styling-the-table"&gt;
  &lt;/a&gt;
  Styling the table
&lt;/h2&gt;

&lt;p&gt;Below, I have a table widget with some data in it. If you select your table, you will get a popup with a gear icon that you can use to edit your table&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oO8ropNO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635343538638_table.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oO8ropNO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635343538638_table.jpg" alt="" width="880" height="437"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Clicking on the gear icons opens up a property pane to edit the table. If you scroll down the pane, you will see a section to add styles to the table.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3q-0Jx7A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635343812209_style%2Bsection.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3q-0Jx7A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635343812209_style%2Bsection.jpg" alt="" width="880" height="512"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#cell-background-and-text-color"&gt;
  &lt;/a&gt;
  Cell Background and Text Color
&lt;/h2&gt;

&lt;p&gt;In this section, we will learn about the different styles provided by Appsmith and how they can be applied to produce different results with tables. The first two options in the &lt;code&gt;Styles&lt;/code&gt; section provides us with options to change the color of our table’s background and also our text color.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fAfeKpio--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635343996488_change%2Bcolor.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fAfeKpio--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635343996488_change%2Bcolor.jpg" alt="" width="880" height="333"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Above, I have selected a black color for my cell’s background and I’ve also set my text color to white.  Alternatively, you can use a different color other than the ones provided here by entering the Hex code for the color in the property field. An example is a purple color with the Hex code: &lt;code&gt;#ed18cd&lt;/code&gt; . If you are looking for a site where you can pick colors from a palette and get the Hex code you can check out Coolors or you can get the extension for your browser.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#changing-font-size"&gt;
  &lt;/a&gt;
  Changing Font Size
&lt;/h2&gt;

&lt;p&gt;The next option gives us the ability to be able to change the font size of the text in our table. There are different options to choose from with “Heading 1” being the largest font size and “Paragraph 2” being the smallest font size.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BYgggHpM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635344346493_text%2Bsize.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BYgggHpM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635344346493_text%2Bsize.jpg" alt="" width="880" height="299"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, I have increased the font size for my table by setting my “Text size” property to Heading 1. &lt;/p&gt;

&lt;p&gt;Font Style, Text Align and Vertical Alignment&lt;/p&gt;

&lt;p&gt;With the remaining three options, we can customize the font style and justify our text horizontally and vertically.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--efoROIa8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635344693356_rest%2Bof%2Bstyles.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--efoROIa8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635344693356_rest%2Bof%2Bstyles.jpg" alt="" width="880" height="369"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note that it is possible to add both “bold” and “italics” font style at the same time. The text-align property provides you with options to position your text either at the left, center or right of your cell. In other words, it lets us position our text on the horizontal axis. The following property: Vertical Alignment is used to make adjustments to the vertical position of our text in the table. The first option positions text at the top of their cell, the second positions the text at the center and the last positions the text at the bottom of the cell. &lt;/p&gt;

&lt;p&gt;Also, rather than applying these styles to the entire table, it is possible to target only a particular cell to apply these styles.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#adding-styles-based-on-fulfillment-of-a-condition"&gt;
  &lt;/a&gt;
  Adding Styles Based on Fulfillment of a Condition
&lt;/h2&gt;

&lt;p&gt;Appsmith provides us with a feature where we can provide styles to certain table elements that meet a particular criteria. We can define this criteria using Javascript and also state what styles should be applied. To do this, open the property pane on the column you wish to apply this condition to.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yzLEHnD5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1637422755431_final1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yzLEHnD5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1637422755431_final1.png" alt="column selected" width="432" height="542"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Above, I have selected the &lt;code&gt;phone&lt;/code&gt; column. We will add a condition to set the text color for this column. We will check if the value of each row in the phone column is even or odd and assign it a particular color. We can add Javascript to the property pane elements using a syntax called &lt;code&gt;mustache&lt;/code&gt;. This is primarily Javascript code enclosed with two curly-braces &lt;code&gt;{{ }}&lt;/code&gt;.  With this syntax we can add Javascript data or even functions to our table.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  {{currentRow.phone %2 == 0? "red" : "blue"}}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Some examples on how to write Javascript functions can be found in Appsmith Documentation. The above command checks if the row is even, if it is it will be assigned a color red else it will be blue. We can add this to the &lt;code&gt;Text Color&lt;/code&gt; option in your column.  Enable the &lt;code&gt;JS&lt;/code&gt; toggle to be able to write Javascript in the field and add the snippet above.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lyno-Zu9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1637423309366_final2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lyno-Zu9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1637423309366_final2.png" alt="" width="880" height="468"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here the fields divisble by two in the &lt;code&gt;phone&lt;/code&gt; columns have a text color of red and the others have a text color of blue. This way, you can apply different styles to your table if certain criteria are met.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-gradient-as-cell-background-color"&gt;
  &lt;/a&gt;
  Adding Gradient as Cell Background Color
&lt;/h2&gt;

&lt;p&gt;Appsmith allows us to add gradients as background color as we would normally add in a &lt;code&gt;CSS Stylesheet&lt;/code&gt;.  Here is an example of a &lt;code&gt;CSS&lt;/code&gt; gradient:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;linear-gradient(90deg, hsla(217, 100%, 50%, 1) 0%, hsla(186, 100%, 69%, 1) 100%)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;We can add this in our &lt;code&gt;Background&lt;/code&gt; property:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9KUx2NIA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1638197666577_new%2Bgradient.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9KUx2NIA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1638197666577_new%2Bgradient.png" alt="gradient color" width="880" height="471"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The resulting color change will take place in the table widget.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-applications-of-appsmith-as-an-internal-tool-builder"&gt;
  &lt;/a&gt;
  Other Applications of Appsmith as an Internal Tool Builder
&lt;/h2&gt;

&lt;p&gt;Appsmith offers lots of functionalities for building a lot of internal tools. With Appsmith, we can build Admin panels, dashboards, workflows and applications. Appsmith provides us with options to either create these internal tools from scratch with UI widgets or, you can customize an existing template to create an internal tool of your choice.&lt;/p&gt;

&lt;p&gt;What’s more? with Appsmith you can supply data from  your database or API to your internal tools. Also, you can add updates and perform CRUD operations right from Appsmith.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article we covered how we can style tables in Appsmith for better visual appearance and to serve as a means from distinguishing them from other tables.&lt;/p&gt;

</description>
      <category>adminpanel</category>
      <category>dashboard</category>
    </item>
    <item>
      <title>Frontend Challenge #9, Base Apparel Component</title>
      <author>JC Smiley</author>
      <pubDate>Mon, 20 Dec 2021 02:27:41 +0000</pubDate>
      <link>https://dev.to/jcsmileyjr/frontend-challenge-9-base-apparel-component-3g68</link>
      <guid>https://dev.to/jcsmileyjr/frontend-challenge-9-base-apparel-component-3g68</guid>
      <description>&lt;p&gt;Follow me as I briefly describe my coding journey to build the Base Apparel component from &lt;a href="https://www.frontendmentor.io/home"&gt;Frontend Mentors&lt;/a&gt;. I’m a firm believer in learning in public, not being perfect, and each day improving by 1%. I welcome feedback from anyone and will update the final project as time allows. Frontend Mentors is a online platform that provide front-end challenges that include professional web designs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The goal is to build this:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--icTtoom8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8e3p1f42sq1v5ymim6k7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--icTtoom8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8e3p1f42sq1v5ymim6k7.jpg" alt="desktop design from Frontend Mentors" width="880" height="489"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-first-stumbling-block-the-mobile-responsive-layout"&gt;
  &lt;/a&gt;
  Step 1: First Stumbling block, the mobile responsive layout
&lt;/h2&gt;

&lt;p&gt;In my mind, the visual layout can be sectioned into a header, main content, and image areas that are layered differently on the mobile and desktop designs. I needed to use CSS-Grid to move them around based on those two different designs.&lt;/p&gt;

&lt;p&gt;This led to my first stumbling block in that I've forgotten how to use CSS-Grid. I revisited several of my favorite resources, &lt;a href="https://css-tricks.com/"&gt;CSS-Tricks&lt;/a&gt; and &lt;a href="https://cssgrid-generator.netlify.app/"&gt;CSS Generator&lt;/a&gt;, for guidance.  &lt;/p&gt;

&lt;p&gt;While these resources were helpful, a simple spelling error cost me several days of frustrations. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kUWOXHt1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jw7pa09kxxpcov3ecpqm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kUWOXHt1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jw7pa09kxxpcov3ecpqm.png" alt="CSS Grid code with error" width="466" height="601"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-lessons-relearned-in-every-project"&gt;
  &lt;/a&gt;
  Step 2: Lessons relearned in every project
&lt;/h2&gt;

&lt;p&gt;I’m ashamed to say but I just can’t remember CSS variables and routine styling for background images. So I’m explicitly posting this here so I can pull up next quicker. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Code block showing CSS Variables&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FAuvWF4l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ijiuyyhz9v0a76lh2bgf.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FAuvWF4l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ijiuyyhz9v0a76lh2bgf.PNG" alt="Block of code demoing CSS Variables" width="513" height="140"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G66BnBkB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/955xfxbxxbho9ykogya7.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G66BnBkB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/955xfxbxxbho9ykogya7.PNG" alt="Block of code demoing CSS Variables" width="342" height="92"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Code block showing CSS style for background images&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VCklIR4M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jn0ypdfaao5zoxhgbqud.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VCklIR4M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jn0ypdfaao5zoxhgbqud.PNG" alt="Block of code demoing CSS style for background images" width="577" height="51"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-styling-the-content-in-the-mobile-layout"&gt;
  &lt;/a&gt;
  Step 3: Styling the content in the mobile layout
&lt;/h2&gt;

&lt;p&gt;While this didn't take a long time, I think I gained some valuable experience. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Use CSS Variables to apply consistent colors quickly&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There are so many ways to style a header. For this project, I needed it's text uppercase, center align, huge font size, spacing between the letters.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XGo-F01y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4ffi444gcqkh0pq4ihy.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XGo-F01y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4ffi444gcqkh0pq4ihy.PNG" alt="Block of code demoing styling H1 element" width="231" height="167"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-4-major-pain-in-the-neck-was-an-input-field-with-a-svg-inside-of-it"&gt;
  &lt;/a&gt;
  Step 4: Major pain in the neck was an input field with a SVG inside of it
&lt;/h2&gt;

&lt;p&gt;While this looked simple, my first attempt at using CSS to position the SVG inside the input field failed  miserably. So I burned that code to the ground and started over. This time, I use a div with an input and image inside of it with Flexbox to the rescue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--51RMpK71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cso13tbkidx65d81s61l.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--51RMpK71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cso13tbkidx65d81s61l.PNG" alt="mobile design layout" width="403" height="822"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-5-desktop-responsive-layout-design"&gt;
  &lt;/a&gt;
  Step 5: Desktop responsive layout design
&lt;/h1&gt;

&lt;p&gt;This wasn’t hard but a short grind to make tiny changes to each element’s layout and styled based on the larger designs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DsuMsCOE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mhlnup2ft2ojzg2hdb05.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DsuMsCOE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mhlnup2ft2ojzg2hdb05.PNG" alt="Desktop design layout" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-6-the-final-task-is-developing-an-active-state-with-javascript"&gt;
  &lt;/a&gt;
  Step 6: The final task is developing an active state with JavaScript
&lt;/h1&gt;

&lt;p&gt;The last task is when a user inputs an incorrect email format into the input field, an error image and message is shown.  I’m sure there are better methods but my default is to  add and remove a “hide” class on an element. I added an additional image within the input field and a label for the message below the input field.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;JavaScript functionality&lt;/em&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bNEzmWA8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2hgtyag8lywipb6ecyy.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bNEzmWA8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2hgtyag8lywipb6ecyy.PNG" alt="Block of code showing the functionality" width="725" height="244"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;HTML layout for error handling&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jhnDNcFe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2u4tyy6izf1spd3csda.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jhnDNcFe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2u4tyy6izf1spd3csda.PNG" alt="Block of code showing the HTML of the error" width="880" height="119"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Image of the error results&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pi9Zo6KX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5nz0cnxn86gte580v1fy.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pi9Zo6KX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5nz0cnxn86gte580v1fy.PNG" alt="Live demo of the error handling" width="575" height="150"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-outcome"&gt;
  &lt;/a&gt;
  Final Outcome
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fmYHKPcs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gr0t82tj7udkq4cw9jbm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fmYHKPcs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gr0t82tj7udkq4cw9jbm.png" alt="Finished Result" width="880" height="413"&gt;&lt;/a&gt;&lt;br&gt;
You can find the completed code &lt;a href="https://github.com/jcsmileyjr/Base-Apparel-Component"&gt;here&lt;/a&gt; and play with site &lt;a href="https://jcsmileyjr.github.io/Base-Apparel-Component/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-i-learned"&gt;
  &lt;/a&gt;
  What I learned
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;How to change an HTML input's placeholder color. &lt;/li&gt;
&lt;li&gt;CSS Grid is great for creating dynamic layouts.&lt;/li&gt;
&lt;li&gt;I still don’t understand SVG and how to use them properly.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#resources-used"&gt;
  &lt;/a&gt;
  Resources used
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/"&gt;CSS-Tricks blog post on CSS Grid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cssgrid-generator.netlify.app/"&gt;CSS Generator tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/almanac/properties/b/background-image/"&gt;CSS-Tricks blog post on Linear gradients&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/a-complete-guide-to-css-gradients/"&gt;CSS-Tricks blog post on CSS gradients&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/howto/howto_css_placeholder.asp"&gt;w3schools documentation on Input's Placeholders with CSS &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/checkValidity"&gt;Mozilla.org documentation on checking validity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event"&gt;Mozilla.org documentation on creating event listeners&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, let's connect:
&lt;/h3&gt;

&lt;p&gt;Obviously, this isn’t a perfect solution. I couldn't figure out the desktop's background image perfectly and other things.&lt;/p&gt;

&lt;p&gt;Thank you for reading my learning journey and if you have tips, please DM me on &lt;a href="https://twitter.com/JCSmiley4"&gt;Twitter&lt;/a&gt; or &lt;a href="https://www.linkedin.com/in/jcsmileyjr/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>challenge</category>
      <category>devjournal</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Why companies should support their employees side projects</title>
      <author>Wannabe Entrepreneur 🎙️</author>
      <pubDate>Mon, 20 Dec 2021 02:03:12 +0000</pubDate>
      <link>https://dev.to/wbepodcast/why-companies-should-support-their-employees-side-projects-lm5</link>
      <guid>https://dev.to/wbepodcast/why-companies-should-support-their-employees-side-projects-lm5</guid>
      <description>&lt;h3&gt;
  &lt;a href="#being-a-developer-is-99-brain-work"&gt;
  &lt;/a&gt;
  Being a developer is 99% brain work!
&lt;/h3&gt;

&lt;p&gt;We spend most of our time sited on a chair solving bugs, implementing new features, and scrolling through Twitter...&lt;/p&gt;

&lt;p&gt;We must find ways to explain to our CEOs why we need to add a new node to our K8s cluster and to our POs why we should save extra estimation points for unit tests.&lt;/p&gt;

&lt;p&gt;All of this requires a level of creativity and problem solving that many other professions do not require...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-do-you-do-after-work"&gt;
  &lt;/a&gt;
  What do you do after work?
&lt;/h3&gt;

&lt;p&gt;After a tiring day of work, we can not wait to arrive home, log in to our personal laptop and work on our side project. We can not get enough!! How many domains have you bought this year?? Have you started a youtube channel yet?&lt;/p&gt;

&lt;p&gt;For us knowing how to code is like having a super power! With only just a laptop we get to transform into reality whatever we can imagine. However, there is a downside to this...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#we-get-bored-very-quickly"&gt;
  &lt;/a&gt;
  We get bored very quickly!!
&lt;/h3&gt;

&lt;p&gt;I dare to say that the two most spoken words that come out from the mouth of a developer are: "coffee" and "bored"!&lt;/p&gt;

&lt;p&gt;It's really hard to keep a coder in a company for more than 5 years because it's difficult to keep them motivated.&lt;/p&gt;

&lt;p&gt;There will be a time when a company's product does not need exciting new features or experimental tech. It just needs better logging...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#developers-need-a-chance-to-explore-their-entrepreneurial-side"&gt;
  &lt;/a&gt;
  Developers need a chance to explore their entrepreneurial side
&lt;/h3&gt;

&lt;p&gt;Companies should cultivate a culture of entrepreneurism among their developers. Here are some ideas:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Teach them about the business&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Developers are very creative but lack the business and marketing background. By teaching your devs about the business side of the company and encouraging them to understand more about product building and marketing you are building highly valuable assets for your business&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listen to their ideas&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Nothing kills the motivation more than being ignored. I have seen many of my colleagues suggesting brilliant ideas to their bosses that end up being ignored and the result was that my peers stopped trying to contribute and end up leaving...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support their side projects&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Many companies fear that by supporting their employee's side projects they will eventually lose their focus and eventually leave. This is wrong for two main reasons:&lt;/p&gt;

&lt;p&gt;1- Is extremely hard to make a developer's salary from your side projects... XD&lt;/p&gt;

&lt;p&gt;2- Being bored is actually the main reason why many developers end up working less and eventually leaving their jobs...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#virtual-coworking-space-for-entrepreneurs"&gt;
  &lt;/a&gt;
  Virtual co-working space for entrepreneurs
&lt;/h3&gt;

&lt;p&gt;If you are an employer that wants to support their employee's entrepreneurial spirit or a developer that wants to build their side projects with other indie makers have a look into the WBE Space.&lt;/p&gt;

&lt;p&gt;It's an online coworking space where people from all backgrounds work together in their projects and support each other with feedback and tips.&lt;/p&gt;

&lt;p&gt;Funny enough most of our members have a full time job and are happy with it :D&lt;/p&gt;

</description>
      <category>career</category>
      <category>sideprojects</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
