<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Two ways to integrate Javadoc into IntelliJ IDEA</title>
      <author>scottshipp</author>
      <pubDate>Tue, 05 Oct 2021 15:55:33 +0000</pubDate>
      <link>https://dev.to/scottshipp/two-ways-to-integrate-javadoc-into-intellij-idea-leb</link>
      <guid>https://dev.to/scottshipp/two-ways-to-integrate-javadoc-into-intellij-idea-leb</guid>
      <description>&lt;p&gt;Do you Google for Javadoc? Isn't it annoying? Picture this: you're in a flow state, with a full stack on your mind, and a good couple dozen business concepts thrown in, and you just want to double-check the behavior of a given library method. Do you really want to stop what you're doing, open a browser, search for the library documentation, make sure you are looking at the right version, and then navigate to the class and method in question?&lt;/p&gt;

&lt;p&gt;You don't have to!&lt;/p&gt;

&lt;p&gt;Here are two fast and easy ways to add Javadoc to IntelliJ so you can see it using the "Quick Documentation" feature: simply hover your mouse on any piece of code or use the Quick Documentation shortcut key, Ctrl+Q for Linux or Windows and F1 on macOS!&lt;/p&gt;

&lt;p&gt;Now, on to the first way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-maven"&gt;
  &lt;/a&gt;
  Using Maven
&lt;/h2&gt;

&lt;p&gt;On Maven projects, run the &lt;code&gt;dependency:resolve&lt;/code&gt; phase with &lt;code&gt;classifier=javadoc&lt;/code&gt; and IntelliJ will automatically acquire documentation superpowers.&lt;/p&gt;

&lt;p&gt;There are two ways to run this. First, you can run the following Maven command from the terminal inside the root directory for the project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mvn dependency:resolve &lt;span class="nt"&gt;-Dclassifier&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;javadoc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also run that from the "Execute Maven goal" window, which appears when you open the Maven tool window (View &amp;gt; Tool windows &amp;gt; Maven) and press the "M" icon.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4gUME1JT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wy9sigyoogrweb805bl3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4gUME1JT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wy9sigyoogrweb805bl3.png" alt="The Execute Maven Goal window in IntelliJ"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want, you can even tell Maven to &lt;em&gt;always&lt;/em&gt; download Javadoc when available. Navigate to Preferences &amp;gt; Build, Execution, Deployment &amp;gt; Build Tools &amp;gt; Maven &amp;gt; Importing and check the Automatically download documentation checkbox.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#with-a-url-or-jar-file"&gt;
  &lt;/a&gt;
  With a URL or Jar file
&lt;/h2&gt;

&lt;p&gt;Do you have a URL to some Javadoc on the web? Then open Project Structure, navigate to Libraries, and click the icon that combines a "+" and a globe.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a7wks6sP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qo81b2lojco9tlki6uiv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a7wks6sP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qo81b2lojco9tlki6uiv.png" alt="The Libraries UI in IntelliJ"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Paste the URL and save it.&lt;/p&gt;

&lt;p&gt;If you happen to have the javadoc in a jar file instead, you can use the normal "+" icon you see in this same Project Structure &amp;gt; Libraries window.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-it-looks-like"&gt;
  &lt;/a&gt;
  What it looks like
&lt;/h2&gt;

&lt;p&gt;With any of those settings in place, you can simply hover your mouse on any piece of code and see the resulting Javadoc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r5NVmM1J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bhc7rtw2lqenng6174lo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r5NVmM1J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bhc7rtw2lqenng6174lo.png" alt="Quick Documentation view in IntelliJ"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;With Javadoc just a mouse-hover away, you can remain focused on the task at hand rather than disrupting your flow and going on a wild goose chase.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Photo by Miriam Espacio from Pexels&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Mobile Banking Landing Page</title>
      <author>Md Delowar</author>
      <pubDate>Tue, 05 Oct 2021 15:25:42 +0000</pubDate>
      <link>https://dev.to/delowar77680635/mobile-banking-landing-page-d6h</link>
      <guid>https://dev.to/delowar77680635/mobile-banking-landing-page-d6h</guid>
      <description>&lt;p&gt;Download From UIHUT. Get Lifetime Access Only for 99$. Use “dol10” coupon for the extra 10% off.&lt;/p&gt;

&lt;p&gt;More than 14,000 high-quality ui design resources for commercial use. It's easy to download and use. Create your best design website easily. Download from &lt;a href="https://htmltemplates.org/"&gt;https://htmltemplates.org/&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lNOXkRiP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7omn6a6u97x0mxulsfo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lNOXkRiP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7omn6a6u97x0mxulsfo.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>hmlptemplate</category>
      <category>landingpage</category>
      <category>landingpagedesigner</category>
    </item>
    <item>
      <title>React 18 milestone: React-Redux adopts useSyncExternalStore</title>
      <author>Sebastien Lorber</author>
      <pubDate>Tue, 05 Oct 2021 15:20:01 +0000</pubDate>
      <link>https://dev.to/sebastienlorber/react-18-milestone-react-redux-adopts-usesyncexternalstore-102b</link>
      <guid>https://dev.to/sebastienlorber/react-18-milestone-react-redux-adopts-usesyncexternalstore-102b</guid>
      <description>&lt;p&gt;This is a &lt;strong&gt;sample&lt;/strong&gt; from my &lt;a href="https://thisweekinreact.com"&gt;This Week In React&lt;/a&gt; newsletter. &lt;strong&gt;Subscribe for more!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://thisweekinreact.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XH1uILnf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633438809395/zNdSjKPIY.png" alt="This Week In React newsletter banner"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://github.com/reduxjs/react-redux/releases/tag/v8.0.0-alpha.0"&gt;React-Redux v8 alpha.0&lt;/a&gt; was just  &lt;a href="https://twitter.com/acemarke/status/1444736773142241285"&gt;announced by Mark Erikson&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The library is now fully rewritten in TypeScript.&lt;/p&gt;

&lt;p&gt;More importantly, React-Redux v8 is adopting a new React 18 hook &lt;a href="https://github.com/reactwg/react-18/discussions/86"&gt;&lt;code&gt;useSyncExternalStore&lt;/code&gt;&lt;/a&gt; (replacing &lt;code&gt;useMutableSource&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;This hook allows React to work properly in concurrent mode and sync with an external state (from Redux) without &lt;a href="https://github.com/reactwg/react-18/discussions/69"&gt;tearing&lt;/a&gt; (the UI can't become inconsistent with store state).&lt;/p&gt;

&lt;p&gt;This hook is the "level 2" (&lt;em&gt;make it right&lt;/em&gt;) of the &lt;a href="https://github.com/reactwg/react-18/discussions/70"&gt;state subscription ladder&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aCxDEZ4e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633431540221/DWMU6Iwtc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aCxDEZ4e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633431540221/DWMU6Iwtc.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/dan_abramov/status/1444742231513051138"&gt;Dan Abramov explains it's an important milestone for React 18&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For the first time we’ve been able to move the “meat” of the react-redux bindings implementation &lt;em&gt;into&lt;/em&gt; react itself.&lt;br&gt;
It wasn’t a lot of code, but it relied on a bunch of hacks and complexity that kept growing. Now that “meat” is 5 lines of code, we handle the rest.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useSyncExternalStoreExtra&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use-sync-external-store/extra&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// React-Redux v8 alpha code in useSelector()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;selectedState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSyncExternalStoreExtra&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="c1"&gt;// TODO Need a server-side snapshot here&lt;/span&gt;
  &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="nx"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="nx"&gt;equalityFn&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To ease incremental adoption in libraries today, an external package &lt;a href="https://www.npmjs.com/package/use-sync-external-store"&gt;&lt;code&gt;use-sync-external-store&lt;/code&gt;&lt;/a&gt; has been published, allowing to use this hook with a consistent API on React 16, 17 &amp;amp; 18.&lt;/p&gt;

&lt;p&gt;Unlike the former &lt;code&gt;useMutableSource&lt;/code&gt; API, this new hook supports &lt;a href="https://github.com/reactwg/react-18/discussions/84"&gt;unstable, inline selectors&lt;/a&gt; without re-subscribing, and you won't need to wrap selectors in &lt;code&gt;useCallback&lt;/code&gt; to stabilize them:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Not ideal&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,[])&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Simpler&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The community remains very interested to have a native &lt;a href="https://github.com/facebook/react/pull/20646"&gt;&lt;code&gt;useContextSelector()&lt;/code&gt;&lt;/a&gt; hook in React core. &lt;/p&gt;

&lt;p&gt;A performant &lt;code&gt;useContextSelector()&lt;/code&gt; hook would allow Redux to &lt;a href="https://github.com/reduxjs/react-redux/releases/tag/v7.0.1"&gt;try again&lt;/a&gt; passing the store state directly as context value, instead of passing a store object and managing subscriptions internally. React would now hold entirely the Redux state and the React-Redux bindings would move to the &lt;a href="https://github.com/reactwg/react-18/discussions/70"&gt;ladder's stage 3&lt;/a&gt; (&lt;em&gt;make it fast&lt;/em&gt;). This stage would permit React to avoid unnecessary rendering work when a Redux store update happens while a concurrent rendering is in progress. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;useContextSelector&lt;/code&gt; is still under research and is not a mandatory feature for React 18 to land. Andrew Clark &lt;a href="https://github.com/reactwg/react-18/discussions/73"&gt;commented&lt;/a&gt; that it will more likely be released in a minor 18.x release.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Building the Modern Web Stack: Babel</title>
      <author>Alex</author>
      <pubDate>Tue, 05 Oct 2021 15:19:30 +0000</pubDate>
      <link>https://dev.to/alexeagleson/building-a-modern-web-stack-babel-3hfp</link>
      <guid>https://dev.to/alexeagleson/building-a-modern-web-stack-babel-3hfp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-babel"&gt;
  &lt;/a&gt;
  What is Babel?
&lt;/h2&gt;

&lt;p&gt;Babel is a tool that lets you write your Javascript code using all the latest syntax and features, and still run it in older browsers. Babel is a &lt;a href="https://en.wikipedia.org/wiki/Source-to-source_compiler"&gt;transpiler&lt;/a&gt; that will translate your modern JS code into an older version of Javscript that more browsers are able to understand.&lt;/p&gt;

&lt;p&gt;Babel is often built into the tools that we use every day to built modern web applications (like &lt;a href="https://github.com/facebook/create-react-app"&gt;create-react-app&lt;/a&gt; for example) so many developers don't have a full understanding of what the tool actually does. This tutorial is designed to set up a Babel configuration piece by piece and is part of a larger tutorial series in setting up your own custom development environment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;You will need to have &lt;a href="https://nodejs.org/en/download/"&gt;Node.js&lt;/a&gt; installed on your machine and available from your terminal. Installing Node will automatically install &lt;a href="https://en.wikipedia.org/wiki/Npm_(software)"&gt;npm&lt;/a&gt; as well, which is what you will use to install Babel.&lt;/p&gt;

&lt;p&gt;If you see version numbers when running the two commands below (your numbers will likely be different than this example) then you are ready to go:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node &lt;span class="nt"&gt;--version&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; v15.5.0

npm &lt;span class="nt"&gt;--version&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 7.16.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#initializing-the-project"&gt;
  &lt;/a&gt;
  Initializing the Project
&lt;/h2&gt;

&lt;p&gt;Let's start by initializing a new &lt;code&gt;npm&lt;/code&gt; project. Run the following command to generate one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;-y&lt;/code&gt; flag will automatically select default values for everything, which is appropriate in our example.&lt;/p&gt;

&lt;p&gt;Next let's create a very basic Javascript file using some modern syntax. Create a file called &lt;code&gt;script.js&lt;/code&gt; with the following code:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;script.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sampleFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;this is a return value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hasThree&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hasThree&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;||=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a new value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, the &lt;code&gt;arrow function&lt;/code&gt;, &lt;code&gt;includes&lt;/code&gt; array method and &lt;code&gt;class&lt;/code&gt; are all features of &lt;a href="https://www.w3schools.com/js/js_es6.asp"&gt;ES6&lt;/a&gt; that won't run properly in older browsers such as &lt;code&gt;Internet Explorer 11&lt;/code&gt; (which unfortunately some organizations still use extensively even in 2021).&lt;/p&gt;

&lt;p&gt;You may also catch the brand new (as of 2021) &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment"&gt;logical OR assignment&lt;/a&gt;. This will not run in versions of Firefox before 79 and versions of Chrome before 85, and it won't run in IE11 at all.&lt;/p&gt;

&lt;p&gt;So what can we do to run this code on older browsers without having to rewrite it ourselves?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-babel"&gt;
  &lt;/a&gt;
  Installing Babel
&lt;/h2&gt;

&lt;p&gt;There are three basic packages we need to accomplish our goal, all of them are part of the Babel ecosystem, but each has a different function. Start by running the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; @babel/core @babel/cli @babel/preset-env &lt;span class="nt"&gt;--save-dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's take a look at what each one is doing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;@babel/core&lt;/code&gt; - This is the main engine that knows how to transform code based on a set of instructions it is given&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;@babel/cli&lt;/code&gt; - This is the actual program we are going to run to trigger the core engine and output a transformed Javascript file&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;@babel/preset-env&lt;/code&gt; - This is a preset that tells the core engine what kind of transformations to make. It looks at your environment (in our case it will be our &lt;code&gt;package.json&lt;/code&gt; file) to determine what kind of changes need to be made depending on the browsers you wish to support.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We need to add a couple values to our &lt;code&gt;package.json&lt;/code&gt; file:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;browserslist&lt;/code&gt; - This tells Babel which browsers we are aiming to target. The older / less supported they are, the more work and more transformations Babel will have to make in order for your application to work in these browsers. The syntax is a simple array of strings. You can &lt;a href="https://github.com/browserslist/browserslist"&gt;learn about here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;babel&lt;/code&gt; - This is where we defined all the presets that we will use, as well as any configuration options related to those presets. We will start with the simplest one, &lt;code&gt;@babel/preset-env&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So our &lt;code&gt;package.json&lt;/code&gt; file should look like this:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@babel/cli"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^7.15.7"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@babel/core"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^7.15.5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@babel/preset-env"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^7.15.6"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"browserslist"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"last 2 Chrome versions"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"babel"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"presets"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="s2"&gt;"@babel/preset-env"&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;devDependencies&lt;/code&gt; should already be there from your &lt;code&gt;npm install&lt;/code&gt;. The other two properties described above you will need to add yourself.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#transforming-your-code"&gt;
  &lt;/a&gt;
  Transforming Your Code
&lt;/h2&gt;

&lt;p&gt;At its most basic configuration &lt;code&gt;babel&lt;/code&gt; will transform your modern syntax into the much wider supported &lt;a href="https://www.w3schools.com/js/js_es5.asp"&gt;ES5&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's begin with a simple example. Run the following command in your project root directory containing your &lt;code&gt;package.json&lt;/code&gt; file and your &lt;code&gt;script.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx babel script.js &lt;span class="nt"&gt;--out-file&lt;/span&gt; script-transformed.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Presuming you have followed all the instructions so far you should see a new file created called &lt;code&gt;script-transformed.js&lt;/code&gt; that looks like this:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;script-transformed.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sampleFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;this is a return value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hasThree&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hasThree&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;||=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a new value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not much different right? Aside from adding &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode"&gt;strict mode&lt;/a&gt; nothing has actually changed.&lt;/p&gt;

&lt;p&gt;The reason for this is because of how we have configured our environment in &lt;code&gt;package.json&lt;/code&gt;, which is where &lt;code&gt;@babel/plugin-env&lt;/code&gt; looks in order to decide what it should do.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"browserslist"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"last 2 Chrome versions"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we are only targeting the most recent 2 versions of Chrome, Babel knows that we have no problem including all the modern JS syntax that we want, it will work fine in those modern browsers.&lt;/p&gt;

&lt;p&gt;But let's say that we are required to support &lt;code&gt;Internet Explorer 11&lt;/code&gt;. We don't want to have to change the way we write our code just to accommodate that browser, but fortunately that's where Babel saves the day. Update your &lt;code&gt;package.json&lt;/code&gt; to add IE11 to your &lt;code&gt;browserslist&lt;/code&gt; array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"browserslist"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"last 2 Chrome versions"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"IE 11"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now run this command again:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx babel script.js &lt;span class="nt"&gt;--out-file&lt;/span&gt; script-transformed.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Take a look at the output this time:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;script-transformed.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;_classCallCheck&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Constructor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;instance&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nx"&gt;Constructor&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cannot call a class as a function&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;sampleFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sampleFunction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;this is a return value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;_classCallCheck&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;hasThree&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hasThree&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a new value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This looks a lot different from our original file! Notice that almost all the &lt;code&gt;ES6&lt;/code&gt; terms we discussed above are gone, &lt;code&gt;const&lt;/code&gt; is replaced with &lt;code&gt;var&lt;/code&gt;, our arrow function is replaced with &lt;code&gt;function&lt;/code&gt; syntax, and our &lt;code&gt;class&lt;/code&gt; has been transformed into a basic Javascript &lt;a href="https://javascript.info/object"&gt;object&lt;/a&gt;. We can now take this &lt;code&gt;script-transformed.js&lt;/code&gt; file, serve it up to &lt;code&gt;Internet Explorer 11&lt;/code&gt; and it would run just fine... almost!&lt;/p&gt;

&lt;p&gt;We still have one small problem: The &lt;code&gt;includes&lt;/code&gt; method was not transformed. Why is that? To understand the reason, we first need to understand &lt;code&gt;polyfills&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#polyfills"&gt;
  &lt;/a&gt;
  Polyfills
&lt;/h2&gt;

&lt;p&gt;To understand why we need &lt;code&gt;polyfills&lt;/code&gt; we have to understand the difference between what is new &lt;code&gt;syntax&lt;/code&gt; and what is new &lt;code&gt;functionality&lt;/code&gt;. The &lt;code&gt;includes&lt;/code&gt; method is new &lt;code&gt;functionality&lt;/code&gt;. It has its own logic behind it, and simply changing the syntax of how the code is written won't explain to older browsers how the logic of the &lt;code&gt;includes&lt;/code&gt; method is supposed to function.&lt;/p&gt;

&lt;p&gt;For new features that introduce new functionality we need something called a &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Polyfill"&gt;polyfill&lt;/a&gt;. Polyfills are simply just the source code for a method like &lt;code&gt;includes&lt;/code&gt; that you bundle along with your application to essentially teach older browsers how it works.&lt;/p&gt;

&lt;p&gt;You do not need to write polyfills yourself, polyfills for just about every feature of JS already exist and are easy to include. In future tutorials we will get into bundling and only including the specific ones that we need, but until then we can simply include a library called &lt;a href="https://www.npmjs.com/package/core-js"&gt;core-js&lt;/a&gt; and instantly give our app access to all modern JS features even on older browsers.&lt;/p&gt;

&lt;p&gt;To test it out let's load the entirety of the &lt;code&gt;core-js&lt;/code&gt; library into our app. Since we are still not yet using a bundler, we will simply load the already bundled and &lt;code&gt;minified&lt;/code&gt; version from the web into our app. If you don't already have an &lt;code&gt;index.html&lt;/code&gt; template, create this file in your project root directory:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;index.html&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"script-transformed.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll begin by trying to load the file in IE11. If your machine doesn't have Internet Explorer 11, you can simply follow with the example here. This example is running on &lt;code&gt;Windows 11&lt;/code&gt; which has removed IE11 entirely.  Fortunately &lt;code&gt;Microsoft Edge&lt;/code&gt; comes with an &lt;a href="https://docs.microsoft.com/en-us/deployedge/edge-ie-mode"&gt;IE 11 Mode&lt;/a&gt; for testing applications that require backward compatibility.&lt;/p&gt;

&lt;p&gt;When we run Babel and try to load our &lt;code&gt;script-transformed.js&lt;/code&gt; file in IE11 we get the following error on the console:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iKtFZK95--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z58qnbnh3xrwevh2ehbe.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iKtFZK95--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z58qnbnh3xrwevh2ehbe.jpg" alt="Array Includes Error"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's add the &lt;code&gt;core-js&lt;/code&gt; library to a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag inside the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; in our &lt;code&gt;index.html&lt;/code&gt;.  You can find the most updated minified bundle URL &lt;a href="https://cdnjs.com/libraries/core-js"&gt;here&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;&lt;code&gt;index.html&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;...
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/core-js/3.18.1/minified.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"script-transformed.js"&lt;/span&gt; &lt;span class="na"&gt;defer&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When we reload the page in IE11 we get:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--71vIiZ76--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4w3gl19dmgk4pp9y4bw1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--71vIiZ76--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4w3gl19dmgk4pp9y4bw1.jpg" alt="Array Includes Works"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It works! We're writing modern Javascript and running it in an old dinosaur browser! That's great!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;You should now have a fairly solid grasp of the fundamentals of what Babel is, and how it works.  Of course there's a lot more to discover.  In future tutorials we'll go deeper into two more of the major presets that are supported by Babel for transpiling supersets of Javascript: &lt;a href="https://reactjs.org/docs/introducing-jsx.html"&gt;JSX&lt;/a&gt; and &lt;a href="https://www.typescriptlang.org/"&gt;Typescript&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;Before we do that we'll first go over the fundamentals of each (similar to this introduction) before diving into how to configure them all together into a modern web stack.  Stay tuned.  &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>babel</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Join Hacktoberfest 2021 and contribute to QuestDB!</title>
      <author>PSWU</author>
      <pubDate>Tue, 05 Oct 2021 15:16:50 +0000</pubDate>
      <link>https://dev.to/pswu11/join-hacktoberfest-2021-and-contribute-to-questdb-3o9p</link>
      <guid>https://dev.to/pswu11/join-hacktoberfest-2021-and-contribute-to-questdb-3o9p</guid>
      <description>&lt;p&gt;Hacktoberfest 2021 is starting today! For the first time, &lt;a href="https://questdb.io"&gt;QuestDB&lt;/a&gt; is participating as an open source project. We're super excited to meet with other open source contributors and maintainers.&lt;/p&gt;

&lt;p&gt;For those who're not familiar with Hacktoberfest, it's a month-long online celebration for open source software and communities. By &lt;a href="https://hacktoberfest.digitalocean.com/resources/participation"&gt;contributing to open source projects&lt;/a&gt;, you can get a special edition Hacktoberfest T-shirt 👕 or choose to plant a tree for our planet. 🌴&lt;/p&gt;

&lt;p&gt;Many widely used open-source projects are maintained by a small number of developers or even a single person without any financial incentives. And we rely so much on their perseverance and commitment! Participating in Hacktoberfest is one of our approaches to raise awareness and encourage more people to contribute to open source. To celebrate Hacktoberfest, we put together some hints for you to get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-started"&gt;
  &lt;/a&gt;
  ⛳ Get started
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Make sure you have a GitHub (or GitLab) account&lt;/li&gt;
&lt;li&gt;Sign up for the event at
&lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest's official website&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Go to open source repositories that opt in for Hacktoberfest:

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;QuestDB Core Project&lt;/strong&gt;:
&lt;a href="https://github.com/questdb/questdb"&gt;https://github.com/questdb/questdb&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;QuestDB Documentation&lt;/strong&gt;:
&lt;a href="https://github.com/questdb/questdb.io"&gt;https://github.com/questdb/questdb.io&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Or, look for other open source projects labeled with &lt;code&gt;hacktoberfest&lt;/code&gt; in their topics&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;If you're new to the project, look for open issues labeled with &lt;code&gt;good first issues&lt;/code&gt; or &lt;code&gt;help wanted&lt;/code&gt; to get started&lt;/li&gt;
&lt;li&gt;Before you commit, don't forget to read &lt;code&gt;CONTRIBUTING.md&lt;/code&gt; and follow the contribution guideline 👍&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#tees-trees-and-questdb-swag"&gt;
  &lt;/a&gt;
  🎁 Tees, trees and QuestDB swag
&lt;/h2&gt;

&lt;p&gt;Once you reach the &lt;a href="https://hacktoberfest.digitalocean.com/resources/participation"&gt;contribution target&lt;/a&gt; of &lt;strong&gt;4 valid pull requests&lt;/strong&gt;, you can claim the reward from the official organizer! In addition, if you successfully contribute to QuestDB projects, we offer extra SWAG for you through our &lt;a href="https://questdb.io/community/"&gt;SWAG program&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;To make sure that your pull request is valid, please follow Hacktoberfest's &lt;a href="https://hacktoberfest.digitalocean.com/resources/qualitystandards"&gt;quality standard&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-support-and-updates"&gt;
  &lt;/a&gt;
  ℹ️ Get support and updates
&lt;/h2&gt;

&lt;p&gt;Some questions might appear when you're trying to contribute to QuestDB projects; here are the places to get support and hints from our team:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;QuestDB Community Slack: &lt;a href="https://slack.questdb.io"&gt;https://slack.questdb.io&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;GitHub Discussions:
&lt;a href="https://github.com/questdb/questdb/discussions"&gt;https://github.com/questdb/questdb/discussions&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;QuestDB Documentation:
&lt;a href="https://questdb.io/docs/introduction/"&gt;https://questdb.io/docs/introduction/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, don't forget to follow us on social media to receive the latest updates:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;QuestDB Twitter: &lt;a href="https://twitter.com/questdb"&gt;https://twitter.com/questdb&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;QuestDB Linkedin:
&lt;a href="https://www.linkedin.com/company/questdb/"&gt;https://www.linkedin.com/company/questdb/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>java</category>
      <category>hacktoberfest</category>
      <category>opensource</category>
      <category>typescript</category>
    </item>
    <item>
      <title>What is Silo Structure in SEO?</title>
      <author>Bhavyashah</author>
      <pubDate>Tue, 05 Oct 2021 15:13:57 +0000</pubDate>
      <link>https://dev.to/bhavyashah/what-is-silo-structure-in-seo-15gh</link>
      <guid>https://dev.to/bhavyashah/what-is-silo-structure-in-seo-15gh</guid>
      <description>&lt;p&gt;In the past few years, many have been promoting this theory that you must have silo structure in order to rank in Google. But do you know what a silo is? What does it mean to have a silo structure? &lt;br&gt;
According to Wikipedia , a "&lt;a href="https://en.wikipedia.org/wiki/Silo"&gt;silo&lt;/a&gt;" is a tall cylindrical structure for storing bulk materials. In the world of SEO, it's called a silo structure because it's supposed to use "silos" within your website to promote authority and trust. In fact, in his video below, Danny Sullivan even called the word "silos" when he meant "subdomains." The exact definition from Google reads:&lt;/p&gt;

&lt;h1&gt;What is Silo Structure in SEO?&lt;/h1&gt;

&lt;p&gt;A silo structure is a way to organize pages on the web so as to channel users from one page within your website to another. In practice, this means organizing the pages on your site according to a user's intent and then arranging your internal linking structure so that a user who navigates through successive pages in a top-down fashion will be led to the relevant destination page without a detour or backtracking.&lt;/p&gt;

&lt;h2&gt;Important of Silo Structure in SEO&lt;/h2&gt;

&lt;p&gt;The Silo Structure is the important topic in SEO since Google algorithm is development to follow the Content Structure. Table of contents (TOC) is not be considered in this structure because the content has different level such as H-Content (High-quality content) and L-Content (Low-quality content).&lt;/p&gt;

&lt;p&gt;I hope you understand what is Silo structure in website? &amp;amp; Important of Silo Structure.&lt;/p&gt;

&lt;p&gt;If you want to know about &lt;a href="https://www.blogtriggers.com/2021/09/seo-silo-structure-in-blogger.html"&gt;How to add Silo structure in blogger&lt;/a&gt;, then you can ask me.&lt;/p&gt;

</description>
      <category>website</category>
      <category>seo</category>
    </item>
    <item>
      <title>Handling Multiple Lambda functions </title>
      <author>Vivek Siva</author>
      <pubDate>Tue, 05 Oct 2021 15:12:35 +0000</pubDate>
      <link>https://dev.to/viv/handling-multiple-lambda-functions-22pi</link>
      <guid>https://dev.to/viv/handling-multiple-lambda-functions-22pi</guid>
      <description>&lt;p&gt;Don't do this -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uVklp_MD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lrv0std8n6bdo1xawag6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uVklp_MD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lrv0std8n6bdo1xawag6.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Problems -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Er-x5Xj4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7dkhfnlhb6bq43q7nmgr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Er-x5Xj4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7dkhfnlhb6bq43q7nmgr.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Solution -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P8AZlM8S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1dwg3zvrvszgkrlhlnv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P8AZlM8S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1dwg3zvrvszgkrlhlnv.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How your architecture should look -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---xCrHBAj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fs07m6el56f3k22fsd1q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---xCrHBAj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fs07m6el56f3k22fsd1q.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;High Level -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rqlmNBc6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zx4ky9onokyflwaemjyl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rqlmNBc6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zx4ky9onokyflwaemjyl.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>serverless</category>
      <category>cloud</category>
      <category>aws</category>
    </item>
    <item>
      <title>Clean Conventional Commits</title>
      <author>Jonathan Irvin</author>
      <pubDate>Tue, 05 Oct 2021 15:11:25 +0000</pubDate>
      <link>https://dev.to/sublimegeek/clean-conventional-commits-40l8</link>
      <guid>https://dev.to/sublimegeek/clean-conventional-commits-40l8</guid>
      <description>&lt;p&gt;Let’s face it, Git is a chore.  It’s about as exciting as cold oatmeal. However, when used properly, it can save millions™.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-sanity-checks-for-your-commits"&gt;
  &lt;/a&gt;
  5 Sanity Checks For Your Commits
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#frequent"&gt;
  &lt;/a&gt;
  Frequent
&lt;/h3&gt;

&lt;p&gt;The more often you commit, the better you track your changes and have the ability to revert if needed.  Frequent and small commits are easily merged without conflict.  It’s like saving a game, only better.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#atomic"&gt;
  &lt;/a&gt;
  Atomic
&lt;/h3&gt;

&lt;p&gt;Atoms are small and your commits should be, too.  Don’t cram 8 hours of work into a single commit. &lt;a href="https://en.wikipedia.org/wiki/Atomicity_(database_systems)"&gt;Atomicity&lt;/a&gt; should also apply to your commits.  Everything that’s in the commit should be related.  This allows you to easily revert without undoing unrelated changes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#descriptive"&gt;
  &lt;/a&gt;
  Descriptive
&lt;/h3&gt;

&lt;p&gt;What’s the last thing you need when moving? Mislabeled boxes or boxes with incorrect labels.  Commits should be written in the imperative sense.  They should describe what they DO, not what they DID.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#decentralized"&gt;
  &lt;/a&gt;
  Decentralized
&lt;/h3&gt;

&lt;p&gt;Git, in its design, allows complete shared “ledgers” of changes between each clone of the repo.  The entire history of the project is kept on every machine.  As such, don’t let commits stay on your local machine.  If you have a remote repo, keep your code published somewhere else. You never know when your laptop will cache on fire, become self-aware, or worse.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#immutable"&gt;
  &lt;/a&gt;
  Immutable
&lt;/h3&gt;

&lt;p&gt;Git gives you the “keys to the kingdom” and allows you to do any number of destructive operations to your repo.  I’ve seen bad merges go down and months of work lost from one wrong move.  As such, treat your commits as immutable.  Once they have been written, they are sealed for all eternity.  If you need to make changes, revert a commit and make a proper change.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-conventional-commits"&gt;
  &lt;/a&gt;
  What are "Conventional" commits?
&lt;/h2&gt;

&lt;p&gt;As Git gives you all the freedom in the world to name your branches and commits whatever you want, it’s a good idea to have a common convention for how those commit labels are authored.&lt;/p&gt;

&lt;p&gt;Here’s the &lt;strong&gt;td;lr&lt;/strong&gt; &lt;a href="https://www.conventionalcommits.org/en/v1.0.0/#summary"&gt;(Summary)&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;type&amp;gt;[optional scope]: &amp;lt;description&amp;gt;

[optional body]

[optional footer(s)]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yes, commits can be multi-line and are written like emails. 99% of the time, however, you will be focusing on the first line.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bare-minimum"&gt;
  &lt;/a&gt;
  Bare minimum
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;type&amp;gt;[optional scope]: &amp;lt;description&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AbqzRw8m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7d22ex8ohk2v7tf6rrvy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AbqzRw8m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7d22ex8ohk2v7tf6rrvy.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scared-dont-be"&gt;
  &lt;/a&gt;
  Scared? Don't be.
&lt;/h3&gt;

&lt;p&gt;I know what you're thinking...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MvAK5yx2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hwl7y72ugwwa6q8xvzqx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MvAK5yx2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hwl7y72ugwwa6q8xvzqx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Luckily there are tools that help this process go super smooth.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Commitizen CLI - &lt;a href="https://commitizen-tools.github.io/commitizen/"&gt;https://commitizen-tools.github.io/commitizen/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;VS Code Extension - &lt;a href="https://marketplace.visualstudio.com/items?itemName=vivaxy.vscode-conventional-commits"&gt;https://marketplace.visualstudio.com/items?itemName=vivaxy.vscode-conventional-commits&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Commitlint - &lt;a href="https://commitlint.js.org/"&gt;https://commitlint.js.org/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Other Tools - &lt;a href="https://www.conventionalcommits.org/en/v1.0.0/#tooling-for-conventional-commits"&gt;https://www.conventionalcommits.org/en/v1.0.0/#tooling-for-conventional-commits&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kJHWrNDA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gc7cyytbnhptf22ilwm2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kJHWrNDA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gc7cyytbnhptf22ilwm2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#give-me-the-deets-already"&gt;
  &lt;/a&gt;
  Give me the deets already.
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#type-required-spec"&gt;
  &lt;/a&gt;
  Type (Required) &lt;a href="https://www.conventionalcommits.org/en/v1.0.0/#specification"&gt;(Spec)&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;These categorize a commit and tell you what kind of change this is.  Here are examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;feat&lt;/strong&gt; - for new features&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;fix&lt;/strong&gt; - for defects or bugs&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;chore&lt;/strong&gt; - for changes that don’t alter the source, but necessary&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ci&lt;/strong&gt; - for ci pipeline changes&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;docs&lt;/strong&gt; - for documentation changes&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;perf&lt;/strong&gt; - for performance enhancements&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;refactor&lt;/strong&gt; - for refactors; altering the code, but not changing functionality&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;revert&lt;/strong&gt; - reverting changes&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;style&lt;/strong&gt; - for cosmetic changes&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;test&lt;/strong&gt; - for unit tests&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#scope-optional-spec"&gt;
  &lt;/a&gt;
  Scope (Optional) &lt;a href="https://www.conventionalcommits.org/en/v1.0.0/#specification"&gt;(Spec)&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Scope allows you to box your commit into a specific feature, file, or sub-set of the application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fix(Navigation): change Loggin to Login

chore(deps): upgrade Jest to v24.5.7
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#body-optional-spec"&gt;
  &lt;/a&gt;
  Body (Optional) &lt;a href="https://www.conventionalcommits.org/en/v1.0.0/#specification"&gt;(Spec)&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Just like the body of an email, if you want to add more of a description to your commit, you can do so below the first line.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: If the commit contains a BREAKING CHANGE, this goes in the body of the commit.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;feat(Authentication): update cipher for better security

 BREAKING CHANGE all security keys will need to be regenerated and deployed.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#footer-optional-spec"&gt;
  &lt;/a&gt;
  Footer (Optional) &lt;a href="https://www.conventionalcommits.org/en/v1.0.0/#specification"&gt;(Spec)&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Footers are optional, but allow for ticket references to be made in the commit without clogging up the commit subject line.  The follow a specific format: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;..."each footer MUST consist of a word token, followed by either a : or # separator, followed by a string value."&lt;br&gt;
&lt;a href="https://www.conventionalcommits.org/en/v1.0.0/#specification"&gt;Conventional Commits&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are several tools that will parse commit messages and automatically make links to tickets.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;refactor(Header): correct minor typos in code

see the issue for details

Refs: JIRA-9999
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vWjT6Kly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05biezzxtqo6rpulzqup.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vWjT6Kly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05biezzxtqo6rpulzqup.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#faq-source"&gt;
  &lt;/a&gt;
  FAQ &lt;a href="https://www.conventionalcommits.org/en/v1.0.0/#faq"&gt;(source)&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#how-should-i-deal-with-commit-messages-in-the-initial-development-phase"&gt;
  &lt;/a&gt;
  How should I deal with commit messages in the initial development phase?
&lt;/h3&gt;

&lt;p&gt;Proceed as if you’ve already released the product. Typically somebody, even if it’s your fellow software developers, is using your software. They’ll want to know what’s fixed, what breaks etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#are-the-types-in-the-commit-title-uppercase-or-lowercase"&gt;
  &lt;/a&gt;
  Are the types in the commit title uppercase or lowercase?
&lt;/h3&gt;

&lt;p&gt;Any casing may be used, but it’s best to be consistent.&lt;/p&gt;

&lt;p&gt;Although, more often than not, lowercase is used.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-do-i-do-if-the-commit-conforms-to-more-than-one-of-the-commit-types"&gt;
  &lt;/a&gt;
  What do I do if the commit conforms to more than one of the commit types?
&lt;/h3&gt;

&lt;p&gt;Go back and make multiple commits whenever possible. Part of the benefit of Conventional Commits is its ability to drive us to make more organized commits and PRs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#doesnt-this-discourage-rapid-development-and-fast-iteration"&gt;
  &lt;/a&gt;
  Doesn’t this discourage rapid development and fast iteration?
&lt;/h3&gt;

&lt;p&gt;It discourages moving fast in a disorganized way. It helps you be able to move fast long term across multiple projects with varied contributors. &lt;/p&gt;

</description>
      <category>git</category>
      <category>github</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>13 Reasons to learn Data Structures and Algorithms (2022)</title>
      <author>Coder Champ</author>
      <pubDate>Tue, 05 Oct 2021 14:45:24 +0000</pubDate>
      <link>https://dev.to/coderchamp/13-reasons-to-learn-data-structures-and-algorithms-2022-bbl</link>
      <guid>https://dev.to/coderchamp/13-reasons-to-learn-data-structures-and-algorithms-2022-bbl</guid>
      <description>&lt;p&gt;I know data structures and algorithms sound scary, But they are not.&lt;/p&gt;

&lt;p&gt;If you learn them, you can pass any interview in the world. In addition, you can build awesome high-performance apps and much more.&lt;/p&gt;

&lt;p&gt;I have seen many people get stuck in data structures and algorithms because they get overwhelmed by the topics.&lt;/p&gt;

&lt;p&gt;They do not know where to start; they read Wikipedia pages, articles and watch tutorials but don't understand anything.&lt;/p&gt;

&lt;p&gt;They feel like this huge mountain of knowledge that is difficult to climb up with all these ideas floating around their head.&lt;/p&gt;

&lt;p&gt;So, in this article, I will give you &lt;strong&gt;13 reasons why you should learn data structures and algorithms&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dX4kpItc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vftrbhknu9vn18grm3e0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dX4kpItc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vftrbhknu9vn18grm3e0.png" alt="data structures and algorithms in javascript"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Not only that, I'm going to write down a complete series with visual explanations in upcoming articles.&lt;/p&gt;

&lt;p&gt;Before moving to the reasons, I want to make sure you better understand:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#difference-between-data-structures-and-algorithms"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Difference between Data Structures and Algorithms&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2MsfpMlh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rp1jdznlgi182o8964wr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2MsfpMlh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rp1jdznlgi182o8964wr.png" alt="data structures and algorithms website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data Structure:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A data structure is a way in which you organize your data.&lt;/p&gt;

&lt;p&gt;For &lt;strong&gt;example&lt;/strong&gt;, an array can be used to store numbers.&lt;/p&gt;

&lt;p&gt;Data structures are one of the basic building blocks of modern computer programs.&lt;/p&gt;

&lt;p&gt;We use them without even realizing it all the time. These are the methods of arranging information for efficient processing.&lt;/p&gt;

&lt;p&gt;They include a variety of ways to arrange information, such as books on a shelf, folders on a desk, items on an organizational chart, etc.&lt;/p&gt;

&lt;p&gt;To use the right data structure in the digital world, you should consider whether you want to add information, search for it, or remove it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Algorithm:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An algorithm is a step-by-step procedure for solving a problem or carrying out some task.&lt;/p&gt;

&lt;p&gt;For example, to calculate the area of a rectangle you will need to follow the steps given below:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You start by drawing an imaginary line that divides the rectangle into two parts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Next, you take half of this imaginary line and draw a line parallel to it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;This is the new starting point of your rectangle. You repeat this step until you reach the desired area (in our case, area = height * width).&lt;/p&gt;

&lt;p&gt;You should understand that an algorithm can be described as an &lt;strong&gt;explicit procedure for solving&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reason # 1:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jAJFQt-e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xldbovw10gyd89dotndg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jAJFQt-e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xldbovw10gyd89dotndg.png" alt="data structures and algorithms"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Skills in data structures and algorithms are a great addition to a &lt;strong&gt;programmer's portfolio&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A programmer who knows data structures and algorithms is able to come up with efficient and optimized solutions to real-world problems.&lt;/p&gt;

&lt;p&gt;Data structures and algorithms are the building blocks of large software systems.&lt;/p&gt;

&lt;p&gt;Therefore, understanding how to use this knowledge to build efficient software is critical. You should still learn it as it makes you smarter as a programmer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reason #2:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5mkQy63_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fwcpteejgl01sbnshtd3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5mkQy63_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fwcpteejgl01sbnshtd3.png" alt="data structure and algorithm professionals"&gt;&lt;/a&gt;&lt;br&gt;
By the time you learn how to use these techniques, you will have a &lt;strong&gt;great chance of getting a job&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The demand for data structure and algorithm professionals is high.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reason #3:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IqzPTLsv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i4y32hw7f6bq9wt6hz90.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IqzPTLsv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i4y32hw7f6bq9wt6hz90.png" alt="data structures and algorithms crash course"&gt;&lt;/a&gt;&lt;br&gt;
If you learn how to use data structures and algorithms, &lt;strong&gt;it will make your life easier&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You will be able to solve many problems using this knowledge.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reason #4:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4tebLjIx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6o1rytr01ek519ts9m0l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4tebLjIx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6o1rytr01ek519ts9m0l.png" alt="data structures and algorithms cheat sheet pdf"&gt;&lt;/a&gt;&lt;br&gt;
Programming with &lt;strong&gt;data structures and algorithms is fun&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Data structures and algorithms make programming interesting. It keeps you engaged throughout the day.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reason #5:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7WqE7ARK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ou2yq3lssepnd613z5m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7WqE7ARK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ou2yq3lssepnd613z5m.png" alt="data structures and algorithms w3schools"&gt;&lt;/a&gt;&lt;br&gt;
Data structures and algorithms are often &lt;strong&gt;used in research&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Understanding data structures and algorithms is important in research. Moreover, it is an integral part of the field of computer science.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reason #6:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3DEHEvxm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jw8ypptikfwc3ga9d717.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3DEHEvxm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jw8ypptikfwc3ga9d717.png" alt="data structures and algorithms tutorial in java"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is an important skill for the &lt;strong&gt;present and future&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The IT industry has seen tremendous growth in recent years. This means that there will be a lot of demand for programmers who are proficient with data structures and algorithms.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reason #7:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ki3mwj1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wshxfvsfiyun0ntcj1ao.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ki3mwj1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wshxfvsfiyun0ntcj1ao.png" alt="data structures and algorithms course reddit"&gt;&lt;/a&gt;&lt;br&gt;
Many companies are interested in hiring &lt;strong&gt;data structure and algorithm experts&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Companies hire data structure and algorithm experts to help them design efficient software systems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reason #8:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yxEQQ2nW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo8oqh1qo9vveq7feycm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yxEQQ2nW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo8oqh1qo9vveq7feycm.png" alt="data structures and algorithms website"&gt;&lt;/a&gt;&lt;br&gt;
Data structures and algorithms are used in many &lt;strong&gt;different fields&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Therefore, you will need to know them if you want to succeed in your career.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reason #9:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uNCKWJqR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i40wdqgxqu9ced82i014.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uNCKWJqR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i40wdqgxqu9ced82i014.png" alt="data structures and algorithms vu"&gt;&lt;/a&gt;&lt;br&gt;
Data structures and algorithms are very important in &lt;strong&gt;different areas of science&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;These are used to solve problems in physics, chemistry, biology, etc.&lt;/p&gt;

&lt;p&gt;Computer scientists use data structures and algorithms to design efficient software systems for their research projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reason #10:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dlsv7Hpk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b3nxc2n8zvpw2j4xqgyp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dlsv7Hpk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b3nxc2n8zvpw2j4xqgyp.png" alt="data structures and algorithms weiss"&gt;&lt;/a&gt;&lt;br&gt;
This is a subject that you can &lt;strong&gt;learn at your own pace&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You don't need to be a computer science expert to get good results in data structures and algorithms.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reason #11:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iVveCdZV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i32dru6zqawq9pkaokv9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iVveCdZV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i32dru6zqawq9pkaokv9.png" alt="data structures and algorithms interview questions"&gt;&lt;/a&gt;&lt;br&gt;
You can learn this &lt;strong&gt;skill for free&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;There are many online resources that provide a good introduction to data structures and algorithms. You can start with those resources and then move on to more advanced sources as you progress in your studies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reason #12:&lt;/strong&gt;  &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KWDM62we--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xkqddftdobn3pktbz10q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KWDM62we--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xkqddftdobn3pktbz10q.png" alt="data structures and algorithms with object-oriented design patterns in python"&gt;&lt;/a&gt;&lt;br&gt;
The best way to master a new language is to master its data structures and algorithms.&lt;/p&gt;

&lt;p&gt;Data structures and algorithms are the two pillars of programming.&lt;/p&gt;

&lt;p&gt;They are the primary tools of a programmer. You have to master them completely to master a new programming language.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reason #13:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QTam8ZKc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/csclmp5ueutrvsax26do.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QTam8ZKc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/csclmp5ueutrvsax26do.png" alt="data structures and algorithms mit"&gt;&lt;/a&gt;&lt;br&gt;
Data structures and algorithms are &lt;strong&gt;not limited&lt;/strong&gt; to a single programming language.&lt;/p&gt;

&lt;p&gt;You can use them in any programming language.&lt;/p&gt;

&lt;p&gt;They have a universal appeal because they work in all languages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Zplzgvo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/itb7i14xpjg14ly8aegl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Zplzgvo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/itb7i14xpjg14ly8aegl.png" alt="Data structures and algorithm conclusion"&gt;&lt;/a&gt;&lt;br&gt;
One of the things that I think is really cool about programming is that you can use it to solve pretty much any problem.&lt;/p&gt;

&lt;p&gt;I'm not just talking about &lt;a href="https://www.coderchamp.com"&gt;web development&lt;/a&gt;, but literally any problem.&lt;/p&gt;

&lt;p&gt;Do you want to write a program that will help you be more productive? There's a data structure and algorithm for that.&lt;/p&gt;

&lt;p&gt;Want to create a program that will help you find love?&lt;/p&gt;

&lt;p&gt;There's a data structure and algorithm for that as well. 😀&lt;/p&gt;

&lt;p&gt;Good programmers have the ability to solve problems.&lt;/p&gt;

&lt;p&gt;Knowing how to solve problems is a skill that can't be taught.&lt;/p&gt;

&lt;p&gt;The only way to learn to solve problems is to practice solving problems.&lt;/p&gt;

&lt;p&gt;The best way to practice solving problems is to learn a data structure and an algorithm.&lt;/p&gt;

&lt;p&gt;If you are interested in learning Data Structure and Algorithms with the examples in JavaScript.&lt;/p&gt;

&lt;p&gt;You can always subscribe to our &lt;a href="https://www.coderchamp.com/newsletter/"&gt;newsletter&lt;/a&gt; &amp;amp; follow here.&lt;/p&gt;

&lt;p&gt;Good Luck&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>HACKTOBERFEST 2021</title>
      <author>Lara Díaz</author>
      <pubDate>Tue, 05 Oct 2021 14:23:41 +0000</pubDate>
      <link>https://dev.to/selene_l21/hacktoberfest-2021-3blj</link>
      <guid>https://dev.to/selene_l21/hacktoberfest-2021-3blj</guid>
      <description>&lt;p&gt;Comienza octubre y lo único que vas a escuchar es “Hacktoberfest”,pero...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;¿Qué es Hacktoberfest?
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Es un evento anual de un mes durante octubre organizado por Digital Ocean por octavo año consecutivo, que anima a los desarrolladores de cualquier seniority a participar en proyectos de código abierto (Open Source).&lt;/p&gt;

&lt;p&gt;Digital Ocean fomenta la participación de la comunidad, para que la misma contribuya mediante Pull Requests, participando en eventos y donando a proyectos Open Source.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;¿Qué es Open Source?
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Es todo código fuente que se pone a disposición del público para su posible modificación y redistribución.&lt;br&gt;
Los proyectos Open Source que se alojan en repositorios públicos, se benefician de las contribuciones realizadas por la comunidad de desarrolladores en general y suelen gestionarse a través de Github.&lt;/p&gt;

&lt;p&gt;Si queres conocerlo en detalle, podes ver este vídeo del evento que hicimos con &lt;a href="https://twitter.com/somoscodear?lang=es"&gt;CoDeAr&lt;/a&gt;, en el que charlamos del Hacktoberfest 2020 y algunos proyectos Open Source. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/lsgIXVhnLuQ"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;¿Cómo participar? 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;🔹 Inscribite en &lt;a href="https://hacktoberfest.digitalocean.com/register"&gt;Hacktoberfest&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UpxGHhxD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k95v2ycoq26prii2y867.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UpxGHhxD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k95v2ycoq26prii2y867.png" alt="Pagina de Inscripcion"&gt;&lt;/a&gt;&lt;/p&gt;
 Podes ver tu progreso de PRs desde tu perfil 



&lt;p&gt;🔹 Haz al menos cuatro pull requests (PRs) antes del 31 de octubre en cualquier repositorio/proyecto participante alojado en GitHub. &lt;/p&gt;

&lt;p&gt;Podes ver en este post como hacer tu primer PR 😄&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/selene_l21" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yqn-Qx-F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j0paU53D--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/458719/a55921a2-1169-46c2-82be-1947af6e1d35.jpg" alt="selene_l21"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/selene_l21/introduccion-a-github-que-es-eso-se-come-1af1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Github para Open Source 
&lt;/h2&gt;
      &lt;h3&gt;Lara Díaz ・ Oct 15 '20 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;p&gt;🔹 Tus PRs contarán para tu participación en el evento si están en un repositorio con el hashtag(#) hacktoberfest y una vez que hayan sido mergeados, aprobados por un mantenedor, o etiquetados como aceptados.&lt;/p&gt;

&lt;p&gt;El objetivo es contribuir de manera responsable y que se eviten &lt;br&gt;
&lt;a href="https://twitter.com/shitoberfest"&gt;shit pull-requests&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Una vez aprobados todos los PRs tenes la posibilidad de elegir entre dos premios: Una remera de edición limitada o que se plante un árbol en tu nombre.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sTINCqye--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9zlng4c53909jd978umu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sTINCqye--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9zlng4c53909jd978umu.png" alt="Remera del 2020"&gt;&lt;/a&gt;&lt;/p&gt;
 La remera del año pasado 



&lt;p&gt;&lt;strong&gt;¡¡Feliz contribución!! 👩‍💻👩‍💻&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>hacktoberfest</category>
      <category>github</category>
      <category>community</category>
    </item>
    <item>
      <title>Messaging Web App UI Kit</title>
      <author>Mahfuzul Islam Nabil</author>
      <pubDate>Tue, 05 Oct 2021 14:12:53 +0000</pubDate>
      <link>https://dev.to/mahfuzulnabil/messaging-web-app-ui-kit-3728</link>
      <guid>https://dev.to/mahfuzulnabil/messaging-web-app-ui-kit-3728</guid>
      <description>&lt;p&gt;Hello, Design Lovers. Hope you are Well!&lt;br&gt;
This is a Social Media Messaging Web App UI Kit.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v_17nBCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rb3gsgo4xlx1sirbub6w.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v_17nBCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rb3gsgo4xlx1sirbub6w.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Best UI Kit for Messaging Web App. This UI Kit is designed for an integrated messaging platform. If you are building a messaging platform, it will be very useful for you. This UI Kit is designed for web, web app, mobile app.&lt;/p&gt;

&lt;p&gt;We think this might be the best UI Kit for messaging we have ever seen. It is simple, creative, and unique. The design is well thought out and put together. It’s creative and usable. The designers seemed to have really thought about what a messaging app should look like and how it should function. They used a lot of creative interactive components in their interactive mockups that show off the flow and ease of interaction with those elements. This is an impressive UI Kit that we would highly recommend you try out. UIHUT  &lt;/p&gt;

&lt;p&gt;Fully customizable design file. This Screens &amp;amp; components are designed in high-quality details in Figma, XD, Sketch.&lt;/p&gt;

&lt;p&gt;UIHUT is a design resources platform for UX/UI designers, developers, and founders. Our high-quality design resources will help you to speed up the design process. Resources:&lt;/p&gt;

&lt;p&gt;Have 14,000+ Best UI Design (Free/Premium)&lt;br&gt;
(web templates, web app, mobile app, illustrations, icons)&lt;br&gt;
( Codes Also Available)&lt;br&gt;
From 👉 &lt;a href="http://www.uihut.com"&gt;www.uihut.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[📢 Lifetime PLAN: $99]&lt;br&gt;
📌Offer,&lt;br&gt;
CODE: nab10&lt;br&gt;
(10% DISCOUNT OFF)&lt;/p&gt;

</description>
      <category>messagingwebapp</category>
      <category>webapp</category>
      <category>messageui</category>
      <category>messsengeruikit</category>
    </item>
    <item>
      <title>[Part 1] A proactive approach to handling application errors</title>
      <author>Mohammed Ali Chherawalla (MAC)</author>
      <pubDate>Tue, 05 Oct 2021 14:12:01 +0000</pubDate>
      <link>https://dev.to/alichherawalla/part-1-a-proactive-approach-to-handling-application-errors-5h3m</link>
      <guid>https://dev.to/alichherawalla/part-1-a-proactive-approach-to-handling-application-errors-5h3m</guid>
      <description>&lt;p&gt;&lt;b&gt;NOTE: You will need slack access for this tutorial.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;This is Part-1 of a 3 part series on how to proactively handle errors in your application across the stack.&lt;/p&gt;

&lt;p&gt;As engineers, we toil all day, write tests, test our APIs manually, work through various scenarios and user flows before we raise a PR to get our code merged in. Peer Pull Request reviews - one of the best forms of collaboration, act as an extra set of eyes that help identify missing conventions and use cases. This helps build a more stable product. All these things are done to reduce the risk of failure. However, as all of you know, and have very well experienced, there will be unanticipated issues in production. Could be related to a third-party service malfunctioning,  or a system failure. Yes,  AWS goes down too!&lt;/p&gt;

&lt;p&gt;One out of two things can happen in this case.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A disgruntled customer can inform you about inconsistencies or failures in your system.&lt;/li&gt;
&lt;li&gt;Or, we could put processes in place that proactively alert us if there are issues and we can tackle them head-on.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's say that you do get informed proactively. You need to now search through hundreds of GBs of data in the application logs to be able to root cause and fix the issues.&lt;/p&gt;

&lt;p&gt;In this tutorial, I will take you through how to integrate slack alerts for failures in your application. We will also go over how to associate an ID for each incoming request to the server. We will use the requestID in the slack alerts for easy debugging.&lt;/p&gt;

&lt;p&gt;This tutorial assumes that you have a good understanding of&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/en/docs/"&gt;NodeJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://expressjs.com/"&gt;Express&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://graphql.org/learn/"&gt;GraphQL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In case you are not familiar with the above please take some time to go through the documentation&lt;/p&gt;

&lt;p&gt;In this tutorial, you will&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a logger middleware that associates a request ID with each incoming request&lt;/li&gt;
&lt;li&gt;Create a slack webhook&lt;/li&gt;
&lt;li&gt;Create a slack service that will send messages to different channels for dev and production.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#starter-project"&gt;
  &lt;/a&gt;
  Starter Project
&lt;/h2&gt;

&lt;p&gt;Please clone the following repository: &lt;a href="https://github.com/wednesday-solutions/node-express-slack-alert"&gt;https://github.com/wednesday-solutions/node-express-slack-alert&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-logger-middleware"&gt;
  &lt;/a&gt;
  Create a logger middleware
&lt;/h2&gt;

&lt;p&gt;We will now add a middleware that will be run for each incoming request. This middleware will generate a UUID and associate it with all logs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h3&gt;

&lt;p&gt;Add the following dependencies&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;winston&lt;/li&gt;
&lt;li&gt;cls-rtracer
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add cls-rtracer winston
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h3&gt;

&lt;p&gt;Register the middleware in the &lt;code&gt;server/index.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
import rTracer from 'cls-rtracer';
...
export const init = () =&amp;gt; {
...
  app.use(rTracer.expressMiddleware());
...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This ensures that for ever request we are getting a new &lt;code&gt;request-id&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h3&gt;

&lt;p&gt;Log the request-id in the health-check API&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; export const init = () =&amp;gt; {
  ...
  app.use('/', (req, res) =&amp;gt; {
    const message = 'Service up and running!';
    console.log(rTracer.id(), message);
    res.json(message);
  });
  ...

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the application using the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn start:local
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The application starts running on port 9000. Go to &lt;a href="http://localhost:9000"&gt;http://localhost:9000&lt;/a&gt; in the browser to hit the health-check API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X_-wU4lS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4eplj1sgfz3t2l5f1a2m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X_-wU4lS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4eplj1sgfz3t2l5f1a2m.png" alt="614318280520094624ee5f02_1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Refresh the page a few times and watch the logs.&lt;/p&gt;

&lt;p&gt;For each request you have a new request-id now.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jLimY7oU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rsdkq65oacmfvu5j8xxo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jLimY7oU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rsdkq65oacmfvu5j8xxo.png" alt="6143183e09997c6a689a79e1_2 (1)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a final check lets now add multiple console logs and ensure that the request-id for a single request is constant.&lt;/p&gt;

&lt;p&gt;Add this snippet&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; export const init = () =&amp;gt; {
  ...
  app.use('/', (req, res) =&amp;gt; {
    const message = 'Service up and running!';
    console.log(rTracer.id(), message);
    console.log(rTracer.id(), Date());
    res.json(message);
  });
  ...

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will console log the request-id and the time when the log was printed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CTzzkwjx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rx30dr5fqtlhg735cn8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CTzzkwjx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rx30dr5fqtlhg735cn8.png" alt="6143187f842440aa70930a12_3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4"&gt;
  &lt;/a&gt;
  Step 4
&lt;/h3&gt;

&lt;p&gt;Create a logger function that combines winston and cls-rtacer&lt;/p&gt;

&lt;p&gt;In the &lt;code&gt;utils/index.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
import { createLogger, format, transports } from 'winston';
import rTracer from 'cls-rtracer';
....

const { combine, timestamp, printf } = format;
...

export const logger = () =&amp;gt; {
  const rTracerFormat = printf(info =&amp;gt; {
    const rid = rTracer.id();
    return rid ? `${info.timestamp} [request-id:${rid}]: ${info.message}` : `${info.timestamp}: ${info.message}`;
  });
  return createLogger({
    format: combine(timestamp(), rTracerFormat),
    transports: [new transports.Console()]
  });
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Logger will remove the need to invoke &lt;b&gt;rTracer.id&lt;/b&gt; manually. Whenever &lt;b&gt;logger.info&lt;/b&gt; is invoked the message is prefixed with the &lt;b&gt;timestamp&lt;/b&gt; and the &lt;b&gt;request-id&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Let's use logger in the health check API&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
import { isTestEnv, logger, unless } from '@utils';
...

export const init = () =&amp;gt; {
  ...
  app.use('/', (req, res) =&amp;gt; {
    const message = 'Service up and running!';
    logger().info(message);
    res.json(message);
  });
  ...

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now run the app using the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; yarn start:local
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hit the health check API and let the magic unfurl!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OirS7CAk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/igin5uv5iqrrh2cuwjj8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OirS7CAk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/igin5uv5iqrrh2cuwjj8.png" alt="6143191cfde001c2abfc4922_4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We now have a framework that allows us to attribute logs to a particular request.&lt;/p&gt;

&lt;p&gt;The slack alerts sent in case of failures will contain the request-id in question. This will help filter through the logs and only retrieve relevant information.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-slack-webhook"&gt;
  &lt;/a&gt;
  Create a slack webhook
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h3&gt;

&lt;p&gt;Install the &lt;b&gt;slack-notify&lt;/b&gt; dependency&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add slack-notify
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h3&gt;

&lt;p&gt;We will now create an incoming webhook&lt;/p&gt;

&lt;p&gt;Go to &lt;b&gt;https://&amp;lt;your-domain-name&amp;gt;.slack.com/apps/manage/custom-integrations&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;b&gt;Incoming WebHooks&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--953IEqOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9u8wys7yektwrahn67n9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--953IEqOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9u8wys7yektwrahn67n9.png" alt="614319772735d677d0cbc889_5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;b&gt;Add to Slack&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s6jsuseu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7sz4ms0gjlu6l0v3iorq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s6jsuseu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7sz4ms0gjlu6l0v3iorq.png" alt="61431af5c46a7ef8ea489663_6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Choose or create a new channel&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aFIqKgPA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rwb53j4zuiqsr4arz6cw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aFIqKgPA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rwb53j4zuiqsr4arz6cw.png" alt="61431b081eb086ba0e32f4f4_7"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I typically create 2 channels. One for non-production errors and one for production errors.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;node-express-slack-alerts-dev&lt;/li&gt;
&lt;li&gt;node-express-slack-alerts-production&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can change the name, and icon if you like.&lt;/p&gt;

&lt;p&gt;I now have 2 integrations and I will integrate them into my app. We will add them to the &lt;b&gt;.env.development&lt;/b&gt; and &lt;b&gt;.env&lt;/b&gt; files&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_WbMPGeN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3n3hnp20mkuh30jix9az.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_WbMPGeN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3n3hnp20mkuh30jix9az.png" alt="61431b2bfbdf0feee8121d72_8"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h3&gt;

&lt;p&gt;Create a slack service&lt;/p&gt;

&lt;p&gt;Create a file for the slack service using the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir server/services
vi server/services/slack.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Copy the following snippet in the slack.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import slackNotify from 'slack-notify';
import rTracer from 'cls-rtracer';

let slack;
function getSlackInstance() {
  if (!slack) {
    slack = slackNotify(process.env.SLACK_WEBHOOK_URL);
  }
  return slack;
}
export async function sendMessage(text) {
  // 1
  if (['production', 'development', 
         'qa'].includes(process.env.ENVIRONMENT_NAME)) {
    getSlackInstance().send({
      text: JSON.stringify(text),
      username: 'node-express-alerts'
    });
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Change the &lt;b&gt;if&lt;/b&gt; condition in order to test the integration locally.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; if (true || 
       ['production', 'development', 
          'qa'].includes(process.env.ENVIRONMENT_NAME)) {
   ...
   }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now import &lt;b&gt;sendMessage&lt;/b&gt; in the &lt;b&gt;server/index&lt;/b&gt; and invoke it when the health-check api is invoked as follows&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
import { sendMessage } from './services/slack';
...

export const init = () =&amp;gt; {
  ...
  app.use('/', (req, res) =&amp;gt; {
    const message = 'Service up and running!';
    logger().info(message);
    sendMessage(message);
    res.json(message);
  });
  ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hit the health check API and you should start seeing slack alerts!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dekl9hCA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mx1p6gvexd84n4s9w4ih.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dekl9hCA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mx1p6gvexd84n4s9w4ih.png" alt="614320ede1400e797e367575_9"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#send-the-requestid-as-part-of-slack-alerts"&gt;
  &lt;/a&gt;
  Send the request-id as part of slack alerts
&lt;/h2&gt;

&lt;p&gt;Copy the following snippet&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
export async function sendMessage(text) {
  if (['production', 'development', 'qa'].includes(process.env.ENVIRONMENT_NAME)) {
    getSlackInstance().send({
      text: JSON.stringify({ requestId: rTracer.id(), error: text, env: process.env.ENVIRONMENT_NAME }),
      username: 'node-express-alerts'
    });
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make the change to the if condition so that you can test out your integration locally.&lt;/p&gt;

&lt;p&gt;Hit the health-check API&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-to-go-from-here"&gt;
  &lt;/a&gt;
  Where to go from here
&lt;/h2&gt;

&lt;p&gt;You now have the ability to proactively handle errors on the backend. Use the &lt;b&gt;sendMessage&lt;/b&gt; function to capture and report errors to slack. Pull only the relevant logs using the request-id as a filter.&lt;/p&gt;

&lt;p&gt;I hope you enjoyed reading this article as much as I enjoyed writing it. If this peaked your interest stay tuned for the next article in the series where I will take you through how to proactively report frontend errors using Sentry.&lt;/p&gt;

&lt;p&gt;If you have any questions or comments, please join the forum discussion below.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>node</category>
    </item>
  </channel>
</rss>
